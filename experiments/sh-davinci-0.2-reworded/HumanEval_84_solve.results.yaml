language: sh
name: HumanEval_84_solve
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local binary=\"\
    \"\n    while [ $N -gt 0 ]; do\n        binary=\"$((N%2))$binary\"\n        N=$((N/2))\n\
    \    done\n    echo $binary\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\"\
    ) = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local binary=\"\
    \"\n    local remainder=0\n    while [ $N -gt 0 ]; do\n        remainder=$((N\
    \ % 2))\n        N=$((N / 2))\n        binary=\"$remainder$binary\"\n    done\n\
    \    echo $binary\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  local N=$1\n  local binary=\"\"\n\
    \  while [ $N -gt 0 ]; do\n    binary=\"$((N%2))$binary\"\n    N=$((N/2))\n  done\n\
    \  echo $binary\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local sum=0\n\
    \    local binary=\"\"\n    while [ $N -gt 0 ]; do\n        sum=$((N % 2))\n \
    \       N=$((N / 2))\n        binary=\"$sum$binary\"\n    done\n    echo $binary\n\
    }\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local bin=\"\"\
    \n    while [ $N -gt 0 ]; do\n        bin=\"$(($N%2))$bin\"\n        N=$(($N/2))\n\
    \    done\n    echo $bin\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\"\
    ) = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    echo \"obase=2; $1\" | bc\n}\n\
    \ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local binary=\"\
    \"\n    while [ $N -gt 0 ]; do\n        binary=\"$((N%2))$binary\"\n        N=$((N/2))\n\
    \    done\n    echo $binary\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\"\
    ) = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local binary=\"\
    \"\n    while [ $N -gt 0 ]; do\n        binary=\"$((N%2))$binary\"\n        N=$((N/2))\n\
    \    done\n    echo $binary\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\"\
    ) = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local sum=0\n\
    \    local binary=\"\"\n    while [ $N -gt 0 ]; do\n        sum=$(( $N % 2 ))\n\
    \        N=$(( $N / 2 ))\n        binary=\"$sum$binary\"\n    done\n    echo $binary\n\
    }\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  local N=$1\n  local result=''\n\
    \  while [ $N -gt 0 ]; do\n    result=\"$((N % 2))$result\"\n    N=$((N / 2))\n\
    \  done\n  echo $result\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  local N=$1\n  local binary=\"\"\n\
    \  local remainder=0\n  while [ $N -gt 0 ]; do\n    remainder=$((N % 2))\n   \
    \ N=$((N / 2))\n    binary=\"$remainder$binary\"\n  done\n  echo $binary\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local binary=\"\
    \"\n    while [ $N -gt 0 ]; do\n        binary=\"$((N%2))$binary\"\n        N=$((N/2))\n\
    \    done\n    echo $binary\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\"\
    ) = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local binary=\"\
    \"\n    local remainder=0\n    while [ $N -gt 0 ]; do\n        remainder=$((N\
    \ % 2))\n        N=$((N / 2))\n        binary=\"$remainder$binary\"\n    done\n\
    \    echo $binary\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local binary=\"\
    \"\n    while [ $N -gt 0 ]; do\n        binary=\"$(($N%2))$binary\"\n        N=$(($N/2))\n\
    \    done\n    echo $binary\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\"\
    ) = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local binary=\"\
    \"\n    while [ $N -gt 0 ]; do\n        local remainder=$((N % 2))\n        binary=\"\
    $remainder$binary\"\n        N=$((N / 2))\n    done\n    echo $binary\n}\n\ncandidate()\
    \ {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\"\
    ) = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"\
    147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local sum=0\n\
    \    local binary=\"\"\n    while [ $N -gt 0 ]; do\n        local remainder=$((N\
    \ % 2))\n        sum=$((sum + remainder))\n        binary=\"$remainder$binary\"\
    \n        N=$((N / 2))\n    done\n    echo \"$binary\"\n}\n\ncandidate() {\n \
    \   solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"\
    1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"147\")\
    \ = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  local N=$1\n  local binary=\"\"\n\
    \  local remainder=0\n  while [ $N -gt 0 ]; do\n    remainder=$((N % 2))\n   \
    \ N=$((N / 2))\n    binary=\"$remainder$binary\"\n  done\n  echo $binary\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  local N=$1\n  local BINARY_NUMBER=\"\
    \"\n  while [ $N -gt 0 ]; do\n    BINARY_NUMBER=\"$(($N % 2))$BINARY_NUMBER\"\n\
    \    N=$(($N / 2))\n  done\n  echo $BINARY_NUMBER\n}\n\ncandidate() {\n    solve\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n\
    \    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\"\
    \ ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") =\
    \ \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local sum=0\n\
    \    local binary_number=\"\"\n    while [ $N -gt 0 ]; do\n        local remainder=$((N\
    \ % 2))\n        N=$((N / 2))\n        binary_number=\"$remainder$binary_number\"\
    \n    done\n    echo $binary_number\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local result=\"\
    \"\n    while [ $N -gt 0 ]; do\n        result=\"$((N%2))$result\"\n        N=$((N/2))\n\
    \    done\n    echo $result\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\"\
    ) = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local binary=\"\
    \"\n    local remainder=0\n    while [ $N -gt 0 ]; do\n        remainder=$((N\
    \ % 2))\n        N=$((N / 2))\n        binary=\"$remainder$binary\"\n    done\n\
    \    echo $binary\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local binary=\"\
    \"\n    local remainder=0\n    while [ $N -gt 0 ]; do\n        remainder=$((N\
    \ % 2))\n        N=$((N / 2))\n        binary=\"$remainder$binary\"\n    done\n\
    \    echo $binary\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    # Write your code here\n    #\
    \ To print results to the standard output you can use echo\n    # Example: echo\
    \ \"Hello world\"\n    echo \"Hello world\"\n}\n\ncandidate() {\n    solve \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n   \
    \ [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\"\
    \ ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") =\
    \ \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local binary=\"\
    \"\n    while [ $N -gt 0 ]; do\n        local remainder=$(( N % 2 ))\n       \
    \ binary=\"$remainder$binary\"\n        N=$(( N / 2 ))\n    done\n    echo $binary\n\
    }\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local binary=\"\
    \"\n    while [ $N -gt 0 ]; do\n        local remainder=$((N % 2))\n        binary=\"\
    $remainder$binary\"\n        N=$((N / 2))\n    done\n    echo $binary\n}\n\ncandidate()\
    \ {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\"\
    ) = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"\
    147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  local N=$1\n  local sum=0\n  local\
    \ result=\"\"\n  while [ $N -gt 0 ]; do\n    sum=$((N % 2))\n    N=$((N / 2))\n\
    \    result=\"$sum$result\"\n  done\n  echo $result\n}\n\ncandidate() {\n    solve\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n\
    \    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\"\
    \ ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") =\
    \ \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  local N=$1\n  local bin=$(echo \"\
    obase=2; $N\" | bc)\n  local sum=0\n  for (( i=0; i<${#bin}; i++ )); do\n    sum=$((\
    \ sum + ${bin:$i:1} ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solve \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n   \
    \ [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\"\
    \ ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") =\
    \ \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local binary=\"\
    \"\n    while [ $N -gt 0 ]; do\n        local remainder=$((N % 2))\n        binary=\"\
    $remainder$binary\"\n        N=$((N / 2))\n    done\n    echo \"$binary\"\n}\n\
    \ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  local N=$1\n  local binary=\"\"\n\
    \  local sum=0\n  while [ $N -gt 0 ]; do\n    binary=\"$((N%2))$binary\"\n   \
    \ N=$((N/2))\n  done\n  for i in $(seq 0 $((${#binary}-1))); do\n    sum=$((sum+${binary:$i:1}))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  local N=$1\n  local binary=\"\"\n\
    \  while [ $N -gt 0 ]; do\n    local remainder=$((N % 2))\n    binary=\"$remainder$binary\"\
    \n    N=$((N / 2))\n  done\n  echo $binary\n}\n\ncandidate() {\n    solve \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  local N=$1\n  local bin\n  local\
    \ sum=0\n  local digit\n  bin=$(echo \"obase=2;$N\" | bc)\n  for (( i=0; i<${#bin};\
    \ i++ )); do\n    digit=${bin:$i:1}\n    sum=$(( sum + digit ))\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n\
    \    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\"\
    \ ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  local N=$1\n  local binary=\"\"\n\
    \  while [ $N -gt 0 ]; do\n    binary=\"$((N%2))$binary\"\n    N=$((N/2))\n  done\n\
    \  echo $binary\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  local N=$1\n  local binary=\"\"\n\
    \  while [ $N -gt 0 ]; do\n    local remainder=$((N % 2))\n    N=$((N / 2))\n\
    \    binary=\"$remainder$binary\"\n  done\n  echo $binary\n}\n\ncandidate() {\n\
    \    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"\
    1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"147\")\
    \ = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local binary=\"\
    \"\n    while [ $N -gt 0 ]; do\n        local remainder=$(( N % 2 ))\n       \
    \ binary=\"$remainder$binary\"\n        N=$(( N / 2 ))\n    done\n    echo $binary\n\
    }\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local BINARY=''\n\
    \    local REMAINDER=''\n    local QUOTIENT=''\n    while [ $N -gt 0 ]; do\n \
    \       REMAINDER=$((N % 2))\n        N=$((N / 2))\n        BINARY=$REMAINDER$BINARY\n\
    \    done\n    echo $BINARY\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\"\
    ) = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local result=\"\
    \"\n    while [ $N -gt 0 ]; do\n        result=$((N % 2))$result\n        N=$((N\
    \ / 2))\n    done\n    echo $result\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  # Write your solution here\n  echo\
    \ $1 | awk '{printf(\"%b\\n\", $1)}' | sed 's/0//g' | wc -c\n}\n\ncandidate()\
    \ {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\"\
    ) = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"\
    147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local binary=\"\
    \"\n    local remainder=0\n    while [ $N -gt 0 ]; do\n        remainder=$((N\
    \ % 2))\n        N=$((N / 2))\n        binary=\"$remainder$binary\"\n    done\n\
    \    echo $binary\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  local N=$1\n  local binary=\"\"\n\
    \  local remainder=0\n  while [ $N -gt 0 ]; do\n    remainder=$((N % 2))\n   \
    \ N=$((N / 2))\n    binary=\"$remainder$binary\"\n  done\n  echo \"$binary\"\n\
    }\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    echo \"obase=2; $1\" | bc\n}\n\
    \ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  local N=$1\n  local sum=0\n  local\
    \ binary=0\n  local remainder=0\n  local i=1\n  while [ $N -gt 0 ]\n  do\n   \
    \ remainder=$(( $N % 2 ))\n    N=$(( $N / 2 ))\n    binary=$(( $binary + $remainder\
    \ * $i ))\n    i=$(( $i * 10 ))\n  done\n  echo $binary\n}\n\ncandidate() {\n\
    \    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"\
    1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"147\")\
    \ = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local sum=0\n\
    \    local binary=\"\"\n    while [ $N -gt 0 ]; do\n        local remainder=$((N\
    \ % 2))\n        sum=$((sum + remainder))\n        binary=\"$remainder$binary\"\
    \n        N=$((N / 2))\n    done\n    echo \"$binary\"\n}\n\ncandidate() {\n \
    \   solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"\
    1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"147\")\
    \ = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  local N=$1\n  local result=\"\"\n\
    \  local remainder=0\n  local quotient=0\n  while [ $N -gt 0 ]; do\n    remainder=$((N\
    \ % 2))\n    N=$((N / 2))\n    result=\"$remainder$result\"\n  done\n  echo $result\n\
    }\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local bin=$(echo\
    \ \"obase=2; $N\" | bc)\n    local sum=0\n    for (( i=0; i<${#bin}; i++ )); do\n\
    \        sum=$((sum + ${bin:$i:1}))\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\"\
    ) = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"\
    147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  local N=$1\n  local binary=\"\"\n\
    \  while [ $N -gt 0 ]; do\n    local remainder=$((N % 2))\n    binary=\"$remainder$binary\"\
    \n    N=$((N / 2))\n  done\n  echo $binary\n}\n\ncandidate() {\n    solve \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    echo \"obase=2;ibase=10;$1\" |\
    \ bc\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n\
    \    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\"\
    \ ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local binary=\"\
    \"\n    while [ $N -gt 0 ]; do\n        local remainder=$((N % 2))\n        binary=\"\
    $remainder$binary\"\n        N=$((N / 2))\n    done\n    echo $binary\n}\n\ncandidate()\
    \ {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\"\
    ) = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"\
    147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local BINARY=\"\
    \"\n    while [ $N -gt 0 ]; do\n        BINARY=\"$(($N % 2))$BINARY\"\n      \
    \  N=$(($N / 2))\n    done\n    echo $BINARY\n}\n\ncandidate() {\n    solve \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n   \
    \ [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\"\
    \ ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") =\
    \ \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  echo \"obase=2; $1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  local N=$1\n  local binary=''\n\
    \  while [ $N -gt 0 ]; do\n    binary=\"$((N % 2))$binary\"\n    N=$((N / 2))\n\
    \  done\n  echo $binary\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local result=0\n\
    \    while [ $N -gt 0 ]; do\n        result=$((result + N % 2))\n        N=$((N\
    \ / 2))\n    done\n    echo $result\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  local N=$1\n  local binary=\"\"\n\
    \  while [ $N -gt 0 ]; do\n    binary=\"$((N%2))$binary\"\n    N=$((N/2))\n  done\n\
    \  echo $binary\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  echo \"obase=2; $1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  local N=$1\n  local BINARY=\"\"\n\
    \  local REMAINDER=0\n  local QUOTIENT=0\n  while [ $N -gt 0 ]; do\n    REMAINDER=$((N\
    \ % 2))\n    N=$((N / 2))\n    BINARY=\"$REMAINDER$BINARY\"\n  done\n  echo \"\
    $BINARY\"\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\"\
    \ ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") =\
    \ \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local sum=0\n\
    \    local binary=\"\"\n    while [ $N -gt 0 ]; do\n        local remainder=$((N\
    \ % 2))\n        N=$((N / 2))\n        binary=\"$remainder$binary\"\n    done\n\
    \    echo $binary\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  local N=$1\n  local binary=\"\"\n\
    \  local remainder=0\n  while [ $N -gt 0 ]; do\n    remainder=$((N % 2))\n   \
    \ N=$((N / 2))\n    binary=\"$remainder$binary\"\n  done\n  echo $binary\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  # Write your code here\n  # To print\
    \ results to the standard output you can use echo\n  # Example: echo \"Hello world\"\
    \n  echo \"Hello world\"\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\"\
    ) = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local sum=0\n\
    \    local binary=\"\"\n    while [ $N -gt 0 ]; do\n        sum=$(( $N % 2 ))\n\
    \        N=$(( $N / 2 ))\n        binary=\"$sum$binary\"\n    done\n    echo $binary\n\
    }\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local bin=$(echo\
    \ \"obase=2;$N\" | bc)\n    local sum=0\n    for (( i=0; i<${#bin}; i++ )); do\n\
    \        sum=$(( sum + ${bin:$i:1} ))\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\"\
    ) = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"\
    147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  echo \"obase=2;ibase=10;$1\" | bc\n\
    }\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  local N=$1\n  local binary=\"\"\n\
    \  while [ $N -gt 0 ]; do\n    binary=\"$(($N % 2))$binary\"\n    N=$(($N / 2))\n\
    \  done\n  echo $binary\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    # Write your code here\n    #\
    \ To print results to the standard output you can use echo\n    # Example: echo\
    \ \"Hello world\"\n    echo \"Hello world\"\n}\n\ncandidate() {\n    solve \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n   \
    \ [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\"\
    \ ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") =\
    \ \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local sum=0\n\
    \    local binary=\"\"\n    while [ $N -gt 0 ]; do\n        local remainder=$((N\
    \ % 2))\n        N=$((N / 2))\n        binary=\"$remainder$binary\"\n    done\n\
    \    echo $binary\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    echo \"obase=2; $1\" | bc\n}\n\
    \ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local sum=0\n\
    \    local binary=\"\"\n    local i=0\n    local remainder=0\n    while [ $N -gt\
    \ 0 ]; do\n        remainder=$(( $N % 2 ))\n        N=$(( $N / 2 ))\n        binary=\"\
    $remainder$binary\"\n    done\n    echo $binary\n}\n\ncandidate() {\n    solve\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n\
    \    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\"\
    \ ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") =\
    \ \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  local N=$1\n  local binary=\"\"\n\
    \  local remainder=0\n  while [ $N -gt 0 ]; do\n    remainder=$((N % 2))\n   \
    \ N=$((N / 2))\n    binary=\"$remainder$binary\"\n  done\n  echo $binary\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  # Write your code here\n  # To print\
    \ results to the standard output you can use echo\n  # Example: echo \"Hello world\"\
    \n  echo \"Hello world\"\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\"\
    ) = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local binary=\"\
    \"\n    while [ $N -gt 0 ]; do\n        local remainder=$(( N % 2 ))\n       \
    \ binary=\"$remainder$binary\"\n        N=$(( N / 2 ))\n    done\n    echo $binary\n\
    }\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  local N=$1\n  local result=\"\"\n\
    \  while [ $N -gt 0 ]; do\n    result=\"$(($N % 2))$result\"\n    N=$(($N / 2))\n\
    \  done\n  echo $result\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    echo \"obase=2;ibase=10;$1\" |\
    \ bc\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n\
    \    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\"\
    \ ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  local n=$1\n  local result=\"\"\n\
    \  while [ $n -gt 0 ]; do\n    result=\"$((n % 2))$result\"\n    n=$((n / 2))\n\
    \  done\n  echo $result\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local -i N=$1\n    local -i i=0\n\
    \    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local\
    \ -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n\
    \    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local\
    \ -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n\
    \    local -i ab=0\n    local -i ac=0\n    local -i ad=0\n    local -i ae=0\n\
    \    local -i af=0\n    local -i ag=0\n    local -i ah=0\n    local -i ai=0\n\
    \    local -i aj=0\n    local -i ak=0\n    local -i al=0\n    local -i am=0\n\
    \    local -i an=0\n    local -i ao=0\n    local -i ap=0\n    local -i aq=0\n\
    \    local -i ar=0\n    local -i as=0\n    local -i at=0\n    local -i au=0\n\
    \    local -i av=0\n    local -i aw=0\n    local -i ax=0\n    local -i ay=0\n\
    \    local -i az=0\n    local -i ba=0\n    local -i bb=0\n    local -i bc=0\n\
    \    local -i bd=0\n    local -i be=0\n    local -i bf=0\n    local -i bg=0\n\
    \    local -i bh=0\n    local -i bi=0\n    local -i bj=0\n    local -i bk=0\n\
    \    local -i bl=0\n    local -i bm=0\n    local -i bn=0\n    local -i bo=0\n\
    \    local -i bp=0\n    local -i bq=\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    echo \"obase=2; ibase=10; $1\"\
    \ | bc\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n\
    \    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\"\
    \ ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  local N=$1\n  local binary=\"\"\n\
    \  while [ $N -gt 0 ]; do\n    local remainder=$((N % 2))\n    binary=\"$remainder$binary\"\
    \n    N=$((N / 2))\n  done\n  echo $binary\n}\n\ncandidate() {\n    solve \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local binary=\"\
    \"\n    local sum=0\n    while [ $N -gt 0 ]; do\n        binary=\"$(($N % 2))$binary\"\
    \n        N=$(($N / 2))\n    done\n    for (( i=0; i<${#binary}; i++ )); do\n\
    \        sum=$(($sum + ${binary:$i:1}))\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\"\
    ) = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"\
    147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  local N=$1\n  local binary=\"\"\n\
    \  while [[ $N -gt 0 ]]; do\n    binary=\"$((N % 2))$binary\"\n    N=$((N / 2))\n\
    \  done\n  echo $binary\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  local N=$1\n  local binary=\"\"\n\
    \  local sum=0\n  while [ $N -gt 0 ]; do\n    binary=\"$(($N % 2))$binary\"\n\
    \    N=$(($N / 2))\n  done\n  for (( i=0; i<${#binary}; i++ )); do\n    sum=$(($sum\
    \ + ${binary:$i:1}))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solve \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  echo \"obase=2; $1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local result=\"\
    \"\n    local remainder=0\n    local quotient=0\n    while [ $N -gt 0 ]; do\n\
    \        remainder=$((N % 2))\n        N=$((N / 2))\n        result=\"$remainder$result\"\
    \n    done\n    echo $result\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\"\
    ) = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  local N=$1\n  local binary=\"\"\n\
    \  while [ $N -gt 0 ]; do\n    local remainder=$((N % 2))\n    binary=\"$remainder$binary\"\
    \n    N=$((N / 2))\n  done\n  echo $binary\n}\n\ncandidate() {\n    solve \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  local N=$1\n  local binary=\"\"\n\
    \  local sum=0\n  while [ $N -gt 0 ]; do\n    binary=\"$((N%2))$binary\"\n   \
    \ N=$((N/2))\n  done\n  for i in $(seq 0 $((${#binary}-1))); do\n    sum=$((sum+${binary:$i:1}))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  # Write your code here\n  # To print\
    \ results to the standard output you can use echo\n  # Example: echo \"Hello world\"\
    \n  echo \"Hello world\"\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\"\
    ) = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  local N=$1\n  local binary=''\n\
    \  while [ $N -gt 0 ]; do\n    local remainder=$((N % 2))\n    binary=\"$remainder$binary\"\
    \n    N=$((N / 2))\n  done\n  echo $binary\n}\n\ncandidate() {\n    solve \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    # Write your code here\n    #\
    \ To print results to the standard output you can use echo\n    # Example: echo\
    \ \"Hello world\"\n    echo \"Hello world\"\n}\n\ncandidate() {\n    solve \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n   \
    \ [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\"\
    \ ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") =\
    \ \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local sum=0\n\
    \    local i=0\n    local bin=0\n    local str=\"\"\n    while [ $N -gt 0 ]; do\n\
    \        bin=$((N % 2))\n        N=$((N / 2))\n        str=\"$str$bin\"\n    done\n\
    \    echo $str | rev\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  local N=$1\n  local sum=0\n  local\
    \ binary=\"\"\n  while [ $N -gt 0 ]; do\n    sum=$(( N % 2 ))\n    binary=\"$sum$binary\"\
    \n    N=$(( N / 2 ))\n  done\n  echo $binary\n}\n\ncandidate() {\n    solve \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n   \
    \ [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\"\
    \ ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") =\
    \ \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local sum=0\n\
    \    while [ $N -gt 0 ]; do\n        sum=$((sum + N % 2))\n        N=$((N / 2))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\"\
    ) = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  # Write your code here\n  # To print\
    \ results to the standard output you can use echo\n  # Example: echo \"Hello world\"\
    \n  echo \"Hello world\"\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\"\
    ) = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  local N=$1\n  local binary=\"\"\n\
    \  local remainder=0\n  local quotient=0\n  while [ $N -gt 0 ]; do\n    remainder=$((N\
    \ % 2))\n    N=$((N / 2))\n    binary=\"$remainder$binary\"\n  done\n  echo $binary\n\
    }\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    # Write your solution here\n \
    \   echo \"1\"\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    echo \"obase=2; $1\" | bc\n}\n\
    \ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  local N=$1\n  local binary=\"\"\n\
    \  local remainder=0\n  while [ $N -gt 0 ]; do\n    remainder=$((N % 2))\n   \
    \ N=$((N / 2))\n    binary=\"$remainder$binary\"\n  done\n  echo $binary\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  # Write your code here\n  # To print\
    \ results to the standard output you can use echo\n  # Example: echo \"Hello world\"\
    \n  echo \"Hello world\"\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\"\
    ) = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  local n=$1\n  local r=\"\"\n  while\
    \ [ $n -gt 0 ]; do\n    r=$(($n % 2))$r\n    n=$(($n / 2))\n  done\n  echo $r\n\
    }\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  local N=$1\n  local sum=0\n  local\
    \ binary=\"\"\n  while [ $N -gt 0 ]; do\n    sum=$((N % 2))\n    binary=\"$sum$binary\"\
    \n    N=$((N / 2))\n  done\n  echo $binary\n}\n\ncandidate() {\n    solve \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local -i N=$1\n    local -i i=0\n\
    \    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local\
    \ -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n\
    \    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local\
    \ -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n\
    \    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n\
    \    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n\
    \    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n\
    \    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n\
    \    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n\
    \    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n\
    \    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n\
    \    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n\
    \    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n\
    \    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=0\n\
    \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  echo \"obase=2; $1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local sum=0\n\
    \    local binary=\"\"\n    while [ $N -gt 0 ]; do\n        local remainder=$((N\
    \ % 2))\n        sum=$((sum + remainder))\n        binary=\"$remainder$binary\"\
    \n        N=$((N / 2))\n    done\n    echo \"$binary\"\n}\n\ncandidate() {\n \
    \   solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"\
    1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"147\")\
    \ = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local sum=0\n\
    \    local binary=0\n    local remainder=0\n    local i=1\n    while [ $N -gt\
    \ 0 ]\n    do\n        remainder=$(( $N % 2 ))\n        N=$(( $N / 2 ))\n    \
    \    binary=$(( $binary + $remainder * $i ))\n        i=$(( $i * 10 ))\n    done\n\
    \    echo $binary\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local sum=0\n\
    \    local i=0\n    local bin=0\n    local bin_str=\"\"\n    local bin_str_rev=\"\
    \"\n    local bin_str_rev_len=0\n    local bin_str_rev_len_mod=0\n    local bin_str_rev_len_mod_sub=0\n\
    \    local bin_str_rev_len_mod_sub_str=\"\"\n    local bin_str_rev_len_mod_sub_str_rev=\"\
    \"\n    local bin_str_rev_len_mod_sub_str_rev_len=0\n    local bin_str_rev_len_mod_sub_str_rev_len_mod=0\n\
    \    local bin_str_rev_len_mod_sub_str_rev_len_mod_sub=0\n    local bin_str_rev_len_mod_sub_str_rev_len_mod_sub_str=\"\
    \"\n    local bin_str_rev_len_mod_sub_str_rev_len_mod_sub_str_rev=\"\"\n    local\
    \ bin_str_rev_len_mod_sub_str_rev_len_mod_sub_str_rev_len=0\n    local bin_str_rev_len_mod_sub_str_rev_len_mod_sub_str_rev_len_mod=0\n\
    \    local bin_str_rev_len_mod_sub_str_rev_len_mod_sub_str_rev_len_mod_sub=0\n\
    \    local bin_str_rev_len_mod_sub_str_rev_len_mod_sub_str_rev_len_mod_sub_str=\"\
    \"\n    local bin_str_rev_len_mod_sub_str_rev_len_mod_sub_str_rev_len_mod_sub_str_rev=\"\
    \"\n    local bin_str_rev_len_mod_sub_str_rev_len_mod_sub_str_rev_len_mod_sub_str_rev_len=0\n\
    \    local bin_str_rev_len_mod_sub_str_rev_len_mod_sub_str_rev_len_mod_sub_str_rev_len_mod=0\n\
    \   \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n\
    \    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\"\
    \ ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local binary=\"\
    \"\n    while [ $N -gt 0 ]; do\n        binary=\"$((N%2))$binary\"\n        N=$((N/2))\n\
    \    done\n    echo $binary\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\"\
    ) = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  # Write your code here\n  # To print\
    \ results to the standard output you can use echo\n  # Example: echo \"Hello world\"\
    \n  echo \"1\"\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    # Write your code here\n    #\
    \ To print results to the standard output you can use echo\n    # Example: echo\
    \ \"Hello world\"\n    echo \"Hello world\"\n}\n\ncandidate() {\n    solve \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n   \
    \ [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\"\
    \ ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") =\
    \ \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  local -i N=$1\n  local -i i=0\n\
    \  local -i j=0\n  local -i sum=0\n  local -i remainder=0\n  local -i binary=0\n\
    \  local -i binary_array=()\n  local -i binary_array_length=0\n  local -i binary_array_sum=0\n\
    \  local -i binary_array_sum_length=0\n  local -i binary_array_sum_length_remainder=0\n\
    \  local -i binary_array_sum_length_remainder_array=()\n  local -i binary_array_sum_length_remainder_array_length=0\n\
    \  local -i binary_array_sum_length_remainder_array_length_sum=0\n  local -i binary_array_sum_length_remainder_array_length_sum_length=0\n\
    \  local -i binary_array_sum_length_remainder_array_length_sum_length_remainder=0\n\
    \  local -i binary_array_sum_length_remainder_array_length_sum_length_remainder_array=()\n\
    \  local -i binary_array_sum_length_remainder_array_length_sum_length_remainder_array_length=0\n\
    \  local -i binary_array_sum_length_remainder_array_length_sum_length_remainder_array_length_sum=0\n\
    \  local -i binary_array_sum_length_remainder_array_length_sum_length_remainder_array_length_sum_length=0\n\
    \  local -i binary_array_sum_length_remainder_array_length_sum_length_remainder_array_length_sum_length_remainder=0\n\
    \  local -i binary_array_sum_length_remainder_array_length_sum_length_remainder_array_length_sum_length_remainder_array=()\n\
    \  local -i binary_array_sum_length_remainder_array_length_sum_length_remainder_array_length_sum_length_remainder_array_length=0\n\
    \  local -\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\"\
    \ ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") =\
    \ \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  local N=$1\n  local binary=\"\"\n\
    \  while [ $N -gt 0 ]; do\n    binary=\"$((N%2))$binary\"\n    N=$((N/2))\n  done\n\
    \  echo $binary\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  echo \"obase=2; $1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local binary_number=\"\
    \"\n    local remainder=0\n    while [ $N -gt 0 ]; do\n        remainder=$((N\
    \ % 2))\n        N=$((N / 2))\n        binary_number=\"$remainder$binary_number\"\
    \n    done\n    echo $binary_number\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local bin=$(echo\
    \ \"obase=2; $N\" | bc)\n    local sum=0\n    for (( i=0; i<${#bin}; i++ )); do\n\
    \        sum=$(( sum + ${bin:$i:1} ))\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\"\
    ) = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"\
    147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local bin=$(echo\
    \ \"obase=2; $N\" | bc)\n    local sum=0\n    for (( i=0; i<${#bin}; i++ )); do\n\
    \        (( sum += ${bin:$i:1} ))\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"\
    1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"147\")\
    \ = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  local N=\"$1\"\n  local binary=\"\
    \"\n  local remainder=0\n  while [ \"$N\" -gt 0 ]; do\n    remainder=$(( N % 2\
    \ ))\n    N=$(( N / 2 ))\n    binary=\"$remainder$binary\"\n  done\n  echo \"\
    $binary\"\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\"\
    \ ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") =\
    \ \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local result=0\n\
    \    local i=0\n    while [ $N -gt 0 ]; do\n        result=$((result + $((N %\
    \ 2)) * $((2 ** i))))\n        N=$((N / 2))\n        i=$((i + 1))\n    done\n\
    \    echo $result\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local sum=0\n\
    \    while [ $N -gt 0 ]; do\n        local digit=$((N % 2))\n        sum=$((sum\
    \ + digit))\n        N=$((N / 2))\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"\
    1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"147\")\
    \ = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  local N=$1\n  local binary=\"\"\n\
    \  while [ $N -gt 0 ]; do\n    binary=\"$((N%2))$binary\"\n    N=$((N/2))\n  done\n\
    \  echo $binary\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  local N=$1\n  local binary=\"\"\n\
    \  local sum=0\n  while [ $N -gt 0 ]; do\n    binary=\"$(($N % 2))$binary\"\n\
    \    N=$(($N / 2))\n  done\n  for i in $(seq 0 $((${#binary} - 1))); do\n    sum=$(($sum\
    \ + ${binary:$i:1}))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solve \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  # Write your code here\n  # To print\
    \ results to the standard output you can use echo\n  # Example: echo \"Hello world\"\
    \n  echo \"Hello world\"\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\"\
    ) = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  local N=$1\n  local binary=\"\"\n\
    \  while [ $N -gt 0 ]; do\n    binary=\"$((N%2))$binary\"\n    N=$((N/2))\n  done\n\
    \  echo $binary\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  local N=$1\n  local bin=\"\"\n \
    \ local sum=0\n  while [ $N -gt 0 ]; do\n    bin=\"$((N%2))$bin\"\n    N=$((N/2))\n\
    \  done\n  for (( i=0; i<${#bin}; i++ )); do\n    sum=$((sum+${bin:$i:1}))\n \
    \ done\n  echo $sum\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local bin=''\n\
    \    while [ $N -gt 0 ]; do\n        bin=\"$((N%2))$bin\"\n        N=$((N/2))\n\
    \    done\n    echo $bin\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\"\
    ) = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local binary=\"\
    \"\n    while [ $N -gt 0 ]; do\n        binary=\"$((N%2))$binary\"\n        N=$((N/2))\n\
    \    done\n    echo $binary\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\"\
    ) = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  local N=$1\n  local sum=0\n  local\
    \ binary=0\n  local remainder=0\n  local i=1\n  while [ $N -gt 0 ]\n  do\n   \
    \ remainder=$(( $N % 2 ))\n    N=$(( $N / 2 ))\n    binary=$(( $binary + $remainder\
    \ * $i ))\n    i=$(( $i * 10 ))\n  done\n  echo $binary\n}\n\ncandidate() {\n\
    \    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"\
    1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"147\")\
    \ = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local sum=0\n\
    \    local binary=0\n    local remainder=0\n    local i=1\n    while [ $N -gt\
    \ 0 ]\n    do\n        remainder=$(( $N % 2 ))\n        N=$(( $N / 2 ))\n    \
    \    binary=$(( $binary + $remainder * $i ))\n        i=$(( $i * 10 ))\n    done\n\
    \    echo \"$binary\"\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  # Write your code here\n  # To print\
    \ results to the standard output you can use echo\n  # Example: echo \"Hello world\"\
    \n  echo \"Hello world\"\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\"\
    ) = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  local N=$1\n  local result=\"\"\n\
    \  while [ $N -gt 0 ]; do\n    result=$((N % 2))$result\n    N=$((N / 2))\n  done\n\
    \  echo $result\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local binary=\"\
    \"\n    while [ $N -gt 0 ]; do\n        binary=\"$(($N % 2))$binary\"\n      \
    \  N=$(($N / 2))\n    done\n    echo $binary\n}\n\ncandidate() {\n    solve \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n   \
    \ [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\"\
    \ ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") =\
    \ \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local binary=\"\
    \"\n    local remainder=0\n    local quotient=0\n    while [ $N -gt 0 ]; do\n\
    \        remainder=$((N % 2))\n        N=$((N / 2))\n        binary=\"$remainder$binary\"\
    \n    done\n    echo $binary\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\"\
    ) = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local binary=\"\
    \"\n    while [ $N -gt 0 ]; do\n        local remainder=$((N % 2))\n        binary=\"\
    $remainder$binary\"\n        N=$((N / 2))\n    done\n    echo \"$binary\"\n}\n\
    \ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local sum=0\n\
    \    while [ $N -gt 0 ]; do\n        local remainder=$((N % 2))\n        sum=$((sum\
    \ + remainder))\n        N=$((N / 2))\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\"\
    ) = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"\
    147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  local N=$1\n  local binary=\"\"\n\
    \  while [ $N -gt 0 ]; do\n    binary=\"$((N%2))$binary\"\n    N=$((N/2))\n  done\n\
    \  echo \"$binary\"\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n  echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    echo \"obase=2;$1\" | bc\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# >>> $(solve \"1000\")\n# \"1\"\n# >>> $(solve\
    \ \"150\")\n# \"110\"\n# >>> $(solve \"147\")\n# \"1100\"\n# Variables:\n# @N\
    \ integer\n# Constraints: 0 \u2264 N \u2264 10000.\n# Output:\n# a string of binary\
    \ number\n#\n# $1 is an integer\nsolve() {\n    local N=$1\n    local binary=\"\
    \"\n    local remainder=0\n    local quotient=0\n    local sum=0\n    while [\
    \ $N -gt 0 ]; do\n        remainder=$(( $N % 2 ))\n        N=$(( $N / 2 ))\n \
    \       binary=\"$remainder$binary\"\n    done\n    echo $binary\n}\n\ncandidate()\
    \ {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\"\
    ) = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"\
    147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012598

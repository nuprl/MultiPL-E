name: HumanEval_26_remove_duplicates
language: sh
prompt: "#!/bin/bash\n# From a list of integers, remove all elements that occur more\
  \ than once.\n# Keep order of elements left the same as in the input.\n# >>> $(remove_duplicates\
  \ \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated list\n\
  remove_duplicates() {\n"
tests: "}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test()\
  \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2\
  \ 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
completions: ["    local -a arr=()\n    local -a seen=()\n    local -a result=()\n\
    \    local elem\n    IFS=' ' read -r -a arr <<< \"$1\"\n    for elem in \"${arr[@]}\"\
    ; do\n        if [[ ! \" ${seen[*]} \" =~ \" ${elem} \" ]]; then\n           \
    \ result+=(\"$elem\")\n            seen+=(\"$elem\")\n        fi\n    done\n \
    \   echo \"${result[@]}\"", "    echo \"$1\" | awk '!x[$0]++'", "  local input=\"\
    $1\"\n  local output=\"\"\n  local seen=\"\"\n  for i in $input; do\n    if [[\
    \ ! $seen =~ (^|[[:space:]])\"$i\"($|[[:space:]]) ]]; then\n      output=\"$output\
    \ $i\"\n      seen=\"$seen $i\"\n    fi\n  done\n  echo \"$output\"", "  local\
    \ -a arr=()\n  local -a seen=()\n  for i in $1; do\n    if [[ \" ${seen[@]} \"\
    \ =~ \" ${i} \" ]]; then\n      continue\n    fi\n    arr+=(\"$i\")\n    seen+=(\"\
    $i\")\n  done\n  echo \"${arr[@]}\"", "    local -a array\n    local -a unique\n\
    \    local -a duplicates\n    local -a result\n    local i\n    local j\n    local\
    \ k\n    local n\n    local m\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    array=($1)\n    n=${#array[@]}\n    for ((i=0; i<n; i++));\
    \ do\n        for ((j=i+1; j<n; j++)); do\n            if [[ \"${array[i]}\" ==\
    \ \"${array[j]}\" ]]; then\n                duplicates[${#duplicates[@]}]=\"${array[i]}\"\
    \n                break\n            fi\n        done\n    done\n    m=${#duplicates[@]}\n\
    \    for ((i=0; i<n; i++)); do\n        for ((j=0; j<m; j++)); do\n          \
    \  if [[ \"${array[i]}\" == \"${duplicates[j]}\" ]]; then\n                break\n\
    \            fi\n        done\n        if [[ $j -eq $m ]]; then\n            unique[${#unique[@]}]=\"\
    ${array[i]}\"\n        fi\n    done\n    p=${#unique[@]}\n    for ((i=0; i<p;\
    \ i++)); do\n        for ((j=i+1; j<p; j++)); do\n            if [[ \"${unique[i]}\"\
    \ == \"${unique[j]}\" ]]; then\n                break\n            fi\n      \
    \  done\n        if [[ $j -eq $p ]]; then\n            result[${#result[@]}]=\"\
    ${unique[i]}\"\n        fi\n    done\n    q=${#result[@]}\n    for ((i=0; i<q;\
    \ i++)); do\n        for ((j=i+1; j<q; j++)); do\n            if [[ \"${result[i]}\"\
    \ == \"${result[j]}\" ]]; then\n                break\n            fi\n      \
    \  done\n        if [[ $j -eq $q ]]; then\n            echo", "  local -a array=($1)\n\
    \  local -a unique=()\n  local -a duplicates=()\n  local -a result=()\n  for i\
    \ in \"${array[@]}\"; do\n    if [[ \" ${unique[*]} \" == *\" $i \"* ]]; then\n\
    \      duplicates+=($i)\n    else\n      unique+=($i)\n    fi\n  done\n  for i\
    \ in \"${array[@]}\"; do\n    if [[ \" ${duplicates[*]} \" != *\" $i \"* ]]; then\n\
    \      result+=($i)\n    fi\n  done\n  echo \"${result[@]}\"", "  local input=$1\n\
    \  local output=\"\"\n  local seen=\"\"\n  for i in $input; do\n    if [[ ! $seen\
    \ =~ $i ]]; then\n      output=\"$output $i\"\n      seen=\"$seen $i\"\n    fi\n\
    \  done\n  echo $output", "    local -a array=($1)\n    local -a result=()\n \
    \   local -a seen=()\n    for i in \"${array[@]}\"; do\n        if ! contains\
    \ \"$i\" \"${seen[@]}\"; then\n            result+=(\"$i\")\n            seen+=(\"\
    $i\")\n        fi\n    done\n    echo \"${result[@]}\"", "    local input=$1\n\
    \    local output=\"\"\n    local seen=\"\"\n    for i in $input; do\n       \
    \ if [[ \"$seen\" == *\"$i\"* ]]; then\n            continue\n        fi\n   \
    \     seen+=\" $i\"\n        output+=\" $i\"\n    done\n    echo $output", " \
    \   local -a array\n    local -a unique\n    local -a result\n    array=($1)\n\
    \    unique=($(echo \"${array[@]}\" | tr ' ' '\\n' | sort -u | tr '\\n' ' '))\n\
    \    for i in \"${array[@]}\"; do\n        for j in \"${unique[@]}\"; do\n   \
    \         if [[ \"$i\" == \"$j\" ]]; then\n                result+=(\"$i\")\n\
    \                break\n            fi\n        done\n    done\n    echo \"${result[@]}\"",
  "    local -a arr\n    local -a dupes\n    local -a uniques\n    local -a output\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local aa\n    local ab\n    local ac\n    local ad\n    local ae\n    local\
    \ af\n    local ag\n    local ah\n    local ai\n    local aj\n    local ak\n \
    \   local al\n    local am\n    local an\n    local ao\n    local ap\n    local\
    \ aq\n    local ar\n    local as\n    local at\n    local au\n    local av\n \
    \   local aw\n    local ax\n    local ay\n    local az\n    local ba\n    local\
    \ bb\n    local bc\n    local bd\n    local be\n    local bf\n    local bg\n \
    \   local bh\n    local bi\n    local bj\n    local bk\n    local bl\n    local\
    \ bm\n    local bn\n    local bo\n    local bp\n    local bq\n    local br\n \
    \   local bs\n    local bt\n    local bu\n    local bv\n    local bw\n    local\
    \ bx\n    local by\n    local bz\n    local ca\n    local cb\n    local cc\n \
    \   local cd\n    local ce\n    local cf\n    local cg\n    local ch\n    local\
    \ ci\n    local cj\n    local ck\n    local cl\n    local cm\n    local cn\n \
    \   local co\n    local cp\n    local cq\n    local cr\n    local cs\n    local\
    \ ct\n    local cu\n    local cv\n    local cw\n    local cx\n    local cy\n \
    \   local cz\n    local da\n    local db\n    local dc\n    local dd\n    local\
    \ de\n    local df\n    local dg\n    local dh\n    local di\n    local dj\n \
    \   local dk\n    local dl\n    local dm\n    local dn\n    local do\n    local\
    \ d", "  local input=($1)\n  local output=()\n  local seen=()\n  for i in \"${input[@]}\"\
    ; do\n    if [[ ! \" ${seen[*]} \" =~ \" ${i} \" ]]; then\n      output+=(\"$i\"\
    )\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${output[@]}\"", "  local list=\"\
    $1\"\n  local seen=()\n  local out=()\n  for i in $list; do\n    if [[ ! \" ${seen[@]}\
    \ \" =~ \" ${i} \" ]]; then\n      seen+=($i)\n      out+=($i)\n    fi\n  done\n\
    \  echo \"${out[@]}\"", "  local -a array=($1)\n  local -a unique_array=()\n \
    \ local -a duplicates=()\n  local -a result=()\n  local -i i=0\n  local -i j=0\n\
    \  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n\
    \  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n\
    \  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n\
    \  local -i z=0\n  local -i aa=0\n  local -i ab=0\n  local -i ac=0\n  local -i\
    \ ad=0\n  local -i ae=0\n  local -i af=0\n  local -i ag=0\n  local -i ah=0\n \
    \ local -i ai=0\n  local -i aj=0\n  local -i ak=0\n  local -i al=0\n  local -i\
    \ am=0\n  local -i an=0\n  local -i ao=0\n  local -i ap=0\n  local -i aq=0\n \
    \ local -i ar=0\n  local -i as=0\n  local -i at=0\n  local -i au=0\n  local -i\
    \ av=0\n  local -i aw=0\n  local -i ax=0\n  local -i ay=0\n  local -i az=0\n \
    \ local -i ba=0\n  local -i bb=0\n  local -i bc=0\n  local -i bd=0\n  local -i\
    \ be=0\n  local -i bf=0\n  local -i bg=0\n  local -i bh=0\n  local -i bi=0\n \
    \ local -i bj=0\n  local -i bk=0\n  local -i bl=0\n  local -i bm=0\n  local -i",
  "    local -a arr=()\n    local -a seen=()\n    local -a result=()\n    local i\n\
    \    local item\n    arr=($1)\n    for i in \"${arr[@]}\"; do\n        if [[ \"\
    \ ${seen[*]} \" =~ \" ${i} \" ]]; then\n            continue\n        fi\n   \
    \     seen+=($i)\n        result+=($i)\n    done\n    echo \"${result[@]}\"",
  "  local input=$1\n  local output=$(echo \"$input\" | tr ' ' '\\n' | sort | uniq\
    \ -u | tr '\\n' ' ')\n  echo \"$output\"", "  local list=($1)\n  local unique=()\n\
    \  local seen=()\n  for i in \"${list[@]}\"; do\n    if [[ ! \" ${seen[*]} \"\
    \ =~ \" ${i} \" ]]; then\n      unique+=($i)\n      seen+=($i)\n    fi\n  done\n\
    \  echo \"${unique[@]}\"", "    local -a array=($1)\n    local -a unique_array=()\n\
    \    local -a duplicates=()\n    local -a non_duplicates=()\n    local -a result=()\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n  \
    \  local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n\
    \    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n\
    \    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n\
    \    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n\
    \    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n\
    \    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local\
    \ fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n\
    \    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local\
    \ ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n\
    \    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local\
    \ xxx=0\n    local yyy=0\n    local zzz=0\n   ", "    local -a array=($1)\n  \
    \  local -a seen=()\n    local -a result=()\n    for i in \"${array[@]}\"; do\n\
    \        if [[ ! \" ${seen[*]} \" =~ \" ${i} \" ]]; then\n            seen+=(\"\
    $i\")\n            result+=(\"$i\")\n        fi\n    done\n    echo \"${result[@]}\"",
  "    echo \"$1\" | awk '{for (i=1; i<=NF; i++) {if (seen[$i]++ == 0) {print $i}}}'"]
stop_tokens:
- "\n}"

name: HumanEval_101_words_string
language: sh
prompt: "#!/bin/bash\n# You will be given a string of words separated by commas or\
  \ spaces. Your task is\n# to split the string into words and return an array of\
  \ the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\")\n# ['\"\
  Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string \"One,\
  \ two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"', '\"four\"\
  ', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n"
tests: "}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n \
  \   [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[\
  \ $(candidate \"One, two, three, four, five, six\") = \"One two three four five\
  \ six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate\
  \ \"One,, two, three, four, five, six,\") = \"One two three four five six\" ]]\n\
  \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") =\
  \ \"ahmed gamal\" ]]\n}\n\nrun_test"
completions: ["    echo $1 | sed -e 's/\\s\\+/,/g' | sed -e 's/^,//' | sed -e 's/,$//'\
    \ | sed -e 's/,/, /g' | sed -e 's/\\s\\+/\", \"/g' | sed -e 's/^/\"/' | sed -e\
    \ 's/$/\"/'", "  local words=()\n  local word\n  for word in $(echo $1 | tr ','\
    \ ' '); do\n    words+=(\\\"$word\\\")\n  done\n  echo ${words[@]}", "    echo\
    \ $1 | tr -s ' ' '\\n' | tr -s ',' '\\n' | sed 's/^/\"/g' | sed 's/$/\"/g'", " \
    \ echo \"$1\" | tr ' ' '\\n' | tr ',' '\\n' | sed 's/^/\"/' | sed 's/$/\"/'",
  "  local words=()\n  local word=''\n  local char=''\n  local in_word=false\n  local\
    \ in_quote=false\n  local i=0\n  local len=${#1}\n  while [ $i -lt $len ]; do\n\
    \    char=${1:$i:1}\n    if [ \"$char\" == '\"' ]; then\n      if [ $in_quote\
    \ == true ]; then\n        in_quote=false\n      else\n        in_quote=true\n\
    \      fi\n    elif [ \"$char\" == ' ' ] || [ \"$char\" == ',' ]; then\n     \
    \ if [ $in_quote == false ]; then\n        if [ $in_word == true ]; then\n   \
    \       words+=(\"\\\"$word\\\"\")\n          word=''\n          in_word=false\n\
    \        fi\n      else\n        word+=\"$char\"\n      fi\n    else\n      word+=\"\
    $char\"\n      in_word=true\n    fi\n    i=$((i+1))\n  done\n  if [ $in_word ==\
    \ true ]; then\n    words+=(\"\\\"$word\\\"\")\n  fi\n  echo ${words[@]}", " \
    \ echo \"$1\" | tr -s ' ' '\\n' | tr -s ',' '\\n' | sed 's/^/\"/' | sed 's/$/\"\
    /'", "    echo \"$1\" | sed 's/[, ]\\+/\\n/g' | sed 's/^/\"/g' | sed 's/$/\"/g'",
  "  local string=\"$1\"\n  local words=()\n  local word=''\n  local char=''\n  local\
    \ i=0\n  local j=0\n  local len=${#string}\n  local in_word=false\n  local in_quote=false\n\
    \  local quote_char=''\n  local escaped=false\n\n  while [ $i -lt $len ]; do\n\
    \    char=\"${string:$i:1}\"\n    if [ \"$char\" == '\\\\' ]; then\n      escaped=true\n\
    \    elif [ \"$char\" == '\"' ] || [ \"$char\" == \"'\" ]; then\n      if [ \"\
    $escaped\" == true ]; then\n        word=\"$word$char\"\n        escaped=false\n\
    \      elif [ \"$in_quote\" == true ]; then\n        if [ \"$char\" == \"$quote_char\"\
    \ ]; then\n          in_quote=false\n        else\n          word=\"$word$char\"\
    \n        fi\n      else\n        in_quote=true\n        quote_char=\"$char\"\n\
    \      fi\n    elif [ \"$char\" == ' ' ] || [ \"$char\" == ',' ]; then\n     \
    \ if [ \"$in_quote\" == true ]; then\n        word=\"$word$char\"\n      elif\
    \ [ \"$in_word\" == true ]; then\n        words[$j]=\"$word\"\n        word=''\n\
    \        j=$((j + 1))\n        in_word=false\n      fi\n    else\n      in_word=true\n\
    \      word=\"$word$char\"\n    fi\n    i=$((i + 1))\n  done\n\n  if [ \"$in_word\"\
    \ == true ]; then\n    words[$j]=\"$word\"\n  fi\n\n  echo \"${words[@]}\"", " \
    \ echo $1 | tr -s '[:space:]' '\\n' | tr -d ',' | sed 's/^/\"/g' | sed 's/$/\"\
    /g'", "    echo \"$1\" | tr -d '\\n' | tr ' ' '\\n' | tr ',' '\\n' | tr -d '\"\
    ' | tr '\\n' ' ' | sed 's/^ *//g' | sed 's/ *$//g'", "  echo \"$1\" | tr -s '[:space:]'\
    \ '\\n' | tr -d ',' | sed -e 's/^/\"/' -e 's/$/\"/'", "  local string=$1\n  local\
    \ words=()\n  local word=''\n  local word_start=0\n  local word_end=0\n  local\
    \ word_length=0\n  local word_index=0\n  local char=''\n  local char_index=0\n\
    \  local char_code=0\n  local char_is_space=0\n  local char_is_comma=0\n  local\
    \ char_is_quote=0\n  local char_is_escape=0\n  local char_is_escape_quote=0\n\
    \  local char_is_escape_escape=0\n  local char_is_escape_comma=0\n  local char_is_escape_space=0\n\
    \  local char_is_escape_newline=0\n  local char_is_escape_tab=0\n  local char_is_escape_carriage_return=0\n\
    \  local char_is_escape_backspace=0\n  local char_is_escape_form_feed=0\n  local\
    \ char_is_escape_vertical_tab=0\n  local char_is_escape_octal=0\n  local char_is_escape_hex=0\n\
    \  local char_is_escape_unicode=0\n  local char_is_escape_unicode_surrogate=0\n\
    \  local char_is_escape_unicode_surrogate_pair=0\n  local char_is_escape_unicode_surrogate_pair_first=0\n\
    \  local char_is_escape_unicode_surrogate_pair_second=0\n  local char_is_escape_unicode_surrogate_pair_second_first=0\n\
    \  local char_is_escape_unicode_surrogate_pair_second_second=0\n  local char_is_escape_unicode_surrogate_pair_second_third=0\n\
    \  local char_is_escape_unicode_surrogate_pair_second_fourth=0\n  local char_is_escape_unicode_surrogate_pair_second_fifth=0\n\
    \  local char_is_escape_unicode_surrogate_pair_second_sixth=0\n  local char_is_escape_unicode_sur",
  "  echo $1 | tr -s '[:space:]' ' ' | tr ' ' '\\n' | tr ',' '\\n' | tr -d '\"' |\
    \ tr '\\n' ' ' | sed 's/^ *//g' | sed 's/ *$//g'", "  echo \"$1\" | tr -s '[:space:]'\
    \ '\\n' | tr -d ',' | sed 's/^/\"/;s/$/\"/'", "  echo \"[$(echo \"$1\" | tr ','\
    \ ' ' | tr ' ' ',')]\"", "  echo \"$1\" | tr -s ' ' '\\n' | tr -s ',' '\\n' |\
    \ sed 's/^/\"/g' | sed 's/$/\"/g'", "  echo $1 | tr ' ' '\\n' | tr ',' '\\n' |\
    \ tr -d '\"' | tr '\\n' ' ' | sed 's/ $//'", "  local words=$(echo $1 | sed 's/[,\
    \ ]\\+/ /g')\n  local words_array=()\n  for word in $words; do\n    words_array+=(\"\
    \\\"$word\\\"\")\n  done\n  echo ${words_array[@]}", "  echo \"[$(echo \"$1\"\
    \ | sed -E 's/[, ]+/\" \"] [\"/g')]\"", "    local words=()\n    local word=''\n\
    \    local in_word=false\n    local in_quote=false\n    local i=0\n    local c=''\n\
    \    local len=\"${#1}\"\n    while [ $i -lt $len ]; do\n        c=\"${1:$i:1}\"\
    \n        if [ \"$c\" == '\"' ]; then\n            if [ \"$in_quote\" == true\
    \ ]; then\n                in_quote=false\n            else\n                in_quote=true\n\
    \            fi\n        elif [ \"$c\" == ' ' ] || [ \"$c\" == ',' ]; then\n \
    \           if [ \"$in_quote\" == false ]; then\n                if [ \"$in_word\"\
    \ == true ]; then\n                    words+=(\"$word\")\n                  \
    \  word=''\n                    in_word=false\n                fi\n          \
    \  else\n                word+=\"$c\"\n            fi\n        else\n        \
    \    word+=\"$c\"\n            in_word=true\n        fi\n        i=$((i+1))\n\
    \    done\n    if [ \"$in_word\" == true ]; then\n        words+=(\"$word\")\n\
    \    fi\n    echo \"${words[@]}\"", "  echo $1 | tr -s '[:space:]' '\\n' | tr\
    \ -d ',' | awk '{print \"\\\"\"$1\"\\\"\"}' | tr '\\n' ' '", "  echo \"$1\" |\
    \ tr ' ' '\\n' | tr ',' '\\n' | tr -d '\\n' | sed 's/\\([^ ]*\\)/\"\\1\"/g'",
  "  echo \"[$(echo \"$1\" | sed 's/[, ]\\+/\", \"/g')]\"", "  echo $1 | tr -s '[:space:]'\
    \ '\\n' | tr -d ',' | tr -d '\"' | tr '\\n' ' ' | sed -e 's/^[[:space:]]*//' -e\
    \ 's/[[:space:]]*$//'", "    echo \"$1\" | tr -s '[:blank:]' ' ' | tr ' ' '\\\
    n' | sed -e 's/^/\"/' -e 's/$/\"/' | tr '\\n' ' ' | sed -e 's/ $//'", "  echo\
    \ $1 | sed -e 's/[, ]\\+/\", \"/g' | sed -e 's/^/\"/' -e 's/$/\"/'", "  echo $1\
    \ | tr -s '[:space:]' '\\n' | tr -d ',' | sed 's/^/\"/g' | sed 's/$/\"/g'", " \
    \ echo \"$1\" | tr -s '[:space:]' '\\n' | tr -d ',' | tr -d '\"' | tr '\\n' '\
    \ ' | sed 's/^ *//g' | sed 's/ *$//g'", "  echo \"$1\" | tr -s '[:space:]' '\\\
    n' | tr -d ',' | tr -d '\"' | tr '\\n' ' ' | sed 's/^ *//g' | sed 's/ *$//g'",
  "  echo \"$1\" | tr -s ' ' '\\n' | tr -s ',' '\\n' | sed 's/^/\"/' | sed 's/$/\"\
    /'", "  echo \"$1\" | tr ' ' '\\n' | tr ',' '\\n' | tr -d '\"' | awk '{print \"\
    \\\"\"$1\"\\\"\"}' | tr '\\n' ' '", "  echo $1 | tr -s '[:space:]' '\\n' | tr\
    \ -d ',' | tr -d '\"' | tr '\\n' ' ' | sed 's/^ *//g' | sed 's/ *$//g'", "  echo\
    \ $1 | tr -s ' ' '\\n' | tr -s ',' '\\n' | sed 's/^/\"/g' | sed 's/$/\"/g'", " \
    \ echo \"$1\" | tr -s '[:space:]' '\\n' | tr -d ',' | sed 's/^/\"/;s/$/\"/'",
  "  echo \"$1\" | sed 's/[ ,]/\\n/g' | sed 's/^/\"/g' | sed 's/$/\"/g'", "  echo\
    \ \"$1\" | tr ' ' '\\n' | tr ',' '\\n' | sed 's/^/\"/' | sed 's/$/\"/'", "   \
    \ echo \"[$(echo $1 | sed 's/[, ]\\+/\" \"/g')]\"", "  echo \"$1\" | sed 's/[,\
    \ ]\\+/\\n/g' | sed 's/^/\"/g' | sed 's/$/\"/g'", "  echo \"$1\" | tr -s '[:blank:]'\
    \ '\\n' | tr -d ',' | awk '{printf(\"\\\"%s\\\" \", $0)}'", "    echo $1 | tr\
    \ -s ' ' '\\n' | tr -s ',' '\\n' | sed 's/^/\"/g' | sed 's/$/\"/g'", "  echo \"\
    $1\" | sed -e 's/[, ]\\+/\\n/g' | sed -e 's/^/\"/' -e 's/$/\"/'", "  echo \"$1\"\
    \ | sed 's/[, ]\\+/\\n/g' | sed 's/^/\"/g' | sed 's/$/\"/g'", "    echo \"$1\"\
    \ | tr ' ' '\\n' | tr ',' '\\n' | tr -d '\"' | tr -d \"'\" | tr -d '[' | tr -d\
    \ ']' | tr -d '{' | tr -d '}' | tr -d '(' | tr -d ')' | tr -d ':' | tr -d ';'\
    \ | tr -d '.' | tr -d '!' | tr -d '?' | tr -d '-' | tr -d '_' | tr -d '+' | tr\
    \ -d '=' | tr -d '*' | tr -d '&' | tr -d '^' | tr -d '%' | tr -d '$' | tr -d '#'\
    \ | tr -d '@' | tr -d '~' | tr -d '`' | tr -d '<' | tr -d '>' | tr -d '|' | tr\
    \ -d '\\\\' | tr -d '/' | tr -d '\\t' | tr -d '\\n' | tr -d '\\r' | tr -d '\\\
    f' | tr -d '\\v' | tr -d '\\b' | tr -d '\\a' | tr -d '\\e' | tr -d '\\0' | tr\
    \ -d '\\x0B' | tr -d '\\x1B' | tr -d '\\x1F' | tr -d '\\x7F' | tr -d '\\xFF' |\
    \ tr -d '\\xFE' | tr -d '\\xFD' | tr -d '\\xFC' | tr -d '\\xFB' | tr -d '\\xFA'\
    \ | tr -d '\\xF9' | tr -d '\\xF8' | tr -d '\\xF7' | tr -d '\\xF6' | tr -d '\\\
    xF5' | tr -d '\\xF4' | tr -d '\\xF3' | tr -d '\\xF2' | tr -d '\\xF1' | tr -d '\\\
    xF0' | tr -d '\\xEF' | tr -d '\\xEE' | tr", "  echo \"$1\" | tr -s '[:space:]'\
    \ '\\n' | tr -d ',' | tr -d '\"' | tr '\\n' ' ' | sed 's/\\s\\+/\", \"/g' | sed\
    \ 's/^/\"/' | sed 's/$/\"/'", "  echo $1 | sed -e 's/[, ]/\\n/g' | sed -e 's/^/\"\
    /' -e 's/$/\"/' | tr '\\n' ' '", "  echo \"$1\" | tr ' ' '\\n' | tr ',' '\\n'\
    \ | sed 's/^/\"/g' | sed 's/$/\"/g'", "    echo \"$1\" | tr ',' ' ' | tr ' ' '\\\
    n' | sed 's/^/\"/g' | sed 's/$/\"/g'", "  echo $1 | tr -s ' ' '\\n' | tr -s ','\
    \ '\\n' | sed 's/^/\"/g' | sed 's/$/\"/g'", "  echo \"$1\" | tr ',' ' ' | tr -s\
    \ ' ' | sed 's/ /\", \"/g' | sed 's/^/[\"/' | sed 's/$/\"]/'", "  echo $1 | tr\
    \ -s ' ' '\\n' | tr -s ',' '\\n' | awk '{print \"\\\"\"$1\"\\\"\"}' | tr -s '\\\
    n' ' '", "  local string=\"$1\"\n  local words=()\n  local word=\"\"\n  local\
    \ i=0\n  local c=\"\"\n  local in_word=false\n  local in_quote=false\n  local\
    \ quote_char=\"\"\n  local in_escape=false\n  local escape_char=\"\"\n  local\
    \ in_comment=false\n  local comment_char=\"\"\n  local comment_end_char=\"\"\n\
    \  local in_comment_end=false\n  local comment_end_char_count=0\n  local comment_end_char_length=0\n\
    \  local comment_end_char_index=0\n  local comment_end_char_match=false\n  local\
    \ comment_end_char_match_count=0\n  local comment_end_char_match_length=0\n  local\
    \ comment_end_char_match_index=0\n  local comment_end_char_match_found=false\n\
    \  local comment_end_char_match_found_count=0\n  local comment_end_char_match_found_length=0\n\
    \  local comment_end_char_match_found_index=0\n  local comment_end_char_match_found_match=false\n\
    \  local comment_end_char_match_found_match_count=0\n  local comment_end_char_match_found_match_length=0\n\
    \  local comment_end_char_match_found_match_index=0\n  local comment_end_char_match_found_match_found=false\n\
    \  local comment_end_char_match_found_match_found_count=0\n  local comment_end_char_match_found_match_found_length=0\n\
    \  local comment_end_char_match_found_match_found_index=0\n  local comment_end_char_match_found_match_found_match=false\n\
    \  local comment_end_char_match_found_match_found_match_count=0\n  local comment_end_char_match_found_match_found_match_length=0\n\
    \  local comment_end_char_match_found_match_found_match_index=0\n  local comment_end_char_match_found_match_found_match_found=false\n\
    \ ", "  local words=()\n  local word\n  for word in $(echo \"$1\" | tr ',' ' ');\
    \ do\n    words+=(\"\\\"$word\\\"\")\n  done\n  echo \"${words[@]}\"", "    echo\
    \ \"$1\" | sed 's/\\([^, ]*\\)/\"\\1\"/g'", "  echo $1 | sed -e 's/[, ]\\+/\"\
    , \"/g' | sed -e 's/^/\"/' -e 's/$/\"/'", "  echo \"$1\" | tr -s ' ' '\\n' | tr\
    \ -s ',' '\\n' | sed 's/^/\"/g' | sed 's/$/\"/g'", "  echo \"$1\" | tr -s '[:space:]'\
    \ '\\n' | tr -d ',' | sed 's/^/\"/g' | sed 's/$/\"/g'", "  local words=()\n  local\
    \ word\n  for word in $(echo $1 | tr ',' ' '); do\n    words+=(\"\\\"$word\\\"\
    \")\n  done\n  echo ${words[@]}", "  echo $1 | tr -s '[:space:]' '\\n' | tr -d\
    \ ',' | sed 's/^/\"/g' | sed 's/$/\"/g'", "  echo \"$1\" | tr -s ' ' '\\n' | tr\
    \ -s ',' '\\n' | sed 's/^/\"/g' | sed 's/$/\"/g'", "  local words=()\n  local\
    \ word\n  for word in $(echo \"$1\" | tr ',' ' '); do\n    words+=(\"\\\"$word\\\
    \"\")\n  done\n  echo \"${words[@]}\"", "  echo $1 | tr -s '[:space:]' '\\n' |\
    \ tr -d ',' | sed 's/^/\"/;s/$/\"/'", "  echo $1 | sed 's/[, ]\\+/\" \"/g'", " \
    \   echo \"$1\" | sed -e 's/[, ]\\+/\", \"/g' | sed -e 's/^/\"/' -e 's/$/\"/'",
  "    local string=\"$1\"\n    local words=()\n    local word=\"\"\n    local i=0\n\
    \    local c=\"\"\n    local in_word=false\n    local in_quote=false\n    local\
    \ quote_char=\"\"\n    local escaped=false\n\n    while [ $i -lt ${#string} ];\
    \ do\n        c=\"${string:$i:1}\"\n        if [ \"$c\" == \"\\\\\" ]; then\n\
    \            escaped=true\n        elif [ \"$c\" == \"\\\"\" ] || [ \"$c\" ==\
    \ \"'\" ]; then\n            if [ \"$in_quote\" == false ]; then\n           \
    \     in_quote=true\n                quote_char=\"$c\"\n            elif [ \"\
    $in_quote\" == true ] && [ \"$c\" == \"$quote_char\" ]; then\n               \
    \ in_quote=false\n            fi\n        elif [ \"$c\" == \" \" ] || [ \"$c\"\
    \ == \",\" ]; then\n            if [ \"$in_quote\" == false ]; then\n        \
    \        if [ \"$in_word\" == true ]; then\n                    words+=(\"$word\"\
    )\n                    word=\"\"\n                    in_word=false\n        \
    \        fi\n            else\n                word+=\"$c\"\n            fi\n\
    \        else\n            in_word=true\n            word+=\"$c\"\n        fi\n\
    \        i=$((i+1))\n    done\n\n    if [ \"$in_word\" == true ]; then\n     \
    \   words+=(\"$word\")\n    fi\n\n    echo \"${words[@]}\"", "  echo \"$1\" |\
    \ tr ',' ' ' | tr ' ' '\\n' | sed 's/^/\"/g' | sed 's/$/\"/g'", "    echo \"$1\"\
    \ | tr ' ' '\\n' | tr ',' '\\n' | sed -e 's/^/\"/' -e 's/$/\"/'", "  echo \"$1\"\
    \ | tr -s '[:space:]' '\\n' | tr -d ',' | sed 's/^/\"/g' | sed 's/$/\"/g'", " \
    \ echo $1 | sed -e 's/[, ]/\\n/g' | sed -e 's/^/\"/' -e 's/$/\"/' | tr '\\n' '\
    \ '", "  local words=()\n  for word in $(echo $1 | tr -s ' ' ','); do\n    words+=(\"\
    \\\"$word\\\"\")\n  done\n  echo ${words[@]}", "  echo \"$1\" | tr ' ' '\\n' |\
    \ tr ',' '\\n' | sed 's/^/\"/g' | sed 's/$/\"/g'", "  echo \"$1\" | tr -s ' '\
    \ '\\n' | tr -s ',' '\\n' | sed 's/^/\"/g' | sed 's/$/\"/g'", "  echo \"$1\" |\
    \ tr -s '[:space:]' '\\n' | tr -d ',' | tr -d '\"' | tr -d \"'\" | tr -d '[' |\
    \ tr -d ']' | tr -d '{' | tr -d '}' | tr -d '(' | tr -d ')' | tr -d '<' | tr -d\
    \ '>' | tr -d ':' | tr -d ';' | tr -d '.' | tr -d '!' | tr -d '?' | tr -d '-'\
    \ | tr -d '_' | tr -d '=' | tr -d '+' | tr -d '*' | tr -d '&' | tr -d '%' | tr\
    \ -d '$' | tr -d '#' | tr -d '@' | tr -d '~' | tr -d '`' | tr -d '^' | tr -d '|'\
    \ | tr -d '\\' | tr -d '/' | tr -d '\\\\' | tr -d ' ' | tr -d '\\t' | tr -d '\\\
    n' | tr -d '\\r' | tr -d '\\v' | tr -d '\\f' | tr -d '\\b' | tr -d '\\a' | tr\
    \ -d '\\e' | tr -d '\\E' | tr -d '\\033' | tr -d '\\x1b' | tr -d '\\x1B' | tr\
    \ -d '\\c' | tr -d '\\C' | tr -d '\\x1c' | tr -d '\\x1C' | tr -d '\\x1d' | tr\
    \ -d '\\x1D' | tr -d '\\x1e' | tr -d '\\x1E' | tr -d '\\x1f' | tr -d '\\x1F' |\
    \ tr -d '\\x7f' | tr -d '\\x7F' | tr -d '\\x80' | tr -d '\\x80' | tr -d '\\x81'\
    \ | tr -d '\\x81' | tr -d '\\x82' | tr -d '\\x82' |", "  echo \"$1\" | tr -s '\
    \ ' '\\n' | tr -s ',' '\\n' | sed 's/^/\"/g' | sed 's/$/\"/g'", "  local words=()\n\
    \  local word=''\n  local in_word=false\n  local in_quote=false\n  local in_escape=false\n\
    \  local c\n  for ((i=0; i<${#1}; i++)); do\n    c=${1:$i:1}\n    if [[ $in_escape\
    \ == true ]]; then\n      word+=$c\n      in_escape=false\n    elif [[ $c == '\\\
    \\' ]]; then\n      in_escape=true\n    elif [[ $c == '\"' ]]; then\n      if\
    \ [[ $in_quote == true ]]; then\n        in_quote=false\n      else\n        in_quote=true\n\
    \      fi\n    elif [[ $c == ' ' ]] || [[ $c == ',' ]]; then\n      if [[ $in_quote\
    \ == true ]]; then\n        word+=$c\n      elif [[ $in_word == true ]]; then\n\
    \        words+=(\"\\\"$word\\\"\")\n        word=''\n        in_word=false\n\
    \      fi\n    else\n      word+=$c\n      in_word=true\n    fi\n  done\n  if\
    \ [[ $in_word == true ]]; then\n    words+=(\"\\\"$word\\\"\")\n  fi\n  echo \"\
    ${words[@]}\"", "    echo \"$1\" | tr ' ' '\\n' | tr ',' '\\n' | tr -d '\"' |\
    \ awk '{print \"\\\"\"$1\"\\\"\"}' | tr '\\n' ' '", "  echo \"$1\" | sed -e 's/[,\
    \ ]\\+/\", \"/g' | sed -e 's/^/\"/' -e 's/$/\"/'", "  local words=()\n  for word\
    \ in $(echo \"$1\" | tr ',' ' '); do\n    words+=(\"\\\"$word\\\"\")\n  done\n\
    \  echo \"${words[@]}\"", "  echo \"$1\" | sed -e 's/[, ]\\+/\", \"/g' | sed -e\
    \ 's/^/\"/' -e 's/$/\"/'", "  echo $1 | tr -s ' ' '\\n' | tr -s ',' '\\n' | tr\
    \ -d '\"' | sed 's/^/\"/g' | sed 's/$/\"/g'", "    echo $1 | sed -e 's/[, ]\\\
    +/\", \"/g'", "  local words=($(echo $1 | tr -s ' ' '\\n' | tr -s ',' '\\n'))\n\
    \  local words_string=''\n  for word in \"${words[@]}\"; do\n    words_string+=\"\
    \\\"$word\\\", \"\n  done\n  echo \"[${words_string%%, }]\"", "  echo $1 | sed\
    \ -e 's/[, ]\\+/\", \"/g'", "  local words=()\n  for word in $(echo $1 | tr ','\
    \ ' '); do\n    words+=(\"\\\"$word\\\"\")\n  done\n  echo ${words[@]}", "  echo\
    \ \"$1\" | sed -e 's/\\s\\+/,/g' -e 's/^,//' -e 's/,$//' -e 's/,/, /g' -e 's/^/\"\
    /' -e 's/$/\"/'", "    local words=()\n    local word\n    for word in $(echo\
    \ \"$1\" | tr ',' ' '); do\n        words+=(\"\\\"$word\\\"\")\n    done\n   \
    \ echo \"${words[@]}\"", "  echo $1 | sed 's/\\s\\+/,/g' | sed 's/\\s\\+/,/g'\
    \ | sed 's/,/\", \"/g' | sed 's/^/\"/' | sed 's/$/\"/'", "    echo \"$1\" | tr\
    \ ' ' '\\n' | tr ',' '\\n' | tr -d '\"' | tr -d \"'\" | tr -d '[' | tr -d ']'\
    \ | tr -d '{' | tr -d '}' | tr -d '(' | tr -d ')' | tr -d '<' | tr -d '>' | tr\
    \ -d ':' | tr -d ';' | tr -d '.' | tr -d '!' | tr -d '?' | tr -d '-' | tr -d '_'\
    \ | tr -d '=' | tr -d '+' | tr -d '*' | tr -d '&' | tr -d '^' | tr -d '%' | tr\
    \ -d '$' | tr -d '#' | tr -d '@' | tr -d '~' | tr -d '`' | tr -d '|' | tr -d '\\\
    \\' | tr -d '/' | tr -d '\\n' | tr -d '\\t' | tr -d '\\r' | tr -d '\\v' | tr -d\
    \ '\\f' | tr -d '\\b' | tr -d '\\a' | tr -d '\\e' | tr -d '\\0' | tr -d '\\x0B'\
    \ | tr -d '\\x0C' | tr -d '\\x0D' | tr -d '\\x0E' | tr -d '\\x0F' | tr -d '\\\
    x10' | tr -d '\\x11' | tr -d '\\x12' | tr -d '\\x13' | tr -d '\\x14' | tr -d '\\\
    x15' | tr -d '\\x16' | tr -d '\\x17' | tr -d '\\x18' | tr -d '\\x19' | tr -d '\\\
    x1A' | tr -d '\\x1B' | tr -d '\\x1C' | tr -d '\\x1D' | tr -d '\\x1E' | tr -d '\\\
    x1F' | tr -d '\\x20' | tr -d '", "  echo \"$1\" | tr -s ' ' '\\n' | tr -s ','\
    \ '\\n' | sed -e 's/^/\"/' -e 's/$/\"/'", "    echo \"$1\" | tr ' ' '\\n' | tr\
    \ ',' '\\n' | sed 's/^/\"/g' | sed 's/$/\"/g'", "  echo \"$1\" | tr -s '[:space:]'\
    \ '\\n' | sed 's/^/\"/g' | sed 's/$/\"/g'", "  echo \"$1\" | tr -s '[:space:]'\
    \ '\\n' | sed 's/^/\"/;s/$/\"/'", "  local string=$1\n  local -a words\n  local\
    \ word\n  while read -r word; do\n    words+=(\"\\\"$word\\\"\")\n  done <<< \"\
    $(echo \"$string\" | tr -s ' ' | tr ',' ' ')\"\n  echo \"${words[@]}\"", "  echo\
    \ \"$1\" | tr -s '[:space:]' '\\n' | tr -d ',' | tr -d '\"' | tr '\\n' ' ' | sed\
    \ 's/^ *//g' | sed 's/ *$//g'", "  echo $1 | tr -s '[:space:]' '\\n' | tr -d ','\
    \ | sed 's/^/\"/;s/$/\"/'", "  echo \"$1\" | tr -s '[:space:]' ' ' | tr ' ' '\\\
    n' | sed -e 's/^/\"/' -e 's/$/\"/' | tr '\\n' ' ' | sed 's/ $//'", "  echo $1\
    \ | sed -e 's/[, ]\\+/\", \"/g' | sed -e 's/^/\"/' -e 's/$/\"/'", "  local words=()\n\
    \  local word\n  for word in $(echo \"$1\" | tr ',' ' '); do\n    words+=(\"\\\
    \"$word\\\"\")\n  done\n  echo \"${words[@]}\"", "  echo \"$1\" | sed -e 's/\\\
    s\\+/,/g' -e 's/\\s\\+/,/g' -e 's/,/\", \"/g' -e 's/^/\"/' -e 's/$/\"/'", "  echo\
    \ \"$1\" | tr ' ' '\\n' | tr ',' '\\n' | tr -d '\"' | tr '\\n' ' ' | sed 's/ $//'",
  "    echo \"$1\" | tr -s ' ' '\\n' | tr -s ',' '\\n' | sed 's/^/\"/g' | sed 's/$/\"\
    /g'", "  local string=\"$1\"\n  local words=()\n  local word=\"\"\n  local in_word=0\n\
    \  local i=0\n  local ch=\"\"\n  local ch_code=0\n  local ch_code_prev=0\n  local\
    \ ch_code_next=0\n  local ch_code_next_next=0\n  local ch_code_next_next_next=0\n\
    \  local ch_code_next_next_next_next=0\n  local ch_code_next_next_next_next_next=0\n\
    \  local ch_code_next_next_next_next_next_next=0\n  local ch_code_next_next_next_next_next_next_next=0\n\
    \  local ch_code_next_next_next_next_next_next_next_next=0\n  local ch_code_next_next_next_next_next_next_next_next_next=0\n\
    \  local ch_code_next_next_next_next_next_next_next_next_next_next=0\n  local\
    \ ch_code_next_next_next_next_next_next_next_next_next_next_next=0\n  local ch_code_next_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \  local ch_code_next_next_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \  local ch_code_next_next_next_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \  local ch_code_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \  local ch_code_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \  local ch_code_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \  local ch_code_next_next_next_next", "    echo \"[$(echo \"$1\" | sed 's/[,\
    \ ]\\+/\"\\n\"/g' | sed 's/^/\"/g' | sed 's/$/\"/g' | tr '\\n' ',' | sed 's/,$//g')]\"",
  "  local words=()\n  for word in $(echo \"$1\" | tr -s ' ' | tr ',' ' '); do\n \
    \   words+=(\"\\\"$word\\\"\")\n  done\n  echo \"${words[@]}\"", "    echo \"\
    $1\" | sed -e 's/[, ]\\+/\", \"/g'", "  echo \"[$(echo $1 | sed 's/[, ]\\+/\"\
    , \"/g')]\"", "  echo \"$1\" | tr -s ' ' '\\n' | tr -s ',' '\\n' | sed -e 's/^/\"\
    /' -e 's/$/\"/'", "  local words=()\n  local word\n  for word in $(echo \"$1\"\
    \ | tr ',' ' '); do\n    words+=(\"\\\"$word\\\"\")\n  done\n  echo \"${words[@]}\"",
  "    echo $1 | tr ' ' '\\n' | tr ',' '\\n' | tr -d '\"' | tr '\\n' ' ' | sed 's/^\
    \ *//g' | sed 's/ *$//g'", "  echo \"$1\" | tr -s ' ' '\\n' | tr -s ',' '\\n'\
    \ | sed 's/^/\"/g' | sed 's/$/\"/g'", "    local string=\"$1\"\n    local words=()\n\
    \    local word=\"\"\n    local i=0\n    local c=\"\"\n    local in_word=0\n \
    \   local in_quote=0\n    local quote_char=\"\"\n    local quote_char_escaped=\"\
    \"\n    local escaped=0\n    local escaped_char=\"\"\n    local escaped_char_escaped=\"\
    \"\n    local escaped_char_escaped_escaped=\"\"\n    local escaped_char_escaped_escaped_escaped=\"\
    \"\n    local escaped_char_escaped_escaped_escaped_escaped=\"\"\n    local escaped_char_escaped_escaped_escaped_escaped_escaped=\"\
    \"\n    local escaped_char_escaped_escaped_escaped_escaped_escaped_escaped=\"\"\
    \n    local escaped_char_escaped_escaped_escaped_escaped_escaped_escaped_escaped=\"\
    \"\n    local escaped_char_escaped_escaped_escaped_escaped_escaped_escaped_escaped_escaped=\"\
    \"\n    local escaped_char_escaped_escaped_escaped_escaped_escaped_escaped_escaped_escaped_escaped=\"\
    \"\n    local escaped_char_escaped_escaped_escaped_escaped_escaped_escaped_escaped_escaped_escaped_escaped=\"\
    \"\n    local escaped_char_escaped_escaped_escaped_escaped_escaped_escaped_escaped_escaped_escaped_escaped_escaped=\"\
    \"\n    local escaped_char_escaped_escaped_escaped_escaped_escaped_escaped_escaped_escaped_escaped_escaped_escaped_escaped=\"\
    \"\n    local escaped_char_escaped_escaped_escaped_escaped_escaped_escaped_escaped_escaped_escaped_escaped_escaped_escaped_escaped=\"\
    \"\n    local escaped_char_escaped_escaped_escaped_escaped_escaped_escaped_escaped_escaped_escaped_escaped_escaped_escaped_escaped_escaped=\"\
    \"\n    local escaped_char_escaped_escaped_escaped_escaped_escaped_esc", "   \
    \ echo $1 | tr ' ' '\\n' | tr ',' '\\n' | sed 's/^/\"/' | sed 's/$/\"/'", "  local\
    \ words=()\n  local word\n  for word in $(echo $1 | tr ',' ' '); do\n    words+=(\"\
    \\\"$word\\\"\")\n  done\n  echo ${words[@]}", "    echo $1 | tr \" \" \"\\n\"\
    \ | tr \",\" \"\\n\" | sed 's/^/\"/g' | sed 's/$/\"/g'", "  echo \"[$(echo \"\
    $1\" | sed -e 's/\\s\\+/,/g' -e 's/,/\", \"/g' -e 's/^/\"/' -e 's/$/\"/')]\"",
  "  echo $1 | tr -s '[:space:]' ' ' | tr ' ' '\\n' | sed 's/^/\"/g' | sed 's/$/\"\
    /g' | tr '\\n' ' '", "  local words=()\n  for word in $(echo $1 | tr ',' ' ');\
    \ do\n    words+=(\"\\\"$word\\\"\")\n  done\n  echo ${words[@]}", "  local words=$(echo\
    \ $1 | tr ' ' '\\n' | tr ',' '\\n')\n  echo '['$(echo $words | sed 's/ /\", \"\
    /g')']'", "  echo $1 | tr -s ' ' '\\n' | tr -s ',' '\\n' | awk '{print \"\\\"\"\
    $1\"\\\"\"}' | tr -s '\\n' ' '", "  local string=\"$1\"\n  local words=()\n  local\
    \ word=\"\"\n  local i=0\n  local c=\"\"\n  local in_word=0\n  local len=${#string}\n\
    \  for ((i=0; i<len; i++)); do\n    c=\"${string:$i:1}\"\n    if [[ \"$c\" ==\
    \ \" \" || \"$c\" == \",\" ]]; then\n      if [[ $in_word == 1 ]]; then\n    \
    \    words+=(\"$word\")\n        word=\"\"\n        in_word=0\n      fi\n    else\n\
    \      word+=\"$c\"\n      in_word=1\n    fi\n  done\n  if [[ $in_word == 1 ]];\
    \ then\n    words+=(\"$word\")\n  fi\n  echo \"${words[@]}\"", "  echo \"$1\"\
    \ | tr -s '[:space:]' '\\n' | sed 's/^/\"/;s/$/\"/'", "  local words=()\n  for\
    \ word in $(echo $1 | tr ',' ' '); do\n    words+=($(echo $word | sed -e 's/^[[:space:]]*//'\
    \ -e 's/[[:space:]]*$//'))\n  done\n  echo ${words[@]}", "  local string=\"$1\"\
    \n  local words=()\n  local word=\"\"\n  local i=0\n  local c=\"\"\n  local in_word=false\n\
    \  local in_quote=false\n  local quote_char=\"\"\n  local escape_char=\"\"\n \
    \ local escape_next=false\n  local len=${#string}\n  while [ $i -lt $len ]; do\n\
    \    c=\"${string:$i:1}\"\n    if [ \"$c\" == \"\\\\\" ]; then\n      if [ \"\
    $escape_next\" == \"true\" ]; then\n        word=\"$word$c\"\n        escape_next=false\n\
    \      else\n        escape_next=true\n      fi\n    elif [ \"$escape_next\" ==\
    \ \"true\" ]; then\n      word=\"$word$c\"\n      escape_next=false\n    elif\
    \ [ \"$in_quote\" == \"true\" ]; then\n      if [ \"$c\" == \"$quote_char\" ];\
    \ then\n        in_quote=false\n        in_word=false\n        words+=(\"$word\"\
    )\n        word=\"\"\n      else\n        word=\"$word$c\"\n      fi\n    elif\
    \ [ \"$c\" == \"\\\"\" ] || [ \"$c\" == \"'\" ]; then\n      in_quote=true\n \
    \     quote_char=\"$c\"\n      word=\"$word$c\"\n    elif [ \"$c\" == \" \" ]\
    \ || [ \"$c\" == \",\" ]; then\n      if [ \"$in_word\" == \"true\" ]; then\n\
    \        in_word=false\n        words+=(\"$word\")\n        word=\"\"\n      fi\n\
    \    else\n      in_word=true\n      word=\"$word$c\"\n    fi\n    i=$((i+1))\n\
    \  done\n  if [ \"$in_word\" == \"true\" ]; then\n    words+=(\"$word\")\n  fi\n\
    \  echo \"${words[@]}\"", "  echo \"$1\" | tr -s ' ' '\\n' | tr -s ',' '\\n' |\
    \ sed 's/^/\"/g' | sed 's/$/\"/g'", "  echo \"$1\" | tr -s '[:space:]' '\\n' |\
    \ tr -d ',' | tr -d '\"' | tr -d \"'\" | tr '\\n' ' ' | sed 's/ $//'", "  echo\
    \ \"$1\" | tr -s '[:space:]' '\\n' | sed 's/^/\"/;s/$/\"/'", "  echo $1 | tr -s\
    \ '[:space:]' '\\n' | tr -d ',' | tr -d '\"' | tr '\\n' ' ' | sed 's/^ *//g' |\
    \ sed 's/ *$//g'", "  echo \"[$(echo \"$1\" | tr -s ' ' '\\n' | sed 's/^/\"/;s/$/\"\
    /' | tr '\\n' ',' | sed 's/,$//')]\"", "    echo $1 | tr ' ' '\\n' | tr ',' '\\\
    n' | sed 's/^/\"/' | sed 's/$/\"/'", "  local words=()\n  local word\n  for word\
    \ in $(echo $1 | tr ',' ' '); do\n    words+=(\"\\\"$word\\\"\")\n  done\n  echo\
    \ ${words[@]}", "  echo \"$1\" | tr -d ' ' | tr ',' '\\n' | sed 's/^/\"/g' | sed\
    \ 's/$/\"/g'", "  echo $1 | sed -e 's/\\s/\\n/g' | sed -e 's/,/\\n/g' | sed -e\
    \ 's/^/\"/g' | sed -e 's/$/\"/g'", "  echo \"$1\" | tr ',' ' ' | tr ' ' '\\n'\
    \ | sed 's/^/\"/' | sed 's/$/\"/'", "  echo $1 | sed -e 's/\\s\\+/,/g' -e 's/\\\
    ,/\", \"/g' -e 's/^/\"/' -e 's/$/\"/'", "  echo \"$1\" | tr -s '[:space:]' '\\\
    n' | sed 's/^/\"/;s/$/\"/'", "  local words=()\n  local word\n  for word in $(echo\
    \ $1 | tr ',' ' '); do\n    words+=(\"\\\"$word\\\"\")\n  done\n  echo ${words[@]}",
  "  echo $1 | sed -e 's/\\s\\+/,/g' | sed -e 's/\\s\\+/,/g' | sed -e 's/,/\", \"\
    /g' | sed -e 's/^/\"/' | sed -e 's/$/\"/'", "  echo \"$1\" | sed -e 's/[, ]\\\
    +/ /g' | sed -e 's/^\\(.*\\)$/\"\\1\"/g'", "  local words=()\n  local word=''\n\
    \  local in_word=false\n  local in_quote=false\n  local in_escape=false\n  local\
    \ i=0\n  local c=''\n  local len=${#1}\n  while [ $i -lt $len ]; do\n    c=${1:$i:1}\n\
    \    if [ \"$in_escape\" = true ]; then\n      word+=$c\n      in_escape=false\n\
    \    elif [ \"$c\" = '\\\\' ]; then\n      in_escape=true\n    elif [ \"$in_quote\"\
    \ = true ]; then\n      if [ \"$c\" = '\"' ]; then\n        in_quote=false\n \
    \     else\n        word+=$c\n      fi\n    elif [ \"$c\" = '\"' ]; then\n   \
    \   in_quote=true\n    elif [ \"$c\" = ' ' ] || [ \"$c\" = ',' ]; then\n     \
    \ if [ \"$in_word\" = true ]; then\n        words+=(\"$word\")\n        word=''\n\
    \        in_word=false\n      fi\n    else\n      in_word=true\n      word+=$c\n\
    \    fi\n    i=$((i+1))\n  done\n  if [ \"$in_word\" = true ]; then\n    words+=(\"\
    $word\")\n  fi\n  echo \"${words[@]}\"", "  local words\n  words=$(echo $1 | tr\
    \ -s '[:space:]' '\\n' | tr -d ',')\n  echo \"[$(echo $words | sed -e 's/ /\"\
    , \"/g')]\"", "  echo \"$1\" | tr -s ' ' '\\n' | tr -s ',' '\\n' | sed -e 's/^/\"\
    /' -e 's/$/\"/'", "  local words=()\n  local word\n  local IFS=', '\n  for word\
    \ in $1; do\n    words+=(\\\"$word\\\")\n  done\n  echo ${words[@]}", "  echo\
    \ $1 | tr ' ' '\\n' | tr ',' '\\n' | tr -d '\"' | tr '\\n' ' ' | sed 's/^ *//g'\
    \ | sed 's/ *$//g'", "    echo \"$1\" | tr -s '[:space:]' '\\n' | tr -d ',' |\
    \ tr -d '\"' | tr '\\n' ' ' | sed 's/^ *//' | sed 's/ *$//'", "    local words=()\n\
    \    local word=''\n    local in_word=0\n    local i=0\n    local c=''\n    for\
    \ ((i=0; i<${#1}; i++)); do\n        c=${1:$i:1}\n        if [[ $c == ',' || $c\
    \ == ' ' ]]; then\n            if [[ $in_word -eq 1 ]]; then\n               \
    \ words+=(\"\\\"$word\\\"\")\n                word=''\n                in_word=0\n\
    \            fi\n        else\n            word+=$c\n            in_word=1\n \
    \       fi\n    done\n    if [[ $in_word -eq 1 ]]; then\n        words+=(\"\\\"\
    $word\\\"\")\n    fi\n    echo ${words[@]}", "  echo \"$1\" | tr -s '[:space:]'\
    \ '\\n' | tr -d '\\n' | sed 's/\\([^,]*\\)/\"\\1\"/g'", "  echo \"$1\" | tr -s\
    \ '[:blank:]' '\\n' | tr -d ',' | tr -d '\"' | tr '\\n' ' '", "  echo $1 | sed\
    \ -e 's/\\s\\+/,/g' | sed -e 's/^,//' | sed -e 's/,$//' | sed -e 's/,/, /g' |\
    \ sed -e 's/\\s\\+/\", \"/g' | sed -e 's/^/\"/' | sed -e 's/$/\"/'", "  echo $(echo\
    \ $1 | tr -s ' ' '\\n' | tr -s ',' '\\n' | tr -d '\"' | sed 's/^/\"/g' | sed 's/$/\"\
    /g' | tr '\\n' ' ')", "  local words=()\n  local word=''\n  local char=''\n  local\
    \ in_word=false\n  local in_quote=false\n  local i=0\n  local len=${#1}\n  while\
    \ [ $i -lt $len ]; do\n    char=${1:$i:1}\n    if [ \"$char\" == '\"' ]; then\n\
    \      if [ $in_quote == true ]; then\n        in_quote=false\n      else\n  \
    \      in_quote=true\n      fi\n    elif [ \"$char\" == ' ' ] || [ \"$char\" ==\
    \ ',' ]; then\n      if [ $in_quote == false ]; then\n        if [ $in_word ==\
    \ true ]; then\n          words+=(\"\\\"$word\\\"\")\n          word=''\n    \
    \      in_word=false\n        fi\n      else\n        word+=\"$char\"\n      fi\n\
    \    else\n      word+=\"$char\"\n      in_word=true\n    fi\n    i=$((i+1))\n\
    \  done\n  if [ $in_word == true ]; then\n    words+=(\"\\\"$word\\\"\")\n  fi\n\
    \  echo \"${words[@]}\"", "  echo $1 | sed 's/\\s\\+/,/g' | sed 's/\\s\\+/,/g'\
    \ | sed 's/,/\", \"/g' | sed 's/^/\"/' | sed 's/$/\"/'", "  echo \"$1\" | tr ','\
    \ ' ' | tr ' ' '\\n' | sed 's/^/\"/' | sed 's/$/\"/'", "    local IFS=,\n    local\
    \ words=($1)\n    local result=()\n    for word in \"${words[@]}\"; do\n     \
    \   result+=(\"\\\"$word\\\"\")\n    done\n    echo \"${result[@]}\"", "  local\
    \ words=()\n  local word\n  for word in $(echo \"$1\" | tr ',' ' '); do\n    words+=(\"\
    \\\"$word\\\"\")\n  done\n  echo \"${words[@]}\"", "  echo \"$1\" | sed -e 's/[,\
    \ ]\\+/\", \"/g'", "    echo $1 | tr -d ' ' | tr ',' ' ' | tr '\\n' ' ' | sed\
    \ 's/\\s/\", \"/g' | sed 's/^/\"/' | sed 's/$/\"/'", "  local words=$(echo $1\
    \ | tr -s ' ' | tr -s ',' ' ')\n  echo \"[$(echo $words | sed 's/ /\", \"/g')]\"",
  "  echo \"$1\" | sed 's/[ ,]/\\n/g' | sed 's/^/\"/g' | sed 's/$/\"/g'", "  echo\
    \ \"$1\" | tr ' ' '\\n' | tr ',' '\\n' | tr -d '\"' | tr '\\n' ' ' | sed 's/^\
    \ *//g' | sed 's/ *$//g'", "  local words=()\n  local word\n  for word in $(echo\
    \ $1 | tr \",\" \" \"); do\n    words+=(\"\\\"$word\\\"\")\n  done\n  echo ${words[@]}",
  "  echo $1 | tr -s '[:space:]' '\\n' | tr -d ',' | sed 's/^/\"/g' | sed 's/$/\"\
    /g'", "    echo \"$1\" | sed -e 's/\\s\\+/,/g' -e 's/^,//' -e 's/,$//' -e 's/,/,\
    \ /g' -e 's/^/\"/' -e 's/$/\"/'", "  local words=()\n  local word\n  for word\
    \ in $(echo \"$1\" | tr ',' ' '); do\n    words+=(\"\\\"$word\\\"\")\n  done\n\
    \  echo \"${words[@]}\"", "  echo \"$1\" | tr ' ' '\\n' | tr ',' '\\n' | tr -d\
    \ '\"' | tr '\\n' ' ' | sed 's/^ *//g' | sed 's/ *$//g'", "  local result=()\n\
    \  local word\n  for word in $(echo \"$1\" | tr ',' ' '); do\n    result+=(\"\\\
    \"$word\\\"\")\n  done\n  echo \"${result[@]}\"", "  local words=()\n  local word=''\n\
    \  local in_word=false\n  local in_quote=false\n  local char=''\n  local i=0\n\
    \  local len=${#1}\n  while [ $i -lt $len ]; do\n    char=${1:$i:1}\n    if [\
    \ \"$char\" == '\"' ]; then\n      if [ $in_quote == false ]; then\n        in_quote=true\n\
    \      else\n        in_quote=false\n      fi\n    elif [ \"$char\" == ' ' ] ||\
    \ [ \"$char\" == ',' ]; then\n      if [ $in_quote == false ]; then\n        if\
    \ [ $in_word == true ]; then\n          words+=(\"\\\"$word\\\"\")\n         \
    \ word=''\n          in_word=false\n        fi\n      else\n        word+=\"$char\"\
    \n      fi\n    else\n      word+=\"$char\"\n      in_word=true\n    fi\n    i=$((i+1))\n\
    \  done\n  if [ $in_word == true ]; then\n    words+=(\"\\\"$word\\\"\")\n  fi\n\
    \  echo \"${words[@]}\"", "  echo \"$1\" | tr ' ' '\\n' | tr ',' '\\n' | tr -d\
    \ '\"' | awk '{print \"\\\"\"$1\"\\\"\"}' | tr '\\n' ' '", "  echo \"$1\" | sed\
    \ 's/[ ,]/\\n/g' | sed 's/^/\"/g' | sed 's/$/\"/g'", "  local words=()\n  local\
    \ word\n  for word in $(echo \"$1\" | tr ',' ' '); do\n    words+=(\"\\\"$word\\\
    \"\")\n  done\n  echo \"${words[@]}\"", "    echo \"$1\" | tr -s ' ' '\\n' | tr\
    \ -s ',' '\\n' | sed 's/^/\"/g' | sed 's/$/\"/g'", "  echo \"$1\" | sed -e 's/\\\
    s\\+/,/g' | sed -e 's/\\s\\+/,/g' | sed -e 's/,/\", \"/g' | sed -e 's/^/\"/' |\
    \ sed -e 's/$/\"/'", "  local string=\"$1\"\n  local words=()\n  local word=\"\
    \"\n  local in_word=0\n  local i=0\n  local c=\"\"\n  local len=${#string}\n \
    \ local quote_char=\"\"\n  local escaped=0\n\n  while [ $i -lt $len ]; do\n  \
    \  c=\"${string:$i:1}\"\n    if [ \"$c\" == \"\\\\\" ]; then\n      escaped=1\n\
    \    elif [ \"$c\" == \"\\\"\" ] || [ \"$c\" == \"'\" ]; then\n      if [ \"$quote_char\"\
    \ == \"\" ]; then\n        quote_char=\"$c\"\n      elif [ \"$quote_char\" ==\
    \ \"$c\" ]; then\n        quote_char=\"\"\n      fi\n    elif [ \"$quote_char\"\
    \ == \"\" ]; then\n      if [ \"$c\" == \",\" ] || [ \"$c\" == \" \" ]; then\n\
    \        if [ $in_word -eq 1 ]; then\n          words+=(\"$word\")\n         \
    \ word=\"\"\n          in_word=0\n        fi\n      else\n        word+=\"$c\"\
    \n        in_word=1\n      fi\n    else\n      word+=\"$c\"\n    fi\n    i=$((i+1))\n\
    \  done\n\n  if [ $in_word -eq 1 ]; then\n    words+=(\"$word\")\n  fi\n\n  echo\
    \ \"${words[@]}\"", "  echo $1 | tr -s '[:space:]' '\\n' | tr -d ',' | tr -d '\"\
    ' | tr '\\n' ' ' | sed 's/^[[:space:]]*//;s/[[:space:]]*$//'", "  echo \"$1\"\
    \ | tr ' ' '\\n' | tr ',' '\\n' | sed -e 's/^/\"/' -e 's/$/\"/'", "  echo \"$1\"\
    \ | tr -s '[:space:]' '\\n' | tr -d ',' | sed 's/^/\"/g' | sed 's/$/\"/g'", " \
    \ local words=$(echo $1 | sed 's/[, ]\\+/ /g')\n  local words_array=()\n  for\
    \ word in $words; do\n    words_array+=(\"\\\"$word\\\"\")\n  done\n  echo ${words_array[@]}",
  "  echo \"$1\" | tr ' ' '\\n' | tr ',' '\\n' | sed -e 's/^/\"/' -e 's/$/\"/'", " \
    \   local string=\"$1\"\n    local words=()\n    local word\n    for word in $(echo\
    \ \"$string\" | tr ',' ' '); do\n        words+=(\"\\\"$word\\\"\")\n    done\n\
    \    echo \"${words[@]}\"", "  echo $1 | tr -s '[:space:]' ' ' | tr -s ',' ' '\
    \ | tr ' ' '\\n' | sed 's/^/\"/g' | sed 's/$/\"/g'", "    echo \"$1\" | tr ' '\
    \ '\\n' | tr ',' '\\n' | tr -d '\"' | awk '{print \"\\\"\"$1\"\\\"\"}' | tr '\\\
    n' ' '", "  echo $1 | tr -s ' ' '\\n' | tr -s ',' '\\n' | tr -d '\"' | awk '{print\
    \ \"\\\"\"$1\"\\\"\"}' | tr -s '\\n' ' '", "  echo $1 | tr -s ' ' '\\n' | tr -s\
    \ ',' '\\n' | sed 's/^/\"/' | sed 's/$/\"/'", "  echo \"$1\" | tr -d ' ' | tr\
    \ ',' '\\n' | awk '{print \"\\\"\"$1\"\\\"\"}' | tr '\\n' ' '", "  echo \"[$(echo\
    \ \"$1\" | sed 's/[, ]\\+/\"\\n\"/g' | sed 's/^/\"/g' | sed 's/$/\"/g' | tr '\\\
    n' ',' | sed 's/,$//g')]\"", "  echo \"$1\" | tr ' ' '\\n' | tr ',' '\\n' | sed\
    \ 's/^/\"/' | sed 's/$/\"/'", "    echo $1 | tr -s ' ' '\\n' | tr -s ',' '\\n'\
    \ | sed 's/^/\"/g' | sed 's/$/\"/g'", "  echo \"$1\" | tr -s ' ' '\\n' | tr -s\
    \ ',' '\\n' | awk '{print \"\\\"\"$1\"\\\"\"}' | tr -s '\\n' ' '", "    echo \"\
    $1\" | tr -s ' ' '\\n' | tr -s ',' '\\n' | sed 's/^/\"/;s/$/\"/'", "  echo \"\
    $1\" | sed -e 's/[, ]\\+/\", \"/g' | sed -e 's/^/\"/' -e 's/$/\"/'", "  local\
    \ words=$(echo \"$1\" | tr -s '[:space:]' ' ')\n  echo \"[$(echo \"$words\" |\
    \ sed -e 's/ /\", \"/g')]\"", "    echo \"$1\" | tr ' ' '\\n' | tr ',' '\\n' |\
    \ sed 's/^/\"/g' | sed 's/$/\"/g'", "  local str=$1\n  local words=()\n  local\
    \ word=''\n  local in_word=0\n  for (( i=0; i<${#str}; i++ )); do\n    local c=${str:$i:1}\n\
    \    if [[ $c == ' ' || $c == ',' ]]; then\n      if [[ $in_word == 1 ]]; then\n\
    \        words+=(\"$word\")\n        word=''\n        in_word=0\n      fi\n  \
    \  else\n      word+=$c\n      in_word=1\n    fi\n  done\n  if [[ $in_word ==\
    \ 1 ]]; then\n    words+=(\"$word\")\n  fi\n  echo \"${words[@]}\"", "  echo \"\
    $1\" | tr -s ' ' '\\n' | tr -s ',' '\\n' | sed -e 's/^/\"/' -e 's/$/\"/'", " \
    \ echo \"$1\" | sed -e 's/[, ]\\+/\", \"/g' | sed -e 's/^/\"/' -e 's/$/\"/'",
  "  echo \"$1\" | tr -s ' ' '\\n' | tr -s ',' '\\n' | sed 's/^/\"/g' | sed 's/$/\"\
    /g'", "    echo \"$1\" | tr ' ' '\\n' | tr ',' '\\n' | sed -e 's/^/\"/' -e 's/$/\"\
    /'", "  echo \"$1\" | tr -s ' ' '\\n' | tr -s ',' '\\n' | sed 's/^/\"/' | sed\
    \ 's/$/\"/'", "  echo \"$1\" | tr -s ' ' '\\n' | tr -s ',' '\\n' | tr -d '\"'\
    \ | tr '\\n' ' ' | sed 's/ $//'", "  echo \"$1\" | tr -s ' ' '\\n' | tr -s ','\
    \ '\\n' | sed 's/^/\"/g' | sed 's/$/\"/g'", "  echo \"$1\" | tr -s ' ' '\\n' |\
    \ tr -s ',' '\\n' | tr -d '\"' | tr '\\n' ' ' | sed 's/\\s*$//'", "  local words=()\n\
    \  local word=''\n  local in_word=0\n  local in_quote=0\n  local i=0\n  local\
    \ char=''\n  local len=${#1}\n  for ((i=0; i<len; i++)); do\n    char=${1:i:1}\n\
    \    if [[ $char == '\"' ]]; then\n      if [[ $in_quote == 0 ]]; then\n     \
    \   in_quote=1\n      else\n        in_quote=0\n      fi\n    fi\n    if [[ $char\
    \ == ' ' ]] || [[ $char == ',' ]]; then\n      if [[ $in_quote == 0 ]]; then\n\
    \        if [[ $in_word == 1 ]]; then\n          words+=(\"\\\"$word\\\"\")\n\
    \          word=''\n          in_word=0\n        fi\n      else\n        word+=$char\n\
    \      fi\n    else\n      word+=$char\n      in_word=1\n    fi\n  done\n  if\
    \ [[ $in_word == 1 ]]; then\n    words+=(\"\\\"$word\\\"\")\n  fi\n  echo ${words[@]}"]
stop_tokens:
- "\n}"

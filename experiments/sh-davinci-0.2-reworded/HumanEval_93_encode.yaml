name: HumanEval_93_encode
language: sh
prompt: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
  \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the message\
  \ with the letter that appears 2 places ahead of that \n# vowel in the english alphabet.\
  \ \n# Assume only letters. \n# Examples:\n# >>> $(encode \"test\")\n# \"TGST\"\n\
  # >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\n#\n# $1 is a string\n\
  encode() {\n"
tests: "}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
  \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n  \
  \  [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
  ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\")\
  \ = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
completions: ["    # TODO: Implement this function\n    echo \"TODO\"", "    # TODO:\
    \ Implement this function\n    echo \"Not implemented\"", "    # TODO: Implement\
    \ this function\n    echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'\
    \ | tr '[:upper:]' '[:lower:]'", "    # TODO: Your code here\n    echo $1 | tr\
    \ '[:lower:]' '[:upper:]' | tr 'AEGIOU' 'CFLRVY'", "    echo \"$1\" | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]'\
    \ | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    # TODO: Your code here\n\
    \    echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEGIOU' 'CFLRVX'", "    # TODO:\
    \ write your code here\n    echo \"TODO\"", "    echo $1 | tr '[:lower:]' '[:upper:]'\
    \ | tr 'AEGIOU' 'CFLRTX' | tr '[:upper:]' '[:lower:]'", "    local result=\"\"\
    \n    local i=0\n    local char=\"\"\n    local char_ascii=\"\"\n    local char_ascii_new=\"\
    \"\n    local char_new=\"\"\n    local char_new_ascii=\"\"\n    local char_new_ascii_new=\"\
    \"\n    local char_new_new=\"\"\n    local char_new_new_ascii=\"\"\n    local\
    \ char_new_new_ascii_new=\"\"\n    local char_new_new_new=\"\"\n    local char_new_new_new_ascii=\"\
    \"\n    local char_new_new_new_ascii_new=\"\"\n    local char_new_new_new_new=\"\
    \"\n    local char_new_new_new_new_ascii=\"\"\n    local char_new_new_new_new_ascii_new=\"\
    \"\n    local char_new_new_new_new_new=\"\"\n    local char_new_new_new_new_new_ascii=\"\
    \"\n    local char_new_new_new_new_new_ascii_new=\"\"\n    local char_new_new_new_new_new_new=\"\
    \"\n    local char_new_new_new_new_new_new_ascii=\"\"\n    local char_new_new_new_new_new_new_ascii_new=\"\
    \"\n    local char_new_new_new_new_new_new_new=\"\"\n    local char_new_new_new_new_new_new_new_ascii=\"\
    \"\n    local char_new_new_new_new_new_new_new_ascii_new=\"\"\n    local char_new_new_new_new_new_new_new_new=\"\
    \"\n    local char_new_new_new_new_new_new_new_new_ascii=\"\"\n    local char_new_new_new_new_new_new_new_new_ascii_new=\"\
    \"\n    local char_new_new_new_new_new_new_new_new_new=\"\"\n    local char_new_new_new_new_new_new_new_new_new_ascii=\"\
    \"\n    local char_new_new_new", "    # TODO: implement this function\n    echo\
    \ $1 | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    echo $1 | tr '[a-z]'\
    \ '[c-za-b]' | tr '[aeiou]' '[eoiu]'", "  # TODO: Your code here\n  echo \"TODO\"",
  "    echo \"$1\" | tr 'a-zA-Z' 'c-za-bC-ZA-B' | tr 'aeiou' 'cgkos'", "    # TODO:\
    \ implement this function\n    echo \"TODO\"", "    echo \"$1\" | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo \"\
    $1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    # TODO: write this\
    \ function\n    echo \"TODO\"", "    # TODO: Implement this function\n    echo\
    \ \"TODO\"", "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'\
    \ | tr '[:upper:]' '[:lower:]'"]
stop_tokens:
- "\n}"

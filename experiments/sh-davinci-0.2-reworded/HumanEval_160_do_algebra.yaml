name: HumanEval_160_do_algebra
language: sh
prompt: "#!/bin/bash\n# Given two lists operator, and operand. The first list has\
  \ basic algebra operations, and \n# the second list is a list of integers. Use the\
  \ two given lists to build the algebric \n# expression and return the evaluation\
  \ of this expression.\n# The basic algebra operations:\n# Addition ( + ) \n# Subtraction\
  \ ( - ) \n# Multiplication ( * ) \n# Floor division ( // ) \n# Exponentiation (\
  \ ** ) \n# Example:\n# operator['+', '*', '-']\n# array = [2, 3, 4, 5]\n# result\
  \ = 2 + 3 * 4 - 5\n# => result = 9\n# Note:\n# The length of operator list is equal\
  \ to the length of operand list minus one.\n# Operand is a list of of non-negative\
  \ integers.\n# Operator list has at least one operator, and operand list has at\
  \ least two operands.\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
  \ list\ndo_algebra() {\n"
tests: "}\n\ncandidate() {\n    do_algebra \"$@\"\n}\n\nset -e\nrun_test() {\n   \
  \ [[ $(candidate \"** * +\" \"2 3 4 5\") = \"37\" ]]\n    [[ $(candidate \"+ * -\"\
  \ \"2 3 4 5\") = \"9\" ]]\n    [[ $(candidate \"// *\" \"7 3 4\") = \"8\" ]]\n}\n\
  \nrun_test"
completions: ["  local -a operator=(\"$1\")\n  local -a operand=(\"$2\")\n  local\
    \ -i result=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n\
    \  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n\
    \  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n\
    \  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n\
    \  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n\
    \  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i\
    \ kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n \
    \ local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i\
    \ tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n \
    \ local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i bb=0\n  local -i\
    \ cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n \
    \ local -i hh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local\
    \ -i lll=0\n  local -i mmm=0\n  local -", "    local -a operator=(\"$1\")\n  \
    \  local -a operand=(\"$2\")\n    local result=${operand[0]}\n    local i=0\n\
    \    while [ $i -lt ${#operator[@]} ]; do\n        case ${operator[$i]} in\n \
    \           '+') result=$((result + ${operand[$((i+1))]}));;\n            '-')\
    \ result=$((result - ${operand[$((i+1))]}));;\n            '*') result=$((result\
    \ * ${operand[$((i+1))]}));;\n            '//') result=$((result / ${operand[$((i+1))]}));;\n\
    \            '**') result=$((result ** ${operand[$((i+1))]}));;\n        esac\n\
    \        ((i++))\n    done\n    echo $result", "    local -a operator=($1)\n \
    \   local -a operand=($2)\n    local result=${operand[0]}\n    local i=0\n   \
    \ local j=1\n    while [ $i -lt ${#operator[@]} ]; do\n        case ${operator[$i]}\
    \ in\n            '+')\n                result=$((result + ${operand[$j]}))\n\
    \                ;;\n            '-')\n                result=$((result - ${operand[$j]}))\n\
    \                ;;\n            '*')\n                result=$((result * ${operand[$j]}))\n\
    \                ;;\n            '//')\n                result=$((result / ${operand[$j]}))\n\
    \                ;;\n            '**')\n                result=$((result ** ${operand[$j]}))\n\
    \                ;;\n        esac\n        i=$((i + 1))\n        j=$((j + 1))\n\
    \    done\n    echo $result", "    local operator=\"$1\"\n    local operand=\"\
    $2\"\n    local result=0\n    local i=0\n    local j=0\n    local op=()\n    local\
    \ opr=()\n    local op_len=0\n    local opr_len=0\n    local op_str=\"\"\n   \
    \ local opr_str=\"\"\n    local op_arr=()\n    local opr_arr=()\n    local op_arr_len=0\n\
    \    local opr_arr_len=0\n    local op_arr_str=\"\"\n    local opr_arr_str=\"\"\
    \n    local op_arr_str_len=0\n    local opr_arr_str_len=0\n    local op_arr_str_len_1=0\n\
    \    local opr_arr_str_len_1=0\n    local op_arr_str_len_2=0\n    local opr_arr_str_len_2=0\n\
    \    local op_arr_str_len_3=0\n    local opr_arr_str_len_3=0\n    local op_arr_str_len_4=0\n\
    \    local opr_arr_str_len_4=0\n    local op_arr_str_len_5=0\n    local opr_arr_str_len_5=0\n\
    \    local op_arr_str_len_6=0\n    local opr_arr_str_len_6=0\n    local op_arr_str_len_7=0\n\
    \    local opr_arr_str_len_7=0\n    local op_arr_str_len_8=0\n    local opr_arr_str_len_8=0\n\
    \    local op_arr_str_len_9=0\n    local opr_arr_str_len_9=0\n    local op_arr_str_len_10=0\n\
    \    local opr_arr_str_len_10=0\n    local op_arr_str_len_11=0\n    local opr_arr_str_len_11=0\n\
    \    local op_arr_str_len_12=0\n    local opr_arr_str_len_12=0\n   ", "    local\
    \ -a operator=($1)\n    local -a operand=($2)\n    local result=${operand[0]}\n\
    \    local i=0\n    while [ $i -lt ${#operator[@]} ]; do\n        case ${operator[$i]}\
    \ in\n            \"+\") result=$((result + ${operand[$((i+1))]}));;\n       \
    \     \"-\") result=$((result - ${operand[$((i+1))]}));;\n            \"*\") result=$((result\
    \ * ${operand[$((i+1))]}));;\n            \"//\") result=$((result / ${operand[$((i+1))]}));;\n\
    \            \"**\") result=$((result ** ${operand[$((i+1))]}));;\n        esac\n\
    \        i=$((i+1))\n    done\n    echo $result", "  local -a operator=(\"$1\"\
    )\n  local -a operand=(\"$2\")\n  local result=${operand[0]}\n  local i=0\n  local\
    \ op=${operator[0]}\n  local operand=${operand[1]}\n  for op in \"${operator[@]}\"\
    ; do\n    operand=${operand[$i]}\n    case $op in\n      '+')\n        result=$((result\
    \ + operand))\n        ;;\n      '-')\n        result=$((result - operand))\n\
    \        ;;\n      '*')\n        result=$((result * operand))\n        ;;\n  \
    \    '//')\n        result=$((result / operand))\n        ;;\n      '**')\n  \
    \      result=$((result ** operand))\n        ;;\n    esac\n    i=$((i + 1))\n\
    \  done\n  echo $result", "    local op=$1\n    local array=$2\n    local result=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local op_arr=()\n    local array_arr=()\n\
    \    local op_arr_len=0\n    local array_arr_len=0\n    local op_arr_len_minus_one=0\n\
    \    local op_arr_len_minus_two=0\n    local op_arr_len_minus_three=0\n    local\
    \ op_arr_len_minus_four=0\n    local op_arr_len_minus_five=0\n    local op_arr_len_minus_six=0\n\
    \    local op_arr_len_minus_seven=0\n    local op_arr_len_minus_eight=0\n    local\
    \ op_arr_len_minus_nine=0\n    local op_arr_len_minus_ten=0\n    local op_arr_len_minus_eleven=0\n\
    \    local op_arr_len_minus_twelve=0\n    local op_arr_len_minus_thirteen=0\n\
    \    local op_arr_len_minus_fourteen=0\n    local op_arr_len_minus_fifteen=0\n\
    \    local op_arr_len_minus_sixteen=0\n    local op_arr_len_minus_seventeen=0\n\
    \    local op_arr_len_minus_eighteen=0\n    local op_arr_len_minus_nineteen=0\n\
    \    local op_arr_len_minus_twenty=0\n    local op_arr_len_minus_twenty_one=0\n\
    \    local op_arr_len_minus_twenty_two=0\n    local op_arr_len_minus_twenty_three=0\n\
    \    local op_arr_len_minus_twenty_four=0\n    local op_arr_len_minus_twenty_five=0\n\
    \    local op_arr_len_minus_twenty_six=0\n    local op_arr_len_minus_twenty_seven=0\n\
    \    local op_arr_len_minus_twenty_eight=0\n    local op_arr_len_minus_twenty",
  "  local -a operator=(\"$1\")\n  local -a operand=(\"$2\")\n  local -a result\n\
    \  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n\
    \  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n\
    \  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n\
    \  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n\
    \  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n \
    \ local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i\
    \ pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n \
    \ local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i\
    \ yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n\
    \  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local\
    \ -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n\
    \  local -i mmm", "  local -a operator=($1)\n  local -a operand=($2)\n  local\
    \ -a result=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n\
    \  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n\
    \  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n\
    \  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n\
    \  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i\
    \ ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n \
    \ local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i\
    \ oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n \
    \ local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i\
    \ xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n\
    \  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local\
    \ -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n\
    \  local -i lll=0\n  local -i mmm", "  local -a operator=($1)\n  local -a operand=($2)\n\
    \  local result=${operand[0]}\n  for ((i=0; i<${#operator[@]}; i++)); do\n   \
    \ case ${operator[$i]} in\n      '+') result=$((result + ${operand[$((i+1))]}))\
    \ ;;\n      '-') result=$((result - ${operand[$((i+1))]})) ;;\n      '*') result=$((result\
    \ * ${operand[$((i+1))]})) ;;\n      '//') result=$((result / ${operand[$((i+1))]}))\
    \ ;;\n      '**') result=$((result ** ${operand[$((i+1))]})) ;;\n    esac\n  done\n\
    \  echo $result", "    local -a operator=($1)\n    local -a operand=($2)\n   \
    \ local -a result=()\n    local -i i=0\n    local -i j=0\n    local -i k=0\n \
    \   local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local\
    \ -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n\
    \    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local\
    \ -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i\
    \ cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i\
    \ gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i\
    \ kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i\
    \ oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i\
    \ ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i\
    \ ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i\
    \ aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local\
    \ -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local\
    \ -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local\
    \ -i mmm", "    local -a operator=(\"$1\")\n    local -a operand=(\"$2\")\n  \
    \  local result=${operand[0]}\n    local i=0\n    local j=1\n    local op\n  \
    \  local opd\n    while [ $i -lt ${#operator[@]} ]; do\n        op=${operator[$i]}\n\
    \        opd=${operand[$j]}\n        case $op in\n            '+')\n         \
    \       result=$((result + opd))\n                ;;\n            '-')\n     \
    \           result=$((result - opd))\n                ;;\n            '*')\n \
    \               result=$((result * opd))\n                ;;\n            '//')\n\
    \                result=$((result / opd))\n                ;;\n            '**')\n\
    \                result=$((result ** opd))\n                ;;\n        esac\n\
    \        ((i++))\n        ((j++))\n    done\n    echo $result", "    local operator=($1)\n\
    \    local operand=($2)\n    local result=${operand[0]}\n    local i=0\n    local\
    \ j=1\n    while [ $i -lt ${#operator[@]} ]; do\n        case ${operator[$i]}\
    \ in\n            '+') result=$((result + ${operand[$j]}));;\n            '-')\
    \ result=$((result - ${operand[$j]}));;\n            '*') result=$((result * ${operand[$j]}));;\n\
    \            '//') result=$((result / ${operand[$j]}));;\n            '**') result=$((result\
    \ ** ${operand[$j]}));;\n        esac\n        i=$((i + 1))\n        j=$((j +\
    \ 1))\n    done\n    echo $result", "  local -a operator=($1)\n  local -a operand=($2)\n\
    \  local -i i=0\n  local -i result=${operand[0]}\n  local -i len=${#operator[@]}\n\
    \  for ((i=0; i<len; i++)); do\n    case ${operator[i]} in\n      '+') result=$((result\
    \ + ${operand[i+1]})) ;;\n      '-') result=$((result - ${operand[i+1]})) ;;\n\
    \      '*') result=$((result * ${operand[i+1]})) ;;\n      '//') result=$((result\
    \ / ${operand[i+1]})) ;;\n      '**') result=$((result ** ${operand[i+1]})) ;;\n\
    \    esac\n  done\n  echo $result", "  local -a operator=($1)\n  local -a operand=($2)\n\
    \  local result=${operand[0]}\n  local i=0\n  while [ $i -lt ${#operator[@]} ];\
    \ do\n    case ${operator[$i]} in\n      '+') result=$((result + ${operand[$((i+1))]}));;\n\
    \      '-') result=$((result - ${operand[$((i+1))]}));;\n      '*') result=$((result\
    \ * ${operand[$((i+1))]}));;\n      '//') result=$((result / ${operand[$((i+1))]}));;\n\
    \      '**') result=$((result ** ${operand[$((i+1))]}));;\n    esac\n    ((i++))\n\
    \  done\n  echo $result", "  local -a operator=($1)\n  local -a operand=($2)\n\
    \  local result=${operand[0]}\n  local i=0\n  local j=1\n  while [ $i -lt ${#operator[@]}\
    \ ]; do\n    case ${operator[$i]} in\n      '+') result=$((result + operand[$j]))\
    \ ;;\n      '-') result=$((result - operand[$j])) ;;\n      '*') result=$((result\
    \ * operand[$j])) ;;\n      '//') result=$((result / operand[$j])) ;;\n      '**')\
    \ result=$((result ** operand[$j])) ;;\n    esac\n    i=$((i + 1))\n    j=$((j\
    \ + 1))\n  done\n  echo $result", "  local -a operator=($1)\n  local -a operand=($2)\n\
    \  local result=${operand[0]}\n  local i=0\n  local j=1\n  while [ $i -lt ${#operator[@]}\
    \ ]; do\n    case ${operator[$i]} in\n      '+') result=$((result + operand[$j]))\
    \ ;;\n      '-') result=$((result - operand[$j])) ;;\n      '*') result=$((result\
    \ * operand[$j])) ;;\n      '//') result=$((result / operand[$j])) ;;\n      '**')\
    \ result=$((result ** operand[$j])) ;;\n    esac\n    ((i++))\n    ((j++))\n \
    \ done\n  echo $result", "    local operator=($1)\n    local operand=($2)\n  \
    \  local result=${operand[0]}\n    local i=0\n    local j=1\n    while [ $i -lt\
    \ ${#operator[@]} ]; do\n        case ${operator[$i]} in\n            \"+\")\n\
    \                result=$((result + ${operand[$j]}))\n                ;;\n   \
    \         \"-\")\n                result=$((result - ${operand[$j]}))\n      \
    \          ;;\n            \"*\")\n                result=$((result * ${operand[$j]}))\n\
    \                ;;\n            \"//\")\n                result=$((result / ${operand[$j]}))\n\
    \                ;;\n            \"**\")\n                result=$((result **\
    \ ${operand[$j]}))\n                ;;\n        esac\n        i=$((i + 1))\n \
    \       j=$((j + 1))\n    done\n    echo $result", "  local -a operator=(\"$1\"\
    )\n  local -a operand=(\"$2\")\n  local result=0\n  local i=0\n  local op=0\n\
    \  local op1=0\n  local op2=0\n  local op_len=${#operator[@]}\n  local opd_len=${#operand[@]}\n\
    \  local opd_len_minus_one=$((opd_len - 1))\n  if [ $op_len -ne $opd_len_minus_one\
    \ ]; then\n    echo \"operator list length is not equal to operand list length\
    \ minus one\"\n    return 1\n  fi\n  if [ $op_len -lt 1 ]; then\n    echo \"operator\
    \ list has at least one operator\"\n    return 1\n  fi\n  if [ $opd_len -lt 2\
    \ ]; then\n    echo \"operand list has at least two operands\"\n    return 1\n\
    \  fi\n  result=${operand[0]}\n  for ((i=0; i<$op_len; i++)); do\n    op=${operator[$i]}\n\
    \    op1=${operand[$i]}\n    op2=${operand[$((i+1))]}\n    case $op in\n     \
    \ \"+\")\n        result=$((result + op2))\n        ;;\n      \"-\")\n       \
    \ result=$((result - op2))\n        ;;\n      \"*\")\n        result=$((result\
    \ * op2))\n        ;;\n      \"//\")\n        result=$((result / op2))\n     \
    \   ;;\n      \"**\")\n        result=$((result ** op2))\n        ;;\n      *)\n\
    \        echo \"unknown operator $op\"\n        return 1\n        ;;\n    esac\n\
    \  done\n  echo $result", "  local -a operator=(\"$1\")\n  local -a operand=(\"\
    $2\")\n  local result=${operand[0]}\n  local i=0\n  while [ $i -lt ${#operator[@]}\
    \ ]; do\n    case ${operator[$i]} in\n      '+') result=$((result + ${operand[$((i+1))]}));;\n\
    \      '-') result=$((result - ${operand[$((i+1))]}));;\n      '*') result=$((result\
    \ * ${operand[$((i+1))]}));;\n      '//') result=$((result / ${operand[$((i+1))]}));;\n\
    \      '**') result=$((result ** ${operand[$((i+1))]}));;\n    esac\n    i=$((i+1))\n\
    \  done\n  echo $result", "    local -a operator=($1)\n    local -a operand=($2)\n\
    \    local result=${operand[0]}\n    local i=0\n    for ((i=0; i<${#operator[@]};\
    \ i++)); do\n        case ${operator[$i]} in\n            '+') result=$((result\
    \ + ${operand[$((i+1))]})) ;;\n            '-') result=$((result - ${operand[$((i+1))]}))\
    \ ;;\n            '*') result=$((result * ${operand[$((i+1))]})) ;;\n        \
    \    '//') result=$((result / ${operand[$((i+1))]})) ;;\n            '**') result=$((result\
    \ ** ${operand[$((i+1))]})) ;;\n        esac\n    done\n    echo $result", " \
    \ local -a operator=(\"$1\")\n  local -a operand=(\"$2\")\n  local result=${operand[0]}\n\
    \  local i=0\n  while [ $i -lt ${#operator[@]} ]; do\n    case ${operator[$i]}\
    \ in\n      '+') result=$((result + ${operand[$((i+1))]}));;\n      '-') result=$((result\
    \ - ${operand[$((i+1))]}));;\n      '*') result=$((result * ${operand[$((i+1))]}));;\n\
    \      '//') result=$((result / ${operand[$((i+1))]}));;\n      '**') result=$((result\
    \ ** ${operand[$((i+1))]}));;\n    esac\n    i=$((i+1))\n  done\n  echo $result",
  "  local -a operator=(\"$1\")\n  local -a operand=(\"$2\")\n  local -i result=0\n\
    \  local -i i=0\n  local -i len=${#operator[@]}\n  local -i len2=${#operand[@]}\n\
    \  local -i len3=$((len2-1))\n  local -i len4=$((len2-2))\n  if [ $len -ne $len4\
    \ ]; then\n    echo \"The length of operator list is not equal to the length of\
    \ operand list minus one.\"\n    exit 1\n  fi\n  if [ $len2 -lt 2 ]; then\n  \
    \  echo \"Operand is a list of of non-negative integers.\"\n    exit 1\n  fi\n\
    \  if [ $len -lt 1 ]; then\n    echo \"Operator list has at least one operator,\
    \ and operand list has at least two operands.\"\n    exit 1\n  fi\n  for i in\
    \ $(seq 0 $len3); do\n    if [ $i -eq 0 ]; then\n      result=${operand[$i]}\n\
    \    else\n      case ${operator[$i-1]} in\n        \"+\") result=$((result+${operand[$i]}))\
    \ ;;\n        \"-\") result=$((result-${operand[$i]})) ;;\n        \"*\") result=$((result*${operand[$i]}))\
    \ ;;\n        \"//\") result=$((result/${operand[$i]})) ;;\n        \"**\") result=$((result**${operand[$i]}))\
    \ ;;\n        *) echo \"Invalid operator: ${operator[$i-1]}\"\n           exit\
    \ 1\n           ;;\n      esac\n    fi\n  done\n  echo $result", "  local -a operator=($1)\n\
    \  local -a operand=($2)\n  local -a expression\n  local i=0\n  local result=${operand[0]}\n\
    \  for ((i=0; i<${#operator[@]}; i++)); do\n    expression[i]=${operand[i]}${operator[i]}${operand[i+1]}\n\
    \  done\n  for ((i=0; i<${#expression[@]}; i++)); do\n    result=$(($result ${expression[i]}))\n\
    \  done\n  echo $result", "    local -a operator=(\"$1\")\n    local -a operand=(\"\
    $2\")\n    local -a result=()\n    local -i i=0\n    local -i j=0\n    local -i\
    \ k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n\
    \    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local\
    \ -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n\
    \    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n  \
    \  local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n  \
    \  local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n  \
    \  local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n  \
    \  local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n  \
    \  local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n  \
    \  local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n  \
    \  local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n\
    \    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n\
    \    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n\
    \    local -i", "    local -a operator=($1)\n    local -a operand=($2)\n    local\
    \ -a expression\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local\
    \ -i result=0\n    local -i len_operator=${#operator[@]}\n    local -i len_operand=${#operand[@]}\n\
    \    local -i len_expression=$((len_operator + len_operand))\n    local -i len_expression_half=$((len_expression\
    \ / 2))\n    local -i len_expression_half_plus_one=$((len_expression_half + 1))\n\
    \    local -i len_expression_half_minus_one=$((len_expression_half - 1))\n   \
    \ local -i len_expression_minus_one=$((len_expression - 1))\n    local -i len_expression_minus_two=$((len_expression\
    \ - 2))\n    local -i len_expression_minus_three=$((len_expression - 3))\n   \
    \ local -i len_expression_minus_four=$((len_expression - 4))\n    local -i len_expression_minus_five=$((len_expression\
    \ - 5))\n    local -i len_expression_minus_six=$((len_expression - 6))\n    local\
    \ -i len_expression_minus_seven=$((len_expression - 7))\n    local -i len_expression_minus_eight=$((len_expression\
    \ - 8))\n    local -i len_expression_minus_nine=$((len_expression - 9))\n    local\
    \ -i len_expression_minus_ten=$((len_expression - 10))\n    local -i len_expression_minus_eleven=$((len_expression\
    \ - 11))\n    local -i len_expression_minus_twelve=$((len_expression - 12))\n\
    \    local -i len_expression_minus_thirteen=$((len_expression - 13))\n    local\
    \ -i len_expression_minus_fourteen=$((len_expression - 14))\n    local -i len_expression_minus_fifteen=$((len_expression\
    \ - 15))\n    local -i len_expression_minus_sixteen=$((len_expression - 16))\n\
    \    local -i len_expression_minus", "  local operator=($1)\n  local operand=($2)\n\
    \  local result=${operand[0]}\n  local i=0\n  for ((i=0; i<${#operator[@]}; i++));\
    \ do\n    case ${operator[$i]} in\n      \"+\") result=$((result + ${operand[$((i+1))]}))\
    \ ;;\n      \"-\") result=$((result - ${operand[$((i+1))]})) ;;\n      \"*\")\
    \ result=$((result * ${operand[$((i+1))]})) ;;\n      \"//\") result=$((result\
    \ / ${operand[$((i+1))]})) ;;\n      \"**\") result=$((result ** ${operand[$((i+1))]}))\
    \ ;;\n    esac\n  done\n  echo $result", "    local -a operator=($1)\n    local\
    \ -a operand=($2)\n    local result=${operand[0]}\n    local i\n    for ((i=0;\
    \ i<${#operator[@]}; i++)); do\n        case ${operator[$i]} in\n            '+')\
    \ result=$((result + ${operand[$((i+1))]})) ;;\n            '-') result=$((result\
    \ - ${operand[$((i+1))]})) ;;\n            '*') result=$((result * ${operand[$((i+1))]}))\
    \ ;;\n            '//') result=$((result / ${operand[$((i+1))]})) ;;\n       \
    \     '**') result=$((result ** ${operand[$((i+1))]})) ;;\n        esac\n    done\n\
    \    echo $result", "    local operator=($1)\n    local operand=($2)\n    local\
    \ result=${operand[0]}\n    local i=0\n    while [ $i -lt ${#operator[@]} ]; do\n\
    \        case ${operator[$i]} in\n            '+') result=$(( $result + ${operand[$((i+1))]}\
    \ ));;\n            '-') result=$(( $result - ${operand[$((i+1))]} ));;\n    \
    \        '*') result=$(( $result * ${operand[$((i+1))]} ));;\n            '//')\
    \ result=$(( $result / ${operand[$((i+1))]} ));;\n            '**') result=$((\
    \ $result ** ${operand[$((i+1))]} ));;\n        esac\n        i=$((i+1))\n   \
    \ done\n    echo $result", "    local -a operator=($1)\n    local -a operand=($2)\n\
    \    local result=${operand[0]}\n    local i=0\n    for ((i=0; i<${#operator[@]};\
    \ i++)); do\n        case ${operator[$i]} in\n            \"+\") result=$((result\
    \ + ${operand[$i+1]})) ;;\n            \"-\") result=$((result - ${operand[$i+1]}))\
    \ ;;\n            \"*\") result=$((result * ${operand[$i+1]})) ;;\n          \
    \  \"//\") result=$((result / ${operand[$i+1]})) ;;\n            \"**\") result=$((result\
    \ ** ${operand[$i+1]})) ;;\n        esac\n    done\n    echo $result", "    local\
    \ -a operator=($1)\n    local -a operand=($2)\n    local -a expression\n    local\
    \ -i i=0\n    local -i j=0\n    local -i k=0\n    for i in ${!operator[@]}; do\n\
    \        expression[$k]=${operator[$i]}\n        let k++\n        expression[$k]=${operand[$j]}\n\
    \        let k++\n        let j++\n    done\n    expression[$k]=${operand[$j]}\n\
    \    echo \"${expression[@]}\" | tr ' ' '\\n' | bc", "  local -a operator=($1)\n\
    \  local -a operand=($2)\n  local -i i=0\n  local -i result=${operand[0]}\n  local\
    \ -i len=${#operator[@]}\n  while [ $i -lt $len ]; do\n    case ${operator[$i]}\
    \ in\n      +) result=$((result + ${operand[$i+1]}));;\n      -) result=$((result\
    \ - ${operand[$i+1]}));;\n      \\*) result=$((result * ${operand[$i+1]}));;\n\
    \      \\/\\/) result=$((result / ${operand[$i+1]}));;\n      \\*\\*) result=$((result\
    \ ** ${operand[$i+1]}));;\n    esac\n    ((i++))\n  done\n  echo $result", " \
    \ local operator=\"$1\"\n  local operand=\"$2\"\n  local result=0\n  local i=0\n\
    \  local op=''\n  local op1=''\n  local op2=''\n  local op1_index=0\n  local op2_index=0\n\
    \  local op_index=0\n  local op_count=0\n  local op_count_max=0\n  local op_count_min=0\n\
    \  local op_count_min_index=0\n  local op_count_max_index=0\n  local op_count_min_index_prev=0\n\
    \  local op_count_max_index_prev=0\n  local op_count_min_index_prev_prev=0\n \
    \ local op_count_max_index_prev_prev=0\n  local op_count_min_index_prev_prev_prev=0\n\
    \  local op_count_max_index_prev_prev_prev=0\n  local op_count_min_index_prev_prev_prev_prev=0\n\
    \  local op_count_max_index_prev_prev_prev_prev=0\n  local op_count_min_index_prev_prev_prev_prev_prev=0\n\
    \  local op_count_max_index_prev_prev_prev_prev_prev=0\n  local op_count_min_index_prev_prev_prev_prev_prev_prev=0\n\
    \  local op_count_max_index_prev_prev_prev_prev_prev_prev=0\n  local op_count_min_index_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local op_count_max_index_prev_prev_prev_prev_prev_prev_prev=0\n  local op_count_min_index_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local op_count_max_index_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local\
    \ op_count_min_index_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local op_count_max_index_prev_prev_prev_prev_",
  "  local operator=($1)\n  local operand=($2)\n  local result=${operand[0]}\n  for\
    \ ((i=0; i<${#operator[@]}; i++)); do\n    case ${operator[$i]} in\n      '+')\
    \ result=$((result + ${operand[$((i+1))]})) ;;\n      '-') result=$((result -\
    \ ${operand[$((i+1))]})) ;;\n      '*') result=$((result * ${operand[$((i+1))]}))\
    \ ;;\n      '//') result=$((result / ${operand[$((i+1))]})) ;;\n      '**') result=$((result\
    \ ** ${operand[$((i+1))]})) ;;\n    esac\n  done\n  echo $result", "  local operator=\"\
    $1\"\n  local operand=\"$2\"\n  local result=0\n  local i=0\n  local op=\"\"\n\
    \  local op1=\"\"\n  local op2=\"\"\n  local op_list=()\n  local op_list_len=0\n\
    \  local op_list_index=0\n  local op_list_index_max=0\n  local op_list_index_min=0\n\
    \  local op_list_index_tmp=0\n  local op_list_index_tmp_max=0\n  local op_list_index_tmp_min=0\n\
    \  local op_list_index_tmp_max_index=0\n  local op_list_index_tmp_min_index=0\n\
    \  local op_list_index_tmp_max_index_tmp=0\n  local op_list_index_tmp_min_index_tmp=0\n\
    \  local op_list_index_tmp_max_index_tmp_max=0\n  local op_list_index_tmp_min_index_tmp_min=0\n\
    \  local op_list_index_tmp_max_index_tmp_max_index=0\n  local op_list_index_tmp_min_index_tmp_min_index=0\n\
    \  local op_list_index_tmp_max_index_tmp_max_index_tmp=0\n  local op_list_index_tmp_min_index_tmp_min_index_tmp=0\n\
    \  local op_list_index_tmp_max_index_tmp_max_index_tmp_max=0\n  local op_list_index_tmp_min_index_tmp_min_index_tmp_min=0\n\
    \  local op_list_index_tmp_max_index_tmp_max_index_tmp_max_index=0\n  local op_list_index_tmp_min_index_tmp_min_index_tmp_min_index=0\n\
    \  local op_list_index_tmp_max_index_tmp_max_index_tmp_max_index_tmp=0\n  local\
    \ op_list_index_tmp_min_index_tmp_min_index_tmp_min_index_tmp=0\n  local op_list",
  "    local -a operator=($1)\n    local -a operand=($2)\n    local -a result=()\n\
    \    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i n=${#operator[@]}\n\
    \    local -i m=${#operand[@]}\n    local -i l=0\n    local -i r=0\n    local\
    \ -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n\
    \    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local\
    \ -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n\
    \    local -i g=0\n    local -i h=0\n    local -i p=0\n    local -i q=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n\
    \    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local\
    \ -i g=0\n    local -i h=0\n    local -i p=0\n    local -i q=0\n    local -i o=0\n\
    \    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local\
    \ -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n\
    \    local -i y=0\n    local -i z=0", "    local -a operator=($1)\n    local -a\
    \ operand=($2)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\
    \ -i lll=0\n    local -i mmm", "    local operator=($1)\n    local operand=($2)\n\
    \    local result=${operand[0]}\n    local i=0\n    for (( i=0; i<${#operator[@]};\
    \ i++ )); do\n        case ${operator[$i]} in\n            '+') result=$(( $result\
    \ + ${operand[$(( $i + 1 ))]} ));;\n            '-') result=$(( $result - ${operand[$((\
    \ $i + 1 ))]} ));;\n            '*') result=$(( $result * ${operand[$(( $i + 1\
    \ ))]} ));;\n            '//') result=$(( $result / ${operand[$(( $i + 1 ))]}\
    \ ));;\n            '**') result=$(( $result ** ${operand[$(( $i + 1 ))]} ));;\n\
    \        esac\n    done\n    echo $result", "  local -a operator=(\"$1\")\n  local\
    \ -a operand=(\"$2\")\n  local result=${operand[0]}\n  local i=0\n  while [ $i\
    \ -lt ${#operator[@]} ]; do\n    case ${operator[$i]} in\n      '+') result=$((result\
    \ + ${operand[$((i+1))]}));;\n      '-') result=$((result - ${operand[$((i+1))]}));;\n\
    \      '*') result=$((result * ${operand[$((i+1))]}));;\n      '//') result=$((result\
    \ / ${operand[$((i+1))]}));;\n      '**') result=$((result ** ${operand[$((i+1))]}));;\n\
    \    esac\n    i=$((i+1))\n  done\n  echo $result", "  local operator=($1)\n \
    \ local operand=($2)\n  local result=${operand[0]}\n  local i=0\n  while [ $i\
    \ -lt ${#operator[@]} ]; do\n    case ${operator[$i]} in\n      '+') result=$((result\
    \ + ${operand[$((i+1))]}));;\n      '-') result=$((result - ${operand[$((i+1))]}));;\n\
    \      '*') result=$((result * ${operand[$((i+1))]}));;\n      '//') result=$((result\
    \ / ${operand[$((i+1))]}));;\n      '**') result=$((result ** ${operand[$((i+1))]}));;\n\
    \    esac\n    i=$((i+1))\n  done\n  echo $result", "  local -a operator=($1)\n\
    \  local -a operand=($2)\n  local -a result=()\n  local -i i=0\n  local -i j=0\n\
    \  local -i k=0\n  local -i len=${#operator[@]}\n  local -i len2=${#operand[@]}\n\
    \  local -i len3=0\n  local -i len4=0\n  local -i len5=0\n  local -i len6=0\n\
    \  local -i len7=0\n  local -i len8=0\n  local -i len9=0\n  local -i len10=0\n\
    \  local -i len11=0\n  local -i len12=0\n  local -i len13=0\n  local -i len14=0\n\
    \  local -i len15=0\n  local -i len16=0\n  local -i len17=0\n  local -i len18=0\n\
    \  local -i len19=0\n  local -i len20=0\n  local -i len21=0\n  local -i len22=0\n\
    \  local -i len23=0\n  local -i len24=0\n  local -i len25=0\n  local -i len26=0\n\
    \  local -i len27=0\n  local -i len28=0\n  local -i len29=0\n  local -i len30=0\n\
    \  local -i len31=0\n  local -i len32=0\n  local -i len33=0\n  local -i len34=0\n\
    \  local -i len35=0\n  local -i len36=0\n  local -i len37=0\n  local -i len38=0\n\
    \  local -i len39=0\n  local -i len40=0\n  local -i len41=0\n  local -i len42=0\n\
    \  local -i len43=0\n  local -i len44=0\n  local -i len45=0\n  local -i len46=0\n\
    \  local -i len47=0\n  local -i len48=0\n  local -i len49=0\n  local -i len50=",
  "  local operator=($1)\n  local operand=($2)\n  local result=${operand[0]}\n  for\
    \ ((i=0; i<${#operator[@]}; i++)); do\n    case ${operator[$i]} in\n      '+')\
    \ result=$((result + ${operand[$((i+1))]})) ;;\n      '-') result=$((result -\
    \ ${operand[$((i+1))]})) ;;\n      '*') result=$((result * ${operand[$((i+1))]}))\
    \ ;;\n      '//') result=$((result / ${operand[$((i+1))]})) ;;\n      '**') result=$((result\
    \ ** ${operand[$((i+1))]})) ;;\n    esac\n  done\n  echo $result", "  local operator=$1\n\
    \  local operand=$2\n  local result=0\n  local i=0\n  local j=0\n  local op=0\n\
    \  local op1=0\n  local op2=0\n  local op_list=($operator)\n  local opd_list=($operand)\n\
    \  local opd_len=${#opd_list[@]}\n  local op_len=${#op_list[@]}\n  local opd_len=$((opd_len-1))\n\
    \  local op_len=$((op_len-1))\n  if [ $opd_len -ne $op_len ]; then\n    echo \"\
    Operand and operator list length mismatch\"\n    return 1\n  fi\n  if [ $opd_len\
    \ -lt 1 ]; then\n    echo \"Operand list is too short\"\n    return 1\n  fi\n\
    \  if [ $op_len -lt 1 ]; then\n    echo \"Operator list is too short\"\n    return\
    \ 1\n  fi\n  result=${opd_list[0]}\n  for ((i=0; i<op_len; i++)); do\n    op=${op_list[$i]}\n\
    \    op1=${opd_list[$i]}\n    op2=${opd_list[$((i+1))]}\n    case $op in\n   \
    \   \"+\")\n        result=$((result+op2))\n        ;;\n      \"-\")\n       \
    \ result=$((result-op2))\n        ;;\n      \"*\")\n        result=$((result*op2))\n\
    \        ;;\n      \"//\")\n        result=$((result/op2))\n        ;;\n     \
    \ \"**\")\n        result=$((result**op2))\n        ;;\n      *)\n        echo\
    \ \"Unknown operator: $op\"\n        return 1\n        ;;\n    esac\n  done\n\
    \  echo $result", "    local -a operators=($1)\n    local -a operands=($2)\n \
    \   local -i result=${operands[0]}\n    local -i i=0\n    for ((i=0; i<${#operators[@]};\
    \ i++)); do\n        case ${operators[$i]} in\n            '+') result+=${operands[$i+1]}\
    \ ;;\n            '-') result-=${operands[$i+1]} ;;\n            '*') result*=${operands[$i+1]}\
    \ ;;\n            '//') result/=${operands[$i+1]} ;;\n            '**') result**=${operands[$i+1]}\
    \ ;;\n        esac\n    done\n    echo $result", "  local -a operator=($1)\n \
    \ local -a operand=($2)\n  local -i i=0\n  local -i result=${operand[0]}\n  local\
    \ -i n=${#operator[@]}\n  while (( i < n )); do\n    case ${operator[i]} in\n\
    \      '+') result=$(( result + operand[i+1] ));;\n      '-') result=$(( result\
    \ - operand[i+1] ));;\n      '*') result=$(( result * operand[i+1] ));;\n    \
    \  '//') result=$(( result / operand[i+1] ));;\n      '**') result=$(( result\
    \ ** operand[i+1] ));;\n    esac\n    (( i++ ))\n  done\n  echo $result", "  \
    \  local -a operator=($1)\n    local -a operand=($2)\n    local -a expression\n\
    \    local i=0\n    local result=0\n    local len=${#operator[@]}\n    while [\
    \ $i -lt $len ]; do\n        expression[$i]=${operand[$i]}\n        expression[$i+1]=${operator[$i]}\n\
    \        let i++\n    done\n    expression[$i]=${operand[$i]}\n    result=$(echo\
    \ \"${expression[@]}\" | sed 's/ / /g' | bc)\n    echo $result", "  local -a operator=($1)\n\
    \  local -a operand=($2)\n  local result=${operand[0]}\n  local i=0\n  for ((i=0;\
    \ i<${#operator[@]}; i++)); do\n    case ${operator[$i]} in\n      '+') result=$((result\
    \ + ${operand[$i+1]}));;\n      '-') result=$((result - ${operand[$i+1]}));;\n\
    \      '*') result=$((result * ${operand[$i+1]}));;\n      '//') result=$((result\
    \ / ${operand[$i+1]}));;\n      '**') result=$((result ** ${operand[$i+1]}));;\n\
    \    esac\n  done\n  echo $result", "  local operator=$1\n  local operand=$2\n\
    \  local result=0\n  local op=()\n  local opd=()\n  local i=0\n  local j=0\n \
    \ local k=0\n  local l=0\n  local m=0\n  local n=0\n  local p=0\n  local q=0\n\
    \  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n\
    \  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n\
    \  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n\
    \  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local p=0\n\
    \  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n\
    \  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n\
    \  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n\
    \  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n\
    \  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n\
    \  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n\
    \  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n\
    \  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0",
  "    local -a operator=(\"$1\")\n    local -a operand=(\"$2\")\n    local -i result=0\n\
    \    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local\
    \ -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n\
    \    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local\
    \ -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\
    \    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n\
    \    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n\
    \    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n\
    \    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n\
    \    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n\
    \    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n\
    \    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n\
    \    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n\
    \    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n\
    \    local -i kkk=0\n    local -i lll=0\n    local -i", "  local ops=\"$1\"\n\
    \  local nums=\"$2\"\n  local op\n  local num\n  local result=0\n  local i=0\n\
    \  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n\
    \  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n\
    \  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local A=0\n\
    \  local B=0\n  local C=0\n  local D=0\n  local E=0\n  local F=0\n  local G=0\n\
    \  local H=0\n  local I=0\n  local J=0\n  local K=0\n  local L=0\n  local M=0\n\
    \  local N=0\n  local O=0\n  local P=0\n  local Q=0\n  local R=0\n  local S=0\n\
    \  local T=0\n  local U=0\n  local V=0\n  local W=0\n  local X=0\n  local Y=0\n\
    \  local Z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n\
    \  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n\
    \  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n\
    \  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n\
    \  local x=0\n  local y=0\n  local z=0\n  local A=0\n  local B=0\n  local C=0\n\
    \  local D=0\n  local E=0\n  local F=0\n  local G=0\n  local H=0\n  local I=0\n\
    \  local J=0\n", "    local -a operator=($1)\n    local -a operand=($2)\n    local\
    \ -a result=()\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local\
    \ -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n\
    \    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local\
    \ -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n\
    \    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n \
    \   local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n \
    \   local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n \
    \   local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n \
    \   local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n \
    \   local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n \
    \   local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n\
    \    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n\
    \    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n\
    \    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm",
  "    local operator=\"$1\"\n    local operand=\"$2\"\n    local -a op_list=()\n\
    \    local -a num_list=()\n    local -i i=0\n    local -i len=0\n    local -i\
    \ result=0\n    local -i tmp=0\n    local -i num=0\n    local -i num1=0\n    local\
    \ -i num2=0\n    local -i num3=0\n    local -i num4=0\n    local -i num5=0\n \
    \   local -i num6=0\n    local -i num7=0\n    local -i num8=0\n    local -i num9=0\n\
    \    local -i num10=0\n    local -i num11=0\n    local -i num12=0\n    local -i\
    \ num13=0\n    local -i num14=0\n    local -i num15=0\n    local -i num16=0\n\
    \    local -i num17=0\n    local -i num18=0\n    local -i num19=0\n    local -i\
    \ num20=0\n    local -i num21=0\n    local -i num22=0\n    local -i num23=0\n\
    \    local -i num24=0\n    local -i num25=0\n    local -i num26=0\n    local -i\
    \ num27=0\n    local -i num28=0\n    local -i num29=0\n    local -i num30=0\n\
    \    local -i num31=0\n    local -i num32=0\n    local -i num33=0\n    local -i\
    \ num34=0\n    local -i num35=0\n    local -i num36=0\n    local -i num37=0\n\
    \    local -i num38=0\n    local -i num39=0\n    local -i num40=0\n    local -i\
    \ num41=0\n    local -i num42=0\n    local -i num43=0\n    local -i num44=0\n\
    \    local -i num45=0\n    local -i num46=0\n    local -i num47=0\n    local -i\
    \ num48=0\n    local", "    local -a operator=($1)\n    local -a operand=($2)\n\
    \    local -a result\n    local -i i=0\n    local -i j=0\n    local -i k=0\n \
    \   local -i len_op=${#operator[@]}\n    local -i len_operand=${#operand[@]}\n\
    \    local -i len_result=0\n    local -i len_result_prev=0\n    local -i len_result_prev_prev=0\n\
    \    local -i len_result_prev_prev_prev=0\n    local -i len_result_prev_prev_prev_prev=0\n\
    \    local -i len_result_prev_prev_prev_prev_prev=0\n    local -i len_result_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i len_result_prev_prev_prev_prev_prev_prev_prev=0\n    local -i len_result_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i len_result_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local\
    \ -i len_result_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local\
    \ -i len_result_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n   \
    \ local -i len_result_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i len_result_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i len_result_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i len_result_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i len_result_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_",
  "    local -a operator=($1)\n    local -a operand=($2)\n    local -a result\n  \
    \  local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local\
    \ -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n\
    \    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local\
    \ -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\
    \    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n\
    \    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n\
    \    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n\
    \    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n\
    \    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n\
    \    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n\
    \    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n\
    \    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n\
    \    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n\
    \    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0", "    local -a operator=(\"\
    $1\")\n    local -a operand=(\"$2\")\n    local result=${operand[0]}\n    local\
    \ i=0\n    for ((i=0; i<${#operator[@]}; i++)); do\n        case ${operator[$i]}\
    \ in\n            '+')\n                result=$((result + ${operand[$((i+1))]}))\n\
    \                ;;\n            '-')\n                result=$((result - ${operand[$((i+1))]}))\n\
    \                ;;\n            '*')\n                result=$((result * ${operand[$((i+1))]}))\n\
    \                ;;\n            '//')\n                result=$((result / ${operand[$((i+1))]}))\n\
    \                ;;\n            '**')\n                result=$((result ** ${operand[$((i+1))]}))\n\
    \                ;;\n        esac\n    done\n    echo $result", "    local operator=($1)\n\
    \    local operand=($2)\n    local result=${operand[0]}\n    local i=0\n    for\
    \ op in ${operator[@]}; do\n        case $op in\n            '+') result=$((result\
    \ + ${operand[$((i+1))]}));;\n            '-') result=$((result - ${operand[$((i+1))]}));;\n\
    \            '*') result=$((result * ${operand[$((i+1))]}));;\n            '//')\
    \ result=$((result / ${operand[$((i+1))]}));;\n            '**') result=$((result\
    \ ** ${operand[$((i+1))]}));;\n        esac\n        ((i++))\n    done\n    echo\
    \ $result", "  local operator=($1)\n  local operand=($2)\n  local result=${operand[0]}\n\
    \  local i=0\n  local j=1\n  while [ $i -lt ${#operator[@]} ]; do\n    case ${operator[$i]}\
    \ in\n      '+') result=$((result + ${operand[$j]}));;\n      '-') result=$((result\
    \ - ${operand[$j]}));;\n      '*') result=$((result * ${operand[$j]}));;\n   \
    \   '//') result=$((result / ${operand[$j]}));;\n      '**') result=$((result\
    \ ** ${operand[$j]}));;\n    esac\n    ((i++))\n    ((j++))\n  done\n  echo $result",
  "    local -a operator=($1)\n    local -a operand=($2)\n    local -a result=()\n\
    \    local -a stack=()\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ n=${#operator[@]}\n    local m=${#operand[@]}\n    local op=0\n    local a=0\n\
    \    local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n \
    \   local g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n  \
    \  local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n   \
    \ local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local\
    \ v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    for ((i=0;\
    \ i<n; i++)); do\n        op=${operator[$i]}\n        case $op in\n          \
    \  '+')\n                a=${operand[$i]}\n                b=${operand[$((i+1))]}\n\
    \                c=$((a+b))\n                result[$i]=$c\n                ;;\n\
    \            '-')\n                a=${operand[$i]}\n                b=${operand[$((i+1))]}\n\
    \                c=$((a-b))\n                result[$i]=$c\n                ;;\n\
    \            '*')\n                a=${operand[$i]}\n                b=${operand[$((i+1))]}\n\
    \                c=$((a*b))\n                result[$i]=$c\n                ;;\n\
    \            '//')\n                a=${operand[$i]}\n                b=${operand[$((i+1))]}\n\
    \                c=$((a/b))\n                result[$i]=$c\n                ;;\n\
    \            '**')\n                a=${operand[$i]}\n                b=${operand[$((i+1))]}\n",
  "    local -a operator=(\"$1\")\n    local -a operand=(\"$2\")\n    local -i i=0\n\
    \    local -i result=${operand[0]}\n    for ((i=0; i<${#operator[@]}; i++)); do\n\
    \        case ${operator[i]} in\n            '+') result=$((result + operand[i+1]))\
    \ ;;\n            '-') result=$((result - operand[i+1])) ;;\n            '*')\
    \ result=$((result * operand[i+1])) ;;\n            '//') result=$((result / operand[i+1]))\
    \ ;;\n            '**') result=$((result ** operand[i+1])) ;;\n        esac\n\
    \    done\n    echo $result", "    # Write your code here\n    # To print results\
    \ to the standard output you can use print\n    # Example: print \"Hello world!\"\
    \n    local operator=\"$1\"\n    local operand=\"$2\"\n    local result=0\n  \
    \  local i=0\n    local j=0\n    local op=\"\"\n    local op_list=()\n    local\
    \ op_list_len=0\n    local op_list_idx=0\n    local op_list_idx_max=0\n    local\
    \ op_list_idx_min=0\n    local op_list_idx_min_tmp=0\n    local op_list_idx_max_tmp=0\n\
    \    local op_list_idx_min_tmp_2=0\n    local op_list_idx_max_tmp_2=0\n    local\
    \ op_list_idx_min_tmp_3=0\n    local op_list_idx_max_tmp_3=0\n    local op_list_idx_min_tmp_4=0\n\
    \    local op_list_idx_max_tmp_4=0\n    local op_list_idx_min_tmp_5=0\n    local\
    \ op_list_idx_max_tmp_5=0\n    local op_list_idx_min_tmp_6=0\n    local op_list_idx_max_tmp_6=0\n\
    \    local op_list_idx_min_tmp_7=0\n    local op_list_idx_max_tmp_7=0\n    local\
    \ op_list_idx_min_tmp_8=0\n    local op_list_idx_max_tmp_8=0\n    local op_list_idx_min_tmp_9=0\n\
    \    local op_list_idx_max_tmp_9=0\n    local op_list_idx_min_tmp_10=0\n    local\
    \ op_list_idx_max_tmp_10=0\n    local op_list_idx_min_tmp_11=0\n    local op_list_idx_max_tmp_11=0\n\
    \    local op_list_idx_min_tmp_12=", "    local -a operator=($1)\n    local -a\
    \ operand=($2)\n    local result=${operand[0]}\n    local i=0\n    for ((i=0;\
    \ i<${#operator[@]}; i++)); do\n        case ${operator[$i]} in\n            '+')\
    \ result=$((result + ${operand[$((i+1))]})) ;;\n            '-') result=$((result\
    \ - ${operand[$((i+1))]})) ;;\n            '*') result=$((result * ${operand[$((i+1))]}))\
    \ ;;\n            '//') result=$((result / ${operand[$((i+1))]})) ;;\n       \
    \     '**') result=$((result ** ${operand[$((i+1))]})) ;;\n        esac\n    done\n\
    \    echo $result", "  local -a operator=($1)\n  local -a operand=($2)\n  local\
    \ -a result\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i len=${#operator[@]}\n\
    \  local -i len2=${#operand[@]}\n  local -i len3=${#result[@]}\n  local -i len4=$len2-1\n\
    \  local -i len5=$len2-2\n  local -i len6=$len2-3\n  local -i len7=$len2-4\n \
    \ local -i len8=$len2-5\n  local -i len9=$len2-6\n  local -i len10=$len2-7\n \
    \ local -i len11=$len2-8\n  local -i len12=$len2-9\n  local -i len13=$len2-10\n\
    \  local -i len14=$len2-11\n  local -i len15=$len2-12\n  local -i len16=$len2-13\n\
    \  local -i len17=$len2-14\n  local -i len18=$len2-15\n  local -i len19=$len2-16\n\
    \  local -i len20=$len2-17\n  local -i len21=$len2-18\n  local -i len22=$len2-19\n\
    \  local -i len23=$len2-20\n  local -i len24=$len2-21\n  local -i len25=$len2-22\n\
    \  local -i len26=$len2-23\n  local -i len27=$len2-24\n  local -i len28=$len2-25\n\
    \  local -i len29=$len2-26\n  local -i len30=$len2-27\n  local -i len31=$len2-28\n\
    \  local -i len32=$len2-29\n  local -i len33=$len2-30\n  local -i len34=$len2-31\n\
    \  local -i len35=$len2-32\n  local -i len36=$len2-33\n  local -i len37=$len2-34\n\
    \  local -i len38=$len2-", "  local -a operator=($1)\n  local -a operand=($2)\n\
    \  local result=${operand[0]}\n  local i=0\n  while [ $i -lt ${#operator[@]} ];\
    \ do\n    case ${operator[$i]} in\n      \"+\") result=$((result + ${operand[$((i+1))]}));;\n\
    \      \"-\") result=$((result - ${operand[$((i+1))]}));;\n      \"*\") result=$((result\
    \ * ${operand[$((i+1))]}));;\n      \"//\") result=$((result / ${operand[$((i+1))]}));;\n\
    \      \"**\") result=$((result ** ${operand[$((i+1))]}));;\n    esac\n    i=$((i+1))\n\
    \  done\n  echo $result", "  local -a operator=(\"$1\")\n  local -a operand=(\"\
    $2\")\n  local -i i=0\n  local -i result=${operand[0]}\n  local -i len=${#operator[@]}\n\
    \  for ((i=0; i<len; i++)); do\n    case ${operator[i]} in\n      '+') result=$((result\
    \ + operand[i+1])) ;;\n      '-') result=$((result - operand[i+1])) ;;\n     \
    \ '*') result=$((result * operand[i+1])) ;;\n      '//') result=$((result / operand[i+1]))\
    \ ;;\n      '**') result=$((result ** operand[i+1])) ;;\n    esac\n  done\n  echo\
    \ $result", "    local -a operator=($1)\n    local -a operand=($2)\n    local\
    \ -a expression=()\n    local i=0\n    local result=0\n    local op=''\n    local\
    \ operand1=0\n    local operand2=0\n    local -a operator_map=(\n        [0]='+'\n\
    \        [1]='-'\n        [2]='*'\n        [3]='//'\n        [4]='**'\n    )\n\
    \    for op in \"${operator[@]}\"; do\n        expression+=(${operator_map[$op]})\n\
    \    done\n    for operand in \"${operand[@]}\"; do\n        expression+=($operand)\n\
    \    done\n    result=${expression[0]}\n    for ((i=1; i<${#expression[@]}; i+=2));\
    \ do\n        op=${expression[$i]}\n        operand1=$result\n        operand2=${expression[$((i+1))]}\n\
    \        case $op in\n            '+')\n                result=$((operand1 + operand2))\n\
    \                ;;\n            '-')\n                result=$((operand1 - operand2))\n\
    \                ;;\n            '*')\n                result=$((operand1 * operand2))\n\
    \                ;;\n            '//')\n                result=$((operand1 / operand2))\n\
    \                ;;\n            '**')\n                result=$((operand1 **\
    \ operand2))\n                ;;\n        esac\n    done\n    echo $result", " \
    \   local -a operator=(\"$1\")\n    local -a operand=(\"$2\")\n    local -i i=0\n\
    \    local -i len=${#operator[@]}\n    local -i result=${operand[0]}\n    local\
    \ -i operand_len=${#operand[@]}\n    local -i operand_idx=1\n    local -i operand_idx_next=2\n\
    \    local -i operand_idx_prev=0\n    local -i operand_idx_prev_prev=0\n    local\
    \ -i operand_idx_prev_prev_prev=0\n    local -i operand_idx_prev_prev_prev_prev=0\n\
    \    local -i operand_idx_prev_prev_prev_prev_prev=0\n    local -i operand_idx_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i operand_idx_prev_prev_prev_prev_prev_prev_prev=0\n    local -i operand_idx_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i operand_idx_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n   \
    \ local -i operand_idx_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n \
    \   local -i operand_idx_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i operand_idx_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i operand_idx_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i operand_idx_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i operand_idx_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev",
  "    local -a operator=($1)\n    local -a operand=($2)\n    local result=${operand[0]}\n\
    \    local i=0\n    while [ $i -lt ${#operator[@]} ]; do\n        case ${operator[$i]}\
    \ in\n            '+')\n                result=$((result + ${operand[$((i+1))]}))\n\
    \                ;;\n            '-')\n                result=$((result - ${operand[$((i+1))]}))\n\
    \                ;;\n            '*')\n                result=$((result * ${operand[$((i+1))]}))\n\
    \                ;;\n            '//')\n                result=$((result / ${operand[$((i+1))]}))\n\
    \                ;;\n            '**')\n                result=$((result ** ${operand[$((i+1))]}))\n\
    \                ;;\n        esac\n        i=$((i+1))\n    done\n    echo $result",
  "    local -a operator=($1)\n    local -a operand=($2)\n    local -a expression\n\
    \    local i\n    local result\n\n    for ((i=0; i<${#operator[@]}; i++)); do\n\
    \        expression[$i]=${operand[$i]}\n        expression[$i+1]=${operator[$i]}\n\
    \    done\n    expression[$i]=${operand[$i]}\n\n    result=$(IFS=\" \"; echo \"\
    ${expression[*]}\")\n    echo $result | bc", "  local -a operator=($1)\n  local\
    \ -a operand=($2)\n  local -a expression\n  local -i i=0\n  local -i j=0\n  local\
    \ -i k=0\n  local -i len=${#operator[@]}\n  local -i len2=${#operand[@]}\n  local\
    \ -i len3=${#operand[@]}-1\n  local -i len4=${#operand[@]}-2\n  local -i len5=${#operand[@]}-3\n\
    \  local -i len6=${#operand[@]}-4\n  local -i len7=${#operand[@]}-5\n  local -i\
    \ len8=${#operand[@]}-6\n  local -i len9=${#operand[@]}-7\n  local -i len10=${#operand[@]}-8\n\
    \  local -i len11=${#operand[@]}-9\n  local -i len12=${#operand[@]}-10\n  local\
    \ -i len13=${#operand[@]}-11\n  local -i len14=${#operand[@]}-12\n  local -i len15=${#operand[@]}-13\n\
    \  local -i len16=${#operand[@]}-14\n  local -i len17=${#operand[@]}-15\n  local\
    \ -i len18=${#operand[@]}-16\n  local -i len19=${#operand[@]}-17\n  local -i len20=${#operand[@]}-18\n\
    \  local -i len21=${#operand[@]}-19\n  local -i len22=${#operand[@]}-20\n  local\
    \ -i len23=${#operand[@]}-21\n  local -i len24=${#operand[@]}-22\n  local -i len25=${#operand[@]}-23\n\
    \  local -i len26=${#operand[@]}-24\n  local -i len27=${#operand[@]}-25\n  local\
    \ -i len28=", "    local -a operator=($1)\n    local -a operand=($2)\n    local\
    \ result=${operand[0]}\n    local i=0\n    while [ $i -lt ${#operator[@]} ]; do\n\
    \        case ${operator[$i]} in\n            '+') result=$((result + ${operand[$((i+1))]}));;\n\
    \            '-') result=$((result - ${operand[$((i+1))]}));;\n            '*')\
    \ result=$((result * ${operand[$((i+1))]}));;\n            '//') result=$((result\
    \ / ${operand[$((i+1))]}));;\n            '**') result=$((result ** ${operand[$((i+1))]}));;\n\
    \        esac\n        i=$((i+1))\n    done\n    echo $result", "    local -a\
    \ operator=($1)\n    local -a operand=($2)\n    local -i result=${operand[0]}\n\
    \    local -i i=0\n    local -i len=${#operator[@]}\n    while (( i < len ));\
    \ do\n        case ${operator[i]} in\n            '+') result+=${operand[i+1]}\
    \ ;;\n            '-') result-=${operand[i+1]} ;;\n            '*') result*=${operand[i+1]}\
    \ ;;\n            '//') result/=${operand[i+1]} ;;\n            '**') result**=${operand[i+1]}\
    \ ;;\n        esac\n        (( i++ ))\n    done\n    echo $result", "    local\
    \ -a operator=($1)\n    local -a operand=($2)\n    local -i result=${operand[0]}\n\
    \    local -i i=0\n    local -i j=1\n    local -i len=${#operator[@]}\n    while\
    \ [ $i -lt $len ]; do\n        case ${operator[$i]} in\n            '+') result=$((result\
    \ + ${operand[$j]}));;\n            '-') result=$((result - ${operand[$j]}));;\n\
    \            '*') result=$((result * ${operand[$j]}));;\n            '//') result=$((result\
    \ / ${operand[$j]}));;\n            '**') result=$((result ** ${operand[$j]}));;\n\
    \        esac\n        i=$((i + 1))\n        j=$((j + 1))\n    done\n    echo\
    \ $result", "    local -a operator=($1)\n    local -a operand=($2)\n    local\
    \ -i i=0\n    local -i result=${operand[0]}\n    while [ $i -lt ${#operator[@]}\
    \ ]; do\n        case ${operator[$i]} in\n            '+') result=$((result +\
    \ ${operand[$((i+1))]}));;\n            '-') result=$((result - ${operand[$((i+1))]}));;\n\
    \            '*') result=$((result * ${operand[$((i+1))]}));;\n            '//')\
    \ result=$((result / ${operand[$((i+1))]}));;\n            '**') result=$((result\
    \ ** ${operand[$((i+1))]}));;\n        esac\n        i=$((i+1))\n    done\n  \
    \  echo $result", "    local -a operator=($1)\n    local -a operand=($2)\n   \
    \ local -i result=${operand[0]}\n    local -i i=0\n    local -i j=1\n    local\
    \ -i len=${#operator[@]}\n    for ((i=0; i<len; i++)); do\n        case ${operator[i]}\
    \ in\n            '+') result=$((result + operand[j])) ;;\n            '-') result=$((result\
    \ - operand[j])) ;;\n            '*') result=$((result * operand[j])) ;;\n   \
    \         '//') result=$((result / operand[j])) ;;\n            '**') result=$((result\
    \ ** operand[j])) ;;\n        esac\n        j=$((j+1))\n    done\n    echo $result",
  "    local -a operator=($1)\n    local -a operand=($2)\n    local -i i=0\n    local\
    \ -i result=${operand[0]}\n    for ((i=0; i<${#operator[@]}; i++)); do\n     \
    \   case ${operator[$i]} in\n            '+') result=$((result + ${operand[$((i+1))]}))\
    \ ;;\n            '-') result=$((result - ${operand[$((i+1))]})) ;;\n        \
    \    '*') result=$((result * ${operand[$((i+1))]})) ;;\n            '//') result=$((result\
    \ / ${operand[$((i+1))]})) ;;\n            '**') result=$((result ** ${operand[$((i+1))]}))\
    \ ;;\n        esac\n    done\n    echo $result", "    local -a operator=($1)\n\
    \    local -a operand=($2)\n    local -a result=()\n    local -i i=0\n    local\
    \ -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n\
    \    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local\
    \ -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n\
    \    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n   \
    \ local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n   \
    \ local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n   \
    \ local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n   \
    \ local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n   \
    \ local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n   \
    \ local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n   \
    \ local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n\
    \    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n\
    \    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n\
    \    local -i lll=0\n    local -i mmm", "    local -a operator=($1)\n    local\
    \ -a operand=($2)\n    local -a result=()\n    local -a tmp=()\n    local i=0\n\
    \    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n \
    \   local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n  \
    \  local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n   \
    \ local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n \
    \   local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n\
    \    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n\
    \    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n\
    \    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n\
    \    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n\
    \    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local\
    \ ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n\
    \    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local\
    \ ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n\
    \    local uuu=0\n    local vvv=0\n    local www=0\n    local xxx=0\n    local\
    \ yyy=0\n    local zzz=0\n    local aaaa=0\n    local bbbb=", "  local -a operator=($1)\n\
    \  local -a operand=($2)\n  local result=${operand[0]}\n  local i=0\n  for ((i=0;\
    \ i<${#operator[@]}; i++)); do\n    case ${operator[$i]} in\n      '+') result=$((result\
    \ + ${operand[$i+1]}));;\n      '-') result=$((result - ${operand[$i+1]}));;\n\
    \      '*') result=$((result * ${operand[$i+1]}));;\n      '//') result=$((result\
    \ / ${operand[$i+1]}));;\n      '**') result=$((result ** ${operand[$i+1]}));;\n\
    \    esac\n  done\n  echo $result", "  local -a operator=($1)\n  local -a operand=($2)\n\
    \  local result=${operand[0]}\n  local i=0\n  while [ $i -lt ${#operator[@]} ];\
    \ do\n    case ${operator[$i]} in\n      '+') result=$((result + ${operand[$((i+1))]}));;\n\
    \      '-') result=$((result - ${operand[$((i+1))]}));;\n      '*') result=$((result\
    \ * ${operand[$((i+1))]}));;\n      '//') result=$((result / ${operand[$((i+1))]}));;\n\
    \      '**') result=$((result ** ${operand[$((i+1))]}));;\n    esac\n    i=$((i+1))\n\
    \  done\n  echo $result", "    local -a operator=($1)\n    local -a operand=($2)\n\
    \    local -a result=()\n    local -i i=0\n    local -i j=0\n    local -i k=0\n\
    \    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local\
    \ -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n\
    \    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local\
    \ -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i\
    \ cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i\
    \ gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i\
    \ kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i\
    \ oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i\
    \ ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i\
    \ ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i\
    \ aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local\
    \ -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local\
    \ -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local\
    \ -i mmm", "    local -a operator=($1)\n    local -a operand=($2)\n    local result=${operand[0]}\n\
    \    local i=0\n    for ((i=0; i<${#operator[@]}; i++)); do\n        case ${operator[$i]}\
    \ in\n            '+') result=$((result + ${operand[$i+1]})) ;;\n            '-')\
    \ result=$((result - ${operand[$i+1]})) ;;\n            '*') result=$((result\
    \ * ${operand[$i+1]})) ;;\n            '//') result=$((result / ${operand[$i+1]}))\
    \ ;;\n            '**') result=$((result ** ${operand[$i+1]})) ;;\n        esac\n\
    \    done\n    echo $result", "    local -a operator=(\"$1\")\n    local -a operand=(\"\
    $2\")\n    local result=${operand[0]}\n    local i=0\n    local j=1\n    local\
    \ op=${operator[0]}\n    while [[ $j -lt ${#operand[@]} ]]; do\n        case $op\
    \ in\n            '+') result=$((result + operand[j])) ;;\n            '-') result=$((result\
    \ - operand[j])) ;;\n            '*') result=$((result * operand[j])) ;;\n   \
    \         '//') result=$((result / operand[j])) ;;\n            '**') result=$((result\
    \ ** operand[j])) ;;\n        esac\n        i=$((i + 1))\n        j=$((j + 1))\n\
    \        op=${operator[i]}\n    done\n    echo $result", "  local -a operator=(\"\
    $1\")\n  local -a operand=(\"$2\")\n  local result=0\n  local i=0\n  local j=0\n\
    \  local op=''\n  local op1=''\n  local op2=''\n  local op3=''\n  local op4=''\n\
    \  local op5=''\n  local op6=''\n  local op7=''\n  local op8=''\n  local op9=''\n\
    \  local op10=''\n  local op11=''\n  local op12=''\n  local op13=''\n  local op14=''\n\
    \  local op15=''\n  local op16=''\n  local op17=''\n  local op18=''\n  local op19=''\n\
    \  local op20=''\n  local op21=''\n  local op22=''\n  local op23=''\n  local op24=''\n\
    \  local op25=''\n  local op26=''\n  local op27=''\n  local op28=''\n  local op29=''\n\
    \  local op30=''\n  local op31=''\n  local op32=''\n  local op33=''\n  local op34=''\n\
    \  local op35=''\n  local op36=''\n  local op37=''\n  local op38=''\n  local op39=''\n\
    \  local op40=''\n  local op41=''\n  local op42=''\n  local op43=''\n  local op44=''\n\
    \  local op45=''\n  local op46=''\n  local op47=''\n  local op48=''\n  local op49=''\n\
    \  local op50=''\n  local op51=''\n  local op52=''\n  local op53=''\n  local op54=''\n\
    \  local op55=''\n  local op56=''\n  local op57=''\n  local op58=''\n  local op59=''\n\
    \  local op60=''\n  local op61=''\n  local op62=''\n  local op63=''\n  local op64=''\n\
    \  local op65=''\n  local op66=''\n  local", "  local -a operator\n  local -a\
    \ operand\n  local -a result\n  local -a temp\n  local -i i\n  local -i j\n  local\
    \ -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n\
    \  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local\
    \ -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i aa\n\
    \  local -i bb\n  local -i cc\n  local -i dd\n  local -i ee\n  local -i ff\n \
    \ local -i gg\n  local -i hh\n  local -i ii\n  local -i jj\n  local -i kk\n  local\
    \ -i ll\n  local -i mm\n  local -i nn\n  local -i oo\n  local -i pp\n  local -i\
    \ qq\n  local -i rr\n  local -i ss\n  local -i tt\n  local -i uu\n  local -i vv\n\
    \  local -i ww\n  local -i xx\n  local -i yy\n  local -i zz\n  local -i aaa\n\
    \  local -i bbb\n  local -i ccc\n  local -i ddd\n  local -i eee\n  local -i fff\n\
    \  local -i ggg\n  local -i hhh\n  local -i iii\n  local -i jjj\n  local -i kkk\n\
    \  local -i lll\n  local -i mmm\n  local -i nnn\n  local -i ooo\n  local -i ppp\n\
    \  local -i qqq\n  local -i rrr\n  local -i sss\n  local -i ttt\n  local -i uuu\n\
    \  local -i vvv\n  local -i www\n  local -i xxx\n  local -i yyy\n  local -i zzz\n\
    \  local -i aaaa\n  local -i bbbb\n  local -i cccc\n  local", "    local -a operator=($1)\n\
    \    local -a operand=($2)\n    local -i i=0\n    local -i result=${operand[0]}\n\
    \    for ((i=0; i<${#operator[@]}; i++)); do\n        case ${operator[$i]} in\n\
    \            '+') result=$((result + ${operand[$((i+1))]})) ;;\n            '-')\
    \ result=$((result - ${operand[$((i+1))]})) ;;\n            '*') result=$((result\
    \ * ${operand[$((i+1))]})) ;;\n            '//') result=$((result / ${operand[$((i+1))]}))\
    \ ;;\n            '**') result=$((result ** ${operand[$((i+1))]})) ;;\n      \
    \  esac\n    done\n    echo $result", "    local -a operator=($1)\n    local -a\
    \ operand=($2)\n    local -i i=0\n    local -i result=${operand[0]}\n    for ((i=0;\
    \ i<${#operator[@]}; i++)); do\n        case ${operator[$i]} in\n            '+')\n\
    \                result=$((result + ${operand[$((i+1))]}))\n                ;;\n\
    \            '-')\n                result=$((result - ${operand[$((i+1))]}))\n\
    \                ;;\n            '*')\n                result=$((result * ${operand[$((i+1))]}))\n\
    \                ;;\n            '//')\n                result=$((result / ${operand[$((i+1))]}))\n\
    \                ;;\n            '**')\n                result=$((result ** ${operand[$((i+1))]}))\n\
    \                ;;\n        esac\n    done\n    echo $result", "  local -a operator=($1)\n\
    \  local -a operand=($2)\n  local result=${operand[0]}\n  local i=0\n  while [\
    \ $i -lt ${#operator[@]} ]; do\n    case ${operator[$i]} in\n      \"+\") result=$((result\
    \ + ${operand[$((i+1))]}));;\n      \"-\") result=$((result - ${operand[$((i+1))]}));;\n\
    \      \"*\") result=$((result * ${operand[$((i+1))]}));;\n      \"//\") result=$((result\
    \ / ${operand[$((i+1))]}));;\n      \"**\") result=$((result ** ${operand[$((i+1))]}));;\n\
    \    esac\n    i=$((i+1))\n  done\n  echo $result", "  local -a operator=($1)\n\
    \  local -a operand=($2)\n  local -a expression\n  local -i i=0\n  local -i j=0\n\
    \  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n\
    \  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n\
    \  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n\
    \  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i\
    \ dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n \
    \ local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i\
    \ mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n \
    \ local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i\
    \ vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n \
    \ local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local\
    \ -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n\
    \  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0", "  \
    \  local -a operator=(\"$1\")\n    local -a operand=(\"$2\")\n    local -i result=0\n\
    \    local -i i=0\n    local -i len=${#operator[@]}\n    local -i len2=${#operand[@]}\n\
    \    local -i len3=$len2-1\n    if [ $len -ne $len3 ]; then\n        echo \"The\
    \ length of operator list is not equal to the length of operand list minus one.\"\
    \n        exit 1\n    fi\n    if [ $len2 -lt 2 ]; then\n        echo \"Operand\
    \ is a list of of non-negative integers.\"\n        exit 1\n    fi\n    if [ $len\
    \ -lt 1 ]; then\n        echo \"Operator list has at least one operator, and operand\
    \ list has at least two operands.\"\n        exit 1\n    fi\n    result=${operand[0]}\n\
    \    for ((i=0; i<$len; i++)); do\n        case ${operator[$i]} in\n         \
    \   \"+\")\n                result=$((result+${operand[$i+1]}))\n            \
    \    ;;\n            \"-\")\n                result=$((result-${operand[$i+1]}))\n\
    \                ;;\n            \"*\")\n                result=$((result*${operand[$i+1]}))\n\
    \                ;;\n            \"//\")\n                result=$((result/${operand[$i+1]}))\n\
    \                ;;\n            \"**\")\n                result=$((result**${operand[$i+1]}))\n\
    \                ;;\n            *)\n                echo \"Invalid operator:\
    \ ${operator[$i]}\"\n                exit 1\n                ;;\n        esac\n\
    \    done\n    echo $result", "    local -a operator=(\"$1\")\n    local -a operand=(\"\
    $2\")\n    local result=${operand[0]}\n    local i=0\n    for ((i=0; i<${#operator[@]};\
    \ i++)); do\n        case ${operator[$i]} in\n            \"+\")\n           \
    \     result=$((result + ${operand[$((i+1))]}))\n                ;;\n        \
    \    \"-\")\n                result=$((result - ${operand[$((i+1))]}))\n     \
    \           ;;\n            \"*\")\n                result=$((result * ${operand[$((i+1))]}))\n\
    \                ;;\n            \"//\")\n                result=$((result / ${operand[$((i+1))]}))\n\
    \                ;;\n            \"**\")\n                result=$((result **\
    \ ${operand[$((i+1))]}))\n                ;;\n        esac\n    done\n    echo\
    \ $result", "    local -a operator=($1)\n    local -a operand=($2)\n    local\
    \ -i result=${operand[0]}\n    local -i i=0\n    local -i j=1\n    local -i len=${#operator[@]}\n\
    \    while [ $i -lt $len ]; do\n        case ${operator[$i]} in\n            '+')\n\
    \                result=$((result + ${operand[$j]}))\n                ;;\n   \
    \         '-')\n                result=$((result - ${operand[$j]}))\n        \
    \        ;;\n            '*')\n                result=$((result * ${operand[$j]}))\n\
    \                ;;\n            '//')\n                result=$((result / ${operand[$j]}))\n\
    \                ;;\n            '**')\n                result=$((result ** ${operand[$j]}))\n\
    \                ;;\n        esac\n        ((i++))\n        ((j++))\n    done\n\
    \    echo $result", "    local operator=($1)\n    local operand=($2)\n    local\
    \ result=${operand[0]}\n    local i=0\n    while [ $i -lt ${#operator[@]} ]; do\n\
    \        case ${operator[$i]} in\n            '+')\n                result=$((result\
    \ + ${operand[$((i+1))]}))\n                ;;\n            '-')\n           \
    \     result=$((result - ${operand[$((i+1))]}))\n                ;;\n        \
    \    '*')\n                result=$((result * ${operand[$((i+1))]}))\n       \
    \         ;;\n            '//')\n                result=$((result / ${operand[$((i+1))]}))\n\
    \                ;;\n            '**')\n                result=$((result ** ${operand[$((i+1))]}))\n\
    \                ;;\n        esac\n        i=$((i+1))\n    done\n    echo $result",
  "  local -a operator=($1)\n  local -a operand=($2)\n  local result=${operand[0]}\n\
    \  local i=0\n  for ((i=0; i<${#operator[@]}; i++)); do\n    case ${operator[$i]}\
    \ in\n      '+') result=$((result + ${operand[$((i+1))]})) ;;\n      '-') result=$((result\
    \ - ${operand[$((i+1))]})) ;;\n      '*') result=$((result * ${operand[$((i+1))]}))\
    \ ;;\n      '//') result=$((result / ${operand[$((i+1))]})) ;;\n      '**') result=$((result\
    \ ** ${operand[$((i+1))]})) ;;\n    esac\n  done\n  echo $result", "    local\
    \ -a operator=(\"$1\")\n    local -a operand=(\"$2\")\n    local -a result\n \
    \   local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local\
    \ -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n\
    \    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local\
    \ -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\
    \    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n\
    \    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n\
    \    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n\
    \    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n\
    \    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n\
    \    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n\
    \    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n\
    \    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n\
    \    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n\
    \    local -i kkk=0\n    local -i lll=0\n    local -i mmm", "  local operator=\"\
    $1\"\n  local operand=\"$2\"\n  local result=0\n  local i=0\n  local op=''\n \
    \ local op1=''\n  local op2=''\n  local op_list=''\n  local op_list_len=0\n  local\
    \ op_list_idx=0\n  local op_list_idx_max=0\n  local op_list_idx_min=0\n  local\
    \ op_list_idx_mid=0\n  local op_list_idx_mid_prev=0\n  local op_list_idx_mid_next=0\n\
    \  local op_list_idx_mid_prev_op=''\n  local op_list_idx_mid_next_op=''\n  local\
    \ op_list_idx_mid_prev_op_precedence=0\n  local op_list_idx_mid_next_op_precedence=0\n\
    \  local op_list_idx_mid_prev_op_associativity=''\n  local op_list_idx_mid_next_op_associativity=''\n\
    \  local op_list_idx_mid_prev_op_precedence_max=0\n  local op_list_idx_mid_next_op_precedence_max=0\n\
    \  local op_list_idx_mid_prev_op_precedence_min=0\n  local op_list_idx_mid_next_op_precedence_min=0\n\
    \  local op_list_idx_mid_prev_op_precedence_mid=0\n  local op_list_idx_mid_next_op_precedence_mid=0\n\
    \  local op_list_idx_mid_prev_op_precedence_mid_prev=0\n  local op_list_idx_mid_next_op_precedence_mid_prev=0\n\
    \  local op_list_idx_mid_prev_op_precedence_mid_next=0\n  local op_list_idx_mid_next_op_precedence_mid_next=0\n\
    \  local op_list_idx", "    local -a operator=($1)\n    local -a operand=($2)\n\
    \    local -a result=()\n    local -i i=0\n    local -i j=0\n    local -i k=0\n\
    \    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local\
    \ -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n\
    \    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local\
    \ -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i\
    \ cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i\
    \ gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i\
    \ kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i\
    \ oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i\
    \ ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i\
    \ ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i\
    \ aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local\
    \ -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local\
    \ -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local\
    \ -i mmm", "    local -a operator=($1)\n    local -a operand=($2)\n    local -a\
    \ result=(${operand[0]})\n    local -i i=0\n    local -i j=1\n    local -i k=0\n\
    \    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local\
    \ -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n\
    \    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local\
    \ -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i\
    \ cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i\
    \ gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i\
    \ kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i\
    \ oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i\
    \ ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i\
    \ ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i\
    \ aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local\
    \ -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local\
    \ -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n", " \
    \ local -a operator=($1)\n  local -a operand=($2)\n  local -a expression\n  local\
    \ -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local\
    \ -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local\
    \ -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local\
    \ -i x=0\n  local -i y=0\n  local -i z=0\n  local -i result=0\n  local -i length=${#operator[@]}\n\
    \  local -i length2=${#operand[@]}\n  local -i length3=$((length2-1))\n  local\
    \ -i length4=$((length2-2))\n  local -i length5=$((length2-3))\n  local -i length6=$((length2-4))\n\
    \  local -i length7=$((length2-5))\n  local -i length8=$((length2-6))\n  local\
    \ -i length9=$((length2-7))\n  local -i length10=$((length2-8))\n  local -i length11=$((length2-9))\n\
    \  local -i length12=$((length2-10))\n  local -i length13=$((length2-11))\n  local\
    \ -i length14=$((length2-12))\n  local -i length15=$((length2-13))\n  local -i\
    \ length16=$((length2-14))\n  local -i length17=$((length2-15))\n  local -i length18=$((length2-16))\n\
    \  local -i length19=$((length2-17))\n  local -i length20=$((length2-18))\n  local\
    \ -i length21=$((length2-19))\n  local -i length22=$((length2-20))\n  local -i\
    \ length23=$((length2-21))\n  local -i length24=$((length2", "    local -a operator=(\"\
    $1\")\n    local -a operand=(\"$2\")\n    local -i i=0\n    local -i result=${operand[0]}\n\
    \    local -i len=${#operator[@]}\n    for ((i=0; i<len; i++)); do\n        case\
    \ ${operator[i]} in\n            '+') result=$((result + operand[i+1])) ;;\n \
    \           '-') result=$((result - operand[i+1])) ;;\n            '*') result=$((result\
    \ * operand[i+1])) ;;\n            '//') result=$((result / operand[i+1])) ;;\n\
    \            '**') result=$((result ** operand[i+1])) ;;\n        esac\n    done\n\
    \    echo $result", "    local -a operator=($1)\n    local -a operand=($2)\n \
    \   local -a result=()\n    local -i i=0\n    local -i j=0\n    local -i k=0\n\
    \    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local\
    \ -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n\
    \    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local\
    \ -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i\
    \ cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i\
    \ gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i\
    \ kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i\
    \ oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i\
    \ ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i\
    \ ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i\
    \ aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local\
    \ -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local\
    \ -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local\
    \ -i mmm", "    local operator=($1)\n    local operand=($2)\n    local result=${operand[0]}\n\
    \    local i=0\n    while [ $i -lt ${#operator[@]} ]; do\n        case ${operator[$i]}\
    \ in\n            \"+\") result=$((result + ${operand[$((i+1))]}));;\n       \
    \     \"-\") result=$((result - ${operand[$((i+1))]}));;\n            \"*\") result=$((result\
    \ * ${operand[$((i+1))]}));;\n            \"//\") result=$((result / ${operand[$((i+1))]}));;\n\
    \            \"**\") result=$((result ** ${operand[$((i+1))]}));;\n        esac\n\
    \        i=$((i+1))\n    done\n    echo $result", "  local -a operator=($1)\n\
    \  local -a operand=($2)\n  local result=\"${operand[0]}\"\n  for ((i=0; i<${#operator[@]};\
    \ i++)); do\n    case \"${operator[$i]}\" in\n      '+') result=$((result + ${operand[$i+1]}))\
    \ ;;\n      '-') result=$((result - ${operand[$i+1]})) ;;\n      '*') result=$((result\
    \ * ${operand[$i+1]})) ;;\n      '//') result=$((result / ${operand[$i+1]})) ;;\n\
    \      '**') result=$((result ** ${operand[$i+1]})) ;;\n    esac\n  done\n  echo\
    \ $result", "    local -a operator=($1)\n    local -a operand=($2)\n    local\
    \ -i i=0\n    local -i result=${operand[0]}\n    local -i len=${#operator[@]}\n\
    \    while [ $i -lt $len ]; do\n        case ${operator[$i]} in\n            '+')\
    \ result=$((result + ${operand[$i+1]}));;\n            '-') result=$((result -\
    \ ${operand[$i+1]}));;\n            '*') result=$((result * ${operand[$i+1]}));;\n\
    \            '//') result=$((result / ${operand[$i+1]}));;\n            '**')\
    \ result=$((result ** ${operand[$i+1]}));;\n        esac\n        ((i++))\n  \
    \  done\n    echo $result", "  local operator=($1)\n  local operand=($2)\n  local\
    \ result=${operand[0]}\n  local i=0\n  for ((i=0; i<${#operator[@]}; i++)); do\n\
    \    case ${operator[$i]} in\n      '+') result=$((result + ${operand[$((i+1))]}))\
    \ ;;\n      '-') result=$((result - ${operand[$((i+1))]})) ;;\n      '*') result=$((result\
    \ * ${operand[$((i+1))]})) ;;\n      '//') result=$((result / ${operand[$((i+1))]}))\
    \ ;;\n      '**') result=$((result ** ${operand[$((i+1))]})) ;;\n    esac\n  done\n\
    \  echo $result", "    local -a operator=($1)\n    local -a operand=($2)\n   \
    \ local result=${operand[0]}\n    local i=0\n    local j=1\n    while [ $i -lt\
    \ ${#operator[@]} ]; do\n        case ${operator[$i]} in\n            '+') result=$((result\
    \ + operand[$j])) ;;\n            '-') result=$((result - operand[$j])) ;;\n \
    \           '*') result=$((result * operand[$j])) ;;\n            '//') result=$((result\
    \ / operand[$j])) ;;\n            '**') result=$((result ** operand[$j])) ;;\n\
    \        esac\n        i=$((i + 1))\n        j=$((j + 1))\n    done\n    echo\
    \ $result", "  local -a operator=(\"$1\")\n  local -a operand=(\"$2\")\n  local\
    \ -i result=${operand[0]}\n  local -i i=0\n  local -i j=1\n  local -i len=${#operator[@]}\n\
    \  while [ $i -lt $len ]; do\n    case ${operator[$i]} in\n      '+') result=$((result\
    \ + operand[$j])) ;;\n      '-') result=$((result - operand[$j])) ;;\n      '*')\
    \ result=$((result * operand[$j])) ;;\n      '//') result=$((result / operand[$j]))\
    \ ;;\n      '**') result=$((result ** operand[$j])) ;;\n    esac\n    i=$((i +\
    \ 1))\n    j=$((j + 1))\n  done\n  echo $result", "    local -a operator=(\"$1\"\
    )\n    local -a operand=(\"$2\")\n    local result=0\n    local i=0\n    local\
    \ j=0\n    local len=${#operator[@]}\n    local len2=${#operand[@]}\n    local\
    \ -a op_arr=()\n    local -a op_arr2=()\n    local -a op_arr3=()\n    local -a\
    \ op_arr4=()\n    local -a op_arr5=()\n    local -a op_arr6=()\n    local -a op_arr7=()\n\
    \    local -a op_arr8=()\n    local -a op_arr9=()\n    local -a op_arr10=()\n\
    \    local -a op_arr11=()\n    local -a op_arr12=()\n    local -a op_arr13=()\n\
    \    local -a op_arr14=()\n    local -a op_arr15=()\n    local -a op_arr16=()\n\
    \    local -a op_arr17=()\n    local -a op_arr18=()\n    local -a op_arr19=()\n\
    \    local -a op_arr20=()\n    local -a op_arr21=()\n    local -a op_arr22=()\n\
    \    local -a op_arr23=()\n    local -a op_arr24=()\n    local -a op_arr25=()\n\
    \    local -a op_arr26=()\n    local -a op_arr27=()\n    local -a op_arr28=()\n\
    \    local -a op_arr29=()\n    local -a op_arr30=()\n    local -a op_arr31=()\n\
    \    local -a op_arr32=()\n    local -a op_arr33=()\n    local -a op_arr34=()\n\
    \    local -a op_arr35=()\n    local -a op_arr36=()\n    local -a op_arr37=()\n\
    \    local -a op_arr38=()\n    local -a op_arr39=()\n    local -a op_arr40=()\n\
    \    local -a op_arr", "    local -a operator=(\"$1\")\n    local -a operand=(\"\
    $2\")\n    local result=${operand[0]}\n    local i=0\n    while [ $i -lt ${#operator[@]}\
    \ ]; do\n        case ${operator[$i]} in\n            '+') result=$((result +\
    \ ${operand[$((i+1))]}));;\n            '-') result=$((result - ${operand[$((i+1))]}));;\n\
    \            '*') result=$((result * ${operand[$((i+1))]}));;\n            '//')\
    \ result=$((result / ${operand[$((i+1))]}));;\n            '**') result=$((result\
    \ ** ${operand[$((i+1))]}));;\n        esac\n        ((i++))\n    done\n    echo\
    \ $result", "  local -a operator\n  local -a operand\n  local -a expression\n\
    \  local -i i\n  local -i result\n\n  IFS=' ' read -r -a operator <<< \"$1\"\n\
    \  IFS=' ' read -r -a operand <<< \"$2\"\n\n  for ((i=0; i<${#operator[@]}; i++));\
    \ do\n    expression[i]=\"${operand[i]} ${operator[i]} ${operand[i+1]}\"\n  done\n\
    \n  result=$(IFS=';' eval \"echo $(IFS=';' echo \"${expression[*]}\")\")\n  echo\
    \ \"$result\"", "    local operator=($1)\n    local operand=($2)\n    local result=${operand[0]}\n\
    \    local i=0\n    local j=1\n    while [ $i -lt ${#operator[@]} ]; do\n    \
    \    case ${operator[$i]} in\n            \"+\") result=$((result + ${operand[$j]}));;\n\
    \            \"-\") result=$((result - ${operand[$j]}));;\n            \"*\")\
    \ result=$((result * ${operand[$j]}));;\n            \"//\") result=$((result\
    \ / ${operand[$j]}));;\n            \"**\") result=$((result ** ${operand[$j]}));;\n\
    \        esac\n        i=$((i + 1))\n        j=$((j + 1))\n    done\n    echo\
    \ $result", "    local -a operator=($1)\n    local -a operand=($2)\n    local\
    \ -a expression\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local\
    \ -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n\
    \    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local\
    \ -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n\
    \    local -i z=0\n    local -i result=0\n    local -i len_operator=${#operator[@]}\n\
    \    local -i len_operand=${#operand[@]}\n    local -i len_expression=${#expression[@]}\n\
    \    local -i len_expression_max=$((len_operator + len_operand))\n    local -i\
    \ len_expression_min=$((len_expression_max - 1))\n    local -i len_expression_mid=$((len_expression_max\
    \ / 2))\n    local -i len_expression_mid_left=$((len_expression_mid - 1))\n  \
    \  local -i len_expression_mid_right=$((len_expression_mid + 1))\n    local -i\
    \ len_expression_mid_left_left=$((len_expression_mid_left - 1))\n    local -i\
    \ len_expression_mid_left_right=$((len_expression_mid_left + 1))\n    local -i\
    \ len_expression_mid_right_left=$((len_expression_mid_right - 1))\n    local -i\
    \ len_expression_mid_right_right=$((len_expression_mid_right + 1))\n    local\
    \ -i len_expression_mid_left_left_left=$((len_expression_mid_left_left - 1))\n\
    \    local -i len_expression_mid_left_left_right=$((len_expression_mid_left_left\
    \ + 1))\n    local -i len_expression_mid_left_right_left=$", "    local -a operator\n\
    \    local -a operand\n    local -i i\n    local -i n\n    local -i result\n \
    \   local -i op1\n    local -i op2\n    local -i op3\n    local -i op4\n    local\
    \ -i op5\n    local -i op6\n    local -i op7\n    local -i op8\n    local -i op9\n\
    \    local -i op10\n    local -i op11\n    local -i op12\n    local -i op13\n\
    \    local -i op14\n    local -i op15\n    local -i op16\n    local -i op17\n\
    \    local -i op18\n    local -i op19\n    local -i op20\n    local -i op21\n\
    \    local -i op22\n    local -i op23\n    local -i op24\n    local -i op25\n\
    \    local -i op26\n    local -i op27\n    local -i op28\n    local -i op29\n\
    \    local -i op30\n    local -i op31\n    local -i op32\n    local -i op33\n\
    \    local -i op34\n    local -i op35\n    local -i op36\n    local -i op37\n\
    \    local -i op38\n    local -i op39\n    local -i op40\n    local -i op41\n\
    \    local -i op42\n    local -i op43\n    local -i op44\n    local -i op45\n\
    \    local -i op46\n    local -i op47\n    local -i op48\n    local -i op49\n\
    \    local -i op50\n    local -i op51\n    local -i op52\n    local -i op53\n\
    \    local -i op54\n    local -i op55\n    local -i op56\n    local -i op57\n\
    \    local -i op58\n    local -i op59\n    local -i op60\n    local -i op61\n\
    \    local -i op62\n    local -i op63\n    local -i op64\n    local -i op65\n\
    \    local -i op66\n    local -i op67\n    local -i op68\n    local -i", "   \
    \ local -a operator=($1)\n    local -a operand=($2)\n    local -a result=()\n\
    \    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local\
    \ -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n\
    \    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local\
    \ -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\
    \    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n\
    \    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n\
    \    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n\
    \    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n\
    \    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n\
    \    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n\
    \    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n\
    \    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n\
    \    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n\
    \    local -i kkk=0\n    local -i lll=0\n    local -i mmm", "  local operators=($1)\n\
    \  local operands=($2)\n  local result=${operands[0]}\n  local i=0\n  for ((i=0;\
    \ i<${#operators[@]}; i++)); do\n    case ${operators[$i]} in\n      '+') result=$((result\
    \ + ${operands[$((i+1))]})) ;;\n      '-') result=$((result - ${operands[$((i+1))]}))\
    \ ;;\n      '*') result=$((result * ${operands[$((i+1))]})) ;;\n      '//') result=$((result\
    \ / ${operands[$((i+1))]})) ;;\n      '**') result=$((result ** ${operands[$((i+1))]}))\
    \ ;;\n    esac\n  done\n  echo $result", "  local -a operator=($1)\n  local -a\
    \ operand=($2)\n  local result=${operand[0]}\n  local i=0\n  local j=1\n  while\
    \ [ $i -lt ${#operator[@]} ]; do\n    case ${operator[$i]} in\n      '+')\n  \
    \      result=$((result + ${operand[$j]}))\n        ;;\n      '-')\n        result=$((result\
    \ - ${operand[$j]}))\n        ;;\n      '*')\n        result=$((result * ${operand[$j]}))\n\
    \        ;;\n      '//')\n        result=$((result / ${operand[$j]}))\n      \
    \  ;;\n      '**')\n        result=$((result ** ${operand[$j]}))\n        ;;\n\
    \    esac\n    i=$((i + 1))\n    j=$((j + 1))\n  done\n  echo $result", "    local\
    \ -a operator=($1)\n    local -a operand=($2)\n    local result=${operand[0]}\n\
    \    local i=0\n    for ((i=0; i<${#operator[@]}; i++)); do\n        case ${operator[$i]}\
    \ in\n            '+') result=$((result + ${operand[$((i+1))]})) ;;\n        \
    \    '-') result=$((result - ${operand[$((i+1))]})) ;;\n            '*') result=$((result\
    \ * ${operand[$((i+1))]})) ;;\n            '//') result=$((result / ${operand[$((i+1))]}))\
    \ ;;\n            '**') result=$((result ** ${operand[$((i+1))]})) ;;\n      \
    \  esac\n    done\n    echo $result", "    local -a operator=($1)\n    local -a\
    \ operand=($2)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n\
    \    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local\
    \ -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i\
    \ kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i\
    \ oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i\
    \ ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i\
    \ ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i\
    \ aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i\
    \ ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i\
    \ iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local\
    \ -i mmm=0\n    local -i n", "    local -a operators=($1)\n    local -a operands=($2)\n\
    \    local -a result=()\n    local -i i=0\n    local -i j=0\n    local -i k=0\n\
    \    local -i len=${#operators[@]}\n    local -i len2=${#operands[@]}\n    local\
    \ -i len3=${#result[@]}\n    local -i len4=0\n    local -i len5=0\n    local -i\
    \ len6=0\n    local -i len7=0\n    local -i len8=0\n    local -i len9=0\n    local\
    \ -i len10=0\n    local -i len11=0\n    local -i len12=0\n    local -i len13=0\n\
    \    local -i len14=0\n    local -i len15=0\n    local -i len16=0\n    local -i\
    \ len17=0\n    local -i len18=0\n    local -i len19=0\n    local -i len20=0\n\
    \    local -i len21=0\n    local -i len22=0\n    local -i len23=0\n    local -i\
    \ len24=0\n    local -i len25=0\n    local -i len26=0\n    local -i len27=0\n\
    \    local -i len28=0\n    local -i len29=0\n    local -i len30=0\n    local -i\
    \ len31=0\n    local -i len32=0\n    local -i len33=0\n    local -i len34=0\n\
    \    local -i len35=0\n    local -i len36=0\n    local -i len37=0\n    local -i\
    \ len38=0\n    local -i len39=0\n    local -i len40=0\n    local -i len41=0\n\
    \    local -i len42=0\n    local -i len43=0\n    local -i len44=0\n    local -i\
    \ len45=0\n    local -i len46=0\n    local -i len47=0\n    local -i len48=0\n\
    \    local -i len49=0\n   ", "    local -a operator=($1)\n    local -a operand=($2)\n\
    \    local result=${operand[0]}\n    for ((i=0; i<${#operator[@]}; i++)); do\n\
    \        case ${operator[$i]} in\n            '+') result=$((result + ${operand[$((i+1))]}))\
    \ ;;\n            '-') result=$((result - ${operand[$((i+1))]})) ;;\n        \
    \    '*') result=$((result * ${operand[$((i+1))]})) ;;\n            '//') result=$((result\
    \ / ${operand[$((i+1))]})) ;;\n            '**') result=$((result ** ${operand[$((i+1))]}))\
    \ ;;\n        esac\n    done\n    echo $result", "    local -a operator=(\"$1\"\
    )\n    local -a operand=(\"$2\")\n    local result=${operand[0]}\n    local i=0\n\
    \    local j=1\n    while [ $i -lt ${#operator[@]} ]; do\n        case ${operator[$i]}\
    \ in\n            '+')\n                result=$((result + operand[$j]))\n   \
    \             ;;\n            '-')\n                result=$((result - operand[$j]))\n\
    \                ;;\n            '*')\n                result=$((result * operand[$j]))\n\
    \                ;;\n            '//')\n                result=$((result / operand[$j]))\n\
    \                ;;\n            '**')\n                result=$((result ** operand[$j]))\n\
    \                ;;\n        esac\n        i=$((i + 1))\n        j=$((j + 1))\n\
    \    done\n    echo $result", "    local -a operator=($1)\n    local -a operand=($2)\n\
    \    local i=0\n    local result=${operand[0]}\n    for ((i=0; i<${#operator[@]};\
    \ i++)); do\n        case ${operator[$i]} in\n            '+')\n             \
    \   result=$((result + ${operand[$((i+1))]}))\n                ;;\n          \
    \  '-')\n                result=$((result - ${operand[$((i+1))]}))\n         \
    \       ;;\n            '*')\n                result=$((result * ${operand[$((i+1))]}))\n\
    \                ;;\n            '//')\n                result=$((result / ${operand[$((i+1))]}))\n\
    \                ;;\n            '**')\n                result=$((result ** ${operand[$((i+1))]}))\n\
    \                ;;\n        esac\n    done\n    echo $result", "  local -a operator=($1)\n\
    \  local -a operand=($2)\n  local result=${operand[0]}\n  local i=0\n  while [\
    \ $i -lt ${#operator[@]} ]; do\n    case ${operator[$i]} in\n      '+') result=$((result\
    \ + ${operand[$((i+1))]}));;\n      '-') result=$((result - ${operand[$((i+1))]}));;\n\
    \      '*') result=$((result * ${operand[$((i+1))]}));;\n      '//') result=$((result\
    \ / ${operand[$((i+1))]}));;\n      '**') result=$((result ** ${operand[$((i+1))]}));;\n\
    \    esac\n    ((i++))\n  done\n  echo $result", "    local -a operator=(\"$1\"\
    )\n    local -a operand=(\"$2\")\n    local -i result=0\n    local -i i=0\n  \
    \  local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local\
    \ -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n\
    \    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local\
    \ -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n\
    \    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local\
    \ -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i\
    \ dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i\
    \ hh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\
    \ -i lll=0\n    local -i mmm=0\n    local -", "  local -a operator=($1)\n  local\
    \ -a operand=($2)\n  local result=${operand[0]}\n  local i=0\n  while [ $i -lt\
    \ ${#operator[@]} ]; do\n    case ${operator[$i]} in\n      \"+\") result=$((result\
    \ + ${operand[$((i+1))]}));;\n      \"-\") result=$((result - ${operand[$((i+1))]}));;\n\
    \      \"*\") result=$((result * ${operand[$((i+1))]}));;\n      \"//\") result=$((result\
    \ / ${operand[$((i+1))]}));;\n      \"**\") result=$((result ** ${operand[$((i+1))]}));;\n\
    \    esac\n    i=$((i+1))\n  done\n  echo $result", "    local -a operator=($1)\n\
    \    local -a operand=($2)\n    local result=${operand[0]}\n    local i=0\n  \
    \  local j=1\n    while [ $i -lt ${#operator[@]} ]; do\n        case ${operator[$i]}\
    \ in\n            '+')\n                result=$((result + ${operand[$j]}))\n\
    \                ;;\n            '-')\n                result=$((result - ${operand[$j]}))\n\
    \                ;;\n            '*')\n                result=$((result * ${operand[$j]}))\n\
    \                ;;\n            '//')\n                result=$((result / ${operand[$j]}))\n\
    \                ;;\n            '**')\n                result=$((result ** ${operand[$j]}))\n\
    \                ;;\n        esac\n        i=$((i + 1))\n        j=$((j + 1))\n\
    \    done\n    echo $result", "    local -a operator=($1)\n    local -a operand=($2)\n\
    \    local result=${operand[0]}\n    local i=0\n    local op=${operator[$i]}\n\
    \    local op1=${operand[$((i+1))]}\n    while [ $i -lt ${#operator[@]} ]; do\n\
    \        case $op in\n            '+') result=$((result + op1)) ;;\n         \
    \   '-') result=$((result - op1)) ;;\n            '*') result=$((result * op1))\
    \ ;;\n            '//') result=$((result / op1)) ;;\n            '**') result=$((result\
    \ ** op1)) ;;\n        esac\n        i=$((i+1))\n        op=${operator[$i]}\n\
    \        op1=${operand[$((i+1))]}\n    done\n    echo $result", "    local -a\
    \ operator=($1)\n    local -a operand=($2)\n    local result=${operand[0]}\n \
    \   local i=0\n    for ((i=0; i<${#operator[@]}; i++)); do\n        case ${operator[$i]}\
    \ in\n            '+') result=$((result + ${operand[$((i+1))]})) ;;\n        \
    \    '-') result=$((result - ${operand[$((i+1))]})) ;;\n            '*') result=$((result\
    \ * ${operand[$((i+1))]})) ;;\n            '//') result=$((result / ${operand[$((i+1))]}))\
    \ ;;\n            '**') result=$((result ** ${operand[$((i+1))]})) ;;\n      \
    \  esac\n    done\n    echo $result", "    local -a operator=($1)\n    local -a\
    \ operand=($2)\n    local -i i=0\n    local -i result=${operand[0]}\n    for ((i=0;\
    \ i<${#operator[@]}; i++)); do\n        case ${operator[$i]} in\n            '+')\n\
    \                result=$((result + ${operand[$((i+1))]}))\n                ;;\n\
    \            '-')\n                result=$((result - ${operand[$((i+1))]}))\n\
    \                ;;\n            '*')\n                result=$((result * ${operand[$((i+1))]}))\n\
    \                ;;\n            '//')\n                result=$((result / ${operand[$((i+1))]}))\n\
    \                ;;\n            '**')\n                result=$((result ** ${operand[$((i+1))]}))\n\
    \                ;;\n        esac\n    done\n    echo $result", "    local -a\
    \ operator=(\"$1\")\n    local -a operand=(\"$2\")\n    local -a result=()\n \
    \   local -a stack=()\n    local -i i=0\n    local -i j=0\n    local -i k=0\n\
    \    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local\
    \ -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n\
    \    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local\
    \ -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i\
    \ cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i\
    \ gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i\
    \ kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i\
    \ oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i\
    \ ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i\
    \ ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i\
    \ aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local\
    \ -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local\
    \ -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i ll", "  local\
    \ -a operator=($1)\n  local -a operand=($2)\n  local -a expression=()\n  local\
    \ -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local\
    \ -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local\
    \ -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local\
    \ -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n \
    \ local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n \
    \ local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i\
    \ pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n \
    \ local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i\
    \ yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n\
    \  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local\
    \ -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n\
    \  local -i mmm", "    local -a operator=($1)\n    local -a operand=($2)\n   \
    \ local -a result\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local\
    \ -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n\
    \    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local\
    \ -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n\
    \    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local\
    \ -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n\
    \    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n\
    \    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n\
    \    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n\
    \    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n\
    \    local -i yy=0\n    local -i zz=0\n    local -i aa=0\n    local -i bb=0\n\
    \    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n\
    \    local -i gg=0\n    local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n\
    \    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=",
  "  local -a operator=($1)\n  local -a operand=($2)\n  local result=${operand[0]}\n\
    \  for ((i=0; i<${#operator[@]}; i++)); do\n    case ${operator[$i]} in\n    \
    \  '+') result=$((result + ${operand[$((i+1))]})) ;;\n      '-') result=$((result\
    \ - ${operand[$((i+1))]})) ;;\n      '*') result=$((result * ${operand[$((i+1))]}))\
    \ ;;\n      '//') result=$((result / ${operand[$((i+1))]})) ;;\n      '**') result=$((result\
    \ ** ${operand[$((i+1))]})) ;;\n    esac\n  done\n  echo $result", "    local\
    \ -a operator=(\"$1\")\n    local -a operand=(\"$2\")\n    local -i i=0\n    local\
    \ -i result=${operand[0]}\n    for ((i=0; i<${#operator[@]}; i++)); do\n     \
    \   case ${operator[i]} in\n            \"+\") result=$((result + operand[i+1]))\
    \ ;;\n            \"-\") result=$((result - operand[i+1])) ;;\n            \"\
    *\") result=$((result * operand[i+1])) ;;\n            \"//\") result=$((result\
    \ / operand[i+1])) ;;\n            \"**\") result=$((result ** operand[i+1]))\
    \ ;;\n        esac\n    done\n    echo $result", "  local operator=\"$1\"\n  local\
    \ operand=\"$2\"\n  local result=$(echo \"$operand\" | awk '{print $1}')\n  local\
    \ i=1\n  local j=2\n  local op\n  local num\n  for op in $operator; do\n    num=$(echo\
    \ \"$operand\" | awk -v j=$j '{print $j}')\n    case $op in\n      '+') result=$((result\
    \ + num));;\n      '-') result=$((result - num));;\n      '*') result=$((result\
    \ * num));;\n      '//') result=$((result / num));;\n      '**') result=$((result\
    \ ** num));;\n    esac\n    i=$((i + 1))\n    j=$((j + 1))\n  done\n  echo $result",
  "  local -a operator=($1)\n  local -a operand=($2)\n  local -i result=${operand[0]}\n\
    \  local -i i=0\n  for ((i=0; i<${#operator[@]}; i++)); do\n    case ${operator[$i]}\
    \ in\n      '+') result=$((result + ${operand[$((i+1))]}));;\n      '-') result=$((result\
    \ - ${operand[$((i+1))]}));;\n      '*') result=$((result * ${operand[$((i+1))]}));;\n\
    \      '//') result=$((result / ${operand[$((i+1))]}));;\n      '**') result=$((result\
    \ ** ${operand[$((i+1))]}));;\n    esac\n  done\n  echo $result", "  local -a\
    \ operator=(\"$1\")\n  local -a operand=(\"$2\")\n  local -a result=()\n  local\
    \ -a stack=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n\
    \  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n\
    \  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n\
    \  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i op_len=${#operator[@]}\n\
    \  local -i opd_len=${#operand[@]}\n  local -i result_len=0\n  local -i stack_len=0\n\
    \  local -i op_index=0\n  local -i opd_index=0\n  local -i result_index=0\n  local\
    \ -i stack_index=0\n  local -i op_count=0\n  local -i opd_count=0\n  local -i\
    \ result_count=0\n  local -i stack_count=0\n  local -i op_pos=0\n  local -i opd_pos=0\n\
    \  local -i result_pos=0\n  local -i stack_pos=0\n  local -i op_len_minus_1=0\n\
    \  local -i opd_len_minus_1=0\n  local -i result_len_minus_1=0\n  local -i stack_len_minus_1=0\n\
    \  local -i op_len_minus_2=0\n  local -i opd_len_minus_2=0\n  local -i result_len_minus_2=0\n\
    \  local -i stack_len_minus_2=0\n  local -i op_len_minus_3=0\n  local -i opd_len_minus_3=0\n\
    \  local -i result_len_minus_", "    local -a operator=($1)\n    local -a operand=($2)\n\
    \    local result=${operand[0]}\n    for ((i=0; i<${#operator[@]}; i++)); do\n\
    \        case ${operator[$i]} in\n            '+')\n                result=$((result\
    \ + ${operand[$((i+1))]}))\n                ;;\n            '-')\n           \
    \     result=$((result - ${operand[$((i+1))]}))\n                ;;\n        \
    \    '*')\n                result=$((result * ${operand[$((i+1))]}))\n       \
    \         ;;\n            '//')\n                result=$((result / ${operand[$((i+1))]}))\n\
    \                ;;\n            '**')\n                result=$((result ** ${operand[$((i+1))]}))\n\
    \                ;;\n        esac\n    done\n    echo $result", "    local -a\
    \ operator=($1)\n    local -a operand=($2)\n    local -a expression\n    local\
    \ -i i\n    for ((i=0; i<${#operator[@]}; i++)); do\n        expression+=(${operand[i]})\n\
    \        expression+=(${operator[i]})\n    done\n    expression+=(${operand[i]})\n\
    \    echo \"${expression[@]}\" | sed 's/ /\\n/g' | bc", "    local -a operator=($1)\n\
    \    local -a operand=($2)\n    local result=${operand[0]}\n    local i=0\n  \
    \  local j=1\n    while [ $i -lt ${#operator[@]} ]; do\n        case ${operator[$i]}\
    \ in\n            '+')\n                result=$((result + ${operand[$j]}))\n\
    \                ;;\n            '-')\n                result=$((result - ${operand[$j]}))\n\
    \                ;;\n            '*')\n                result=$((result * ${operand[$j]}))\n\
    \                ;;\n            '//')\n                result=$((result / ${operand[$j]}))\n\
    \                ;;\n            '**')\n                result=$((result ** ${operand[$j]}))\n\
    \                ;;\n        esac\n        i=$((i + 1))\n        j=$((j + 1))\n\
    \    done\n    echo $result", "    local -a operator=($1)\n    local -a operand=($2)\n\
    \    local result=${operand[0]}\n    local i=0\n    for ((i=0; i<${#operator[@]};\
    \ i++)); do\n        case ${operator[$i]} in\n            '+') result=$((result\
    \ + ${operand[$((i+1))]})) ;;\n            '-') result=$((result - ${operand[$((i+1))]}))\
    \ ;;\n            '*') result=$((result * ${operand[$((i+1))]})) ;;\n        \
    \    '//') result=$((result / ${operand[$((i+1))]})) ;;\n            '**') result=$((result\
    \ ** ${operand[$((i+1))]})) ;;\n        esac\n    done\n    echo $result", " \
    \ local -a operator=(\"$1\")\n  local -a operand=(\"$2\")\n  local result=0\n\
    \  local i=0\n  local j=0\n  local op=''\n  local op1=''\n  local op2=''\n  local\
    \ op_len=${#operator[@]}\n  local opd_len=${#operand[@]}\n  local opd_len_minus_one=$((opd_len\
    \ - 1))\n  if [[ $op_len -ne $opd_len_minus_one ]]; then\n    echo \"The length\
    \ of operator list is not equal to the length of operand list minus one.\"\n \
    \   return 1\n  fi\n  if [[ $op_len -lt 1 ]]; then\n    echo \"Operator list has\
    \ at least one operator.\"\n    return 1\n  fi\n  if [[ $opd_len -lt 2 ]]; then\n\
    \    echo \"Operand list has at least two operands.\"\n    return 1\n  fi\n  for\
    \ i in ${operand[@]}; do\n    if [[ $i -lt 0 ]]; then\n      echo \"Operand is\
    \ a list of of non-negative integers.\"\n      return 1\n    fi\n  done\n  result=${operand[0]}\n\
    \  for ((i=0; i<op_len; i++)); do\n    op=${operator[$i]}\n    op1=$result\n \
    \   op2=${operand[$((i+1))]}\n    case $op in\n      '+')\n        result=$((op1\
    \ + op2))\n        ;;\n      '-')\n        result=$((op1 - op2))\n        ;;\n\
    \      '*')\n        result=$((op1 * op2))\n        ;;\n      '//')\n        result=$((op1\
    \ / op2))\n        ;;\n      '**')\n        result=$((op1 ** op2))\n        ;;\n\
    \      *)\n        echo \"Invalid operator: $op\"\n        return 1\n        ;;\n\
    \    esac\n  done\n  echo $result", "  local -a operator=($1)\n  local -a operand=($2)\n\
    \  local -i result=${operand[0]}\n  local -i i=0\n  local -i j=1\n  local -i k=${#operator[@]}\n\
    \  while [ $i -lt $k ]; do\n    case ${operator[$i]} in\n      '+') result=$((result\
    \ + ${operand[$j]}));;\n      '-') result=$((result - ${operand[$j]}));;\n   \
    \   '*') result=$((result * ${operand[$j]}));;\n      '//') result=$((result /\
    \ ${operand[$j]}));;\n      '**') result=$((result ** ${operand[$j]}));;\n   \
    \ esac\n    ((i++))\n    ((j++))\n  done\n  echo $result", "    local -a operator=($1)\n\
    \    local -a operand=($2)\n    local -i i=0\n    local -i j=0\n    local -i k=0\n\
    \    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local\
    \ -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n\
    \    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local\
    \ -i y=0\n    local -i z=0\n    local -i result=0\n    local -i len=${#operator[@]}\n\
    \    local -i len2=${#operand[@]}\n    local -i len3=$((len2 - 1))\n    if [[\
    \ $len -ne $len3 ]]; then\n        echo \"The length of operator list is not equal\
    \ to the length of operand list minus one.\"\n        return 1\n    fi\n    if\
    \ [[ $len -lt 1 ]]; then\n        echo \"Operator list has at least one operator.\"\
    \n        return 1\n    fi\n    if [[ $len2 -lt 2 ]]; then\n        echo \"Operand\
    \ list has at least two operands.\"\n        return 1\n    fi\n    for ((i=0;\
    \ i<len2; i++)); do\n        if [[ ${operand[$i]} -lt 0 ]]; then\n           \
    \ echo \"Operand is a list of of non-negative integers.\"\n            return\
    \ 1\n        fi\n    done\n    result=${operand[0]}\n    for ((j=0; j<len; j++));\
    \ do\n        case ${operator[$j]} in\n            '+')\n                result=$((result\
    \ + ${operand[$j+1]}))\n                ;;\n            '-')\n               \
    \ result=$((result - ${operand[$j+1]}))\n                ;;\n            '*')\n\
    \                result=$((result * ${operand[$j+1]}))\n                ;;\n \
    \           '//')\n                result=$((result / ${operand[$", "    local\
    \ -a operator=($1)\n    local -a operand=($2)\n    local -a result=()\n    local\
    \ i=0\n    local j=0\n    local k=0\n    local op=''\n    local op1=''\n    local\
    \ op2=''\n    local res=''\n    local len=${#operator[@]}\n    local len2=${#operand[@]}\n\
    \    if [ $len -ne $((len2-1)) ]; then\n        echo \"ERROR: operator and operand\
    \ lists are not the same length\"\n        return 1\n    fi\n    if [ $len -eq\
    \ 0 ]; then\n        echo \"ERROR: operator list is empty\"\n        return 1\n\
    \    fi\n    if [ $len2 -lt 2 ]; then\n        echo \"ERROR: operand list is too\
    \ short\"\n        return 1\n    fi\n    for ((i=0; i<len; i++)); do\n       \
    \ op=${operator[$i]}\n        op1=${operand[$i]}\n        op2=${operand[$((i+1))]}\n\
    \        if [ $op == '+' ]; then\n            res=$((op1+op2))\n        elif [\
    \ $op == '-' ]; then\n            res=$((op1-op2))\n        elif [ $op == '*'\
    \ ]; then\n            res=$((op1*op2))\n        elif [ $op == '//' ]; then\n\
    \            res=$((op1/op2))\n        elif [ $op == '**' ]; then\n          \
    \  res=$((op1**op2))\n        else\n            echo \"ERROR: unknown operator:\
    \ $op\"\n            return 1\n        fi\n        result[$k]=$res\n        k=$((k+1))\n\
    \    done\n    echo ${result[@]}", "    local -a operator=(\"$1\")\n    local\
    \ -a operand=(\"$2\")\n    local -a result=()\n    local -i i=0\n    local -i\
    \ j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n\
    \    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local\
    \ -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n\
    \    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n   \
    \ local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n   \
    \ local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n   \
    \ local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n   \
    \ local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n   \
    \ local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n   \
    \ local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n   \
    \ local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n\
    \    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n\
    \    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n\
    \    local -i lll=0\n    local -i", "    local -a operator=($1)\n    local -a\
    \ operand=($2)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\
    \ -i lll=0\n    local -i mmm", "  local -a operator=($1)\n  local -a operand=($2)\n\
    \  local result=${operand[0]}\n  local i=0\n  local j=1\n  for ((i=0; i<${#operator[@]};\
    \ i++)); do\n    case ${operator[$i]} in\n      '+') result=$((result + ${operand[$j]}));;\n\
    \      '-') result=$((result - ${operand[$j]}));;\n      '*') result=$((result\
    \ * ${operand[$j]}));;\n      '//') result=$((result / ${operand[$j]}));;\n  \
    \    '**') result=$((result ** ${operand[$j]}));;\n    esac\n    j=$((j+1))\n\
    \  done\n  echo $result", "  local -a operator=(\"$1\")\n  local -a operand=(\"\
    $2\")\n  local -a result=()\n  local -a temp=()\n  local -a temp_result=()\n \
    \ local -a temp_operator=()\n  local -a temp_operand=()\n  local -a temp_result=()\n\
    \  local -a temp_operator=()\n  local -a temp_operand=()\n  local -a temp_result=()\n\
    \  local -a temp_operator=()\n  local -a temp_operand=()\n  local -a temp_result=()\n\
    \  local -a temp_operator=()\n  local -a temp_operand=()\n  local -a temp_result=()\n\
    \  local -a temp_operator=()\n  local -a temp_operand=()\n  local -a temp_result=()\n\
    \  local -a temp_operator=()\n  local -a temp_operand=()\n  local -a temp_result=()\n\
    \  local -a temp_operator=()\n  local -a temp_operand=()\n  local -a temp_result=()\n\
    \  local -a temp_operator=()\n  local -a temp_operand=()\n  local -a temp_result=()\n\
    \  local -a temp_operator=()\n  local -a temp_operand=()\n  local -a temp_result=()\n\
    \  local -a temp_operator=()\n  local -a temp_operand=()\n  local -a temp_result=()\n\
    \  local -a temp_operator=()\n  local -a temp_operand=()\n  local -a temp_result=()\n\
    \  local -a temp_operator=()\n  local -a temp_operand=()\n  local -a temp_result=()\n\
    \  local -a temp_operator=()\n  local -a temp_operand=()\n  local -a temp_result=()\n\
    \  local -a temp_operator=()\n  local -a temp_operand=()\n  local -a temp_result=()\n\
    \  local -a temp_operator=()\n  local -a temp_operand=()\n  local -a temp_result",
  "  local operator=($1)\n  local operand=($2)\n  local result=${operand[0]}\n  local\
    \ i=0\n  while [ $i -lt ${#operator[@]} ]; do\n    case ${operator[$i]} in\n \
    \     '+') result=$((result + ${operand[$((i+1))]}));;\n      '-') result=$((result\
    \ - ${operand[$((i+1))]}));;\n      '*') result=$((result * ${operand[$((i+1))]}));;\n\
    \      '//') result=$((result / ${operand[$((i+1))]}));;\n      '**') result=$((result\
    \ ** ${operand[$((i+1))]}));;\n    esac\n    i=$((i+1))\n  done\n  echo $result",
  "    local -a operator=($1)\n    local -a operand=($2)\n    local -a result\n  \
    \  local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local\
    \ -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n\
    \    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local\
    \ -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\
    \    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n\
    \    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n\
    \    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n\
    \    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n\
    \    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n\
    \    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n\
    \    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n\
    \    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n\
    \    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n\
    \    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0", "  local operator=($1)\n\
    \  local operand=($2)\n  local result=${operand[0]}\n  local i=0\n  while [ $i\
    \ -lt ${#operator[@]} ]; do\n    case ${operator[$i]} in\n      '+') result=$((result\
    \ + ${operand[$((i+1))]}));;\n      '-') result=$((result - ${operand[$((i+1))]}));;\n\
    \      '*') result=$((result * ${operand[$((i+1))]}));;\n      '//') result=$((result\
    \ / ${operand[$((i+1))]}));;\n      '**') result=$((result ** ${operand[$((i+1))]}));;\n\
    \    esac\n    i=$((i+1))\n  done\n  echo $result", "    local -a operator=(\"\
    $1\")\n    local -a operand=(\"$2\")\n    local result=${operand[0]}\n    local\
    \ i=0\n    for ((i=0; i<${#operator[@]}; i++)); do\n        case ${operator[$i]}\
    \ in\n            '+') result=$((result + ${operand[$i+1]})) ;;\n            '-')\
    \ result=$((result - ${operand[$i+1]})) ;;\n            '*') result=$((result\
    \ * ${operand[$i+1]})) ;;\n            '//') result=$((result / ${operand[$i+1]}))\
    \ ;;\n            '**') result=$((result ** ${operand[$i+1]})) ;;\n        esac\n\
    \    done\n    echo $result", "  local -a operator=($1)\n  local -a operand=($2)\n\
    \  local -a result=()\n  local -a tmp=()\n  local -i i=0\n  local -i j=0\n  local\
    \ -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local\
    \ -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local\
    \ -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local\
    \ -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n\
    \  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i\
    \ ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n \
    \ local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i\
    \ rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n \
    \ local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i\
    \ aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n\
    \  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local\
    \ -i jjj=0\n  local -i kkk=0\n  local -i lll=", "    local -a operator=($1)\n\
    \    local -a operand=($2)\n    local result=${operand[0]}\n    local i=0\n  \
    \  while [ $i -lt ${#operator[@]} ]; do\n        case ${operator[$i]} in\n   \
    \         '+') result=$((result + ${operand[$((i+1))]}));;\n            '-') result=$((result\
    \ - ${operand[$((i+1))]}));;\n            '*') result=$((result * ${operand[$((i+1))]}));;\n\
    \            '//') result=$((result / ${operand[$((i+1))]}));;\n            '**')\
    \ result=$((result ** ${operand[$((i+1))]}));;\n        esac\n        i=$((i+1))\n\
    \    done\n    echo $result", "    local operator=\"$1\"\n    local operand=\"\
    $2\"\n    local op_list=($operator)\n    local opd_list=($operand)\n    local\
    \ result=${opd_list[0]}\n    local i=0\n    for ((i=0; i<${#op_list[@]}; i++));\
    \ do\n        case ${op_list[$i]} in\n            '+')\n                result=$((result\
    \ + ${opd_list[$((i+1))]}))\n                ;;\n            '-')\n          \
    \      result=$((result - ${opd_list[$((i+1))]}))\n                ;;\n      \
    \      '*')\n                result=$((result * ${opd_list[$((i+1))]}))\n    \
    \            ;;\n            '//')\n                result=$((result / ${opd_list[$((i+1))]}))\n\
    \                ;;\n            '**')\n                result=$((result ** ${opd_list[$((i+1))]}))\n\
    \                ;;\n        esac\n    done\n    echo $result", "    local operator=($1)\n\
    \    local operand=($2)\n    local result=${operand[0]}\n    local i=0\n    while\
    \ [ $i -lt ${#operator[@]} ]; do\n        case ${operator[$i]} in\n          \
    \  '+')\n                result=$((result + ${operand[$((i+1))]}))\n         \
    \       ;;\n            '-')\n                result=$((result - ${operand[$((i+1))]}))\n\
    \                ;;\n            '*')\n                result=$((result * ${operand[$((i+1))]}))\n\
    \                ;;\n            '//')\n                result=$((result / ${operand[$((i+1))]}))\n\
    \                ;;\n            '**')\n                result=$((result ** ${operand[$((i+1))]}))\n\
    \                ;;\n        esac\n        i=$((i+1))\n    done\n    echo $result",
  "    local -a operator=($1)\n    local -a operand=($2)\n    local -a result=()\n\
    \    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local\
    \ -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n\
    \    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local\
    \ -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\
    \    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n\
    \    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n\
    \    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n\
    \    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n\
    \    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n\
    \    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n\
    \    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n\
    \    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n\
    \    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n\
    \    local -i kkk=0\n    local -i lll=0\n    local -i mmm", "    local -a operator=(\"\
    $1\")\n    local -a operand=(\"$2\")\n    local -a result=()\n    local -a tmp=()\n\
    \    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local\
    \ -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n\
    \    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local\
    \ -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\
    \    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n\
    \    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n\
    \    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n\
    \    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n\
    \    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n\
    \    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n\
    \    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n\
    \    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n\
    \    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n\
    \    local -i kkk=0\n    local -i ll", "  local -a operator=($1)\n  local -a operand=($2)\n\
    \  local result=${operand[0]}\n  local i=0\n  local j=1\n  while [ $i -lt ${#operator[@]}\
    \ ]; do\n    case ${operator[$i]} in\n      '+') result=$((result + operand[$j]))\
    \ ;;\n      '-') result=$((result - operand[$j])) ;;\n      '*') result=$((result\
    \ * operand[$j])) ;;\n      '//') result=$((result / operand[$j])) ;;\n      '**')\
    \ result=$((result ** operand[$j])) ;;\n    esac\n    i=$((i + 1))\n    j=$((j\
    \ + 1))\n  done\n  echo $result", "  local operator=$1\n  local operand=$2\n \
    \ local result=0\n  local operand_count=0\n  local operator_count=0\n  local operand_list=()\n\
    \  local operator_list=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n\
    \  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n\
    \  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n\
    \  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n\
    \  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local\
    \ jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n\
    \  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local\
    \ uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n\
    \  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n \
    \ local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local\
    \ kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n\
    \  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n \
    \ local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz", "  local\
    \ -a operator=(\"$1\")\n  local -a operand=(\"$2\")\n  local result=${operand[0]}\n\
    \  local i=0\n  while [ $i -lt ${#operator[@]} ]; do\n    case ${operator[$i]}\
    \ in\n      '+') result=$((result + ${operand[$((i+1))]}));;\n      '-') result=$((result\
    \ - ${operand[$((i+1))]}));;\n      '*') result=$((result * ${operand[$((i+1))]}));;\n\
    \      '//') result=$((result / ${operand[$((i+1))]}));;\n      '**') result=$((result\
    \ ** ${operand[$((i+1))]}));;\n    esac\n    ((i++))\n  done\n  echo $result",
  "    local -a operator=($1)\n    local -a operand=($2)\n    local -a result=()\n\
    \    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local\
    \ -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n\
    \    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local\
    \ -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\
    \    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n\
    \    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n\
    \    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n\
    \    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n\
    \    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n\
    \    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n\
    \    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n\
    \    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n\
    \    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n\
    \    local -i kkk=0\n    local -i lll=0\n    local -i mmm", "    local -a operator\n\
    \    local -a operand\n    local -a result\n    local -i i\n    local -i j\n \
    \   local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n\
    \    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i\
    \ t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local\
    \ -i y\n    local -i z\n    local -i aa\n    local -i bb\n    local -i cc\n  \
    \  local -i dd\n    local -i ee\n    local -i ff\n    local -i gg\n    local -i\
    \ hh\n    local -i ii\n    local -i jj\n    local -i kk\n    local -i ll\n   \
    \ local -i mm\n    local -i nn\n    local -i oo\n    local -i pp\n    local -i\
    \ qq\n    local -i rr\n    local -i ss\n    local -i tt\n    local -i uu\n   \
    \ local -i vv\n    local -i ww\n    local -i xx\n    local -i yy\n    local -i\
    \ zz\n    local -i aaa\n    local -i bbb\n    local -i ccc\n    local -i ddd\n\
    \    local -i eee\n    local -i fff\n    local -i ggg\n    local -i hhh\n    local\
    \ -i iii\n    local -i jjj\n    local -i kkk\n    local -i lll\n    local -i mmm\n\
    \    local -i nnn\n    local -i ooo\n    local -i ppp\n    local -i qqq\n    local\
    \ -i rrr\n    local -i sss\n    local -i ttt\n    local -i uuu\n    local -i vvv\n\
    \    local -i www\n    local -i xxx\n    local -i yyy\n    local -i zzz\n    local\
    \ -i aaaa\n    local -i bbbb\n    local -i cccc\n    local -i dddd\n", "    local\
    \ operator=$1\n    local operand=$2\n    local result=0\n    local i=0\n    local\
    \ op=()\n    local opd=()\n    local op_len=0\n    local opd_len=0\n    local\
    \ op_str=''\n    local opd_str=''\n    local op_str_len=0\n    local opd_str_len=0\n\
    \    local op_str_arr=()\n    local opd_str_arr=()\n    local op_str_arr_len=0\n\
    \    local opd_str_arr_len=0\n    local op_str_arr_i=0\n    local opd_str_arr_i=0\n\
    \    local op_str_arr_j=0\n    local opd_str_arr_j=0\n    local op_str_arr_k=0\n\
    \    local opd_str_arr_k=0\n    local op_str_arr_l=0\n    local opd_str_arr_l=0\n\
    \    local op_str_arr_m=0\n    local opd_str_arr_m=0\n    local op_str_arr_n=0\n\
    \    local opd_str_arr_n=0\n    local op_str_arr_o=0\n    local opd_str_arr_o=0\n\
    \    local op_str_arr_p=0\n    local opd_str_arr_p=0\n    local op_str_arr_q=0\n\
    \    local opd_str_arr_q=0\n    local op_str_arr_r=0\n    local opd_str_arr_r=0\n\
    \    local op_str_arr_s=0\n    local opd_str_arr_s=0\n    local op_str_arr_t=0\n\
    \    local opd_str_arr_t=0\n    local op_str_arr_u=0\n    local opd_str_arr_u=0\n\
    \    local op_str_arr_v=0\n    local opd_str_arr_v=0\n    local op_str_arr_w=0\n\
    \    local opd_str_arr_w", "    local -a operator=($1)\n    local -a operand=($2)\n\
    \    local -a expression\n    local -i i\n    for ((i=0; i<${#operator[@]}; i++));\
    \ do\n        expression[i]=${operand[i]}\n        expression[i+1]=${operator[i]}\n\
    \    done\n    expression[i]=${operand[i]}\n    echo \"${expression[@]}\" | bc",
  "    local -a operator=($1)\n    local -a operand=($2)\n    local -i i=0\n    local\
    \ -i result=${operand[0]}\n    for ((i=0; i<${#operator[@]}; i++)); do\n     \
    \   case ${operator[$i]} in\n            '+') result=$((result + ${operand[$((i+1))]}))\
    \ ;;\n            '-') result=$((result - ${operand[$((i+1))]})) ;;\n        \
    \    '*') result=$((result * ${operand[$((i+1))]})) ;;\n            '//') result=$((result\
    \ / ${operand[$((i+1))]})) ;;\n            '**') result=$((result ** ${operand[$((i+1))]}))\
    \ ;;\n        esac\n    done\n    echo $result", "    local -a operator=(\"$1\"\
    )\n    local -a operand=(\"$2\")\n    local -a result\n    local -i i\n    local\
    \ -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local\
    \ -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local\
    \ -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local\
    \ -i y\n    local -i z\n    local -i aa\n    local -i bb\n    local -i cc\n  \
    \  local -i dd\n    local -i ee\n    local -i ff\n    local -i gg\n    local -i\
    \ hh\n    local -i ii\n    local -i jj\n    local -i kk\n    local -i ll\n   \
    \ local -i mm\n    local -i nn\n    local -i oo\n    local -i pp\n    local -i\
    \ qq\n    local -i rr\n    local -i ss\n    local -i tt\n    local -i uu\n   \
    \ local -i vv\n    local -i ww\n    local -i xx\n    local -i yy\n    local -i\
    \ zz\n    local -i aaa\n    local -i bbb\n    local -i ccc\n    local -i ddd\n\
    \    local -i eee\n    local -i fff\n    local -i ggg\n    local -i hhh\n    local\
    \ -i iii\n    local -i jjj\n    local -i kkk\n    local -i lll\n    local -i mmm\n\
    \    local -i nnn\n    local -i ooo\n    local -i ppp\n    local -i qqq\n    local\
    \ -i rrr\n    local -i sss\n    local -i ttt\n    local -i uuu\n    local -i vvv\n\
    \    local -i www\n    local -i xxx\n    local -i yyy\n    local -i zzz\n    local\
    \ -i aaaa\n    local -i bbbb\n    local -i ccc", "  local -a operator\n  local\
    \ -a operand\n  local -i i\n  local -i result\n  IFS=' ' read -r -a operator <<<\
    \ \"$1\"\n  IFS=' ' read -r -a operand <<< \"$2\"\n  result=${operand[0]}\n  for\
    \ ((i=0; i<${#operator[@]}; i++)); do\n    case \"${operator[i]}\" in\n      '+')\
    \ result=$((result + ${operand[i+1]})) ;;\n      '-') result=$((result - ${operand[i+1]}))\
    \ ;;\n      '*') result=$((result * ${operand[i+1]})) ;;\n      '//') result=$((result\
    \ / ${operand[i+1]})) ;;\n      '**') result=$((result ** ${operand[i+1]})) ;;\n\
    \    esac\n  done\n  echo \"$result\"", "    local -a operator\n    local -a operand\n\
    \    local -a result\n    local -i i=0\n    local -i j=0\n    local -i k=0\n \
    \   local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local\
    \ -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n\
    \    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local\
    \ -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i\
    \ cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i\
    \ gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i\
    \ kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i\
    \ oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i\
    \ ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i\
    \ ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i\
    \ aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local\
    \ -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local\
    \ -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local\
    \ -i mmm=0\n    local -i nnn=", "    local -a operator=($1)\n    local -a operand=($2)\n\
    \    local -a expression\n    local i\n    for ((i=0; i<${#operator[@]}; i++));\
    \ do\n        expression[$i]=${operand[$i]}\n        expression[$((i+1))]=${operator[$i]}\n\
    \    done\n    expression[$((i+1))]=${operand[$i]}\n    echo \"${expression[@]}\"\
    \ | bc", "  local -a operator=($1)\n  local -a operand=($2)\n  local -a result=(${operand[0]})\n\
    \  local -i i=0\n  local -i j=1\n  local -i k=0\n  local -i len=${#operator[@]}\n\
    \  local -i len2=${#operand[@]}\n  local -i len3=${#result[@]}\n  local -i len4=$((len2-1))\n\
    \  local -i len5=$((len4-1))\n  local -i len6=$((len5-1))\n  local -i len7=$((len6-1))\n\
    \  local -i len8=$((len7-1))\n  local -i len9=$((len8-1))\n  local -i len10=$((len9-1))\n\
    \  local -i len11=$((len10-1))\n  local -i len12=$((len11-1))\n  local -i len13=$((len12-1))\n\
    \  local -i len14=$((len13-1))\n  local -i len15=$((len14-1))\n  local -i len16=$((len15-1))\n\
    \  local -i len17=$((len16-1))\n  local -i len18=$((len17-1))\n  local -i len19=$((len18-1))\n\
    \  local -i len20=$((len19-1))\n  local -i len21=$((len20-1))\n  local -i len22=$((len21-1))\n\
    \  local -i len23=$((len22-1))\n  local -i len24=$((len23-1))\n  local -i len25=$((len24-1))\n\
    \  local -i len26=$((len25-1))\n  local -i len27=$((len26-1))\n  local -i len28=$((len27-1))\n\
    \  local -i len29=$((len28-1))\n  local -i len30=$((len29-1))\n  local -i len31=$((len30-1))\n\
    \  local -i len32=$((len31-1))\n  local -i", "  local -a operator=($1)\n  local\
    \ -a operand=($2)\n  local result=${operand[0]}\n  local i=0\n  while [ $i -lt\
    \ ${#operator[@]} ]; do\n    case ${operator[$i]} in\n      '+') result=$((result\
    \ + ${operand[$((i+1))]}));;\n      '-') result=$((result - ${operand[$((i+1))]}));;\n\
    \      '*') result=$((result * ${operand[$((i+1))]}));;\n      '//') result=$((result\
    \ / ${operand[$((i+1))]}));;\n      '**') result=$((result ** ${operand[$((i+1))]}));;\n\
    \    esac\n    i=$((i+1))\n  done\n  echo $result", "    local operator=($1)\n\
    \    local operand=($2)\n    local result=${operand[0]}\n    local i=0\n    while\
    \ [ $i -lt ${#operator[@]} ]; do\n        case ${operator[$i]} in\n          \
    \  '+') result=$((result + ${operand[$((i+1))]}));;\n            '-') result=$((result\
    \ - ${operand[$((i+1))]}));;\n            '*') result=$((result * ${operand[$((i+1))]}));;\n\
    \            '//') result=$((result / ${operand[$((i+1))]}));;\n            '**')\
    \ result=$((result ** ${operand[$((i+1))]}));;\n        esac\n        i=$((i+1))\n\
    \    done\n    echo $result", "    local -a operator=($1)\n    local -a operand=($2)\n\
    \    local -a result\n    local -i i=0\n    local -i j=0\n    local -i k=0\n \
    \   local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local\
    \ -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n\
    \    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local\
    \ -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i\
    \ cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i\
    \ gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i\
    \ kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i\
    \ oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i\
    \ ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i\
    \ ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i\
    \ aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local\
    \ -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local\
    \ -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local\
    \ -i mmm=0", "  local operator=$1\n  local operand=$2\n  local result=0\n  local\
    \ i=0\n  local op=()\n  local opr=()\n  local opr_len=0\n  local op_len=0\n  local\
    \ op_str=\"\"\n  local opr_str=\"\"\n  local opr_str_len=0\n  local op_str_len=0\n\
    \  local op_str_len_1=0\n  local op_str_len_2=0\n  local op_str_len_3=0\n  local\
    \ op_str_len_4=0\n  local op_str_len_5=0\n  local op_str_len_6=0\n  local op_str_len_7=0\n\
    \  local op_str_len_8=0\n  local op_str_len_9=0\n  local op_str_len_10=0\n  local\
    \ op_str_len_11=0\n  local op_str_len_12=0\n  local op_str_len_13=0\n  local op_str_len_14=0\n\
    \  local op_str_len_15=0\n  local op_str_len_16=0\n  local op_str_len_17=0\n \
    \ local op_str_len_18=0\n  local op_str_len_19=0\n  local op_str_len_20=0\n  local\
    \ op_str_len_21=0\n  local op_str_len_22=0\n  local op_str_len_23=0\n  local op_str_len_24=0\n\
    \  local op_str_len_25=0\n  local op_str_len_26=0\n  local op_str_len_27=0\n \
    \ local op_str_len_28=0\n  local op_str_len_29=0\n  local op_str_len_30=0\n  local\
    \ op_str_len_31=0\n  local op_str_len_32=0\n  local op_str_len_33=0\n  local op_str_len_34=0\n\
    \  local op_str_len_35=0\n", "    local -a operator=($1)\n    local -a operand=($2)\n\
    \    local -i result=${operand[0]}\n    local -i i=0\n    for ((i=0; i<${#operator[@]};\
    \ i++)); do\n        case ${operator[$i]} in\n            '+') result+=${operand[$((i+1))]}\
    \ ;;\n            '-') result-=${operand[$((i+1))]} ;;\n            '*') result*=${operand[$((i+1))]}\
    \ ;;\n            '//') result/=${operand[$((i+1))]} ;;\n            '**') result**=${operand[$((i+1))]}\
    \ ;;\n        esac\n    done\n    echo $result", "  local operator=($1)\n  local\
    \ operand=($2)\n  local result=${operand[0]}\n  local i=0\n  local j=1\n  while\
    \ [ $i -lt ${#operator[@]} ]; do\n    case ${operator[$i]} in\n      '+') result=$((result\
    \ + ${operand[$j]}));;\n      '-') result=$((result - ${operand[$j]}));;\n   \
    \   '*') result=$((result * ${operand[$j]}));;\n      '//') result=$((result /\
    \ ${operand[$j]}));;\n      '**') result=$((result ** ${operand[$j]}));;\n   \
    \ esac\n    i=$((i + 1))\n    j=$((j + 1))\n  done\n  echo $result", "    local\
    \ operator=\"$1\"\n    local operand=\"$2\"\n    local result=0\n    local i=0\n\
    \    local op1=0\n    local op2=0\n    local op=0\n    local operand_arr=()\n\
    \    local operator_arr=()\n    local operand_arr=(${operand// / })\n    local\
    \ operator_arr=(${operator// / })\n    result=${operand_arr[0]}\n    for i in\
    \ \"${!operator_arr[@]}\"; do\n        op1=${operand_arr[$i]}\n        op2=${operand_arr[$((i+1))]}\n\
    \        op=${operator_arr[$i]}\n        case \"$op\" in\n            \"+\") result=$((result\
    \ + op2)) ;;\n            \"-\") result=$((result - op2)) ;;\n            \"*\"\
    ) result=$((result * op2)) ;;\n            \"//\") result=$((result / op2)) ;;\n\
    \            \"**\") result=$((result ** op2)) ;;\n        esac\n    done\n  \
    \  echo $result", "    local -a operator=($1)\n    local -a operand=($2)\n   \
    \ local result=${operand[0]}\n    local i=0\n    local j=1\n    while [ $i -lt\
    \ ${#operator[@]} ]; do\n        case ${operator[$i]} in\n            '+')\n \
    \               result=$((result + ${operand[$j]}))\n                ;;\n    \
    \        '-')\n                result=$((result - ${operand[$j]}))\n         \
    \       ;;\n            '*')\n                result=$((result * ${operand[$j]}))\n\
    \                ;;\n            '//')\n                result=$((result / ${operand[$j]}))\n\
    \                ;;\n            '**')\n                result=$((result ** ${operand[$j]}))\n\
    \                ;;\n        esac\n        i=$((i + 1))\n        j=$((j + 1))\n\
    \    done\n    echo $result", "    local -a operator=(\"$1\")\n    local -a operand=(\"\
    $2\")\n    local result=${operand[0]}\n    for ((i=0; i<${#operator[@]}; i++));\
    \ do\n        case ${operator[$i]} in\n            '+') result=$((result + ${operand[$((i+1))]}))\
    \ ;;\n            '-') result=$((result - ${operand[$((i+1))]})) ;;\n        \
    \    '*') result=$((result * ${operand[$((i+1))]})) ;;\n            '//') result=$((result\
    \ / ${operand[$((i+1))]})) ;;\n            '**') result=$((result ** ${operand[$((i+1))]}))\
    \ ;;\n        esac\n    done\n    echo $result", "    local -a operator=($1)\n\
    \    local -a operand=($2)\n    local -a result\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n\
    \    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n\
    \    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n\
    \    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n\
    \    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n\
    \    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n\
    \    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local\
    \ hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n\
    \    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local\
    \ qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n\
    \    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local\
    \ zzz=0\n    local aaaa=0\n    local bbbb=0\n    local cccc=0\n", "  local operator=$1\n\
    \  local operand=$2\n  local result=0\n  local i=0\n  local op=()\n  local opd=()\n\
    \  local tmp=()\n  local tmp2=()\n  local tmp3=()\n  local tmp4=()\n  local tmp5=()\n\
    \  local tmp6=()\n  local tmp7=()\n  local tmp8=()\n  local tmp9=()\n  local tmp10=()\n\
    \  local tmp11=()\n  local tmp12=()\n  local tmp13=()\n  local tmp14=()\n  local\
    \ tmp15=()\n  local tmp16=()\n  local tmp17=()\n  local tmp18=()\n  local tmp19=()\n\
    \  local tmp20=()\n  local tmp21=()\n  local tmp22=()\n  local tmp23=()\n  local\
    \ tmp24=()\n  local tmp25=()\n  local tmp26=()\n  local tmp27=()\n  local tmp28=()\n\
    \  local tmp29=()\n  local tmp30=()\n  local tmp31=()\n  local tmp32=()\n  local\
    \ tmp33=()\n  local tmp34=()\n  local tmp35=()\n  local tmp36=()\n  local tmp37=()\n\
    \  local tmp38=()\n  local tmp39=()\n  local tmp40=()\n  local tmp41=()\n  local\
    \ tmp42=()\n  local tmp43=()\n  local tmp44=()\n  local tmp45=()\n  local tmp46=()\n\
    \  local tmp47=()\n  local tmp48=()\n  local tmp49=()\n  local tmp50=()\n  local\
    \ tmp51=()\n  local tmp52=()\n  local tmp53=()\n  local tmp54=()\n  local tmp55=()\n\
    \  local tmp56=()\n  local tmp57=()\n  local tmp58=()\n  local tmp59=()\n  local\
    \ tmp60=()\n  local tmp61=()\n  local tmp62=()\n  local tmp63=()\n  local tmp64=()\n\
    \  local tmp65=()\n  local tmp66=()\n  local tmp67=()\n  local tmp68=", "    local\
    \ -a operator=($1)\n    local -a operand=($2)\n    local -a result=()\n    local\
    \ -a tmp=()\n    local -a tmp2=()\n    local -a tmp3=()\n    local -a tmp4=()\n\
    \    local -a tmp5=()\n    local -a tmp6=()\n    local -a tmp7=()\n    local -a\
    \ tmp8=()\n    local -a tmp9=()\n    local -a tmp10=()\n    local -a tmp11=()\n\
    \    local -a tmp12=()\n    local -a tmp13=()\n    local -a tmp14=()\n    local\
    \ -a tmp15=()\n    local -a tmp16=()\n    local -a tmp17=()\n    local -a tmp18=()\n\
    \    local -a tmp19=()\n    local -a tmp20=()\n    local -a tmp21=()\n    local\
    \ -a tmp22=()\n    local -a tmp23=()\n    local -a tmp24=()\n    local -a tmp25=()\n\
    \    local -a tmp26=()\n    local -a tmp27=()\n    local -a tmp28=()\n    local\
    \ -a tmp29=()\n    local -a tmp30=()\n    local -a tmp31=()\n    local -a tmp32=()\n\
    \    local -a tmp33=()\n    local -a tmp34=()\n    local -a tmp35=()\n    local\
    \ -a tmp36=()\n    local -a tmp37=()\n    local -a tmp38=()\n    local -a tmp39=()\n\
    \    local -a tmp40=()\n    local -a tmp41=()\n    local -a tmp42=()\n    local\
    \ -a tmp43=()\n    local -a tmp44=()\n    local -a tmp45=()\n    local -a tmp46=()\n\
    \    local -a tmp47=()\n    local -a tmp48=()\n    local -a tmp49=()\n    local\
    \ -a tmp50=()\n    local -a tmp51=()\n    local -a tmp52=()\n    local -a tmp53=()\n\
    \    local -a tmp54", "  local operator=$1\n  local operand=$2\n  local result=0\n\
    \  local i=0\n  local op=()\n  local opd=()\n  local op_len=0\n  local opd_len=0\n\
    \  local op_str=''\n  local opd_str=''\n  local op_chr=''\n  local opd_chr=''\n\
    \  local op_idx=0\n  local opd_idx=0\n  local op_num=0\n  local opd_num=0\n  local\
    \ op_num_str=''\n  local opd_num_str=''\n  local op_num_chr=''\n  local opd_num_chr=''\n\
    \  local op_num_idx=0\n  local opd_num_idx=0\n  local op_num_len=0\n  local opd_num_len=0\n\
    \  local op_num_val=0\n  local opd_num_val=0\n  local op_num_val_str=''\n  local\
    \ opd_num_val_str=''\n  local op_num_val_chr=''\n  local opd_num_val_chr=''\n\
    \  local op_num_val_idx=0\n  local opd_num_val_idx=0\n  local op_num_val_len=0\n\
    \  local opd_num_val_len=0\n  local op_num_val_val=0\n  local opd_num_val_val=0\n\
    \  local op_num_val_val_str=''\n  local opd_num_val_val_str=''\n  local op_num_val_val_chr=''\n\
    \  local opd_num_val_val_chr=''\n  local op_num_val_val_idx=0\n  local opd_num_val_val_idx=0\n\
    \  local op_num_val_val_len=0\n  local opd_num_val_val_len=0\n  local op_num_val_val_val=0\n\
    \  local opd_num_val_val_val", "    local operator=\"$1\"\n    local operand=\"\
    $2\"\n    local result=\"\"\n    local i=0\n    local op=\"\"\n    local op1=\"\
    \"\n    local op2=\"\"\n    local op_list=(\"+\" \"-\" \"*\" \"//\" \"**\")\n\
    \    local op_list_len=${#op_list[@]}\n    local op_list_index=0\n    local op_list_index_max=$((op_list_len\
    \ - 1))\n    local op_list_index_min=0\n    local op_list_index_mid=0\n    local\
    \ op_list_index_mid_prev=0\n    local op_list_index_mid_next=0\n    local op_list_index_mid_prev_prev=0\n\
    \    local op_list_index_mid_next_next=0\n    local op_list_index_mid_prev_prev_prev=0\n\
    \    local op_list_index_mid_next_next_next=0\n    local op_list_index_mid_prev_prev_prev_prev=0\n\
    \    local op_list_index_mid_next_next_next_next=0\n    local op_list_index_mid_prev_prev_prev_prev_prev=0\n\
    \    local op_list_index_mid_next_next_next_next_next=0\n    local op_list_index_mid_prev_prev_prev_prev_prev_prev=0\n\
    \    local op_list_index_mid_next_next_next_next_next_next=0\n    local op_list_index_mid_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local op_list_index_mid_next_next_next_next_next_next_next=0\n    local op_list_index_mid_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local op_list_index_mid_next_next_next_next_next_next_next_next=0\n    local\
    \ op_list_index_mid_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local\
    \ op_list_index_", "  local -a operator\n  local -a operand\n  local -i i\n  local\
    \ -i j\n  local -i k\n  local -i len\n  local -i len_op\n  local -i len_opd\n\
    \  local -i len_opd_1\n  local -i len_opd_2\n  local -i len_opd_3\n  local -i\
    \ len_opd_4\n  local -i len_opd_5\n  local -i len_opd_6\n  local -i len_opd_7\n\
    \  local -i len_opd_8\n  local -i len_opd_9\n  local -i len_opd_10\n  local -i\
    \ len_opd_11\n  local -i len_opd_12\n  local -i len_opd_13\n  local -i len_opd_14\n\
    \  local -i len_opd_15\n  local -i len_opd_16\n  local -i len_opd_17\n  local\
    \ -i len_opd_18\n  local -i len_opd_19\n  local -i len_opd_20\n  local -i len_opd_21\n\
    \  local -i len_opd_22\n  local -i len_opd_23\n  local -i len_opd_24\n  local\
    \ -i len_opd_25\n  local -i len_opd_26\n  local -i len_opd_27\n  local -i len_opd_28\n\
    \  local -i len_opd_29\n  local -i len_opd_30\n  local -i len_opd_31\n  local\
    \ -i len_opd_32\n  local -i len_opd_33\n  local -i len_opd_34\n  local -i len_opd_35\n\
    \  local -i len_opd_36\n  local -i len_opd_37\n  local -i len_opd_38\n  local\
    \ -i len_opd_39\n  local -i len_opd_40\n  local -i len_opd_41\n  local -i len_",
  "    local -a operator=($1)\n    local -a operand=($2)\n    local result=${operand[0]}\n\
    \    local i=0\n    local j=1\n    for op in ${operator[@]}; do\n        case\
    \ $op in\n            '+')\n                result=$((result + operand[j]))\n\
    \                ;;\n            '-')\n                result=$((result - operand[j]))\n\
    \                ;;\n            '*')\n                result=$((result * operand[j]))\n\
    \                ;;\n            '//')\n                result=$((result / operand[j]))\n\
    \                ;;\n            '**')\n                result=$((result ** operand[j]))\n\
    \                ;;\n        esac\n        ((j++))\n    done\n    echo $result",
  "    local -a operator=(\"$1\")\n    local -a operand=(\"$2\")\n    local -a result\n\
    \    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local\
    \ -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n\
    \    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local\
    \ -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\
    \    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n\
    \    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n\
    \    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n\
    \    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n\
    \    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n\
    \    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n\
    \    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n\
    \    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n\
    \    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n\
    \    local -i kkk=0\n    local -i lll=0\n    local -i mmm", "    local -a operator=(\"\
    $1\")\n    local -a operand=(\"$2\")\n    local result=${operand[0]}\n    local\
    \ i=0\n    while [ $i -lt ${#operator[@]} ]; do\n        case ${operator[$i]}\
    \ in\n            '+') result=$((result + ${operand[$i+1]}));;\n            '-')\
    \ result=$((result - ${operand[$i+1]}));;\n            '*') result=$((result *\
    \ ${operand[$i+1]}));;\n            '//') result=$((result / ${operand[$i+1]}));;\n\
    \            '**') result=$((result ** ${operand[$i+1]}));;\n        esac\n  \
    \      ((i++))\n    done\n    echo $result", "    local -a operator=($1)\n   \
    \ local -a operand=($2)\n    local -i result=${operand[0]}\n    local -i i=0\n\
    \    local -i j=1\n    local -i len=${#operator[@]}\n    while [ $i -lt $len ];\
    \ do\n        case ${operator[$i]} in\n            '+')\n                result=$((result\
    \ + ${operand[$j]}))\n                ;;\n            '-')\n                result=$((result\
    \ - ${operand[$j]}))\n                ;;\n            '*')\n                result=$((result\
    \ * ${operand[$j]}))\n                ;;\n            '//')\n                result=$((result\
    \ / ${operand[$j]}))\n                ;;\n            '**')\n                result=$((result\
    \ ** ${operand[$j]}))\n                ;;\n        esac\n        i=$((i + 1))\n\
    \        j=$((j + 1))\n    done\n    echo $result", "    local -a operator=($1)\n\
    \    local -a operand=($2)\n    local result=${operand[0]}\n    local i=0\n  \
    \  while [ $i -lt ${#operator[@]} ]; do\n        case ${operator[$i]} in\n   \
    \         '+')\n                result=$((result + ${operand[$((i+1))]}))\n  \
    \              ;;\n            '-')\n                result=$((result - ${operand[$((i+1))]}))\n\
    \                ;;\n            '*')\n                result=$((result * ${operand[$((i+1))]}))\n\
    \                ;;\n            '//')\n                result=$((result / ${operand[$((i+1))]}))\n\
    \                ;;\n            '**')\n                result=$((result ** ${operand[$((i+1))]}))\n\
    \                ;;\n        esac\n        i=$((i+1))\n    done\n    echo $result",
  "    local operator=($1)\n    local operand=($2)\n    local result=${operand[0]}\n\
    \    local i=0\n    while [ $i -lt ${#operator[@]} ]; do\n        case ${operator[$i]}\
    \ in\n            '+') result=$((result + ${operand[$((i+1))]}));;\n         \
    \   '-') result=$((result - ${operand[$((i+1))]}));;\n            '*') result=$((result\
    \ * ${operand[$((i+1))]}));;\n            '//') result=$((result / ${operand[$((i+1))]}));;\n\
    \            '**') result=$((result ** ${operand[$((i+1))]}));;\n        esac\n\
    \        i=$((i+1))\n    done\n    echo $result", "    local -a operator=($1)\n\
    \    local -a operand=($2)\n    local result=${operand[0]}\n    local i=0\n  \
    \  for ((i=0; i<${#operator[@]}; i++)); do\n        case ${operator[$i]} in\n\
    \            '+') result=$((result + ${operand[$((i+1))]})) ;;\n            '-')\
    \ result=$((result - ${operand[$((i+1))]})) ;;\n            '*') result=$((result\
    \ * ${operand[$((i+1))]})) ;;\n            '//') result=$((result / ${operand[$((i+1))]}))\
    \ ;;\n            '**') result=$((result ** ${operand[$((i+1))]})) ;;\n      \
    \  esac\n    done\n    echo $result", "    local -a operator=($1)\n    local -a\
    \ operand=($2)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i n=${#operator[@]}\n    local -i m=${#operand[@]}\n\
    \    local -i l=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local\
    \ -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n\
    \    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local\
    \ -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n\
    \    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n  \
    \  local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n  \
    \  local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n  \
    \  local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n  \
    \  local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n  \
    \  local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n  \
    \  local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n  \
    \  local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n\
    \    local -i mmm=0\n    local", "    local -a operator=($1)\n    local -a operand=($2)\n\
    \    local result=${operand[0]}\n    local i=0\n    for ((i=0; i<${#operator[@]};\
    \ i++)); do\n        case ${operator[$i]} in\n            '+') result=$((result\
    \ + ${operand[$((i+1))]})) ;;\n            '-') result=$((result - ${operand[$((i+1))]}))\
    \ ;;\n            '*') result=$((result * ${operand[$((i+1))]})) ;;\n        \
    \    '//') result=$((result / ${operand[$((i+1))]})) ;;\n            '**') result=$((result\
    \ ** ${operand[$((i+1))]})) ;;\n        esac\n    done\n    echo $result", " \
    \ local -a operator=($1)\n  local -a operand=($2)\n  local -a result\n  local\
    \ -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local\
    \ -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local\
    \ -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local\
    \ -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n \
    \ local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n \
    \ local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i\
    \ pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n \
    \ local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i\
    \ yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n\
    \  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local\
    \ -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n\
    \  local -i mmm=0", "    local -a operator=(\"$1\")\n    local -a operand=(\"\
    $2\")\n    local result=0\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ op=0\n    local op1=0\n    local op2=0\n    local op_str=''\n    local op_str1=''\n\
    \    local op_str2=''\n    local op_str3=''\n    local op_str4=''\n    local op_str5=''\n\
    \    local op_str6=''\n    local op_str7=''\n    local op_str8=''\n    local op_str9=''\n\
    \    local op_str10=''\n    local op_str11=''\n    local op_str12=''\n    local\
    \ op_str13=''\n    local op_str14=''\n    local op_str15=''\n    local op_str16=''\n\
    \    local op_str17=''\n    local op_str18=''\n    local op_str19=''\n    local\
    \ op_str20=''\n    local op_str21=''\n    local op_str22=''\n    local op_str23=''\n\
    \    local op_str24=''\n    local op_str25=''\n    local op_str26=''\n    local\
    \ op_str27=''\n    local op_str28=''\n    local op_str29=''\n    local op_str30=''\n\
    \    local op_str31=''\n    local op_str32=''\n    local op_str33=''\n    local\
    \ op_str34=''\n    local op_str35=''\n    local op_str36=''\n    local op_str37=''\n\
    \    local op_str38=''\n    local op_str39=''\n    local op_str40=''\n    local\
    \ op_str41=''\n    local op_str42=''\n    local op_str43=''\n    local op_str44=''\n\
    \    local op_str45=''\n    local op_str46=''\n    local op_str47=''\n    local\
    \ op_str48=''\n    local op_", "    local -a operator=(\"$1\")\n    local -a operand=(\"\
    $2\")\n    local result=${operand[0]}\n    local i=0\n    for ((i=0; i<${#operator[@]};\
    \ i++)); do\n        case ${operator[$i]} in\n            '+')\n             \
    \   result=$((result + ${operand[$((i+1))]}))\n                ;;\n          \
    \  '-')\n                result=$((result - ${operand[$((i+1))]}))\n         \
    \       ;;\n            '*')\n                result=$((result * ${operand[$((i+1))]}))\n\
    \                ;;\n            '//')\n                result=$((result / ${operand[$((i+1))]}))\n\
    \                ;;\n            '**')\n                result=$((result ** ${operand[$((i+1))]}))\n\
    \                ;;\n        esac\n    done\n    echo $result", "    local -a\
    \ operator=(\"$1\")\n    local -a operand=(\"$2\")\n    local result=${operand[0]}\n\
    \    for ((i=0; i<${#operator[@]}; i++)); do\n        case ${operator[$i]} in\n\
    \            \"+\") result=$((result + ${operand[$i+1]})) ;;\n            \"-\"\
    ) result=$((result - ${operand[$i+1]})) ;;\n            \"*\") result=$((result\
    \ * ${operand[$i+1]})) ;;\n            \"//\") result=$((result / ${operand[$i+1]}))\
    \ ;;\n            \"**\") result=$((result ** ${operand[$i+1]})) ;;\n        esac\n\
    \    done\n    echo $result", "    local operator=$1\n    local operand=$2\n \
    \   local result=0\n    local i=0\n    local op=''\n    local op1=''\n    local\
    \ op2=''\n    local op_list=''\n    local op_list_len=0\n    local op_list_idx=0\n\
    \    local op_list_idx_max=0\n    local op_list_idx_min=0\n    local op_list_idx_min_idx=0\n\
    \    local op_list_idx_min_idx_max=0\n    local op_list_idx_min_idx_min=0\n  \
    \  local op_list_idx_min_idx_min_idx=0\n    local op_list_idx_min_idx_min_idx_max=0\n\
    \    local op_list_idx_min_idx_min_idx_min=0\n    local op_list_idx_min_idx_min_idx_min_idx=0\n\
    \    local op_list_idx_min_idx_min_idx_min_idx_max=0\n    local op_list_idx_min_idx_min_idx_min_idx_min=0\n\
    \    local op_list_idx_min_idx_min_idx_min_idx_min_idx=0\n    local op_list_idx_min_idx_min_idx_min_idx_min_idx_max=0\n\
    \    local op_list_idx_min_idx_min_idx_min_idx_min_idx_min=0\n    local op_list_idx_min_idx_min_idx_min_idx_min_idx_min_idx=0\n\
    \    local op_list_idx_min_idx_min_idx_min_idx_min_idx_min_idx_max=0\n    local\
    \ op_list_idx_min_idx_min_idx_min_idx_min_idx_min_idx_min=0\n   "]
stop_tokens:
- "\n}"

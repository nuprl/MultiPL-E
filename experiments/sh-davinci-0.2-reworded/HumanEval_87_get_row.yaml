name: HumanEval_87_get_row
language: sh
prompt: "#!/bin/bash\n# You are given a 2 dimensional data, as a nested lists,\n#\
  \ which is similar to matrix, however, unlike matrices,\n# each row may contain\
  \ a different number of columns.\n# Given lst, and integer x, find integers x in\
  \ the list,\n# and return list of lists, [(x1, y1), (x2, y2) ...] such that\n# each\
  \ list is a coordinate - (row, columns), starting with 0.\n# Sort coordinates initially\
  \ by rows in ascending order.\n# Also, sort coordinates of the row by columns in\
  \ descending order.\n# Examples:\n# >>> $(get_row \"1 2 3 4 5 6\\n1 2 3 4 1 6\\\
  n1 2 3 4 5 1\" \"1\")\n# [['\"0\"', '\"0\"'], ['\"1\"', '\"4\"'], ['\"1\"', '\"\
  0\"'], ['\"2\"', '\"5\"'], ['\"2\"', '\"0\"']]\n# >>> $(get_row \"\" \"1\")\n# []\n\
  # >>> $(get_row \"\\n1\\n1 2 3\" \"3\")\n# [['\"2\"', '\"2\"']]\n#\n# $1 is a newline-separated,\
  \ space-separated list\n# $2 is an integer\nget_row() {\n"
tests: "}\n\ncandidate() {\n    get_row \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
  \ $(candidate \"1 2 3 4 5 6\\n1 2 3 4 1 6\\n1 2 3 4 5 1\" \"1\") = \"0 0\\n1 4\\\
  n1 0\\n2 5\\n2 0\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 2 3 4\
  \ 5 6\\n1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 2 3 4 5 6\" \"2\") = \"0 1\\n1 1\\n2 1\\n3\
  \ 1\\n4 1\\n5 1\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 1 3 4 5\
  \ 6\\n1 2 1 4 5 6\\n1 2 3 1 5 6\\n1 2 3 4 1 6\\n1 2 3 4 5 1\" \"1\") = \"0 0\\n1\
  \ 0\\n2 1\\n2 0\\n3 2\\n3 0\\n4 3\\n4 0\\n5 4\\n5 0\\n6 5\\n6 0\" ]]\n    [[ $(candidate\
  \ \"\" \"1\") = \"\" ]]\n    [[ $(candidate \"1\" \"2\") = \"\" ]]\n    [[ $(candidate\
  \ \"\\n1\\n1 2 3\" \"3\") = \"2 2\" ]]\n}\n\nrun_test"
completions: ["    local -a lst\n    local -a row\n    local -a col\n    local -a\
    \ result\n    local -a tmp\n    local -a tmp2\n    local -a tmp3\n    local -a\
    \ tmp4\n    local -a tmp5\n    local -a tmp6\n    local -a tmp7\n    local -a\
    \ tmp8\n    local -a tmp9\n    local -a tmp10\n    local -a tmp11\n    local -a\
    \ tmp12\n    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local\
    \ -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local\
    \ -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local\
    \ -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local\
    \ -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local\
    \ -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local\
    \ -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local\
    \ -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local\
    \ -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local\
    \ -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local\
    \ -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local\
    \ -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local\
    \ -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local\
    \ -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n    local\
    \ -a tmp68\n    local -a tmp69\n    local -a", "    local lst=\"$1\"\n    local\
    \ x=\"$2\"\n    local row=0\n    local col=0\n    local result=()\n    while read\
    \ -r line; do\n        col=0\n        for i in $line; do\n            if [[ \"\
    $i\" == \"$x\" ]]; then\n                result+=(\"[\\\"$row\\\", \\\"$col\\\"\
    ]\")\n            fi\n            col=$((col + 1))\n        done\n        row=$((row\
    \ + 1))\n    done <<< \"$lst\"\n    echo \"${result[@]}\" | tr ' ' ',' | sed -e\
    \ 's/^/[/' -e 's/$/]/'", "    local lst=\"$1\"\n    local x=\"$2\"\n    local\
    \ -a rows=()\n    local -a row=()\n    local -a cols=()\n    local -a col=()\n\
    \    local -a res=()\n    local -a res_row=()\n    local -a res_col=()\n    local\
    \ -a res_row_col=()\n    local -a res_row_col_str=()\n    local -a res_row_col_str_str=()\n\
    \    local -a res_row_col_str_str_str=()\n    local -a res_row_col_str_str_str_str=()\n\
    \    local -a res_row_col_str_str_str_str_str=()\n    local -a res_row_col_str_str_str_str_str_str=()\n\
    \    local -a res_row_col_str_str_str_str_str_str_str=()\n    local -a res_row_col_str_str_str_str_str_str_str_str=()\n\
    \    local -a res_row_col_str_str_str_str_str_str_str_str_str=()\n    local -a\
    \ res_row_col_str_str_str_str_str_str_str_str_str_str=()\n    local -a res_row_col_str_str_str_str_str_str_str_str_str_str_str=()\n\
    \    local -a res_row_col_str_str_str_str_str_str_str_str_str_str_str_str=()\n\
    \    local -a res_row_col_str_str_str_str_str_str_str_str_str_str_str_str_str=()\n\
    \    local -a res_row_col_str_str_str_str_str_str_str_str_str_str_str_str_str_str=()\n\
    \    local -a res_row_col_str_str_str_str_str_str_str_str_str_str_str_str_str_str_str=()\n\
    \   ", "    local lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n    local col=0\n\
    \    local result=()\n    while read -r line; do\n        col=0\n        for i\
    \ in $line; do\n            if [[ \"$i\" == \"$x\" ]]; then\n                result+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n            col=$((col + 1))\n\
    \        done\n        row=$((row + 1))\n    done <<< \"$lst\"\n    if [[ \"${#result[@]}\"\
    \ -eq 0 ]]; then\n        echo \"[]\"\n    else\n        echo \"$(sort_result\
    \ \"${result[@]}\")\"\n    fi", "    local lst=\"$1\"\n    local x=\"$2\"\n  \
    \  local row=0\n    local col=0\n    local result=()\n    local line\n    local\
    \ word\n    while read -r line; do\n        col=0\n        while read -r word;\
    \ do\n            if [[ \"$word\" == \"$x\" ]]; then\n                result+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n            col=$((col + 1))\n\
    \        done <<< \"$line\"\n        row=$((row + 1))\n    done <<< \"$lst\"\n\
    \    if [[ \"${#result[@]}\" -eq 0 ]]; then\n        echo \"[]\"\n    else\n \
    \       echo \"$(IFS=,; echo \"${result[*]}\")\"\n    fi", "    local lst=\"$1\"\
    \n    local x=\"$2\"\n    local row_num=0\n    local col_num=0\n    local row_col_list=()\n\
    \    local row_col_list_sorted=()\n    local row_col_list_sorted_str=()\n    local\
    \ row_col_list_sorted_str_quoted=()\n    local row_col_list_sorted_str_quoted_joined=()\n\
    \    local row_col_list_sorted_str_quoted_joined_str=()\n    local row_col_list_sorted_str_quoted_joined_str_quoted=()\n\
    \    local row_col_list_sorted_str_quoted_joined_str_quoted_joined=()\n    local\
    \ row_col_list_sorted_str_quoted_joined_str_quoted_joined_str=()\n    local row_col_list_sorted_str_quoted_joined_str_quoted_joined_str_quoted=()\n\
    \    local row_col_list_sorted_str_quoted_joined_str_quoted_joined_str_quoted_joined=()\n\
    \    local row_col_list_sorted_str_quoted_joined_str_quoted_joined_str_quoted_joined_str=()\n\
    \    local row_col_list_sorted_str_quoted_joined_str_quoted_joined_str_quoted_joined_str_quoted=()\n\
    \    local row_col_list_sorted_str_quoted_joined_str_quoted_joined_str_quoted_joined_str_quoted_joined=()\n\
    \    local row_col_list_sorted_str_quoted_joined_str_quoted_joined_str_quoted_joined_str_quoted_joined_str=()\n\
    \    local row_col_list_sorted_str_quoted_joined_str_quoted_joined_str_quoted_joined_str_quoted_joined_str_quoted=()\n\
    \    local row_col_list_sorted_str_quoted_joined_str_quoted_joined_str_qu", " \
    \   local lst=\"$1\"\n    local x=\"$2\"\n    local -a rows\n    local -a cols\n\
    \    local -a result\n    local i=0\n    local j=0\n    local row=0\n    local\
    \ col=0\n    local -a row_cols\n    local -a row_cols_sorted\n    local -a row_cols_sorted_rev\n\
    \    local -a row_cols_sorted_rev_str\n    local -a row_cols_sorted_rev_str_quoted\n\
    \    local -a row_cols_sorted_rev_str_quoted_joined\n    local -a row_cols_sorted_rev_str_quoted_joined_quoted\n\
    \    local -a row_cols_sorted_rev_str_quoted_joined_quoted_joined\n    local -a\
    \ row_cols_sorted_rev_str_quoted_joined_quoted_joined_quoted\n    local -a row_cols_sorted_rev_str_quoted_joined_quoted_joined_quoted_joined\n\
    \    local -a row_cols_sorted_rev_str_quoted_joined_quoted_joined_quoted_joined_joined\n\
    \    local -a row_cols_sorted_rev_str_quoted_joined_quoted_joined_quoted_joined_joined_joined\n\
    \    local -a row_cols_sorted_rev_str_quoted_joined_quoted_joined_quoted_joined_joined_joined_joined\n\
    \    local -a row_cols_sorted_rev_str_quoted_joined_quoted_joined_quoted_joined_joined_joined_joined_joined\n\
    \    local -a row_cols_sorted_rev_str_quoted_joined_quoted_joined_quoted_joined_joined_joined_joined_joined_joined\n\
    \    local -a row_cols_sorted_rev_str_quoted_joined_quoted_joined_quoted_joined_joined_joined_joined_joined_joined_joined\n\
    \    local -a row_cols_sorted_rev_str_quoted_joined_qu", "    local -a rows\n\
    \    local -a cols\n    local -a row\n    local -a col\n    local -a result\n\
    \    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i\
    \ m\n    local -i n\n    local -i p\n    local -i q\n    local -i r\n    local\
    \ -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local\
    \ -i x\n    local -i y\n    local -i z\n    local -i aa\n    local -i bb\n   \
    \ local -i cc\n    local -i dd\n    local -i ee\n    local -i ff\n    local -i\
    \ gg\n    local -i hh\n    local -i ii\n    local -i jj\n    local -i kk\n   \
    \ local -i ll\n    local -i mm\n    local -i nn\n    local -i oo\n    local -i\
    \ pp\n    local -i qq\n    local -i rr\n    local -i ss\n    local -i tt\n   \
    \ local -i uu\n    local -i vv\n    local -i ww\n    local -i xx\n    local -i\
    \ yy\n    local -i zz\n    local -i aaa\n    local -i bbb\n    local -i ccc\n\
    \    local -i ddd\n    local -i eee\n    local -i fff\n    local -i ggg\n    local\
    \ -i hhh\n    local -i iii\n    local -i jjj\n    local -i kkk\n    local -i lll\n\
    \    local -i mmm\n    local -i nnn\n    local -i ooo\n    local -i ppp\n    local\
    \ -i qqq\n    local -i rrr\n    local -i sss\n    local -i ttt\n    local -i uuu\n\
    \    local -i vvv\n    local -i www\n    local -i xxx\n    local -i yyy\n    local\
    \ -i zzz\n    local -i aaaa\n    local -i bbbb\n    local -i cccc\n    local",
  "    local lst=\"$1\"\n    local x=\"$2\"\n    local -a rows\n    local -a columns\n\
    \    local -a result\n    local -i i=0\n    local -i j=0\n    local -i k=0\n \
    \   local -i row_count=0\n    local -i column_count=0\n    local -i row_index=0\n\
    \    local -i column_index=0\n    local -i row_index_max=0\n    local -i column_index_max=0\n\
    \    local -i row_index_min=0\n    local -i column_index_min=0\n    local -i row_index_prev=0\n\
    \    local -i column_index_prev=0\n    local -i row_index_next=0\n    local -i\
    \ column_index_next=0\n    local -i row_index_min_prev=0\n    local -i column_index_min_prev=0\n\
    \    local -i row_index_min_next=0\n    local -i column_index_min_next=0\n   \
    \ local -i row_index_max_prev=0\n    local -i column_index_max_prev=0\n    local\
    \ -i row_index_max_next=0\n    local -i column_index_max_next=0\n    local -i\
    \ row_index_min_prev_prev=0\n    local -i column_index_min_prev_prev=0\n    local\
    \ -i row_index_min_next_next=0\n    local -i column_index_min_next_next=0\n  \
    \  local -i row_index_max_prev_prev=0\n    local -i column_index_max_prev_prev=0\n\
    \    local -i row_index_max_next_next=0\n    local -i column_index_max_next_next=0\n\
    \    local -i row_index_min_prev_prev_prev=0\n    local -i column_index_min_prev_prev_prev=0\n\
    \    local -i row_index_min_next_next_next=0\n    local -i column_index_min_next_next_next=0\n\
    \    local -i", "    local lst=\"$1\"\n    local x=\"$2\"\n    local -a res\n\
    \    local -a row\n    local -a col\n    local i=0\n    local j=0\n    local -a\
    \ arr\n    local -a arr2\n    local -a arr3\n    local -a arr4\n    local -a arr5\n\
    \    local -a arr6\n    local -a arr7\n    local -a arr8\n    local -a arr9\n\
    \    local -a arr10\n    local -a arr11\n    local -a arr12\n    local -a arr13\n\
    \    local -a arr14\n    local -a arr15\n    local -a arr16\n    local -a arr17\n\
    \    local -a arr18\n    local -a arr19\n    local -a arr20\n    local -a arr21\n\
    \    local -a arr22\n    local -a arr23\n    local -a arr24\n    local -a arr25\n\
    \    local -a arr26\n    local -a arr27\n    local -a arr28\n    local -a arr29\n\
    \    local -a arr30\n    local -a arr31\n    local -a arr32\n    local -a arr33\n\
    \    local -a arr34\n    local -a arr35\n    local -a arr36\n    local -a arr37\n\
    \    local -a arr38\n    local -a arr39\n    local -a arr40\n    local -a arr41\n\
    \    local -a arr42\n    local -a arr43\n    local -a arr44\n    local -a arr45\n\
    \    local -a arr46\n    local -a arr47\n    local -a arr48\n    local -a arr49\n\
    \    local -a arr50\n    local -a arr51\n    local -a arr52\n    local -a arr53\n\
    \    local -a arr54\n    local -a arr55\n    local -a arr56\n    local -a arr57\n\
    \    local -a arr58\n    local -a arr59\n    local -a arr60\n    local -a arr61\n\
    \    local -a arr62\n    local -a arr63\n    local -a arr64\n    local -a arr65\n\
    \    local -a arr66\n    local -", "    local lst=\"$1\"\n    local x=\"$2\"\n\
    \    local row=0\n    local col=0\n    local result=()\n    while read -r line;\
    \ do\n        col=0\n        for i in $line; do\n            if [[ \"$i\" == \"\
    $x\" ]]; then\n                result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n  \
    \          fi\n            col=$((col+1))\n        done\n        row=$((row+1))\n\
    \    done <<< \"$lst\"\n    echo \"${result[@]}\" | tr ' ' ',' | sed 's/^/[/;s/$/]/'",
  "    local lst=$1\n    local x=$2\n    local -a result\n    local i=0\n    local\
    \ j=0\n    while read -r line; do\n        j=0\n        for y in $line; do\n \
    \           if [[ $y == $x ]]; then\n                result+=(\"[\\\"$i\\\", \\\
    \"$j\\\"]\")\n            fi\n            j=$((j+1))\n        done\n        i=$((i+1))\n\
    \    done <<< \"$lst\"\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -t '\"\
    ' -k1 -n -k3 -r | tr '\\n' ' '", "    local lst=\"$1\"\n    local x=\"$2\"\n \
    \   local row=0\n    local col=0\n    local result=()\n    while read -r line;\
    \ do\n        col=0\n        for y in $line; do\n            if [[ \"$y\" == \"\
    $x\" ]]; then\n                result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n  \
    \          fi\n            col=$((col + 1))\n        done\n        row=$((row\
    \ + 1))\n    done <<< \"$lst\"\n    echo \"${result[@]}\" | tr ' ' ',' | sed 's/^/[/;s/$/]/'",
  "    local -a x_coordinates=()\n    local -a y_coordinates=()\n    local -a result=()\n\
    \    local -a row\n    local -i row_index=0\n    local -i column_index=0\n   \
    \ local -i x=$2\n    local -i y\n    local -i i\n    local -i j\n    local -i\
    \ k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local\
    \ -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local\
    \ -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local\
    \ -i z\n    local -i aa\n    local -i bb\n    local -i cc\n    local -i dd\n \
    \   local -i ee\n    local -i ff\n    local -i gg\n    local -i hh\n    local\
    \ -i ii\n    local -i jj\n    local -i kk\n    local -i ll\n    local -i mm\n\
    \    local -i nn\n    local -i oo\n    local -i pp\n    local -i qq\n    local\
    \ -i rr\n    local -i ss\n    local -i tt\n    local -i uu\n    local -i vv\n\
    \    local -i ww\n    local -i xx\n    local -i yy\n    local -i zz\n    local\
    \ -i aaa\n    local -i bbb\n    local -i ccc\n    local -i ddd\n    local -i eee\n\
    \    local -i fff\n    local -i ggg\n    local -i hhh\n    local -i iii\n    local\
    \ -i jjj\n    local -i kkk\n    local -i lll\n    local -i mmm\n    local -i nnn\n\
    \    local -i ooo\n    local -i ppp\n    local -i qqq\n    local -i rrr\n    local\
    \ -i sss\n    local -i ttt\n    local -i uuu\n    local -i vvv\n    local -i www\n\
    \   ", "    local lst=$1\n    local x=$2\n    local row=0\n    local col=0\n \
    \   local result=()\n    while read -r line; do\n        col=0\n        for i\
    \ in $line; do\n            if [[ $i -eq $x ]]; then\n                result+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n            col=$((col+1))\n\
    \        done\n        row=$((row+1))\n    done <<< \"$lst\"\n    echo \"${result[@]}\"\
    \ | tr ' ' '\\n' | sort -t '\"' -k 1n -k 3nr | tr '\\n' ' '", "    local lst=$1\n\
    \    local x=$2\n    local row=0\n    local col=0\n    local result=()\n    for\
    \ i in $lst; do\n        if [[ $i == $x ]]; then\n            result+=(\"[\\\"\
    $row\\\", \\\"$col\\\"]\")\n        fi\n        if [[ $i == \"\" ]]; then\n  \
    \          row=$((row + 1))\n            col=0\n        else\n            col=$((col\
    \ + 1))\n        fi\n    done\n    echo \"${result[@]}\" | sort -t '\"' -k 1n\
    \ -k 3nr", "    local lst=$1\n    local x=$2\n    local row=0\n    local col=0\n\
    \    local result=()\n    while read -r line; do\n        col=0\n        for i\
    \ in $line; do\n            if [[ $i == $x ]]; then\n                result+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n            col=$((col+1))\n\
    \        done\n        row=$((row+1))\n    done <<< \"$lst\"\n    echo \"${result[@]}\"\
    \ | tr ' ' '\\n' | sort -t '\"' -k2 -n | sort -t '\"' -k1 -n | tr '\\n' ' '",
  "    local lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n    local col=0\n  \
    \  local res=()\n    local line\n    local num\n    while read -r line; do\n \
    \       col=0\n        for num in $line; do\n            if [[ \"$num\" == \"\
    $x\" ]]; then\n                res+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n     \
    \       fi\n            col=$((col + 1))\n        done\n        row=$((row + 1))\n\
    \    done <<< \"$lst\"\n    printf \"%s\\n\" \"${res[@]}\" | sort -t '\"' -k1n\
    \ -k3nr", "    local lst=$1\n    local x=$2\n    local -a rows\n    local -a cols\n\
    \    local -a result\n    local -i i=0\n    local -i j=0\n    local -i k=0\n \
    \   local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local\
    \ -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n\
    \    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local\
    \ -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i\
    \ cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i\
    \ gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i\
    \ kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i\
    \ oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i\
    \ ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i\
    \ ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i\
    \ aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local\
    \ -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local\
    \ -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local\
    \ -", "    local lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n    local col=0\n\
    \    local result=()\n    while read -r line; do\n        col=0\n        for i\
    \ in $line; do\n            if [ \"$i\" = \"$x\" ]; then\n                result+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n            col=$((col+1))\n\
    \        done\n        row=$((row+1))\n    done <<< \"$lst\"\n    echo \"${result[@]}\"\
    \ | tr ' ' ',' | sed 's/^/[/;s/$/]/'"]
stop_tokens:
- "\n}"

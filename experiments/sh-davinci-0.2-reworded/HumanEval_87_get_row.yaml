name: HumanEval_87_get_row
language: sh
prompt: "#!/bin/bash\n# You are given a 2 dimensional data, as a nested lists,\n#\
  \ which is similar to matrix, however, unlike matrices,\n# each row may contain\
  \ a different number of columns.\n# Given lst, and integer x, find integers x in\
  \ the list,\n# and return list of lists, [(x1, y1), (x2, y2) ...] such that\n# each\
  \ list is a coordinate - (row, columns), starting with 0.\n# Sort coordinates initially\
  \ by rows in ascending order.\n# Also, sort coordinates of the row by columns in\
  \ descending order.\n# Examples:\n# >>> $(get_row \"1 2 3 4 5 6\\n1 2 3 4 1 6\\\
  n1 2 3 4 5 1\" \"1\")\n# [['\"0\"', '\"0\"'], ['\"1\"', '\"4\"'], ['\"1\"', '\"\
  0\"'], ['\"2\"', '\"5\"'], ['\"2\"', '\"0\"']]\n# >>> $(get_row \"\" \"1\")\n# []\n\
  # >>> $(get_row \"\\n1\\n1 2 3\" \"3\")\n# [['\"2\"', '\"2\"']]\n#\n# $1 is a newline-separated,\
  \ space-separated list\n# $2 is an integer\nget_row() {\n"
tests: "}\n\ncandidate() {\n    get_row \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
  \ $(candidate \"1 2 3 4 5 6\\n1 2 3 4 1 6\\n1 2 3 4 5 1\" \"1\") = \"0 0\\n1 4\\\
  n1 0\\n2 5\\n2 0\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 2 3 4\
  \ 5 6\\n1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 2 3 4 5 6\" \"2\") = \"0 1\\n1 1\\n2 1\\n3\
  \ 1\\n4 1\\n5 1\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 1 3 4 5\
  \ 6\\n1 2 1 4 5 6\\n1 2 3 1 5 6\\n1 2 3 4 1 6\\n1 2 3 4 5 1\" \"1\") = \"0 0\\n1\
  \ 0\\n2 1\\n2 0\\n3 2\\n3 0\\n4 3\\n4 0\\n5 4\\n5 0\\n6 5\\n6 0\" ]]\n    [[ $(candidate\
  \ \"\" \"1\") = \"\" ]]\n    [[ $(candidate \"1\" \"2\") = \"\" ]]\n    [[ $(candidate\
  \ \"\\n1\\n1 2 3\" \"3\") = \"2 2\" ]]\n}\n\nrun_test"
completions: ["    local -a lst\n    local -a row\n    local -a col\n    local -a\
    \ result\n    local -a tmp\n    local -a tmp2\n    local -a tmp3\n    local -a\
    \ tmp4\n    local -a tmp5\n    local -a tmp6\n    local -a tmp7\n    local -a\
    \ tmp8\n    local -a tmp9\n    local -a tmp10\n    local -a tmp11\n    local -a\
    \ tmp12\n    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local\
    \ -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local\
    \ -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local\
    \ -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local\
    \ -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local\
    \ -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local\
    \ -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local\
    \ -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local\
    \ -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local\
    \ -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local\
    \ -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local\
    \ -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local\
    \ -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local\
    \ -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n    local\
    \ -a tmp68\n    local -a tmp69\n    local -a", "    local lst=\"$1\"\n    local\
    \ x=\"$2\"\n    local row=0\n    local col=0\n    local result=()\n    while read\
    \ -r line; do\n        col=0\n        for i in $line; do\n            if [[ \"\
    $i\" == \"$x\" ]]; then\n                result+=(\"[\\\"$row\\\", \\\"$col\\\"\
    ]\")\n            fi\n            col=$((col + 1))\n        done\n        row=$((row\
    \ + 1))\n    done <<< \"$lst\"\n    echo \"${result[@]}\" | tr ' ' ',' | sed -e\
    \ 's/^/[/' -e 's/$/]/'", "    local lst=\"$1\"\n    local x=\"$2\"\n    local\
    \ -a rows=()\n    local -a row=()\n    local -a cols=()\n    local -a col=()\n\
    \    local -a res=()\n    local -a res_row=()\n    local -a res_col=()\n    local\
    \ -a res_row_col=()\n    local -a res_row_col_str=()\n    local -a res_row_col_str_str=()\n\
    \    local -a res_row_col_str_str_str=()\n    local -a res_row_col_str_str_str_str=()\n\
    \    local -a res_row_col_str_str_str_str_str=()\n    local -a res_row_col_str_str_str_str_str_str=()\n\
    \    local -a res_row_col_str_str_str_str_str_str_str=()\n    local -a res_row_col_str_str_str_str_str_str_str_str=()\n\
    \    local -a res_row_col_str_str_str_str_str_str_str_str_str=()\n    local -a\
    \ res_row_col_str_str_str_str_str_str_str_str_str_str=()\n    local -a res_row_col_str_str_str_str_str_str_str_str_str_str_str=()\n\
    \    local -a res_row_col_str_str_str_str_str_str_str_str_str_str_str_str=()\n\
    \    local -a res_row_col_str_str_str_str_str_str_str_str_str_str_str_str_str=()\n\
    \    local -a res_row_col_str_str_str_str_str_str_str_str_str_str_str_str_str_str=()\n\
    \    local -a res_row_col_str_str_str_str_str_str_str_str_str_str_str_str_str_str_str=()\n\
    \   ", "    local lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n    local col=0\n\
    \    local result=()\n    while read -r line; do\n        col=0\n        for i\
    \ in $line; do\n            if [[ \"$i\" == \"$x\" ]]; then\n                result+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n            col=$((col + 1))\n\
    \        done\n        row=$((row + 1))\n    done <<< \"$lst\"\n    if [[ \"${#result[@]}\"\
    \ -eq 0 ]]; then\n        echo \"[]\"\n    else\n        echo \"$(sort_result\
    \ \"${result[@]}\")\"\n    fi", "    local lst=\"$1\"\n    local x=\"$2\"\n  \
    \  local row=0\n    local col=0\n    local result=()\n    local line\n    local\
    \ word\n    while read -r line; do\n        col=0\n        while read -r word;\
    \ do\n            if [[ \"$word\" == \"$x\" ]]; then\n                result+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n            col=$((col + 1))\n\
    \        done <<< \"$line\"\n        row=$((row + 1))\n    done <<< \"$lst\"\n\
    \    if [[ \"${#result[@]}\" -eq 0 ]]; then\n        echo \"[]\"\n    else\n \
    \       echo \"$(IFS=,; echo \"${result[*]}\")\"\n    fi", "    local lst=\"$1\"\
    \n    local x=\"$2\"\n    local row_num=0\n    local col_num=0\n    local row_col_list=()\n\
    \    local row_col_list_sorted=()\n    local row_col_list_sorted_str=()\n    local\
    \ row_col_list_sorted_str_quoted=()\n    local row_col_list_sorted_str_quoted_joined=()\n\
    \    local row_col_list_sorted_str_quoted_joined_str=()\n    local row_col_list_sorted_str_quoted_joined_str_quoted=()\n\
    \    local row_col_list_sorted_str_quoted_joined_str_quoted_joined=()\n    local\
    \ row_col_list_sorted_str_quoted_joined_str_quoted_joined_str=()\n    local row_col_list_sorted_str_quoted_joined_str_quoted_joined_str_quoted=()\n\
    \    local row_col_list_sorted_str_quoted_joined_str_quoted_joined_str_quoted_joined=()\n\
    \    local row_col_list_sorted_str_quoted_joined_str_quoted_joined_str_quoted_joined_str=()\n\
    \    local row_col_list_sorted_str_quoted_joined_str_quoted_joined_str_quoted_joined_str_quoted=()\n\
    \    local row_col_list_sorted_str_quoted_joined_str_quoted_joined_str_quoted_joined_str_quoted_joined=()\n\
    \    local row_col_list_sorted_str_quoted_joined_str_quoted_joined_str_quoted_joined_str_quoted_joined_str=()\n\
    \    local row_col_list_sorted_str_quoted_joined_str_quoted_joined_str_quoted_joined_str_quoted_joined_str_quoted=()\n\
    \    local row_col_list_sorted_str_quoted_joined_str_quoted_joined_str_qu", " \
    \   local lst=\"$1\"\n    local x=\"$2\"\n    local -a rows\n    local -a cols\n\
    \    local -a result\n    local i=0\n    local j=0\n    local row=0\n    local\
    \ col=0\n    local -a row_cols\n    local -a row_cols_sorted\n    local -a row_cols_sorted_rev\n\
    \    local -a row_cols_sorted_rev_str\n    local -a row_cols_sorted_rev_str_quoted\n\
    \    local -a row_cols_sorted_rev_str_quoted_joined\n    local -a row_cols_sorted_rev_str_quoted_joined_quoted\n\
    \    local -a row_cols_sorted_rev_str_quoted_joined_quoted_joined\n    local -a\
    \ row_cols_sorted_rev_str_quoted_joined_quoted_joined_quoted\n    local -a row_cols_sorted_rev_str_quoted_joined_quoted_joined_quoted_joined\n\
    \    local -a row_cols_sorted_rev_str_quoted_joined_quoted_joined_quoted_joined_joined\n\
    \    local -a row_cols_sorted_rev_str_quoted_joined_quoted_joined_quoted_joined_joined_joined\n\
    \    local -a row_cols_sorted_rev_str_quoted_joined_quoted_joined_quoted_joined_joined_joined_joined\n\
    \    local -a row_cols_sorted_rev_str_quoted_joined_quoted_joined_quoted_joined_joined_joined_joined_joined\n\
    \    local -a row_cols_sorted_rev_str_quoted_joined_quoted_joined_quoted_joined_joined_joined_joined_joined_joined\n\
    \    local -a row_cols_sorted_rev_str_quoted_joined_quoted_joined_quoted_joined_joined_joined_joined_joined_joined_joined\n\
    \    local -a row_cols_sorted_rev_str_quoted_joined_qu", "    local -a rows\n\
    \    local -a cols\n    local -a row\n    local -a col\n    local -a result\n\
    \    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i\
    \ m\n    local -i n\n    local -i p\n    local -i q\n    local -i r\n    local\
    \ -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local\
    \ -i x\n    local -i y\n    local -i z\n    local -i aa\n    local -i bb\n   \
    \ local -i cc\n    local -i dd\n    local -i ee\n    local -i ff\n    local -i\
    \ gg\n    local -i hh\n    local -i ii\n    local -i jj\n    local -i kk\n   \
    \ local -i ll\n    local -i mm\n    local -i nn\n    local -i oo\n    local -i\
    \ pp\n    local -i qq\n    local -i rr\n    local -i ss\n    local -i tt\n   \
    \ local -i uu\n    local -i vv\n    local -i ww\n    local -i xx\n    local -i\
    \ yy\n    local -i zz\n    local -i aaa\n    local -i bbb\n    local -i ccc\n\
    \    local -i ddd\n    local -i eee\n    local -i fff\n    local -i ggg\n    local\
    \ -i hhh\n    local -i iii\n    local -i jjj\n    local -i kkk\n    local -i lll\n\
    \    local -i mmm\n    local -i nnn\n    local -i ooo\n    local -i ppp\n    local\
    \ -i qqq\n    local -i rrr\n    local -i sss\n    local -i ttt\n    local -i uuu\n\
    \    local -i vvv\n    local -i www\n    local -i xxx\n    local -i yyy\n    local\
    \ -i zzz\n    local -i aaaa\n    local -i bbbb\n    local -i cccc\n    local",
  "    local lst=\"$1\"\n    local x=\"$2\"\n    local -a rows\n    local -a columns\n\
    \    local -a result\n    local -i i=0\n    local -i j=0\n    local -i k=0\n \
    \   local -i row_count=0\n    local -i column_count=0\n    local -i row_index=0\n\
    \    local -i column_index=0\n    local -i row_index_max=0\n    local -i column_index_max=0\n\
    \    local -i row_index_min=0\n    local -i column_index_min=0\n    local -i row_index_prev=0\n\
    \    local -i column_index_prev=0\n    local -i row_index_next=0\n    local -i\
    \ column_index_next=0\n    local -i row_index_min_prev=0\n    local -i column_index_min_prev=0\n\
    \    local -i row_index_min_next=0\n    local -i column_index_min_next=0\n   \
    \ local -i row_index_max_prev=0\n    local -i column_index_max_prev=0\n    local\
    \ -i row_index_max_next=0\n    local -i column_index_max_next=0\n    local -i\
    \ row_index_min_prev_prev=0\n    local -i column_index_min_prev_prev=0\n    local\
    \ -i row_index_min_next_next=0\n    local -i column_index_min_next_next=0\n  \
    \  local -i row_index_max_prev_prev=0\n    local -i column_index_max_prev_prev=0\n\
    \    local -i row_index_max_next_next=0\n    local -i column_index_max_next_next=0\n\
    \    local -i row_index_min_prev_prev_prev=0\n    local -i column_index_min_prev_prev_prev=0\n\
    \    local -i row_index_min_next_next_next=0\n    local -i column_index_min_next_next_next=0\n\
    \    local -i", "    local lst=\"$1\"\n    local x=\"$2\"\n    local -a res\n\
    \    local -a row\n    local -a col\n    local i=0\n    local j=0\n    local -a\
    \ arr\n    local -a arr2\n    local -a arr3\n    local -a arr4\n    local -a arr5\n\
    \    local -a arr6\n    local -a arr7\n    local -a arr8\n    local -a arr9\n\
    \    local -a arr10\n    local -a arr11\n    local -a arr12\n    local -a arr13\n\
    \    local -a arr14\n    local -a arr15\n    local -a arr16\n    local -a arr17\n\
    \    local -a arr18\n    local -a arr19\n    local -a arr20\n    local -a arr21\n\
    \    local -a arr22\n    local -a arr23\n    local -a arr24\n    local -a arr25\n\
    \    local -a arr26\n    local -a arr27\n    local -a arr28\n    local -a arr29\n\
    \    local -a arr30\n    local -a arr31\n    local -a arr32\n    local -a arr33\n\
    \    local -a arr34\n    local -a arr35\n    local -a arr36\n    local -a arr37\n\
    \    local -a arr38\n    local -a arr39\n    local -a arr40\n    local -a arr41\n\
    \    local -a arr42\n    local -a arr43\n    local -a arr44\n    local -a arr45\n\
    \    local -a arr46\n    local -a arr47\n    local -a arr48\n    local -a arr49\n\
    \    local -a arr50\n    local -a arr51\n    local -a arr52\n    local -a arr53\n\
    \    local -a arr54\n    local -a arr55\n    local -a arr56\n    local -a arr57\n\
    \    local -a arr58\n    local -a arr59\n    local -a arr60\n    local -a arr61\n\
    \    local -a arr62\n    local -a arr63\n    local -a arr64\n    local -a arr65\n\
    \    local -a arr66\n    local -", "    local lst=\"$1\"\n    local x=\"$2\"\n\
    \    local row=0\n    local col=0\n    local result=()\n    while read -r line;\
    \ do\n        col=0\n        for i in $line; do\n            if [[ \"$i\" == \"\
    $x\" ]]; then\n                result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n  \
    \          fi\n            col=$((col+1))\n        done\n        row=$((row+1))\n\
    \    done <<< \"$lst\"\n    echo \"${result[@]}\" | tr ' ' ',' | sed 's/^/[/;s/$/]/'",
  "    local lst=$1\n    local x=$2\n    local -a result\n    local i=0\n    local\
    \ j=0\n    while read -r line; do\n        j=0\n        for y in $line; do\n \
    \           if [[ $y == $x ]]; then\n                result+=(\"[\\\"$i\\\", \\\
    \"$j\\\"]\")\n            fi\n            j=$((j+1))\n        done\n        i=$((i+1))\n\
    \    done <<< \"$lst\"\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -t '\"\
    ' -k1 -n -k3 -r | tr '\\n' ' '", "    local lst=\"$1\"\n    local x=\"$2\"\n \
    \   local row=0\n    local col=0\n    local result=()\n    while read -r line;\
    \ do\n        col=0\n        for y in $line; do\n            if [[ \"$y\" == \"\
    $x\" ]]; then\n                result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n  \
    \          fi\n            col=$((col + 1))\n        done\n        row=$((row\
    \ + 1))\n    done <<< \"$lst\"\n    echo \"${result[@]}\" | tr ' ' ',' | sed 's/^/[/;s/$/]/'",
  "    local -a x_coordinates=()\n    local -a y_coordinates=()\n    local -a result=()\n\
    \    local -a row\n    local -i row_index=0\n    local -i column_index=0\n   \
    \ local -i x=$2\n    local -i y\n    local -i i\n    local -i j\n    local -i\
    \ k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local\
    \ -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local\
    \ -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local\
    \ -i z\n    local -i aa\n    local -i bb\n    local -i cc\n    local -i dd\n \
    \   local -i ee\n    local -i ff\n    local -i gg\n    local -i hh\n    local\
    \ -i ii\n    local -i jj\n    local -i kk\n    local -i ll\n    local -i mm\n\
    \    local -i nn\n    local -i oo\n    local -i pp\n    local -i qq\n    local\
    \ -i rr\n    local -i ss\n    local -i tt\n    local -i uu\n    local -i vv\n\
    \    local -i ww\n    local -i xx\n    local -i yy\n    local -i zz\n    local\
    \ -i aaa\n    local -i bbb\n    local -i ccc\n    local -i ddd\n    local -i eee\n\
    \    local -i fff\n    local -i ggg\n    local -i hhh\n    local -i iii\n    local\
    \ -i jjj\n    local -i kkk\n    local -i lll\n    local -i mmm\n    local -i nnn\n\
    \    local -i ooo\n    local -i ppp\n    local -i qqq\n    local -i rrr\n    local\
    \ -i sss\n    local -i ttt\n    local -i uuu\n    local -i vvv\n    local -i www\n\
    \   ", "    local lst=$1\n    local x=$2\n    local row=0\n    local col=0\n \
    \   local result=()\n    while read -r line; do\n        col=0\n        for i\
    \ in $line; do\n            if [[ $i -eq $x ]]; then\n                result+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n            col=$((col+1))\n\
    \        done\n        row=$((row+1))\n    done <<< \"$lst\"\n    echo \"${result[@]}\"\
    \ | tr ' ' '\\n' | sort -t '\"' -k 1n -k 3nr | tr '\\n' ' '", "    local lst=$1\n\
    \    local x=$2\n    local row=0\n    local col=0\n    local result=()\n    for\
    \ i in $lst; do\n        if [[ $i == $x ]]; then\n            result+=(\"[\\\"\
    $row\\\", \\\"$col\\\"]\")\n        fi\n        if [[ $i == \"\" ]]; then\n  \
    \          row=$((row + 1))\n            col=0\n        else\n            col=$((col\
    \ + 1))\n        fi\n    done\n    echo \"${result[@]}\" | sort -t '\"' -k 1n\
    \ -k 3nr", "    local lst=$1\n    local x=$2\n    local row=0\n    local col=0\n\
    \    local result=()\n    while read -r line; do\n        col=0\n        for i\
    \ in $line; do\n            if [[ $i == $x ]]; then\n                result+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n            col=$((col+1))\n\
    \        done\n        row=$((row+1))\n    done <<< \"$lst\"\n    echo \"${result[@]}\"\
    \ | tr ' ' '\\n' | sort -t '\"' -k2 -n | sort -t '\"' -k1 -n | tr '\\n' ' '",
  "    local lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n    local col=0\n  \
    \  local res=()\n    local line\n    local num\n    while read -r line; do\n \
    \       col=0\n        for num in $line; do\n            if [[ \"$num\" == \"\
    $x\" ]]; then\n                res+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n     \
    \       fi\n            col=$((col + 1))\n        done\n        row=$((row + 1))\n\
    \    done <<< \"$lst\"\n    printf \"%s\\n\" \"${res[@]}\" | sort -t '\"' -k1n\
    \ -k3nr", "    local lst=$1\n    local x=$2\n    local -a rows\n    local -a cols\n\
    \    local -a result\n    local -i i=0\n    local -i j=0\n    local -i k=0\n \
    \   local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local\
    \ -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n\
    \    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local\
    \ -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i\
    \ cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i\
    \ gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i\
    \ kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i\
    \ oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i\
    \ ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i\
    \ ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i\
    \ aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local\
    \ -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local\
    \ -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local\
    \ -", "    local lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n    local col=0\n\
    \    local result=()\n    while read -r line; do\n        col=0\n        for i\
    \ in $line; do\n            if [ \"$i\" = \"$x\" ]; then\n                result+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n            col=$((col+1))\n\
    \        done\n        row=$((row+1))\n    done <<< \"$lst\"\n    echo \"${result[@]}\"\
    \ | tr ' ' ',' | sed 's/^/[/;s/$/]/'", "    local -a lst=($(echo \"$1\" | tr '\
    \ ' '\\n'))\n    local -a res=()\n    local -i i=0\n    local -i j=0\n    local\
    \ -i k=0\n    local -i len=${#lst[@]}\n    local -i x=$2\n    local -i row=0\n\
    \    local -i col=0\n    local -i tmp=0\n    local -i tmp_row=0\n    local -i\
    \ tmp_col=0\n    local -i tmp_len=0\n    local -i tmp_x=0\n    local -i tmp_i=0\n\
    \    local -i tmp_j=0\n    local -i tmp_k=0\n    local -i tmp_len=0\n    local\
    \ -i tmp_row=0\n    local -i tmp_col=0\n    local -i tmp_x=0\n    local -i tmp_i=0\n\
    \    local -i tmp_j=0\n    local -i tmp_k=0\n    local -i tmp_len=0\n    local\
    \ -i tmp_row=0\n    local -i tmp_col=0\n    local -i tmp_x=0\n    local -i tmp_i=0\n\
    \    local -i tmp_j=0\n    local -i tmp_k=0\n    local -i tmp_len=0\n    local\
    \ -i tmp_row=0\n    local -i tmp_col=0\n    local -i tmp_x=0\n    local -i tmp_i=0\n\
    \    local -i tmp_j=0\n    local -i tmp_k=0\n    local -i tmp_len=0\n    local\
    \ -i tmp_row=0\n    local -i tmp_col=0\n    local -i tmp_x=0\n    local -i tmp_i=0\n\
    \    local -i tmp_j=0\n    local -i tmp_k=0\n    local -i tmp_len=0\n    local\
    \ -i tmp_row=0\n    local -i tmp_col=0\n    local -i tmp_x=0\n    local -i tmp_i=0\n\
    \    local -i tmp_j=0\n", "    local lst=\"$1\"\n    local x=\"$2\"\n    local\
    \ -a result=()\n    local -a row=()\n    local -a rows=()\n    local -a columns=()\n\
    \    local -a row_columns=()\n    local -a row_columns_sorted=()\n    local -a\
    \ rows_sorted=()\n    local -a columns_sorted=()\n    local -a result_sorted=()\n\
    \    local -a row_columns_sorted_reverse=()\n    local -a rows_sorted_reverse=()\n\
    \    local -a columns_sorted_reverse=()\n    local -a result_sorted_reverse=()\n\
    \    local -a row_columns_sorted_reverse_final=()\n    local -a rows_sorted_reverse_final=()\n\
    \    local -a columns_sorted_reverse_final=()\n    local -a result_sorted_reverse_final=()\n\
    \    local -a result_sorted_reverse_final_final=()\n    local -a result_sorted_reverse_final_final_final=()\n\
    \    local -a result_sorted_reverse_final_final_final_final=()\n    local -a result_sorted_reverse_final_final_final_final_final=()\n\
    \    local -a result_sorted_reverse_final_final_final_final_final_final=()\n \
    \   local -a result_sorted_reverse_final_final_final_final_final_final_final=()\n\
    \    local -a result_sorted_reverse_final_final_final_final_final_final_final_final=()\n\
    \    local -a result_sorted_reverse_final_final_final_final_final_final_final_final_final=()\n\
    \    local -a result_sorted_reverse_final_final_final_final_final_final_final_final_final_final=()\n\
    \    local -a result_sorted_reverse_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \    local -a result_sorted_reverse_final_final_final_final_final_final_final_final",
  "    local lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n    local col=0\n  \
    \  local result=()\n    for i in $(echo \"$lst\" | tr ' ' '\\n'); do\n       \
    \ if [[ \"$i\" == \"$x\" ]]; then\n            result+=(\"[\\\"$row\\\", \\\"\
    $col\\\"]\")\n        fi\n        if [[ \"$i\" == \"\" ]]; then\n            row=$((row\
    \ + 1))\n            col=0\n        else\n            col=$((col + 1))\n     \
    \   fi\n    done\n    echo \"${result[@]}\" | tr ' ' ',' | sed -e 's/^/[/' -e\
    \ 's/$/]/'", "    local lst=$1\n    local x=$2\n    local row=0\n    local col=0\n\
    \    local result=()\n    for i in $(echo \"$lst\" | tr ' ' '\\n'); do\n     \
    \   if [[ \"$i\" == \"$x\" ]]; then\n            result+=(\"[\\\"$row\\\", \\\"\
    $col\\\"]\")\n        fi\n        col=$((col + 1))\n        if [[ \"$i\" == \"\
    \" ]]; then\n            row=$((row + 1))\n            col=0\n        fi\n   \
    \ done\n    echo \"${result[@]}\" | tr ' ' ',' | sed 's/^/[/;s/$/]/'", "    local\
    \ lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n    local col=0\n    local\
    \ res=()\n    while read -r line; do\n        col=0\n        for num in $line;\
    \ do\n            if [[ \"$num\" -eq \"$x\" ]]; then\n                res+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n            col=$((col + 1))\n\
    \        done\n        row=$((row + 1))\n    done <<< \"$lst\"\n    echo \"${res[@]}\"\
    \ | tr ' ' ',' | sed 's/^/[/;s/$/]/'", "    local lst=\"$1\"\n    local x=\"$2\"\
    \n    local -a res=()\n    local -a row=()\n    local -a col=()\n    local -a\
    \ rows=()\n    local -a cols=()\n    local -a tmp=()\n    local -a tmp2=()\n \
    \   local -a tmp3=()\n    local -a tmp4=()\n    local -a tmp5=()\n    local -a\
    \ tmp6=()\n    local -a tmp7=()\n    local -a tmp8=()\n    local -a tmp9=()\n\
    \    local -a tmp10=()\n    local -a tmp11=()\n    local -a tmp12=()\n    local\
    \ -a tmp13=()\n    local -a tmp14=()\n    local -a tmp15=()\n    local -a tmp16=()\n\
    \    local -a tmp17=()\n    local -a tmp18=()\n    local -a tmp19=()\n    local\
    \ -a tmp20=()\n    local -a tmp21=()\n    local -a tmp22=()\n    local -a tmp23=()\n\
    \    local -a tmp24=()\n    local -a tmp25=()\n    local -a tmp26=()\n    local\
    \ -a tmp27=()\n    local -a tmp28=()\n    local -a tmp29=()\n    local -a tmp30=()\n\
    \    local -a tmp31=()\n    local -a tmp32=()\n    local -a tmp33=()\n    local\
    \ -a tmp34=()\n    local -a tmp35=()\n    local -a tmp36=()\n    local -a tmp37=()\n\
    \    local -a tmp38=()\n    local -a tmp39=()\n    local -a tmp40=()\n    local\
    \ -a tmp41=()\n    local -a tmp42=()\n    local -a tmp43=()\n    local -a tmp44=()\n\
    \    local -a tmp45=()\n    local -a tmp46=()\n    local -a tmp47=()\n    local\
    \ -a tmp48=()\n    local -a tmp49=()\n    local -a tmp50=()\n    local -a", " \
    \   local -a rows\n    local -a cols\n    local -a row_cols\n    local -a row_cols_sorted\n\
    \    local -a row_cols_sorted_desc\n    local -a row_cols_sorted_desc_str\n  \
    \  local -a row_cols_sorted_desc_str_quoted\n    local -a row_cols_sorted_desc_str_quoted_joined\n\
    \    local -a row_cols_sorted_desc_str_quoted_joined_quoted\n    local -a row_cols_sorted_desc_str_quoted_joined_quoted_joined\n\
    \    local -a row_cols_sorted_desc_str_quoted_joined_quoted_joined_joined\n  \
    \  local -a row_cols_sorted_desc_str_quoted_joined_quoted_joined_joined_joined\n\
    \    local -a row_cols_sorted_desc_str_quoted_joined_quoted_joined_joined_joined_joined\n\
    \    local -a row_cols_sorted_desc_str_quoted_joined_quoted_joined_joined_joined_joined_joined\n\
    \    local -a row_cols_sorted_desc_str_quoted_joined_quoted_joined_joined_joined_joined_joined_joined\n\
    \    local -a row_cols_sorted_desc_str_quoted_joined_quoted_joined_joined_joined_joined_joined_joined_joined\n\
    \    local -a row_cols_sorted_desc_str_quoted_joined_quoted_joined_joined_joined_joined_joined_joined_joined_joined\n\
    \    local -a row_cols_sorted_desc_str_quoted_joined_quoted_joined_joined_joined_joined_joined_joined_joined_joined_joined\n\
    \    local -a row_cols_sorted_desc_str_quoted_joined_quoted_joined_joined_joined_joined_joined_joined_joined_joined_joined_joined\n\
    \    local -a row_cols_sorted_desc_str_quoted_joined_quoted_joined_joined_joined_joined_joined",
  "    local lst=$1\n    local x=$2\n    local -a res=()\n    local -a row=()\n  \
    \  local -a col=()\n    local -a row_col=()\n    local -a row_col_sorted=()\n\
    \    local -a row_col_sorted_rev=()\n    local -a row_col_sorted_rev_str=()\n\
    \    local -a res_str=()\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ m=0\n    local n=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n\
    \    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n \
    \   local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n\
    \    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n\
    \    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n\
    \    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n\
    \    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n\
    \    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n\
    \    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local\
    \ ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n\
    \    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local\
    \ ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n\
    \   ", "    local lst=$1\n    local x=$2\n    local -a rows\n    local -a cols\n\
    \    local -a row\n    local -a col\n    local -a res\n    local -a tmp\n    local\
    \ -a tmp2\n    local -a tmp3\n    local -a tmp4\n    local -a tmp5\n    local\
    \ -a tmp6\n    local -a tmp7\n    local -a tmp8\n    local -a tmp9\n    local\
    \ -a tmp10\n    local -a tmp11\n    local -a tmp12\n    local -a tmp13\n    local\
    \ -a tmp14\n    local -a tmp15\n    local -a tmp16\n    local -a tmp17\n    local\
    \ -a tmp18\n    local -a tmp19\n    local -a tmp20\n    local -a tmp21\n    local\
    \ -a tmp22\n    local -a tmp23\n    local -a tmp24\n    local -a tmp25\n    local\
    \ -a tmp26\n    local -a tmp27\n    local -a tmp28\n    local -a tmp29\n    local\
    \ -a tmp30\n    local -a tmp31\n    local -a tmp32\n    local -a tmp33\n    local\
    \ -a tmp34\n    local -a tmp35\n    local -a tmp36\n    local -a tmp37\n    local\
    \ -a tmp38\n    local -a tmp39\n    local -a tmp40\n    local -a tmp41\n    local\
    \ -a tmp42\n    local -a tmp43\n    local -a tmp44\n    local -a tmp45\n    local\
    \ -a tmp46\n    local -a tmp47\n    local -a tmp48\n    local -a tmp49\n    local\
    \ -a tmp50\n    local -a tmp51\n    local -a tmp52\n    local -a tmp53\n    local\
    \ -a tmp54\n    local -a tmp55\n    local -a tmp56\n    local -a tmp57\n    local\
    \ -a tmp58\n    local -a tmp59\n    local -a tmp60\n    local -a tmp61\n    local\
    \ -a tmp62\n    local -a tmp63\n    local -a tmp64\n    local -a tmp65\n    local\
    \ -a tmp66\n    local -a tmp67", "    local lst=$1\n    local x=$2\n    local\
    \ row=0\n    local col=0\n    local result=()\n    while read -r line; do\n  \
    \      col=0\n        for y in $line; do\n            if [[ $y -eq $x ]]; then\n\
    \                result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n\
    \            col=$((col + 1))\n        done\n        row=$((row + 1))\n    done\
    \ <<< \"$lst\"\n    echo \"${result[@]}\" | tr ' ' ',' | sed 's/^/[/;s/$/]/'",
  "    local lst=$1\n    local x=$2\n    local row=0\n    local col=0\n    local result=()\n\
    \    local row_result=()\n    for i in $lst; do\n        if [[ $i == $x ]]; then\n\
    \            row_result+=(\"$row\")\n            row_result+=(\"$col\")\n    \
    \        result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n        fi\n        if [[\
    \ $i == $'\\n' ]]; then\n            row=$((row + 1))\n            col=0\n   \
    \     else\n            col=$((col + 1))\n        fi\n    done\n    if [[ ${#result[@]}\
    \ -eq 0 ]]; then\n        echo \"[]\"\n    else\n        echo \"${result[@]}\"\
    \ | tr ' ' '\\n' | sort -n -k1 -k2 | tr '\\n' ' '\n    fi", "    local -a row\n\
    \    local -a col\n    local -a result\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\
    \ -i lll=0\n    local -i mmm=0\n    local -i nnn=0", "  local lst=\"$1\"\n  local\
    \ x=\"$2\"\n  local row=0\n  local col=0\n  local result=()\n  for i in $lst;\
    \ do\n    if [ \"$i\" == \"$x\" ]; then\n      result+=(\"[\\\"$row\\\", \\\"\
    $col\\\"]\")\n    fi\n    if [ \"$i\" == \"$'\\n'\" ]; then\n      row=$((row\
    \ + 1))\n      col=0\n    else\n      col=$((col + 1))\n    fi\n  done\n  echo\
    \ \"${result[@]}\" | sort -t\"\\\"\" -k1,1n -k3,3nr", "    local lst=$1\n    local\
    \ x=$2\n    local row=0\n    local col=0\n    local result=()\n    while read\
    \ -r line; do\n        col=0\n        for i in $line; do\n            if [[ $i\
    \ -eq $x ]]; then\n                result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n\
    \            fi\n            col=$((col+1))\n        done\n        row=$((row+1))\n\
    \    done <<< \"$lst\"\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -t '\"\
    ' -k1,1n -k3,3nr | tr '\\n' ' '", "    local -a rows\n    local -a row\n    local\
    \ -a cols\n    local -a col\n    local -a result\n    local -a row_result\n  \
    \  local -a col_result\n    local -a row_col_result\n    local -a row_col_result_sorted\n\
    \    local -a row_col_result_sorted_desc\n    local -a row_col_result_sorted_desc_result\n\
    \    local -a row_col_result_sorted_desc_result_sorted\n    local -a row_col_result_sorted_desc_result_sorted_result\n\
    \    local -a row_col_result_sorted_desc_result_sorted_result_sorted\n    local\
    \ -a row_col_result_sorted_desc_result_sorted_result_sorted_result\n    local\
    \ -a row_col_result_sorted_desc_result_sorted_result_sorted_result_sorted\n  \
    \  local -a row_col_result_sorted_desc_result_sorted_result_sorted_result_sorted_result\n\
    \    local -a row_col_result_sorted_desc_result_sorted_result_sorted_result_sorted_result_sorted\n\
    \    local -a row_col_result_sorted_desc_result_sorted_result_sorted_result_sorted_result_sorted_result\n\
    \    local -a row_col_result_sorted_desc_result_sorted_result_sorted_result_sorted_result_sorted_result_sorted\n\
    \    local -a row_col_result_sorted_desc_result_sorted_result_sorted_result_sorted_result_sorted_result_sorted_result\n\
    \    local -a row_col_result_sorted_desc_result_sorted_result_sorted_result_sorted_result_sorted_result_sorted_result_sorted\n\
    \    local -a row_col_result_sorted_desc_result_sorted_result_sorted_result_sorted_result_sorted_result_sorted_result_sorted_result\n\
    \    local -a row_col", "    local lst=$1\n    local x=$2\n    local -i i=0\n\
    \    local -i j=0\n    local -i k=0\n    local -i n=0\n    local -i m=0\n    local\
    \ -a arr=()\n    local -a res=()\n    local -a tmp=()\n    local -a tmp1=()\n\
    \    local -a tmp2=()\n    local -a tmp3=()\n    local -a tmp4=()\n    local -a\
    \ tmp5=()\n    local -a tmp6=()\n    local -a tmp7=()\n    local -a tmp8=()\n\
    \    local -a tmp9=()\n    local -a tmp10=()\n    local -a tmp11=()\n    local\
    \ -a tmp12=()\n    local -a tmp13=()\n    local -a tmp14=()\n    local -a tmp15=()\n\
    \    local -a tmp16=()\n    local -a tmp17=()\n    local -a tmp18=()\n    local\
    \ -a tmp19=()\n    local -a tmp20=()\n    local -a tmp21=()\n    local -a tmp22=()\n\
    \    local -a tmp23=()\n    local -a tmp24=()\n    local -a tmp25=()\n    local\
    \ -a tmp26=()\n    local -a tmp27=()\n    local -a tmp28=()\n    local -a tmp29=()\n\
    \    local -a tmp30=()\n    local -a tmp31=()\n    local -a tmp32=()\n    local\
    \ -a tmp33=()\n    local -a tmp34=()\n    local -a tmp35=()\n    local -a tmp36=()\n\
    \    local -a tmp37=()\n    local -a tmp38=()\n    local -a tmp39=()\n    local\
    \ -a tmp40=()\n    local -a tmp41=()\n    local -a tmp42=()\n    local -a tmp43=()\n\
    \    local -a tmp44=()\n    local -a tmp45=()\n    local -a tmp46=()\n    local\
    \ -a tmp47=()\n    local -a tmp48=()\n    local", "    local lst=\"$1\"\n    local\
    \ x=\"$2\"\n    local row=0\n    local col=0\n    local result=()\n    local row_result=()\n\
    \    local row_results=()\n    local row_results_sorted=()\n    local row_results_sorted_reversed=()\n\
    \    local row_results_sorted_reversed_string=()\n    local row_results_sorted_reversed_string_joined=()\n\
    \    while read -r line; do\n        col=0\n        row_result=()\n        for\
    \ item in $line; do\n            if [[ \"$item\" == \"$x\" ]]; then\n        \
    \        row_result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n    \
    \        col=$((col + 1))\n        done\n        row_results+=(\"${row_result[@]}\"\
    )\n        row=$((row + 1))\n    done <<< \"$lst\"\n    for row_result in \"${row_results[@]}\"\
    ; do\n        row_results_sorted+=(\"$(echo \"$row_result\" | sort -r)\")\n  \
    \  done\n    for row_result in \"${row_results_sorted[@]}\"; do\n        row_results_sorted_reversed+=(\"\
    $(echo \"$row_result\" | sort)\")\n    done\n    for row_result in \"${row_results_sorted_reversed[@]}\"\
    ; do\n        row_results_sorted_reversed_string+=(\"$(echo \"$row_result\" |\
    \ tr -d '\\n' | tr -d ' ')\")\n    done\n    row_results_sorted_reversed_string_joined=\"\
    $(echo \"${row_results_sorted_reversed_string[@]}\" | tr ' ' ',')\"\n    echo\
    \ \"[$row_results_sorted_reversed_string_joined]\"", "    local lst=$1\n    local\
    \ x=$2\n    local row=0\n    local col=0\n    local result=()\n    for i in $(echo\
    \ \"$lst\" | tr ' ' '\\n'); do\n        if [[ $i == $x ]]; then\n            result+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n        fi\n        if [[ $i == $'\\n' ]]; then\n\
    \            row=$((row + 1))\n            col=0\n        else\n            col=$((col\
    \ + 1))\n        fi\n    done\n    echo \"${result[@]}\" | tr ' ' ',' | sed 's/^/[/;s/$/]/'",
  "    local lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n    local col=0\n  \
    \  local result=()\n    for line in $lst; do\n        col=0\n        for num in\
    \ $line; do\n            if [ \"$num\" == \"$x\" ]; then\n                result+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n            col=$((col+1))\n\
    \        done\n        row=$((row+1))\n    done\n    echo \"${result[@]}\" | sort\
    \ -t '\"' -k 1n -k 3nr", "    local lst=$1\n    local x=$2\n    local row=0\n\
    \    local col=0\n    local res=()\n    while read -r line; do\n        col=0\n\
    \        for i in $line; do\n            if [[ $i == $x ]]; then\n           \
    \     res+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n            col=$((col+1))\n\
    \        done\n        row=$((row+1))\n    done <<< \"$lst\"\n    echo \"${res[@]}\"\
    \ | tr ' ' '\\n' | sort -t'\"' -k1n -k2nr | tr '\\n' ' '", "  local lst=$1\n \
    \ local x=$2\n  local row=0\n  local col=0\n  local result=()\n  for i in $lst;\
    \ do\n    if [ $i -eq $x ]; then\n      result+=(\"[\\\"$row\\\", \\\"$col\\\"\
    ]\")\n    fi\n    col=$((col+1))\n    if [ $i == $'\\n' ]; then\n      row=$((row+1))\n\
    \      col=0\n    fi\n  done\n  echo ${result[@]} | tr ' ' ',' | sed 's/^/[/;s/$/]/'",
  "    local lst=\"$1\"\n    local x=\"$2\"\n    local rows=$(echo \"$lst\" | wc -l)\n\
    \    local cols=$(echo \"$lst\" | head -n 1 | wc -w)\n    local row=0\n    local\
    \ col=0\n    local result=\"\"\n    for ((row=0; row<rows; row++)); do\n     \
    \   for ((col=0; col<cols; col++)); do\n            local val=$(echo \"$lst\"\
    \ | head -n $((row+1)) | tail -n 1 | awk \"{print \\$$((col+1))}\")\n        \
    \    if [[ \"$val\" == \"$x\" ]]; then\n                result=\"$result [\\\"\
    $row\\\", \\\"$col\\\"]\"\n            fi\n        done\n    done\n    echo \"\
    $result\" | sort -k1n -k2nr | tr -d ' '", "  local lst=\"$1\"\n  local x=\"$2\"\
    \n  local row=0\n  local col=0\n  local result=\"\"\n  while read -r line; do\n\
    \    col=0\n    for i in $line; do\n      if [[ \"$i\" -eq \"$x\" ]]; then\n \
    \       result=\"$result [\\\"$row\\\", \\\"$col\\\"]\"\n      fi\n      col=$((col+1))\n\
    \    done\n    row=$((row+1))\n  done <<< \"$lst\"\n  echo \"$result\" | sort\
    \ -t '\"' -k 2 -n -r | sort -t '\"' -k 1 -n", "    local lst=$1\n    local x=$2\n\
    \    local row=0\n    local col=0\n    local result=()\n    while read -r line;\
    \ do\n        col=0\n        for i in $line; do\n            if [[ $i == $x ]];\
    \ then\n                result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n         \
    \   fi\n            col=$((col+1))\n        done\n        row=$((row+1))\n   \
    \ done <<< \"$lst\"\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -t '\"' -k\
    \ 1n -k 3nr | tr '\\n' ' '", "    local -a result\n    local -a row\n    local\
    \ -a col\n    local -a row_col\n    local -a row_col_sorted\n    local -a row_col_sorted_desc\n\
    \    local -a row_col_sorted_desc_str\n    local -a row_col_sorted_desc_str_sorted\n\
    \    local -a row_col_sorted_desc_str_sorted_str\n    local -a row_col_sorted_desc_str_sorted_str_sorted\n\
    \    local -a row_col_sorted_desc_str_sorted_str_sorted_str\n    local -a row_col_sorted_desc_str_sorted_str_sorted_str_sorted\n\
    \    local -a row_col_sorted_desc_str_sorted_str_sorted_str_sorted_str\n    local\
    \ -a row_col_sorted_desc_str_sorted_str_sorted_str_sorted_str_sorted\n    local\
    \ -a row_col_sorted_desc_str_sorted_str_sorted_str_sorted_str_sorted_str\n   \
    \ local -a row_col_sorted_desc_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted\n\
    \    local -a row_col_sorted_desc_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str\n\
    \    local -a row_col_sorted_desc_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted\n\
    \    local -a row_col_sorted_desc_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str\n\
    \    local -a row_col_sorted_desc_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted\n\
    \    local -a row_col_sorted_desc_str_sorted_str_", "  local lst=$1\n  local x=$2\n\
    \  local -a rows\n  local -a row\n  local -a cols\n  local -a col\n  local -a\
    \ result\n  local -a row_col\n  local -a row_cols\n  local -a row_cols_sorted\n\
    \  local -a row_cols_sorted_desc\n  local -a row_cols_sorted_desc_str\n  local\
    \ -a row_cols_sorted_desc_str_sorted\n  local -a row_cols_sorted_desc_str_sorted_str\n\
    \  local -a row_cols_sorted_desc_str_sorted_str_sorted\n  local -a row_cols_sorted_desc_str_sorted_str_sorted_str\n\
    \  local -a row_cols_sorted_desc_str_sorted_str_sorted_str_sorted\n  local -a\
    \ row_cols_sorted_desc_str_sorted_str_sorted_str_sorted_str\n  local -a row_cols_sorted_desc_str_sorted_str_sorted_str_sorted_str_sorted\n\
    \  local -a row_cols_sorted_desc_str_sorted_str_sorted_str_sorted_str_sorted_str\n\
    \  local -a row_cols_sorted_desc_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted\n\
    \  local -a row_cols_sorted_desc_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str\n\
    \  local -a row_cols_sorted_desc_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted\n\
    \  local -a row_cols_sorted_desc_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str\n\
    \  local -a row_cols_sorted_desc_str_sorted", "    local lst=\"$1\"\n    local\
    \ x=\"$2\"\n    local row=0\n    local col=0\n    local result=()\n    while read\
    \ -r line; do\n        col=0\n        for word in $line; do\n            if [[\
    \ \"$word\" == \"$x\" ]]; then\n                result+=(\"[\\\"$row\\\", \\\"\
    $col\\\"]\")\n            fi\n            col=$((col + 1))\n        done\n   \
    \     row=$((row + 1))\n    done <<< \"$lst\"\n    echo \"${result[@]}\" | tr\
    \ ' ' ',' | sed 's/^/[/;s/$/]/'", "    local lst=$1\n    local x=$2\n    local\
    \ row=0\n    local col=0\n    local result=()\n    while read -r line; do\n  \
    \      col=0\n        for i in $line; do\n            if [[ $i == $x ]]; then\n\
    \                result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n\
    \            col=$((col+1))\n        done\n        row=$((row+1))\n    done <<<\
    \ \"$lst\"\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -t '\"' -k1n -k3nr\
    \ | tr '\\n' ' '", "    local lst=$1\n    local x=$2\n    local row=0\n    local\
    \ col=0\n    local result=()\n    for i in $lst; do\n        if [[ $i == $x ]];\
    \ then\n            result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n        fi\n \
    \       col=$((col + 1))\n        if [[ $i == $'\\n' ]]; then\n            row=$((row\
    \ + 1))\n            col=0\n        fi\n    done\n    echo \"${result[@]}\" |\
    \ sort -t '\"' -k 1,1n -k 3,3nr", "    local lst=\"$1\"\n    local x=\"$2\"\n\
    \    local row_num=0\n    local col_num=0\n    local result=\"\"\n    while read\
    \ -r row; do\n        col_num=0\n        for col in $row; do\n            if [[\
    \ \"$col\" == \"$x\" ]]; then\n                result=\"$result [\\\"$row_num\\\
    \", \\\"$col_num\\\"]\"\n            fi\n            col_num=$((col_num + 1))\n\
    \        done\n        row_num=$((row_num + 1))\n    done <<< \"$lst\"\n    echo\
    \ \"$result\" | sort -k1,1n -k2,2nr | tr -d ' '", "    local lst=$1\n    local\
    \ x=$2\n    local row=0\n    local col=0\n    local result=()\n    for i in $lst;\
    \ do\n        if [[ $i == $x ]]; then\n            result+=(\"[\\\"$row\\\", \\\
    \"$col\\\"]\")\n        fi\n        if [[ $i == \"\" ]]; then\n            row=$((row\
    \ + 1))\n            col=0\n        else\n            col=$((col + 1))\n     \
    \   fi\n    done\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -t '\"' -k 1n\
    \ -k 3nr | tr '\\n' ' '", "    local -a data\n    local -a row\n    local -a col\n\
    \    local -a result\n    local -i i=0\n    local -i j=0\n    local -i k=0\n \
    \   local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local\
    \ -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n\
    \    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local\
    \ -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i\
    \ cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i\
    \ gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i\
    \ kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i\
    \ oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i\
    \ ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i\
    \ ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i\
    \ aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local\
    \ -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local\
    \ -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local\
    \ -i mmm=0\n    local", "  local lst=\"$1\"\n  local x=\"$2\"\n  local row=0\n\
    \  local col=0\n  local res=()\n  while read -r line; do\n    col=0\n    for y\
    \ in $line; do\n      if [[ \"$y\" == \"$x\" ]]; then\n        res+=(\"[\\\"$row\\\
    \", \\\"$col\\\"]\")\n      fi\n      col=$((col + 1))\n    done\n    row=$((row\
    \ + 1))\n  done <<< \"$lst\"\n  if [[ ${#res[@]} -eq 0 ]]; then\n    echo \"[]\"\
    \n  else\n    echo \"$(IFS=,; echo \"${res[*]}\")\"\n  fi", "    local lst=\"\
    $1\"\n    local x=\"$2\"\n    local row=0\n    local col=0\n    local result=()\n\
    \    for i in $lst; do\n        if [ \"$i\" == \"$x\" ]; then\n            result+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n        fi\n        if [ \"$i\" == $'\\n' ];\
    \ then\n            row=$((row + 1))\n            col=0\n        else\n      \
    \      col=$((col + 1))\n        fi\n    done\n    echo \"${result[@]}\" | sort\
    \ -t '\"' -k 1n -k 3nr", "    local -a rows\n    local -a cols\n    local -a coords\n\
    \    local -a row\n    local -a col\n    local -a coord\n    local -a result\n\
    \    local -a row_result\n    local -a col_result\n    local -a coord_result\n\
    \    local -a row_col_result\n    local -a row_coord_result\n    local -a coord_result\n\
    \    local -a row_col_coord_result\n    local -a row_col_coord_result_sorted\n\
    \    local -a row_col_coord_result_sorted_result\n    local -a row_col_coord_result_sorted_result_result\n\
    \    local -a row_col_coord_result_sorted_result_result_result\n    local -a row_col_coord_result_sorted_result_result_result_result\n\
    \    local -a row_col_coord_result_sorted_result_result_result_result_result\n\
    \    local -a row_col_coord_result_sorted_result_result_result_result_result_result\n\
    \    local -a row_col_coord_result_sorted_result_result_result_result_result_result_result\n\
    \    local -a row_col_coord_result_sorted_result_result_result_result_result_result_result_result\n\
    \    local -a row_col_coord_result_sorted_result_result_result_result_result_result_result_result_result\n\
    \    local -a row_col_coord_result_sorted_result_result_result_result_result_result_result_result_result_result\n\
    \    local -a row_col_coord_result_sorted_result_result_result_result_result_result_result_result_result_result_result\n\
    \    local -a row_col_coord_result_sorted_result_result_result_result_result_result_result_result_result_result_result_result\n\
    \    local -a row_col_coord_result_sorted_result_result_result_result_result_result_result_result_result_result_result_result_result\n\
    \    local -a row_col_coord_result", "    local lst=\"$1\"\n    local x=\"$2\"\
    \n    local i=0\n    local j=0\n    local result=()\n    for row in $lst; do\n\
    \        j=0\n        for col in $row; do\n            if [[ \"$col\" == \"$x\"\
    \ ]]; then\n                result+=(\"[\\\"$i\\\", \\\"$j\\\"]\")\n         \
    \   fi\n            j=$((j+1))\n        done\n        i=$((i+1))\n    done\n \
    \   echo \"${result[@]}\" | tr ' ' ',' | sed 's/^/[/;s/$/]/'", "    local lst=$1\n\
    \    local x=$2\n    local -a res=()\n    local -a row=()\n    local -a col=()\n\
    \    local -a tmp=()\n    local -a tmp2=()\n    local -a tmp3=()\n    local -a\
    \ tmp4=()\n    local -a tmp5=()\n    local -a tmp6=()\n    local -a tmp7=()\n\
    \    local -a tmp8=()\n    local -a tmp9=()\n    local -a tmp10=()\n    local\
    \ -a tmp11=()\n    local -a tmp12=()\n    local -a tmp13=()\n    local -a tmp14=()\n\
    \    local -a tmp15=()\n    local -a tmp16=()\n    local -a tmp17=()\n    local\
    \ -a tmp18=()\n    local -a tmp19=()\n    local -a tmp20=()\n    local -a tmp21=()\n\
    \    local -a tmp22=()\n    local -a tmp23=()\n    local -a tmp24=()\n    local\
    \ -a tmp25=()\n    local -a tmp26=()\n    local -a tmp27=()\n    local -a tmp28=()\n\
    \    local -a tmp29=()\n    local -a tmp30=()\n    local -a tmp31=()\n    local\
    \ -a tmp32=()\n    local -a tmp33=()\n    local -a tmp34=()\n    local -a tmp35=()\n\
    \    local -a tmp36=()\n    local -a tmp37=()\n    local -a tmp38=()\n    local\
    \ -a tmp39=()\n    local -a tmp40=()\n    local -a tmp41=()\n    local -a tmp42=()\n\
    \    local -a tmp43=()\n    local -a tmp44=()\n    local -a tmp45=()\n    local\
    \ -a tmp46=()\n    local -a tmp47=()\n    local -a tmp48=()\n    local -a tmp49=()\n\
    \    local -a tmp50=()\n    local -a tmp51=()\n    local -a tmp52=()\n    local\
    \ -a tmp53=", "  local lst=$1\n  local x=$2\n  local row=0\n  local col=0\n  local\
    \ result=()\n  for i in $lst; do\n    if [[ $i == $x ]]; then\n      result+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n    fi\n    if [[ $i == $'\\n' ]]; then\n   \
    \   ((row++))\n      col=0\n    else\n      ((col++))\n    fi\n  done\n  echo\
    \ \"${result[@]}\" | sort -t '\"' -k1n -k3nr", "    local lst=\"$1\"\n    local\
    \ x=\"$2\"\n    local row=0\n    local col=0\n    local result=()\n    while read\
    \ -r line; do\n        col=0\n        for i in $line; do\n            if [[ \"\
    $i\" == \"$x\" ]]; then\n                result+=(\"[\\\"$row\\\", \\\"$col\\\"\
    ]\")\n            fi\n            col=$((col+1))\n        done\n        row=$((row+1))\n\
    \    done <<< \"$lst\"\n    # sort by row in ascending order\n    IFS=$'\\n' sorted=($(sort\
    \ <<< \"${result[*]}\"))\n    unset IFS\n    # sort by column in descending order\n\
    \    for ((i=0; i<${#sorted[@]}; i++)); do\n        sorted[$i]=$(echo \"${sorted[$i]}\"\
    \ | sed -E 's/\\[\\\"([0-9]+)\\\", \\\"([0-9]+)\\\"\\]/\\2 \\1/')\n    done\n\
    \    IFS=$'\\n' sorted=($(sort -r <<< \"${sorted[*]}\"))\n    unset IFS\n    #\
    \ convert back to original format\n    for ((i=0; i<${#sorted[@]}; i++)); do\n\
    \        sorted[$i]=$(echo \"${sorted[$i]}\" | sed -E 's/([0-9]+) ([0-9]+)/\\\
    [\\\"\\2\\\", \\\"\\1\\\"\\]/')\n    done\n    echo \"${sorted[*]}\"", "    local\
    \ lst=\"$1\"\n    local x=\"$2\"\n    local -a rows\n    local -a row\n    local\
    \ -a coords\n    local -a coord\n    local -a result\n    local -a result_row\n\
    \    local -a result_col\n    local -a result_row_col\n    local -a result_row_col_str\n\
    \    local -a result_row_col_str_quoted\n    local -a result_row_col_str_quoted_joined\n\
    \    local -a result_row_col_str_quoted_joined_quoted\n    local -a result_row_col_str_quoted_joined_quoted_joined\n\
    \    local -a result_row_col_str_quoted_joined_quoted_joined_quoted\n    local\
    \ -a result_row_col_str_quoted_joined_quoted_joined_quoted_joined\n    local -a\
    \ result_row_col_str_quoted_joined_quoted_joined_quoted_joined_quoted\n    local\
    \ -a result_row_col_str_quoted_joined_quoted_joined_quoted_joined_quoted_joined\n\
    \    local -a result_row_col_str_quoted_joined_quoted_joined_quoted_joined_quoted_joined_quoted\n\
    \    local -a result_row_col_str_quoted_joined_quoted_joined_quoted_joined_quoted_joined_quoted_joined\n\
    \    local -a result_row_col_str_quoted_joined_quoted_joined_quoted_joined_quoted_joined_quoted_joined_quoted\n\
    \    local -a result_row_col_str_quoted_joined_quoted_joined_quoted_joined_quoted_joined_quoted_joined_quoted_joined\n\
    \    local -a result_row_col_str_quoted_joined_quoted_joined_quoted_joined_quoted_joined_quoted_joined_quoted_joined_quoted\n\
    \    local -a result_row_col_str_quoted_joined_quoted_joined_quoted_joined_quoted_joined_quoted_joined_qu",
  "    local -a lst=($(echo \"$1\" | tr ' ' '\\n'))\n    local -a res=()\n    local\
    \ -a tmp=()\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i\
    \ l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n\
    \    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local\
    \ -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n\
    \    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n \
    \   local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n \
    \   local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n \
    \   local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n \
    \   local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n \
    \   local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n \
    \   local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n\
    \    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n\
    \    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n\
    \    local -i jjj=0\n    local -i kkk=0\n    local -i ll", "  local lst=\"$1\"\
    \n  local x=\"$2\"\n  local row=0\n  local col=0\n  local result=()\n  local row_result=()\n\
    \  local row_results=()\n  while read -r line; do\n    col=0\n    row_result=()\n\
    \    for item in $line; do\n      if [[ \"$item\" == \"$x\" ]]; then\n       \
    \ row_result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n      fi\n      col=$((col+1))\n\
    \    done\n    if [[ \"${#row_result[@]}\" -gt 0 ]]; then\n      row_results+=(\"\
    ${row_result[@]}\")\n    fi\n    row=$((row+1))\n  done <<< \"$lst\"\n  if [[\
    \ \"${#row_results[@]}\" -gt 0 ]]; then\n    result+=(\"${row_results[@]}\")\n\
    \  fi\n  echo \"${result[@]}\"", "    local lst=$1\n    local x=$2\n    local\
    \ row=0\n    local col=0\n    local res=\"\"\n    for i in $lst; do\n        if\
    \ [ \"$i\" = \"$x\" ]; then\n            res=\"$res [\\\"$row\\\", \\\"$col\\\"\
    ]\"\n        fi\n        if [ \"$i\" = \"\\n\" ]; then\n            row=$((row\
    \ + 1))\n            col=0\n        else\n            col=$((col + 1))\n     \
    \   fi\n    done\n    echo \"$res\" | sort -t '\"' -k 2 -n -r -s | sort -t '\"\
    ' -k 1 -n -s", "    local -a arr=($(echo \"$1\" | tr ' ' '\\n'))\n    local -a\
    \ res=()\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i len=${#arr[@]}\n\
    \    while [ $i -lt $len ]; do\n        if [ \"${arr[$i]}\" = \"$2\" ]; then\n\
    \            res[$k]=\"[\\\"$j\\\", \\\"$i\\\"]\"\n            ((k++))\n     \
    \   fi\n        ((i++))\n        if [ $i -eq $len ] || [ \"${arr[$i]}\" = \"\\\
    n\" ]; then\n            ((j++))\n            i=$((i + 1))\n        fi\n    done\n\
    \    echo \"${res[@]}\" | tr ' ' '\\n' | sort -t '\"' -k 2 -n -r | sort -t '\"\
    ' -k 1 -n", "    local lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n    local\
    \ col=0\n    local result=()\n    for i in $(echo \"$lst\" | tr ' ' '\\n'); do\n\
    \        if [[ \"$i\" == \"$x\" ]]; then\n            result+=(\"[\\\"$row\\\"\
    , \\\"$col\\\"]\")\n        fi\n        if [[ \"$i\" == \"\" ]]; then\n      \
    \      row=$((row + 1))\n            col=0\n        else\n            col=$((col\
    \ + 1))\n        fi\n    done\n    echo \"${result[@]}\" | tr ' ' ',' | sed 's/^/[/;s/$/]/'",
  "    local lst=\"$1\"\n    local x=\"$2\"\n    local i=0\n    local j=0\n    local\
    \ row=0\n    local col=0\n    local res=()\n    local tmp=()\n    local row_res=()\n\
    \    local row_tmp=()\n    local row_res_sorted=()\n    local row_tmp_sorted=()\n\
    \    local res_sorted=()\n    local tmp_sorted=()\n    local row_res_sorted_str=()\n\
    \    local row_tmp_sorted_str=()\n    local res_sorted_str=()\n    local tmp_sorted_str=()\n\
    \    local row_res_sorted_str_sorted=()\n    local row_tmp_sorted_str_sorted=()\n\
    \    local res_sorted_str_sorted=()\n    local tmp_sorted_str_sorted=()\n    local\
    \ row_res_sorted_str_sorted_str=()\n    local row_tmp_sorted_str_sorted_str=()\n\
    \    local res_sorted_str_sorted_str=()\n    local tmp_sorted_str_sorted_str=()\n\
    \    local row_res_sorted_str_sorted_str_sorted=()\n    local row_tmp_sorted_str_sorted_str_sorted=()\n\
    \    local res_sorted_str_sorted_str_sorted=()\n    local tmp_sorted_str_sorted_str_sorted=()\n\
    \    local row_res_sorted_str_sorted_str_sorted_str=()\n    local row_tmp_sorted_str_sorted_str_sorted_str=()\n\
    \    local res_sorted_str_sorted_str_sorted_str=()\n    local tmp_sorted_str_sorted_str_sorted_str=()\n\
    \    local row_res_sorted_str_sorted_str_sorted_str_sorted=()\n    local row_tmp_sorted_str_sorted_str_sorted_str_sorted=()\n\
    \    local res_sorted", "    local lst=$1\n    local x=$2\n    local row=0\n \
    \   local col=0\n    local result=()\n    for i in $lst; do\n        if [[ $i\
    \ == $x ]]; then\n            result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n   \
    \     fi\n        if [[ $i == \"\" ]]; then\n            row=$((row + 1))\n  \
    \          col=0\n        else\n            col=$((col + 1))\n        fi\n   \
    \ done\n    echo ${result[@]} | tr ' ' ',' | sed -e 's/\\[\\(.*\\)\\]/\\[\\1\\\
    ]/'", "    local lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n    local col=0\n\
    \    local result=()\n    while read -r line; do\n        col=0\n        for y\
    \ in $line; do\n            if [[ \"$y\" == \"$x\" ]]; then\n                result+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n            col=$((col + 1))\n\
    \        done\n        row=$((row + 1))\n    done <<< \"$lst\"\n    echo \"${result[@]}\"\
    \ | tr ' ' ',' | sed 's/^/[/;s/$/]/'", "    local -a rows\n    local -a columns\n\
    \    local -a result\n    local -a row\n    local -a column\n    local -a row_column\n\
    \    local -a row_columns\n    local -a row_columns_sorted\n    local -a row_columns_sorted_reversed\n\
    \    local -a row_columns_sorted_reversed_string\n    local -a row_columns_sorted_reversed_string_escaped\n\
    \    local -a row_columns_sorted_reversed_string_escaped_quoted\n    local -a\
    \ row_columns_sorted_reversed_string_escaped_quoted_joined\n    local -a row_columns_sorted_reversed_string_escaped_quoted_joined_escaped\n\
    \    local -a row_columns_sorted_reversed_string_escaped_quoted_joined_escaped_quoted\n\
    \    local -a row_columns_sorted_reversed_string_escaped_quoted_joined_escaped_quoted_joined\n\
    \    local -a row_columns_sorted_reversed_string_escaped_quoted_joined_escaped_quoted_joined_escaped\n\
    \    local -a row_columns_sorted_reversed_string_escaped_quoted_joined_escaped_quoted_joined_escaped_quoted\n\
    \    local -a row_columns_sorted_reversed_string_escaped_quoted_joined_escaped_quoted_joined_escaped_quoted_joined\n\
    \    local -a row_columns_sorted_reversed_string_escaped_quoted_joined_escaped_quoted_joined_escaped_quoted_joined_escaped\n\
    \    local -a row_columns_sorted_reversed_string_escaped_quoted_joined_escaped_quoted_joined_escaped_quoted_joined_escaped_quoted\n\
    \    local -a row_columns_sorted_reversed_string_escaped_quoted_joined_escaped_quoted_joined_escaped_quoted_",
  "    local -a row\n    local -a col\n    local -a result\n    local -a line\n  \
    \  local -a row_col\n    local -a row_col_sorted\n    local -a result_sorted\n\
    \    local -a line_sorted\n    local -a row_col_sorted_reverse\n    local -a result_sorted_reverse\n\
    \    local -a line_sorted_reverse\n    local -a row_col_sorted_reverse_sorted\n\
    \    local -a result_sorted_reverse_sorted\n    local -a line_sorted_reverse_sorted\n\
    \    local -a row_col_sorted_reverse_sorted_reverse\n    local -a result_sorted_reverse_sorted_reverse\n\
    \    local -a line_sorted_reverse_sorted_reverse\n    local -a row_col_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a result_sorted_reverse_sorted_reverse_sorted\n    local -a line_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a row_col_sorted_reverse_sorted_reverse_sorted_reverse\n    local\
    \ -a result_sorted_reverse_sorted_reverse_sorted_reverse\n    local -a line_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a row_col_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n  \
    \  local -a result_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n    local\
    \ -a line_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n    local -a row_col_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a result_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a line_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a row_col_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a result_sorted_reverse_s", "    local lst=\"$1\"\n    local x=\"\
    $2\"\n    local row=0\n    local col=0\n    local res=()\n    while read -r line;\
    \ do\n        col=0\n        for word in $line; do\n            if [[ \"$word\"\
    \ == \"$x\" ]]; then\n                res+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n\
    \            fi\n            ((col++))\n        done\n        ((row++))\n    done\
    \ <<< \"$lst\"\n    echo \"${res[@]}\" | tr ' ' '\\n' | sort -t '\"' -k 2 -n -r\
    \ | sort -t '\"' -k 1 -n", "    local lst=$1\n    local x=$2\n    local row=0\n\
    \    local col=0\n    local res=()\n    while read -r line; do\n        col=0\n\
    \        for y in $line; do\n            if [[ $y == $x ]]; then\n           \
    \     res+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n            col=$((col\
    \ + 1))\n        done\n        row=$((row + 1))\n    done <<< \"$lst\"\n    echo\
    \ \"${res[@]}\" | tr ' ' '\\n' | sort -t '\"' -k 1n -k 3nr | tr '\\n' ' '", " \
    \ local -a rows=($(echo \"$1\" | tr ' ' '\\n'))\n  local -a coords=()\n  local\
    \ -i row=0\n  for i in \"${rows[@]}\"; do\n    local -a cols=($(echo \"$i\" |\
    \ tr ' ' '\\n'))\n    local -i col=0\n    for j in \"${cols[@]}\"; do\n      if\
    \ [[ \"$j\" -eq \"$2\" ]]; then\n        coords+=(\"[\\\"$row\\\", \\\"$col\\\"\
    ]\")\n      fi\n      ((col++))\n    done\n    ((row++))\n  done\n  echo \"${coords[@]}\"\
    \ | tr ' ' '\\n' | sort -t '\"' -k1n -k3nr | tr '\\n' ' '", "    local lst=\"\
    $1\"\n    local x=\"$2\"\n    local row=0\n    local col=0\n    local result=()\n\
    \    while read -r line; do\n        col=0\n        for i in $line; do\n     \
    \       if [[ \"$i\" == \"$x\" ]]; then\n                result+=(\"[\\\"$row\\\
    \", \\\"$col\\\"]\")\n            fi\n            col=$((col + 1))\n        done\n\
    \        row=$((row + 1))\n    done <<< \"$lst\"\n    echo \"${result[@]}\" |\
    \ tr ' ' ',' | sed -e 's/^/[/' -e 's/$/]/' | sort -t ',' -k1n -k2nr", "    local\
    \ lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n    local col=0\n    local\
    \ result=()\n    for line in $lst; do\n        col=0\n        for num in $line;\
    \ do\n            if [ \"$num\" == \"$x\" ]; then\n                result+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n            col=$((col+1))\n\
    \        done\n        row=$((row+1))\n    done\n    echo \"${result[@]}\" | tr\
    \ ' ' ',' | sed 's/^/[/;s/$/]/'", "    local lst=$1\n    local x=$2\n    local\
    \ -a result\n    local -a row\n    local -a col\n    local -a row_col\n    local\
    \ -a row_col_sorted\n    local -a row_col_sorted_desc\n    local -a row_col_sorted_desc_str\n\
    \    local -a row_col_sorted_desc_str_sorted\n    local -a row_col_sorted_desc_str_sorted_str\n\
    \    local -a row_col_sorted_desc_str_sorted_str_sorted\n    local -a row_col_sorted_desc_str_sorted_str_sorted_str\n\
    \    local -a row_col_sorted_desc_str_sorted_str_sorted_str_sorted\n    local\
    \ -a row_col_sorted_desc_str_sorted_str_sorted_str_sorted_str\n    local -a row_col_sorted_desc_str_sorted_str_sorted_str_sorted_str_sorted\n\
    \    local -a row_col_sorted_desc_str_sorted_str_sorted_str_sorted_str_sorted_str\n\
    \    local -a row_col_sorted_desc_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted\n\
    \    local -a row_col_sorted_desc_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str\n\
    \    local -a row_col_sorted_desc_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted\n\
    \    local -a row_col_sorted_desc_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str\n\
    \    local -a row_col_sorted_desc_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted\n\
    \    local -a row_col", "    local lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n\
    \    local col=0\n    local result=()\n    local row_result=()\n    local row_results=()\n\
    \    while read -r line; do\n        col=0\n        row_result=()\n        for\
    \ word in $line; do\n            if [[ \"$word\" == \"$x\" ]]; then\n        \
    \        row_result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n    \
    \        col=$((col+1))\n        done\n        if [[ ${#row_result[@]} -gt 0 ]];\
    \ then\n            row_results+=(\"[${row_result[*]}]\")\n        fi\n      \
    \  row=$((row+1))\n    done <<< \"$lst\"\n    if [[ ${#row_results[@]} -gt 0 ]];\
    \ then\n        echo \"[${row_results[*]}]\"\n    else\n        echo \"[]\"\n\
    \    fi", "    local -a rows\n    local -a row\n    local -a cols\n    local -a\
    \ col\n    local -a result\n    local -a row_result\n    local -a col_result\n\
    \    local -a row_col_result\n    local -a row_col_results\n    local -a row_col_results_sorted\n\
    \    local -a row_col_results_sorted_desc\n    local -a row_col_results_sorted_desc_result\n\
    \    local -a row_col_results_sorted_desc_results\n    local -a row_col_results_sorted_desc_results_sorted\n\
    \    local -a row_col_results_sorted_desc_results_sorted_result\n    local -a\
    \ row_col_results_sorted_desc_results_sorted_results\n    local -a row_col_results_sorted_desc_results_sorted_results_result\n\
    \    local -a row_col_results_sorted_desc_results_sorted_results_results\n   \
    \ local -a row_col_results_sorted_desc_results_sorted_results_results_result\n\
    \    local -a row_col_results_sorted_desc_results_sorted_results_results_results\n\
    \    local -a row_col_results_sorted_desc_results_sorted_results_results_results_result\n\
    \    local -a row_col_results_sorted_desc_results_sorted_results_results_results_results\n\
    \    local -a row_col_results_sorted_desc_results_sorted_results_results_results_results_result\n\
    \    local -a row_col_results_sorted_desc_results_sorted_results_results_results_results_results\n\
    \    local -a row_col_results_sorted_desc_results_sorted_results_results_results_results_results_result\n\
    \    local -a row_col_results_sorted_desc_results_sorted_results_results_results_results_results_results\n\
    \    local -a row_col_results_sorted_desc_results_sorted_results_results_results_results_results_results_result\n\
    \    local -a", "    local lst=$1\n    local x=$2\n    local row=0\n    local\
    \ col=0\n    local res=()\n    for i in $(echo \"$lst\" | tr ' ' '\\n'); do\n\
    \        if [[ \"$i\" == \"$x\" ]]; then\n            res+=(\"[\\\"$row\\\", \\\
    \"$col\\\"]\")\n        fi\n        if [[ \"$i\" == \"\" ]]; then\n          \
    \  row=$((row + 1))\n            col=0\n        else\n            col=$((col +\
    \ 1))\n        fi\n    done\n    echo \"${res[@]}\" | tr ' ' ',' | sed 's/^/[/;s/$/]/'",
  "    local -a row_cols\n    local -a rows\n    local -a cols\n    local -a row_cols_sorted\n\
    \    local -a rows_sorted\n    local -a cols_sorted\n    local -a row_cols_sorted_rev\n\
    \    local -a rows_sorted_rev\n    local -a cols_sorted_rev\n    local -a row_cols_sorted_rev_str\n\
    \    local -a rows_sorted_rev_str\n    local -a cols_sorted_rev_str\n    local\
    \ -a row_cols_sorted_rev_str_quoted\n    local -a rows_sorted_rev_str_quoted\n\
    \    local -a cols_sorted_rev_str_quoted\n    local -a row_cols_sorted_rev_str_quoted_joined\n\
    \    local -a rows_sorted_rev_str_quoted_joined\n    local -a cols_sorted_rev_str_quoted_joined\n\
    \    local -a row_cols_sorted_rev_str_quoted_joined_joined\n    local -a rows_sorted_rev_str_quoted_joined_joined\n\
    \    local -a cols_sorted_rev_str_quoted_joined_joined\n    local -a row_cols_sorted_rev_str_quoted_joined_joined_joined\n\
    \    local -a rows_sorted_rev_str_quoted_joined_joined_joined\n    local -a cols_sorted_rev_str_quoted_joined_joined_joined\n\
    \    local -a row_cols_sorted_rev_str_quoted_joined_joined_joined_joined\n   \
    \ local -a rows_sorted_rev_str_quoted_joined_joined_joined_joined\n    local -a\
    \ cols_sorted_rev_str_quoted_joined_joined_joined_joined\n    local -a row_cols_sorted_rev_str_quoted_joined_joined_joined_joined_joined\n\
    \    local -a rows_sorted_rev_str_quoted_joined_joined_joined_joined_joined\n\
    \    local -", "    local lst=$1\n    local x=$2\n    local row=0\n    local col=0\n\
    \    local result=()\n    local row_result=()\n    local row_results=()\n    local\
    \ col_results=()\n    local row_results_sorted=()\n    local col_results_sorted=()\n\
    \    local row_results_sorted_cols=()\n    local row_results_sorted_cols_sorted=()\n\
    \    local row_results_sorted_cols_sorted_str=()\n    local row_results_sorted_cols_sorted_str_result=()\n\
    \    local row_results_sorted_cols_sorted_str_result_str=()\n    local row_results_sorted_cols_sorted_str_result_str_result=()\n\
    \    local row_results_sorted_cols_sorted_str_result_str_result_str=()\n    local\
    \ row_results_sorted_cols_sorted_str_result_str_result_str_result=()\n    local\
    \ row_results_sorted_cols_sorted_str_result_str_result_str_result_str=()\n   \
    \ local row_results_sorted_cols_sorted_str_result_str_result_str_result_str_result=()\n\
    \    local row_results_sorted_cols_sorted_str_result_str_result_str_result_str_result_str=()\n\
    \    local row_results_sorted_cols_sorted_str_result_str_result_str_result_str_result_str_result=()\n\
    \    local row_results_sorted_cols_sorted_str_result_str_result_str_result_str_result_str_result_str=()\n\
    \    local row_results_sorted_cols_sorted_str_result_str_result_str_result_str_result_str_result_str_result=()\n\
    \    local row_results_sorted_cols_sorted_str_result_str_result_str_result_str_result_str_result_str_result_str=()\n",
  "    local lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n    local col=0\n  \
    \  local res=()\n    while read -r line; do\n        col=0\n        for num in\
    \ $line; do\n            if [[ \"$num\" == \"$x\" ]]; then\n                res+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n            ((col++))\n     \
    \   done\n        ((row++))\n    done <<< \"$lst\"\n    echo \"${res[@]}\" | tr\
    \ ' ' ',' | sed 's/^/[/;s/$/]/'", "    local lst=\"$1\"\n    local x=\"$2\"\n\
    \    local row=0\n    local col=0\n    local result=()\n    local line\n    while\
    \ read -r line; do\n        col=0\n        for y in $line; do\n            if\
    \ [ \"$y\" = \"$x\" ]; then\n                result+=(\"[\\\"$row\\\", \\\"$col\\\
    \"]\")\n            fi\n            col=$((col + 1))\n        done\n        row=$((row\
    \ + 1))\n    done <<< \"$lst\"\n    echo \"${result[@]}\" | sort -t '\"' -k 1,1n\
    \ -k 3,3nr", "    local lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n    local\
    \ col=0\n    local res=()\n    while read -r line; do\n        col=0\n       \
    \ for i in $line; do\n            if [[ \"$i\" == \"$x\" ]]; then\n          \
    \      res+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n            col=$((col+1))\n\
    \        done\n        row=$((row+1))\n    done <<< \"$lst\"\n    echo \"${res[@]}\"\
    \ | tr ' ' ',' | sed 's/^/[/;s/$/]/'", "    local lst=$1\n    local x=$2\n   \
    \ local row=0\n    local col=0\n    local res=\"\"\n    for i in $lst; do\n  \
    \      if [ \"$i\" == \"$x\" ]; then\n            res=\"$res [\\\"$row\\\", \\\
    \"$col\\\"]\"\n        fi\n        col=$((col+1))\n        if [ \"$i\" == \"\"\
    \ ]; then\n            row=$((row+1))\n            col=0\n        fi\n    done\n\
    \    echo \"$res\"", "    local lst=$1\n    local x=$2\n    local row=0\n    local\
    \ col=0\n    local result=()\n    for i in $lst; do\n        if [[ $i == $x ]];\
    \ then\n            result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n        fi\n \
    \       col=$((col + 1))\n        if [[ $i == $'\\n' ]]; then\n            row=$((row\
    \ + 1))\n            col=0\n        fi\n    done\n    echo \"${result[@]}\" |\
    \ sort -t '\"' -k 1,1n -k 3,3nr", "    local lst=$1\n    local x=$2\n    local\
    \ -a result\n    local row=0\n    local col=0\n    local -a row_cols\n    local\
    \ -a cols\n    local -a rows\n    local -a row_cols_sorted\n    local -a rows_sorted\n\
    \    local -a cols_sorted\n    local -a result_sorted\n    local -a row_cols_sorted_reversed\n\
    \    local -a rows_sorted_reversed\n    local -a cols_sorted_reversed\n    local\
    \ -a result_sorted_reversed\n    local -a result_sorted_reversed_str\n    local\
    \ -a result_sorted_reversed_str_joined\n    local -a result_sorted_reversed_str_joined_str\n\
    \    local -a result_sorted_reversed_str_joined_str_joined\n    local -a result_sorted_reversed_str_joined_str_joined_str\n\
    \    local -a result_sorted_reversed_str_joined_str_joined_str_joined\n    local\
    \ -a result_sorted_reversed_str_joined_str_joined_str_joined_str\n    local -a\
    \ result_sorted_reversed_str_joined_str_joined_str_joined_str_joined\n    local\
    \ -a result_sorted_reversed_str_joined_str_joined_str_joined_str_joined_str\n\
    \    local -a result_sorted_reversed_str_joined_str_joined_str_joined_str_joined_str_joined\n\
    \    local -a result_sorted_reversed_str_joined_str_joined_str_joined_str_joined_str_joined_str\n\
    \    local -a result_sorted_reversed_str_joined_str_joined_str_joined_str_joined_str_joined_str_joined\n\
    \    local -a result_sorted_reversed_str_joined_str_joined_str_joined_str_joined_str_joined_str_joined_str\n\
    \    local -a result_sorted_revers", "    local lst=\"$1\"\n    local x=\"$2\"\
    \n    local row=0\n    local col=0\n    local result=()\n    for line in $lst;\
    \ do\n        col=0\n        for i in $line; do\n            if [ \"$i\" == \"\
    $x\" ]; then\n                result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n   \
    \         fi\n            col=$((col+1))\n        done\n        row=$((row+1))\n\
    \    done\n    echo \"${result[@]}\" | sort -t\\\" -k1n -k2nr", "    local lst=\"\
    $1\"\n    local x=\"$2\"\n    local row=0\n    local col=0\n    local result=()\n\
    \    while read -r line; do\n        col=0\n        for i in $line; do\n     \
    \       if [[ \"$i\" == \"$x\" ]]; then\n                result+=(\"[\\\"$row\\\
    \", \\\"$col\\\"]\")\n            fi\n            col=$((col+1))\n        done\n\
    \        row=$((row+1))\n    done <<< \"$lst\"\n    echo \"${result[@]}\" | tr\
    \ ' ' ',' | sed -e 's/^/[/' -e 's/$/]/' | jq -s 'sort_by(.[0]) | reverse | sort_by(.[1])'",
  "    local lst=\"$1\"\n    local x=\"$2\"\n    local -a rows\n    local -a cols\n\
    \    local -a result\n    local -i row=0\n    local -i col=0\n    local -i i=0\n\
    \    local -i j=0\n    local -i k=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n\
    \    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local\
    \ -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i\
    \ cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i\
    \ gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i\
    \ kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i\
    \ oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i\
    \ ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i\
    \ ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i\
    \ aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local\
    \ -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local\
    \ -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0", "   \
    \ local lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n    local col=0\n   \
    \ local result=()\n    while read -r line; do\n        col=0\n        for i in\
    \ $line; do\n            if [[ \"$i\" == \"$x\" ]]; then\n                result+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n            col=$((col+1))\n\
    \        done\n        row=$((row+1))\n    done <<< \"$lst\"\n    echo \"${result[@]}\"\
    \ | tr ' ' ',' | sed 's/^/[/;s/$/]/'", "    local lst=\"$1\"\n    local x=\"$2\"\
    \n    local row=0\n    local col=0\n    local result=()\n    while read -r line;\
    \ do\n        col=0\n        for word in $line; do\n            if [[ \"$word\"\
    \ == \"$x\" ]]; then\n                result+=(\"[\\\"$row\\\", \\\"$col\\\"]\"\
    )\n            fi\n            col=$((col + 1))\n        done\n        row=$((row\
    \ + 1))\n    done <<< \"$lst\"\n    echo \"${result[@]}\" | tr ' ' ',' | sed 's/^/[/;s/$/]/'",
  "    local -a rows\n    local -a cols\n    local -a row\n    local -a col\n    local\
    \ -a result\n    local -a row_col\n    local -a row_col_sorted\n    local -a row_col_sorted_rev\n\
    \    local -a row_col_sorted_rev_str\n    local -a row_col_sorted_rev_str_str\n\
    \    local -a row_col_sorted_rev_str_str_str\n    local -a row_col_sorted_rev_str_str_str_str\n\
    \    local -a row_col_sorted_rev_str_str_str_str_str\n    local -a row_col_sorted_rev_str_str_str_str_str_str\n\
    \    local -a row_col_sorted_rev_str_str_str_str_str_str_str\n    local -a row_col_sorted_rev_str_str_str_str_str_str_str_str\n\
    \    local -a row_col_sorted_rev_str_str_str_str_str_str_str_str_str\n    local\
    \ -a row_col_sorted_rev_str_str_str_str_str_str_str_str_str_str\n    local -a\
    \ row_col_sorted_rev_str_str_str_str_str_str_str_str_str_str_str\n    local -a\
    \ row_col_sorted_rev_str_str_str_str_str_str_str_str_str_str_str_str\n    local\
    \ -a row_col_sorted_rev_str_str_str_str_str_str_str_str_str_str_str_str_str\n\
    \    local -a row_col_sorted_rev_str_str_str_str_str_str_str_str_str_str_str_str_str_str\n\
    \    local -a row_col_sorted_rev_str_str_str_str_str_str_str_str_str_str_str_str_str_str_str\n\
    \    local -a row_col_sorted_rev_", "    local lst=\"$1\"\n    local x=\"$2\"\n\
    \    local row=0\n    local col=0\n    local result=()\n    while read -r line;\
    \ do\n        col=0\n        for i in $line; do\n            if [[ \"$i\" == \"\
    $x\" ]]; then\n                result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n  \
    \          fi\n            col=$((col+1))\n        done\n        row=$((row+1))\n\
    \    done <<< \"$lst\"\n    echo \"${result[@]}\" | tr ' ' ',' | sed -e 's/^/[/'\
    \ -e 's/$/]/'", "    local lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n \
    \   local col=0\n    local result=()\n    while read -r line; do\n        col=0\n\
    \        for y in $line; do\n            if [[ \"$y\" == \"$x\" ]]; then\n   \
    \             result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n   \
    \         col=$((col + 1))\n        done\n        row=$((row + 1))\n    done <<<\
    \ \"$lst\"\n    echo \"${result[@]}\" | tr ' ' ',' | sed 's/^/[/;s/$/]/'", " \
    \   local lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n    local col=0\n \
    \   local result=\"\"\n    while read line; do\n        col=0\n        for i in\
    \ $line; do\n            if [ \"$i\" = \"$x\" ]; then\n                result=\"\
    $result\\n[\\\"$row\\\", \\\"$col\\\"]\"\n            fi\n            col=$((col+1))\n\
    \        done\n        row=$((row+1))\n    done <<< \"$lst\"\n    result=\"${result:1}\"\
    \n    echo \"$result\" | sort -t '\"' -k 1 -n -k 3 -r", "    local lst=$1\n  \
    \  local x=$2\n    local row=0\n    local col=0\n    local result=()\n    while\
    \ read -r line; do\n        col=0\n        for i in $line; do\n            if\
    \ [ \"$i\" == \"$x\" ]; then\n                result+=(\"[\\\"$row\\\", \\\"$col\\\
    \"]\")\n            fi\n            col=$((col+1))\n        done\n        row=$((row+1))\n\
    \    done <<< \"$lst\"\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -t '\"\
    ' -k 1n -k 3nr | tr '\\n' ' '", "    local lst=$1\n    local x=$2\n    local row=0\n\
    \    local col=0\n    local result=()\n    while read -r line; do\n        col=0\n\
    \        for i in $line; do\n            if [[ $i == $x ]]; then\n           \
    \     result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n           \
    \ col=$((col+1))\n        done\n        row=$((row+1))\n    done <<< \"$lst\"\n\
    \    echo \"${result[@]}\" | tr ' ' '\\n' | sort -t '\"' -k1n -k3nr | tr '\\n'\
    \ ' '", "    local lst=$1\n    local x=$2\n    local row=0\n    local col=0\n\
    \    local result=()\n    while read -r line; do\n        col=0\n        for i\
    \ in $line; do\n            if [[ $i == $x ]]; then\n                result+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n            col=$((col+1))\n\
    \        done\n        row=$((row+1))\n    done <<< \"$lst\"\n    echo \"${result[@]}\"\
    \ | tr ' ' '\\n' | sort -t '\"' -k2 -n -r | sort -t '\"' -k1 -n | tr '\\n' ' '",
  "    local lst=$1\n    local x=$2\n    local row=0\n    local col=0\n    local result=()\n\
    \    while read -r line; do\n        col=0\n        for i in $line; do\n     \
    \       if [[ $i == $x ]]; then\n                result+=(\"[\\\"$row\\\", \\\"\
    $col\\\"]\")\n            fi\n            col=$((col+1))\n        done\n     \
    \   row=$((row+1))\n    done <<< \"$lst\"\n    echo \"${result[@]}\" | tr ' '\
    \ '\\n' | sort -t '\"' -k1,1n -k3,3nr | tr '\\n' ' '", "    local -a lst=()\n\
    \    local -a row=()\n    local -a col=()\n    local -a res=()\n    local -a tmp=()\n\
    \    local -a tmp2=()\n    local -a tmp3=()\n    local -a tmp4=()\n    local -a\
    \ tmp5=()\n    local -a tmp6=()\n    local -a tmp7=()\n    local -a tmp8=()\n\
    \    local -a tmp9=()\n    local -a tmp10=()\n    local -a tmp11=()\n    local\
    \ -a tmp12=()\n    local -a tmp13=()\n    local -a tmp14=()\n    local -a tmp15=()\n\
    \    local -a tmp16=()\n    local -a tmp17=()\n    local -a tmp18=()\n    local\
    \ -a tmp19=()\n    local -a tmp20=()\n    local -a tmp21=()\n    local -a tmp22=()\n\
    \    local -a tmp23=()\n    local -a tmp24=()\n    local -a tmp25=()\n    local\
    \ -a tmp26=()\n    local -a tmp27=()\n    local -a tmp28=()\n    local -a tmp29=()\n\
    \    local -a tmp30=()\n    local -a tmp31=()\n    local -a tmp32=()\n    local\
    \ -a tmp33=()\n    local -a tmp34=()\n    local -a tmp35=()\n    local -a tmp36=()\n\
    \    local -a tmp37=()\n    local -a tmp38=()\n    local -a tmp39=()\n    local\
    \ -a tmp40=()\n    local -a tmp41=()\n    local -a tmp42=()\n    local -a tmp43=()\n\
    \    local -a tmp44=()\n    local -a tmp45=()\n    local -a tmp46=()\n    local\
    \ -a tmp47=()\n    local -a tmp48=()\n    local -a tmp49=()\n    local -a tmp50=()\n\
    \    local -a tmp51=()\n    local -a tmp52=()\n    local -a tmp53=()\n    local",
  "    local lst=$1\n    local x=$2\n    local row=0\n    local col=0\n    local result=()\n\
    \    for i in $lst; do\n        if [[ $i == $x ]]; then\n            result+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n        fi\n        if [[ $i == \"\" ]]; then\n\
    \            row=$((row + 1))\n            col=0\n        else\n            col=$((col\
    \ + 1))\n        fi\n    done\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort\
    \ -t '\"' -k 1 -n -r -t '\"' -k 2 -n", "    local lst=$1\n    local x=$2\n   \
    \ local row=0\n    local col=0\n    local result=()\n    while read -r line; do\n\
    \        col=0\n        for i in $line; do\n            if [[ $i == $x ]]; then\n\
    \                result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n\
    \            col=$((col+1))\n        done\n        row=$((row+1))\n    done <<<\
    \ \"$lst\"\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -t '\"' -k2 -n -r\
    \ | sort -t '\"' -k1 -n", "    local lst=$1\n    local x=$2\n    local row=0\n\
    \    local col=0\n    local result=()\n    for i in $(echo \"$lst\" | tr ' ' '\\\
    n'); do\n        if [[ $i == $x ]]; then\n            result+=(\"[\\\"$row\\\"\
    , \\\"$col\\\"]\")\n        fi\n        if [[ $i == $'\\n' ]]; then\n        \
    \    row=$((row + 1))\n            col=0\n        else\n            col=$((col\
    \ + 1))\n        fi\n    done\n    echo \"${result[@]}\" | tr ' ' ',' | sed 's/^/[/;s/$/]/'",
  "  local lst=\"$1\"\n  local x=\"$2\"\n  local row=0\n  local col=0\n  local res=()\n\
    \  local row_res=()\n  local row_res_sorted=()\n  local res_sorted=()\n  local\
    \ res_str=\"\"\n  local row_res_str=\"\"\n  local row_res_sorted_str=\"\"\n  local\
    \ res_sorted_str=\"\"\n  local row_res_sorted_str_escaped=\"\"\n  local res_sorted_str_escaped=\"\
    \"\n  local row_res_sorted_str_escaped_quoted=\"\"\n  local res_sorted_str_escaped_quoted=\"\
    \"\n  local row_res_sorted_str_escaped_quoted_escaped=\"\"\n  local res_sorted_str_escaped_quoted_escaped=\"\
    \"\n  local row_res_sorted_str_escaped_quoted_escaped_quoted=\"\"\n  local res_sorted_str_escaped_quoted_escaped_quoted=\"\
    \"\n  local row_res_sorted_str_escaped_quoted_escaped_quoted_escaped=\"\"\n  local\
    \ res_sorted_str_escaped_quoted_escaped_quoted_escaped=\"\"\n  local row_res_sorted_str_escaped_quoted_escaped_quoted_escaped_quoted=\"\
    \"\n  local res_sorted_str_escaped_quoted_escaped_quoted_escaped_quoted=\"\"\n\
    \  local row_res_sorted_str_escaped_quoted_escaped_quoted_escaped_quoted_escaped=\"\
    \"\n  local res_sorted_str_escaped_quoted_escaped_quoted_escaped_quoted_escaped=\"\
    \"\n  local row_res_sorted_str_escaped_quoted_escaped_quoted_escaped_quoted_escaped_quoted=\"\
    \"\n  local res_sorted_str_escaped_quoted_escaped_quoted_escaped_quoted_escaped_quoted=\"\
    \"\n  local row_res_sorted_str_escaped_quoted_esc", "    local lst=\"$1\"\n  \
    \  local x=\"$2\"\n    local row=0\n    local col=0\n    local result=()\n   \
    \ while read -r line; do\n        col=0\n        for i in $line; do\n        \
    \    if [[ \"$i\" == \"$x\" ]]; then\n                result+=(\"[\\\"$row\\\"\
    , \\\"$col\\\"]\")\n            fi\n            col=$((col+1))\n        done\n\
    \        row=$((row+1))\n    done <<< \"$lst\"\n    echo \"${result[@]}\" | tr\
    \ ' ' ',' | sed 's/^/[/;s/$/]/'", "    local lst=\"$1\"\n    local x=\"$2\"\n\
    \    local row=0\n    local col=0\n    local res=()\n    while read -r line; do\n\
    \        col=0\n        for i in $line; do\n            if [ \"$i\" == \"$x\"\
    \ ]; then\n                res+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n         \
    \   fi\n            col=$((col+1))\n        done\n        row=$((row+1))\n   \
    \ done <<< \"$lst\"\n    echo \"${res[@]}\" | tr ' ' ',' | sed 's/^/[/;s/$/]/'",
  "    local lst=$1\n    local x=$2\n    local i=0\n    local j=0\n    local res=()\n\
    \    for row in $lst; do\n        j=0\n        for col in $row; do\n         \
    \   if [ \"$col\" == \"$x\" ]; then\n                res+=(\"[\\\"$i\\\", \\\"\
    $j\\\"]\")\n            fi\n            j=$((j+1))\n        done\n        i=$((i+1))\n\
    \    done\n    echo \"${res[@]}\" | tr ' ' ',' | sed 's/^/[/;s/$/]/'", "    local\
    \ -a rows\n    local -a cols\n    local -a row\n    local -a col\n    local -a\
    \ result\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n   \
    \ local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n\
    \    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i\
    \ v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local\
    \ -i aa\n    local -i bb\n    local -i cc\n    local -i dd\n    local -i ee\n\
    \    local -i ff\n    local -i gg\n    local -i hh\n    local -i ii\n    local\
    \ -i jj\n    local -i kk\n    local -i ll\n    local -i mm\n    local -i nn\n\
    \    local -i oo\n    local -i pp\n    local -i qq\n    local -i rr\n    local\
    \ -i ss\n    local -i tt\n    local -i uu\n    local -i vv\n    local -i ww\n\
    \    local -i xx\n    local -i yy\n    local -i zz\n    local -i aaa\n    local\
    \ -i bbb\n    local -i ccc\n    local -i ddd\n    local -i eee\n    local -i fff\n\
    \    local -i ggg\n    local -i hhh\n    local -i iii\n    local -i jjj\n    local\
    \ -i kkk\n    local -i lll\n    local -i mmm\n    local -i nnn\n    local -i ooo\n\
    \    local -i ppp\n    local -i qqq\n    local -i rrr\n    local -i sss\n    local\
    \ -i ttt\n    local -i uuu\n    local -i vvv\n    local -i www\n    local -i xxx\n\
    \    local -i yyy\n    local -i zzz\n    local -i aaaa\n    local -i bbbb\n  \
    \  local -i", "    local -a arr\n    local -a row\n    local -a col\n    local\
    \ -a res\n    local -a tmp\n    local -a tmp2\n    local -a tmp3\n    local -a\
    \ tmp4\n    local -a tmp5\n    local -a tmp6\n    local -a tmp7\n    local -a\
    \ tmp8\n    local -a tmp9\n    local -a tmp10\n    local -a tmp11\n    local -a\
    \ tmp12\n    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local\
    \ -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local\
    \ -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local\
    \ -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local\
    \ -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local\
    \ -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local\
    \ -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local\
    \ -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local\
    \ -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local\
    \ -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local\
    \ -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local\
    \ -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local\
    \ -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local\
    \ -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n    local\
    \ -a tmp68\n    local -a tmp69\n    local -a tmp", "    local lst=$1\n    local\
    \ x=$2\n    local -a row_cols=()\n    local -a rows=()\n    local -a cols=()\n\
    \    local -a row_cols_sorted=()\n    local -a rows_sorted=()\n    local -a cols_sorted=()\n\
    \    local -a row_cols_sorted_desc=()\n    local -a rows_sorted_desc=()\n    local\
    \ -a cols_sorted_desc=()\n    local -a result=()\n    local row=0\n    local col=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n  \
    \  local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n\
    \    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n\
    \    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n\
    \    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n\
    \    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n\
    \    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local\
    \ fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n\
    \    local kkk=0\n    local lll=0\n    local mmm=0", "    local lst=\"$1\"\n \
    \   local x=\"$2\"\n    local row=0\n    local col=0\n    local result=()\n  \
    \  while read -r line; do\n        col=0\n        for word in $line; do\n    \
    \        if [[ \"$word\" == \"$x\" ]]; then\n                result+=(\"[\\\"\
    $row\\\", \\\"$col\\\"]\")\n            fi\n            col=$((col + 1))\n   \
    \     done\n        row=$((row + 1))\n    done <<< \"$lst\"\n    echo \"${result[@]}\"\
    \ | tr ' ' ',' | sed 's/^/[/;s/$/]/'", "    local lst=\"$1\"\n    local x=\"$2\"\
    \n    local row=0\n    local col=0\n    local result=()\n    while read -r line;\
    \ do\n        col=0\n        for i in $line; do\n            if [[ \"$i\" == \"\
    $x\" ]]; then\n                result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n  \
    \          fi\n            col=$((col+1))\n        done\n        row=$((row+1))\n\
    \    done <<< \"$lst\"\n    echo \"${result[@]}\" | tr ' ' ',' | sed 's/^/[/;s/$/]/'",
  "    local lst=$1\n    local x=$2\n    local row=0\n    local col=0\n    local res=()\n\
    \    local line\n    while read -r line; do\n        col=0\n        for i in $line;\
    \ do\n            if [[ $i == $x ]]; then\n                res+=(\"[\\\"$row\\\
    \", \\\"$col\\\"]\")\n            fi\n            col=$((col+1))\n        done\n\
    \        row=$((row+1))\n    done <<< \"$lst\"\n    echo \"${res[@]}\" | tr '\
    \ ' '\\n' | sort -t '\"' -k1n -k3nr | tr '\\n' ' '", "    local lst=$1\n    local\
    \ x=$2\n    local row=0\n    local col=0\n    local result=()\n    for i in $lst;\
    \ do\n        if [ \"$i\" == \"$x\" ]; then\n            result+=(\"[\\\"$row\\\
    \", \\\"$col\\\"]\")\n        fi\n        if [ \"$i\" == \"\" ]; then\n      \
    \      row=$((row+1))\n            col=0\n        else\n            col=$((col+1))\n\
    \        fi\n    done\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -t '\"\
    ' -k 1 -n -k 3 -r | tr '\\n' ' '", "    local lst=$1\n    local x=$2\n    local\
    \ -a result\n    local -a row\n    local -a col\n    local -a row_col\n    local\
    \ -a row_col_sorted\n    local -a row_col_sorted_rev\n    local -a row_col_sorted_rev_str\n\
    \    local -a row_col_sorted_rev_str_joined\n    local -a row_col_sorted_rev_str_joined_str\n\
    \    local -a row_col_sorted_rev_str_joined_str_joined\n    local -a row_col_sorted_rev_str_joined_str_joined_str\n\
    \    local -a row_col_sorted_rev_str_joined_str_joined_str_joined\n    local -a\
    \ row_col_sorted_rev_str_joined_str_joined_str_joined_str\n    local -a row_col_sorted_rev_str_joined_str_joined_str_joined_str_joined\n\
    \    local -a row_col_sorted_rev_str_joined_str_joined_str_joined_str_joined_str\n\
    \    local -a row_col_sorted_rev_str_joined_str_joined_str_joined_str_joined_str_joined\n\
    \    local -a row_col_sorted_rev_str_joined_str_joined_str_joined_str_joined_str_joined_str\n\
    \    local -a row_col_sorted_rev_str_joined_str_joined_str_joined_str_joined_str_joined_str_joined\n\
    \    local -a row_col_sorted_rev_str_joined_str_joined_str_joined_str_joined_str_joined_str_joined_str\n\
    \    local -a row_col_sorted_rev_str_joined_str_joined_str_joined_str_joined_str_joined_str_joined_str_joined\n\
    \    local -a row_col_sorted_rev_str_joined_str_joined_str_joined_str_joined_str_joined_str_joined_str_joined_str\n\
    \    local -a row_col_sorted_rev_", "    local -a list\n    local -a row\n   \
    \ local -a col\n    local -a result\n    local -a row_col\n    local -a row_col_sorted\n\
    \    local -a result_sorted\n    local -a result_sorted_col\n    local -a result_sorted_col_sorted\n\
    \    local -a result_sorted_col_sorted_str\n    local -a result_sorted_col_sorted_str_quoted\n\
    \    local -a result_sorted_col_sorted_str_quoted_joined\n    local -a result_sorted_col_sorted_str_quoted_joined_str\n\
    \    local -a result_sorted_col_sorted_str_quoted_joined_str_quoted\n    local\
    \ -a result_sorted_col_sorted_str_quoted_joined_str_quoted_joined\n    local -a\
    \ result_sorted_col_sorted_str_quoted_joined_str_quoted_joined_str\n    local\
    \ -a result_sorted_col_sorted_str_quoted_joined_str_quoted_joined_str_quoted\n\
    \    local -a result_sorted_col_sorted_str_quoted_joined_str_quoted_joined_str_quoted_joined\n\
    \    local -a result_sorted_col_sorted_str_quoted_joined_str_quoted_joined_str_quoted_joined_str\n\
    \    local -a result_sorted_col_sorted_str_quoted_joined_str_quoted_joined_str_quoted_joined_str_quoted\n\
    \    local -a result_sorted_col_sorted_str_quoted_joined_str_quoted_joined_str_quoted_joined_str_quoted_joined\n\
    \    local -a result_sorted_col_sorted_str_quoted_joined_str_quoted_joined_str_quoted_joined_str_quoted_joined_str\n\
    \    local -a result_sorted_col_sorted_str_quoted_joined_str_quoted_joined_str_quoted_joined_str_quoted_",
  "    local lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n    local col=0\n  \
    \  local result=()\n    for line in $(echo \"$lst\"); do\n        col=0\n    \
    \    for num in $(echo \"$line\"); do\n            if [[ \"$num\" == \"$x\" ]];\
    \ then\n                result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n         \
    \   fi\n            col=$((col + 1))\n        done\n        row=$((row + 1))\n\
    \    done\n    echo \"${result[@]}\" | tr ' ' ',' | sed 's/^/[/;s/$/]/'", "  \
    \  local lst=$1\n    local x=$2\n    local -i row=0\n    local -i col=0\n    local\
    \ -i i=0\n    local -i j=0\n    local -a arr\n    local -a res\n    local -a tmp\n\
    \    local -a tmp2\n    local -a tmp3\n    local -a tmp4\n    local -a tmp5\n\
    \    local -a tmp6\n    local -a tmp7\n    local -a tmp8\n    local -a tmp9\n\
    \    local -a tmp10\n    local -a tmp11\n    local -a tmp12\n    local -a tmp13\n\
    \    local -a tmp14\n    local -a tmp15\n    local -a tmp16\n    local -a tmp17\n\
    \    local -a tmp18\n    local -a tmp19\n    local -a tmp20\n    local -a tmp21\n\
    \    local -a tmp22\n    local -a tmp23\n    local -a tmp24\n    local -a tmp25\n\
    \    local -a tmp26\n    local -a tmp27\n    local -a tmp28\n    local -a tmp29\n\
    \    local -a tmp30\n    local -a tmp31\n    local -a tmp32\n    local -a tmp33\n\
    \    local -a tmp34\n    local -a tmp35\n    local -a tmp36\n    local -a tmp37\n\
    \    local -a tmp38\n    local -a tmp39\n    local -a tmp40\n    local -a tmp41\n\
    \    local -a tmp42\n    local -a tmp43\n    local -a tmp44\n    local -a tmp45\n\
    \    local -a tmp46\n    local -a tmp47\n    local -a tmp48\n    local -a tmp49\n\
    \    local -a tmp50\n    local -a tmp51\n    local -a tmp52\n    local -a tmp53\n\
    \    local -a tmp54\n    local -a tmp55\n    local -a tmp56\n    local -a tmp57\n\
    \    local -a tmp58\n    local -a tmp59\n    local -a tmp60\n    local -a tmp61\n\
    \    local -a tmp62\n    local -a tmp63\n    local -a tmp64\n    local -a tmp65\n",
  "    local lst=$1\n    local x=$2\n    local i=0\n    local j=0\n    local res=()\n\
    \    while read -r line; do\n        j=0\n        for y in $line; do\n       \
    \     if [ \"$y\" == \"$x\" ]; then\n                res+=(\"[\\\"$i\\\", \\\"\
    $j\\\"]\")\n            fi\n            j=$((j+1))\n        done\n        i=$((i+1))\n\
    \    done <<< \"$lst\"\n    if [ ${#res[@]} -eq 0 ]; then\n        echo \"[]\"\
    \n    else\n        echo \"$(IFS=,; echo \"${res[*]}\")\"\n    fi", "  local -a\
    \ rows=($(echo \"$1\" | tr ' ' '\\n'))\n  local -a result=()\n  local -i i=0\n\
    \  local -i j=0\n  local -i row_len=0\n  local -i col_len=0\n  local -i k=0\n\
    \  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n\
    \  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n\
    \  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n\
    \  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i\
    \ ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n \
    \ local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i\
    \ nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n \
    \ local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i\
    \ ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n\
    \  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local\
    \ -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n\
    \  local -", "    local -a row_cols\n    local -a rows\n    local -a cols\n  \
    \  local -a row_cols_sorted\n    local -a rows_sorted\n    local -a cols_sorted\n\
    \    local -a row_cols_sorted_reversed\n    local -a rows_sorted_reversed\n  \
    \  local -a cols_sorted_reversed\n    local -a row_cols_sorted_reversed_joined\n\
    \    local -a rows_sorted_reversed_joined\n    local -a cols_sorted_reversed_joined\n\
    \    local -a row_cols_sorted_reversed_joined_quoted\n    local -a rows_sorted_reversed_joined_quoted\n\
    \    local -a cols_sorted_reversed_joined_quoted\n    local -a row_cols_sorted_reversed_joined_quoted_joined\n\
    \    local -a rows_sorted_reversed_joined_quoted_joined\n    local -a cols_sorted_reversed_joined_quoted_joined\n\
    \    local -a row_cols_sorted_reversed_joined_quoted_joined_joined\n    local\
    \ -a rows_sorted_reversed_joined_quoted_joined_joined\n    local -a cols_sorted_reversed_joined_quoted_joined_joined\n\
    \    local -a row_cols_sorted_reversed_joined_quoted_joined_joined_joined\n  \
    \  local -a rows_sorted_reversed_joined_quoted_joined_joined_joined\n    local\
    \ -a cols_sorted_reversed_joined_quoted_joined_joined_joined\n    local -a row_cols_sorted_reversed_joined_quoted_joined_joined_joined_joined\n\
    \    local -a rows_sorted_reversed_joined_quoted_joined_joined_joined_joined\n\
    \    local -a cols_sorted_reversed_joined_quoted_joined_joined_joined_joined\n\
    \    local -a row_cols_sorted_reversed_", "    local lst=\"$1\"\n    local x=\"\
    $2\"\n    local -a rows\n    local -a cols\n    local -a res\n    local i=0\n\
    \    local j=0\n    local row\n    local col\n    local -a row_arr\n    local\
    \ -a col_arr\n    local -a res_arr\n    local -a res_arr_sorted\n    local -a\
    \ res_arr_sorted_rev\n    local -a res_arr_sorted_rev_str\n    local res_str\n\
    \n    # split lst into rows\n    IFS=$'\\n' read -r -a rows <<< \"$lst\"\n\n \
    \   # iterate over rows\n    for row in \"${rows[@]}\"; do\n        # split row\
    \ into columns\n        IFS=$' ' read -r -a cols <<< \"$row\"\n\n        # iterate\
    \ over columns\n        for col in \"${cols[@]}\"; do\n            # check if\
    \ col is equal to x\n            if [[ \"$col\" -eq \"$x\" ]]; then\n        \
    \        # add row and col to res\n                res+=(\"$i $j\")\n        \
    \    fi\n            ((j++))\n        done\n        ((i++))\n        j=0\n   \
    \ done\n\n    # sort res by rows in ascending order\n    IFS=$' ' read -r -a res_arr\
    \ <<< \"${res[*]}\"\n    res_arr_sorted=($(printf '%s\\n' \"${res_arr[@]}\" |\
    \ sort -n))\n\n    # sort res by columns in descending order\n    for row in \"\
    ${res_arr_sorted[@]}\"; do\n        IFS=$' ' read -r -a row_arr <<< \"$row\"\n\
    \        col_arr=($(printf '%s\\n' \"${row_arr[@]:1}\" | sort -nr))\n        res_arr_sorted_rev+=(\"\
    ${row_arr[0]} ${col_arr[*]}\")\n    done\n\n    # convert res_arr_sorted_rev to\
    \ string\n    for row in \"${res_arr_sorted_rev[@]}\"; do\n        IFS=$' ' read\
    \ -r -a row", "  local lst=$1\n  local x=$2\n  local row=0\n  local col=0\n  local\
    \ result=()\n  while read -r line; do\n    col=0\n    for i in $line; do\n   \
    \   if [ \"$i\" == \"$x\" ]; then\n        result+=(\"[\\\"$row\\\", \\\"$col\\\
    \"]\")\n      fi\n      col=$((col+1))\n    done\n    row=$((row+1))\n  done <<<\
    \ \"$lst\"\n  echo \"${result[@]}\" | tr ' ' '\\n' | sort -t '\"' -k2 -n -r |\
    \ sort -t '\"' -k1 -n | tr '\\n' ' '", "    local lst=$1\n    local x=$2\n   \
    \ local row=0\n    local col=0\n    local result=()\n    for i in $(echo \"$lst\"\
    \ | tr ' ' '\\n'); do\n        if [ \"$i\" == \"$x\" ]; then\n            result+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n        fi\n        col=$((col + 1))\n      \
    \  if [ \"$i\" == \"$'\\n'\" ]; then\n            row=$((row + 1))\n         \
    \   col=0\n        fi\n    done\n    echo \"${result[@]}\" | tr ' ' ',' | sed\
    \ 's/^/[/' | sed 's/$/]/'", "    local lst=$1\n    local x=$2\n    local -a res=()\n\
    \    local -a row=()\n    local -a rows=()\n    local -a cols=()\n    local -a\
    \ row_cols=()\n    local -a row_cols_sorted=()\n    local -a res_sorted=()\n \
    \   local -a res_sorted_sorted=()\n    local -a res_sorted_sorted_sorted=()\n\
    \    local -a res_sorted_sorted_sorted_sorted=()\n    local -a res_sorted_sorted_sorted_sorted_sorted=()\n\
    \    local -a res_sorted_sorted_sorted_sorted_sorted_sorted=()\n    local -a res_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \    local -a res_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \    local -a res_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \    local -a res_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \    local -a res_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \    local -a res_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \    local -a res_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \    local -a res_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \    local -a res_sorted_sorted_s", "    local -a arr=()\n    local -a row=()\n\
    \    local -a col=()\n    local -a res=()\n    local -a tmp=()\n    local -a tmp2=()\n\
    \    local -a tmp3=()\n    local -a tmp4=()\n    local -a tmp5=()\n    local -a\
    \ tmp6=()\n    local -a tmp7=()\n    local -a tmp8=()\n    local -a tmp9=()\n\
    \    local -a tmp10=()\n    local -a tmp11=()\n    local -a tmp12=()\n    local\
    \ -a tmp13=()\n    local -a tmp14=()\n    local -a tmp15=()\n    local -a tmp16=()\n\
    \    local -a tmp17=()\n    local -a tmp18=()\n    local -a tmp19=()\n    local\
    \ -a tmp20=()\n    local -a tmp21=()\n    local -a tmp22=()\n    local -a tmp23=()\n\
    \    local -a tmp24=()\n    local -a tmp25=()\n    local -a tmp26=()\n    local\
    \ -a tmp27=()\n    local -a tmp28=()\n    local -a tmp29=()\n    local -a tmp30=()\n\
    \    local -a tmp31=()\n    local -a tmp32=()\n    local -a tmp33=()\n    local\
    \ -a tmp34=()\n    local -a tmp35=()\n    local -a tmp36=()\n    local -a tmp37=()\n\
    \    local -a tmp38=()\n    local -a tmp39=()\n    local -a tmp40=()\n    local\
    \ -a tmp41=()\n    local -a tmp42=()\n    local -a tmp43=()\n    local -a tmp44=()\n\
    \    local -a tmp45=()\n    local -a tmp46=()\n    local -a tmp47=()\n    local\
    \ -a tmp48=()\n    local -a tmp49=()\n    local -a tmp50=()\n    local -a tmp51=()\n\
    \    local -a tmp52=()\n    local -a tmp53=()\n    local -", "    local lst=$1\n\
    \    local x=$2\n    local -a rows\n    local -a row\n    local -a cols\n    local\
    \ -a col\n    local -a res\n    local -a res_row\n    local -a res_col\n    local\
    \ -a res_row_col\n    local -a res_row_col_str\n    local -a res_row_col_str_quoted\n\
    \    local -a res_row_col_str_quoted_comma\n    local -a res_row_col_str_quoted_comma_bracket\n\
    \    local -a res_row_col_str_quoted_comma_bracket_quoted\n    local -a res_row_col_str_quoted_comma_bracket_quoted_comma\n\
    \    local -a res_row_col_str_quoted_comma_bracket_quoted_comma_bracket\n    local\
    \ -a res_row_col_str_quoted_comma_bracket_quoted_comma_bracket_quoted\n    local\
    \ -a res_row_col_str_quoted_comma_bracket_quoted_comma_bracket_quoted_comma\n\
    \    local -a res_row_col_str_quoted_comma_bracket_quoted_comma_bracket_quoted_comma_bracket\n\
    \    local -a res_row_col_str_quoted_comma_bracket_quoted_comma_bracket_quoted_comma_bracket_quoted\n\
    \    local -a res_row_col_str_quoted_comma_bracket_quoted_comma_bracket_quoted_comma_bracket_quoted_comma\n\
    \    local -a res_row_col_str_quoted_comma_bracket_quoted_comma_bracket_quoted_comma_bracket_quoted_comma_bracket\n\
    \    local -a res_row_col_str_quoted_comma_bracket_quoted_comma_bracket_quoted_comma_bracket_quoted_comma_bracket_quoted\n",
  "  local -a rows\n  local -a row\n  local -a coordinates\n  local -a coordinate\n\
    \  local -a columns\n  local -a column\n  local -a result\n  local -a result_row\n\
    \  local -a result_column\n  local -a result_coordinate\n  local -a result_coordinates\n\
    \  local -a result_rows\n  local -a result_columns\n  local -a result_row_columns\n\
    \  local -a result_row_column\n  local -a result_row_columns_sorted\n  local -a\
    \ result_row_columns_sorted_desc\n  local -a result_row_columns_sorted_desc_coordinates\n\
    \  local -a result_row_columns_sorted_desc_coordinate\n  local -a result_row_columns_sorted_desc_coordinates_sorted\n\
    \  local -a result_row_columns_sorted_desc_coordinates_sorted_asc\n  local -a\
    \ result_row_columns_sorted_desc_coordinates_sorted_asc_rows\n  local -a result_row_columns_sorted_desc_coordinates_sorted_asc_row\n\
    \  local -a result_row_columns_sorted_desc_coordinates_sorted_asc_rows_sorted\n\
    \  local -a result_row_columns_sorted_desc_coordinates_sorted_asc_rows_sorted_asc\n\
    \  local -a result_row_columns_sorted_desc_coordinates_sorted_asc_rows_sorted_asc_columns\n\
    \  local -a result_row_columns_sorted_desc_coordinates_sorted_asc_rows_sorted_asc_column\n\
    \  local -a result_row_columns_sorted_desc_coordinates_sorted_asc_rows_sorted_asc_columns_sorted\n\
    \  local -a result_row_columns_sorted_desc_coordinates_sorted_asc_rows_sorted_asc_columns_sorted_desc\n\
    \  local -a result_row_columns_sorted_desc_coordinates_sorted_asc_rows_sorted",
  "    local lst=$1\n    local x=$2\n    local -a rows\n    local -a cols\n    local\
    \ -a row\n    local -a col\n    local -a result\n    local -a row_col\n    local\
    \ -a row_col_sorted\n    local -a result_sorted\n    local -a row_col_sorted_desc\n\
    \    local -a result_sorted_desc\n    local -a row_col_sorted_desc_str\n    local\
    \ -a result_sorted_desc_str\n    local -a result_sorted_desc_str_str\n    local\
    \ -a result_sorted_desc_str_str_str\n    local -a result_sorted_desc_str_str_str_str\n\
    \    local -a result_sorted_desc_str_str_str_str_str\n    local -a result_sorted_desc_str_str_str_str_str_str\n\
    \    local -a result_sorted_desc_str_str_str_str_str_str_str\n    local -a result_sorted_desc_str_str_str_str_str_str_str_str\n\
    \    local -a result_sorted_desc_str_str_str_str_str_str_str_str_str\n    local\
    \ -a result_sorted_desc_str_str_str_str_str_str_str_str_str_str\n    local -a\
    \ result_sorted_desc_str_str_str_str_str_str_str_str_str_str_str\n    local -a\
    \ result_sorted_desc_str_str_str_str_str_str_str_str_str_str_str_str\n    local\
    \ -a result_sorted_desc_str_str_str_str_str_str_str_str_str_str_str_str_str\n\
    \    local -a result_sorted_desc_str_str_str_str_str_str_str_str_str_str_str_str_str_str\n\
    \    local -a result_sorted_desc_str_str_str_str_str_str_str_str_str_str_str_str_str",
  "    local lst=$1\n    local x=$2\n    local row=0\n    local col=0\n    local res=()\n\
    \    while read -r line; do\n        col=0\n        for y in $line; do\n     \
    \       if [[ $y == $x ]]; then\n                res+=(\"[\\\"$row\\\", \\\"$col\\\
    \"]\")\n            fi\n            ((col++))\n        done\n        ((row++))\n\
    \    done <<< \"$lst\"\n    echo \"${res[@]}\" | tr ' ' '\\n' | sort -t '\"' -k2\
    \ -n | sort -t '\"' -k1 -n", "    local lst=$1\n    local x=$2\n    local row=0\n\
    \    local col=0\n    local res=()\n    local row_res=()\n    local row_res_sorted=()\n\
    \    local res_sorted=()\n    for i in $lst; do\n        if [[ $i == $x ]]; then\n\
    \            row_res+=([$col]=$row)\n        fi\n        if [[ $i == $'\\n' ]];\
    \ then\n            row_res_sorted=()\n            for k in ${!row_res[@]}; do\n\
    \                row_res_sorted+=([${row_res[$k]}]=$k)\n            done\n   \
    \         for k in ${!row_res_sorted[@]}; do\n                res+=([$row]=${row_res_sorted[$k]})\n\
    \            done\n            row_res=()\n            row=$((row + 1))\n    \
    \        col=0\n        else\n            col=$((col + 1))\n        fi\n    done\n\
    \    row_res_sorted=()\n    for k in ${!row_res[@]}; do\n        row_res_sorted+=([${row_res[$k]}]=$k)\n\
    \    done\n    for k in ${!row_res_sorted[@]}; do\n        res+=([$row]=${row_res_sorted[$k]})\n\
    \    done\n    res_sorted=()\n    for k in ${!res[@]}; do\n        res_sorted+=([${res[$k]}]=$k)\n\
    \    done\n    for k in ${!res_sorted[@]}; do\n        echo \"[\\\"$k\\\", \\\"\
    ${res_sorted[$k]}\\\"]\"\n    done", "    local -a rows\n    local -a row\n  \
    \  local -a coordinates\n    local -a coordinate\n    local -a coordinates_sorted\n\
    \    local -a coordinates_sorted_by_row\n    local -a coordinates_sorted_by_column\n\
    \    local -a coordinates_sorted_by_row_and_column\n    local -a coordinates_sorted_by_row_and_column_reversed\n\
    \    local -a coordinates_sorted_by_row_and_column_reversed_string\n    local\
    \ -a coordinates_sorted_by_row_and_column_reversed_string_escaped\n    local -a\
    \ coordinates_sorted_by_row_and_column_reversed_string_escaped_quoted\n    local\
    \ -a coordinates_sorted_by_row_and_column_reversed_string_escaped_quoted_joined\n\
    \    local -a coordinates_sorted_by_row_and_column_reversed_string_escaped_quoted_joined_string\n\
    \    local -a coordinates_sorted_by_row_and_column_reversed_string_escaped_quoted_joined_string_escaped\n\
    \    local -a coordinates_sorted_by_row_and_column_reversed_string_escaped_quoted_joined_string_escaped_quoted\n\
    \    local -a coordinates_sorted_by_row_and_column_reversed_string_escaped_quoted_joined_string_escaped_quoted_joined\n\
    \    local -a coordinates_sorted_by_row_and_column_reversed_string_escaped_quoted_joined_string_escaped_quoted_joined_string\n\
    \    local -a coordinates_sorted_by_row_and_column_reversed_string_escaped_quoted_joined_string_escaped_quoted_joined_string_escaped\n\
    \    local -a coordinates_sorted_by_row_and_column_reversed_string_escaped_quoted_joined_string_escaped_quoted_joined_string_escaped_quoted\n\
    \    local -a coordinates_sorted_by_row_and_column_re", "    local lst=\"$1\"\n\
    \    local x=\"$2\"\n    local row=0\n    local col=0\n    local res=()\n    while\
    \ read -r line; do\n        col=0\n        for i in $line; do\n            if\
    \ [[ \"$i\" == \"$x\" ]]; then\n                res+=(\"[\\\"$row\\\", \\\"$col\\\
    \"]\")\n            fi\n            col=$((col+1))\n        done\n        row=$((row+1))\n\
    \    done <<< \"$lst\"\n    if [[ ${#res[@]} -gt 0 ]]; then\n        echo \"${res[@]}\"\
    \ | tr ' ' '\\n' | sort -t '\"' -k2 -n -r | tr '\\n' ' '\n    fi", "    local\
    \ -a arr\n    local -a arr_x\n    local -a arr_y\n    local -a arr_xy\n    local\
    \ -a arr_xy_sorted\n    local -a arr_xy_sorted_uniq\n    local -a arr_xy_sorted_uniq_str\n\
    \    local -a arr_xy_sorted_uniq_str_sorted\n    local -a arr_xy_sorted_uniq_str_sorted_str\n\
    \    local -a arr_xy_sorted_uniq_str_sorted_str_sorted\n    local -a arr_xy_sorted_uniq_str_sorted_str_sorted_str\n\
    \    local -a arr_xy_sorted_uniq_str_sorted_str_sorted_str_sorted\n    local -a\
    \ arr_xy_sorted_uniq_str_sorted_str_sorted_str_sorted_str\n    local -a arr_xy_sorted_uniq_str_sorted_str_sorted_str_sorted_str_sorted\n\
    \    local -a arr_xy_sorted_uniq_str_sorted_str_sorted_str_sorted_str_sorted_str\n\
    \    local -a arr_xy_sorted_uniq_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted\n\
    \    local -a arr_xy_sorted_uniq_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str\n\
    \    local -a arr_xy_sorted_uniq_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted\n\
    \    local -a arr_xy_sorted_uniq_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str\n\
    \    local -a arr_xy_sorted_uniq_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted\n\
    \   ", "    local -a row_cols\n    local -a row_cols_sorted\n    local -a row_cols_sorted_rev\n\
    \    local -a row_cols_sorted_rev_str\n    local -a row_cols_sorted_rev_str_quoted\n\
    \    local -a row_cols_sorted_rev_str_quoted_str\n    local -a row_cols_sorted_rev_str_quoted_str_quoted\n\
    \    local -a row_cols_sorted_rev_str_quoted_str_quoted_str\n    local -a row_cols_sorted_rev_str_quoted_str_quoted_str_quoted\n\
    \    local -a row_cols_sorted_rev_str_quoted_str_quoted_str_quoted_str\n    local\
    \ -a row_cols_sorted_rev_str_quoted_str_quoted_str_quoted_str_quoted\n    local\
    \ -a row_cols_sorted_rev_str_quoted_str_quoted_str_quoted_str_quoted_str\n   \
    \ local -a row_cols_sorted_rev_str_quoted_str_quoted_str_quoted_str_quoted_str_quoted\n\
    \    local -a row_cols_sorted_rev_str_quoted_str_quoted_str_quoted_str_quoted_str_quoted_str\n\
    \    local -a row_cols_sorted_rev_str_quoted_str_quoted_str_quoted_str_quoted_str_quoted_str_quoted\n\
    \    local -a row_cols_sorted_rev_str_quoted_str_quoted_str_quoted_str_quoted_str_quoted_str_quoted_str\n\
    \    local -a row_cols_sorted_rev_str_quoted_str_quoted_str_quoted_str_quoted_str_quoted_str_quoted_str_quoted\n\
    \    local -a row_cols_sorted_rev_str_quoted_str_", "    local lst=\"$1\"\n  \
    \  local x=\"$2\"\n    local row=0\n    local col=0\n    local res=()\n    while\
    \ read -r line; do\n        col=0\n        for word in $line; do\n           \
    \ if [[ \"$word\" == \"$x\" ]]; then\n                res+=(\"[\\\"$row\\\", \\\
    \"$col\\\"]\")\n            fi\n            ((col++))\n        done\n        ((row++))\n\
    \    done <<< \"$lst\"\n    echo \"${res[@]}\" | tr ' ' '\\n' | sort -t '\"' -k\
    \ 1n -k 3nr | tr '\\n' ' '", "    local -a rows\n    local -a row\n    local -a\
    \ result\n    local -a row_result\n    local -i i\n    local -i j\n    local -i\
    \ k\n    local -i row_len\n    local -i row_len_max\n    local -i row_len_min\n\
    \    local -i row_len_max_index\n    local -i row_len_min_index\n    local -i\
    \ row_len_max_index_prev\n    local -i row_len_min_index_prev\n    local -i row_len_max_index_prev_prev\n\
    \    local -i row_len_min_index_prev_prev\n    local -i row_len_max_index_prev_prev_prev\n\
    \    local -i row_len_min_index_prev_prev_prev\n    local -i row_len_max_index_prev_prev_prev_prev\n\
    \    local -i row_len_min_index_prev_prev_prev_prev\n    local -i row_len_max_index_prev_prev_prev_prev_prev\n\
    \    local -i row_len_min_index_prev_prev_prev_prev_prev\n    local -i row_len_max_index_prev_prev_prev_prev_prev_prev\n\
    \    local -i row_len_min_index_prev_prev_prev_prev_prev_prev\n    local -i row_len_max_index_prev_prev_prev_prev_prev_prev_prev\n\
    \    local -i row_len_min_index_prev_prev_prev_prev_prev_prev_prev\n    local\
    \ -i row_len_max_index_prev_prev_prev_prev_prev_prev_prev_prev\n    local -i row_len_min_index_prev_prev_prev_prev_prev_prev_prev_prev\n\
    \    local -i row_len_max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev\n\
    \    local -i row_len_min_index_prev_prev_prev_prev_prev_prev_prev_prev_prev\n\
    \    local -i row_len_max_index_prev_prev_prev_prev", "  local lst=\"$1\"\n  local\
    \ x=\"$2\"\n  local row=0\n  local col=0\n  local result=()\n  local row_result=()\n\
    \  for i in $(echo \"$lst\" | tr ' ' '\\n'); do\n    if [[ \"$i\" == \"$x\" ]];\
    \ then\n      row_result+=(\"$row\")\n      row_result+=(\"$col\")\n      result+=(\"\
    [$(echo \"${row_result[@]}\" | tr ' ' ',')]\")\n      row_result=()\n    fi\n\
    \    if [[ \"$i\" == \"\" ]]; then\n      row=$((row + 1))\n      col=0\n    else\n\
    \      col=$((col + 1))\n    fi\n  done\n  echo \"${result[@]}\" | sort -t ','\
    \ -k 1n -k 2nr | tr -d '[]'", "    local lst=\"$1\"\n    local x=\"$2\"\n    local\
    \ row=0\n    local col=0\n    local result=()\n    for line in $lst; do\n    \
    \    col=0\n        for num in $line; do\n            if [ \"$num\" == \"$x\"\
    \ ]; then\n                result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n      \
    \      fi\n            col=$((col+1))\n        done\n        row=$((row+1))\n\
    \    done\n    echo \"${result[@]}\" | tr ' ' ',' | sed 's/^/[/' | sed 's/$/]/'",
  "    local row=0\n    local col=0\n    local result=()\n    for line in $(echo \"\
    $1\" | tr ' ' '\\n'); do\n        if [[ \"$line\" == \"$2\" ]]; then\n       \
    \     result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n        fi\n        if [[ \"\
    $line\" == \"\" ]]; then\n            row=$((row + 1))\n            col=0\n  \
    \      else\n            col=$((col + 1))\n        fi\n    done\n    echo \"${result[@]}\"\
    \ | tr ' ' ',' | sed 's/^/[/' | sed 's/$/]/'", "    local lst=$1\n    local x=$2\n\
    \    local row=0\n    local col=0\n    local result=()\n    while read -r line;\
    \ do\n        col=0\n        for i in $line; do\n            if [[ $i -eq $x ]];\
    \ then\n                result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n         \
    \   fi\n            col=$((col + 1))\n        done\n        row=$((row + 1))\n\
    \    done <<< \"$lst\"\n    echo \"${result[@]}\" | tr ' ' ',' | sed 's/^/[/;s/$/]/'",
  "    local lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n    local col=0\n  \
    \  local res=()\n    local row_res=()\n    while read -r line; do\n        col=0\n\
    \        row_res=()\n        for y in $line; do\n            if [[ \"$y\" == \"\
    $x\" ]]; then\n                row_res+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n \
    \           fi\n            col=$((col+1))\n        done\n        if [[ ${#row_res[@]}\
    \ -gt 0 ]]; then\n            res+=(\"${row_res[@]}\")\n        fi\n        row=$((row+1))\n\
    \    done <<< \"$lst\"\n    echo \"${res[@]}\"", "  local lst=\"$1\"\n  local\
    \ x=\"$2\"\n  local row=0\n  local col=0\n  local res=()\n  while read -r line;\
    \ do\n    col=0\n    for i in $line; do\n      if [ \"$i\" == \"$x\" ]; then\n\
    \        res+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n      fi\n      col=$((col+1))\n\
    \    done\n    row=$((row+1))\n  done <<< \"$lst\"\n  echo \"${res[@]}\" | tr\
    \ ' ' ',' | sed 's/^/[/;s/$/]/'", "    local lst=$1\n    local x=$2\n    local\
    \ row=0\n    local col=0\n    local result=()\n    for i in $lst; do\n       \
    \ if [[ $i == $x ]]; then\n            result+=(\"[\\\"$row\\\", \\\"$col\\\"\
    ]\")\n        fi\n        if [[ $i == \"\" ]]; then\n            row=$((row +\
    \ 1))\n            col=0\n        else\n            col=$((col + 1))\n       \
    \ fi\n    done\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -t '\"' -k1n -k3nr\
    \ | tr '\\n' ' '", "    local -a arr\n    local -a res\n    local -a row\n   \
    \ local -a col\n    local -a tmp\n    local -a tmp2\n    local -a tmp3\n    local\
    \ -a tmp4\n    local -a tmp5\n    local -a tmp6\n    local -a tmp7\n    local\
    \ -a tmp8\n    local -a tmp9\n    local -a tmp10\n    local -a tmp11\n    local\
    \ -a tmp12\n    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local\
    \ -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local\
    \ -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local\
    \ -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local\
    \ -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local\
    \ -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local\
    \ -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local\
    \ -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local\
    \ -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local\
    \ -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local\
    \ -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local\
    \ -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local\
    \ -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local\
    \ -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n    local\
    \ -a tmp68\n    local -a tmp69\n    local -a tmp", "    local lst=$1\n    local\
    \ x=$2\n    local row=0\n    local col=0\n    local result=()\n    for i in $(echo\
    \ \"$lst\" | tr ' ' '\\n'); do\n        if [[ $i == $x ]]; then\n            result+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n        fi\n        if [[ $i == $'\\n' ]]; then\n\
    \            row=$((row + 1))\n            col=0\n        else\n            col=$((col\
    \ + 1))\n        fi\n    done\n    echo \"${result[@]}\" | tr ' ' ',' | sed 's/^/[/;s/$/]/'",
  "    local lst=$1\n    local x=$2\n    local -a res\n    local -a row\n    local\
    \ -a col\n    local -a row_col\n    local -a row_col_sorted\n    local -a res_sorted\n\
    \    local -a res_sorted_col\n    local -a res_sorted_col_sorted\n    local -a\
    \ res_sorted_col_sorted_str\n    local -a res_sorted_col_sorted_str_str\n    local\
    \ -a res_sorted_col_sorted_str_str_str\n    local -a res_sorted_col_sorted_str_str_str_str\n\
    \    local -a res_sorted_col_sorted_str_str_str_str_str\n    local -a res_sorted_col_sorted_str_str_str_str_str_str\n\
    \    local -a res_sorted_col_sorted_str_str_str_str_str_str_str\n    local -a\
    \ res_sorted_col_sorted_str_str_str_str_str_str_str_str\n    local -a res_sorted_col_sorted_str_str_str_str_str_str_str_str_str\n\
    \    local -a res_sorted_col_sorted_str_str_str_str_str_str_str_str_str_str\n\
    \    local -a res_sorted_col_sorted_str_str_str_str_str_str_str_str_str_str_str\n\
    \    local -a res_sorted_col_sorted_str_str_str_str_str_str_str_str_str_str_str_str\n\
    \    local -a res_sorted_col_sorted_str_str_str_str_str_str_str_str_str_str_str_str_str\n\
    \    local -a res_sorted_col_sorted_str_str_str_str_str_str_str_str_str_str_str_str_str_str\n\
    \    local -a res_sorted_col_sorted_str_str_str_str", "    local lst=\"$1\"\n\
    \    local x=\"$2\"\n    local row=0\n    local col=0\n    local res=()\n    local\
    \ row_res=()\n    local row_res_sorted=()\n    local res_sorted=()\n    local\
    \ row_res_sorted_str=''\n    local res_sorted_str=''\n    local res_str=''\n \
    \   local row_res_str=''\n    local row_res_sorted_str=''\n    local res_sorted_str=''\n\
    \    local row_res_sorted_str_escaped=''\n    local res_sorted_str_escaped=''\n\
    \    local row_res_str_escaped=''\n    local res_str_escaped=''\n    local row_res_sorted_str_escaped=''\n\
    \    local res_sorted_str_escaped=''\n    local row_res_sorted_str_escaped_quoted=''\n\
    \    local res_sorted_str_escaped_quoted=''\n    local row_res_str_escaped_quoted=''\n\
    \    local res_str_escaped_quoted=''\n    local row_res_sorted_str_escaped_quoted=''\n\
    \    local res_sorted_str_escaped_quoted=''\n    local row_res_sorted_str_escaped_quoted_json=''\n\
    \    local res_sorted_str_escaped_quoted_json=''\n    local row_res_str_escaped_quoted_json=''\n\
    \    local res_str_escaped_quoted_json=''\n    local row_res_sorted_str_escaped_quoted_json=''\n\
    \    local res_sorted_str_escaped_quoted_json=''\n    local row_res_sorted_str_escaped_quoted_json_sorted=''\n\
    \    local res_sorted_str_escaped_quoted_json_sorted=''\n    local row_res_str_escaped_quoted_json_sorted=''\n\
    \    local res_str_escaped_quoted_json_s", "    local lst=\"$1\"\n    local x=\"\
    $2\"\n    local i=0\n    local j=0\n    local res=()\n    while read -r line;\
    \ do\n        j=0\n        for y in $line; do\n            if [[ \"$y\" == \"\
    $x\" ]]; then\n                res+=(\"[\\\"$i\\\", \\\"$j\\\"]\")\n         \
    \   fi\n            j=$((j+1))\n        done\n        i=$((i+1))\n    done <<<\
    \ \"$lst\"\n    if [[ ${#res[@]} -eq 0 ]]; then\n        echo \"[]\"\n    else\n\
    \        local res_str=\"[\"\n        for i in \"${res[@]}\"; do\n           \
    \ res_str+=\"$i,\"\n        done\n        res_str=\"${res_str%?}]\"\n        echo\
    \ \"$res_str\"\n    fi", "    local row=0\n    local col=0\n    local result=()\n\
    \    for line in $(echo \"$1\" | tr ' ' '\\n'); do\n        if [[ $line == $2\
    \ ]]; then\n            result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n        fi\n\
    \        col=$((col + 1))\n    done\n    echo \"${result[@]}\"", "    local -a\
    \ row_cols=()\n    local -a rows=()\n    local -a cols=()\n    local -a result=()\n\
    \    local -a row_cols_sorted=()\n    local -a rows_sorted=()\n    local -a cols_sorted=()\n\
    \    local -a result_sorted=()\n    local -a row_cols_sorted_desc=()\n    local\
    \ -a rows_sorted_desc=()\n    local -a cols_sorted_desc=()\n    local -a result_sorted_desc=()\n\
    \    local -a row_cols_sorted_desc_sorted=()\n    local -a rows_sorted_desc_sorted=()\n\
    \    local -a cols_sorted_desc_sorted=()\n    local -a result_sorted_desc_sorted=()\n\
    \    local -a row_cols_sorted_desc_sorted_sorted=()\n    local -a rows_sorted_desc_sorted_sorted=()\n\
    \    local -a cols_sorted_desc_sorted_sorted=()\n    local -a result_sorted_desc_sorted_sorted=()\n\
    \    local -a row_cols_sorted_desc_sorted_sorted_sorted=()\n    local -a rows_sorted_desc_sorted_sorted_sorted=()\n\
    \    local -a cols_sorted_desc_sorted_sorted_sorted=()\n    local -a result_sorted_desc_sorted_sorted_sorted=()\n\
    \    local -a row_cols_sorted_desc_sorted_sorted_sorted_sorted=()\n    local -a\
    \ rows_sorted_desc_sorted_sorted_sorted_sorted=()\n    local -a cols_sorted_desc_sorted_sorted_sorted_sorted=()\n\
    \    local -a result_sorted_desc_sorted_sorted_sorted_sorted=()\n    local -a\
    \ row_cols_sorted_desc_sorted_sorted_sorted_sorted_s", "    local lst=\"$1\"\n\
    \    local x=\"$2\"\n    local row=0\n    local col=0\n    local res=()\n    local\
    \ row_res=()\n    local row_res_sorted=()\n    local row_res_sorted_rev=()\n \
    \   local row_res_sorted_rev_str=()\n    local res_str=()\n    local res_str_sorted=()\n\
    \    local res_str_sorted_rev=()\n    local res_str_sorted_rev_str=()\n    for\
    \ i in $(echo \"$lst\" | tr ' ' '\\n'); do\n        if [[ \"$i\" == \"$x\" ]];\
    \ then\n            row_res+=(\"$row\")\n            row_res+=(\"$col\")\n   \
    \     fi\n        if [[ \"$i\" == \"\\n\" ]]; then\n            row_res_sorted=($(printf\
    \ '%s\\n' \"${row_res[@]}\" | sort -n))\n            row_res_sorted_rev=($(printf\
    \ '%s\\n' \"${row_res_sorted[@]}\" | tac))\n            row_res_sorted_rev_str=($(printf\
    \ '\"%s\" ' \"${row_res_sorted_rev[@]}\"))\n            res+=(${row_res_sorted_rev_str[@]})\n\
    \            row_res=()\n            row_res_sorted=()\n            row_res_sorted_rev=()\n\
    \            row_res_sorted_rev_str=()\n            row=$((row + 1))\n       \
    \     col=0\n        else\n            col=$((col + 1))\n        fi\n    done\n\
    \    res_str=($(printf '%s\\n' \"${res[@]}\" | sort -n))\n    res_str_sorted=($(printf\
    \ '%s\\n' \"${res_str[@]}\" | sort -n))\n    res_str_sorted_rev=($(printf '%s\\\
    n' \"${res_str_sorted[@]}\" | tac))\n    res_str_sorted_rev_str=($(printf '[%s",
  "    local lst=$1\n    local x=$2\n    local -a res=()\n    local -a row=()\n  \
    \  local -a col=()\n    local -a tmp=()\n    local -a tmp2=()\n    local -a tmp3=()\n\
    \    local -a tmp4=()\n    local -a tmp5=()\n    local -a tmp6=()\n    local -a\
    \ tmp7=()\n    local -a tmp8=()\n    local -a tmp9=()\n    local -a tmp10=()\n\
    \    local -a tmp11=()\n    local -a tmp12=()\n    local -a tmp13=()\n    local\
    \ -a tmp14=()\n    local -a tmp15=()\n    local -a tmp16=()\n    local -a tmp17=()\n\
    \    local -a tmp18=()\n    local -a tmp19=()\n    local -a tmp20=()\n    local\
    \ -a tmp21=()\n    local -a tmp22=()\n    local -a tmp23=()\n    local -a tmp24=()\n\
    \    local -a tmp25=()\n    local -a tmp26=()\n    local -a tmp27=()\n    local\
    \ -a tmp28=()\n    local -a tmp29=()\n    local -a tmp30=()\n    local -a tmp31=()\n\
    \    local -a tmp32=()\n    local -a tmp33=()\n    local -a tmp34=()\n    local\
    \ -a tmp35=()\n    local -a tmp36=()\n    local -a tmp37=()\n    local -a tmp38=()\n\
    \    local -a tmp39=()\n    local -a tmp40=()\n    local -a tmp41=()\n    local\
    \ -a tmp42=()\n    local -a tmp43=()\n    local -a tmp44=()\n    local -a tmp45=()\n\
    \    local -a tmp46=()\n    local -a tmp47=()\n    local -a tmp48=()\n    local\
    \ -a tmp49=()\n    local -a tmp50=()\n    local -a tmp51=()\n    local -a tmp52=()\n\
    \    local -a tmp53=", "    local lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n\
    \    local col=0\n    local res=()\n    while read -r line; do\n        col=0\n\
    \        for i in $line; do\n            if [[ \"$i\" == \"$x\" ]]; then\n   \
    \             res+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n      \
    \      col=$((col+1))\n        done\n        row=$((row+1))\n    done <<< \"$lst\"\
    \n    echo \"${res[@]}\" | tr ' ' ',' | sed 's/^/[/;s/$/]/'", "    local lst=\"\
    $1\"\n    local x=\"$2\"\n    local row=0\n    local col=0\n    local result=\"\
    \"\n    while read line; do\n        col=0\n        for i in $line; do\n     \
    \       if [ \"$i\" = \"$x\" ]; then\n                result=\"$result [\\\"$row\\\
    \", \\\"$col\\\"]\"\n            fi\n            col=$((col+1))\n        done\n\
    \        row=$((row+1))\n    done <<< \"$lst\"\n    echo \"$result\" | sort -t\
    \ '\"' -k2 -n -r -t '\"' -k1 -n", "    local -a rows\n    local -a row\n    local\
    \ -a cols\n    local -a col\n    local -a result\n    local -a row_result\n  \
    \  local -a col_result\n    local -a row_col_result\n    local -a row_col_result_sorted\n\
    \    local -a row_col_result_sorted_desc\n    local -a row_col_result_sorted_desc_result\n\
    \    local -a row_col_result_sorted_desc_result_sorted\n    local -a row_col_result_sorted_desc_result_sorted_result\n\
    \    local -a row_col_result_sorted_desc_result_sorted_result_sorted\n    local\
    \ -a row_col_result_sorted_desc_result_sorted_result_sorted_result\n    local\
    \ -a row_col_result_sorted_desc_result_sorted_result_sorted_result_sorted\n  \
    \  local -a row_col_result_sorted_desc_result_sorted_result_sorted_result_sorted_result\n\
    \    local -a row_col_result_sorted_desc_result_sorted_result_sorted_result_sorted_result_sorted\n\
    \    local -a row_col_result_sorted_desc_result_sorted_result_sorted_result_sorted_result_sorted_result\n\
    \    local -a row_col_result_sorted_desc_result_sorted_result_sorted_result_sorted_result_sorted_result_sorted\n\
    \    local -a row_col_result_sorted_desc_result_sorted_result_sorted_result_sorted_result_sorted_result_sorted_result\n\
    \    local -a row_col_result_sorted_desc_result_sorted_result_sorted_result_sorted_result_sorted_result_sorted_result_sorted\n\
    \    local -a row_col_result_sorted_desc_result_sorted_result_sorted_result_sorted_result_sorted_result_sorted_result_sorted_result\n\
    \    local -a row_col", "    local lst=\"$1\"\n    local x=\"$2\"\n    local -a\
    \ res\n    local -a row\n    local -a col\n    local -a row_col\n    local -a\
    \ row_col_sorted\n    local -a row_col_sorted_rev\n    local -a row_col_sorted_rev_str\n\
    \    local -a row_col_sorted_rev_str_sorted\n    local -a row_col_sorted_rev_str_sorted_rev\n\
    \    local -a row_col_sorted_rev_str_sorted_rev_str\n    local -a row_col_sorted_rev_str_sorted_rev_str_sorted\n\
    \    local -a row_col_sorted_rev_str_sorted_rev_str_sorted_rev\n    local -a row_col_sorted_rev_str_sorted_rev_str_sorted_rev_str\n\
    \    local -a row_col_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted\n  \
    \  local -a row_col_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev\n\
    \    local -a row_col_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev_str\n\
    \    local -a row_col_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted\n\
    \    local -a row_col_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev\n\
    \    local -a row_col_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev_str\n\
    \    local -a row_col_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted\n\
    \    local -a row_col_sorted_rev_str_sorted", "    local -a row_cols\n    local\
    \ -a row_cols_sorted\n    local -a row_cols_sorted_uniq\n    local -a row_cols_sorted_uniq_str\n\
    \    local -a row_cols_sorted_uniq_str_sorted\n    local -a row_cols_sorted_uniq_str_sorted_str\n\
    \    local -a row_cols_sorted_uniq_str_sorted_str_sorted\n    local -a row_cols_sorted_uniq_str_sorted_str_sorted_str\n\
    \    local -a row_cols_sorted_uniq_str_sorted_str_sorted_str_sorted\n    local\
    \ -a row_cols_sorted_uniq_str_sorted_str_sorted_str_sorted_str\n    local -a row_cols_sorted_uniq_str_sorted_str_sorted_str_sorted_str_sorted\n\
    \    local -a row_cols_sorted_uniq_str_sorted_str_sorted_str_sorted_str_sorted_str\n\
    \    local -a row_cols_sorted_uniq_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted\n\
    \    local -a row_cols_sorted_uniq_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str\n\
    \    local -a row_cols_sorted_uniq_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted\n\
    \    local -a row_cols_sorted_uniq_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str\n\
    \    local -a row_cols_sorted_uniq_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted\n\
    \    local -a row_", "    local lst=$1\n    local x=$2\n    local row=0\n    local\
    \ col=0\n    local result=()\n    while read -r line; do\n        col=0\n    \
    \    for word in $line; do\n            if [[ $word -eq $x ]]; then\n        \
    \        result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n        \
    \    ((col++))\n        done\n        ((row++))\n    done <<< \"$lst\"\n    echo\
    \ \"${result[@]}\" | tr ' ' ',' | sed 's/^/[/' | sed 's/$/]/'", "    local -a\
    \ arr\n    local -a row\n    local -a col\n    local -a res\n    local -a tmp\n\
    \    local -a tmp2\n    local -a tmp3\n    local -a tmp4\n    local -a tmp5\n\
    \    local -a tmp6\n    local -a tmp7\n    local -a tmp8\n    local -a tmp9\n\
    \    local -a tmp10\n    local -a tmp11\n    local -a tmp12\n    local -a tmp13\n\
    \    local -a tmp14\n    local -a tmp15\n    local -a tmp16\n    local -a tmp17\n\
    \    local -a tmp18\n    local -a tmp19\n    local -a tmp20\n    local -a tmp21\n\
    \    local -a tmp22\n    local -a tmp23\n    local -a tmp24\n    local -a tmp25\n\
    \    local -a tmp26\n    local -a tmp27\n    local -a tmp28\n    local -a tmp29\n\
    \    local -a tmp30\n    local -a tmp31\n    local -a tmp32\n    local -a tmp33\n\
    \    local -a tmp34\n    local -a tmp35\n    local -a tmp36\n    local -a tmp37\n\
    \    local -a tmp38\n    local -a tmp39\n    local -a tmp40\n    local -a tmp41\n\
    \    local -a tmp42\n    local -a tmp43\n    local -a tmp44\n    local -a tmp45\n\
    \    local -a tmp46\n    local -a tmp47\n    local -a tmp48\n    local -a tmp49\n\
    \    local -a tmp50\n    local -a tmp51\n    local -a tmp52\n    local -a tmp53\n\
    \    local -a tmp54\n    local -a tmp55\n    local -a tmp56\n    local -a tmp57\n\
    \    local -a tmp58\n    local -a tmp59\n    local -a tmp60\n    local -a tmp61\n\
    \    local -a tmp62\n    local -a tmp63\n    local -a tmp64\n    local -a tmp65\n\
    \    local -a tmp66\n    local -a tmp67\n    local -a tmp68\n    local -a tmp69\n\
    \    local -a tmp", "    local lst=$1\n    local x=$2\n    local row=0\n    local\
    \ col=0\n    local result=()\n    for i in $lst; do\n        if [ \"$i\" = \"\
    $x\" ]; then\n            result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n       \
    \ fi\n        col=$((col+1))\n        if [ \"$i\" = \"\" ]; then\n           \
    \ row=$((row+1))\n            col=0\n        fi\n    done\n    echo \"${result[@]}\"\
    \ | sort -t '\"' -k 1,1n -k 3,3nr", "    local lst=$1\n    local x=$2\n    local\
    \ result=()\n    local row=0\n    local col=0\n    for i in $lst; do\n       \
    \ if [[ $i == $x ]]; then\n            result+=(\"[\\\"$row\\\", \\\"$col\\\"\
    ]\")\n        fi\n        if [[ $i == \"\" ]]; then\n            row=$((row +\
    \ 1))\n            col=0\n        else\n            col=$((col + 1))\n       \
    \ fi\n    done\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -t '\"' -k1n -k3nr\
    \ | tr '\\n' ' '", "    local -a lst\n    local -a row\n    local -a col\n   \
    \ local -a res\n    local -i i\n    local -i j\n    local -i k\n    local -i n\n\
    \    local -i m\n    local -i p\n    local -i q\n    local -i r\n    local -i\
    \ s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local\
    \ -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local\
    \ -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local\
    \ -i h\n    local -i ii\n    local -i jj\n    local -i kk\n    local -i ll\n \
    \   local -i mm\n    local -i nn\n    local -i oo\n    local -i pp\n    local\
    \ -i qq\n    local -i rr\n    local -i ss\n    local -i tt\n    local -i uu\n\
    \    local -i vv\n    local -i ww\n    local -i xx\n    local -i yy\n    local\
    \ -i zz\n    local -i aa\n    local -i bb\n    local -i cc\n    local -i dd\n\
    \    local -i ee\n    local -i ff\n    local -i gg\n    local -i hh\n    local\
    \ -i iii\n    local -i jjj\n    local -i kkk\n    local -i lll\n    local -i mmm\n\
    \    local -i nnn\n    local -i ooo\n    local -i ppp\n    local -i qqq\n    local\
    \ -i rrr\n    local -i sss\n    local -i ttt\n    local -i uuu\n    local -i vvv\n\
    \    local -i www\n    local -i xxx\n    local -i yyy\n    local -i zzz\n    local\
    \ -i aaa\n    local -i bbb\n    local -i ccc\n    local -i ddd\n    local -i eee\n\
    \    local -i fff\n    local -", "    local lst=$1\n    local x=$2\n    local\
    \ row=0\n    local col=0\n    local result=()\n    for i in $lst; do\n       \
    \ if [[ $i == $x ]]; then\n            result+=(\"[\\\"$row\\\", \\\"$col\\\"\
    ]\")\n        fi\n        col=$((col + 1))\n        if [[ $i == $'\\n' ]]; then\n\
    \            row=$((row + 1))\n            col=0\n        fi\n    done\n    echo\
    \ \"${result[@]}\" | tr ' ' '\\n' | sort -t '\"' -k1n -k3nr | tr '\\n' ' '", " \
    \   local -a lst=($(echo \"$1\" | tr ' ' '\\n'))\n    local -a res=()\n    local\
    \ -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n\
    \    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local\
    \ -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n\
    \    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local\
    \ -i aa=0\n    local -i ab=0\n    local -i ac=0\n    local -i ad=0\n    local\
    \ -i ae=0\n    local -i af=0\n    local -i ag=0\n    local -i ah=0\n    local\
    \ -i ai=0\n    local -i aj=0\n    local -i ak=0\n    local -i al=0\n    local\
    \ -i am=0\n    local -i an=0\n    local -i ao=0\n    local -i ap=0\n    local\
    \ -i aq=0\n    local -i ar=0\n    local -i as=0\n    local -i at=0\n    local\
    \ -i au=0\n    local -i av=0\n    local -i aw=0\n    local -i ax=0\n    local\
    \ -i ay=0\n    local -i az=0\n    local -i ba=0\n    local -i bb=0\n    local\
    \ -i bc=0\n    local -i bd=0\n    local -i be=0\n    local -i bf=0\n    local\
    \ -i bg=0\n    local -i bh=0\n    local -i bi=0\n    local -i bj=0\n    local\
    \ -i bk=0\n    local -i bl=0\n    local -i bm=0\n    local -i bn=0\n   ", "  \
    \  local lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n    local col=0\n  \
    \  local result=()\n    while read -r line; do\n        col=0\n        for i in\
    \ $line; do\n            if [[ \"$i\" == \"$x\" ]]; then\n                result+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n            col=$((col + 1))\n\
    \        done\n        row=$((row + 1))\n    done <<< \"$lst\"\n    echo \"${result[@]}\"\
    \ | tr ' ' ',' | sed 's/^/[/;s/$/]/'", "    local lst=\"$1\"\n    local x=\"$2\"\
    \n    local row=0\n    local col=0\n    local result=()\n    while read -r line;\
    \ do\n        col=0\n        for num in $line; do\n            if [[ \"$num\"\
    \ == \"$x\" ]]; then\n                result+=(\"[\\\"$row\\\", \\\"$col\\\"]\"\
    )\n            fi\n            ((col++))\n        done\n        ((row++))\n  \
    \  done <<< \"$lst\"\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -t '\"'\
    \ -k 2 -k 1 -n | tr '\\n' ' '", "    local -a result=()\n    local -a row=()\n\
    \    local -a col=()\n    local -a x_coord=()\n    local -a y_coord=()\n    local\
    \ -a x_coord_sorted=()\n    local -a y_coord_sorted=()\n    local -a x_coord_sorted_unique=()\n\
    \    local -a y_coord_sorted_unique=()\n    local -a x_coord_sorted_unique_sorted=()\n\
    \    local -a y_coord_sorted_unique_sorted=()\n    local -a x_coord_sorted_unique_sorted_reversed=()\n\
    \    local -a y_coord_sorted_unique_sorted_reversed=()\n    local -a x_coord_sorted_unique_sorted_reversed_sorted=()\n\
    \    local -a y_coord_sorted_unique_sorted_reversed_sorted=()\n    local -a x_coord_sorted_unique_sorted_reversed_sorted_reversed=()\n\
    \    local -a y_coord_sorted_unique_sorted_reversed_sorted_reversed=()\n    local\
    \ -a x_coord_sorted_unique_sorted_reversed_sorted_reversed_sorted=()\n    local\
    \ -a y_coord_sorted_unique_sorted_reversed_sorted_reversed_sorted=()\n    local\
    \ -a x_coord_sorted_unique_sorted_reversed_sorted_reversed_sorted_reversed=()\n\
    \    local -a y_coord_sorted_unique_sorted_reversed_sorted_reversed_sorted_reversed=()\n\
    \    local -a x_coord_sorted_unique_sorted_reversed_sorted_reversed_sorted_reversed_sorted=()\n\
    \    local -a y_coord_sorted_unique_sorted_reversed_sorted_reversed_sorted_reversed_sorted=()\n\
    \    local -a x_coord_s", "    local lst=$1\n    local x=$2\n    local y=0\n \
    \   local -a result\n    for row in $lst; do\n        local -a columns\n     \
    \   local -a row_result\n        local i=0\n        for col in $row; do\n    \
    \        if [[ $col == $x ]]; then\n                columns+=($i)\n          \
    \  fi\n            ((i++))\n        done\n        for col in ${columns[@]}; do\n\
    \            row_result+=([\"$y\"]=\"$col\")\n        done\n        result+=($(declare\
    \ -p row_result))\n        ((y++))\n    done\n    echo \"${result[@]}\" | sort\
    \ -t '[' -k 1n -k 2nr | sed 's/^declare -A //' | tr -d '\\n' | sed 's/\\]/\\]\
    \ /g' | sed 's/\\[/\\[\\\"/g' | sed 's/\\]/\\\"\\]/g' | sed 's/\\] \\[/\\],\\\
    [/g' | sed 's/^/[/' | sed 's/$/]/'", "    local lst=$1\n    local x=$2\n    local\
    \ row=0\n    local col=0\n    local result=()\n    for line in $lst; do\n    \
    \    col=0\n        for num in $line; do\n            if [ \"$num\" == \"$x\"\
    \ ]; then\n                result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n      \
    \      fi\n            col=$((col+1))\n        done\n        row=$((row+1))\n\
    \    done\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -t '\"' -k 1n -k 3nr\
    \ | tr '\\n' ' '", "    local lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n\
    \    local col=0\n    local result=()\n    local row_result=()\n    local row_results=()\n\
    \    for i in $(echo \"$lst\" | tr ' ' '\\n'); do\n        if [[ \"$i\" == \"\
    $x\" ]]; then\n            row_result+=(\"$row\")\n            row_result+=(\"\
    $col\")\n            row_results+=(\"$(echo \"${row_result[@]}\" | tr ' ' ',')\"\
    )\n            row_result=()\n        fi\n        if [[ \"$i\" == \"\" ]]; then\n\
    \            row=$((row + 1))\n            col=0\n        else\n            col=$((col\
    \ + 1))\n        fi\n    done\n    for i in \"${row_results[@]}\"; do\n      \
    \  result+=(\"[$i]\")\n    done\n    echo \"${result[@]}\"", "    local -a row\n\
    \    local -a col\n    local -a res\n    local -a res_row\n    local -a res_col\n\
    \    local -a res_row_col\n    local -a res_row_col_sorted\n    local -a res_row_col_sorted_rev\n\
    \    local -a res_row_col_sorted_rev_str\n    local -a res_row_col_sorted_rev_str_sorted\n\
    \    local -a res_row_col_sorted_rev_str_sorted_rev\n    local -a res_row_col_sorted_rev_str_sorted_rev_str\n\
    \    local -a res_row_col_sorted_rev_str_sorted_rev_str_sorted\n    local -a res_row_col_sorted_rev_str_sorted_rev_str_sorted_rev\n\
    \    local -a res_row_col_sorted_rev_str_sorted_rev_str_sorted_rev_str\n    local\
    \ -a res_row_col_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted\n    local\
    \ -a res_row_col_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev\n   \
    \ local -a res_row_col_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev_str\n\
    \    local -a res_row_col_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted\n\
    \    local -a res_row_col_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev\n\
    \    local -a res_row_col_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev_str\n\
    \    local -a res_row_col_sorted_rev_str_sorted_rev_str_sorted_rev_str_s", " \
    \   local lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n    local col=0\n \
    \   local result=()\n    while read -r line; do\n        col=0\n        for i\
    \ in $line; do\n            if [[ \"$i\" == \"$x\" ]]; then\n                result+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n            col=$((col + 1))\n\
    \        done\n        row=$((row + 1))\n    done <<< \"$lst\"\n    echo \"${result[@]}\"\
    \ | tr ' ' ',' | sed 's/^/[/;s/$/]/'", "    local -a arr\n    local -a res\n \
    \   local -a tmp\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local\
    \ -i m=0\n    local -i n=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n\
    \    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local\
    \ -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n\
    \    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n\
    \    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n\
    \    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n\
    \    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n\
    \    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n\
    \    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n\
    \    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n\
    \    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n\
    \    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n\
    \    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=0\n\
    \    local -i ppp", "    local lst=$1\n    local x=$2\n    local row=0\n    local\
    \ col=0\n    local result=()\n    for i in $lst; do\n        if [[ $i == $x ]];\
    \ then\n            result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n        fi\n \
    \       if [[ $i == \"\" ]]; then\n            row=$((row + 1))\n            col=0\n\
    \        else\n            col=$((col + 1))\n        fi\n    done\n    echo \"\
    ${result[@]}\" | tr ' ' ',' | sed 's/^/[/' | sed 's/$/]/'", "    local -a rows\n\
    \    local -a row\n    local -a result\n    local -a row_result\n    local -a\
    \ row_result_sorted\n    local -a row_result_sorted_reversed\n    local -a row_result_sorted_reversed_string\n\
    \    local -a result_string\n    local -a result_string_sorted\n    local -a result_string_sorted_reversed\n\
    \    local -a result_string_sorted_reversed_string\n    local -a result_string_sorted_reversed_string_sorted\n\
    \    local -a result_string_sorted_reversed_string_sorted_reversed\n    local\
    \ -a result_string_sorted_reversed_string_sorted_reversed_string\n    local -a\
    \ result_string_sorted_reversed_string_sorted_reversed_string_sorted\n    local\
    \ -a result_string_sorted_reversed_string_sorted_reversed_string_sorted_reversed\n\
    \    local -a result_string_sorted_reversed_string_sorted_reversed_string_sorted_reversed_string\n\
    \    local -a result_string_sorted_reversed_string_sorted_reversed_string_sorted_reversed_string_sorted\n\
    \    local -a result_string_sorted_reversed_string_sorted_reversed_string_sorted_reversed_string_sorted_reversed\n\
    \    local -a result_string_sorted_reversed_string_sorted_reversed_string_sorted_reversed_string_sorted_reversed_string\n\
    \    local -a result_string_sorted_reversed_string_sorted_reversed_string_sorted_reversed_string_sorted_reversed_string_sorted\n\
    \    local -a result_string_sorted_reversed_string_sorted_reversed_string_sorted_reversed_string_sorted_reversed_string_sorted_reversed\n\
    \    local", "    local lst=\"$1\"\n    local x=\"$2\"\n    local -a rows\n  \
    \  local -a columns\n    local -a result\n    local row\n    local column\n  \
    \  local i\n    local j\n    local k\n    local -i row_count=0\n    local -i column_count=0\n\
    \    local -i row_index=0\n    local -i column_index=0\n    local -i row_length=0\n\
    \    local -i column_length=0\n    local -i row_length_prev=0\n    local -i column_length_prev=0\n\
    \    local -i row_length_next=0\n    local -i column_length_next=0\n    local\
    \ -i row_length_max=0\n    local -i column_length_max=0\n    local -i row_length_min=0\n\
    \    local -i column_length_min=0\n    local -i row_length_sum=0\n    local -i\
    \ column_length_sum=0\n    local -i row_length_avg=0\n    local -i column_length_avg=0\n\
    \    local -i row_length_med=0\n    local -i column_length_med=0\n    local -i\
    \ row_length_mod=0\n    local -i column_length_mod=0\n    local -i row_length_var=0\n\
    \    local -i column_length_var=0\n    local -i row_length_std=0\n    local -i\
    \ column_length_std=0\n    local -i row_length_skew=0\n    local -i column_length_skew=0\n\
    \    local -i row_length_kurt=0\n    local -i column_length_kurt=0\n    local\
    \ -i row_length_q1=0\n    local -i column_length_q1=0\n    local -i row_length_q2=0\n\
    \    local -i column_length_q2=0\n    local -i row_length_q3=0\n    local -i column_length_q3=0\n\
    \    local -i row_length_p=0\n    local -i column_length_p=", "    local lst=$1\n\
    \    local x=$2\n    local -a res=()\n    local -a row=()\n    local -a col=()\n\
    \    local -a row_col=()\n    local -a row_col_sorted=()\n    local -a row_sorted=()\n\
    \    local -a col_sorted=()\n    local -a row_col_sorted_final=()\n    local -a\
    \ row_sorted_final=()\n    local -a col_sorted_final=()\n    local -a res_final=()\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n  \
    \  local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n\
    \    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n\
    \    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n\
    \    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n\
    \    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n\
    \    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local\
    \ fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n\
    \    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n", "    local\
    \ lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n    local col=0\n    local\
    \ result=()\n    while read -r line; do\n        col=0\n        for i in $line;\
    \ do\n            if [[ \"$i\" == \"$x\" ]]; then\n                result+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n            col=$((col + 1))\n\
    \        done\n        row=$((row + 1))\n    done <<< \"$lst\"\n    echo \"${result[@]}\"\
    \ | tr ' ' ',' | sed 's/^/[/;s/$/]/'", "    local lst=$1\n    local x=$2\n   \
    \ local row=0\n    local col=0\n    local result=()\n    while read -r line; do\n\
    \        col=0\n        for word in $line; do\n            if [[ $word == $x ]];\
    \ then\n                result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n         \
    \   fi\n            ((col++))\n        done\n        ((row++))\n    done <<< \"\
    $lst\"\n    echo \"${result[@]}\" | tr ' ' ',' | sed 's/^/[/' | sed 's/$/]/' |\
    \ sort -t ',' -k1n -k2nr", "    local lst=$1\n    local x=$2\n    local row=0\n\
    \    local col=0\n    local result=()\n    while read -r line; do\n        col=0\n\
    \        for y in $line; do\n            if [[ $y == $x ]]; then\n           \
    \     result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n           \
    \ col=$((col + 1))\n        done\n        row=$((row + 1))\n    done <<< \"$lst\"\
    \n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -k1,1 -k2,2 -r | tr '\\n' '\
    \ '", "    local lst=\"$1\"\n    local x=\"$2\"\n    local -a row_col_lst\n  \
    \  local -a row_col_lst_sorted\n    local -a row_col_lst_sorted_unique\n    local\
    \ -a row_col_lst_sorted_unique_str\n    local -a row_col_lst_sorted_unique_str_sorted\n\
    \    local -a row_col_lst_sorted_unique_str_sorted_str\n    local -a row_col_lst_sorted_unique_str_sorted_str_sorted\n\
    \    local -a row_col_lst_sorted_unique_str_sorted_str_sorted_str\n    local -a\
    \ row_col_lst_sorted_unique_str_sorted_str_sorted_str_sorted\n    local -a row_col_lst_sorted_unique_str_sorted_str_sorted_str_sorted_str\n\
    \    local -a row_col_lst_sorted_unique_str_sorted_str_sorted_str_sorted_str_sorted\n\
    \    local -a row_col_lst_sorted_unique_str_sorted_str_sorted_str_sorted_str_sorted_str\n\
    \    local -a row_col_lst_sorted_unique_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted\n\
    \    local -a row_col_lst_sorted_unique_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str\n\
    \    local -a row_col_lst_sorted_unique_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted\n\
    \    local -a row_col_lst_sorted_unique_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str\n\
    \    local -a row_col_lst_sorted_unique_str_sorted_", "    local lst=\"$1\"\n\
    \    local x=\"$2\"\n    local row=0\n    local col=0\n    local result=()\n \
    \   while read -r line; do\n        col=0\n        for y in $line; do\n      \
    \      if [[ \"$y\" == \"$x\" ]]; then\n                result+=(\"[\\\"$row\\\
    \", \\\"$col\\\"]\")\n            fi\n            col=$((col + 1))\n        done\n\
    \        row=$((row + 1))\n    done <<< \"$lst\"\n    echo \"${result[@]}\" |\
    \ tr ' ' '\\n' | sort -t '\"' -k 2 -n -r | sort -t '\"' -k 1 -n", "    local lst=$1\n\
    \    local x=$2\n    local row=0\n    local col=0\n    local result=()\n    while\
    \ read -r line; do\n        col=0\n        for i in $line; do\n            if\
    \ [[ $i == $x ]]; then\n                result+=(\"[\\\"$row\\\", \\\"$col\\\"\
    ]\")\n            fi\n            col=$((col+1))\n        done\n        row=$((row+1))\n\
    \    done <<< \"$lst\"\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -t '\"\
    ' -k2 -n -r | sort -t '\"' -k1 -n", "    local -a rows\n    local -a cols\n  \
    \  local -a row\n    local -a col\n    local -a result\n    local -a row_col\n\
    \    local -a row_col_sorted\n    local -a row_col_sorted_rev\n    local -a row_col_sorted_rev_str\n\
    \    local -a row_col_sorted_rev_str_sorted\n    local -a row_col_sorted_rev_str_sorted_rev\n\
    \    local -a row_col_sorted_rev_str_sorted_rev_str\n    local -a row_col_sorted_rev_str_sorted_rev_str_sorted\n\
    \    local -a row_col_sorted_rev_str_sorted_rev_str_sorted_rev\n    local -a row_col_sorted_rev_str_sorted_rev_str_sorted_rev_str\n\
    \    local -a row_col_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted\n  \
    \  local -a row_col_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev\n\
    \    local -a row_col_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev_str\n\
    \    local -a row_col_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted\n\
    \    local -a row_col_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev\n\
    \    local -a row_col_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev_str\n\
    \    local -a row_col_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted\n\
    \    local -a row_col_sorted_rev_str_sorted_rev_str", "    local -a lst=($(echo\
    \ \"$1\" | tr ' ' '\\n'))\n    local -a res=()\n    local -a row=()\n    local\
    \ -a col=()\n    local -a row_idx=()\n    local -a col_idx=()\n    local -a row_col=()\n\
    \    local -a row_col_idx=()\n    local -a row_col_idx_sorted=()\n    local -a\
    \ row_col_sorted=()\n    local -a row_col_sorted_idx=()\n    local -a row_col_sorted_idx_sorted=()\n\
    \    local -a row_col_sorted_sorted=()\n    local -a row_col_sorted_sorted_idx=()\n\
    \    local -a row_col_sorted_sorted_idx_sorted=()\n    local -a row_col_sorted_sorted_sorted=()\n\
    \    local -a row_col_sorted_sorted_sorted_idx=()\n    local -a row_col_sorted_sorted_sorted_idx_sorted=()\n\
    \    local -a row_col_sorted_sorted_sorted_sorted=()\n    local -a row_col_sorted_sorted_sorted_sorted_idx=()\n\
    \    local -a row_col_sorted_sorted_sorted_sorted_idx_sorted=()\n    local -a\
    \ row_col_sorted_sorted_sorted_sorted_sorted=()\n    local -a row_col_sorted_sorted_sorted_sorted_sorted_idx=()\n\
    \    local -a row_col_sorted_sorted_sorted_sorted_sorted_idx_sorted=()\n    local\
    \ -a row_col_sorted_sorted_sorted_sorted_sorted_sorted=()\n    local -a row_col_sorted_sorted_sorted_sorted_sorted_sorted_idx=()\n\
    \    local -a row_col_sorted_sorted_", "    local lst=$1\n    local x=$2\n   \
    \ local row=0\n    local col=0\n    local res=()\n    local row_res=()\n    local\
    \ row_res_sorted=()\n    local res_sorted=()\n    for i in $(echo \"$lst\" | tr\
    \ ' ' '\\n'); do\n        if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $i\
    \ -eq $x ]]; then\n                row_res+=($col)\n            fi\n         \
    \   col=$((col+1))\n        else\n            if [[ ${#row_res[@]} -gt 0 ]]; then\n\
    \                row_res_sorted=($(printf \"%s\\n\" \"${row_res[@]}\" | sort -r))\n\
    \                for j in \"${row_res_sorted[@]}\"; do\n                    res+=($row)\n\
    \                    res+=($j)\n                done\n            fi\n       \
    \     row_res=()\n            row=$((row+1))\n            col=0\n        fi\n\
    \    done\n    if [[ ${#row_res[@]} -gt 0 ]]; then\n        row_res_sorted=($(printf\
    \ \"%s\\n\" \"${row_res[@]}\" | sort -r))\n        for j in \"${row_res_sorted[@]}\"\
    ; do\n            res+=($row)\n            res+=($j)\n        done\n    fi\n \
    \   res_sorted=($(printf \"%s\\n\" \"${res[@]}\" | sort -n))\n    echo \"[\"\n\
    \    for i in \"${res_sorted[@]}\"; do\n        echo \"[\\\"$i\\\"]\"\n    done\n\
    \    echo \"]\"", "    local -a rows\n    local -a cols\n    local -a result\n\
    \    local row\n    local col\n    local i\n    local j\n    local -i row_num=0\n\
    \    local -i col_num=0\n    local -i num_rows=0\n    local -i num_cols=0\n  \
    \  local -i num_cols_prev=0\n    local -i num_cols_curr=0\n    local -i num_cols_next=0\n\
    \    local -i num_cols_max=0\n    local -i num_cols_min=0\n    local -i num_cols_avg=0\n\
    \    local -i num_cols_med=0\n    local -i num_cols_mod=0\n    local -i num_cols_mod_count=0\n\
    \    local -i num_cols_mod_max=0\n    local -i num_cols_mod_max_count=0\n    local\
    \ -i num_cols_mod_max_prev=0\n    local -i num_cols_mod_max_curr=0\n    local\
    \ -i num_cols_mod_max_next=0\n    local -i num_cols_mod_max_prev_count=0\n   \
    \ local -i num_cols_mod_max_curr_count=0\n    local -i num_cols_mod_max_next_count=0\n\
    \    local -i num_cols_mod_max_prev_prev=0\n    local -i num_cols_mod_max_prev_prev_count=0\n\
    \    local -i num_cols_mod_max_prev_prev_prev=0\n    local -i num_cols_mod_max_prev_prev_prev_count=0\n\
    \    local -i num_cols_mod_max_prev_prev_prev_prev=0\n    local -i num_cols_mod_max_prev_prev_prev_prev_count=0\n\
    \    local -i num_cols_mod_max_prev_prev_prev_prev_prev=0\n    local -i num_cols_mod_max_prev_",
  "    local lst=$1\n    local x=$2\n    local -a rows\n    local -a cols\n    local\
    \ -a row\n    local -a col\n    local -a res\n    local i=0\n    local j=0\n \
    \   local k=0\n    local -a tmp\n    local -a tmp2\n    local -a tmp3\n    local\
    \ -a tmp4\n    local -a tmp5\n    local -a tmp6\n    local -a tmp7\n    local\
    \ -a tmp8\n    local -a tmp9\n    local -a tmp10\n    local -a tmp11\n    local\
    \ -a tmp12\n    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local\
    \ -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local\
    \ -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local\
    \ -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local\
    \ -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local\
    \ -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local\
    \ -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local\
    \ -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local\
    \ -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local\
    \ -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local\
    \ -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local\
    \ -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local\
    \ -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local\
    \ -a tmp64\n    local", "    local lst=$1\n    local x=$2\n    local row=0\n \
    \   local col=0\n    local res=()\n    for i in $lst; do\n        if [[ $i ==\
    \ $x ]]; then\n            res+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n        fi\n\
    \        if [[ $i == \"\" ]]; then\n            row=$((row + 1))\n           \
    \ col=0\n        else\n            col=$((col + 1))\n        fi\n    done\n  \
    \  echo \"${res[@]}\" | tr ' ' '\\n' | sort -t '\"' -k 1 -n -k 3 -r", "    local\
    \ -a row_cols\n    local -a rows\n    local -a cols\n    local -a row_cols_sorted\n\
    \    local -a row_cols_sorted_cols\n    local -a row_cols_sorted_rows\n    local\
    \ -a row_cols_sorted_cols_sorted\n    local -a row_cols_sorted_cols_sorted_rows\n\
    \    local -a row_cols_sorted_cols_sorted_cols\n    local -a row_cols_sorted_cols_sorted_rows_cols\n\
    \    local -a row_cols_sorted_cols_sorted_rows_cols_sorted\n    local -a row_cols_sorted_cols_sorted_rows_cols_sorted_rows\n\
    \    local -a row_cols_sorted_cols_sorted_rows_cols_sorted_cols\n    local -a\
    \ row_cols_sorted_cols_sorted_rows_cols_sorted_rows_cols\n    local -a row_cols_sorted_cols_sorted_rows_cols_sorted_rows_cols_sorted\n\
    \    local -a row_cols_sorted_cols_sorted_rows_cols_sorted_rows_cols_sorted_rows\n\
    \    local -a row_cols_sorted_cols_sorted_rows_cols_sorted_rows_cols_sorted_cols\n\
    \    local -a row_cols_sorted_cols_sorted_rows_cols_sorted_rows_cols_sorted_rows_cols\n\
    \    local -a row_cols_sorted_cols_sorted_rows_cols_sorted_rows_cols_sorted_rows_cols_sorted\n\
    \    local -a row_cols_sorted_cols_sorted_rows_cols_sorted_rows_cols_sorted_rows_cols_sorted_rows\n\
    \    local -a row_cols_sorted_cols_sorted_rows_", "    local lst=\"$1\"\n    local\
    \ x=\"$2\"\n    local row=0\n    local col=0\n    local result=()\n    local row_result=()\n\
    \    local row_results=()\n    local row_result_str=\"\"\n    local row_results_str=\"\
    \"\n    local result_str=\"\"\n    while read -r line; do\n        col=0\n   \
    \     row_result=()\n        for num in $line; do\n            if [[ \"$num\"\
    \ == \"$x\" ]]; then\n                row_result+=(\"\\\"$row\\\"\")\n       \
    \         row_result+=(\"\\\"$col\\\"\")\n            fi\n            ((col++))\n\
    \        done\n        if [[ \"${#row_result[@]}\" -gt 0 ]]; then\n          \
    \  row_results+=(\"${row_result[@]}\")\n        fi\n        ((row++))\n    done\
    \ <<< \"$lst\"\n    if [[ \"${#row_results[@]}\" -gt 0 ]]; then\n        row_results_str=\"\
    ${row_results[@]}\"\n        row_results_str=\"${row_results_str// /,}\"\n   \
    \     row_results_str=\"[$row_results_str]\"\n        result_str=\"$row_results_str\"\
    \n    else\n        result_str=\"[]\"\n    fi\n    echo \"$result_str\"", "  \
    \  local lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n    local col=0\n  \
    \  local result=()\n    for i in $(echo \"$lst\" | tr ' ' '\\n'); do\n       \
    \ if [[ \"$i\" == \"$x\" ]]; then\n            result+=(\"[\\\"$row\\\", \\\"\
    $col\\\"]\")\n        fi\n        if [[ \"$i\" == \"\" ]]; then\n            row=$((row\
    \ + 1))\n            col=0\n        else\n            col=$((col + 1))\n     \
    \   fi\n    done\n    echo \"${result[@]}\" | tr ' ' ',' | sed 's/^/[/' | sed\
    \ 's/$/]/'", "    local lst=$1\n    local x=$2\n    local row=0\n    local col=0\n\
    \    local result=()\n    while read -r line; do\n        col=0\n        for i\
    \ in $line; do\n            if [[ $i == $x ]]; then\n                result+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n            col=$((col+1))\n\
    \        done\n        row=$((row+1))\n    done <<< \"$lst\"\n    echo \"${result[@]}\"\
    \ | tr ' ' '\\n' | sort -t '\"' -k2 -n | sort -t '\"' -k1 -n | tr '\\n' ' '",
  "  local lst=$1\n  local x=$2\n  local row=0\n  local col=0\n  local res=()\n  local\
    \ row_res=()\n  local row_res_sorted=()\n  local row_res_sorted_rev=()\n  local\
    \ row_res_sorted_rev_str=()\n  local res_str=()\n  local res_str_sorted=()\n \
    \ local res_str_sorted_rev=()\n  local res_str_sorted_rev_str=()\n  local res_str_sorted_rev_str_sorted=()\n\
    \  local res_str_sorted_rev_str_sorted_rev=()\n  local res_str_sorted_rev_str_sorted_rev_str=()\n\
    \  local res_str_sorted_rev_str_sorted_rev_str_sorted=()\n  local res_str_sorted_rev_str_sorted_rev_str_sorted_rev=()\n\
    \  local res_str_sorted_rev_str_sorted_rev_str_sorted_rev_str=()\n  local res_str_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted=()\n\
    \  local res_str_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev=()\n\
    \  local res_str_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev_str=()\n\
    \  local res_str_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted=()\n\
    \  local res_str_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev=()\n\
    \  local res_str_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev_str=()\n\
    \  local res_str_sorted_rev_str_sorted_rev_str_", "    local -a lst=($(echo \"\
    $1\" | tr ' ' '\\n'))\n    local -a res=()\n    local -i i=0\n    local -i j=0\n\
    \    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ ab=0\n    local -i ac=0\n    local -i ad=0\n    local -i ae=0\n    local -i\
    \ af=0\n    local -i ag=0\n    local -i ah=0\n    local -i ai=0\n    local -i\
    \ aj=0\n    local -i ak=0\n    local -i al=0\n    local -i am=0\n    local -i\
    \ an=0\n    local -i ao=0\n    local -i ap=0\n    local -i aq=0\n    local -i\
    \ ar=0\n    local -i as=0\n    local -i at=0\n    local -i au=0\n    local -i\
    \ av=0\n    local -i aw=0\n    local -i ax=0\n    local -i ay=0\n    local -i\
    \ az=0\n    local -i ba=0\n    local -i bb=0\n    local -i bc=0\n    local -i\
    \ bd=0\n    local -i be=0\n    local -i bf=0\n    local -i bg=0\n    local -i\
    \ bh=0\n    local -i bi=0\n    local -i bj=0\n    local -i bk=0\n    local -i\
    \ bl=0\n    local -i bm=0\n    local -i bn=0\n   ", "  local -a rows\n  local\
    \ -a row\n  local -a coord\n  local -a coords\n  local -a result\n  local -a row_coords\n\
    \  local -a row_coord\n  local -a sorted_coords\n  local -a sorted_row_coords\n\
    \  local -a sorted_row_coord\n  local -a sorted_result\n  local -a sorted_row_result\n\
    \  local -a sorted_row_results\n  local -a sorted_results\n  local -a sorted_row_results_str\n\
    \  local -a sorted_results_str\n  local -a sorted_results_str_no_quotes\n  local\
    \ -a sorted_results_str_no_quotes_no_brackets\n  local -a sorted_results_str_no_quotes_no_brackets_no_commas\n\
    \  local -a sorted_results_str_no_quotes_no_brackets_no_commas_no_spaces\n  local\
    \ -a sorted_results_str_no_quotes_no_brackets_no_commas_no_spaces_no_newlines\n\
    \  local -a sorted_results_str_no_quotes_no_brackets_no_commas_no_spaces_no_newlines_no_doubles\n\
    \  local -a sorted_results_str_no_quotes_no_brackets_no_commas_no_spaces_no_newlines_no_doubles_no_singles\n\
    \  local -a sorted_results_str_no_quotes_no_brackets_no_commas_no_spaces_no_newlines_no_doubles_no_singles_no_backslashes\n\
    \  local -a sorted_results_str_no_quotes_no_brackets_no_commas_no_spaces_no_newlines_no_doubles_no_singles_no_backslashes_no_colons\n\
    \  local -a sorted_results_str_no_quotes_no_brackets_no_commas_no_spaces_no_newlines_no_doubles_no_singles_no_backslashes_no_",
  "    local -a lst=($(echo \"$1\" | tr ' ' '\\n'))\n    local -a res=()\n    local\
    \ -a row=()\n    local -a col=()\n    local -a row_col=()\n    local -i i=0\n\
    \    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local\
    \ -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n\
    \    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local\
    \ -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n\
    \    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n\
    \    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n\
    \    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n\
    \    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n\
    \    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n\
    \    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n\
    \    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n\
    \    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n\
    \    local -i hhh=0\n    local -i iii=0\n    local -i j", "    local lst=\"$1\"\
    \n    local x=\"$2\"\n    local row=0\n    local col=0\n    local res=()\n   \
    \ while read -r line; do\n        col=0\n        for y in $line; do\n        \
    \    if [[ \"$y\" == \"$x\" ]]; then\n                res+=(\"[\\\"$row\\\", \\\
    \"$col\\\"]\")\n            fi\n            col=$((col + 1))\n        done\n \
    \       row=$((row + 1))\n    done <<< \"$lst\"\n    echo \"${res[@]}\" | tr '\
    \ ' ',' | sed 's/^/[/;s/$/]/'"]
stop_tokens:
- "\n}"

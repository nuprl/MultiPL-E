name: HumanEval_71_triangle_area
language: sh
prompt: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
  \ the area of\n# the triangle rounded to 2 decimal points if the three sides form\
  \ a valid triangle. \n# Otherwise return -1\n# Three sides make a valid triangle\
  \ when the sum of any two sides is greater \n# than the third side.\n# Example:\n\
  # >>> $(triangle_area \"3\" \"4\" \"5\")\n# \"6.0\"\n# >>> $(triangle_area \"1\"\
  \ \"2\" \"10\")\n# \"-1\"\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
  \ integer\ntriangle_area() {\n"
tests: "}\n\ncandidate() {\n    triangle_area \"$@\"\n}\n\nset -e\nrun_test() {\n\
  \    [[ $(candidate \"3\" \"4\" \"5\") = \"6.0\" ]]\n    [[ $(candidate \"1\" \"\
  2\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"4\" \"8\" \"5\") = \"8.18\" ]]\n \
  \   [[ $(candidate \"2\" \"2\" \"2\") = \"1.73\" ]]\n    [[ $(candidate \"1\" \"\
  2\" \"3\") = \"-1\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"16.25\" ]]\n\
  \    [[ $(candidate \"2\" \"6\" \"3\") = \"-1\" ]]\n    [[ $(candidate \"1\" \"\
  1\" \"1\") = \"0.43\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"-1\" ]]\n}\n\
  \nrun_test"
completions: ["    # Write your code here\n    # To print results to the standard\
    \ output you can use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello\
    \ world\"", "    if [ $# -ne 3 ]; then\n        echo \"Usage: $0 <integer> <integer>\
    \ <integer>\"\n        return 1\n    fi\n    if [ $1 -le 0 ] || [ $2 -le 0 ] ||\
    \ [ $3 -le 0 ]; then\n        echo \"-1\"\n        return 1\n    fi\n    if [\
    \ $1 -ge $2 ] && [ $1 -ge $3 ]; then\n        if [ $1 -lt $(( $2 + $3 )) ]; then\n\
    \            echo \"$(echo \"scale=2; sqrt($1*$1 + $2*$2 - $3*$3)/4\" | bc)\"\n\
    \            return 0\n        fi\n    elif [ $2 -ge $1 ] && [ $2 -ge $3 ]; then\n\
    \        if [ $2 -lt $(( $1 + $3 )) ]; then\n            echo \"$(echo \"scale=2;\
    \ sqrt($1*$1 + $2*$2 - $3*$3)/4\" | bc)\"\n            return 0\n        fi\n\
    \    elif [ $3 -ge $1 ] && [ $3 -ge $2 ]; then\n        if [ $3 -lt $(( $1 + $2\
    \ )) ]; then\n            echo \"$(echo \"scale=2; sqrt($1*$1 + $2*$2 - $3*$3)/4\"\
    \ | bc)\"\n            return 0\n        fi\n    fi\n    echo \"-1\"\n    return\
    \ 1", "    # your code here\n    if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n\
    \        if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n            echo \"Equilateral\
    \ triangle\"\n        elif [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n \
    \           echo \"Isosceles triangle\"\n        else\n            echo \"Scalene\
    \ triangle\"\n        fi\n    else\n        echo \"Not a triangle\"\n    fi",
  "    # Write your code here\n    # To print results to the standard output you can\
    \ use echo\n    # Example: echo \"Hello world\"\n    if [ $1 -lt 0 -o $2 -lt 0\
    \ -o $3 -lt 0 ]; then\n        echo \"-1\"\n    elif [ $1 -eq 0 -o $2 -eq 0 -o\
    \ $3 -eq 0 ]; then\n        echo \"-1\"\n    elif [ $1 -eq $2 -a $2 -eq $3 ];\
    \ then\n        echo \"-1\"\n    elif [ $1 -eq $2 -o $2 -eq $3 -o $1 -eq $3 ];\
    \ then\n        echo \"-1\"\n    elif [ $1 -gt $2 -a $1 -gt $3 ]; then\n     \
    \   if [ $1 -lt $(($2 + $3)) ]; then\n            echo $(echo \"scale=2; sqrt($(($2\
    \ * $2 + $3 * $3)) * $(($1 + $2 + $3)) * ($(($1 + $2 + $3)) - 2 * $1))\" | bc)\n\
    \        else\n            echo \"-1\"\n        fi\n    elif [ $2 -gt $1 -a $2\
    \ -gt $3 ]; then\n        if [ $2 -lt $(($1 + $3)) ]; then\n            echo $(echo\
    \ \"scale=2; sqrt($(($1 * $1 + $3 * $3)) * $(($1 + $2 + $3)) * ($(($1 + $2 + $3))\
    \ - 2 * $2))\" | bc)\n        else\n            echo \"-1\"\n        fi\n    elif\
    \ [ $3 -gt $1 -a $3 -gt $2 ]; then\n        if [ $3 -lt $(($1 + $2)) ]; then\n\
    \            echo $(echo \"scale=2; sqrt($(($1 * $1 + $2 * $2)) * $(($1 + $2 +\
    \ $3)) * ($(($1 + $2 + $3)) - 2 * $3))\" | bc)\n        else\n            echo\
    \ \"-1\"\n        fi\n    fi", "    if [ $1 -eq $2 -a $2 -eq $3 ]; then\n    \
    \    echo $(echo \"scale=2; sqrt(3) / 4 * $1 * $1\" | bc)\n    elif [ $1 -eq $2\
    \ -o $2 -eq $3 -o $1 -eq $3 ]; then\n        echo $(echo \"scale=2; sqrt(($1 +\
    \ $2 + $3) * ($1 + $2 - $3) * ($1 - $2 + $3) * (-$1 + $2 + $3)) / 4\" | bc)\n\
    \    else\n        echo \"-1\"\n    fi", "    if [[ $1 -gt 0 && $2 -gt 0 && $3\
    \ -gt 0 ]]; then\n        if [[ $1 -gt $2 && $1 -gt $3 ]]; then\n            if\
    \ [[ $1 -lt $2 + $3 ]]; then\n                echo $(echo \"scale=2; sqrt($1*$1\
    \ - ($2*$2 + $3*$3)/4)\" | bc)\n            else\n                echo \"-1\"\n\
    \            fi\n        elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n           \
    \ if [[ $2 -lt $1 + $3 ]]; then\n                echo $(echo \"scale=2; sqrt($2*$2\
    \ - ($1*$1 + $3*$3)/4)\" | bc)\n            else\n                echo \"-1\"\n\
    \            fi\n        elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n           \
    \ if [[ $3 -lt $1 + $2 ]]; then\n                echo $(echo \"scale=2; sqrt($3*$3\
    \ - ($1*$1 + $2*$2)/4)\" | bc)\n            else\n                echo \"-1\"\n\
    \            fi\n        else\n            echo \"-1\"\n        fi\n    else\n\
    \        echo \"-1\"\n    fi", "    # TODO: implement this function\n    # Hint:\
    \ use bc to do floating point arithmetic\n    # Hint: use bc to do floating point\
    \ arithmetic\n    if [ $# -ne 3 ]; then\n        echo \"Usage: $0 <a> <b> <c>\"\
    \n        exit 1\n    fi\n    a=$1\n    b=$2\n    c=$3\n    if [ $a -le 0 ] ||\
    \ [ $b -le 0 ] || [ $c -le 0 ]; then\n        echo \"-1\"\n        exit 1\n  \
    \  fi\n    if [ $a -ge $b ] && [ $a -ge $c ]; then\n        if [ $a -lt $((b+c))\
    \ ]; then\n            s=$((a+b+c))\n            s=$((s/2))\n            area=$(echo\
    \ \"scale=2; sqrt($s*($s-$a)*($s-$b)*($s-$c))\" | bc)\n            echo \"$area\"\
    \n        else\n            echo \"-1\"\n        fi\n    elif [ $b -ge $a ] &&\
    \ [ $b -ge $c ]; then\n        if [ $b -lt $((a+c)) ]; then\n            s=$((a+b+c))\n\
    \            s=$((s/2))\n            area=$(echo \"scale=2; sqrt($s*($s-$a)*($s-$b)*($s-$c))\"\
    \ | bc)\n            echo \"$area\"\n        else\n            echo \"-1\"\n \
    \       fi\n    elif [ $c -ge $a ] && [ $c -ge $b ]; then\n        if [ $c -lt\
    \ $((a+b)) ]; then\n            s=$((a+b+c))\n            s=$((s/2))\n       \
    \     area=$(echo \"scale=2; sqrt($s*($s-$a)*($s-$b)*($s-$c))\" | bc)\n      \
    \      echo \"$area\"\n        else\n            echo \"-1\"\n        fi\n   \
    \ fi", "  # Write your code here\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n", "    local a=$1\n    local b=$2\n    local c=$3\n    local\
    \ s=$(echo \"scale=2;($a+$b+$c)/2\" | bc)\n    local area=$(echo \"scale=2;sqrt($s*($s-$a)*($s-$b)*($s-$c))\"\
    \ | bc)\n    if [ $(echo \"$area > 0\" | bc) -eq 1 ]; then\n        echo $area\n\
    \    else\n        echo \"-1\"\n    fi", "    # Write your code here\n    # To\
    \ print results to the standard output you can use echo\n    # Example: echo \"\
    Hello world\"\n    a=$1\n    b=$2\n    c=$3\n    if [ $a -lt 0 ] || [ $b -lt 0\
    \ ] || [ $c -lt 0 ]; then\n        echo \"-1\"\n    elif [ $a -eq 0 ] || [ $b\
    \ -eq 0 ] || [ $c -eq 0 ]; then\n        echo \"-1\"\n    elif [ $a -eq $b ] &&\
    \ [ $b -eq $c ]; then\n        echo \"-1\"\n    elif [ $a -eq $b ] || [ $b -eq\
    \ $c ] || [ $a -eq $c ]; then\n        echo \"-1\"\n    elif [ $a -gt $b ] &&\
    \ [ $a -gt $c ]; then\n        if [ $((a+b)) -gt $c ]; then\n            s=$((a+b+c))\n\
    \            s=$((s/2))\n            area=$((s*(s-a)*(s-b)*(s-c)))\n         \
    \   area=$(echo \"scale=2; sqrt($area)\" | bc)\n            echo \"$area\"\n \
    \       else\n            echo \"-1\"\n        fi\n    elif [ $b -gt $a ] && [\
    \ $b -gt $c ]; then\n        if [ $((b+c)) -gt $a ]; then\n            s=$((a+b+c))\n\
    \            s=$((s/2))\n            area=$((s*(s-a)*(s-b)*(s-c)))\n         \
    \   area=$(echo \"scale=2; sqrt($area)\" | bc)\n            echo \"$area\"\n \
    \       else\n            echo \"-1\"\n        fi\n    elif [ $c -gt $a ] && [\
    \ $c -gt $b ]; then\n        if [ $((c+a)) -gt $b ]; then\n            s=$((a+b+c))\n\
    \            s=$((s/2))\n            area=$((s*(s-a)*(s-b)*(s-c)))\n         \
    \   area=$(echo \"scale=2; sqrt($area)\" | bc)\n", "  if [ $1 -gt 0 ] && [ $2\
    \ -gt 0 ] && [ $3 -gt 0 ]; then\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n\
    \      echo $(echo \"scale=2; sqrt(3) / 4 * $1 * $1\" | bc -l)\n    elif [ $1\
    \ -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n      echo $(echo \"scale=2;\
    \ sqrt(3) / 4 * $1 * $1\" | bc -l)\n    else\n      echo $(echo \"scale=2; sqrt(3)\
    \ / 4 * $1 * $1\" | bc -l)\n    fi\n  else\n    echo \"-1\"\n  fi", "    # Write\
    \ your code here\n    if [ $1 -eq $2 -a $2 -eq $3 ]; then\n        echo \"Equilateral\
    \ Triangle\"\n    elif [ $1 -eq $2 -o $2 -eq $3 -o $1 -eq $3 ]; then\n       \
    \ echo \"Isosceles Triangle\"\n    else\n        echo \"Scalene Triangle\"\n \
    \   fi", "    # your code here\n    if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt\
    \ 0 ]; then\n        if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n            echo\
    \ $(echo \"scale=2; sqrt(3)/4*$1*$1\" | bc)\n        elif [ $1 -eq $2 ] || [ $2\
    \ -eq $3 ] || [ $1 -eq $3 ]; then\n            echo $(echo \"scale=2; sqrt(($1+$2+$3)*($1+$2-$3)*($1-$2+$3)*(-1*$1+$2+$3))/4\"\
    \ | bc)\n        else\n            echo $(echo \"scale=2; sqrt(($1+$2+$3)*($1+$2-$3)*($1-$2+$3)*(-1*$1+$2+$3))/4\"\
    \ | bc)\n        fi\n    else\n        echo \"-1\"\n    fi", "    # Write your\
    \ code here\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
    \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n", "    if [[ $1 -eq $2 ]] && [[ $2 -eq $3\
    \ ]]; then\n        echo $(echo \"scale=2; sqrt(3)/4 * $1 * $1\" | bc)\n    elif\
    \ [[ $1 -eq $2 ]] || [[ $2 -eq $3 ]] || [[ $1 -eq $3 ]]; then\n        echo $(echo\
    \ \"scale=2; sqrt(3)/4 * $1 * $1\" | bc)\n    elif [[ $1 -gt $2 ]] && [[ $1 -gt\
    \ $3 ]]; then\n        echo $(echo \"scale=2; sqrt(3)/4 * $1 * $1\" | bc)\n  \
    \  elif [[ $2 -gt $1 ]] && [[ $2 -gt $3 ]]; then\n        echo $(echo \"scale=2;\
    \ sqrt(3)/4 * $2 * $2\" | bc)\n    elif [[ $3 -gt $1 ]] && [[ $3 -gt $2 ]]; then\n\
    \        echo $(echo \"scale=2; sqrt(3)/4 * $3 * $3\" | bc)\n    else\n      \
    \  echo \"-1\"\n    fi", "    local a=$1\n    local b=$2\n    local c=$3\n   \
    \ if [ $a -gt 0 ] && [ $b -gt 0 ] && [ $c -gt 0 ]; then\n        local p=$(echo\
    \ \"scale=2;($a+$b+$c)/2\" | bc)\n        local area=$(echo \"scale=2;sqrt($p*($p-$a)*($p-$b)*($p-$c))\"\
    \ | bc)\n        if [ $(echo \"$area > 0\" | bc) -eq 1 ]; then\n            echo\
    \ \"$area\"\n        else\n            echo \"-1\"\n        fi\n    else\n   \
    \     echo \"-1\"\n    fi", "    if [[ $1 -le 0 || $2 -le 0 || $3 -le 0 ]]; then\n\
    \        echo \"-1\"\n    elif [[ $1 -ge $2+$3 || $2 -ge $1+$3 || $3 -ge $1+$2\
    \ ]]; then\n        echo \"-1\"\n    else\n        echo $(echo \"scale=2; sqrt($1*$1+$2*$2-$3*$3)*$2/2\"\
    \ | bc)\n    fi", "    # Write your code here\n    if [ $1 -gt 0 ] && [ $2 -gt\
    \ 0 ] && [ $3 -gt 0 ]; then\n        if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n\
    \            echo \"Equilateral triangle\"\n        elif [ $1 -eq $2 ] || [ $2\
    \ -eq $3 ] || [ $1 -eq $3 ]; then\n            echo \"Isosceles triangle\"\n \
    \       else\n            echo \"Scalene triangle\"\n        fi\n    else\n  \
    \      echo \"Not a triangle\"\n    fi", "  if [ $1 -lt $2 ] && [ $1 -lt $3 ];\
    \ then\n    if [ $(($2 + $3)) -gt $1 ]; then\n      echo $(echo \"scale=2; sqrt($2*$2\
    \ - ($1/2)*($1/2)) * ($1/2) * 2\" | bc)\n    else\n      echo \"-1\"\n    fi\n\
    \  elif [ $2 -lt $1 ] && [ $2 -lt $3 ]; then\n    if [ $(($1 + $3)) -gt $2 ];\
    \ then\n      echo $(echo \"scale=2; sqrt($1*$1 - ($2/2)*($2/2)) * ($2/2) * 2\"\
    \ | bc)\n    else\n      echo \"-1\"\n    fi\n  elif [ $3 -lt $1 ] && [ $3 -lt\
    \ $2 ]; then\n    if [ $(($1 + $2)) -gt $3 ]; then\n      echo $(echo \"scale=2;\
    \ sqrt($1*$1 - ($3/2)*($3/2)) * ($3/2) * 2\" | bc)\n    else\n      echo \"-1\"\
    \n    fi\n  else\n    echo \"-1\"\n  fi", "    if [ $# -ne 3 ]; then\n       \
    \ echo \"Usage: $0 <integer> <integer> <integer>\"\n        return 1\n    fi\n\
    \    if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n        echo \"-1\"\
    \n        return 1\n    fi\n    if [ $1 -ge $2 ] && [ $1 -ge $3 ]; then\n    \
    \    if [ $1 -ge $(($2 + $3)) ]; then\n            echo \"-1\"\n            return\
    \ 1\n        fi\n    elif [ $2 -ge $1 ] && [ $2 -ge $3 ]; then\n        if [ $2\
    \ -ge $(($1 + $3)) ]; then\n            echo \"-1\"\n            return 1\n  \
    \      fi\n    elif [ $3 -ge $1 ] && [ $3 -ge $2 ]; then\n        if [ $3 -ge\
    \ $(($1 + $2)) ]; then\n            echo \"-1\"\n            return 1\n      \
    \  fi\n    fi\n    s=$(echo \"scale=2; ($1 + $2 + $3) / 2\" | bc)\n    area=$(echo\
    \ \"scale=2; sqrt($s * ($s - $1) * ($s - $2) * ($s - $3))\" | bc)\n    echo $area"]
stop_tokens:
- "\n}"

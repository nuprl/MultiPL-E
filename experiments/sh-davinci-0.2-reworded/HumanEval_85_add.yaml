name: HumanEval_85_add
language: sh
prompt: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
  \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n#\n\
  # $1 is a space-separated list\nadd() {\n"
tests: "}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
  \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n  \
  \  [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"\
  12\" ]]\n}\n\nrun_test"
completions: ["    local sum=0\n    local i=0\n    for n in $1; do\n        if [ $((i\
    \ % 2)) -eq 1 ] && [ $((n % 2)) -eq 0 ]; then\n            sum=$((sum + n))\n\
    \        fi\n        i=$((i + 1))\n    done\n    echo \"$sum\"", "    local lst=($1)\n\
    \    local result=0\n    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if ((lst[i]\
    \ % 2 == 0)); then\n            result=$((result + lst[i]))\n        fi\n    done\n\
    \    echo \"$result\"", "    local lst=($1)\n    local i=0\n    local sum=0\n\
    \    for i in ${lst[@]}; do\n        if [[ $((i % 2)) -eq 0 ]] && [[ $((i % 2))\
    \ -eq 0 ]]; then\n            sum=$((sum + i))\n        fi\n    done\n    echo\
    \ \"$sum\"", "    local lst=($1)\n    local sum=0\n    for ((i=1; i<${#lst[@]};\
    \ i+=2)); do\n        ((lst[i] % 2 == 0)) && ((sum += lst[i]))\n    done\n   \
    \ echo \"$sum\"", "    # TODO: implement this function\n    echo \"2\"", "   \
    \ local lst=($1)\n    local sum=0\n    for ((i=1; i<${#lst[@]}; i+=2)); do\n \
    \       if [[ $((${lst[$i]} % 2)) -eq 0 ]]; then\n            sum=$(($sum + ${lst[$i]}))\n\
    \        fi\n    done\n    echo $sum", "    local lst=$1\n    local result=\"\"\
    \n    local i=0\n    for num in $lst; do\n        if [ $((i % 2)) -eq 1 ] && [\
    \ $((num % 2)) -eq 0 ]; then\n            result=\"$result $num\"\n        fi\n\
    \        i=$((i + 1))\n    done\n    echo \"$result\"", "  local lst=$1\n  local\
    \ sum=0\n  for i in $lst; do\n    if [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum\
    \ + i))\n    fi\n  done\n  echo $sum", "    local lst=$1\n    local sum=0\n  \
    \  local i=0\n    for num in $lst; do\n        if [ $((i % 2)) -eq 1 ] && [ $((num\
    \ % 2)) -eq 0 ]; then\n            sum=$((sum + num))\n        fi\n        i=$((i\
    \ + 1))\n    done\n    echo $sum", "    local lst=($1)\n    local sum=0\n    for\
    \ ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((${lst[$i]} % 2)) -eq 0 ]];\
    \ then\n            sum=$(($sum + ${lst[$i]}))\n        fi\n    done\n    echo\
    \ $sum", "    local lst=$1\n    local sum=0\n    for i in $lst; do\n        if\
    \ [ $(($i % 2)) -eq 0 ]; then\n            sum=$(($sum + $i))\n        fi\n  \
    \  done\n    echo $sum", "    local lst=($1)\n    local result=0\n    for ((i=1;\
    \ i<${#lst[@]}; i+=2)); do\n        if [[ $((lst[i] % 2)) -eq 0 ]]; then\n   \
    \         result=$((result + lst[i]))\n        fi\n    done\n    echo \"$result\"",
  "    local lst=($1)\n    local result=0\n    for ((i=1; i<${#lst[@]}; i+=2)); do\n\
    \        if [[ $((${lst[$i]} % 2)) -eq 0 ]]; then\n            result=$(($result\
    \ + ${lst[$i]}))\n        fi\n    done\n    echo $result", "    local lst=\"$1\"\
    \n    local sum=0\n    for i in $lst; do\n        if [[ $((i % 2)) -eq 0 ]] &&\
    \ [[ $((i % 4)) -ne 0 ]]; then\n            sum=$((sum + i))\n        fi\n   \
    \ done\n    echo \"$sum\"", "    local lst=($1)\n    local sum=0\n    for ((i=1;\
    \ i<${#lst[@]}; i+=2)); do\n        ((lst[i] % 2 == 0)) && ((sum += lst[i]))\n\
    \    done\n    echo \"$sum\"", "    local lst=($1)\n    local sum=0\n    for ((i=1;\
    \ i<${#lst[@]}; i+=2)); do\n        if [[ $((${lst[$i]} % 2)) -eq 0 ]]; then\n\
    \            sum=$(($sum + ${lst[$i]}))\n        fi\n    done\n    echo $sum",
  "    local lst=($1)\n    local sum=0\n    for ((i=1; i<${#lst[@]}; i+=2)); do\n\
    \        ((lst[i] % 2 == 0)) && ((sum += lst[i]))\n    done\n    echo \"$sum\"",
  "    local lst=$1\n    local sum=0\n    local i=0\n    for num in $lst; do\n   \
    \     if [ $((i % 2)) -eq 1 ] && [ $((num % 2)) -eq 0 ]; then\n            sum=$((sum\
    \ + num))\n        fi\n        i=$((i + 1))\n    done\n    echo $sum", "    local\
    \ lst=($1)\n    local sum=0\n    for ((i=1; i<${#lst[@]}; i+=2)); do\n       \
    \ if ((lst[i] % 2 == 0)); then\n            sum=$((sum + lst[i]))\n        fi\n\
    \    done\n    echo \"$sum\"", "    local lst=($1)\n    local sum=0\n    for ((i=1;\
    \ i<${#lst[@]}; i+=2)); do\n        ((lst[i] % 2 == 0)) && ((sum += lst[i]))\n\
    \    done\n    echo \"$sum\""]
stop_tokens:
- "\n}"

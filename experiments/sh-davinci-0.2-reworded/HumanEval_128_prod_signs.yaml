name: HumanEval_128_prod_signs
language: sh
prompt: "#!/bin/bash\n# You are given an array arr of integers and you need to return\n\
  # sum of magnitudes of integers multiplied by product of all signs\n# of each number\
  \ in the array, represented by 1, -1 or 0.\n# Note: return None for empty arr.\n\
  # Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>> $(prod_signs \"0 1\"\
  )\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\n#\n# $1 is a space-separated list\n\
  prod_signs() {\n"
tests: "}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n   \
  \ [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\"\
  \ ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\
  \") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate\
  \ \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[\
  \ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
completions: ["  local arr=($1)\n  local sum=0\n  local prod=1\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -gt 0 ]]; then\n      sum=$((sum + i))\n      prod=$((prod\
    \ * 1))\n    elif [[ $i -lt 0 ]]; then\n      sum=$((sum + i * -1))\n      prod=$((prod\
    \ * -1))\n    fi\n  done\n  if [[ $sum -eq 0 ]]; then\n    echo \"None\"\n  else\n\
    \    echo \"$((sum * prod))\"\n  fi", "    local arr=($1)\n    local prod=1\n\
    \    local sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n\
    \            prod=0\n            break\n        fi\n        if [[ $i -lt 0 ]];\
    \ then\n            prod=$((prod * -1))\n        fi\n        sum=$((sum + i))\n\
    \    done\n    echo $((prod * sum))", "    local arr=($1)\n    local prod=1\n\
    \    local sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n\
    \            prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n  \
    \          prod=$((prod * -1))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo\
    \ \"$((sum * prod))\"\n    fi", "    local arr=$1\n    local sum=0\n    local\
    \ prod=1\n    local sign\n    for i in $arr; do\n        if [[ $i -gt 0 ]]; then\n\
    \            sign=1\n        elif [[ $i -lt 0 ]]; then\n            sign=-1\n\
    \        else\n            sign=0\n        fi\n        sum=$((sum + i))\n    \
    \    prod=$((prod * sign))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo\
    \ \"None\"\n    else\n        echo \"$((sum * prod))\"\n    fi", "    local arr=($1)\n\
    \    local prod=1\n    local sum=0\n    local num\n    local sign\n    for num\
    \ in \"${arr[@]}\"; do\n        if [[ $num -eq 0 ]]; then\n            prod=0\n\
    \        elif [[ $num -lt 0 ]]; then\n            sign=-1\n        else\n    \
    \        sign=1\n        fi\n        prod=$((prod * sign))\n        sum=$((sum\
    \ + num))\n    done\n    if [[ $prod -eq 0 ]]; then\n        echo \"None\"\n \
    \   else\n        echo \"$((prod * sum))\"\n    fi", "    local arr\n    arr=($1)\n\
    \    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"; do\n        if\
    \ [[ $i -eq 0 ]]; then\n            prod=0\n            break\n        elif [[\
    \ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n\
    \        echo \"$((sum * prod))\"\n    fi", "    local arr=($1)\n    local prod=1\n\
    \    local sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n\
    \            prod=0\n            break\n        fi\n        if [[ $i -lt 0 ]];\
    \ then\n            prod=$((prod * -1))\n        fi\n        sum=$((sum + i))\n\
    \    done\n    if [[ $prod -eq 0 ]]; then\n        echo \"0\"\n    else\n    \
    \    echo \"$((prod * sum))\"\n    fi", "    local arr=($1)\n    local prod=1\n\
    \    local sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n\
    \            prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n  \
    \          prod=$((prod * -1))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo $((sum * prod))", "    local arr=(\"$@\")\n    local prod=1\n    local\
    \ sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n   \
    \         prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n     \
    \       prod=$((prod * -1))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo $((sum * prod))", "    local arr=($1)\n    local prod=1\n    local sum=0\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n           \
    \ prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        fi\n        sum=$((sum + i))\n    done\n    echo $((sum * prod))",
  "  local arr=($1)\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n\
    \    if [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    elif [[ $i -gt 0\
    \ ]]; then\n      prod=$((prod * 1))\n    else\n      prod=0\n    fi\n    sum=$((sum\
    \ + i))\n  done\n  if [[ $sum -eq 0 ]]; then\n    echo \"None\"\n  else\n    echo\
    \ \"$((sum * prod))\"\n  fi", "    local arr=($1)\n    local prod=1\n    local\
    \ sum=0\n    if [ ${#arr[@]} -eq 0 ]; then\n        echo \"None\"\n        return\n\
    \    fi\n    for i in ${arr[@]}; do\n        if [ $i -lt 0 ]; then\n         \
    \   prod=$((prod * -1))\n        elif [ $i -eq 0 ]; then\n            prod=0\n\
    \            break\n        fi\n        sum=$((sum + i))\n    done\n    echo $((sum\
    \ * prod))", "  local arr=($1)\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo $((sum * prod))", "  local arr=($1)\n  local prod=1\n  local sum=0\n \
    \ for i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n    \
    \  break\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n \
    \   sum=$((sum + i))\n  done\n  echo \"$((sum * prod))\"", "    local arr=($1)\n\
    \    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"; do\n        if\
    \ [ $i -gt 0 ]; then\n            prod=$((prod * 1))\n        elif [ $i -lt 0\
    \ ]; then\n            prod=$((prod * -1))\n        else\n            prod=0\n\
    \        fi\n        sum=$((sum + i))\n    done\n    if [ $sum -eq 0 ]; then\n\
    \        echo \"None\"\n    else\n        echo \"$((sum * prod))\"\n    fi", " \
    \   local arr=($1)\n    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n     \
    \   elif [[ $i -eq 0 ]]; then\n            prod=0\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n\
    \        echo \"$((sum * prod))\"\n    fi", "  local arr=($1)\n  local prod=1\n\
    \  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n  \
    \    prod=0\n      break\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod *\
    \ -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo \"$((sum * prod))\"", " \
    \   local arr=($1)\n    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n\
    \        fi\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    if [[ $prod -eq 0 ]]; then\n\
    \        echo \"0\"\n    else\n        echo \"$((sum * prod))\"\n    fi", "  \
    \  local arr=($1)\n    local sum=0\n    local prod=1\n    if [ ${#arr[@]} -eq\
    \ 0 ]; then\n        echo \"None\"\n        return\n    fi\n    for i in ${arr[@]};\
    \ do\n        if [ $i -gt 0 ]; then\n            sum=$((sum + i))\n        elif\
    \ [ $i -lt 0 ]; then\n            sum=$((sum - i))\n            prod=$((prod *\
    \ -1))\n        fi\n    done\n    echo \"$((sum * prod))\"", "  local arr=($1)\n\
    \  local prod=1\n  local sum=0\n  local sign=0\n  for i in \"${arr[@]}\"; do\n\
    \    if [ $i -gt 0 ]; then\n      sign=1\n    elif [ $i -lt 0 ]; then\n      sign=-1\n\
    \    else\n      sign=0\n    fi\n    prod=$((prod * sign))\n    sum=$((sum + i))\n\
    \  done\n  if [ $sum -eq 0 ]; then\n    echo \"None\"\n  else\n    echo $((sum\
    \ * prod))\n  fi", "    local arr\n    arr=($1)\n    local prod=1\n    local sum=0\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n           \
    \ prod=$((prod * -1))\n        elif [[ $i -gt 0 ]]; then\n            prod=$((prod\
    \ * 1))\n        else\n            prod=0\n        fi\n        sum=$((sum + i))\n\
    \    done\n    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n  \
    \      echo $((sum * prod))\n    fi", "    local arr=($1)\n    local prod=1\n\
    \    local sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n\
    \            prod=$((prod * -1))\n        elif [[ $i -eq 0 ]]; then\n        \
    \    prod=0\n        fi\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq\
    \ 0 ]]; then\n        echo \"None\"\n    else\n        echo \"$((sum * prod))\"\
    \n    fi", "    local arr=($1)\n    local prod=1\n    local sum=0\n    local i=0\n\
    \    local len=${#arr[@]}\n    if [[ $len -eq 0 ]]; then\n        echo \"None\"\
    \n        return\n    fi\n    while [[ $i -lt $len ]]; do\n        local num=${arr[$i]}\n\
    \        if [[ $num -lt 0 ]]; then\n            prod=$((prod * -1))\n        elif\
    \ [[ $num -eq 0 ]]; then\n            prod=0\n        fi\n        sum=$((sum +\
    \ num))\n        i=$((i + 1))\n    done\n    echo $((sum * prod))", "  local arr=($1)\n\
    \  local prod=1\n  local sum=0\n  local sign=0\n  for i in \"${arr[@]}\"; do\n\
    \    if [[ $i -eq 0 ]]; then\n      sign=0\n    elif [[ $i -lt 0 ]]; then\n  \
    \    sign=-1\n    else\n      sign=1\n    fi\n    prod=$((prod * sign))\n    sum=$((sum\
    \ + i))\n  done\n  if [[ $sum -eq 0 ]]; then\n    echo \"None\"\n  else\n    echo\
    \ \"$((sum * prod))\"\n  fi", "    local arr=($1)\n    local prod=1\n    local\
    \ sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n   \
    \         prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n     \
    \       prod=$((prod * -1))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo $((sum * prod))", "    local arr=($1)\n    local prod=1\n    local sum=0\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n           \
    \ prod=$((prod * -1))\n        elif [[ $i -eq 0 ]]; then\n            prod=0\n\
    \        fi\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n\
    \        echo \"None\"\n    else\n        echo $((sum * prod))\n    fi", "  local\
    \ prod=1\n  local sum=0\n  for i in $1; do\n    if [ $i -lt 0 ]; then\n      prod=$((prod\
    \ * -1))\n    elif [ $i -gt 0 ]; then\n      prod=$((prod * 1))\n    else\n  \
    \    prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum *\
    \ prod))", "    local arr=($1)\n    local prod=1\n    local sum=0\n    for i in\
    \ \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n   \
    \         break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod *\
    \ -1))\n        fi\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]];\
    \ then\n        echo \"None\"\n    else\n        echo $((sum * prod))\n    fi",
  "    local prod=1\n    local sum=0\n    for i in $1; do\n        if [[ $i -gt 0\
    \ ]]; then\n            prod=$((prod * 1))\n        elif [[ $i -lt 0 ]]; then\n\
    \            prod=$((prod * -1))\n        else\n            prod=$((prod * 0))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n\
    \        echo \"None\"\n    else\n        echo $((sum * prod))\n    fi", "  local\
    \ arr=($1)\n  local sum=0\n  local prod=1\n  local sign=0\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -eq 0 ]]; then\n      sign=0\n    elif [[ $i -lt 0 ]]; then\n\
    \      sign=-1\n    else\n      sign=1\n    fi\n    sum=$((sum + sign * i))\n\
    \    prod=$((prod * sign))\n  done\n  if [[ $sum -eq 0 ]]; then\n    echo \"None\"\
    \n  else\n    echo \"$((sum * prod))\"\n  fi", "    local arr=($1)\n    local\
    \ prod=1\n    local sum=0\n    local sign=0\n    local i=0\n    local len=${#arr[@]}\n\
    \    if [ $len -eq 0 ]; then\n        echo \"None\"\n        return\n    fi\n\
    \    for ((i=0; i<len; i++)); do\n        sign=${arr[$i]}\n        if [ $sign\
    \ -gt 0 ]; then\n            sign=1\n        elif [ $sign -lt 0 ]; then\n    \
    \        sign=-1\n        fi\n        prod=$((prod * sign))\n        sum=$((sum\
    \ + sign * arr[$i]))\n    done\n    echo $((sum * prod))", "  local arr=($1)\n\
    \  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq\
    \ 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt 0 ]]; then\n     \
    \ prod=$((prod*-1))\n    fi\n    sum=$((sum+i))\n  done\n  echo $((sum*prod))",
  "  local arr=($1)\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n\
    \    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt 0\
    \ ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo $((sum * prod))", "  local arr=($1)\n  local prod=1\n  local sum=0\n \
    \ for i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n    \
    \  break\n    fi\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n   \
    \ fi\n    sum=$((sum + i))\n  done\n  echo $((prod * sum))", "    local arr=($1)\n\
    \    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"; do\n        if\
    \ [[ $i -eq 0 ]]; then\n            prod=0\n            break\n        elif [[\
    \ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    echo $((sum * prod))", "    local arr=($1)\n    local prod=1\n\
    \    local sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n\
    \            prod=$((prod * -1))\n        elif [[ $i -eq 0 ]]; then\n        \
    \    prod=0\n        fi\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq\
    \ 0 ]]; then\n        echo \"None\"\n    else\n        echo \"$((sum * prod))\"\
    \n    fi", "  local arr=($1)\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt\
    \ 0 ]]; then\n      ((prod *= -1))\n    fi\n    ((sum += i))\n  done\n  if [[\
    \ $prod -eq 0 ]]; then\n    echo \"0\"\n  else\n    echo \"$((prod * sum))\"\n\
    \  fi", "  local arr=($1)\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  if [[ $prod -eq 0 ]]; then\n    echo \"0\"\n  else\n    echo \"$((sum * prod))\"\
    \n  fi", "  local arr=($1)\n  local prod=1\n  local sum=0\n  local len=${#arr[@]}\n\
    \  if [ $len -eq 0 ]; then\n    echo \"None\"\n    return\n  fi\n  for i in ${arr[@]};\
    \ do\n    if [ $i -lt 0 ]; then\n      prod=$((prod * -1))\n    elif [ $i -eq\
    \ 0 ]; then\n      prod=0\n      break\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo $((sum * prod))", "    local arr=($1)\n    local prod=1\n    local sum=0\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n           \
    \ prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n            ((prod\
    \ *= -1))\n        fi\n        ((sum += i))\n    done\n    echo \"$((sum * prod))\"",
  "  local arr=($1)\n  local sum=0\n  local prod=1\n  local sign=0\n  for i in \"\
    ${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n      sign=0\n    elif [[ $i -lt\
    \ 0 ]]; then\n      sign=-1\n    else\n      sign=1\n    fi\n    sum=$((sum +\
    \ i))\n    prod=$((prod * sign))\n  done\n  if [[ $sum -eq 0 ]]; then\n    echo\
    \ \"None\"\n  else\n    echo $((sum * prod))\n  fi", "    if [ -z \"$1\" ]; then\n\
    \        echo \"None\"\n    else\n        echo \"$1\" | awk '{\n            sign\
    \ = 1\n            sum = 0\n            for (i = 1; i <= NF; i++) {\n        \
    \        if ($i > 0) {\n                    sign *= 1\n                } else\
    \ if ($i < 0) {\n                    sign *= -1\n                } else {\n  \
    \                  sign = 0\n                    break\n                }\n  \
    \              sum += abs($i)\n            }\n            print sum * sign\n \
    \       }'\n    fi", "  local arr=($1)\n  local prod=1\n  local sum=0\n  local\
    \ len=${#arr[@]}\n  if [ $len -eq 0 ]; then\n    echo \"None\"\n    return\n \
    \ fi\n  for i in ${arr[@]}; do\n    if [ $i -lt 0 ]; then\n      prod=$((prod\
    \ * -1))\n    elif [ $i -eq 0 ]; then\n      prod=0\n      break\n    fi\n   \
    \ sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local arr=($1)\n  local\
    \ prod=1\n  local sum=0\n  local len=${#arr[@]}\n  if [ $len -eq 0 ]; then\n \
    \   echo \"None\"\n    return\n  fi\n  for i in \"${arr[@]}\"; do\n    if [ $i\
    \ -lt 0 ]; then\n      prod=$((prod * -1))\n    elif [ $i -eq 0 ]; then\n    \
    \  prod=0\n      break\n    fi\n    sum=$((sum + i))\n  done\n  echo $((prod *\
    \ sum))", "  local arr=($1)\n  local sum=0\n  local prod=1\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    fi\n    sum=$((sum\
    \ + i))\n    prod=$((prod * i / abs(i)))\n  done\n  if [[ $prod -eq 0 ]]; then\n\
    \    echo \"None\"\n  else\n    echo \"$((sum * prod))\"\n  fi", "  local arr=($1)\n\
    \  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq\
    \ 0 ]]; then\n      prod=0\n      break\n    fi\n    if [[ $i -lt 0 ]]; then\n\
    \      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((prod\
    \ * sum))", "  local arr=($1)\n  local prod=1\n  local sum=0\n  local sign=0\n\
    \  for i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n      sign=0\n   \
    \ elif [[ $i -lt 0 ]]; then\n      sign=-1\n    else\n      sign=1\n    fi\n \
    \   prod=$((prod * sign))\n    sum=$((sum + i))\n  done\n  if [[ $sum -eq 0 ]];\
    \ then\n    echo \"None\"\n  else\n    echo $((sum * prod))\n  fi", "  local sum=0\n\
    \  local prod=1\n  for i in $1; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n\
    \      break\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n\
    \    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local arr=(\"$@\")\n\
    \  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq\
    \ 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt 0 ]]; then\n     \
    \ prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((prod *\
    \ sum))", "    local arr=($1)\n    local prod=1\n    local sum=0\n    for i in\
    \ \"${arr[@]}\"; do\n        if [ $i -lt 0 ]; then\n            prod=$((prod *\
    \ -1))\n        elif [ $i -gt 0 ]; then\n            prod=$((prod * 1))\n    \
    \    else\n            prod=0\n        fi\n        sum=$((sum + i))\n    done\n\
    \    if [ $sum -eq 0 ]; then\n        echo \"None\"\n    else\n        echo \"\
    $((sum * prod))\"\n    fi", "    local arr=($1)\n    local prod=1\n    local sum=0\n\
    \    if [[ ${#arr[@]} -eq 0 ]]; then\n        echo \"None\"\n        return\n\
    \    fi\n    for i in ${arr[@]}; do\n        if [[ $i -gt 0 ]]; then\n       \
    \     prod=$((prod * 1))\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        else\n            prod=0\n        fi\n        sum=$((sum + i))\n\
    \    done\n    echo $((sum * prod))", "  local arr=($1)\n  local sum=0\n  local\
    \ prod=1\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n\
    \      break\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n\
    \    sum=$((sum + i))\n  done\n  if [[ $sum -eq 0 ]]; then\n    echo \"None\"\n\
    \  else\n    echo \"$((sum * prod))\"\n  fi", "    local arr=($1)\n    local prod=1\n\
    \    local sum=0\n    local len=${#arr[@]}\n    if [[ $len -eq 0 ]]; then\n  \
    \      echo \"None\"\n        return\n    fi\n    for i in ${arr[@]}; do\n   \
    \     if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        elif [[\
    \ $i -eq 0 ]]; then\n            prod=0\n            break\n        fi\n     \
    \   sum=$((sum + i))\n    done\n    echo $((sum * prod))", "    local arr=($1)\n\
    \    local prod=1\n    local sum=0\n    local sign=0\n    for i in \"${arr[@]}\"\
    ; do\n        if [ $i -gt 0 ]; then\n            sign=1\n        elif [ $i -lt\
    \ 0 ]; then\n            sign=-1\n        else\n            sign=0\n        fi\n\
    \        prod=$((prod * sign))\n        sum=$((sum + i))\n    done\n    if [ ${#arr[@]}\
    \ -eq 0 ]; then\n        echo \"None\"\n    else\n        echo \"$((sum * prod))\"\
    \n    fi", "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n    \
    \    echo \"$1\" | awk '{\n            prod = 1;\n            for (i = 1; i <=\
    \ NF; i++) {\n                if ($i > 0) {\n                    prod *= 1;\n\
    \                } else if ($i < 0) {\n                    prod *= -1;\n     \
    \           } else {\n                    prod *= 0;\n                }\n    \
    \        }\n            sum = 0;\n            for (i = 1; i <= NF; i++) {\n  \
    \              sum += abs($i);\n            }\n            print sum * prod;\n\
    \        }'\n    fi", "  local arr=($1)\n  local prod=1\n  local sum=0\n  for\
    \ i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n\
    \    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum\
    \ + i))\n  done\n  echo $((sum * prod))", "    if [ -z \"$1\" ]; then\n      \
    \  echo \"None\"\n    else\n        echo \"$1\" | tr ' ' '\\n' | awk '{\n    \
    \        if ($1 > 0) {\n                sign = 1\n            } else if ($1 <\
    \ 0) {\n                sign = -1\n            } else {\n                sign\
    \ = 0\n            }\n            prod *= sign\n            sum += sign * $1\n\
    \        } END {\n            if (prod == 0) {\n                print 0\n    \
    \        } else {\n                print sum\n            }\n        }'\n    fi",
  "    local arr=($1)\n    local prod=1\n    local sum=0\n    if [ ${#arr[@]} -eq\
    \ 0 ]; then\n        echo \"None\"\n        return\n    fi\n    for i in ${arr[@]};\
    \ do\n        if [ $i -lt 0 ]; then\n            prod=$((prod * -1))\n       \
    \ elif [ $i -eq 0 ]; then\n            prod=0\n            break\n        fi\n\
    \        sum=$((sum + i))\n    done\n    echo $((sum * prod))", "    local arr=($1)\n\
    \    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"; do\n        if\
    \ [ \"$i\" -eq 0 ]; then\n            prod=0\n            break\n        elif\
    \ [ \"$i\" -lt 0 ]; then\n            prod=$((prod * -1))\n        fi\n      \
    \  sum=$((sum + i))\n    done\n    if [ \"$sum\" -eq 0 ]; then\n        echo \"\
    None\"\n    else\n        echo \"$((sum * prod))\"\n    fi", "  local arr=($1)\n\
    \  local sum=0\n  local prod=1\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq\
    \ 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt 0 ]]; then\n     \
    \ prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))",
  "    local arr=($1)\n    local prod=1\n    local sum=0\n    local num\n    for num\
    \ in \"${arr[@]}\"; do\n        if (( num > 0 )); then\n            prod=$(( prod\
    \ * 1 ))\n        elif (( num < 0 )); then\n            prod=$(( prod * -1 ))\n\
    \        else\n            prod=0\n        fi\n        sum=$(( sum + num ))\n\
    \    done\n    if (( sum == 0 )); then\n        echo \"None\"\n    else\n    \
    \    echo $(( sum * prod ))\n    fi", "    local arr=($1)\n    local prod=1\n\
    \    local sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n\
    \            prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n  \
    \          prod=$((prod * -1))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo\
    \ \"$((sum * prod))\"\n    fi", "    local arr=($1)\n    local prod=1\n    local\
    \ sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n   \
    \         prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n     \
    \       prod=$((prod * -1))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo $((sum * prod))", "    local arr=($1)\n    local prod=1\n    local sum=0\n\
    \    if [ ${#arr[@]} -eq 0 ]; then\n        echo \"None\"\n        return\n  \
    \  fi\n    for i in ${arr[@]}; do\n        if [ $i -lt 0 ]; then\n           \
    \ prod=$((prod * -1))\n        elif [ $i -eq 0 ]; then\n            prod=0\n \
    \           break\n        fi\n        sum=$((sum + i))\n    done\n    echo $((sum\
    \ * prod))", "    local arr=($1)\n    local sum=0\n    local prod=1\n    local\
    \ sign=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -gt 0 ]]; then\n  \
    \          sign=1\n        elif [[ $i -lt 0 ]]; then\n            sign=-1\n  \
    \      else\n            sign=0\n        fi\n        sum=$((sum + i))\n      \
    \  prod=$((prod * sign))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo\
    \ \"None\"\n    else\n        echo \"$((sum * prod))\"\n    fi", "  local arr=($1)\n\
    \  local prod=1\n  local sum=0\n  local sign=0\n  for i in \"${arr[@]}\"; do\n\
    \    if [[ $i -eq 0 ]]; then\n      sign=0\n    elif [[ $i -lt 0 ]]; then\n  \
    \    sign=-1\n    else\n      sign=1\n    fi\n    prod=$((prod * sign))\n    sum=$((sum\
    \ + i))\n  done\n  if [[ $sum -eq 0 ]]; then\n    echo \"None\"\n  else\n    echo\
    \ $((sum * prod))\n  fi", "  local arr=($1)\n  local sum=0\n  local prod=1\n \
    \ for i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n    \
    \  break\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n \
    \   sum=$((sum + i))\n  done\n  if [[ $sum -eq 0 ]]; then\n    echo \"None\"\n\
    \  else\n    echo \"$((sum * prod))\"\n  fi", "  local arr=($1)\n  local prod=1\n\
    \  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n  \
    \    prod=0\n      break\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod *\
    \ -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo \"$((sum * prod))\"", " \
    \   local arr=($1)\n    local prod=1\n    local sum=0\n    if [ ${#arr[@]} -eq\
    \ 0 ]; then\n        echo \"None\"\n        return\n    fi\n    for i in ${arr[@]};\
    \ do\n        if [ $i -lt 0 ]; then\n            prod=$((prod * -1))\n       \
    \ elif [ $i -eq 0 ]; then\n            prod=0\n            break\n        fi\n\
    \        sum=$((sum + i))\n    done\n    echo \"$((sum * prod))\"", "  local arr=($1)\n\
    \  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    elif [[ $i -gt 0 ]]; then\n     \
    \ prod=$((prod * 1))\n    else\n      prod=0\n    fi\n    sum=$((sum + i))\n \
    \ done\n  echo $((sum * prod))", "    if [ -z \"$1\" ]; then\n        echo \"\
    None\"\n    else\n        echo \"$1\" | tr ' ' '\\n' | awk '{if($1>0) {p=p*1}\
    \ else if($1<0) {p=p*-1} else {p=0} s=s+abs($1)} END {print s*p}'\n    fi", " \
    \ local arr=($1)\n  local len=${#arr[@]}\n  local prod=1\n  local sum=0\n  if\
    \ [ $len -eq 0 ]; then\n    echo \"None\"\n    return\n  fi\n  for i in ${arr[@]};\
    \ do\n    if [ $i -lt 0 ]; then\n      prod=$((prod * -1))\n    elif [ $i -eq\
    \ 0 ]; then\n      prod=0\n      break\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo $((sum * prod))", "    local arr=($1)\n    local sum=0\n    local prod=1\n\
    \    local i\n    if [ ${#arr[@]} -eq 0 ]; then\n        echo \"None\"\n     \
    \   return\n    fi\n    for i in ${arr[@]}; do\n        if [ $i -lt 0 ]; then\n\
    \            prod=$((prod * -1))\n        elif [ $i -gt 0 ]; then\n          \
    \  prod=$((prod * 1))\n        else\n            prod=0\n            break\n \
    \       fi\n        sum=$((sum + i))\n    done\n    echo $((sum * prod))", " \
    \   local arr=($1)\n    local prod=1\n    local sum=0\n    if [[ ${#arr[@]} -eq\
    \ 0 ]]; then\n        echo \"None\"\n        return\n    fi\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n\
    \        fi\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    echo $((sum * prod))", " \
    \   local arr=($1)\n    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n     \
    \   elif [[ $i -eq 0 ]]; then\n            prod=0\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n\
    \        echo $((sum * prod))\n    fi", "    local arr=($1)\n    local prod=1\n\
    \    local sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n\
    \            prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n  \
    \          prod=$((prod * -1))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo\
    \ \"$((sum * prod))\"\n    fi", "  local arr=($1)\n  local prod=1\n  local sum=0\n\
    \  for i in \"${arr[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod\
    \ * -1))\n    elif [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    else\n\
    \      prod=0\n    fi\n    sum=$((sum + i))\n  done\n  if [[ $sum -eq 0 ]]; then\n\
    \    echo \"None\"\n  else\n    echo $((sum * prod))\n  fi", "  local arr=($1)\n\
    \  local sum=0\n  local prod=1\n  local len=${#arr[@]}\n  if [[ $len -eq 0 ]];\
    \ then\n    echo \"None\"\n    return\n  fi\n  for i in \"${arr[@]}\"; do\n  \
    \  if [[ $i -gt 0 ]]; then\n      sum=$((sum + i))\n    elif [[ $i -lt 0 ]]; then\n\
    \      sum=$((sum - i))\n      prod=$((prod * -1))\n    fi\n  done\n  echo $((sum\
    \ * prod))", "  local arr=($1)\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo $((sum * prod))", "    local arr=($1)\n    local prod=1\n    local sum=0\n\
    \    local i\n    for i in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n\
    \            prod=$((prod * -1))\n        elif [[ $i -gt 0 ]]; then\n        \
    \    prod=$((prod * 1))\n        else\n            prod=0\n        fi\n      \
    \  sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo \"\
    None\"\n    else\n        echo \"$((sum * prod))\"\n    fi", "  local arr=($1)\n\
    \  local prod=1\n  local sum=0\n  local i=0\n  local len=${#arr[@]}\n  if [ $len\
    \ -eq 0 ]; then\n    echo \"None\"\n    return\n  fi\n  while [ $i -lt $len ];\
    \ do\n    if [ ${arr[$i]} -lt 0 ]; then\n      prod=$((prod * -1))\n    elif [\
    \ ${arr[$i]} -eq 0 ]; then\n      prod=0\n      break\n    fi\n    sum=$((sum\
    \ + ${arr[$i]}))\n    i=$((i + 1))\n  done\n  echo \"$((prod * sum))\"", "  local\
    \ arr=($1)\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n    if\
    \ [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt 0 ]]; then\n\
    \      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((prod\
    \ * sum))", "    local arr=\"$1\"\n    local sum=0\n    local prod=1\n    local\
    \ sign=0\n    for i in $arr; do\n        if [[ $i -eq 0 ]]; then\n           \
    \ sign=0\n        elif [[ $i -lt 0 ]]; then\n            sign=-1\n        else\n\
    \            sign=1\n        fi\n        sum=$((sum + i * sign))\n        prod=$((prod\
    \ * sign))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n \
    \   else\n        echo \"$((sum * prod))\"\n    fi", "    local arr=($1)\n   \
    \ local sum=0\n    local prod=1\n    local n\n    for n in \"${arr[@]}\"; do\n\
    \        if [[ $n -gt 0 ]]; then\n            sum=$((sum + n))\n            prod=$((prod\
    \ * 1))\n        elif [[ $n -lt 0 ]]; then\n            sum=$((sum + -n))\n  \
    \          prod=$((prod * -1))\n        else\n            prod=$((prod * 0))\n\
    \        fi\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n\
    \    else\n        echo $((sum * prod))\n    fi", "  local arr=($1)\n  local prod=1\n\
    \  local sum=0\n  local i=0\n  local len=${#arr[@]}\n  if [[ $len -eq 0 ]]; then\n\
    \    echo \"None\"\n    return\n  fi\n  while [[ $i -lt $len ]]; do\n    local\
    \ num=${arr[$i]}\n    if [[ $num -gt 0 ]]; then\n      prod=$((prod * 1))\n  \
    \  elif [[ $num -lt 0 ]]; then\n      prod=$((prod * -1))\n    else\n      prod=$((prod\
    \ * 0))\n    fi\n    sum=$((sum + num))\n    i=$((i + 1))\n  done\n  echo $((sum\
    \ * prod))", "  local arr=($1)\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    elif [[ $i -gt\
    \ 0 ]]; then\n      prod=$((prod * 1))\n    else\n      prod=0\n    fi\n    sum=$((sum\
    \ + i))\n  done\n  if [[ $sum -eq 0 ]]; then\n    echo \"None\"\n  else\n    echo\
    \ \"$((sum * prod))\"\n  fi", "  local arr=($1)\n  local prod=1\n  local sum=0\n\
    \  local sign=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -gt 0 ]]; then\n \
    \     sign=1\n    elif [[ $i -lt 0 ]]; then\n      sign=-1\n    else\n      sign=0\n\
    \    fi\n    prod=$((prod * sign))\n    sum=$((sum + i))\n  done\n  if [[ $sum\
    \ -eq 0 ]]; then\n    echo \"None\"\n  else\n    echo $((sum * prod))\n  fi",
  "    local arr=($1)\n    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"\
    ; do\n        if [ $i -gt 0 ]; then\n            prod=$((prod * 1))\n        elif\
    \ [ $i -lt 0 ]; then\n            prod=$((prod * -1))\n        else\n        \
    \    prod=0\n        fi\n        sum=$((sum + i))\n    done\n    if [ ${#arr[@]}\
    \ -eq 0 ]; then\n        echo \"None\"\n    else\n        echo $((sum * prod))\n\
    \    fi", "  local arr=($1)\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    elif [[ $i -gt\
    \ 0 ]]; then\n      prod=$((prod * 1))\n    else\n      prod=0\n    fi\n    sum=$((sum\
    \ + i))\n  done\n  if [[ $sum -eq 0 ]]; then\n    echo \"None\"\n  else\n    echo\
    \ \"$((sum * prod))\"\n  fi", "  local arr=($1)\n  local prod=1\n  local sum=0\n\
    \  for i in \"${arr[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod\
    \ * -1))\n    elif [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    else\n\
    \      prod=0\n    fi\n    sum=$((sum + i))\n  done\n  echo \"$((sum * prod))\"",
  "    local arr=($1)\n    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n\
    \        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n\
    \        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo\
    \ \"None\"\n    else\n        echo $((sum * prod))\n    fi", "    local arr=(\"\
    $@\")\n    local prod=1\n    local sum=0\n    local sign=0\n    local i=0\n  \
    \  local len=${#arr[@]}\n    if [ $len -eq 0 ]; then\n        echo \"None\"\n\
    \        return\n    fi\n    for ((i=0; i<len; i++)); do\n        if [ ${arr[$i]}\
    \ -lt 0 ]; then\n            sign=-1\n        elif [ ${arr[$i]} -gt 0 ]; then\n\
    \            sign=1\n        else\n            sign=0\n        fi\n        prod=$((prod\
    \ * sign))\n        sum=$((sum + ${arr[$i]}))\n    done\n    echo $((prod * sum))",
  "    local arr=($1)\n    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"\
    ; do\n        if [ $i -eq 0 ]; then\n            prod=0\n            break\n \
    \       elif [ $i -lt 0 ]; then\n            prod=$((prod * -1))\n        fi\n\
    \        sum=$((sum + i))\n    done\n    if [ $prod -eq 0 ]; then\n        echo\
    \ \"0\"\n    else\n        echo \"$((sum * prod))\"\n    fi", "  local prod=1\n\
    \  local sum=0\n  for i in $1; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n\
    \    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum\
    \ + i))\n  done\n  if [[ $sum -eq 0 ]]; then\n    echo \"None\"\n  else\n    echo\
    \ $((sum * prod))\n  fi", "    local arr=($1)\n    local prod=1\n    local sum=0\n\
    \    if [[ ${#arr[@]} -eq 0 ]]; then\n        echo \"None\"\n        return\n\
    \    fi\n    for i in ${arr[@]}; do\n        if [[ $i -lt 0 ]]; then\n       \
    \     prod=$((prod * -1))\n        elif [[ $i -eq 0 ]]; then\n            prod=0\n\
    \            break\n        fi\n        sum=$((sum + i))\n    done\n    echo $((sum\
    \ * prod))", "  local arr=($1)\n  local prod=1\n  local sum=0\n  if [ ${#arr[@]}\
    \ -eq 0 ]; then\n    echo \"None\"\n    return\n  fi\n  for i in ${arr[@]}; do\n\
    \    if [ $i -eq 0 ]; then\n      prod=0\n      break\n    elif [ $i -lt 0 ];\
    \ then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo\
    \ $((sum * prod))", "  local arr=($1)\n  local prod=1\n  local sum=0\n  for i\
    \ in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n\
    \    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum\
    \ + i))\n  done\n  echo $((sum * prod))", "    local arr=($1)\n    local prod=1\n\
    \    local sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n\
    \            prod=0\n            break\n        fi\n        if [[ $i -lt 0 ]];\
    \ then\n            prod=$((prod * -1))\n        fi\n        sum=$((sum + i))\n\
    \    done\n    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n  \
    \      echo \"$((sum * prod))\"\n    fi", "    local arr=($1)\n    local prod=1\n\
    \    local sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n\
    \            prod=$((prod * -1))\n        elif [[ $i -eq 0 ]]; then\n        \
    \    prod=0\n        fi\n        sum=$((sum + i))\n    done\n    echo \"$((sum\
    \ * prod))\"", "  local -a arr=()\n  local prod=1\n  local sum=0\n  local i=0\n\
    \  for i in $1; do\n    arr+=($i)\n  done\n  if [ ${#arr[@]} -eq 0 ]; then\n \
    \   echo \"None\"\n    return\n  fi\n  for i in ${arr[@]}; do\n    if [ $i -eq\
    \ 0 ]; then\n      prod=0\n      break\n    fi\n    if [ $i -lt 0 ]; then\n  \
    \    prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum\
    \ * prod))", "  local arr=($1)\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo $((sum * prod))", "  if [[ -z \"$1\" ]]; then\n    echo \"None\"\n  else\n\
    \    local sum=0\n    local prod=1\n    for i in $1; do\n      if [[ $i -eq 0\
    \ ]]; then\n        prod=0\n        break\n      elif [[ $i -lt 0 ]]; then\n \
    \       prod=$((prod * -1))\n      fi\n      sum=$((sum + i))\n    done\n    echo\
    \ $((sum * prod))\n  fi", "    local arr=($1)\n    local prod=1\n    local sum=0\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n           \
    \ prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        fi\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0\
    \ ]]; then\n        echo \"None\"\n    else\n        echo $((sum * prod))\n  \
    \  fi", "    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    local\
    \ sign=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n  \
    \          sign=0\n        elif [[ $i -lt 0 ]]; then\n            sign=-1\n  \
    \      else\n            sign=1\n        fi\n        prod=$((prod * sign))\n \
    \       sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo\
    \ \"None\"\n    else\n        echo \"$((sum * prod))\"\n    fi", "  local arr=($1)\n\
    \  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    elif [[ $i -gt 0 ]]; then\n     \
    \ prod=$((prod * 1))\n    else\n      prod=0\n    fi\n    sum=$((sum + i))\n \
    \ done\n  echo $((sum * prod))", "  local arr=($1)\n  local prod=1\n  local sum=0\n\
    \  for i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n   \
    \   break\n    fi\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n  \
    \  fi\n    sum=$((sum + i))\n  done\n  echo $((prod * sum))", "    local arr=($1)\n\
    \    local prod=1\n    local sum=0\n    local sign=0\n    local i=0\n    local\
    \ len=${#arr[@]}\n    if [ $len -eq 0 ]; then\n        echo \"None\"\n       \
    \ return\n    fi\n    for ((i=0; i<len; i++)); do\n        if [ ${arr[$i]} -gt\
    \ 0 ]; then\n            sign=1\n        elif [ ${arr[$i]} -lt 0 ]; then\n   \
    \         sign=-1\n        else\n            sign=0\n        fi\n        prod=$((prod\
    \ * sign))\n        sum=$((sum + ${arr[$i]}))\n    done\n    echo \"$((prod *\
    \ sum))\"", "    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for\
    \ i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n\
    \            break\n        fi\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        fi\n        sum=$((sum + i))\n    done\n    echo $((prod * sum))",
  "    local arr=($1)\n    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n\
    \        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n\
    \        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo\
    \ \"None\"\n    else\n        echo $((sum * prod))\n    fi", "    local arr=($1)\n\
    \    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"; do\n        if\
    \ [[ $i -eq 0 ]]; then\n            prod=0\n            break\n        elif [[\
    \ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    echo $((sum * prod))", "    local arr=($1)\n    local prod=1\n\
    \    local sum=0\n    local len=${#arr[@]}\n    if [ \"$len\" -eq 0 ]; then\n\
    \        echo \"None\"\n        return\n    fi\n    for i in \"${arr[@]}\"; do\n\
    \        if [ \"$i\" -lt 0 ]; then\n            prod=$((prod * -1))\n        elif\
    \ [ \"$i\" -eq 0 ]; then\n            prod=0\n            break\n        fi\n\
    \        sum=$((sum + i))\n    done\n    echo \"$((sum * prod))\"", "    local\
    \ arr=($1)\n    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"; do\n\
    \        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n    \
    \    elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n\
    \        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo\
    \ \"None\"\n    else\n        echo \"$((sum * prod))\"\n    fi", "    local arr=($1)\n\
    \    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"; do\n        if\
    \ [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        elif [[ $i -eq\
    \ 0 ]]; then\n            prod=0\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo $((sum * prod))", "    local arr=($1)\n    local prod=1\n    local sum=0\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n           \
    \ prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        fi\n        sum=$((sum + i))\n    done\n    echo $((sum * prod))",
  "  local arr=($1)\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n\
    \    if [ $i -lt 0 ]; then\n      prod=$((prod * -1))\n    elif [ $i -gt 0 ];\
    \ then\n      prod=$((prod * 1))\n    else\n      prod=0\n    fi\n    sum=$((sum\
    \ + i))\n  done\n  if [ $sum -eq 0 ]; then\n    echo \"None\"\n  else\n    echo\
    \ \"$((sum * prod))\"\n  fi", "  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n\
    \  local len=${#arr[@]}\n  if [ $len -eq 0 ]; then\n    echo \"None\"\n    return\n\
    \  fi\n  for i in \"${arr[@]}\"; do\n    if [ $i -eq 0 ]; then\n      prod=0\n\
    \      break\n    fi\n    if [ $i -lt 0 ]; then\n      prod=$((prod * -1))\n \
    \   fi\n    sum=$((sum + i))\n  done\n  echo $((prod * sum))", "    local arr=($1)\n\
    \    local sum=0\n    local prod=1\n    for i in \"${arr[@]}\"; do\n        if\
    \ [[ $i -gt 0 ]]; then\n            ((sum+=i))\n            ((prod*=1))\n    \
    \    elif [[ $i -lt 0 ]]; then\n            ((sum+=i*-1))\n            ((prod*=-1))\n\
    \        fi\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n\
    \    else\n        echo \"$(($sum*$prod))\"\n    fi", "    local arr=($1)\n  \
    \  local prod=1\n    local sum=0\n    local i\n    for i in \"${arr[@]}\"; do\n\
    \        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n    \
    \    elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n\
    \        sum=$((sum + i))\n    done\n    echo $((prod * sum))", "    local arr=($1)\n\
    \    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"; do\n        if\
    \ [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        elif [[ $i -eq\
    \ 0 ]]; then\n            prod=0\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo $((sum * prod))", "    local arr=($1)\n    local prod=1\n    local sum=0\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n           \
    \ prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        fi\n        sum=$((sum + i))\n    done\n    echo $((sum * prod))",
  "  local arr=($1)\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n\
    \    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt 0\
    \ ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo \"$((sum * prod))\"", "    local arr=($1)\n    local prod=1\n    local\
    \ sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n   \
    \         prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n     \
    \       prod=$((prod * -1))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo $((sum * prod))", "    local arr=($1)\n    local prod=1\n    local sum=0\n\
    \    for i in \"${arr[@]}\"; do\n        if [ $i -gt 0 ]; then\n            prod=$((prod\
    \ * 1))\n        elif [ $i -lt 0 ]; then\n            prod=$((prod * -1))\n  \
    \      else\n            prod=0\n        fi\n        sum=$((sum + i))\n    done\n\
    \    if [ $sum -eq 0 ]; then\n        echo \"None\"\n    else\n        echo $((sum\
    \ * prod))\n    fi", "    local arr=($1)\n    local prod=1\n    local sum=0\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n           \
    \ prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        fi\n        sum=$((sum + i))\n    done\n    echo $((sum * prod))",
  "  local arr=($1)\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n\
    \    if [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    elif [[ $i -gt 0\
    \ ]]; then\n      prod=$((prod * 1))\n    else\n      prod=0\n    fi\n    sum=$((sum\
    \ + i))\n  done\n  if [[ $sum -eq 0 ]]; then\n    echo \"None\"\n  else\n    echo\
    \ $((sum * prod))\n  fi", "  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n\
    \  for i in \"${arr[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod\
    \ * -1))\n    elif [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    else\n\
    \      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n  done\n  if [[ $sum\
    \ -eq 0 ]]; then\n    echo \"None\"\n  else\n    echo \"$((sum * prod))\"\n  fi",
  "    local arr=($1)\n    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n\
    \        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n\
    \        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo\
    \ \"None\"\n    else\n        echo $((sum * prod))\n    fi", "  local arr=($1)\n\
    \  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    elif [[ $i -gt 0 ]]; then\n     \
    \ prod=$((prod * 1))\n    else\n      prod=0\n    fi\n    sum=$((sum + i))\n \
    \ done\n  if [[ $sum -eq 0 ]]; then\n    echo \"None\"\n  else\n    echo $((sum\
    \ * prod))\n  fi", "    local arr=($1)\n    local prod=1\n    local sum=0\n  \
    \  for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n\
    \            break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        fi\n        sum=$((sum + i))\n    done\n    echo \"$((sum *\
    \ prod))\"", "  local arr=($1)\n  local prod=1\n  local sum=0\n  local sign\n\
    \  for i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n      sign=0\n   \
    \ elif [[ $i -lt 0 ]]; then\n      sign=-1\n    else\n      sign=1\n    fi\n \
    \   prod=$((prod * sign))\n    sum=$((sum + i))\n  done\n  if [[ $sum -eq 0 ]];\
    \ then\n    echo \"None\"\n  else\n    echo $((sum * prod))\n  fi", "  local arr=($1)\n\
    \  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq\
    \ 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt 0 ]]; then\n     \
    \ prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))",
  "    local arr=($1)\n    local prod=1\n    local sum=0\n    local sign=0\n    for\
    \ i in \"${arr[@]}\"; do\n        if [ \"$i\" -eq 0 ]; then\n            sign=0\n\
    \        elif [ \"$i\" -lt 0 ]; then\n            sign=-1\n        else\n    \
    \        sign=1\n        fi\n        prod=$((prod * sign))\n        sum=$((sum\
    \ + i))\n    done\n    if [ \"$sum\" -eq 0 ]; then\n        echo \"None\"\n  \
    \  else\n        echo \"$((sum * prod))\"\n    fi", "  local arr=($1)\n  local\
    \ prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]];\
    \ then\n      prod=0\n      break\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod\
    \ * -1))\n    fi\n    sum=$((sum + i))\n  done\n  if [[ $prod -eq 0 ]]; then\n\
    \    echo \"0\"\n  else\n    echo \"$((prod * sum))\"\n  fi", "  local arr=($1)\n\
    \  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq\
    \ 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt 0 ]]; then\n     \
    \ prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))",
  "    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    local sign=0\n \
    \   for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n\
    \            break\n        elif [[ $i -lt 0 ]]; then\n            sign=$((sign+1))\n\
    \        fi\n        sum=$((sum+i))\n    done\n    if [[ $prod -eq 0 ]]; then\n\
    \        echo \"0\"\n    elif [[ $sign -eq 0 ]]; then\n        echo \"$sum\"\n\
    \    elif [[ $sign -eq 1 ]]; then\n        echo \"$((sum*-1))\"\n    else\n  \
    \      echo \"$((sum*-1))\"\n    fi", "    local arr=$1\n    local sum=0\n   \
    \ local prod=1\n    for i in $arr; do\n        if [[ $i -gt 0 ]]; then\n     \
    \       sum=$((sum + i))\n            prod=$((prod * 1))\n        elif [[ $i -lt\
    \ 0 ]]; then\n            sum=$((sum + i * -1))\n            prod=$((prod * -1))\n\
    \        fi\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n\
    \    else\n        echo $((sum * prod))\n    fi", "    local arr=($1)\n    local\
    \ prod=1\n    local sum=0\n    local sign=0\n    for i in \"${arr[@]}\"; do\n\
    \        if [ $i -eq 0 ]; then\n            sign=0\n        elif [ $i -lt 0 ];\
    \ then\n            sign=-1\n        else\n            sign=1\n        fi\n  \
    \      prod=$((prod * sign))\n        sum=$((sum + i))\n    done\n    if [ $sum\
    \ -eq 0 ]; then\n        echo \"None\"\n    else\n        echo \"$((sum * prod))\"\
    \n    fi", "    local arr=($1)\n    local prod=1\n    local sum=0\n    for i in\
    \ \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        elif [[ $i -eq 0 ]]; then\n            prod=0\n        fi\n\
    \        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo\
    \ \"None\"\n    else\n        echo $((sum * prod))\n    fi", "    local arr=($1)\n\
    \    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"; do\n        if\
    \ [ $i -lt 0 ]; then\n            prod=$((prod * -1))\n        elif [ $i -gt 0\
    \ ]; then\n            prod=$((prod * 1))\n        else\n            prod=0\n\
    \        fi\n        sum=$((sum + i))\n    done\n    echo \"$((sum * prod))\"",
  "    local arr=($1)\n    local prod=1\n    local sum=0\n    if [[ ${#arr[@]} -eq\
    \ 0 ]]; then\n        echo \"None\"\n        return\n    fi\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n      \
    \  elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        else\n\
    \            prod=0\n        fi\n        sum=$((sum + i))\n    done\n    echo\
    \ $((sum * prod))", "  local arr=($1)\n  local prod=1\n  local sum=0\n  for i\
    \ in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n\
    \    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum\
    \ + i))\n  done\n  echo \"$((sum * prod))\"", "    local arr=($1)\n    local prod=1\n\
    \    local sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n\
    \            prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n  \
    \          prod=$((prod * -1))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo\
    \ \"$((sum * prod))\"\n    fi", "    local arr=($1)\n    local prod=1\n    local\
    \ sum=0\n    local i\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]];\
    \ then\n            prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n\
    \            prod=$((prod * -1))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo\
    \ $((sum * prod))\n    fi", "    local arr=($1)\n    local prod=1\n    local sum=0\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n           \
    \ prod=$((prod * -1))\n        elif [[ $i -eq 0 ]]; then\n            prod=0\n\
    \        fi\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n\
    \        echo \"None\"\n    else\n        echo \"$((sum * prod))\"\n    fi", " \
    \   local arr=($1)\n    local prod=1\n    local sum=0\n    local i=0\n    if [\
    \ ${#arr[@]} -eq 0 ]; then\n        echo \"None\"\n        return\n    fi\n  \
    \  for i in ${arr[@]}; do\n        if [ $i -lt 0 ]; then\n            prod=$((prod\
    \ * -1))\n        elif [ $i -eq 0 ]; then\n            prod=0\n            break\n\
    \        fi\n        sum=$((sum + i))\n    done\n    echo $((sum * prod))", " \
    \   local prod=1\n    local sum=0\n    for i in $1; do\n        if [[ $i -eq 0\
    \ ]]; then\n            prod=0\n        elif [[ $i -lt 0 ]]; then\n          \
    \  prod=$((prod * -1))\n        fi\n        sum=$((sum + i))\n    done\n    if\
    \ [[ $prod -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo \"$((sum\
    \ * prod))\"\n    fi", "    local arr=($1)\n    local prod=1\n    local sum=0\n\
    \    if [ ${#arr[@]} -eq 0 ]; then\n        echo \"None\"\n        return\n  \
    \  fi\n    for i in ${arr[@]}; do\n        if [ $i -lt 0 ]; then\n           \
    \ prod=$((prod * -1))\n        elif [ $i -eq 0 ]; then\n            prod=0\n \
    \           break\n        fi\n        sum=$((sum + i))\n    done\n    echo $((sum\
    \ * prod))", "  local arr=($1)\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo $((sum * prod))", "  local arr=($1)\n  local prod=1\n  local sum=0\n \
    \ for i in \"${arr[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod\
    \ * -1))\n    elif [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    else\n\
    \      prod=0\n    fi\n    sum=$((sum + i))\n  done\n  if [[ $sum -eq 0 ]]; then\n\
    \    echo \"None\"\n  else\n    echo \"$((sum * prod))\"\n  fi", "  local arr=($1)\n\
    \  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq\
    \ 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt 0 ]]; then\n     \
    \ ((prod *= -1))\n    fi\n    ((sum += i))\n  done\n  if [[ $prod -eq 0 ]]; then\n\
    \    echo \"0\"\n  else\n    echo \"$((prod * sum))\"\n  fi", "    local arr=($1)\n\
    \    local sum=0\n    local prod=1\n    for i in \"${arr[@]}\"; do\n        if\
    \ [[ $i -eq 0 ]]; then\n            prod=0\n            break\n        elif [[\
    \ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    echo $((sum * prod))", "  local arr=($1)\n  local prod=1\n\
    \  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n  \
    \    prod=0\n      break\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod *\
    \ -1))\n    fi\n    sum=$((sum + i))\n  done\n  if [[ $prod -eq 0 ]]; then\n \
    \   echo \"0\"\n  else\n    echo \"$((sum * prod))\"\n  fi", "  local arr=($1)\n\
    \  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq\
    \ 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt 0 ]]; then\n     \
    \ ((prod *= -1))\n    fi\n    ((sum += i))\n  done\n  if [[ $prod -eq 0 ]]; then\n\
    \    echo \"0\"\n  else\n    echo \"$((sum * prod))\"\n  fi", "    local arr=($1)\n\
    \    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"; do\n        if\
    \ [[ $i -eq 0 ]]; then\n            prod=0\n            break\n        elif [[\
    \ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n\
    \        echo $((sum * prod))\n    fi", "    local arr=($1)\n    local prod=1\n\
    \    local sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n\
    \            prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n  \
    \          prod=$((prod * -1))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo $((sum * prod))", "    local result=1\n    local sum=0\n    for i in\
    \ $1; do\n        if [[ $i -gt 0 ]]; then\n            result=$((result * 1))\n\
    \        elif [[ $i -lt 0 ]]; then\n            result=$((result * -1))\n    \
    \    else\n            result=0\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo $((result * sum))", "    local arr=($1)\n    local prod=1\n    local\
    \ sum=0\n    for i in \"${arr[@]}\"; do\n        if [ $i -lt 0 ]; then\n     \
    \       prod=$((prod * -1))\n        elif [ $i -gt 0 ]; then\n            prod=$((prod\
    \ * 1))\n        else\n            prod=0\n        fi\n        sum=$((sum + i))\n\
    \    done\n    echo $((sum * prod))", "    local arr=($1)\n    local prod=1\n\
    \    local sum=0\n    for i in \"${arr[@]}\"; do\n        if [ $i -lt 0 ]; then\n\
    \            prod=$((prod * -1))\n        elif [ $i -gt 0 ]; then\n          \
    \  prod=$((prod * 1))\n        else\n            prod=0\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    echo $((sum * prod))", "    local arr=($1)\n    local prod=1\n\
    \    local sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n\
    \            prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n  \
    \          prod=$((prod * -1))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo\
    \ $((sum * prod))\n    fi", "  local arr=($1)\n  local prod=1\n  local sum=0\n\
    \  for i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n   \
    \   break\n    fi\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n  \
    \  fi\n    sum=$((sum + i))\n  done\n  echo $((prod * sum))", "    local arr=($1)\n\
    \    local sum=0\n    local prod=1\n    local i=0\n    local len=${#arr[@]}\n\
    \    if [[ $len -eq 0 ]]; then\n        echo \"None\"\n        return\n    fi\n\
    \    while [[ $i -lt $len ]]; do\n        local num=${arr[$i]}\n        if [[\
    \ $num -gt 0 ]]; then\n            sum=$((sum + num))\n        elif [[ $num -lt\
    \ 0 ]]; then\n            sum=$((sum - num))\n            prod=$((prod * -1))\n\
    \        fi\n        i=$((i + 1))\n    done\n    echo \"$((sum * prod))\"", " \
    \   local arr=($1)\n    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n\
    \        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n\
    \        sum=$((sum + i))\n    done\n    echo $((sum * prod))", "    local arr=($1)\n\
    \    local prod=1\n    local sum=0\n    local i=0\n    local len=${#arr[@]}\n\
    \    if [ $len -eq 0 ]; then\n        echo \"None\"\n        return\n    fi\n\
    \    for ((i=0; i<len; i++)); do\n        local num=${arr[$i]}\n        if [ $num\
    \ -lt 0 ]; then\n            prod=$((prod * -1))\n        elif [ $num -eq 0 ];\
    \ then\n            prod=0\n            break\n        fi\n        sum=$((sum\
    \ + num))\n    done\n    echo $((sum * prod))", "    local arr=($1)\n    local\
    \ prod=1\n    local sum=0\n    local i=0\n    local len=${#arr[@]}\n    if [ $len\
    \ -eq 0 ]; then\n        echo \"None\"\n        return\n    fi\n    for ((i=0;\
    \ i<len; i++)); do\n        if [ ${arr[$i]} -gt 0 ]; then\n            prod=$((prod\
    \ * 1))\n        elif [ ${arr[$i]} -lt 0 ]; then\n            prod=$((prod * -1))\n\
    \        else\n            prod=0\n        fi\n        sum=$((sum + ${arr[$i]}))\n\
    \    done\n    echo $((sum * prod))", "    local arr=($1)\n    local prod=1\n\
    \    local sum=0\n    for i in \"${arr[@]}\"; do\n        if [ $i -lt 0 ]; then\n\
    \            prod=$((prod * -1))\n        elif [ $i -gt 0 ]; then\n          \
    \  prod=$((prod * 1))\n        else\n            prod=0\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    if [ $sum -eq 0 ]; then\n        echo \"None\"\n    else\n\
    \        echo $((sum * prod))\n    fi", "  local arr=(\"$@\")\n  local prod=1\n\
    \  local sum=0\n  local sign=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq\
    \ 0 ]]; then\n      prod=0\n      break\n    fi\n    if [[ $i -lt 0 ]]; then\n\
    \      sign=$((sign + 1))\n    fi\n    sum=$((sum + i))\n  done\n  if [[ $prod\
    \ -eq 0 ]]; then\n    echo \"0\"\n  else\n    if [[ $((sign % 2)) -eq 0 ]]; then\n\
    \      echo \"$((sum * 1))\"\n    else\n      echo \"$((sum * -1))\"\n    fi\n\
    \  fi", "    local arr=($1)\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        elif [[ $i -eq 0 ]]; then\n            prod=0\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    echo $((sum * prod))", "    local arr=(\"$@\")\n    local\
    \ prod=1\n    local sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq\
    \ 0 ]]; then\n            prod=0\n            break\n        fi\n        if [[\
    \ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n\
    \        echo $((sum * prod))\n    fi", "  local arr=($1)\n  local prod=1\n  local\
    \ sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n\
    \      break\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n\
    \    sum=$((sum + i))\n  done\n  if [[ $prod -eq 0 ]]; then\n    echo \"0\"\n\
    \  else\n    echo \"$((sum * prod))\"\n  fi", "    local arr=($1)\n    local prod=1\n\
    \    local sum=0\n    local prod_sign=1\n    for i in \"${arr[@]}\"; do\n    \
    \    if [ $i -gt 0 ]; then\n            prod_sign=1\n        elif [ $i -lt 0 ];\
    \ then\n            prod_sign=-1\n        else\n            prod_sign=0\n    \
    \    fi\n        prod=$((prod * prod_sign))\n        sum=$((sum + i))\n    done\n\
    \    if [ ${#arr[@]} -eq 0 ]; then\n        echo \"None\"\n    else\n        echo\
    \ \"$((sum * prod))\"\n    fi", "  local prod=1\n  local sum=0\n  for i in $1;\
    \ do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n    elif [[ $i -lt 0 ]]; then\n\
    \      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n  if [[ $sum\
    \ -eq 0 ]]; then\n    echo \"None\"\n  else\n    echo $((sum * prod))\n  fi",
  "  local arr=($1)\n  local sum=0\n  local prod=1\n  for i in \"${arr[@]}\"; do\n\
    \    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    fi\n    if [[ $i\
    \ -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo $((sum * prod))", "    local arr=($1)\n    local prod=1\n    local sum=0\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n           \
    \ prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n            ((prod\
    \ *= -1))\n        fi\n        ((sum += i))\n    done\n    if [[ $prod -eq 0 ]];\
    \ then\n        echo \"0\"\n    else\n        echo \"$((prod * sum))\"\n    fi",
  "    local arr=($1)\n    local prod=1\n    local sum=0\n    local sign=0\n    local\
    \ num=0\n    local i=0\n    local len=${#arr[@]}\n    if [ $len -eq 0 ]; then\n\
    \        echo \"None\"\n        return\n    fi\n    for i in $(seq 0 $((len-1)));\
    \ do\n        num=${arr[$i]}\n        if [ $num -eq 0 ]; then\n            sign=0\n\
    \        elif [ $num -lt 0 ]; then\n            sign=-1\n        else\n      \
    \      sign=1\n        fi\n        prod=$((prod*sign))\n        sum=$((sum+num))\n\
    \    done\n    echo $((sum*prod))", "  local arr=($1)\n  local prod=1\n  local\
    \ sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod\
    \ * -1))\n    elif [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    else\n\
    \      prod=0\n    fi\n    sum=$((sum + i))\n  done\n  if [[ $sum -eq 0 ]]; then\n\
    \    echo \"None\"\n  else\n    echo \"$((sum * prod))\"\n  fi", "  local arr=($1)\n\
    \  local sum=0\n  local prod=1\n  for i in \"${arr[@]}\"; do\n    if [[ $i -gt\
    \ 0 ]]; then\n      sum=$((sum + i))\n      prod=$((prod * 1))\n    elif [[ $i\
    \ -lt 0 ]]; then\n      sum=$((sum + i * -1))\n      prod=$((prod * -1))\n   \
    \ else\n      prod=$((prod * 0))\n    fi\n  done\n  if [[ $prod -eq 0 ]]; then\n\
    \    echo \"None\"\n  else\n    echo $((sum * prod))\n  fi", "    local arr=($1)\n\
    \    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"; do\n        if\
    \ [[ $i -eq 0 ]]; then\n            prod=0\n            break\n        elif [[\
    \ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    echo $((sum * prod))", "  local -a arr=($1)\n  local prod=1\n\
    \  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n  \
    \    prod=0\n      break\n    elif [[ $i -lt 0 ]]; then\n      ((prod *= -1))\n\
    \    fi\n    ((sum += i))\n  done\n  ((sum *= prod))\n  if [[ $sum -eq 0 ]]; then\n\
    \    echo \"None\"\n  else\n    echo \"$sum\"\n  fi", "    local arr=($1)\n  \
    \  local prod=1\n    local sum=0\n    if [ ${#arr[@]} -eq 0 ]; then\n        echo\
    \ \"None\"\n        return\n    fi\n    for i in ${arr[@]}; do\n        if [ $i\
    \ -lt 0 ]; then\n            prod=$((prod * -1))\n        elif [ $i -eq 0 ]; then\n\
    \            prod=0\n            break\n        fi\n        sum=$((sum + i))\n\
    \    done\n    echo $((sum * prod))", "    local arr=($1)\n    local prod=1\n\
    \    local sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n\
    \            prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n  \
    \          prod=$((prod * -1))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo \"$((sum * prod))\"", "  local arr=($1)\n  local prod=1\n  local sum=0\n\
    \  for i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n   \
    \   break\n    fi\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n  \
    \  fi\n    sum=$((sum + i))\n  done\n  echo $((prod * sum))", "  local arr=($1)\n\
    \  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq\
    \ 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt 0 ]]; then\n     \
    \ prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))",
  "  local arr=($1)\n  local prod=1\n  local sum=0\n  local n\n  for n in \"${arr[@]}\"\
    ; do\n    if (( n > 0 )); then\n      prod=$(( prod * 1 ))\n    elif (( n < 0\
    \ )); then\n      prod=$(( prod * -1 ))\n    else\n      prod=0\n    fi\n    sum=$((\
    \ sum + n ))\n  done\n  echo $(( sum * prod ))", "    local arr=($1)\n    local\
    \ prod=1\n    local sum=0\n    local len=${#arr[@]}\n    if [[ $len -eq 0 ]];\
    \ then\n        echo \"None\"\n        return\n    fi\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n     \
    \   elif [[ $i -eq 0 ]]; then\n            prod=0\n            break\n       \
    \ fi\n        sum=$((sum + i))\n    done\n    echo $((sum * prod))", "    if [\
    \ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        local sum=0\n  \
    \      local prod=1\n        for i in $1; do\n            if [ $i -gt 0 ]; then\n\
    \                sum=$((sum + i))\n                prod=$((prod * 1))\n      \
    \      elif [ $i -lt 0 ]; then\n                sum=$((sum + i * -1))\n      \
    \          prod=$((prod * -1))\n            fi\n        done\n        echo $((sum\
    \ * prod))\n    fi", "    local arr=($1)\n    local prod=1\n    local sum=0\n\
    \    local i\n    for ((i=0; i<${#arr[@]}; i++)); do\n        if [[ ${arr[$i]}\
    \ -gt 0 ]]; then\n            prod=$((prod * 1))\n        elif [[ ${arr[$i]} -lt\
    \ 0 ]]; then\n            prod=$((prod * -1))\n        else\n            prod=$((prod\
    \ * 0))\n        fi\n        sum=$((sum + ${arr[$i]}))\n    done\n    echo $((prod\
    \ * sum))", "  local arr=($1)\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  if [[ $prod -eq 0 ]]; then\n    echo \"0\"\n  else\n    echo \"$((prod * sum))\"\
    \n  fi", "  local arr=($1)\n  local prod=1\n  local sum=0\n  local sign=0\n  for\
    \ i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n      sign=0\n    elif\
    \ [[ $i -lt 0 ]]; then\n      sign=-1\n    else\n      sign=1\n    fi\n    prod=$((prod\
    \ * sign))\n    sum=$((sum + i))\n  done\n  if [[ $sum -eq 0 ]]; then\n    echo\
    \ \"None\"\n  else\n    echo \"$((sum * prod))\"\n  fi", "  local arr=($1)\n \
    \ local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq\
    \ 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt 0 ]]; then\n     \
    \ prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))",
  "    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n\
    \        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n\
    \        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo\
    \ \"None\"\n    else\n        echo \"$((sum * prod))\"\n    fi", "    local arr=($1)\n\
    \    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"; do\n        if\
    \ [ $i -lt 0 ]; then\n            prod=$((prod * -1))\n        elif [ $i -gt 0\
    \ ]; then\n            prod=$((prod * 1))\n        else\n            prod=0\n\
    \        fi\n        sum=$((sum + i))\n    done\n    if [ $sum -eq 0 ]; then\n\
    \        echo \"None\"\n    else\n        echo \"$((sum * prod))\"\n    fi", " \
    \ local arr=($1)\n  local sum=0\n  local prod=1\n  for i in \"${arr[@]}\"; do\n\
    \    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt 0\
    \ ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo $((sum * prod))", "  local arr=($1)\n  local prod=1\n  local sum=0\n \
    \ for i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n    \
    \  break\n    fi\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n   \
    \ fi\n    sum=$((sum + i))\n  done\n  echo \"$((sum * prod))\"", "    local arr=($1)\n\
    \    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"; do\n        if\
    \ [[ $i -eq 0 ]]; then\n            prod=0\n            break\n        elif [[\
    \ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n\
    \        echo $((sum * prod))\n    fi", "  local arr=($1)\n  local prod=1\n  local\
    \ sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n\
    \      break\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n\
    \    sum=$((sum + i))\n  done\n  echo \"$((sum * prod))\"", "    local arr=($1)\n\
    \    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"; do\n        if\
    \ [[ $i -eq 0 ]]; then\n            prod=0\n            break\n        elif [[\
    \ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n\
    \        echo \"$((sum * prod))\"\n    fi", "    local arr=($1)\n    local sum=0\n\
    \    local prod=1\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]];\
    \ then\n            prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n\
    \            prod=$((prod * -1))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo\
    \ \"$((sum * prod))\"\n    fi", "    local arr=(\"$@\")\n    local prod=1\n  \
    \  local sum=0\n    local sign=0\n    local num=0\n    for i in \"${arr[@]}\"\
    ; do\n        num=$(echo \"$i\" | sed 's/-//g')\n        if [[ $i =~ ^- ]]; then\n\
    \            sign=-1\n        elif [[ $i =~ ^0 ]]; then\n            sign=0\n\
    \        else\n            sign=1\n        fi\n        prod=$((prod * sign))\n\
    \        sum=$((sum + num))\n    done\n    if [[ $sum -eq 0 ]]; then\n       \
    \ echo \"None\"\n    else\n        echo \"$((sum * prod))\"\n    fi", "  local\
    \ arr=($1)\n  local prod=1\n  local sum=0\n  local sign=0\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -gt 0 ]]; then\n      sign=1\n    elif [[ $i -lt 0 ]]; then\n\
    \      sign=-1\n    else\n      sign=0\n    fi\n    prod=$((prod * sign))\n  \
    \  sum=$((sum + i))\n  done\n  if [[ $sum -eq 0 ]]; then\n    echo \"None\"\n\
    \  else\n    echo \"$((sum * prod))\"\n  fi", "    local arr=($1)\n    local prod=1\n\
    \    local sum=0\n    for i in \"${arr[@]}\"; do\n        if [ \"$i\" -eq 0 ];\
    \ then\n            prod=0\n            break\n        elif [ \"$i\" -lt 0 ];\
    \ then\n            ((prod *= -1))\n        fi\n        ((sum += i))\n    done\n\
    \    if [ \"$prod\" -eq 0 ]; then\n        echo \"0\"\n    elif [ \"$sum\" -eq\
    \ 0 ]; then\n        echo \"None\"\n    else\n        echo \"$((prod * sum))\"\
    \n    fi"]
stop_tokens:
- "\n}"

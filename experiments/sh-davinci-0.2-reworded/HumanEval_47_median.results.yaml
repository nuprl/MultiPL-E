language: sh
name: HumanEval_47_median
results:
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    if ((n%2==0)); then\n       \
    \ s=$(echo \"scale=1; (${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=($1)\n  local m=$((${#l[@]}\
    \ / 2))\n  local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n  local v=($s)\n\
    \  if (( ${#l[@]} % 2 == 1 )); then\n    echo ${v[$m]}\n  else\n    echo $(( (${v[$m-1]}\
    \ + ${v[$m]}) / 2 ))\n  fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}\
    \ / 2))\n    local s=${l[$m]}\n    if ((${#l[@]} % 2 == 0)); then\n        s=$(echo\
    \ \"scale=1; (${l[$m-1]} + $s) / 2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=$1\n    local n=$(echo\
    \ \"$l\" | wc -w)\n    local m=$((n/2))\n    local s=$(echo \"$l\" | tr ' ' '\\\
    n' | sort -n | sed -n \"$m p\")\n    if [ $((n%2)) -eq 0 ]; then\n        local\
    \ s2=$(echo \"$l\" | tr ' ' '\\n' | sort -n | sed -n \"$((m-1)) p\")\n       \
    \ echo \"scale=1; ($s+$s2)/2\" | bc\n    else\n        echo \"$s\"\n    fi\n}\n\
    \ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=($1)\n  local m=$((${#l[@]}\
    \ / 2))\n  local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n  local r=$(echo\
    \ \"$s\" | sed -n \"${m}p\")\n  if (( ${#l[@]} % 2 == 0 )); then\n    r=$(echo\
    \ \"$r + $(echo \"$s\" | sed -n \"$((m + 1))p\")\" | bc -l)\n    r=$(echo \"$r\
    \ / 2\" | bc -l)\n  fi\n  echo \"$r\"\n}\n\ncandidate() {\n    median \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[\
    \ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\")\
    \ = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"\
    8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local n=$((m/2))\n    local o=$((n-1))\n    local p=$((n+1))\n    local q=$((m%2))\n\
    \    local r=$(echo \"scale=1; (${l[$n]}+${l[$o]})/2\" | bc)\n    local s=$(echo\
    \ \"scale=1; (${l[$n]}+${l[$p]})/2\" | bc)\n    local t=$(echo \"scale=1; ${l[$n]}\"\
    \ | bc)\n    if [ $q -eq 0 ]; then\n        echo $r\n    else\n        echo $s\n\
    \    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local r\n    if ((n%2==0)); then\n        r=$(echo\
    \ \"${l[m-1]} ${l[m]}\" | awk '{print ($1+$2)/2}')\n    else\n        r=${l[m]}\n\
    \    fi\n    echo $r\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((\
    \ ${#l[@]} / 2 ))\n    local s=${l[$m]}\n    (( ${#l[@]} % 2 == 0 )) && s=$(echo\
    \ \"scale=1; (${l[$m-1]} + $s) / 2\" | bc -l)\n    echo $s\n}\n\ncandidate() {\n\
    \    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=($1)\n  local m=${#l[@]}\n\
    \  local i=0\n  local sum=0\n  local s=()\n  for i in ${l[@]}; do\n    sum=$(echo\
    \ \"$sum + $i\" | bc)\n    s[${#s[@]}]=$i\n  done\n  local avg=$(echo \"scale=2;\
    \ $sum / $m\" | bc)\n  echo $avg\n}\n\ncandidate() {\n    median \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s\n    if ((n%2==0)); then\n        s=$(echo\
    \ \"scale=1;(${l[m-1]}+${l[m]})/2\" | bc)\n    else\n        s=${l[m]}\n    fi\n\
    \    echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=($1)\n  local m=${#l[@]}\n\
    \  local n=$((m/2))\n  local s=${l[$n]}\n  ((m%2==0)) && s=$(echo \"scale=1;(${l[$n-1]}+$s)/2\"\
    \ | bc)\n  echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n / 2))\n    if ((n % 2 == 0)); then\n        echo \"$(echo \"\
    scale=1; (${l[m - 1]} + ${l[m]}) / 2\" | bc -l)\"\n    else\n        echo \"${l[m]}\"\
    \n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}/2))\n\
    \    local s=$((${#l[@]}%2))\n    local r=$(echo \"${l[@]}\" | tr ' ' '\\n' |\
    \ sort -n | sed -n \"${m}p\")\n    if [ $s -eq 0 ]; then\n        local r2=$(echo\
    \ \"${l[@]}\" | tr ' ' '\\n' | sort -n | sed -n \"$((${m}+1))p\")\n        echo\
    \ \"$(echo \"scale=1; ($r+$r2)/2\" | bc -l)\"\n    else\n        echo \"$r\"\n\
    \    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=$((${#l[@]}-1))\n\
    \    local m=$(($n/2))\n    local s=${l[$m]}\n    if (( $n%2 == 0 )); then\n \
    \       s=$(echo \"scale=1; (${l[$m]}+${l[$m+1]})/2\" | bc)\n    fi\n    echo\
    \ $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10\
    \ 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    if ((n%2==0)); then\n       \
    \ s=$(echo \"scale=1; (${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=($1)\n  local m=$(( ${#l[@]}\
    \ / 2 ))\n  local s=${l[$m]}\n  if (( ${#l[@]} % 2 == 0 )); then\n    s=$(echo\
    \ \"scale=1;(${l[$m-1]} + $s) / 2\" | bc)\n  fi\n  echo $s\n}\n\ncandidate() {\n\
    \    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local t=0\n    local s=0\n \
    \   local r=0\n    local p=0\n    local q=0\n    local n=0\n    local o=0\n  \
    \  local x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n   \
    \ local c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n    local\
    \ h=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n\
    \    local z=0\n    local aa=0\n    local ab=0\n    local ac=0\n    local ad=0\n\
    \    local ae=0\n    local af=0\n    local ag=0\n    local ah=0\n    local ai=0\n\
    \    local aj=0\n    local ak=0\n    local al=0\n    local am=0\n    local an=0\n\
    \    local ao=0\n    local ap=0\n    local aq=0\n    local ar=0\n    local as=0\n\
    \    local at=0\n    local au=0\n    local av=0\n    local aw=0\n    local ax=0\n\
    \    local ay=0\n    local az=0\n    local ba=0\n    local bb=0\n    local bc=0\n\
    \    local bd=0\n    local be=0\n    local bf=0\n    local bg=0\n    local bh=0\n\
    \    local bi=0\n    local bj=0\n    local bk=0\n    local bl=0\n    local bm=0\n\
    \    local bn=0\n    local bo=0\n    local bp=0\n    local bq=0\n    local br=0\n\
    \    local bs=0\n    local bt=0\n    local bu=0\n    local bv=0\n    local bw=0\n\
    \    local bx=0\n    local by=0\n    local\n}\n\ncandidate() {\n    median \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n\
    \    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local tmp=0\n    local median=0\n\
    \    for ((i=0; i<m; i++)); do\n        for ((j=i; j<m; j++)); do\n          \
    \  if ((${l[i]} > ${l[j]})); then\n                tmp=${l[i]}\n             \
    \   l[i]=${l[j]}\n                l[j]=$tmp\n            fi\n        done\n  \
    \  done\n    if ((m % 2 == 1)); then\n        k=$(((m+1)/2))\n        median=${l[k-1]}\n\
    \    else\n        k=$((m/2))\n        median=$(echo \"scale=1; (${l[k-1]}+${l[k]})/2\"\
    \ | bc)\n    fi\n    echo $median\n}\n\ncandidate() {\n    median \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n / 2))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n\
    \    local r\n    if ((n % 2)); then\n        r=$(echo \"$s\" | sed -n \"$((m\
    \ + 1))p\")\n    else\n        r=$(echo \"$s\" | sed -n \"$((m - 1))p\" | awk\
    \ '{print $1 + $2}')\n        r=$(echo \"$r / 2\" | bc -l)\n    fi\n    echo \"\
    $r\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10\
    \ 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n / 2))\n    local s=${l[$m]}\n    if ((n % 2 == 0)); then\n \
    \       s=$(echo \"scale=1; (${l[$m - 1]} + $s) / 2\" | bc)\n    fi\n    echo\
    \ $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10\
    \ 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n / 2))\n    local s=${l[$m]}\n    if ((n % 2 == 0)); then\n \
    \       s=$(echo \"scale=1; (${l[$m - 1]} + $s) / 2\" | bc)\n    fi\n    echo\
    \ $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10\
    \ 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s\n    if ((n%2==0)); then\n        s=$(echo\
    \ \"scale=1; (${l[m-1]}+${l[m]})/2\" | bc)\n    else\n        s=${l[m]}\n    fi\n\
    \    echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}\
    \ / 2))\n    local s=${l[$m]}\n    if (( ${#l[@]} % 2 == 0 )); then\n        s=$(echo\
    \ \"scale=1; (${l[$m-1]} + $s) / 2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((\
    \ ${#l[@]} / 2 ))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n   \
    \ local r=$(echo \"$s\" | sed -n \"$m p\")\n    echo \"$r\"\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=$1\n  local n=$(echo\
    \ \"$l\" | wc -w)\n  local m=$((n/2))\n  local s=$(echo \"$l\" | tr ' ' '\\n'\
    \ | sort -n | head -n $m | tail -n 1)\n  if [ $(($n%2)) -eq 0 ]; then\n    local\
    \ s2=$(echo \"$l\" | tr ' ' '\\n' | sort -n | head -n $((m+1)) | tail -n 1)\n\
    \    echo \"$(echo \"scale=1;($s+$s2)/2\" | bc)\"\n  else\n    echo \"$s\"\n \
    \ fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10\
    \ 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((\
    \ ${#l[@]} / 2 ))\n    if (( ${#l[@]} % 2 == 0 )); then\n        echo \"$(echo\
    \ \"scale=1; (${l[$m-1]} + ${l[$m]})/2\" | bc)\"\n    else\n        echo \"${l[$m]}\"\
    \n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=$(echo \"$1\" | tr\
    \ ' ' '\\n' | sort -n)\n    local n=$(echo \"$l\" | wc -l)\n    local m=$((n/2))\n\
    \    local r=$(echo \"$l\" | sed -n \"${m}p\")\n    if ((n%2==0)); then\n    \
    \    local r2=$(echo \"$l\" | sed -n \"$((m+1))p\")\n        echo \"$(echo \"\
    scale=1; ($r+$r2)/2\" | bc)\"\n    else\n        echo \"$r\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}\
    \ / 2))\n    if ((${#l[@]} % 2 == 0)); then\n        echo $(echo \"scale=1; (${l[$m]}\
    \ + ${l[$m-1]}) / 2\" | bc)\n    else\n        echo ${l[$m]}\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=$(sort -n <<<\"${l[*]}\")\n    local r\n  \
    \  if ((n%2)); then\n        r=$(cut -d' ' -f$((m+1)) <<<\"$s\")\n    else\n \
    \       r=$(cut -d' ' -f$((m+1)) <<<\"$s\")\n        r=$(cut -d' ' -f$((m)) <<<\"\
    $s\")\n        r=$(echo \"scale=1; ($r+$r)/2\" | bc)\n    fi\n    echo \"$r\"\n\
    }\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n\
    \    local r=$(echo \"$s\" | sed -n \"$m\"p)\n    if ((n%2==0)); then\n      \
    \  local r2=$(echo \"$s\" | sed -n \"$((m+1))\"p)\n        r=$(echo \"scale=1;\
    \ ($r+$r2)/2\" | bc)\n    fi\n    echo \"$r\"\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}\
    \ / 2))\n    local s=${l[$m]}\n    if (( ${#l[@]} % 2 == 0 )); then\n        s=$(echo\
    \ \"scale=1; (${l[$m-1]} + $s) / 2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local n=$((m/2))\n    local s=${l[$n]}\n    if ((m%2==0)); then\n       \
    \ s=$(echo \"scale=1;(${l[$n-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=($(echo \"$1\" | tr '\
    \ ' '\\n' | sort -n))\n  local n=${#l[@]}\n  local m=$((n / 2))\n  if ((n % 2\
    \ == 0)); then\n    echo \"$(((l[m - 1] + l[m]) / 2))\"\n  else\n    echo \"${l[m]}\"\
    \n  fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local i=0\n    local j=0\n    local tmp=0\n    for ((i=0; i<m; i++)); do\n\
    \        for ((j=i; j<m; j++)); do\n            if ((${l[i]} > ${l[j]})); then\n\
    \                tmp=${l[i]}\n                l[i]=${l[j]}\n                l[j]=$tmp\n\
    \            fi\n        done\n    done\n    if ((m % 2 == 1)); then\n       \
    \ echo ${l[m/2]}\n    else\n        echo $(((${l[m/2-1]} + ${l[m/2]})/2))\n  \
    \  fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10\
    \ 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    if ((n%2==0)); then\n       \
    \ s=$(echo \"scale=1; (${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local i=$((n/2))\n    local j=$((i+1))\n    local s=$(echo \"${l[@]}\" |\
    \ tr ' ' '\\n' | sort -n | sed -n \"${i},${j}p\" | paste -sd+ - | bc)\n    echo\
    \ \"$s/$((j-i))\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=$(IFS=+; echo \"${l[*]}\")\n    local r=$(echo\
    \ \"scale=1; ($s)/$n\" | bc)\n    if ((n%2==1)); then\n        echo \"${l[$m]}\"\
    \n    else\n        echo \"$r\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n  \
    \  [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($(echo \"$1\" | tr\
    \ ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}-1))\n    local m=$(($n/2))\n\
    \    local r=$(echo \"${l[$m]} + ${l[$(($m+1))]}\" | bc -l)\n    echo \"$r / 2\"\
    \ | bc -l\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((\
    \ ${#l[@]} / 2 ))\n    local s=${l[$m]}\n    (( ${#l[@]} % 2 == 0 )) && s=$(echo\
    \ \"scale=1; (${l[$m-1]} + $s) / 2\" | bc -l)\n    echo \"$s\"\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local i\n\
    \    local m\n    local n\n    local s\n    local t\n    for i in \"${l[@]}\"\
    ; do\n        s+=($i)\n        t+=($i)\n    done\n    sort -n <<< \"${s[*]}\"\
    \ > /dev/null\n    s=($(< /dev/null))\n    sort -n -r <<< \"${t[*]}\" > /dev/null\n\
    \    t=($(< /dev/null))\n    n=${#s[@]}\n    if ((n % 2 == 1)); then\n       \
    \ m=$((n / 2))\n        echo \"${s[m]}\"\n    else\n        m=$((n / 2))\n   \
    \     echo \"$(bc -l <<< \"${s[m - 1]} + ${s[m]}\") / 2\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpx5vrc9fv.sh: line 30: s: bad array subscript

    (standard_in) 1: syntax error

    '
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}/2))\n\
    \    local s=${l[$m]}\n    if (( ${#l[@]}%2 == 0 )); then\n        s=$(echo \"\
    scale=1;(${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate() {\n \
    \   median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($@)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=$(sort -n <<< \"${l[*]}\")\n    local r\n \
    \   if ((n%2)); then\n        r=$(awk '{print $'$((m+1))'}' <<< \"$s\")\n    else\n\
    \        r=$(awk '{print ($'$m'+$'$((m+1))')/2}' <<< \"$s\")\n    fi\n    echo\
    \ \"$r\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local i\n\
    \    local m\n    local n\n    local s\n    local t\n    local x\n    local y\n\
    \    local z\n    local -a a\n    local -a b\n    local -a c\n    local -a d\n\
    \    local -a e\n    local -a f\n    local -a g\n    local -a h\n    local -a\
    \ j\n    local -a k\n    local -a l\n    local -a m\n    local -a n\n    local\
    \ -a o\n    local -a p\n    local -a q\n    local -a r\n    local -a s\n    local\
    \ -a t\n    local -a u\n    local -a v\n    local -a w\n    local -a x\n    local\
    \ -a y\n    local -a z\n    local -a A\n    local -a B\n    local -a C\n    local\
    \ -a D\n    local -a E\n    local -a F\n    local -a G\n    local -a H\n    local\
    \ -a I\n    local -a J\n    local -a K\n    local -a L\n    local -a M\n    local\
    \ -a N\n    local -a O\n    local -a P\n    local -a Q\n    local -a R\n    local\
    \ -a S\n    local -a T\n    local -a U\n    local -a V\n    local -a W\n    local\
    \ -a X\n    local -a Y\n    local -a Z\n    local -a aa\n    local -a ab\n   \
    \ local -a ac\n    local -a ad\n    local -a ae\n    local -a af\n    local -a\
    \ ag\n    local -a ah\n    local -a ai\n    local -a aj\n    local -a ak\n   \
    \ local -a al\n    local -a am\n    local -a an\n    local -a ao\n    local -a\
    \ ap\n    local -a aq\n    local -a ar\n    local -a as\n    local -a at\n   \
    \ local -a au\n    local -a av\n    local -a aw\n    local -a ax\n    local -a\
    \ ay\n    local -a az\n    local -\n}\n\ncandidate() {\n    median \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local n=$((m/2))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n\
    \    local v=($s)\n    if ((m%2==0)); then\n        echo \"$(((v[n-1]+v[n])/2))\"\
    \n    else\n        echo \"${v[n]}\"\n    fi\n}\n\ncandidate() {\n    median \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n\
    \    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local n=$((m / 2))\n    local s=${l[$n]}\n    ((m & 1)) || s=$(echo \"scale=1;\
    \ (${l[$n]} + ${l[$((n - 1))]})/2\" | bc)\n    echo \"$s\"\n}\n\ncandidate() {\n\
    \    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local n=$((m/2))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n\
    \    local r\n    if ((m%2)); then\n        r=$(echo \"$s\" | sed -n \"${n}p\"\
    )\n    else\n        r=$(echo \"$s\" | sed -n \"${n}p;${n}q\" | awk '{print ($1+$2)/2}')\n\
    \    fi\n    echo \"$r\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local i=0\n\
    \    local n=${#l[@]}\n    local m=$((n / 2))\n    local s=${l[$m]}\n    if ((n\
    \ % 2 == 0)); then\n        s=$(echo \"scale=1; (${l[$m - 1]} + $s) / 2\" | bc)\n\
    \    fi\n    echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    if ((n%2==0)); then\n       \
    \ s=$(echo \"scale=1; (${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=$1\n    local m=$(echo\
    \ \"$l\" | tr ' ' '\\n' | sort -n | awk '{a[i++]=$0}END{print a[int(i/2)]}')\n\
    \    echo \"$m\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s\n    if ((n%2==0)); then\n        s=$(echo\
    \ \"scale=1;(${l[m-1]}+${l[m]})/2\" | bc)\n    else\n        s=${l[m]}\n    fi\n\
    \    echo \"$s\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local i=0\n    local j=0\n    local sum=0\n    local median=0\n    local\
    \ sorted=()\n    for i in ${l[@]}; do\n        sorted[j]=$i\n        j=$((j+1))\n\
    \    done\n    # Sort the array\n    IFS=$'\\n' sorted=($(sort <<<\"${sorted[*]}\"\
    ))\n    unset IFS\n    if (( $m % 2 == 1 )); then\n        median=${sorted[$((m/2))]}\n\
    \    else\n        median=$(echo \"scale=1; (${sorted[$((m/2))]} + ${sorted[$((m/2-1))]})/2\"\
    \ | bc)\n    fi\n    echo $median\n}\n\ncandidate() {\n    median \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n / 2))\n    local s=$(echo \"${l[@]}\" | tr ' ' '\\n' | sort\
    \ -n | tr '\\n' ' ')\n    if ((n % 2 == 0)); then\n        echo \"$(echo \"$s\"\
    \ | cut -d ' ' -f $m) + $(echo \"$s\" | cut -d ' ' -f $((m + 1)))\" | bc -l\n\
    \    else\n        echo \"$(echo \"$s\" | cut -d ' ' -f $((m + 1)))\"\n    fi\n\
    }\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local i\n    local j\n    local t\n    for ((i=0; i<m; i++)); do\n      \
    \  for ((j=i; j<m; j++)); do\n            if (( ${l[i]} > ${l[j]} )); then\n \
    \               t=${l[i]}\n                l[i]=${l[j]}\n                l[j]=$t\n\
    \            fi\n        done\n    done\n    if (( m % 2 == 1 )); then\n     \
    \   echo ${l[m/2]}\n    else\n        echo \"scale=1; (${l[m/2-1]} + ${l[m/2]})\
    \ / 2\" | bc\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}\
    \ / 2))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n    local r=$(echo\
    \ \"$s\" | sed -n \"$m p\")\n    echo \"$r\"\n}\n\ncandidate() {\n    median \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n\
    \    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m\n\
    \    local i\n    local j\n    local n\n    local t\n    n=${#l[@]}\n    for ((i=0;\
    \ i<n; i++)); do\n        for ((j=i+1; j<n; j++)); do\n            if (( $(echo\
    \ \"${l[i]} > ${l[j]}\" | bc -l) )); then\n                t=${l[i]}\n       \
    \         l[i]=${l[j]}\n                l[j]=$t\n            fi\n        done\n\
    \    done\n    if (( n % 2 == 1 )); then\n        m=${l[$((n/2))]}\n    else\n\
    \        m=$(echo \"scale=1; (${l[$((n/2-1))]} + ${l[$((n/2))]}) / 2\" | bc -l)\n\
    \    fi\n    echo $m\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s\n    local i\n    local j\n    local k\n  \
    \  local t\n    for ((i=0; i<n; i++)); do\n        for ((j=i; j>0; j--)); do\n\
    \            k=$((j-1))\n            if [[ ${l[j]} -lt ${l[k]} ]]; then\n    \
    \            t=${l[j]}\n                l[j]=${l[k]}\n                l[k]=$t\n\
    \            fi\n        done\n    done\n    if (( n%2 == 1 )); then\n       \
    \ echo ${l[m]}\n    else\n        s=$(( ${l[m-1]} + ${l[m]} ))\n        echo $((s/2))\n\
    \    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n\
    \    local v=$(echo \"$s\" | sed -n \"$((m+1))p\")\n    if ((n%2==0)); then\n\
    \        local v2=$(echo \"$s\" | sed -n \"$((m))p\")\n        v=$(echo \"scale=1;\
    \ ($v+$v2)/2\" | bc)\n    fi\n    echo \"$v\"\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((\
    \ ${#l[@]} / 2 ))\n    local s=${l[$m]}\n    if (( ${#l[@]} % 2 == 0 )); then\n\
    \        s=$(echo \"scale=1; (${l[$m-1]} + $s) / 2\" | bc)\n    fi\n    echo $s\n\
    }\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local i=0\n\
    \    local j=0\n    local m=0\n    local n=${#l[@]}\n    local s=()\n    for i\
    \ in ${l[@]}; do\n        for j in ${s[@]}; do\n            if (( $i < $j ));\
    \ then\n                s=(${s[@]:0:m} $i ${s[@]:m})\n                break\n\
    \            fi\n            ((m++))\n        done\n        if (( m == ${#s[@]}\
    \ )); then\n            s=(${s[@]} $i)\n        fi\n        ((m=0))\n    done\n\
    \    if (( $n % 2 == 1 )); then\n        echo ${s[$((n/2))]}\n    else\n     \
    \   echo $(((${s[$((n/2-1))]}+${s[$((n/2))]})/2))\n    fi\n}\n\ncandidate() {\n\
    \    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$(($n / 2))\n    local s=${l[$m]}\n    if (( $n % 2 == 0 )); then\n\
    \        s=$(echo \"scale=1; (${l[$m-1]} + $s) / 2\" | bc)\n    fi\n    echo $s\n\
    }\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((\
    \ ${#l[@]} / 2 ))\n    if (( ${#l[@]} % 2 == 0 )); then\n        echo \"$(echo\
    \ \"scale=1; (${l[$m-1]} + ${l[$m]})/2\" | bc)\"\n    else\n        echo \"${l[$m]}\"\
    \n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=($1)\n  local i\n  local\
    \ m\n  local s\n  local n\n  local p\n  local r\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local aa\n  local bb\n  local\
    \ cc\n  local dd\n  local ee\n  local ff\n  local gg\n  local hh\n  local ii\n\
    \  local jj\n  local kk\n  local ll\n  local mm\n  local nn\n  local oo\n  local\
    \ pp\n  local qq\n  local rr\n  local ss\n  local tt\n  local uu\n  local vv\n\
    \  local ww\n  local xx\n  local yy\n  local zz\n  local aaa\n  local bbb\n  local\
    \ ccc\n  local ddd\n  local eee\n  local fff\n  local ggg\n  local hhh\n  local\
    \ iii\n  local jjj\n  local kkk\n  local lll\n  local mmm\n  local nnn\n  local\
    \ ooo\n  local ppp\n  local qqq\n  local rrr\n  local sss\n  local ttt\n  local\
    \ uuu\n  local vvv\n  local www\n  local xxx\n  local yyy\n  local zzz\n  local\
    \ aaaa\n  local bbbb\n  local cccc\n  local dddd\n  local eeee\n  local ffff\n\
    \  local gggg\n  local hhhh\n  local iiii\n  local jjjj\n  local kkkk\n  local\
    \ llll\n  local mmmm\n  local nnnn\n  local oooo\n  local pppp\n  local qqqq\n\
    \  local rrrr\n  local ssss\n  local tttt\n  local uuuu\n  local vvvv\n  local\
    \ wwww\n  local xxxx\n  local yyyy\n  local zzzz\n  local aaaaa\n  local bbbbb\n\
    \  local ccccc\n  local ddddd\n  local eeeee\n  local fffff\n  local ggggg\n \
    \ local hhhhh\n  local iiiii\n  local jjjjj\n\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local i\n    local s\n    local t\n\n    for ((i=0; i<m; i++)); do\n    \
    \    s=${l[i]}\n        for ((j=i; j<m; j++)); do\n            t=${l[j]}\n   \
    \         if ((s > t)); then\n                l[i]=$t\n                l[j]=$s\n\
    \                s=$t\n            fi\n        done\n    done\n\n    if ((m %\
    \ 2 == 1)); then\n        echo ${l[m/2]}\n    else\n        echo $(((${l[m/2-1]}\
    \ + ${l[m/2]})/2))\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n / 2))\n    local s=${l[$m]}\n    if ((n % 2 == 0)); then\n \
    \       s=$(echo \"scale=1; (${l[$m-1]} + $s) / 2\" | bc)\n    fi\n    echo $s\n\
    }\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local len=${#l[@]}\n\
    \    local mid=$((len/2))\n    local sorted=($(printf \"%s\\n\" \"${l[@]}\" |\
    \ sort -n))\n    if ((len % 2 == 0)); then\n        echo \"$(bc -l <<< \"scale=1;\
    \ (${sorted[mid]} + ${sorted[mid-1]}) / 2\")\"\n    else\n        echo \"${sorted[mid]}\"\
    \n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}\
    \ / 2))\n    local s=${l[$m]}\n    if ((${#l[@]} % 2 == 0)); then\n        s=$(echo\
    \ \"scale=1; (${l[$m - 1]} + $s) / 2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    ((n%2==0)) && s=$(echo \"scale=1;(${l[$m-1]}+$s)/2\"\
    \ | bc)\n    echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=$1\n  local m=$(echo\
    \ \"$l\" | wc -w)\n  local n=$(echo \"$l\" | sort -n | awk '{a[i++]=$1} END {print\
    \ a[int(i/2)]}')\n  if (( $m % 2 == 0 )); then\n    local n2=$(echo \"$l\" | sort\
    \ -n | awk '{a[i++]=$1} END {print a[int(i/2)-1]}')\n    echo \"scale=1; ($n +\
    \ $n2) / 2\" | bc\n  else\n    echo \"$n\"\n  fi\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    '
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=$1\n    local n=$(echo\
    \ \"$l\" | wc -w)\n    local m=$((n/2))\n    local s=$(echo \"$l\" | tr ' ' '\\\
    n' | sort -n | awk \"NR==$m\")\n    if ((n%2==0)); then\n        local s2=$(echo\
    \ \"$l\" | tr ' ' '\\n' | sort -n | awk \"NR==$((m+1))\")\n        echo \"scale=1;($s+$s2)/2\"\
    \ | bc\n    else\n        echo \"$s\"\n    fi\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local i\n\
    \    local m\n    local n\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local -a\
    \ A\n    local -a B\n    local -a C\n    local -a D\n    local -a E\n    local\
    \ -a F\n    local -a G\n    local -a H\n    local -a I\n    local -a J\n    local\
    \ -a K\n    local -a L\n    local -a M\n    local -a N\n    local -a O\n    local\
    \ -a P\n    local -a Q\n    local -a R\n    local -a S\n    local -a T\n    local\
    \ -a U\n    local -a V\n    local -a W\n    local -a X\n    local -a Y\n    local\
    \ -a Z\n    local -a a\n    local -a b\n    local -a c\n    local -a d\n    local\
    \ -a e\n    local -a f\n    local -a g\n    local -a h\n    local -a i\n    local\
    \ -a j\n    local -a k\n    local -a l\n    local -a m\n    local -a n\n    local\
    \ -a o\n    local -a p\n    local -a q\n    local -a r\n    local -a s\n    local\
    \ -a t\n    local -a u\n    local -a v\n    local -a w\n    local -a x\n    local\
    \ -a y\n    local -a z\n    local -a Aa\n    local -a Ab\n    local -a Ac\n  \
    \  local -a Ad\n    local -a Ae\n    local -a Af\n    local -a Ag\n    local -a\
    \ Ah\n    local -a Ai\n    local -a Aj\n    local -a Ak\n    local -a Al\n   \
    \ local -a Am\n    local -a An\n    local -a Ao\n    local -a Ap\n    local -a\
    \ Aq\n    local -a Ar\n    local -a As\n    local -a At\n    local -a Au\n   \
    \ local -a Av\n    local -a Aw\n    local -\n}\n\ncandidate() {\n    median \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n\
    \    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    if ((n%2==0)); then\n       \
    \ s=$(echo \"scale=1; (${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local i=0\n\
    \    local j=0\n    local m=0\n    local n=${#l[@]}\n    local sum=0\n    local\
    \ sorted=()\n    for i in ${l[@]}; do\n        sorted[j]=$i\n        j=$((j+1))\n\
    \    done\n    for ((i=0; i<n; i++)); do\n        for ((j=i+1; j<n; j++)); do\n\
    \            if (( ${sorted[j]} < ${sorted[i]} )); then\n                m=${sorted[i]}\n\
    \                sorted[i]=${sorted[j]}\n                sorted[j]=$m\n      \
    \      fi\n        done\n    done\n    if (( n % 2 == 1 )); then\n        echo\
    \ ${sorted[n/2]}\n    else\n        sum=$(( ${sorted[n/2]} + ${sorted[n/2-1]}\
    \ ))\n        echo $(( sum / 2 ))\n    fi\n}\n\ncandidate() {\n    median \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n  \
    \  [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((\
    \ ${#l[@]} / 2 ))\n    local n=$(( ${#l[@]} % 2 ))\n    local s=${l[$m]}\n   \
    \ if (( n == 0 )); then\n        s=$(echo \"scale=1; (${l[$m-1]} + $s) / 2\" |\
    \ bc)\n    fi\n    echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    if ((n%2==0)); then\n       \
    \ s=$(echo \"scale=1;(${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local i\n\
    \    local m\n    local n\n    local s\n    local t\n    for i in \"${l[@]}\"\
    ; do\n        s+=\"$i \"\n    done\n    t=($(echo \"$s\" | tr ' ' '\\n' | sort\
    \ -n))\n    n=${#t[@]}\n    m=$((n/2))\n    if ((n%2==0)); then\n        echo\
    \ \"$(bc -l <<< \"scale=1; (${t[m-1]}+${t[m]})/2\")\"\n    else\n        echo\
    \ \"${t[m]}\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((\
    \ ${#l[@]} / 2 ))\n    if (( ${#l[@]} % 2 == 0 )); then\n        echo \"$(echo\
    \ \"scale=1; (${l[$m-1]} + ${l[$m]})/2\" | bc)\"\n    else\n        echo \"${l[$m]}\"\
    \n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=$1\n    local n=$(echo\
    \ \"$l\" | wc -w)\n    local m=$((n/2))\n    local s=$(echo \"$l\" | tr ' ' '\\\
    n' | sort -n)\n    if ((n%2==0)); then\n        echo \"$s\" | sed -n \"$m,$((m+1))p\"\
    \ | awk '{print ($1+$2)/2}'\n    else\n        echo \"$s\" | sed -n \"$((m+1)),$((m+1))p\"\
    \n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}\
    \ / 2))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n    local v=($s)\n\
    \    if (( ${#l[@]} % 2 == 1 )); then\n        echo ${v[$m]}\n    else\n     \
    \   echo $(( (${v[$m-1]} + ${v[$m]} ) / 2 ))\n    fi\n}\n\ncandidate() {\n   \
    \ median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\")\
    \ = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local i\n    local s\n    local t\n    for ((i=0; i<m; i++)); do\n      \
    \  s=${l[$i]}\n        for ((j=i+1; j<m; j++)); do\n            if (( $(echo \"\
    ${l[$j]} < $s\" | bc -l) )); then\n                t=${l[$i]}\n              \
    \  l[$i]=${l[$j]}\n                l[$j]=$t\n                s=${l[$i]}\n    \
    \        fi\n        done\n    done\n    if (( $(echo \"$m % 2\" | bc -l) ));\
    \ then\n        echo ${l[$((m/2))]}\n    else\n        echo $(echo \"scale=1;\
    \ (${l[$((m/2))]} + ${l[$((m/2-1))]}) / 2\" | bc -l)\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=$1\n    local m=$(echo\
    \ \"$l\" | wc -w)\n    local n=$(echo \"$l\" | tr ' ' '\\n' | sort -n | awk -v\
    \ m=$m '{if (NR==m/2) print $1; if (NR==m/2+1) print $1}')\n    echo $(echo \"\
    $n\" | awk '{print ($1+$2)/2}')\n}\n\ncandidate() {\n    median \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    if ((n%2==0)); then\n       \
    \ s=$(echo \"scale=1; (${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local mid=$((\
    \ ${#l[@]} / 2 ))\n    local sorted=($(printf \"%s\\n\" \"${l[@]}\" | sort -n))\n\
    \    if (( ${#l[@]} % 2 == 0 )); then\n        echo \"$(bc -l <<< \"${sorted[$mid]}\
    \ + ${sorted[$(( $mid - 1 ))]}\") / 2\"\n    else\n        echo \"${sorted[$mid]}\"\
    \n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n / 2))\n    local s=${l[$m]}\n    if ((n % 2 == 0)); then\n \
    \       s=$(echo \"scale=1; (${l[$m - 1]} + $s) / 2\" | bc)\n    fi\n    echo\
    \ $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10\
    \ 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((\
    \ ${#l[@]} / 2 ))\n    local s=${l[$m]}\n    if (( ${#l[@]} % 2 == 0 )); then\n\
    \        s=$(echo \"scale=1; (${l[$m-1]} + $s) / 2\" | bc)\n    fi\n    echo \"\
    $s\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10\
    \ 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    if ((n%2==0)); then\n       \
    \ s=$(echo \"scale=1; (${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local n=$((m/2))\n    local s=${l[$n]}\n    if ((m%2==0)); then\n       \
    \ s=$(echo \"scale=1;(${l[$n-1]}+$s)/2\" | bc)\n    fi\n    echo \"$s\"\n}\n\n\
    candidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n / 2))\n    local s=${l[$m]}\n    if ((n % 2 == 0)); then\n \
    \       s=$(echo \"scale=1; (${l[$m - 1]} + $s) / 2\" | bc)\n    fi\n    echo\
    \ $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10\
    \ 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=($1)\n  local m=${#l[@]}\n\
    \  local i=0\n  local j=0\n  local k=0\n  local t=0\n  local sum=0\n  local median=0\n\
    \  local median_index=0\n  local median_index_float=0\n  local median_index_int=0\n\
    \  local median_index_dec=0\n  local median_index_dec_float=0\n  local median_index_dec_int=0\n\
    \  local median_index_dec_int_float=0\n  local median_index_dec_int_int=0\n  local\
    \ median_index_dec_int_int_float=0\n  local median_index_dec_int_int_int=0\n \
    \ local median_index_dec_int_int_int_float=0\n  local median_index_dec_int_int_int_int=0\n\
    \  local median_index_dec_int_int_int_int_float=0\n  local median_index_dec_int_int_int_int_int=0\n\
    \  local median_index_dec_int_int_int_int_int_float=0\n  local median_index_dec_int_int_int_int_int_int=0\n\
    \  local median_index_dec_int_int_int_int_int_int_float=0\n  local median_index_dec_int_int_int_int_int_int_int=0\n\
    \  local median_index_dec_int_int_int_int_int_int_int_float=0\n  local median_index_dec_int_int_int_int_int_int_int_int=0\n\
    \  local median_index_dec_int_int_int_int_int_int_int_int_float=0\n  local median_index_dec_int_int_int_int_int_int_int_int_int=0\n\
    \  local median_index_dec_int_int_int_int_int_int_int_int_int_float=0\n  local\
    \ median_index_dec_int_int_int_int_int_int_int_int_int_int=\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=$(echo \"$1\" | tr \"\
    \ \" \"\\n\" | sort -n)\n  local n=$(echo \"$l\" | wc -l)\n  local m=$((n / 2))\n\
    \  if ((n % 2 == 0)); then\n    echo \"$l\" | sed -n \"$((m + 1))p\" | awk '{print\
    \ ($1 + $(NF)) / 2}'\n  else\n    echo \"$l\" | sed -n \"$((m + 1))p\"\n  fi\n\
    }\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}/2))\n\
    \    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n    local r=$(echo \"\
    $s\" | sed -n \"$(($m+1))p\")\n    echo \"$r\"\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n\
    \    local m1=$(echo \"$s\" | sed -n \"$((m+1))p\")\n    if ((n%2==0)); then\n\
    \        local m2=$(echo \"$s\" | sed -n \"$((m))p\")\n        echo \"$(((m1+m2)/2))\"\
    \n    else\n        echo \"$m1\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n  \
    \  [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=$1\n  local m=$(echo\
    \ \"$l\" | wc -w)\n  local m2=$(echo \"$m/2\" | bc)\n  local m1=$(echo \"$m2-1\"\
    \ | bc)\n  local m3=$(echo \"$m2+1\" | bc)\n  if [ $(echo \"$m % 2\" | bc) -eq\
    \ 0 ]; then\n    echo \"$l\" | tr ' ' '\\n' | sort -n | sed -n \"$m2,$m3\"p |\
    \ awk '{s+=$1} END {print s/2}'\n  else\n    echo \"$l\" | tr ' ' '\\n' | sort\
    \ -n | sed -n \"$m2\"p\n  fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s\n    if ((n%2==0)); then\n        s=$(echo\
    \ \"scale=1; (${l[m-1]}+${l[m]})/2\" | bc)\n    else\n        s=${l[m]}\n    fi\n\
    \    echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n / 2))\n    local s=$(echo \"${l[@]}\" | tr ' ' '\\n' | sort\
    \ -n | tr '\\n' ' ')\n    local r=$(echo \"$s\" | cut -d ' ' -f $m)\n    if ((n\
    \ % 2 == 0)); then\n        local r2=$(echo \"$s\" | cut -d ' ' -f $((m + 1)))\n\
    \        r=$(echo \"scale=1; ($r + $r2) / 2\" | bc)\n    fi\n    echo \"$r\"\n\
    }\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local i\n    local j\n    local t\n    for ((i=0; i<m; i++)); do\n      \
    \  for ((j=i; j<m; j++)); do\n            if ((${l[i]} > ${l[j]})); then\n   \
    \             t=${l[i]}\n                l[i]=${l[j]}\n                l[j]=$t\n\
    \            fi\n        done\n    done\n    if ((m % 2 == 1)); then\n       \
    \ echo ${l[m/2]}\n    else\n        echo $(((${l[m/2-1]} + ${l[m/2]})/2))\n  \
    \  fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10\
    \ 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local n=$((m/2))\n    local o=$((m%2))\n    local s=$(printf \"%s\\n\" \"\
    ${l[@]}\" | sort -n)\n    local v=($s)\n    if ((o)); then\n        echo ${v[$n]}\n\
    \    else\n        echo $(((${v[$n-1]}+${v[$n]})/2))\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($(echo \"$1\" | tr\
    \ ' ' '\\n' | sort -n))\n    local n=$(echo \"${#l[@]}\" | bc)\n    local m=$(echo\
    \ \"$n / 2\" | bc)\n    if [ $(echo \"$n % 2\" | bc) -eq 0 ]; then\n        echo\
    \ \"$(echo \"${l[$m]} + ${l[$(($m - 1))]}\" | bc) / 2\" | bc -l\n    else\n  \
    \      echo \"${l[$m]}\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local t=0\n    local s=0\n \
    \   local r=0\n    local p=0\n    local q=0\n    local n=0\n    local o=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local\
    \ e=0\n    local f=0\n    local g=0\n    local h=0\n    local aa=0\n    local\
    \ bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local\
    \ gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local\
    \ ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local\
    \ qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local\
    \ vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local\
    \ aaa=0\n    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n\
    \    local fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local\
    \ jjj=0\n    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n\
    \    local ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local\
    \ sss=0\n    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n\
    \    local xxx=0\n    local yyy=0\n    local\n}\n\ncandidate() {\n    median \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n\
    \    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=($1)\n  local n=${#l[@]}\n\
    \  local m=$((n/2))\n  local s=${l[$m]}\n  if ((n%2==0)); then\n    s=$(echo \"\
    scale=1; (${l[$m-1]}+$s)/2\" | bc)\n  fi\n  echo $s\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s\n    if ((n%2)); then\n        s=${l[$m]}\n\
    \    else\n        s=$(echo \"scale=1; (${l[$m-1]}+${l[$m]})/2\" | bc)\n    fi\n\
    \    echo \"$s\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($(echo \"$1\" | tr\
    \ ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}/2))\n    echo \"${l[$n]}\"\n\
    }\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local r=$((n%2))\n    if [ $r -eq 0 ]; then\n     \
    \   echo \"${l[$m-1]}\"\n    else\n        echo \"$(echo \"${l[$m-1]} + ${l[$m]}\"\
    \ | bc -l) / 2\" | bc -l\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    if ((n%2==0)); then\n       \
    \ s=$(echo \"scale=1;(${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local n=$((m/2))\n    local s=${l[$n]}\n    if ((m%2==0)); then\n       \
    \ s=$(echo \"scale=1; (${l[$n-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local i=0\n\
    \    local j=0\n    local k=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local aa=0\n    local ab=0\n    local ac=0\n    local ad=0\n\
    \    local ae=0\n    local af=0\n    local ag=0\n    local ah=0\n    local ai=0\n\
    \    local aj=0\n    local ak=0\n    local al=0\n    local am=0\n    local an=0\n\
    \    local ao=0\n    local ap=0\n    local aq=0\n    local ar=0\n    local as=0\n\
    \    local at=0\n    local au=0\n    local av=0\n    local aw=0\n    local ax=0\n\
    \    local ay=0\n    local az=0\n    local ba=0\n    local bb=0\n    local bc=0\n\
    \    local bd=0\n    local be=0\n    local bf=0\n    local bg=0\n    local bh=0\n\
    \    local bi=0\n    local bj=0\n    local bk=0\n    local bl=0\n    local bm=0\n\
    \    local bn=0\n    local bo=0\n    local bp=0\n    local bq=0\n    local br=0\n\
    \    local bs=0\n    local bt=0\n    local bu=0\n    local bv=0\n    local bw=0\n\
    \    local bx=0\n    local by=0\n    local bz=0\n    local ca=0\n    local cb=0\n\
    \    local cc=0\n    local cd=0\n    local ce=0\n    local cf=0\n    local cg=0\n\
    \    local ch=0\n    local ci=0\n    local cj=0\n    local\n}\n\ncandidate() {\n\
    \    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=($1)\n  local m=$((${#l[@]}\
    \ / 2))\n  local s=${l[$m]}\n  if (( ${#l[@]} % 2 == 0 )); then\n    s=$(echo\
    \ \"scale=1; (${l[$m-1]} + $s) / 2\" | bc)\n  fi\n  echo \"$s\"\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$(($n/2))\n    local s=${l[$m]}\n    if (( $n % 2 == 0 )); then\n\
    \        s=$(echo \"${l[$m-1]} + $s\" | bc -l)\n        s=$(echo \"scale=1; $s\
    \ / 2\" | bc -l)\n    fi\n    echo $s\n}\n\ncandidate() {\n    median \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[\
    \ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\")\
    \ = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"\
    8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local s=0\n    local i=0\n    local j=0\n    local k=0\n    local t=0\n \
    \   for ((i=0; i<m; i++)); do\n        s=$((s+l[i]))\n    done\n    s=$((s/m))\n\
    \    for ((i=0; i<m; i++)); do\n        l[i]=$((l[i]-s))\n    done\n    for ((i=0;\
    \ i<m; i++)); do\n        for ((j=i+1; j<m; j++)); do\n            if ((l[i]>l[j]));\
    \ then\n                t=${l[i]}\n                l[i]=${l[j]}\n            \
    \    l[j]=$t\n            fi\n        done\n    done\n    if ((m%2==1)); then\n\
    \        echo ${l[m/2]}\n    else\n        echo $(((l[m/2]+l[m/2-1])/2))\n   \
    \ fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10\
    \ 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}\
    \ / 2))\n    local s=${l[$m]}\n    if ((${#l[@]} % 2 == 0)); then\n        s=$(echo\
    \ \"scale=1; (${l[$m - 1]} + $s) / 2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=(\"$@\")\n    local\
    \ i\n    local m\n    local n\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ -a A\n    local -a B\n    local -a C\n    local -a D\n    local -a E\n    local\
    \ -a F\n    local -a G\n    local -a H\n    local -a I\n    local -a J\n    local\
    \ -a K\n    local -a L\n    local -a M\n    local -a N\n    local -a O\n    local\
    \ -a P\n    local -a Q\n    local -a R\n    local -a S\n    local -a T\n    local\
    \ -a U\n    local -a V\n    local -a W\n    local -a X\n    local -a Y\n    local\
    \ -a Z\n    local -a aa\n    local -a ab\n    local -a ac\n    local -a ad\n \
    \   local -a ae\n    local -a af\n    local -a ag\n    local -a ah\n    local\
    \ -a ai\n    local -a aj\n    local -a ak\n    local -a al\n    local -a am\n\
    \    local -a an\n    local -a ao\n    local -a ap\n    local -a aq\n    local\
    \ -a ar\n    local -a as\n    local -a at\n    local -a au\n    local -a av\n\
    \    local -a aw\n    local -a ax\n    local -a ay\n    local -a az\n    local\
    \ -a ba\n    local -a bb\n    local -a bc\n    local -a bd\n    local -a be\n\
    \    local -a bf\n    local -a bg\n    local -a bh\n    local -a bi\n    local\
    \ -a bj\n    local -a bk\n    local -a bl\n    local -a bm\n    local -a bn\n\
    \    local -a bo\n    local -a bp\n    local -a bq\n    local -a br\n    local\
    \ -a bs\n    local -a bt\n    local -\n}\n\ncandidate() {\n    median \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[\
    \ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\")\
    \ = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"\
    8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local n=$((m/2))\n    local s=${l[$n]}\n    if ((m%2==0)); then\n       \
    \ s=$(echo \"scale=1; (${l[$n-1]}+$s)/2\" | bc)\n    fi\n    echo \"$s\"\n}\n\n\
    candidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}\
    \ / 2))\n    local s=${l[@]}\n    local i\n    for i in ${l[@]}; do\n        if\
    \ (( $(echo \"$i < ${l[m]}\" | bc -l) )); then\n            s=$(echo \"$s\" |\
    \ sed \"s/\\b$i\\b//\")\n        fi\n    done\n    echo \"${l[m]}\"\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=($1)\n  local m=${#l[@]}\n\
    \  local i=0\n  local sum=0\n  local s=0\n  local v=0\n  local t=0\n  local r=0\n\
    \  local p=0\n  local q=0\n  local n=0\n  for i in ${l[@]}; do\n    sum=$(echo\
    \ \"$sum + $i\" | bc)\n  done\n  s=$(echo \"$sum / $m\" | bc)\n  for i in ${l[@]};\
    \ do\n    v=$(echo \"$i - $s\" | bc)\n    t=$(echo \"$t + $v * $v\" | bc)\n  done\n\
    \  r=$(echo \"sqrt($t / $m)\" | bc -l)\n  p=$(echo \"$r * 1.96 / sqrt($m)\" |\
    \ bc -l)\n  q=$(echo \"$s - $p\" | bc -l)\n  n=$(echo \"$s + $p\" | bc -l)\n \
    \ echo \"$q $n\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}\
    \ / 2))\n    local s=${l[$m]}\n    [ $((m * 2)) -eq ${#l[@]} ] && s=$(echo \"\
    scale=1; (${l[$m]} + ${l[$((m - 1))]})/2\" | bc -l)\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n / 2))\n    local s=${l[$m]}\n    if ((n % 2 == 0)); then\n \
    \       s=$(echo \"scale=1; (${l[$m-1]} + $s) / 2\" | bc)\n    fi\n    echo $s\n\
    }\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}/2))\n\
    \    if ((${#l[@]}%2==0)); then\n        echo \"$(echo \"scale=1; (${l[$m-1]}+${l[$m]})/2\"\
    \ | bc)\"\n    else\n        echo \"${l[$m]}\"\n    fi\n}\n\ncandidate() {\n \
    \   median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[@]}\n    local t=()\n    for i in ${l[@]};\
    \ do\n        t+=($(echo \"scale=1; $i\" | bc))\n    done\n    l=($(echo \"${t[@]}\"\
    \ | tr ' ' '\\n' | sort -n))\n    if ((n%2==1)); then\n        echo ${l[$m]}\n\
    \    else\n        echo $(echo \"scale=1; (${l[$m-1]}+${l[$m]})/2\" | bc)\n  \
    \  fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10\
    \ 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local i=0\n    local j=0\n    local t=0\n    for ((i=0; i<m; i++)); do\n\
    \        for ((j=i; j<m; j++)); do\n            if ((${l[i]} > ${l[j]})); then\n\
    \                t=${l[i]}\n                l[i]=${l[j]}\n                l[j]=$t\n\
    \            fi\n        done\n    done\n    if ((m % 2 == 1)); then\n       \
    \ echo ${l[m/2]}\n    else\n        echo \"$(echo \"scale=1; (${l[m/2-1]} + ${l[m/2]})/2\"\
    \ | bc)\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local n=$((m/2))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n\
    \    local r=$(echo \"$s\" | sed -n \"${n}p\")\n    if (( m % 2 == 0 )); then\n\
    \        local s=$(echo \"$s\" | sed -n \"$((n-1))p\")\n        r=$(echo \"scale=1;\
    \ ($r+$s)/2\" | bc)\n    fi\n    echo \"$r\"\n}\n\ncandidate() {\n    median \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n\
    \    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n\
    \    if ((n%2==0)); then\n        echo \"$(echo \"$s\" | sed -n \"$((m-1))p;$((m+1))p\"\
    \ | awk '{print ($1+$2)/2}')\"\n    else\n        echo \"$(echo \"$s\" | sed -n\
    \ \"$((m+1))p\")\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}\
    \ / 2))\n    local s=${l[$m]}\n    if (( ${#l[@]} % 2 == 0 )); then\n        s=$(echo\
    \ \"scale=1; (${l[$m-1]} + $s) / 2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($(echo \"$1\" | tr\
    \ ' ' '\\n' | sort -n))\n    local n=$(echo \"${#l[@]}\" | bc)\n    local m=$(echo\
    \ \"$n / 2\" | bc)\n    if [ $(echo \"$n % 2\" | bc) -eq 0 ]; then\n        echo\
    \ \"$(echo \"${l[$m]} + ${l[$(echo \"$m - 1\" | bc)]}\" | bc -l) / 2\" | bc -l\n\
    \    else\n        echo \"${l[$m]}\"\n    fi\n}\n\ncandidate() {\n    median \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n\
    \    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n / 2))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n\
    \    local r\n    if (( n % 2 == 1 )); then\n        r=$(echo \"$s\" | sed -n\
    \ \"$((m + 1))p\")\n    else\n        r=$(echo \"$s\" | sed -n \"$((m - 1))p\"\
    \ \"$((m + 1))p\" | awk '{print ($1 + $2) / 2}')\n    fi\n    echo \"$r\"\n}\n\
    \ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sed: can''t read 4p: No such file or directory

    '
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n / 2))\n    local s=${l[$m]}\n    ((n % 2 == 0)) && s=$(echo\
    \ \"scale=1; (${l[$m - 1]} + $s) / 2\" | bc)\n    echo $s\n}\n\ncandidate() {\n\
    \    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=($1)\n  local m=$(( ${#l[@]}\
    \ / 2 ))\n  local s=${l[$m]}\n  (( ${#l[@]} % 2 == 0 )) && (( m-- ))\n  for ((\
    \ i=0; i<=m; i++ )); do\n    (( ${l[$i]} < $s )) && s=${l[$i]}\n  done\n  echo\
    \ $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10\
    \ 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}\
    \ / 2))\n    local s=${l[$m]}\n    if (( ${#l[@]} % 2 == 0 )); then\n        s=$(echo\
    \ \"scale=1; (${l[$m-1]} + $s) / 2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    if ((n%2==0)); then\n       \
    \ s=$(echo \"scale=1; (${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    if ((n%2==0)); then\n       \
    \ s=$(echo \"scale=1; (${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=($1)\n  local m=$((${#l[@]}\
    \ / 2))\n  local s=${l[$m]}\n  if (( ${#l[@]} % 2 == 0 )); then\n    s=$(echo\
    \ \"scale=1; (${l[$m-1]} + $s) / 2\" | bc)\n  fi\n  echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local i\n    local s\n    local sum=0\n    for i in ${l[@]}; do\n       \
    \ sum=$(echo \"$sum + $i\" | bc)\n    done\n    s=$(echo \"$sum / $m\" | bc -l)\n\
    \    echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((\
    \ ${#l[@]} / 2 ))\n    local s=${l[$m]}\n    if (( ${#l[@]} % 2 == 0 )); then\n\
    \        s=$(echo \"scale=1; (${l[$m-1]} + $s) / 2\" | bc)\n    fi\n    echo $s\n\
    }\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=($1)\n  local m=${#l[@]}\n\
    \  local i\n  local j\n  local t\n  for ((i=0; i<m; i++)); do\n    for ((j=i;\
    \ j<m; j++)); do\n      if ((${l[i]} > ${l[j]})); then\n        t=${l[i]}\n  \
    \      l[i]=${l[j]}\n        l[j]=$t\n      fi\n    done\n  done\n  if ((m % 2\
    \ == 1)); then\n    echo ${l[m/2]}\n  else\n    echo $(((${l[m/2-1]} + ${l[m/2]})/2))\n\
    \  fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10\
    \ 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=(\"$@\")\n    local\
    \ m=$(echo \"${#l[@]} / 2\" | bc)\n    local n=$(echo \"${#l[@]} % 2\" | bc)\n\
    \    local s=$(echo \"${l[@]}\" | tr ' ' '\\n' | sort -n)\n    local r=$(echo\
    \ \"$s\" | sed -n \"${m}p\")\n    if [[ $n -eq 0 ]]; then\n        r=$(echo \"\
    $r + $(echo \"$s\" | sed -n \"$(($m + 1))p\")\" | bc)\n        r=$(echo \"$r /\
    \ 2\" | bc -l)\n    fi\n    echo \"$r\"\n}\n\ncandidate() {\n    median \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n  \
    \  [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sed: -e expression #1, char 2: invalid usage of line address 0

    '
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}\
    \ / 2))\n    local s=${l[@]}\n    for ((i=0; i<m; i++)); do\n        s=${s#* }\n\
    \    done\n    if (( ${#l[@]} % 2 == 0 )); then\n        echo \"scale=1; (${l[m-1]}\
    \ + ${s%% *}) / 2\" | bc\n    else\n        echo \"${s%% *}\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    ((n%2)) && s=$(echo \"scale=1;(${l[$((m-1))]}+$s)/2\"\
    \ | bc)\n    echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    if ((n%2==0)); then\n       \
    \ s=$(echo \"scale=1;(${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local n=$((m/2))\n    local o=$((n-1))\n    local p=$((n+1))\n    local q=$((m%2))\n\
    \    local r=$(echo \"${l[$n]} + ${l[$o]} + ${l[$p]}\" | bc)\n    local s=$(echo\
    \ \"$r / 3\" | bc -l)\n    echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n / 2))\n    local s=${l[@]}\n    local t\n    for ((i = 0; i\
    \ < m; i++)); do\n        t=${s#* }\n        s=${s% $t}\n    done\n    if ((n\
    \ % 2 == 0)); then\n        echo \"scale=1; (${s% } + ${t% }) / 2\" | bc\n   \
    \ else\n        echo $s\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}/2))\n\
    \    local s=${l[$m]}\n    if ((${#l[@]}%2==0)); then\n        ((m--))\n     \
    \   s=$(echo \"scale=1;(${l[$m]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    if ((n%2==0)); then\n       \
    \ s=$(echo \"scale=1;(${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n / 2))\n    local s=${l[$m]}\n    if ((n % 2 == 0)); then\n \
    \       s=$(echo \"scale=1; (${l[$m-1]} + $s) / 2\" | bc)\n    fi\n    echo \"\
    $s\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10\
    \ 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local s\n    local i\n    for ((i=0; i<m; i++)); do\n        s+=\"${l[i]}\
    \ \"\n    done\n    echo $(echo \"$s\" | tr ' ' '\\n' | sort -n | awk '{a[NR]=$0}\
    \ END{print a[int(NR/2)]}')\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((\
    \ ${#l[@]} / 2 ))\n    local s=${l[$m]}\n    if (( ${#l[@]} % 2 == 0 )); then\n\
    \        s=$(echo \"scale=1; (${l[$m-1]} + $s) / 2\" | bc)\n    fi\n    echo $s\n\
    }\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}/2))\n\
    \    local s=${l[@]}\n    for ((i=0; i<m; i++)); do\n        s=${s#* }\n    done\n\
    \    echo $(echo \"${s%% *} + ${s#* }\" | bc -l)/2 | bc -l\n}\n\ncandidate() {\n\
    \    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    (standard_in) 1: syntax error

    '
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local s=0\n    local t=0\n \
    \   local n=0\n    local p=0\n    local q=0\n    local r=0\n    local x=0\n  \
    \  local y=0\n    local z=0\n    local a=0\n    local b=0\n    local c=0\n   \
    \ local d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n    local\
    \ u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n\
    \    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx\n}\n\ncandidate() {\n    median \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n  \
    \  [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local i=0\n    local j=0\n    local s=0\n    local t=0\n    for i in ${l[@]};\
    \ do\n        for j in ${l[@]}; do\n            if (( i < j )); then\n       \
    \         (( s++ ))\n            elif (( i > j )); then\n                (( t++\
    \ ))\n            fi\n        done\n        if (( s == t )); then\n          \
    \  echo $i\n            return\n        fi\n        (( s = 0 ))\n        (( t\
    \ = 0 ))\n    done\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local l_len=${#l[@]}\n\
    \    local m=$((l_len / 2))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort\
    \ -n)\n    local s_arr=($s)\n    if ((l_len % 2 == 0)); then\n        echo \"\
    $(echo \"scale=1; (${s_arr[m-1]} + ${s_arr[m]}) / 2\" | bc -l)\"\n    else\n \
    \       echo \"${s_arr[m]}\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[\
    \ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\")\
    \ = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"\
    8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local i=0\n    local j=0\n    local tmp=0\n    local m=0\n    local m1=0\n\
    \    local m2=0\n    local r=0\n    local r1=0\n    local r2=0\n    local r3=0\n\
    \    local r4=0\n    local r5=0\n    local r6=0\n    local r7=0\n    local r8=0\n\
    \    local r9=0\n    local r10=0\n    local r11=0\n    local r12=0\n    local\
    \ r13=0\n    local r14=0\n    local r15=0\n    local r16=0\n    local r17=0\n\
    \    local r18=0\n    local r19=0\n    local r20=0\n    local r21=0\n    local\
    \ r22=0\n    local r23=0\n    local r24=0\n    local r25=0\n    local r26=0\n\
    \    local r27=0\n    local r28=0\n    local r29=0\n    local r30=0\n    local\
    \ r31=0\n    local r32=0\n    local r33=0\n    local r34=0\n    local r35=0\n\
    \    local r36=0\n    local r37=0\n    local r38=0\n    local r39=0\n    local\
    \ r40=0\n    local r41=0\n    local r42=0\n    local r43=0\n    local r44=0\n\
    \    local r45=0\n    local r46=0\n    local r47=0\n    local r48=0\n    local\
    \ r49=0\n    local r50=0\n    local r51=0\n    local r52=0\n    local r53=0\n\
    \    local r54=0\n    local r55=0\n    local r56=0\n    local r57=0\n    local\
    \ r58=0\n    local r59=0\n    local r60=0\n    local r61=0\n    local r62=0\n\
    \    local r63=0\n    local r64=0\n\n}\n\ncandidate() {\n    median \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($(echo \"$1\" | tr\
    \ ' ' '\\n' | sort -n))\n    local m=$(echo \"${#l[@]}\" | awk '{print int($1/2)}')\n\
    \    if (( ${#l[@]} % 2 == 0 )); then\n        echo \"$(echo \"${l[$m-1]} + ${l[$m]}\"\
    \ | bc -l) / 2\" | bc -l\n    else\n        echo \"${l[$m]}\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((\
    \ ${#l[@]} / 2 ))\n    if (( ${#l[@]} % 2 == 0 )); then\n        echo \"$(echo\
    \ \"scale=1; (${l[$m]} + ${l[$((m-1))]})/2\" | bc)\"\n    else\n        echo \"\
    ${l[$m]}\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((\
    \ ${#l[@]} / 2 ))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n   \
    \ local r=$(echo \"$s\" | sed -n \"${m}p\")\n    if (( ${#l[@]} % 2 == 0 )); then\n\
    \        local r2=$(echo \"$s\" | sed -n \"$(( $m - 1 ))p\")\n        echo \"\
    scale=1; ($r + $r2) / 2\" | bc\n    else\n        echo \"$r\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    if ((n%2==0)); then\n       \
    \ s=$(echo \"scale=1;(${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    if ((n%2==0)); then\n       \
    \ s=$(echo \"scale=1; (${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo \"$s\"\n}\n\n\
    candidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$(((${#l[@]}\
    \ + 1) / 2))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n    echo\
    \ $(echo \"$s\" | sed -n \"${m}p\")\n}\n\ncandidate() {\n    median \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}/2))\n\
    \    local s=$(echo \"${l[@]}\" | tr ' ' '\\n' | sort -n)\n    local i=0\n   \
    \ for n in $s; do\n        if [ $i -eq $m ]; then\n            echo $n\n     \
    \       break\n        fi\n        i=$(($i+1))\n    done\n}\n\ncandidate() {\n\
    \    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=$1\n  local -a a=($l)\n\
    \  local n=${#a[@]}\n  local -a b=($(printf \"%s\\n\" \"${a[@]}\" | sort -n))\n\
    \  if ((n % 2 == 1)); then\n    echo ${b[$((n / 2))]}\n  else\n    echo $(((${b[$((n\
    \ / 2 - 1))]} + ${b[$((n / 2))]}) / 2))\n  fi\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local i\n\
    \    local m\n    local n\n    local s\n    local t\n\n    # Sort the list\n \
    \   for ((i=0; i<${#l[@]}; i++)); do\n        for ((j=i+1; j<${#l[@]}; j++));\
    \ do\n            if ((${l[i]} > ${l[j]})); then\n                t=${l[i]}\n\
    \                l[i]=${l[j]}\n                l[j]=$t\n            fi\n     \
    \   done\n    done\n\n    # Get the median\n    n=${#l[@]}\n    m=$((n/2))\n \
    \   if ((n%2 == 0)); then\n        s=$(echo \"scale=1; (${l[m-1]} + ${l[m]})/2\"\
    \ | bc)\n    else\n        s=${l[m]}\n    fi\n    echo $s\n}\n\ncandidate() {\n\
    \    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=($1)\n  local n=${#l[@]}\n\
    \  local m=$((n/2))\n  local s=${l[$m]}\n  if ((n%2==0)); then\n    s=$(echo \"\
    scale=1; (${l[$m-1]}+$s)/2\" | bc)\n  fi\n  echo $s\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($@)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=$(echo \"${l[@]}\" | tr ' ' '\\n' | sort -n\
    \ | sed -n \"$m p\")\n    if ((n%2==0)); then\n        local s2=$(echo \"${l[@]}\"\
    \ | tr ' ' '\\n' | sort -n | sed -n \"$((m-1)) p\")\n        echo \"scale=1; ($s+$s2)/2\"\
    \ | bc\n    else\n        echo \"$s\"\n    fi\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=($1)\n  local m=$((${#l[@]}\
    \ / 2))\n  local s=${l[$m]}\n  if (( ${#l[@]} % 2 == 0 )); then\n    s=$(echo\
    \ \"scale=1; (${l[$m-1]} + $s) / 2\" | bc)\n  fi\n  echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    ((n%2)) && s=$(echo \"scale=1;(${l[$((m-1))]}+$s)/2\"\
    \ | bc)\n    echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local i=$((m/2))\n    local j=$((i-1))\n    local k=$((i+1))\n    local s=${l[$i]}\n\
    \    if ((m%2==0)); then\n        s=$(echo \"scale=1; (${l[$j]}+${l[$k]})/2\"\
    \ | bc)\n    fi\n    echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    if ((n%2==0)); then\n       \
    \ s=$(echo \"scale=1;(${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($(echo \"$1\" | tr\
    \ ' ' '\\n' | sort -n))\n    local n=$(echo \"${#l[@]}\" | bc)\n    local m=$(echo\
    \ \"$n/2\" | bc)\n    if [ $((n%2)) -eq 0 ]; then\n        echo \"$(echo \"${l[$m-1]}+${l[$m]}\"\
    \ | bc -l)/2\" | bc -l\n    else\n        echo \"${l[$m]}\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local l_len=${#l[@]}\n\
    \    local m=$((l_len / 2))\n    local s=${l[@]}\n    local m_val=0\n    local\
    \ m_val_prev=0\n    local m_val_next=0\n    local m_val_prev_prev=0\n    local\
    \ m_val_next_next=0\n    local m_val_prev_prev_prev=0\n    local m_val_next_next_next=0\n\
    \    local m_val_prev_prev_prev_prev=0\n    local m_val_next_next_next_next=0\n\
    \    local m_val_prev_prev_prev_prev_prev=0\n    local m_val_next_next_next_next_next=0\n\
    \    local m_val_prev_prev_prev_prev_prev_prev=0\n    local m_val_next_next_next_next_next_next=0\n\
    \    local m_val_prev_prev_prev_prev_prev_prev_prev=0\n    local m_val_next_next_next_next_next_next_next=0\n\
    \    local m_val_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local m_val_next_next_next_next_next_next_next_next=0\n\
    \    local m_val_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local m_val_next_next_next_next_next_next_next_next_next=0\n\
    \    local m_val_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local\
    \ m_val_next_next_next_next_next_next_next_next_next_next=0\n    local m_val_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local m_val_next_next_next_next_next_next_next_next_next_next_next=0\n  \
    \  local m_val_prev_prev_prev_prev_prev_prev_prev_\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((\
    \ ${#l[@]} / 2 ))\n    local s=${l[*]}\n    local i\n    for i in $(seq 0 $m);\
    \ do\n        s=${s#* }\n    done\n    echo \"${s%% *}\"\n}\n\ncandidate() {\n\
    \    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local n=$((m/2))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n\
    \    if ((m%2==0)); then\n        echo \"$((($(echo \"$s\" | sed -n \"$((n+1))p\"\
    )+$(echo \"$s\" | sed -n \"$((n))p\"))/2))\"\n    else\n        echo \"$(echo\
    \ \"$s\" | sed -n \"$((n+1))p\")\"\n    fi\n}\n\ncandidate() {\n    median \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n\
    \    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=($1)\n  local l_len=${#l[@]}\n\
    \  local l_mid=$((l_len / 2))\n  local l_sorted=($(printf \"%s\\n\" \"${l[@]}\"\
    \ | sort -n))\n  if ((l_len % 2 == 0)); then\n    echo \"$(bc -l <<< \"scale=1;\
    \ (${l_sorted[l_mid - 1]} + ${l_sorted[l_mid]}) / 2\")\"\n  else\n    echo \"\
    ${l_sorted[l_mid]}\"\n  fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    if ((n%2==0)); then\n       \
    \ s=$(echo \"scale=1; (${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local n=$((m/2))\n    local s=($(sort -n <<< \"${l[*]}\"))\n    if ((m%2==0));\
    \ then\n        echo \"$(((s[n-1]+s[n])/2))\"\n    else\n        echo \"${s[n]}\"\
    \n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    if ((n%2==0)); then\n       \
    \ s=$(echo \"scale=1;(${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}\
    \ / 2))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n    local r\n\
    \    if ((${#l[@]} % 2 == 1)); then\n        r=$(echo \"$s\" | sed -n \"${m}p\"\
    )\n    else\n        r=$(echo \"$s\" | sed -n \"${m}p;${m}q\" | awk '{print ($1\
    \ + $2) / 2}')\n    fi\n    echo \"$r\"\n}\n\ncandidate() {\n    median \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n  \
    \  [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=(\"$@\")\n    local\
    \ n=${#l[@]}\n    local i\n    local m\n    local s\n    local t\n    local p\n\
    \    local q\n    local r\n    local j\n    local k\n    local x\n    local y\n\
    \    local z\n    local v\n    local w\n    local u\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local p1\n    local p2\n    local p3\n    local p4\n    local p5\n    local\
    \ p6\n    local p7\n    local p8\n    local p9\n    local p10\n    local p11\n\
    \    local p12\n    local p13\n    local p14\n    local p15\n    local p16\n \
    \   local p17\n    local p18\n    local p19\n    local p20\n    local p21\n  \
    \  local p22\n    local p23\n    local p24\n    local p25\n    local p26\n   \
    \ local p27\n    local p28\n    local p29\n    local p30\n    local p31\n    local\
    \ p32\n    local p33\n    local p34\n    local p35\n    local p36\n    local p37\n\
    \    local p38\n    local p39\n    local p40\n    local p41\n    local p42\n \
    \   local p43\n    local p44\n    local p45\n    local p46\n    local p47\n  \
    \  local p48\n    local p49\n    local p50\n    local p51\n    local p52\n   \
    \ local p53\n    local p54\n    local p55\n    local p56\n    local p57\n    local\
    \ p58\n    local p59\n    local p60\n    local p61\n    local p62\n    local p63\n\
    \    local p64\n    local p65\n    local p66\n    local p67\n    local p68\n \
    \   local p69\n    local p70\n    local p71\n    local p72\n    local p73\n  \
    \  local p74\n    local p75\n    local p76\n    local p77\n    local p78\n   \
    \ local p79\n    local p80\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s\n    local i\n    for i in \"${l[@]}\"; do\n\
    \        s+=$i\n    done\n    if (( n % 2 == 1 )); then\n        echo \"${l[$m]}\"\
    \n    else\n        echo \"$(echo \"scale=1; (${l[$m-1]} + ${l[$m]})/2\" | bc)\"\
    \n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local n=$((m/2))\n    local r=$(echo \"${l[@]}\" | tr ' ' '\\n' | sort -n\
    \ | awk \"NR==$n\")\n    if ((m%2==0)); then\n        local r2=$(echo \"${l[@]}\"\
    \ | tr ' ' '\\n' | sort -n | awk \"NR==$((n+1))\")\n        r=$(echo \"scale=1;\
    \ ($r+$r2)/2\" | bc)\n    fi\n    echo \"$r\"\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    l=($1)\n    n=${#l[@]}\n  \
    \  if (( n == 0 )); then\n        echo 0\n    elif (( n == 1 )); then\n      \
    \  echo ${l[0]}\n    else\n        l=($(printf \"%s\\n\" \"${l[@]}\" | sort -n))\n\
    \        if (( n % 2 == 1 )); then\n            echo ${l[n/2]}\n        else\n\
    \            echo $(( (${l[n/2-1]} + ${l[n/2]}) / 2 ))\n        fi\n    fi\n}\n\
    \ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=$(echo $1 | tr ' '\
    \ '\\n' | sort -n)\n    local n=$(echo $l | wc -w)\n    local m=$((n/2))\n   \
    \ echo $l | cut -d' ' -f$((m+1))\n}\n\ncandidate() {\n    median \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local i=$((n/2))\n    local m\n    if ((n%2==0)); then\n        m=$(echo\
    \ \"scale=1; (${l[i-1]}+${l[i]})/2\" | bc)\n    else\n        m=${l[i]}\n    fi\n\
    \    echo $m\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}\
    \ / 2))\n    local s=${l[$m]}\n    if (( ${#l[@]} % 2 == 0 )); then\n        s=$(echo\
    \ \"scale=1; (${l[$m-1]} + $s) / 2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}/2))\n\
    \    local s=${l[$m]}\n    if (( ${#l[@]}%2 == 0 )); then\n        s=$(echo \"\
    scale=1; (${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate() {\n\
    \    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    if ((n%2==0)); then\n       \
    \ s=$(echo \"scale=1; (${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local i\n    local j\n    local t\n    for ((i=0; i<n;\
    \ i++)); do\n        for ((j=i+1; j<n; j++)); do\n            if ((${l[i]} > ${l[j]}));\
    \ then\n                t=${l[i]}\n                l[i]=${l[j]}\n            \
    \    l[j]=$t\n            fi\n        done\n    done\n    if ((n%2)); then\n \
    \       echo ${l[m]}\n    else\n        echo $(((${l[m-1]}+${l[m]})/2))\n    fi\n\
    }\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}\
    \ / 2))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n    local v=($s)\n\
    \    if (( ${#l[@]} % 2 == 1 )); then\n        echo ${v[$m]}\n    else\n     \
    \   echo $(( (${v[$m-1]} + ${v[$m]}) / 2 ))\n    fi\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n / 2))\n    local s=${l[$m]}\n    if ((n % 2 == 0)); then\n \
    \       s=$(echo \"scale=1; (${l[$m-1]} + $s) / 2\" | bc)\n    fi\n    echo $s\n\
    }\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=($1)\n  local n=${#l[@]}\n\
    \  local m=$((n/2))\n  local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n  local\
    \ r=$(echo \"$s\" | sed -n \"$((m+1))p\")\n  if ((n%2==0)); then\n    r=$(echo\
    \ \"$s\" | sed -n \"$m,$((m+1))p\" | awk '{print ($1+$2)/2}')\n  fi\n  echo \"\
    $r\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10\
    \ 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}\
    \ / 2))\n    local s=${l[$m]}\n    if (( ${#l[@]} % 2 == 0 )); then\n        s=$(echo\
    \ \"scale=1; (${l[$m-1]} + $s) / 2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s\n    if ((n%2==0)); then\n        s=$(echo\
    \ \"scale=1;(${l[m-1]}+${l[m]})/2\" | bc)\n    else\n        s=${l[m]}\n    fi\n\
    \    echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    if ((n%2==0)); then\n       \
    \ s=$(echo \"scale=1; (${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=$1\n    local n=$(echo\
    \ \"$l\" | wc -w)\n    local m=$((n/2))\n    local s=$(echo \"$l\" | sort -n)\n\
    \    if ((n%2==0)); then\n        echo \"$s\" | awk -v m=$m '{print ($m+$(m+1))/2}'\n\
    \    else\n        echo \"$s\" | awk -v m=$m '{print $m}'\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=($(echo \"$1\" | tr '\
    \ ' '\\n' | sort -n))\n  local m=$((${#l[@]} / 2))\n  if (( ${#l[@]} % 2 == 0\
    \ )); then\n    echo \"$((${l[$m-1]} + ${l[$m]})) / 2.0\" | bc -l\n  else\n  \
    \  echo \"${l[$m]}\"\n  fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    if ((n%2==0)); then\n       \
    \ s=$(echo \"scale=1;(${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    if ((n%2==0)); then\n       \
    \ s=$(echo \"scale=1;(${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=($1)\n  local m=${#l[@]}\n\
    \  local i\n  local sum=0\n  for i in \"${l[@]}\"; do\n    sum=$(echo \"$sum +\
    \ $i\" | bc)\n  done\n  echo \"$sum / $m\" | bc -l\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=$1\n    local -a a=($l)\n\
    \    local n=${#a[@]}\n    local m=$((n/2))\n    local -a b=($(sort -n <<<\"${a[*]}\"\
    ))\n    if ((n%2==1)); then\n        echo ${b[$m]}\n    else\n        echo \"\
    $(bc -l <<<\"(${b[$m-1]}+${b[$m]})/2\")\"\n    fi\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}\
    \ / 2))\n    local s=${l[$m]}\n    if (( ${#l[@]} % 2 == 0 )); then\n        s=$(echo\
    \ \"scale=1; (${l[$m-1]} + $s) / 2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    if ((n%2==0)); then\n       \
    \ s=$(echo \"scale=1; (${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}/2))\n\
    \    local s=${l[$m]}\n    if (( ${#l[@]}%2 == 0 )); then\n        s=$(echo \"\
    scale=1;(${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate() {\n \
    \   median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014321
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local n=$((m/2))\n    local s=$(echo \"${l[@]}\" | tr ' ' '\\n' | sort -n\
    \ | tr '\\n' ' ')\n    if ((m%2==0)); then\n        echo \"$(((l[n-1]+l[n])/2))\"\
    \n    else\n        echo \"${l[n]}\"\n    fi\n}\n\ncandidate() {\n    median \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n\
    \    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n / 2))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n\
    \    local r\n    if ((n % 2 == 0)); then\n        r=$(echo \"${s[m-1]}\" \"${s[m]}\"\
    \ | awk '{print ($1 + $2) / 2}')\n    else\n        r=${s[m]}\n    fi\n    echo\
    \ \"$r\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local -a l=($1)\n  local -a s\n\
    \  local -a m\n  local -a e\n  local -a t\n  local -a r\n  local -a n\n  local\
    \ -a a\n  local -a b\n  local -a c\n  local -a d\n  local -a f\n  local -a g\n\
    \  local -a h\n  local -a i\n  local -a j\n  local -a k\n  local -a l\n  local\
    \ -a m\n  local -a n\n  local -a o\n  local -a p\n  local -a q\n  local -a r\n\
    \  local -a s\n  local -a t\n  local -a u\n  local -a v\n  local -a w\n  local\
    \ -a x\n  local -a y\n  local -a z\n  local -a A\n  local -a B\n  local -a C\n\
    \  local -a D\n  local -a E\n  local -a F\n  local -a G\n  local -a H\n  local\
    \ -a I\n  local -a J\n  local -a K\n  local -a L\n  local -a M\n  local -a N\n\
    \  local -a O\n  local -a P\n  local -a Q\n  local -a R\n  local -a S\n  local\
    \ -a T\n  local -a U\n  local -a V\n  local -a W\n  local -a X\n  local -a Y\n\
    \  local -a Z\n  local -a aa\n  local -a ab\n  local -a ac\n  local -a ad\n  local\
    \ -a ae\n  local -a af\n  local -a ag\n  local -a ah\n  local -a ai\n  local -a\
    \ aj\n  local -a ak\n  local -a al\n  local -a am\n  local -a an\n  local -a ao\n\
    \  local -a ap\n  local -a aq\n  local -a ar\n  local -a as\n  local -a at\n \
    \ local -a au\n  local -a av\n  local -a aw\n  local -a ax\n  local -a ay\n  local\
    \ -\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10\
    \ 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014322

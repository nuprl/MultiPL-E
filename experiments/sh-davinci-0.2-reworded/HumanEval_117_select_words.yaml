name: HumanEval_117_select_words
language: sh
prompt: "#!/bin/bash\n# Given a string s and a natural number n, you have been tasked\
  \ to implement \n# a function that returns a list of all words from string s that\
  \ contain exactly \n# n consonants, in order these words appear in the string s.\n\
  # If the string s is empty then the function should return an empty list.\n# Note:\
  \ you may assume the input string contains only letters and spaces.\n# Examples:\n\
  # >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"']\n# >>>\
  \ $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"lamb\"']\n\
  # >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words \"\
  Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\" \"3\"\
  )\n# ['\"Uncle\"']\n#\n# $1 is a string\n# $2 is an integer\nselect_words() {\n"
tests: "}\n\ncandidate() {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n \
  \   [[ $(candidate \"Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate\
  \ \"Mary had a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple\
  \ white space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"\
  world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate\
  \ \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\"\
  \ ]]\n}\n\nrun_test"
completions: ["    local s=$1\n    local n=$2\n    local words=$(echo $s | tr ' '\
    \ '\\n')\n    local result=()\n    for word in $words; do\n        local count=$(echo\
    \ $word | grep -o '[^aeiouAEIOU]' | wc -l)\n        if [ $count -eq $n ]; then\n\
    \            result+=($word)\n        fi\n    done\n    echo ${result[@]}", " \
    \   local -a words\n    local -a consonants\n    local -a vowels\n    local -a\
    \ result\n    local word\n    local count\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local c\n    local v\n    local\
    \ -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local\
    \ -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local\
    \ -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local\
    \ -i x\n    local -i y\n    local -i z\n    local -i c\n    local -i v\n    local\
    \ -i count\n    local -i length\n    local -i word_length\n    local -i consonant_count\n\
    \    local -i vowel_count\n    local -i consonant_length\n    local -i vowel_length\n\
    \    local -i result_length\n    local -i result_count\n    local -i result_index\n\
    \    local -i result_word_length\n    local -i result_word_count\n    local -i\
    \ result_word_index\n    local -i result_word_char_index\n    local -i result_word_char_count\n\
    \    local -i result_word_char_length\n    local -i result_word_char_index\n \
    \   local -i result_word_char_count\n    local -i result_word_char_length\n  \
    \  local -i result_word_char_index\n    local -i result_word_char_count\n    local\
    \ -i result_word_char_length\n    local -i result_word_char_index\n    local -i\
    \ result_word_char_count\n    local -i result_word_char_length\n    local -i result_word_char_index\n\
    \    local -i result_word_char_count\n   ", "    local -a words\n    local -a\
    \ consonants\n    local -a vowels\n    local -a result\n    local word\n    local\
    \ i\n    local j\n    local k\n    local count\n    local -i n\n    local -i len\n\
    \    local -i len_consonants\n    local -i len_vowels\n    local -i len_result\n\
    \    local -i len_word\n    local -i len_words\n    local -i len_consonants_word\n\
    \    local -i len_vowels_word\n    local -i len_result_word\n    local -i len_words_word\n\
    \    local -i len_consonants_words\n    local -i len_vowels_words\n    local -i\
    \ len_result_words\n    local -i len_words_words\n    local -i len_consonants_consonants\n\
    \    local -i len_vowels_consonants\n    local -i len_result_consonants\n    local\
    \ -i len_words_consonants\n    local -i len_consonants_vowels\n    local -i len_vowels_vowels\n\
    \    local -i len_result_vowels\n    local -i len_words_vowels\n    local -i len_consonants_result\n\
    \    local -i len_vowels_result\n    local -i len_result_result\n    local -i\
    \ len_words_result\n    local -i len_consonants_i\n    local -i len_vowels_i\n\
    \    local -i len_result_i\n    local -i len_words_i\n    local -i len_consonants_j\n\
    \    local -i len_vowels_j\n    local -i len_result_j\n    local -i len_words_j\n\
    \    local -i len_consonants_k\n    local -i len_vowels_k\n    local -i len_result_k\n\
    \    local -i len_words_k\n    local -i len_consonants_count\n    local -i len_vowels_count\n\
    \    local -i len_result_count\n    local -i len_words", "    local string=\"\
    $1\"\n    local n=\"$2\"\n    local words\n    local word\n    local consonants\n\
    \    local consonant\n    local result\n    words=$(echo \"$string\" | tr ' '\
    \ '\\n')\n    for word in $words; do\n        consonants=$(echo \"$word\" | grep\
    \ -o '[^aeiouAEIOU]' | wc -l)\n        if [ \"$consonants\" -eq \"$n\" ]; then\n\
    \            result=\"$result \\\"$word\\\"\"\n        fi\n    done\n    echo\
    \ \"[$result]\"", "    # your code here\n    echo \"Not implemented\"", "    #\
    \ TODO: implement this function\n    echo \"Not implemented\"", "    local -a\
    \ words\n    local -a consonants=(\"b\" \"c\" \"d\" \"f\" \"g\" \"h\" \"j\" \"\
    k\" \"l\" \"m\" \"n\" \"p\" \"q\" \"r\" \"s\" \"t\" \"v\" \"w\" \"x\" \"y\" \"\
    z\")\n    local -a vowels=(\"a\" \"e\" \"i\" \"o\" \"u\")\n    local -a word\n\
    \    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i\
    \ m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local\
    \ -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local\
    \ -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i consonant_count\n\
    \    local -i word_count\n    local -i word_length\n    local -i word_index\n\
    \    local -i word_index_start\n    local -i word_index_end\n    local -i word_index_length\n\
    \    local -i word_index_length_start\n    local -i word_index_length_end\n  \
    \  local -i word_index_length_length\n    local -i word_index_length_length_start\n\
    \    local -i word_index_length_length_end\n    local -i word_index_length_length_length\n\
    \    local -i word_index_length_length_length_start\n    local -i word_index_length_length_length_end\n\
    \    local -i word_index_length_length_length_length\n    local -i word_index_length_length_length_length_start\n\
    \    local -i word_index_length_length_length_length_end\n    local -i word_index_length_length_length_length_length\n\
    \    local -i word_index_length_length_length_length_length_start\n    local -i\
    \ word_index_length_length_length_length_length_end\n    local -i word_index_length_length_length_",
  "    local -a words=()\n    local -a consonants=(\"b\" \"c\" \"d\" \"f\" \"g\" \"\
    h\" \"j\" \"k\" \"l\" \"m\" \"n\" \"p\" \"q\" \"r\" \"s\" \"t\" \"v\" \"w\" \"\
    x\" \"y\" \"z\")\n    local -a vowels=(\"a\" \"e\" \"i\" \"o\" \"u\")\n    local\
    \ -a word_consonants=()\n    local -a word_vowels=()\n    local word=\"\"\n  \
    \  local word_consonants_count=0\n    local word_vowels_count=0\n    local consonants_count=$2\n\
    \    local word_count=0\n    local word_index=0\n    local word_length=0\n   \
    \ local word_char=\"\"\n    local word_char_index=0\n    local word_char_count=0\n\
    \    local word_char_is_consonant=0\n    local word_char_is_vowel=0\n    local\
    \ word_char_is_consonant_or_vowel=0\n    local word_char_is_consonant_or_vowel_index=0\n\
    \    local word_char_is_consonant_or_vowel_count=0\n    local word_char_is_consonant_or_vowel_char=\"\
    \"\n    local word_char_is_consonant_or_vowel_char_index=0\n    local word_char_is_consonant_or_vowel_char_count=0\n\
    \    local word_char_is_consonant_or_vowel_char_is_consonant=0\n    local word_char_is_consonant_or_vowel_char_is_vowel=0\n\
    \    local word_char_is_consonant_or_vowel_char_is_consonant_or_vowel=0\n    local\
    \ word_char_is_consonant_or_vowel_char_is_consonant_or_vowel_index=0\n    local\
    \ word_char_is_cons", "    local words=($1)\n    local n=$2\n    local result=()\n\
    \    for word in \"${words[@]}\"; do\n        local consonants=$(echo $word |\
    \ sed -e 's/[aeiou]//g' | wc -c)\n        if [ $consonants -eq $n ]; then\n  \
    \          result+=($word)\n        fi\n    done\n    echo ${result[@]}", "  \
    \  local s=$1\n    local n=$2\n    local words=($(echo \"$s\" | tr ' ' '\\n'))\n\
    \    local result=()\n    for word in \"${words[@]}\"; do\n        local count=$(echo\
    \ \"$word\" | grep -o '[^aeiouAEIOU]' | wc -l)\n        if [ \"$count\" -eq \"\
    $n\" ]; then\n            result+=(\"\\\"$word\\\"\")\n        fi\n    done\n\
    \    echo \"[${result[@]}]\"", "    local string=\"$1\"\n    local num=\"$2\"\n\
    \    local words=($(echo \"$string\" | tr ' ' '\\n'))\n    local result=()\n \
    \   for word in \"${words[@]}\"; do\n        local count=$(echo \"$word\" | grep\
    \ -o '[^aeiouAEIOU]' | wc -l)\n        if [[ \"$count\" -eq \"$num\" ]]; then\n\
    \            result+=(\"\\\"$word\\\"\")\n        fi\n    done\n    echo \"${result[@]}\"",
  "    echo \"$1\" | tr -s ' ' '\\n' | awk -v n=$2 '{\n        gsub(/[aeiou]/,\"\"\
    ,$1);\n        if (length($1) == n) {\n            print \"\\\"\"$1\"\\\"\"\n\
    \        }\n    }'", "  local string=$1\n  local num_consonants=$2\n  local words=$(echo\
    \ $string | tr ' ' '\\n')\n  local result=()\n  for word in $words; do\n    local\
    \ num_consonants_in_word=$(echo $word | grep -o -i '[^aeiouy]' | wc -l)\n    if\
    \ [ $num_consonants_in_word -eq $num_consonants ]; then\n      result+=($word)\n\
    \    fi\n  done\n  echo ${result[@]}", "    local -a words\n    local -a consonants\n\
    \    local -a vowels\n    local -a result\n    local word\n    local consonant_count\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local space\n    local quote\n    local comma\n    local period\n    local\
    \ exclamation\n    local question\n    local dash\n    local colon\n    local\
    \ semicolon\n    local apostrophe\n    local left_paren\n    local right_paren\n\
    \    local left_bracket\n    local right_bracket\n    local left_brace\n    local\
    \ right_brace\n    local left_angle\n    local right_angle\n    local equal\n\
    \    local plus\n    local minus\n    local asterisk\n    local slash\n    local\
    \ backslash\n    local underscore\n    local at\n    local percent\n    local\
    \ dollar\n    local ampersand\n    local caret\n    local tilde\n    local backtick\n\
    \    local pipe\n    local pound\n    local less_than\n    local greater_than\n\
    \    local number_sign\n    local double_quote\n    local backspace\n    local\
    \ tab\n    local newline\n    local carriage_return\n    local form_feed\n   \
    \ local vertical_tab\n    local null\n    local bell\n    local escape\n    local\
    \ delete\n    local ctrl_a\n    local ctrl_b\n    local ctrl_c\n    local ctrl_d\n\
    \    local ctrl_e\n    local ctrl_f\n    local ctrl_g\n    local ctrl_h\n    local\
    \ ctrl_i\n    local ctrl_j\n    local ctrl_k\n    local ctrl_l\n    local ctrl_m\n\
    \    local ctrl_n\n    local ctrl_o\n    local ctrl_p\n    local ctrl_q\n    local\
    \ ctrl_r\n    local ctrl_s\n    local ctrl_t\n    local ctrl_u\n    local ctrl_v\n\
    \    local ctrl_w\n    local c", "    local string=$1\n    local n=$2\n    local\
    \ words=($string)\n    local result=()\n    for word in \"${words[@]}\"; do\n\
    \        local count=0\n        for ((i=0; i<${#word}; i++)); do\n           \
    \ local char=${word:$i:1}\n            if [[ $char =~ [^aeiou] ]]; then\n    \
    \            count=$((count+1))\n            fi\n        done\n        if [[ $count\
    \ -eq $n ]]; then\n            result+=(\"\\\"$word\\\"\")\n        fi\n    done\n\
    \    echo ${result[@]}", "    local str=\"$1\"\n    local n=\"$2\"\n    local\
    \ words=()\n    local word=\"\"\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n_consonants=0\n    local consonants=(\"\
    b\" \"c\" \"d\" \"f\" \"g\" \"h\" \"j\" \"k\" \"l\" \"m\" \"n\" \"p\" \"q\" \"\
    r\" \"s\" \"t\" \"v\" \"w\" \"x\" \"y\" \"z\")\n    local vowels=(\"a\" \"e\"\
    \ \"i\" \"o\" \"u\")\n    local str_len=${#str}\n    local consonants_len=${#consonants[@]}\n\
    \    local vowels_len=${#vowels[@]}\n    local word_len=0\n    local is_consonant=0\n\
    \    local is_vowel=0\n    local is_space=0\n    local is_letter=0\n    local\
    \ is_word=0\n    local is_word_end=0\n    local word_start=0\n    local word_end=0\n\
    \    local word_start_index=0\n    local word_end_index=0\n    local word_len=0\n\
    \    local word_str=\"\"\n    local word_str_len=0\n    local word_str_index=0\n\
    \    local word_str_char=\"\"\n    local word_str_char_len=0\n    local word_str_char_index=0\n\
    \    local word_str_char_is_consonant=0\n    local word_str_char_is_vowel=0\n\
    \    local word_str_char_is_letter=0\n    local word_str_char_is_space=0\n   \
    \ local word_str_char_is_word=0\n    local word_str_char_is_word_end=0\n    local\
    \ word_str_char_is_word_start=0\n    local word_str_char_is_word_start_index=0\n\
    \    local word_str_char_is_word_end_index=0\n    local word", "    local string=$1\n\
    \    local num=$2\n    local words=($string)\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=0\n        for (( i=0; i<${#word};\
    \ i++ )); do\n            if [[ ${word:$i:1} =~ [bcdfghjklmnpqrstvwxyz] ]]; then\n\
    \                (( count++ ))\n            fi\n        done\n        if [[ $count\
    \ -eq $num ]]; then\n            result+=(\\\"$word\\\")\n        fi\n    done\n\
    \    echo ${result[@]}", "    local string=\"$1\"\n    local n=\"$2\"\n    local\
    \ words=($(echo \"$string\" | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo \"$word\" | tr -cd '[bcdfghjklmnpqrstvwxyz]'\
    \ | wc -c)\n        if [ \"$consonants\" -eq \"$n\" ]; then\n            result+=(\"\
    \\\"$word\\\"\")\n        fi\n    done\n    echo \"${result[@]}\"", "    local\
    \ string=$1\n    local n=$2\n    local words=($string)\n    local result=()\n\
    \    for word in \"${words[@]}\"; do\n        if [[ $(consonants_count $word)\
    \ -eq $n ]]; then\n            result+=(\"$word\")\n        fi\n    done\n   \
    \ echo \"${result[@]}\"", "    local str=$1\n    local n=$2\n    local words=($(echo\
    \ $str | tr ' ' '\\n'))\n    local result=()\n    for word in ${words[@]}; do\n\
    \        local count=$(echo $word | grep -o '[^aeiouAEIOU]' | wc -l)\n       \
    \ if [ $count -eq $n ]; then\n            result+=($word)\n        fi\n    done\n\
    \    echo ${result[@]}", "    local string=$1\n    local n=$2\n    local words=$(echo\
    \ $string | tr \" \" \"\\n\")\n    local result=()\n    for word in $words; do\n\
    \        local consonants=$(echo $word | grep -o \"[^aeiouAEIOU]\" | wc -l)\n\
    \        if [ $consonants -eq $n ]; then\n            result+=($word)\n      \
    \  fi\n    done\n    echo ${result[@]}", "    local words=($1)\n    local n=$2\n\
    \    local result=()\n    for word in \"${words[@]}\"; do\n        local consonants=$(echo\
    \ $word | sed -e 's/[^bcdfghjklmnpqrstvwxz]//g')\n        if [ ${#consonants}\
    \ -eq $n ]; then\n            result+=($word)\n        fi\n    done\n    echo\
    \ ${result[@]}", "    local string=$1\n    local number=$2\n    local words=($string)\n\
    \    local result=()\n    for word in \"${words[@]}\"; do\n        local consonants=$(echo\
    \ $word | sed -e 's/[aeiou]//g' | sed -e 's/[^a-zA-Z]//g')\n        if [ ${#consonants}\
    \ -eq $number ]; then\n            result+=(\\\"$word\\\")\n        fi\n    done\n\
    \    echo ${result[@]}", "    local string=$1\n    local num=$2\n    local words=$(echo\
    \ $string | tr \" \" \"\\n\")\n    local result=\"\"\n    for word in $words;\
    \ do\n        local count=$(echo $word | grep -o -i \"[^aeiouy]\" | wc -l)\n \
    \       if [ $count -eq $num ]; then\n            result=\"$result \\\"$word\\\
    \"\"\n        fi\n    done\n    echo \"[$result]\"", "    local string=$1\n  \
    \  local number=$2\n    local words=()\n    local word=()\n    local consonants=()\n\
    \    local consonant=()\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ m=0\n    local n=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n\
    \    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n \
    \   local y=0\n    local z=0\n    local a=0\n    local b=0\n    local c=0\n  \
    \  local d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n   \
    \ local l=0\n    local o=0\n    local result=()\n    local result_string=()\n\
    \    local result_string_length=0\n    local result_string_length_minus_one=0\n\
    \    local result_string_length_minus_two=0\n    local result_string_length_minus_three=0\n\
    \    local result_string_length_minus_four=0\n    local result_string_length_minus_five=0\n\
    \    local result_string_length_minus_six=0\n    local result_string_length_minus_seven=0\n\
    \    local result_string_length_minus_eight=0\n    local result_string_length_minus_nine=0\n\
    \    local result_string_length_minus_ten=0\n    local result_string_length_minus_eleven=0\n\
    \    local result_string_length_minus_twelve=0\n    local result_string_length_minus_thirteen=0\n\
    \    local result_string_length_minus_fourteen=0\n    local result_string_length_minus_fifteen=0\n\
    \    local result_string_length_minus_sixteen=0\n    local result_string_length_minus_seventeen=0\n\
    \    local result_string_length_minus_eighteen=0\n    local result_string_length_minus_nineteen=0\n\
    \    local result_string_length_minus_twenty=0\n    local", "  local string=$1\n\
    \  local n=$2\n  local words=$(echo $string | tr ' ' '\\n')\n  local result=()\n\
    \  for word in $words; do\n    if [[ $(echo $word | grep -o '[^aeiouAEIOU]' |\
    \ wc -l) -eq $n ]]; then\n      result+=(\"\\\"$word\\\"\")\n    fi\n  done\n\
    \  echo ${result[@]}", "    local string=$1\n    local num=$2\n    local words=($string)\n\
    \    local result=()\n    for word in \"${words[@]}\"; do\n        local consonants=$(echo\
    \ $word | tr -cd '[bcdfghjklmnpqrstvwxyz]' | wc -c)\n        if [[ $consonants\
    \ -eq $num ]]; then\n            result+=(\"\\\"$word\\\"\")\n        fi\n   \
    \ done\n    echo ${result[@]}", "    local string=$1\n    local n=$2\n    local\
    \ words=$(echo $string | tr ' ' '\\n')\n    local result=()\n    for word in $words;\
    \ do\n        if [[ $(echo $word | grep -o -P \"[^aeiouAEIOU]\" | wc -l) -eq $n\
    \ ]]; then\n            result+=($word)\n        fi\n    done\n    echo ${result[@]}",
  "    local str=\"$1\"\n    local n=\"$2\"\n    local result=\"\"\n    local word=\"\
    \"\n    local consonants=\"\"\n    local vowels=\"aeiou\"\n    local i=0\n   \
    \ local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local\
    \ o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n\
    \    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n \
    \   local z=0\n    for ((i=0; i<${#str}; i++)); do\n        if [[ \"${str:$i:1}\"\
    \ == \" \" ]]; then\n            if [[ $consonants -eq $n ]]; then\n         \
    \       if [[ $result == \"\" ]]; then\n                    result=\"\\\"$word\\\
    \"\"\n                else\n                    result=\"$result, \\\"$word\\\"\
    \"\n                fi\n            fi\n            word=\"\"\n            consonants=0\n\
    \        else\n            word=\"$word${str:$i:1}\"\n            if [[ \"${str:$i:1}\"\
    \ == \"a\" ]]; then\n                ((a++))\n            elif [[ \"${str:$i:1}\"\
    \ == \"b\" ]]; then\n                ((b++))\n            elif [[ \"${str:$i:1}\"\
    \ == \"c\" ]]; then\n                ((c++))\n            elif [[ \"${str:$i:1}\"\
    \ == \"d\" ]]; then\n                ((d++))\n            elif [[ \"${str:$i:1}\"\
    \ == \"e\" ]]; then\n                ((e++))\n            elif [[ \"${str:$i:1}\"\
    \ == \"f\" ]]; then\n                ((f++))\n            elif [[ \"${str:$i:1}\"\
    \ == \"g\" ]]; then\n                ((g++))\n            elif [[ \"${str:$i:1}\"\
    \ == \"h\" ]]; then\n                ((h++))\n            elif [[ \"${str:$i:1}\"\
    \ == \"i\" ]]; then\n                ((i++))", "    local string=$1\n    local\
    \ n=$2\n    local words\n    local word\n    local consonants\n    local result\n\
    \    words=($(echo $string | tr ' ' '\\n'))\n    for word in \"${words[@]}\";\
    \ do\n        consonants=$(echo $word | grep -o '[^aeiouAEIOU]' | wc -l)\n   \
    \     if [ $consonants -eq $n ]; then\n            result+=\"\\\"$word\\\" \"\n\
    \        fi\n    done\n    echo \"[${result% }]\"", "    local string=$1\n   \
    \ local n=$2\n    local words=($string)\n    local result=()\n    for word in\
    \ \"${words[@]}\"; do\n        local consonants=$(echo $word | sed 's/[aeiou]//gi'\
    \ | wc -m)\n        if [ $consonants -eq $n ]; then\n            result+=(\"\\\
    \"$word\\\"\")\n        fi\n    done\n    echo ${result[@]}", "    local string=\"\
    $1\"\n    local number=\"$2\"\n    local words=($(echo $string | tr ' ' '\\n'))\n\
    \    local result=()\n    for word in \"${words[@]}\"; do\n        local count=$(echo\
    \ $word | tr -cd 'bcdfghjklmnpqrstvwxz' | wc -c)\n        if [[ $count -eq $number\
    \ ]]; then\n            result+=(\"\\\"$word\\\"\")\n        fi\n    done\n  \
    \  echo ${result[@]}", "    echo $1 | tr ' ' '\\n' | grep -E \"^[^aeiou]{$2}$\"\
    \ | tr '\\n' ' ' | sed 's/ $//'", "    local -a words\n    local -a consonants\n\
    \    local word\n    local word_consonants\n    local -i i\n    local -i j\n \
    \   local -i n\n    local -i word_length\n    local -i word_consonants_length\n\
    \    local -i consonants_length\n    local -i words_length\n    local -i words_consonants_length\n\
    \    local -i words_consonants_length_sum\n    local -i words_consonants_length_sum_max\n\
    \    local -i words_consonants_length_sum_max_index\n    local -i words_consonants_length_sum_max_index_prev\n\
    \    local -i words_consonants_length_sum_max_index_prev_prev\n    local -i words_consonants_length_sum_max_index_prev_prev_prev\n\
    \    local -i words_consonants_length_sum_max_index_prev_prev_prev_prev\n    local\
    \ -i words_consonants_length_sum_max_index_prev_prev_prev_prev_prev\n    local\
    \ -i words_consonants_length_sum_max_index_prev_prev_prev_prev_prev_prev\n   \
    \ local -i words_consonants_length_sum_max_index_prev_prev_prev_prev_prev_prev_prev\n\
    \    local -i words_consonants_length_sum_max_index_prev_prev_prev_prev_prev_prev_prev_prev\n\
    \    local -i words_consonants_length_sum_max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev\n\
    \    local -i words_consonants_length_sum_max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n\
    \    local -i words_consonants_length_sum_max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n\
    \    local -i words_consonants_length_sum_max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev",
  "    local -a words\n    local -a consonants\n    local -a vowels\n    local -a\
    \ result\n    local word\n    local letter\n    local count\n    local i\n   \
    \ local j\n    local k\n    local l\n    local m\n    local n\n    local o\n \
    \   local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local space\n\
    \    local -i index\n    local -i number\n    local -i length\n    local -i length_words\n\
    \    local -i length_consonants\n    local -i length_vowels\n    local -i length_result\n\
    \    local -i length_word\n    local -i length_letter\n    local -i length_count\n\
    \    local -i length_i\n    local -i length_j\n    local -i length_k\n    local\
    \ -i length_l\n    local -i length_m\n    local -i length_n\n    local -i length_o\n\
    \    local -i length_p\n    local -i length_q\n    local -i length_r\n    local\
    \ -i length_s\n    local -i length_t\n    local -i length_u\n    local -i length_v\n\
    \    local -i length_w\n    local -i length_x\n    local -i length_y\n    local\
    \ -i length_z\n    local -i length_space\n    local -i length_index\n    local\
    \ -i length_number\n    local -i length_length\n    local -i length_length_words\n\
    \    local -i length_length_consonants\n    local -i length_length_vowels\n  \
    \  local -i length_length_result\n    local -i length_length_word\n    local -i\
    \ length_length_letter\n    local -i length_length_count\n    local -i length_length_i\n\
    \    local -i length_length_j\n    local -i length_length_k\n    local -i length_length_l\n\
    \    local -i length_length_m\n    local -i length_length_n\n    local -i length_length_o",
  "    local string=$1\n    local n=$2\n    local words=()\n    local word\n    local\
    \ consonants\n    for word in $string; do\n        consonants=$(echo $word | sed\
    \ -e 's/[aeiouAEIOU]//g' | wc -c)\n        if [ $consonants -eq $n ]; then\n \
    \           words+=($word)\n        fi\n    done\n    echo ${words[@]}", "   \
    \ echo $1 | tr -s ' ' '\\n' | grep -E \"^[^aeiouAEIOU]*([aeiouAEIOU][^aeiouAEIOU]){$2}[^aeiouAEIOU]*$\"\
    \ | tr -d '\\n' | sed 's/ /\", \"/g' | sed 's/^/\"/' | sed 's/$/\"/'", "    local\
    \ string=$1\n    local n=$2\n    local words=$(echo $string | tr ' ' '\\n')\n\
    \    local result=()\n    for word in $words; do\n        local count=$(echo $word\
    \ | sed 's/[^aeiou]//g' | wc -c)\n        if [ $count -eq $n ]; then\n       \
    \     result+=(\"\\\"$word\\\"\")\n        fi\n    done\n    echo ${result[@]}",
  "    local string=$1\n    local num=$2\n    local words=($string)\n    local result=()\n\
    \    for word in \"${words[@]}\"; do\n        local count=$(echo $word | grep\
    \ -o '[^aeiouAEIOU]' | wc -l)\n        if [ $count -eq $num ]; then\n        \
    \    result+=(\"\\\"$word\\\"\")\n        fi\n    done\n    echo ${result[@]}",
  "    local string=$1\n    local n=$2\n    local words=()\n    local word\n    local\
    \ consonants\n    for word in $string; do\n        consonants=$(echo $word | grep\
    \ -o '[^aeiouAEIOU ]' | wc -l)\n        if [ $consonants -eq $n ]; then\n    \
    \        words+=($word)\n        fi\n    done\n    echo ${words[@]}", "    local\
    \ string=$1\n    local n=$2\n    local words=$(echo $string | tr ' ' '\\n')\n\
    \    local result=()\n    for word in $words; do\n        local consonants=$(echo\
    \ $word | sed 's/[aeiou]//g')\n        if [ ${#consonants} -eq $n ]; then\n  \
    \          result+=(\"\\\"$word\\\"\")\n        fi\n    done\n    echo ${result[@]}",
  "  local string=$1\n  local number=$2\n  local words=()\n  local word=''\n  local\
    \ consonants=0\n  local consonant='[bcdfghjklmnpqrstvwxyz]'\n  local vowel='[aeiou]'\n\
    \  local letter=''\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local\
    \ m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local\
    \ s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local\
    \ y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local\
    \ e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local\
    \ k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local\
    \ q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local\
    \ w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local\
    \ c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local\
    \ i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local\
    \ o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local\
    \ u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local\
    \ a=0\n  local b=0\n  local c=0\n  local d=", "    if [ -z \"$1\" ]; then\n  \
    \      echo \"[]\"\n        return\n    fi\n    echo \"$1\" | tr -s ' ' '\\n'\
    \ | grep -E \"^[^aeiouAEIOU]*([aeiouAEIOU][^aeiouAEIOU]){$2}[^aeiouAEIOU]*$\"\
    \ | tr -d '\\n' | sed -e 's/ /\", \"/g' | sed -e 's/^/[\"/' -e 's/$/\"/'", " \
    \   local string=\"$1\"\n    local n=\"$2\"\n    local words=($(echo \"$string\"\
    \ | tr ' ' '\\n'))\n    local result=()\n    for word in \"${words[@]}\"; do\n\
    \        local consonants=$(echo \"$word\" | tr -cd '[bcdfghjklmnpqrstvwxyz]'\
    \ | wc -c)\n        if [ \"$consonants\" -eq \"$n\" ]; then\n            result+=(\"\
    \\\"$word\\\"\")\n        fi\n    done\n    echo \"${result[@]}\"", "    echo\
    \ $1 | tr -d ' ' | grep -o \"[^aeiouAEIOU]\\{$2\\}\" | tr -d '\\n' | sed 's/\\\
    ([^ ]\\+\\)/\"\\1\"/g'", "    local s=$1\n    local n=$2\n    local words=($(echo\
    \ $s | tr ' ' '\\n'))\n    local result=()\n    for word in \"${words[@]}\"; do\n\
    \        local consonants=$(echo $word | tr -cd '[bcdfghjklmnpqrstvwxyz]' | wc\
    \ -c)\n        if [ $consonants -eq $n ]; then\n            result+=(\"\\\"$word\\\
    \"\")\n        fi\n    done\n    echo ${result[@]}", "    local str=$1\n    local\
    \ n=$2\n    local words=()\n    local word=''\n    local consonants=0\n    local\
    \ i=0\n    local c=''\n    local vowels=('a' 'e' 'i' 'o' 'u')\n    local is_vowel=0\n\
    \    local is_consonant=0\n    local is_space=0\n    local is_quote=0\n    local\
    \ is_word=0\n    local is_first_char=0\n    local is_last_char=0\n    local is_first_word=0\n\
    \    local is_last_word=0\n    local is_first_quote=0\n    local is_last_quote=0\n\
    \    local is_first_space=0\n    local is_last_space=0\n    local is_first_consonant=0\n\
    \    local is_last_consonant=0\n    local is_first_vowel=0\n    local is_last_vowel=0\n\
    \    local is_first_letter=0\n    local is_last_letter=0\n    local is_first_letter_in_word=0\n\
    \    local is_last_letter_in_word=0\n    local is_first_letter_in_quote=0\n  \
    \  local is_last_letter_in_quote=0\n    local is_first_letter_in_space=0\n   \
    \ local is_last_letter_in_space=0\n    local is_first_letter_in_consonant=0\n\
    \    local is_last_letter_in_consonant=0\n    local is_first_letter_in_vowel=0\n\
    \    local is_last_letter_in_vowel=0\n    local is_first_consonant_in_word=0\n\
    \    local is_last_consonant_in_word=0\n    local is_first_consonant_in_quote=0\n\
    \    local is_last_consonant_in_quote=0\n    local is_first_consonant_in_space=0\n\
    \    local is_last_consonant_in_space=0\n    local is_first_vowel_in", "    local\
    \ s=$1\n    local n=$2\n    local words=($(echo $s | tr \" \" \"\\n\"))\n    local\
    \ result=()\n    for word in ${words[@]}; do\n        local consonants=$(echo\
    \ $word | sed -r 's/[^bcdfghjklmnpqrstvwxyz]//g' | tr -d \"aeiou\")\n        if\
    \ [ ${#consonants} -eq $n ]; then\n            result+=($word)\n        fi\n \
    \   done\n    echo ${result[@]}", "    local -a words\n    local -a result\n \
    \   local word\n    local consonants\n    local i\n    words=($(echo \"$1\" |\
    \ tr ' ' '\\n'))\n    for word in \"${words[@]}\"; do\n        consonants=0\n\
    \        for ((i=0; i<${#word}; i++)); do\n            if [[ \"${word:$i:1}\"\
    \ =~ [^aeiou] ]]; then\n                consonants=$((consonants+1))\n       \
    \     fi\n        done\n        if [[ $consonants -eq $2 ]]; then\n          \
    \  result+=(\"\\\"$word\\\"\")\n        fi\n    done\n    echo \"${result[@]}\"",
  "    # Write your code here\n    # To print results to the standard output you can\
    \ use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello world\"", " \
    \   echo $1 | tr -s ' ' '\\n' | grep -E \"^[^aeiou]{$2}$\" | tr -d '\"'", "  \
    \  local string=$1\n    local n=$2\n    local words=($string)\n    local result=()\n\
    \    for word in \"${words[@]}\"; do\n        local consonants=$(echo $word |\
    \ sed -e 's/[aeiou]//gi' | sed -e 's/[^a-zA-Z]//g')\n        if [ ${#consonants}\
    \ -eq $n ]; then\n            result+=(\"\\\"$word\\\"\")\n        fi\n    done\n\
    \    echo ${result[@]}", "    local string=$1\n    local number=$2\n    local\
    \ words=($string)\n    local result=()\n    for word in \"${words[@]}\"; do\n\
    \        local count=0\n        for (( i=0; i<${#word}; i++ )); do\n         \
    \   local char=${word:$i:1}\n            if [[ $char =~ [bcdfghjklmnpqrstvwxyz]\
    \ ]]; then\n                count=$((count+1))\n            fi\n        done\n\
    \        if [[ $count -eq $number ]]; then\n            result+=(\"\\\"$word\\\
    \"\")\n        fi\n    done\n    echo \"${result[@]}\"", "    local string=$1\n\
    \    local n=$2\n    local words=($string)\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo \"$word\" | grep -o\
    \ \"[^aeiouAEIOU ]\" | wc -l)\n        if [ \"$consonants\" -eq \"$n\" ]; then\n\
    \            result+=(\"\\\"$word\\\"\")\n        fi\n    done\n    echo \"[${result[@]}]\"",
  "    # Write your code here\n    # To print results to the standard output you can\
    \ use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello world\"", " \
    \   local -a words=($(echo \"$1\" | tr ' ' '\\n'))\n    local -a result=()\n \
    \   for word in \"${words[@]}\"; do\n        local -i count=0\n        for ((i=0;\
    \ i<${#word}; i++)); do\n            if [[ \"${word:$i:1}\" =~ [^aeiou] ]]; then\n\
    \                ((count++))\n            fi\n        done\n        if [[ $count\
    \ -eq $2 ]]; then\n            result+=(\"\\\"$word\\\"\")\n        fi\n    done\n\
    \    echo \"${result[@]}\"", "    # your code here\n    echo \"Not implemented\"",
  "    local string=$1\n    local number=$2\n    local words=()\n    local word=''\n\
    \    local consonants=0\n    local i=0\n    local c=''\n    local vowels=('a'\
    \ 'e' 'i' 'o' 'u')\n    local is_vowel=0\n    local is_consonant=0\n    local\
    \ is_space=0\n    local is_letter=0\n    local is_word=0\n    local is_consonant_number=0\n\
    \    local is_word_number=0\n    local is_word_number_match=0\n    local is_word_number_mismatch=0\n\
    \    local is_word_number_match_or_mismatch=0\n    local is_word_number_match_and_mismatch=0\n\
    \    local is_word_number_match_and_mismatch_or_consonant_number=0\n    local\
    \ is_word_number_match_and_mismatch_or_consonant_number_and_space=0\n    local\
    \ is_word_number_match_and_mismatch_or_consonant_number_and_space_or_letter=0\n\
    \    local is_word_number_match_and_mismatch_or_consonant_number_and_space_or_letter_or_word=0\n\
    \    local is_word_number_match_and_mismatch_or_consonant_number_and_space_or_letter_or_word_or_word_number=0\n\
    \    local is_word_number_match_and_mismatch_or_consonant_number_and_space_or_letter_or_word_or_word_number_or_word_number_match=0\n\
    \    local is_word_number_match_and_mismatch_or_consonant_number_and_space_or_letter_or_word_or_word_number_or_word_number_match_or_word_number_mismatch=0\n\
    \    local is_word_number_match_and_mismatch_or_consonant_number_and_space_or_letter_or",
  "    # your code here\n    echo \"Not implemented\"", "    local string=$1\n   \
    \ local number=$2\n    local words=$(echo $string | tr \" \" \"\\n\")\n    local\
    \ result=\"\"\n    for word in $words; do\n        local count=$(echo $word |\
    \ grep -o \"[^aeiou]\" | wc -l)\n        if [ $count -eq $number ]; then\n   \
    \         result=\"$result \\\"$word\\\"\"\n        fi\n    done\n    echo \"\
    [$result]\"", "    local string=$1\n    local n=$2\n    local words=($string)\n\
    \    local result=()\n    for word in \"${words[@]}\"; do\n        local consonants=$(echo\
    \ $word | sed 's/[aeiou]//g')\n        if [ ${#consonants} -eq $n ]; then\n  \
    \          result+=($word)\n        fi\n    done\n    echo ${result[@]}", "  \
    \  local string=$1\n    local n=$2\n    local words=($string)\n    local result=()\n\
    \    for word in \"${words[@]}\"; do\n        if [[ $(echo $word | grep -o -E\
    \ '[^aeiouAEIOU]' | wc -l) -eq $n ]]; then\n            result+=(\"\\\"$word\\\
    \"\")\n        fi\n    done\n    echo ${result[@]}", "    local string=$1\n  \
    \  local number=$2\n    local words=$(echo $string | tr ' ' '\\n')\n    local\
    \ result=()\n    for word in $words; do\n        local count=$(echo $word | grep\
    \ -o '[^aeiouAEIOU]' | wc -l)\n        if [[ $count -eq $number ]]; then\n   \
    \         result+=($word)\n        fi\n    done\n    echo ${result[@]}", "   \
    \ local -a words=($(echo $1 | tr ' ' '\\n'))\n    local -a result=()\n    for\
    \ word in \"${words[@]}\"; do\n        local -i count=0\n        for ((i=0; i<${#word};\
    \ i++)); do\n            if [[ \"${word:$i:1}\" =~ [bcdfghjklmnpqrstvwxyz] ]];\
    \ then\n                ((count++))\n            fi\n        done\n        if\
    \ [[ $count -eq $2 ]]; then\n            result+=(\"\\\"$word\\\"\")\n       \
    \ fi\n    done\n    echo \"${result[@]}\"", "    local string=$1\n    local n=$2\n\
    \    local words=($string)\n    local result=()\n    for word in \"${words[@]}\"\
    ; do\n        local consonants=$(echo $word | sed 's/[aeiouAEIOU]//g')\n     \
    \   if [ ${#consonants} -eq $n ]; then\n            result+=(\"$word\")\n    \
    \    fi\n    done\n    echo ${result[@]}", "    local string=\"$1\"\n    local\
    \ n=\"$2\"\n    local words=()\n    local word=\"\"\n    local consonants=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local a=0\n    local e=0\n    local\
    \ i=0\n    local o=0\n    local u=0\n    local space=0\n    local length=0\n \
    \   local char=\"\"\n    local result=\"\"\n    local output=\"\"\n    local word_count=0\n\
    \    local word_index=0\n    local word_length=0\n    local word_char=\"\"\n \
    \   local word_char_index=0\n    local word_char_length=0\n    local word_char_char=\"\
    \"\n    local word_char_char_index=0\n    local word_char_char_length=0\n    local\
    \ word_char_char_char=\"\"\n    local word_char_char_char_index=0\n    local word_char_char_char_length=0\n\
    \    local word_char_char_char_char=\"\"\n    local word_char_char_char_char_index=0\n\
    \    local word_char_char_char_char_length=0\n    local word_char_char_char_char_char=\"\
    \"\n    local word_char_char_char_char_char_index=0\n    local word_char_char_char_char_char_length=0\n\
    \    local word_char_char_char_char_char_char=\"\"\n    local word_char_char_char_char_char_char_index=0\n\
    \    local word_char_char_char_char_char_char_length=0\n    local word_char_char_char_char_char_char_char=\"\
    \"\n    local word_char_char_char_char_char_char_char", "    echo \"$1\" | tr\
    \ ' ' '\\n' | grep -E \"[^aeiou]{$2}\"", "    echo $1 | tr ' ' '\\n' | grep -E\
    \ \"^[^aeiou]{$2}$\" | tr '\\n' ' ' | sed 's/^ *//' | sed 's/ *$//'", "    # Write\
    \ your code here\n    # To print results to the standard output you can use echo\n\
    \    # Example: echo \"Hello world\"\n    echo \"Hello world\"", "    local s=$1\n\
    \    local n=$2\n    local words=()\n    local word=\"\"\n    local consonants=0\n\
    \    local i=0\n    local c=\"\"\n    local vowels=\"aeiou\"\n    local is_vowel=0\n\
    \    local is_consonant=0\n    local is_space=0\n    local is_word=0\n    local\
    \ is_word_end=0\n    local is_word_start=0\n    local is_word_middle=0\n    local\
    \ is_word_found=0\n    local is_word_not_found=0\n    local is_word_found_and_has_n_consonants=0\n\
    \    local is_word_found_and_has_not_n_consonants=0\n    local is_word_not_found_and_has_n_consonants=0\n\
    \    local is_word_not_found_and_has_not_n_consonants=0\n    local is_word_found_and_has_n_consonants_and_is_word_end=0\n\
    \    local is_word_found_and_has_not_n_consonants_and_is_word_end=0\n    local\
    \ is_word_not_found_and_has_n_consonants_and_is_word_end=0\n    local is_word_not_found_and_has_not_n_consonants_and_is_word_end=0\n\
    \    local is_word_found_and_has_n_consonants_and_is_word_middle=0\n    local\
    \ is_word_found_and_has_not_n_consonants_and_is_word_middle=0\n    local is_word_not_found_and_has_n_consonants_and_is_word_middle=0\n\
    \    local is_word_not_found_and_has_not_n_consonants_and_is_word_middle=0\n \
    \   local is_word_found_and_has_n_consonants_and_is_word_start=0\n    local is_word_found_and_has_not_n_",
  "    local s=$1\n    local n=$2\n    local words=($(echo $s | tr ' ' '\\n'))\n \
    \   local result=()\n    for word in \"${words[@]}\"; do\n        local consonants=$(echo\
    \ $word | grep -o '[^aeiouAEIOU]' | wc -l)\n        if [ $consonants -eq $n ];\
    \ then\n            result+=(\"\\\"$word\\\"\")\n        fi\n    done\n    echo\
    \ ${result[@]}", "    local string=$1\n    local num=$2\n    local words=$(echo\
    \ $string | tr ' ' '\\n')\n    local result=()\n    for word in $words; do\n \
    \       local count=$(echo $word | grep -o '[^aeiouAEIOU]' | wc -l)\n        if\
    \ [ $count -eq $num ]; then\n            result+=($word)\n        fi\n    done\n\
    \    echo ${result[@]}", "    local s=$1\n    local n=$2\n    local words=($(echo\
    \ $s | tr ' ' '\\n'))\n    local result=()\n    for word in \"${words[@]}\"; do\n\
    \        local count=$(echo $word | sed -e 's/[^aeiou]//g' | wc -c)\n        if\
    \ [ $count -eq $n ]; then\n            result+=(\"\\\"$word\\\"\")\n        fi\n\
    \    done\n    echo ${result[@]}", "    local -a words\n    local -a consonants\n\
    \    local -a vowels\n    local -a result\n    local word\n    local count\n \
    \   local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local -i num_consonants\n    local -i num_vowels\n    local -i num_letters\n\
    \    local -i num_words\n    local -i num_result\n    local -i num_consonants_in_word\n\
    \    local -i num_vowels_in_word\n    local -i num_letters_in_word\n    local\
    \ -i num_words_in_result\n    local -i num_consonants_in_result\n    local -i\
    \ num_vowels_in_result\n    local -i num_letters_in_result\n    local -i num_words_in_result\n\
    \    local -i num_consonants_in_result\n    local -i num_vowels_in_result\n  \
    \  local -i num_letters_in_result\n    local -i num_words_in_result\n    local\
    \ -i num_consonants_in_result\n    local -i num_vowels_in_result\n    local -i\
    \ num_letters_in_result\n    local -i num_words_in_result\n    local -i num_consonants_in_result\n\
    \    local -i num_vowels_in_result\n    local -i num_letters_in_result\n    local\
    \ -i num_words_in_result\n    local -i num_consonants_in_result\n    local -i\
    \ num_vowels_in_result\n    local -i num_letters_in_result\n    local -i num_words_in_result\n\
    \    local -i num_consonants_in_result\n    local -i num_vowels_in_result\n  \
    \  local -i num_letters_in_result\n    local -i num_words_in", "    if [ -z \"\
    $1\" ]; then\n        echo \"[]\"\n        return\n    fi\n    local words=$(echo\
    \ \"$1\" | tr ' ' '\\n')\n    local result=()\n    for word in $words; do\n  \
    \      local consonants=$(echo \"$word\" | tr -d -c '[^aeiouAEIOU]')\n       \
    \ if [ ${#consonants} -eq $2 ]; then\n            result+=(\"\\\"$word\\\"\")\n\
    \        fi\n    done\n    echo \"[${result[@]}]\"", "    local words=$(echo $1\
    \ | tr ' ' '\\n')\n    local result=()\n    for word in $words; do\n        local\
    \ count=$(echo $word | grep -o '[^aeiouAEIOU]' | wc -l)\n        if [ $count -eq\
    \ $2 ]; then\n            result+=(\"\\\"$word\\\"\")\n        fi\n    done\n\
    \    echo ${result[@]}", "  local str=$1\n  local n=$2\n  local words=$(echo $str\
    \ | tr ' ' '\\n')\n  local result=()\n  for word in $words; do\n    local count=$(echo\
    \ $word | grep -o '[^aeiouAEIOU]' | wc -l)\n    if [ $count -eq $n ]; then\n \
    \     result+=($word)\n    fi\n  done\n  echo ${result[@]}", "    local string=$1\n\
    \    local number=$2\n    local words\n    local word\n    local consonants\n\
    \    local consonant\n    local result\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local e\n    local i\n\
    \    local o\n    local u\n    local y\n    local space\n    local quote\n   \
    \ local comma\n    local left_bracket\n    local right_bracket\n    local left_brace\n\
    \    local right_brace\n    local left_parenthesis\n    local right_parenthesis\n\
    \    local left_angle_bracket\n    local right_angle_bracket\n    local left_curly_bracket\n\
    \    local right_curly_bracket\n    local left_square_bracket\n    local right_square_bracket\n\
    \    local left_double_angle_bracket\n    local right_double_angle_bracket\n \
    \   local left_double_curly_bracket\n    local right_double_curly_bracket\n  \
    \  local left_double_square_bracket\n    local right_double_square_bracket\n \
    \   local left_double_parenthesis\n    local right_double_parenthesis\n    local\
    \ left_double_angle_bracket\n    local right_double_angle_bracket\n    local left_double_curly_bracket\n\
    \    local right_double_curly_bracket\n    local left_double_square_bracket\n\
    \    local right_double_square_bracket\n    local left_double_parenthesis\n  \
    \  local right_double_parenthesis\n    local left_triple_angle_bracket\n    local\
    \ right_triple_angle_bracket\n    local left_triple_curly_bracket\n    local right_triple_curly_bracket\n\
    \    local left_triple_square_bracket\n    local right_triple_square_bracket\n\
    \    local left_triple_parenthesis\n    local right_triple_parenthesis\n    local\
    \ left_triple_", "    local words=()\n    local word\n    local consonants\n \
    \   for word in $1; do\n        consonants=$(echo $word | tr -d -c 'bcdfghjklmnpqrstvwxyz'\
    \ | wc -c)\n        if [[ $consonants -eq $2 ]]; then\n            words+=(\"\\\
    \"$word\\\"\")\n        fi\n    done\n    echo ${words[@]}", "    local string=$1\n\
    \    local number=$2\n    local words=($string)\n    local result=()\n    for\
    \ word in \"${words[@]}\"; do\n        local consonants=$(echo $word | sed 's/[aeiou]//g'\
    \ | wc -c)\n        if [ $consonants -eq $number ]; then\n            result+=(\"\
    \\\"$word\\\"\")\n        fi\n    done\n    echo ${result[@]}", "    local string=$1\n\
    \    local n=$2\n    local words=($string)\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        if [[ $(echo $word | grep -o -P \"[^aeiouAEIOU]\"\
    \ | wc -l) -eq $n ]]; then\n            result+=(\\\"$word\\\")\n        fi\n\
    \    done\n    echo ${result[@]}", "    local str=$1\n    local n=$2\n    local\
    \ words=($(echo $str | tr ' ' '\\n'))\n    local result=()\n    for word in ${words[@]};\
    \ do\n        local count=$(echo $word | grep -o '[^aeiouAEIOU]' | wc -l)\n  \
    \      if [ $count -eq $n ]; then\n            result+=($word)\n        fi\n \
    \   done\n    echo ${result[@]}", "    local words=$(echo $1 | tr ' ' '\\n')\n\
    \    local result=()\n    for word in $words; do\n        local consonants=$(echo\
    \ $word | tr -cd '[bcdfghjklmnpqrstvwxyz]' | wc -c)\n        if [ $consonants\
    \ -eq $2 ]; then\n            result+=(\"\\\"$word\\\"\")\n        fi\n    done\n\
    \    echo ${result[@]}", "    # Write your code here\n    # To print results to\
    \ the standard output you can use echo\n    # Example: echo \"Hello world\"\n\
    \    echo \"Hello world\"", "    local string=$1\n    local n=$2\n    local words=($string)\n\
    \    local result=()\n    for word in \"${words[@]}\"; do\n        local consonants=$(echo\
    \ $word | tr -cd '[bcdfghjklmnpqrstvwxyz]' | wc -c)\n        if [ $consonants\
    \ -eq $n ]; then\n            result+=(\"\\\"$word\\\"\")\n        fi\n    done\n\
    \    echo ${result[@]}", "    local string=$1\n    local n=$2\n    local words=($string)\n\
    \    local result=()\n    for word in \"${words[@]}\"; do\n        local consonants=$(echo\
    \ $word | sed -e 's/[aeiou]//gi' | wc -m)\n        if [ $consonants -eq $n ];\
    \ then\n            result+=($word)\n        fi\n    done\n    echo ${result[@]}",
  "    local words=$(echo $1 | tr ' ' '\\n')\n    local result=()\n    for word in\
    \ $words; do\n        local count=$(echo $word | grep -o '[^aeiou]' | wc -l)\n\
    \        if [ $count -eq $2 ]; then\n            result+=($word)\n        fi\n\
    \    done\n    echo ${result[@]}", "    local string=$1\n    local n=$2\n    local\
    \ words=($string)\n    local result=()\n    local word\n    local consonants\n\
    \    for word in \"${words[@]}\"; do\n        consonants=$(echo $word | grep -o\
    \ '[^aeiouAEIOU ]' | wc -l)\n        if [ $consonants -eq $n ]; then\n       \
    \     result+=(\"\\\"$word\\\"\")\n        fi\n    done\n    echo ${result[@]}",
  "    local string=$1\n    local n=$2\n    local words=()\n    local word=\"\"\n\
    \    local consonants=0\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n  \
    \  local e=0\n    local i=0\n    local o=0\n    local u=0\n    local space=0\n\
    \    local letter=\"\"\n    local result=()\n    local result_string=\"\"\n  \
    \  local result_string_length=0\n    local result_string_last_index=0\n    local\
    \ result_string_last_char=\"\"\n    local result_string_last_char_is_comma=0\n\
    \    local result_string_last_char_is_quote=0\n    local result_string_last_char_is_space=0\n\
    \    local result_string_last_char_is_newline=0\n    local result_string_last_char_is_double_quote=0\n\
    \    local result_string_last_char_is_backslash=0\n    local result_string_last_char_is_single_quote=0\n\
    \    local result_string_last_char_is_backtick=0\n    local result_string_last_char_is_left_square_bracket=0\n\
    \    local result_string_last_char_is_right_square_bracket=0\n    local result_string_last_char_is_left_parenthesis=0\n\
    \    local result_string_last_char_is_right_parenthesis=0\n    local result_string_last_char_is_left_curly_bracket=0\n\
    \    local result_string_last_char_is_right_curly_bracket=0\n    local result_string_last_char_is_left_angle_bracket=0\n\
    \    local result_", "    local string=$1\n    local number=$2\n    local words=()\n\
    \    local word\n    local consonants\n    for word in $string; do\n        consonants=$(echo\
    \ $word | sed 's/[aeiou]//g' | wc -c)\n        if [ $consonants -eq $number ];\
    \ then\n            words+=($word)\n        fi\n    done\n    echo ${words[@]}",
  "    local string=\"$1\"\n    local num=\"$2\"\n    local words\n    local word\n\
    \    local consonants\n    local consonant\n    local result\n    words=($(echo\
    \ \"$string\" | tr ' ' '\\n'))\n    for word in \"${words[@]}\"; do\n        consonants=0\n\
    \        for consonant in {b,c,d,f,g,h,j,k,l,m,n,p,q,r,s,t,v,w,x,y,z}; do\n  \
    \          consonants=$((consonants + $(echo \"$word\" | grep -o \"$consonant\"\
    \ | wc -l)))\n        done\n        if [ \"$consonants\" -eq \"$num\" ]; then\n\
    \            result=\"$result \\\"$word\\\"\"\n        fi\n    done\n    echo\
    \ \"[$result]\"", "    local s=$1\n    local n=$2\n    local words=($(echo $s\
    \ | tr ' ' '\\n'))\n    local result=()\n    for word in \"${words[@]}\"; do\n\
    \        if [[ $(echo $word | grep -o '[^aeiou]' | wc -l) -eq $n ]]; then\n  \
    \          result+=(\"\\\"$word\\\"\")\n        fi\n    done\n    echo ${result[@]}",
  "    local -a words=($(echo \"$1\" | tr ' ' '\\n'))\n    local -a result=()\n  \
    \  for word in \"${words[@]}\"; do\n        if [[ $(echo \"$word\" | grep -o '[^aeiou]'\
    \ | wc -l) -eq $2 ]]; then\n            result+=(\"\\\"$word\\\"\")\n        fi\n\
    \    done\n    echo \"${result[@]}\"", "    # Write your code here\n    # To print\
    \ results to the standard output you can use echo\n    # Example: echo \"Hello\
    \ world\"\n    echo \"Hello world\"", "    local words=$(echo \"$1\" | tr -s '\
    \ ' '\\n')\n    local result=()\n    for word in $words; do\n        local consonants=$(echo\
    \ \"$word\" | tr -cd '[^aeiouAEIOU]')\n        if [ ${#consonants} -eq $2 ]; then\n\
    \            result+=(\"\\\"$word\\\"\")\n        fi\n    done\n    echo \"[${result[@]}]\"",
  "    # Write your code here\n    # To print results to the standard output you can\
    \ use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello world\"", " \
    \   local -a words\n    local -a consonants\n    local -a vowels\n    local -a\
    \ result\n    local word\n    local count\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local -i consonant_count\n   \
    \ local -i vowel_count\n    local -i word_count\n    local -i result_count\n \
    \   local -i index\n    local -i length\n    local -i length_words\n    local\
    \ -i length_result\n    local -i length_consonants\n    local -i length_vowels\n\
    \    local -i length_word\n    local -i length_consonant\n    local -i length_vowel\n\
    \    local -i length_char\n    local -i length_char_word\n    local -i length_char_consonant\n\
    \    local -i length_char_vowel\n    local -i length_char_result\n    local -i\
    \ length_char_words\n    local -i length_char_consonants\n    local -i length_char_vowels\n\
    \    local -i length_char_word\n    local -i length_char_consonant\n    local\
    \ -i length_char_vowel\n    local -i length_char_result\n    local -i length_char_words\n\
    \    local -i length_char_consonants\n    local -i length_char_vowels\n    local\
    \ -i length_char_word\n    local -i length_char_consonant\n    local -i length_char_vowel\n\
    \    local -i length_char_result\n    local -i length_char_words\n    local -i\
    \ length_char_consonants\n    local -i length_char_vowels\n    local -i length_char_word\n\
    \    local -i length_char_consonant\n    local -i length_char_vowel\n    local\
    \ -i length_char_result\n    local -i length_char_words\n", "    local string=$1\n\
    \    local n=$2\n    local words=($string)\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo \"$word\" | grep -o\
    \ \"[^aeiouAEIOU]\" | wc -l)\n        if [[ $consonants -eq $n ]]; then\n    \
    \        result+=(\"\\\"$word\\\"\")\n        fi\n    done\n    echo \"[${result[@]}]\"",
  "    local -a words=($(echo $1 | tr ' ' '\\n'))\n    local -a result=()\n    for\
    \ word in \"${words[@]}\"; do\n        if [[ $(echo $word | grep -o '[^aeiouAEIOU]'\
    \ | wc -l) -eq $2 ]]; then\n            result+=($word)\n        fi\n    done\n\
    \    echo ${result[@]}", "  local string=$1\n  local n=$2\n  local words=$(echo\
    \ $string | tr ' ' '\\n')\n  local result=()\n  for word in $words; do\n    local\
    \ consonants=$(echo $word | sed -e 's/[aeiou]//g')\n    if [ ${#consonants} -eq\
    \ $n ]; then\n      result+=(\"\\\"$word\\\"\")\n    fi\n  done\n  echo ${result[@]}",
  "    local s=$1\n    local n=$2\n    local words=($(echo $s | tr ' ' '\\n'))\n \
    \   local result=()\n    for word in \"${words[@]}\"; do\n        local consonants=$(echo\
    \ $word | tr -cd '[bcdfghjklmnpqrstvwxz]' | wc -c)\n        if [ $consonants -eq\
    \ $n ]; then\n            result+=(\\\"$word\\\")\n        fi\n    done\n    echo\
    \ ${result[@]}", "    local string=$1\n    local n=$2\n    local words=$(echo\
    \ $string | tr ' ' '\\n')\n    local result=()\n    for word in $words; do\n \
    \       local consonants=$(echo $word | grep -o '[^aeiouAEIOU]' | wc -l)\n   \
    \     if [ $consonants -eq $n ]; then\n            result+=($word)\n        fi\n\
    \    done\n    echo ${result[@]}", "    local string=$1\n    local n=$2\n    local\
    \ words=($string)\n    local result=()\n    for word in \"${words[@]}\"; do\n\
    \        local count=$(echo $word | grep -o '[^aeiouAEIOU]' | wc -l)\n       \
    \ if [ $count -eq $n ]; then\n            result+=($word)\n        fi\n    done\n\
    \    echo ${result[@]}", "    local string=$1\n    local n=$2\n    local words=()\n\
    \    local word=''\n    local consonants=0\n    local char=''\n    local vowels=('a'\
    \ 'e' 'i' 'o' 'u')\n    local is_vowel=0\n    local is_consonant=0\n    local\
    \ is_space=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n   \
    \ local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local\
    \ r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n\
    \    local x=0\n    local y=0\n    local z=0\n    local length=0\n    local length_words=0\n\
    \    local length_vowels=0\n    local length_word=0\n    local length_string=0\n\
    \    local result=''\n    local result_words=()\n    local result_word=''\n  \
    \  local result_string=''\n    local result_char=''\n    local result_char_prev=''\n\
    \    local result_char_next=''\n    local result_char_prev_prev=''\n    local\
    \ result_char_next_next=''\n    local result_char_prev_prev_prev=''\n    local\
    \ result_char_next_next_next=''\n    local result_char_prev_prev_prev_prev=''\n\
    \    local result_char_next_next_next_next=''\n    local result_char_prev_prev_prev_prev_prev=''\n\
    \    local result_char_next_next_next_next_next=''\n    local result_char_prev_prev_prev_prev_prev_prev=''\n\
    \    local result_char_next_next_next_next_next_next=''\n    local result_char_prev_prev_prev_prev_prev_prev_prev=''\n\
    \    local result_char_next_next_next_next_next_next_next=''\n    local result_char_prev_prev_prev_prev_prev",
  "    local string=$1\n    local n=$2\n    local words\n    local word\n    local\
    \ consonants\n    local consonant\n    local result\n    words=$(echo $string\
    \ | tr ' ' '\\n')\n    for word in $words; do\n        consonants=$(echo $word\
    \ | grep -o '[^aeiouAEIOU]' | wc -l)\n        if [ $consonants -eq $n ]; then\n\
    \            result=\"$result \\\"$word\\\"\"\n        fi\n    done\n    echo\
    \ \"[$result]\"", "    local string=$1\n    local number=$2\n    local words=($(echo\
    \ $string | tr ' ' '\\n'))\n    local result=()\n    for word in ${words[@]};\
    \ do\n        local count=$(echo $word | grep -o '[^aeiouAEIOU]' | wc -l)\n  \
    \      if [ $count -eq $number ]; then\n            result+=($word)\n        fi\n\
    \    done\n    echo ${result[@]}", "    local -a words=($(echo \"$1\" | tr ' '\
    \ '\\n'))\n    local -a result=()\n    for word in \"${words[@]}\"; do\n     \
    \   if [[ $(echo \"$word\" | grep -o '[^aeiou]' | wc -l) -eq $2 ]]; then\n   \
    \         result+=(\"\\\"$word\\\"\")\n        fi\n    done\n    echo \"${result[@]}\"",
  "    local words=$(echo $1 | tr \" \" \"\\n\")\n    local result=()\n    for word\
    \ in $words; do\n        local count=$(echo $word | grep -o '[^aeiouAEIOU]' |\
    \ wc -l)\n        if [ $count -eq $2 ]; then\n            result+=($word)\n  \
    \      fi\n    done\n    echo ${result[@]}", "    local str=$1\n    local n=$2\n\
    \    local words=$(echo $str | tr ' ' '\\n')\n    local result=\"\"\n    for word\
    \ in $words; do\n        local consonants=$(echo $word | tr -cd '[bcdfghjklmnpqrstvwxz]'\
    \ | wc -c)\n        if [ $consonants -eq $n ]; then\n            result=\"$result\
    \ \\\"$word\\\"\"\n        fi\n    done\n    echo \"[$result]\"", "    local string=$1\n\
    \    local n=$2\n    local words=$(echo $string | tr ' ' '\\n')\n    local result=()\n\
    \    for word in $words; do\n        local consonants=$(echo $word | tr -cd '[bcdfghjklmnpqrstvwxyz]'\
    \ | wc -c)\n        if [ $consonants -eq $n ]; then\n            result+=(\\\"\
    $word\\\")\n        fi\n    done\n    echo ${result[@]}", "    local string=$1\n\
    \    local n=$2\n    local words=($string)\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo \"$word\" | sed 's/[aeiou]//g'\
    \ | sed 's/[^a-zA-Z]//g')\n        if [ ${#consonants} -eq $n ]; then\n      \
    \      result+=(\"\\\"$word\\\"\")\n        fi\n    done\n    echo \"[${result[@]}]\"",
  "    local string=$1\n    local number=$2\n    local words=($(echo $string | tr\
    \ ' ' '\\n'))\n    local result=()\n    for word in ${words[@]}; do\n        local\
    \ count=$(echo $word | grep -o '[^aeiouAEIOU]' | wc -l)\n        if [ $count -eq\
    \ $number ]; then\n            result+=($word)\n        fi\n    done\n    echo\
    \ ${result[@]}", "    local s=$1\n    local n=$2\n    local words=()\n    local\
    \ word=\"\"\n    local consonants=0\n    local i=0\n    local c=\"\"\n    local\
    \ vowels=(\"a\" \"e\" \"i\" \"o\" \"u\")\n    local is_vowel=0\n    local is_consonant=0\n\
    \    local is_space=0\n    local is_letter=0\n    local is_quote=0\n    local\
    \ is_first_letter=0\n    local is_last_letter=0\n    local is_first_word=0\n \
    \   local is_last_word=0\n    local is_first_quote=0\n    local is_last_quote=0\n\
    \    local is_first_space=0\n    local is_last_space=0\n    local is_first_consonant=0\n\
    \    local is_last_consonant=0\n    local is_first_vowel=0\n    local is_last_vowel=0\n\
    \    local is_first_letter_of_word=0\n    local is_last_letter_of_word=0\n   \
    \ local is_first_letter_of_quote=0\n    local is_last_letter_of_quote=0\n    local\
    \ is_first_letter_of_space=0\n    local is_last_letter_of_space=0\n    local is_first_letter_of_consonant=0\n\
    \    local is_last_letter_of_consonant=0\n    local is_first_letter_of_vowel=0\n\
    \    local is_last_letter_of_vowel=0\n    local is_first_consonant_of_word=0\n\
    \    local is_last_consonant_of_word=0\n    local is_first_consonant_of_quote=0\n\
    \    local is_last_consonant_of_quote=0\n    local is_first_consonant_of_space=0\n\
    \    local is_last_consonant_of_space=0\n    local is_first_vowel_of_word=0\n\
    \    local is_last_vowel_of_word=0\n   ", "    local string=$1\n    local n=$2\n\
    \    local words=()\n    local word=''\n    local consonants=0\n    local i=0\n\
    \    local c=''\n    local vowels='aeiou'\n    local is_vowel=0\n    local is_consonant=0\n\
    \    local is_space=0\n    local is_letter=0\n    local is_quote=0\n    local\
    \ is_word=0\n    local is_word_end=0\n    local is_word_start=0\n    local is_word_start_quote=0\n\
    \    local is_word_end_quote=0\n    local is_word_start_space=0\n    local is_word_end_space=0\n\
    \    local is_word_start_letter=0\n    local is_word_end_letter=0\n    local is_word_start_consonant=0\n\
    \    local is_word_end_consonant=0\n    local is_word_start_vowel=0\n    local\
    \ is_word_end_vowel=0\n    local is_word_start_consonant_count=0\n    local is_word_end_consonant_count=0\n\
    \    local is_word_start_vowel_count=0\n    local is_word_end_vowel_count=0\n\
    \    local is_word_start_consonant_count_equal=0\n    local is_word_end_consonant_count_equal=0\n\
    \    local is_word_start_vowel_count_equal=0\n    local is_word_end_vowel_count_equal=0\n\
    \    local is_word_start_consonant_count_less=0\n    local is_word_end_consonant_count_less=0\n\
    \    local is_word_start_vowel_count_less=0\n    local is_word_end_vowel_count_less=0\n\
    \    local is_word_start_consonant_count_greater=0\n    local is_word_end_consonant_count_greater=0\n\
    \    local is_word_start_vowel_", "    local string=$1\n    local n=$2\n    local\
    \ words=($string)\n    local result=()\n    for word in \"${words[@]}\"; do\n\
    \        local consonants=$(echo $word | sed 's/[aeiou]//g')\n        if [ ${#consonants}\
    \ -eq $n ]; then\n            result+=(\"\\\"$word\\\"\")\n        fi\n    done\n\
    \    echo \"[${result[@]}]\"", "    local string=$1\n    local n=$2\n    local\
    \ words=($string)\n    local result=()\n    for word in \"${words[@]}\"; do\n\
    \        local consonants=$(echo $word | sed 's/[aeiou]//g')\n        if [ ${#consonants}\
    \ -eq $n ]; then\n            result+=(\"$word\")\n        fi\n    done\n    echo\
    \ ${result[@]}", "    local string=\"$1\"\n    local n=\"$2\"\n    local words=($(echo\
    \ \"$string\" | tr ' ' '\\n'))\n    local result=()\n    for word in \"${words[@]}\"\
    ; do\n        local consonants=$(echo \"$word\" | sed 's/[aeiou]//g')\n      \
    \  if [[ ${#consonants} -eq $n ]]; then\n            result+=(\"\\\"$word\\\"\"\
    )\n        fi\n    done\n    echo \"${result[@]}\"", "    local -a words\n   \
    \ local -a consonants\n    local -a vowels\n    local -a result\n    local word\n\
    \    local consonant_count\n    local vowel_count\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local e\n\
    \    local i\n    local o\n    local u\n    local y\n    local space\n    local\
    \ letter\n    local word\n    local consonant_count\n    local vowel_count\n \
    \   local result\n    local -a words\n    local -a consonants\n    local -a vowels\n\
    \    local -a result\n    local word\n    local consonant_count\n    local vowel_count\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local e\n    local i\n    local o\n    local u\n    local y\n\
    \    local space\n    local letter\n    local word\n    local consonant_count\n\
    \    local vowel_count\n    local result\n    local -a words\n    local -a consonants\n\
    \    local -a vowels\n    local -a result\n    local word\n    local consonant_count\n\
    \    local vowel_count\n    local i\n    local j\n    local k\n    local l\n \
    \   local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local e\n    local i\n    local o\n\
    \    local u\n    local y\n    local space\n    local letter\n    local word\n\
    \    local consonant_count\n    local vowel_count\n    local result\n    local\
    \ -a words\n   ", "    echo $1 | tr ' ' '\\n' | grep -E \"^[^aeiou]{$2}$\" | tr\
    \ '\\n' ' ' | sed 's/ $//'", "    local string=$1\n    local n=$2\n    local words=$(echo\
    \ $string | tr ' ' '\\n')\n    local result=()\n    for word in $words; do\n \
    \       local count=$(echo $word | grep -o '[^aeiouAEIOU]' | wc -l)\n        if\
    \ [ $count -eq $n ]; then\n            result+=(\"\\\"$word\\\"\")\n        fi\n\
    \    done\n    echo ${result[@]}", "    local s=$1\n    local n=$2\n    local\
    \ words=($(echo $s | tr ' ' '\\n'))\n    local result=()\n    for word in \"${words[@]}\"\
    ; do\n        if [[ $(echo $word | grep -o -P \"[bcdfghjklmnpqrstvwxz]\" | wc\
    \ -l) -eq $n ]]; then\n            result+=(\"\\\"$word\\\"\")\n        fi\n \
    \   done\n    echo ${result[@]}", "    local string=\"$1\"\n    local n=\"$2\"\
    \n    local words=($(echo \"$string\" | tr ' ' '\\n'))\n    local result=()\n\
    \    local word\n    local consonants\n    for word in \"${words[@]}\"; do\n \
    \       consonants=$(echo \"$word\" | tr -cd 'bcdfghjklmnpqrstvwxyz' | wc -c)\n\
    \        if [ \"$consonants\" -eq \"$n\" ]; then\n            result+=(\"\\\"\
    $word\\\"\")\n        fi\n    done\n    echo \"${result[@]}\"", "    local string=$1\n\
    \    local n=$2\n    local words=($string)\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | sed -e 's/[aeiou]//g')\n\
    \        if [ ${#consonants} -eq $n ]; then\n            result+=($word)\n   \
    \     fi\n    done\n    echo ${result[@]}", "    local string=$1\n    local number=$2\n\
    \    local words=()\n    local word=''\n    local consonants=0\n    local i=0\n\
    \    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n \
    \   local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n  \
    \  local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n   \
    \ local y=0\n    local z=0\n    local a=0\n    local e=0\n    local i=0\n    local\
    \ o=0\n    local u=0\n    local space=0\n    local letter=''\n    local consonants=0\n\
    \    local word_length=0\n    local word_length_string=''\n    local word_length_string_length=0\n\
    \    local word_length_string_length_string=''\n    local word_length_string_length_string_length=0\n\
    \    local word_length_string_length_string_length_string=''\n    local word_length_string_length_string_length_string_length=0\n\
    \    local word_length_string_length_string_length_string_length_string=''\n \
    \   local word_length_string_length_string_length_string_length_string_length=0\n\
    \    local word_length_string_length_string_length_string_length_string_length_string=''\n\
    \    local word_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local word_length_string_length_string_length_string_length_string_length_string_length_string=''\n\
    \    local word_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local word_length_string_length_string_length_string_length_string_length_string_length_string_length_string=''\n\
    \    local word_length_string_length_string_length_string_length_string_length_string_length_string_length",
  "    local string=$1\n    local n=$2\n    local words=($string)\n    local result=()\n\
    \    for word in \"${words[@]}\"; do\n        local count=$(echo $word | grep\
    \ -o -i '[^aeiouy]' | wc -l)\n        if [ $count -eq $n ]; then\n           \
    \ result+=(\"\\\"$word\\\"\")\n        fi\n    done\n    echo ${result[@]}", " \
    \   local -a words\n    local -a consonants\n    local -a result\n    local word\n\
    \    local count\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local -i index\n    local -i length\n    local -i num_consonants\n\
    \    local -i num_vowels\n    local -i num_letters\n    local -i num_spaces\n\
    \    local -i num_words\n    local -i num_chars\n    local -i num_args\n    local\
    \ -i num_consonants_in_word\n    local -i num_vowels_in_word\n    local -i num_letters_in_word\n\
    \    local -i num_spaces_in_word\n    local -i num_words_in_word\n    local -i\
    \ num_chars_in_word\n    local -i num_args_in_word\n    local -i num_consonants_in_result\n\
    \    local -i num_vowels_in_result\n    local -i num_letters_in_result\n    local\
    \ -i num_spaces_in_result\n    local -i num_words_in_result\n    local -i num_chars_in_result\n\
    \    local -i num_args_in_result\n    local -i num_consonants_in_consonants\n\
    \    local -i num_vowels_in_consonants\n    local -i num_letters_in_consonants\n\
    \    local -i num_spaces_in_consonants\n    local -i num_words_in_consonants\n\
    \    local -i num_chars_in_consonants\n    local -i num_args_in_consonants\n \
    \   local -i num_consonants_in_words\n    local -i num_vowels_in_words\n    local\
    \ -i num_letters_in_words\n    local -i num_spaces_in_words\n   ", "    local\
    \ -a words=($(echo $1 | tr ' ' '\\n'))\n    local -a result=()\n    for word in\
    \ \"${words[@]}\"; do\n        if [[ $(echo $word | grep -o '[^aeiouAEIOU]' |\
    \ wc -l) -eq $2 ]]; then\n            result+=(\"\\\"$word\\\"\")\n        fi\n\
    \    done\n    echo ${result[@]}", "    local string=$1\n    local number=$2\n\
    \    local words=($(echo $string | tr ' ' '\\n'))\n    local result=()\n    for\
    \ word in ${words[@]}; do\n        local count=$(echo $word | sed 's/[aeiou]//g'\
    \ | wc -c)\n        if [ $count -eq $number ]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo ${result[@]}", "  local string=$1\n  local n=$2\n\
    \  local words=$(echo $string | tr ' ' '\\n')\n  local result=()\n  for word in\
    \ $words; do\n    local consonants=$(echo $word | tr -dc 'bcdfghjklmnpqrstvwxyz'\
    \ | wc -c)\n    if [ $consonants -eq $n ]; then\n      result+=(\\\"$word\\\"\
    )\n    fi\n  done\n  echo ${result[@]}", "    local string=\"$1\"\n    local n=\"\
    $2\"\n    local words=($(echo \"$string\" | tr ' ' '\\n'))\n    local result=()\n\
    \    for word in \"${words[@]}\"; do\n        local count=$(echo \"$word\" | grep\
    \ -o '[^aeiouAEIOU]' | wc -l)\n        if [ \"$count\" -eq \"$n\" ]; then\n  \
    \          result+=(\"\\\"$word\\\"\")\n        fi\n    done\n    echo \"${result[@]}\"",
  "    local words=$(echo $1 | tr ' ' '\\n')\n    local result=()\n    for word in\
    \ $words; do\n        local count=$(echo $word | tr -cd 'bcdfghjklmnpqrstvwxz'\
    \ | wc -c)\n        if [ $count -eq $2 ]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo ${result[@]}", "    local str=$1\n    local n=$2\n\
    \    local words=($(echo $str | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in ${words[@]}; do\n        local count=$(echo $word | grep -o '[^aeiouAEIOU]'\
    \ | wc -l)\n        if [ $count -eq $n ]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo ${result[@]}", "    local s=$1\n    local n=$2\n\
    \    local words=()\n    local word=\"\"\n    local consonants=0\n    local is_consonant=0\n\
    \    local i=0\n    local j=0\n    local c=''\n    local d=''\n    local len=0\n\
    \    local len_words=0\n    local result=''\n    local is_first=1\n    local is_last=0\n\
    \    local is_space=0\n    local is_quote=0\n    local is_word=0\n    local is_consonant=0\n\
    \    local is_vowel=0\n    local vowels=('a' 'e' 'i' 'o' 'u')\n    local len_vowels=${#vowels[@]}\n\
    \    local is_vowel=0\n    local is_consonant=0\n    local is_space=0\n    local\
    \ is_quote=0\n    local is_word=0\n    local is_first=1\n    local is_last=0\n\
    \    local is_space=0\n    local is_quote=0\n    local is_word=0\n    local is_consonant=0\n\
    \    local is_vowel=0\n    local is_space=0\n    local is_quote=0\n    local is_word=0\n\
    \    local is_first=1\n    local is_last=0\n    local is_space=0\n    local is_quote=0\n\
    \    local is_word=0\n    local is_consonant=0\n    local is_vowel=0\n    local\
    \ is_space=0\n    local is_quote=0\n    local is_word=0\n    local is_first=1\n\
    \    local is_last=0\n    local is_space=0\n    local is_quote=0\n    local is_word=0\n\
    \    local is_consonant=0\n    local is_vowel=0\n    local is_space=0\n    local\
    \ is_quote=0\n    local is_word=0\n    local is_first=1\n    local is_last=0\n\
    \    local is_space=0\n    local is_quote=0\n   ", "    local -i n=$2\n    local\
    \ -a words=($(echo $1 | tr ' ' '\\n'))\n    local -a result=()\n    for word in\
    \ \"${words[@]}\"; do\n        local -i count=0\n        for ((i=0; i<${#word};\
    \ i++)); do\n            if [[ ${word:$i:1} =~ [^aeiou] ]]; then\n           \
    \     ((count++))\n            fi\n        done\n        if [[ $count -eq $n ]];\
    \ then\n            result+=(\"\\\"$word\\\"\")\n        fi\n    done\n    echo\
    \ \"${result[@]}\"", "    local words=$(echo $1 | tr ' ' '\\n')\n    local result=()\n\
    \    for word in $words; do\n        local consonants=$(echo $word | sed -e 's/[aeiou]//g')\n\
    \        if [ ${#consonants} -eq $2 ]; then\n            result+=(\\\"$word\\\"\
    )\n        fi\n    done\n    echo ${result[@]}", "    local str=$1\n    local\
    \ n=$2\n    local words\n    local word\n    local count\n    local result\n \
    \   words=$(echo $str | tr ' ' '\\n')\n    for word in $words; do\n        count=$(echo\
    \ $word | sed 's/[^bcdfghjklmnpqrstvwxz]//g' | wc -c)\n        if [ $count -eq\
    \ $n ]; then\n            result=\"$result \\\"$word\\\"\"\n        fi\n    done\n\
    \    echo \"[$result]\"", "    local string=\"$1\"\n    local number=\"$2\"\n\
    \    local words=$(echo \"$string\" | tr ' ' '\\n')\n    local result=()\n   \
    \ for word in $words; do\n        local consonants=$(echo \"$word\" | grep -o\
    \ '[^aeiouAEIOU]' | wc -l)\n        if [ \"$consonants\" -eq \"$number\" ]; then\n\
    \            result+=(\"\\\"$word\\\"\")\n        fi\n    done\n    echo \"${result[@]}\"",
  "    local string=$1\n    local num=$2\n    local words=$(echo $string | tr ' '\
    \ '\\n')\n    local result=()\n    for word in $words; do\n        local count=$(echo\
    \ $word | grep -o '[^aeiouAEIOU]' | wc -l)\n        if [ $count -eq $num ]; then\n\
    \            result+=($word)\n        fi\n    done\n    echo ${result[@]}", " \
    \   local string=$1\n    local n=$2\n    local words=$(echo $string | tr \" \"\
    \ \"\\n\")\n    local result=\"\"\n    for word in $words; do\n        local consonants=$(echo\
    \ $word | tr -cd \"[^aeiouAEIOU]\" | wc -c)\n        if [ $consonants -eq $n ];\
    \ then\n            result=\"$result \\\"$word\\\"\"\n        fi\n    done\n \
    \   echo \"[$result]\"", "    local s=$1\n    local n=$2\n    local words=($(echo\
    \ $s | tr ' ' '\\n'))\n    local result=()\n    for word in \"${words[@]}\"; do\n\
    \        local num_consonants=$(echo $word | sed 's/[aeiou]//g' | wc -c)\n   \
    \     if [ $num_consonants -eq $n ]; then\n            result+=(\"\\\"$word\\\"\
    \")\n        fi\n    done\n    echo ${result[@]}", "    local string=$1\n    local\
    \ number=$2\n    local words=()\n    local word\n    local consonants\n    for\
    \ word in $string; do\n        consonants=$(echo $word | sed -e 's/[aeiouAEIOU]//g'\
    \ | wc -c)\n        if [ $consonants -eq $number ]; then\n            words+=($word)\n\
    \        fi\n    done\n    echo ${words[@]}", "    local -a words\n    local -a\
    \ consonants\n    local -a vowels\n    local -a result\n    local word\n    local\
    \ consonant_count\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local space\n    local -i count\n    local -i index\n  \
    \  local -i length\n    local -i length_words\n    local -i length_consonants\n\
    \    local -i length_vowels\n    local -i length_result\n    local -i length_word\n\
    \    local -i length_consonant_count\n    local -i length_i\n    local -i length_j\n\
    \    local -i length_k\n    local -i length_l\n    local -i length_m\n    local\
    \ -i length_n\n    local -i length_o\n    local -i length_p\n    local -i length_q\n\
    \    local -i length_r\n    local -i length_s\n    local -i length_t\n    local\
    \ -i length_u\n    local -i length_v\n    local -i length_w\n    local -i length_x\n\
    \    local -i length_y\n    local -i length_z\n    local -i length_space\n   \
    \ local -i length_count\n    local -i length_index\n    local -i length_length\n\
    \    local -i length_length_words\n    local -i length_length_consonants\n   \
    \ local -i length_length_vowels\n    local -i length_length_result\n    local\
    \ -i length_length_word\n    local -i length_length_consonant_count\n    local\
    \ -i length_length_i\n    local -i length_length_j\n    local -i length_length_k\n\
    \    local -i length_length_l\n    local -i length_length_m\n    local -i length_length_n\n\
    \    local -i length_length_o\n    local -i length_length_p\n", "    # Write your\
    \ code here\n    # To print results to the standard output you can use echo\n\
    \    # Example: echo \"Hello world\"\n    echo \"Hello world\"", "    local string=\"\
    $1\"\n    local n=\"$2\"\n    local words=($(echo \"$string\" | tr ' ' '\\n'))\n\
    \    local result=()\n    for word in \"${words[@]}\"; do\n        local count=$(echo\
    \ \"$word\" | tr -cd '[bcdfghjklmnpqrstvwxz]' | wc -c)\n        if [[ \"$count\"\
    \ -eq \"$n\" ]]; then\n            result+=(\"\\\"$word\\\"\")\n        fi\n \
    \   done\n    echo \"${result[@]}\"", "    local words=\"$1\"\n    local n=\"\
    $2\"\n    local result=()\n    local word\n    local consonants\n    for word\
    \ in $words; do\n        consonants=$(echo \"$word\" | grep -o -E '[^aeiouAEIOU\
    \ ]' | wc -l)\n        if [[ $consonants == $n ]]; then\n            result+=(\"\
    \\\"$word\\\"\")\n        fi\n    done\n    echo \"${result[@]}\"", "    local\
    \ string=$1\n    local n=$2\n    local words=$(echo $string | tr ' ' '\\n')\n\
    \    local result=()\n    for word in $words; do\n        local consonants=$(echo\
    \ $word | grep -o '[^aeiouAEIOU]' | wc -l)\n        if [ $consonants -eq $n ];\
    \ then\n            result+=(\"\\\"$word\\\"\")\n        fi\n    done\n    echo\
    \ ${result[@]}", "    echo $1 | tr ' ' '\\n' | grep -E \"^[^aeiou]{$2}$\" | tr\
    \ '\\n' ' ' | sed 's/ $//'", "    local string=\"$1\"\n    local num_consonants=\"\
    $2\"\n    local words=()\n    local word=\"\"\n    local num_consonants_in_word=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n    local\
    \ c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n    local\
    \ c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n    local\
    \ c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=",
  "    local string=\"$1\"\n    local n=\"$2\"\n    local words=($(echo \"$string\"\
    \ | tr ' ' '\\n'))\n    local result=()\n    for word in \"${words[@]}\"; do\n\
    \        local consonants=$(echo \"$word\" | sed -e 's/[aeiou]//g' | wc -c)\n\
    \        if [[ \"$consonants\" -eq \"$n\" ]]; then\n            result+=(\"\\\"\
    $word\\\"\")\n        fi\n    done\n    echo \"${result[@]}\"", "    local words=($1)\n\
    \    local n=$2\n    local result=()\n    for word in \"${words[@]}\"; do\n  \
    \      if [[ $(echo $word | grep -o -P \"[^aeiouAEIOU]\" | wc -l) -eq $n ]]; then\n\
    \            result+=($word)\n        fi\n    done\n    echo ${result[@]}", " \
    \   local string=$1\n    local number=$2\n    local words=()\n    local word=''\n\
    \    local consonants=0\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n  \
    \  local e=0\n    local i=0\n    local o=0\n    local u=0\n    local space=0\n\
    \    local length=${#string}\n    local result=''\n    local consonants=0\n  \
    \  local consonants_number=$number\n    local consonants_number_plus_one=$((consonants_number\
    \ + 1))\n    local consonants_number_minus_one=$((consonants_number - 1))\n  \
    \  local consonants_number_minus_two=$((consonants_number - 2))\n    local consonants_number_minus_three=$((consonants_number\
    \ - 3))\n    local consonants_number_minus_four=$((consonants_number - 4))\n \
    \   local consonants_number_minus_five=$((consonants_number - 5))\n    local consonants_number_minus_six=$((consonants_number\
    \ - 6))\n    local consonants_number_minus_seven=$((consonants_number - 7))\n\
    \    local consonants_number_minus_eight=$((consonants_number - 8))\n    local\
    \ consonants_number_minus_nine=$((consonants_number - 9))\n    local consonants_number_minus_ten=$((consonants_number\
    \ - 10))\n    local consonants_number_minus_eleven=$((consonants_number - 11))\n\
    \    local consonants_number_minus_twelve=$((consonants_number - 12))\n    local\
    \ consonants_number_minus_thirteen=$((consonants_number - 13))\n    local consonants_number_minus",
  "    # Write your code here\n    # To print results to the standard output you can\
    \ use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello world\"", " \
    \   local string=$1\n    local num=$2\n    local words=($string)\n    local result=()\n\
    \    for word in \"${words[@]}\"; do\n        local consonants=$(echo $word |\
    \ sed -e 's/[aeiouAEIOU]//g' | wc -m)\n        if [ $consonants -eq $num ]; then\n\
    \            result+=(\"\\\"$word\\\"\")\n        fi\n    done\n    echo ${result[@]}",
  "    local s=\"$1\"\n    local n=\"$2\"\n    local words=($(echo \"$s\" | tr ' '\
    \ '\\n'))\n    local result=()\n    for word in \"${words[@]}\"; do\n        local\
    \ count=$(echo \"$word\" | sed 's/[^aeiou]//g' | wc -c)\n        if [ \"$count\"\
    \ -eq \"$n\" ]; then\n            result+=(\"$word\")\n        fi\n    done\n\
    \    echo \"${result[@]}\"", "    local str=$1\n    local n=$2\n    local words=()\n\
    \    local word=''\n    local consonants=0\n    local i=0\n    local c=''\n  \
    \  local vowels='aeiou'\n    local is_vowel=0\n    local is_consonant=0\n    local\
    \ is_word=0\n    local is_space=0\n    local is_quote=0\n    local is_double_quote=0\n\
    \    local is_single_quote=0\n    local is_backslash=0\n    local is_escape=0\n\
    \    local is_escape_quote=0\n    local is_escape_double_quote=0\n    local is_escape_single_quote=0\n\
    \    local is_escape_backslash=0\n    local is_escape_escape=0\n    local is_escape_escape_quote=0\n\
    \    local is_escape_escape_double_quote=0\n    local is_escape_escape_single_quote=0\n\
    \    local is_escape_escape_backslash=0\n    local is_escape_escape_escape=0\n\
    \    local is_escape_escape_escape_quote=0\n    local is_escape_escape_escape_double_quote=0\n\
    \    local is_escape_escape_escape_single_quote=0\n    local is_escape_escape_escape_backslash=0\n\
    \    local is_escape_escape_escape_escape=0\n    local is_escape_escape_escape_escape_quote=0\n\
    \    local is_escape_escape_escape_escape_double_quote=0\n    local is_escape_escape_escape_escape_single_quote=0\n\
    \    local is_escape_escape_escape_escape_backslash=0\n    local is_escape_escape_escape_escape_escape=0\n\
    \    local is_escape_escape_escape_escape_escape_quote=0\n    local is_escape_escape_escape_escape_escape_double_quote=0\n\
    \    local is_escape_escape_escape_escape_escape_single_quote=0\n    local is_escape_escape_escape_escape_escape_backslash=0\n\
    \    local is_escape_escape_escape_escape_escape_", "    echo \"\\\"$1\\\"\" |\
    \ tr ' ' '\\n' | grep -E \"^[^aeiou]{$2}$\" | tr '\\n' ',' | sed 's/,$//'", " \
    \   # Write your code here\n    # To print results to the standard output you\
    \ can use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello world\"",
  "    echo $1 | tr \" \" \"\\n\" | grep -E \"^[^aeiou]{$2}$\" | tr \"\\n\" \" \"\
    \ | sed 's/ $//'", "    # your code here\n    echo \"not implemented\"", "   \
    \ if [[ -z $1 ]]; then\n        echo \"[]\"\n        return\n    fi\n    if [[\
    \ -z $2 ]]; then\n        echo \"[]\"\n        return\n    fi\n    local words=($(echo\
    \ $1 | tr ' ' '\\n'))\n    local result=()\n    for word in \"${words[@]}\"; do\n\
    \        local consonants=$(echo $word | grep -o '[^aeiouAEIOU]' | wc -l)\n  \
    \      if [[ $consonants -eq $2 ]]; then\n            result+=(\"\\\"$word\\\"\
    \")\n        fi\n    done\n    echo \"[${result[@]}]\"", "    local -a words\n\
    \    local -a consonants\n    local -a vowels\n    local -a result\n    local\
    \ word\n    local count\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local space\n    local -i consonant_count\n   \
    \ local -i vowel_count\n    local -i word_count\n    local -i result_count\n \
    \   local -i consonant_count_required\n    local -i vowel_count_required\n   \
    \ local -i word_count_required\n    local -i result_count_required\n    local\
    \ -i consonant_count_found\n    local -i vowel_count_found\n    local -i word_count_found\n\
    \    local -i result_count_found\n    local -i consonant_count_not_found\n   \
    \ local -i vowel_count_not_found\n    local -i word_count_not_found\n    local\
    \ -i result_count_not_found\n    local -i consonant_count_not_required\n    local\
    \ -i vowel_count_not_required\n    local -i word_count_not_required\n    local\
    \ -i result_count_not_required\n    local -i consonant_count_required_not_found\n\
    \    local -i vowel_count_required_not_found\n    local -i word_count_required_not_found\n\
    \    local -i result_count_required_not_found\n    local -i consonant_count_not_required_not_found\n\
    \    local -i vowel_count_not_required_not_found\n    local -i word_count_not_required_not_found\n\
    \    local -i result_count_not_required_not_found\n    local -i consonant_count_required_found\n\
    \    local -i vowel_count_required_found\n    local -i word_count_required_found\n\
    \    local -i result_count_required_found\n    local -i consonant_count_not_required_found\n\
    \    local", "    echo \"$1\" | tr -cs '[:alpha:]' '\\n' | grep -E \"^[^aeiou]{$2}$\"\
    \ | tr -d '\\n' | sed 's/\\([^\"]*\\)/\"\\1\"/g'", "    echo $1 | tr ' ' '\\n'\
    \ | grep -E \"^[^aeiouAEIOU]{$2}$\" | tr '\\n' ' '", "    local string=$1\n  \
    \  local n=$2\n    local words=($string)\n    local result=()\n    for word in\
    \ \"${words[@]}\"; do\n        local count=$(echo $word | grep -o '[^aeiouAEIOU]'\
    \ | wc -l)\n        if [ $count -eq $n ]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo ${result[@]}", "    local string=\"$1\"\n    local\
    \ n=\"$2\"\n    local words\n    local word\n    local consonants\n    local consonant\n\
    \    local result\n    words=($(echo \"$string\" | tr ' ' '\\n'))\n    for word\
    \ in \"${words[@]}\"; do\n        consonants=0\n        for consonant in {b,c,d,f,g,h,j,k,l,m,n,p,q,r,s,t,v,w,x,y,z};\
    \ do\n            consonants=$((consonants + $(echo \"$word\" | grep -o \"$consonant\"\
    \ | wc -l)))\n        done\n        if [ \"$consonants\" -eq \"$n\" ]; then\n\
    \            result=\"$result \\\"$word\\\"\"\n        fi\n    done\n    echo\
    \ \"[$result]\"", "    local s=$1\n    local n=$2\n    local words=$(echo $s |\
    \ tr ' ' '\\n')\n    local result=\"\"\n    for word in $words; do\n        local\
    \ consonants=$(echo $word | sed -e 's/[aeiouAEIOU]//g')\n        if [ ${#consonants}\
    \ -eq $n ]; then\n            result=\"$result \\\"$word\\\"\"\n        fi\n \
    \   done\n    echo \"[$result]\"", "    local string=$1\n    local number=$2\n\
    \    local words=$(echo $string | tr \" \" \"\\n\")\n    local result=\"\"\n \
    \   for word in $words; do\n        local count=$(echo $word | grep -o \"[^aeiouAEIOU]\"\
    \ | wc -l)\n        if [ $count -eq $number ]; then\n            result=\"$result\
    \ \\\"$word\\\"\"\n        fi\n    done\n    echo \"[$result]\"", "    local string=$1\n\
    \    local number=$2\n    local words=($(echo $string | tr ' ' '\\n'))\n    local\
    \ result=()\n    for word in ${words[@]}; do\n        local count=$(echo $word\
    \ | grep -o -i '[^aeiouy]' | wc -l)\n        if [ $count -eq $number ]; then\n\
    \            result+=($word)\n        fi\n    done\n    echo ${result[@]}", " \
    \   local string=$1\n    local n=$2\n    local words=($string)\n    local result=()\n\
    \    local word\n    local consonants\n    for word in \"${words[@]}\"; do\n \
    \       consonants=$(echo $word | grep -o '[^aeiouAEIOU ]' | wc -l)\n        if\
    \ [[ $consonants -eq $n ]]; then\n            result+=($word)\n        fi\n  \
    \  done\n    echo ${result[@]}", "    local string=$1\n    local n=$2\n    local\
    \ words=($string)\n    local result=()\n    for word in \"${words[@]}\"; do\n\
    \        local count=$(echo $word | sed -e 's/[^aeiou]//g' | wc -c)\n        if\
    \ [ $count -eq $n ]; then\n            result+=($word)\n        fi\n    done\n\
    \    echo ${result[@]}", "    local s=$1\n    local n=$2\n    local words=($(echo\
    \ $s | tr ' ' '\\n'))\n    local result=()\n    for word in \"${words[@]}\"; do\n\
    \        local count=$(echo $word | grep -o '[^aeiou]' | wc -l)\n        if [\
    \ $count -eq $n ]; then\n            result+=(\\\"$word\\\")\n        fi\n   \
    \ done\n    echo ${result[@]}", "    local str=\"$1\"\n    local n=\"$2\"\n  \
    \  local words=($(echo \"$str\" | tr ' ' '\\n'))\n    local result=()\n    for\
    \ word in \"${words[@]}\"; do\n        if [[ $(echo \"$word\" | grep -o '[^aeiouAEIOU]'\
    \ | wc -l) -eq \"$n\" ]]; then\n            result+=(\"$word\")\n        fi\n\
    \    done\n    echo \"${result[@]}\"", "    local string=\"$1\"\n    local number=\"\
    $2\"\n    local words=($(echo \"$string\" | tr ' ' '\\n'))\n    local result=()\n\
    \    for word in \"${words[@]}\"; do\n        local count=$(echo \"$word\" | sed\
    \ 's/[^aeiou]//g' | wc -m)\n        if [ \"$count\" -eq \"$number\" ]; then\n\
    \            result+=(\"\\\"$word\\\"\")\n        fi\n    done\n    echo \"${result[@]}\"",
  "    local string=$1\n    local n=$2\n    local words=$(echo $string | tr \" \"\
    \ \"\\n\")\n    local result=\"\"\n    for word in $words; do\n        local consonants=$(echo\
    \ $word | tr -d \"aeiou\" | wc -m)\n        if [ $consonants -eq $n ]; then\n\
    \            result=\"$result \\\"$word\\\"\"\n        fi\n    done\n    echo\
    \ \"[$result]\"", "    local -a words=($(echo \"$1\" | tr ' ' '\\n'))\n    local\
    \ -a result=()\n    for word in \"${words[@]}\"; do\n        local -i count=0\n\
    \        for ((i=0; i<${#word}; i++)); do\n            if [[ \"${word:$i:1}\"\
    \ =~ [^aeiou] ]]; then\n                ((count++))\n            fi\n        done\n\
    \        if ((count == $2)); then\n            result+=(\"\\\"$word\\\"\")\n \
    \       fi\n    done\n    echo \"${result[@]}\"", "    local string=\"$1\"\n \
    \   local num=\"$2\"\n    local words\n    local word\n    local count\n    local\
    \ result\n\n    words=$(echo \"$string\" | tr ' ' '\\n')\n    for word in $words;\
    \ do\n        count=$(echo \"$word\" | grep -o '[^aeiouAEIOU]' | wc -l)\n    \
    \    if [ \"$count\" -eq \"$num\" ]; then\n            result=\"$result \\\"$word\\\
    \"\"\n        fi\n    done\n    echo \"[$result]\"", "    local string=$1\n  \
    \  local n=$2\n    local words=($string)\n    local result=()\n    for word in\
    \ \"${words[@]}\"; do\n        local consonants=$(echo $word | sed -e 's/[aeiou]//g')\n\
    \        if [ ${#consonants} -eq $n ]; then\n            result+=($word)\n   \
    \     fi\n    done\n    echo ${result[@]}", "    local string=$1\n    local n=$2\n\
    \    local words=($string)\n    local result=()\n    for word in \"${words[@]}\"\
    ; do\n        local count=$(echo $word | sed 's/[^aeiou]//g' | wc -c)\n      \
    \  if [ $count -eq $n ]; then\n            result+=(\"\\\"$word\\\"\")\n     \
    \   fi\n    done\n    echo ${result[@]}", "    local string=$1\n    local n=$2\n\
    \    local words=($string)\n    local result=()\n    for word in \"${words[@]}\"\
    ; do\n        local count=0\n        for ((i=0; i<${#word}; i++)); do\n      \
    \      local char=${word:$i:1}\n            if [[ $char =~ [bcdfghjklmnpqrstvwxyz]\
    \ ]]; then\n                count=$((count+1))\n            fi\n        done\n\
    \        if [[ $count -eq $n ]]; then\n            result+=(\"\\\"$word\\\"\"\
    )\n        fi\n    done\n    echo ${result[@]}", "    local string=$1\n    local\
    \ num=$2\n    local words=($string)\n    local result=()\n    for word in \"${words[@]}\"\
    ; do\n        local count=0\n        for ((i=0; i<${#word}; i++)); do\n      \
    \      local char=${word:$i:1}\n            if [[ $char =~ [^aeiou] ]]; then\n\
    \                ((count++))\n            fi\n        done\n        if [[ $count\
    \ -eq $num ]]; then\n            result+=($word)\n        fi\n    done\n    echo\
    \ ${result[@]}", "    local words=$(echo $1 | tr \" \" \"\\n\")\n    local result=\"\
    \"\n    for word in $words; do\n        local count=$(echo $word | grep -o \"\
    [bcdfghjklmnpqrstvwxyz]\" | wc -l)\n        if [ $count -eq $2 ]; then\n     \
    \       result=\"$result \\\"$word\\\"\"\n        fi\n    done\n    echo \"[$result]\"",
  "    local string=$1\n    local number=$2\n    local words=($(echo $string | tr\
    \ ' ' '\\n'))\n    local result=()\n    for word in ${words[@]}; do\n        local\
    \ count=$(echo $word | grep -o '[^aeiouAEIOU]' | wc -l)\n        if [ $count -eq\
    \ $number ]; then\n            result+=(\\\"$word\\\")\n        fi\n    done\n\
    \    echo ${result[@]}", "    local string=$1\n    local n=$2\n    local words=($string)\n\
    \    local result=()\n    for word in \"${words[@]}\"; do\n        if [[ $(echo\
    \ $word | grep -o '[^aeiouAEIOU ]' | wc -l) -eq $n ]]; then\n            result+=(\"\
    \\\"$word\\\"\")\n        fi\n    done\n    echo \"[${result[@]}]\"", "    local\
    \ string=$1\n    local number=$2\n    local result=()\n    local word=()\n   \
    \ local consonants=()\n    local vowels=()\n    local i=0\n    local j=0\n   \
    \ local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local\
    \ p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n\
    \    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n \
    \   local space=0\n    local letter=0\n    local consonant=0\n    local vowel=0\n\
    \    local word_length=0\n    local consonant_count=0\n    local consonant_count_string=0\n\
    \    local consonant_count_string_length=0\n    local consonant_count_string_length_string=0\n\
    \    local consonant_count_string_length_string_length=0\n    local consonant_count_string_length_string_length_string=0\n\
    \    local consonant_count_string_length_string_length_string_length=0\n    local\
    \ consonant_count_string_length_string_length_string_length_string=0\n    local\
    \ consonant_count_string_length_string_length_string_length_string_length=0\n\
    \    local consonant_count_string_length_string_length_string_length_string_length_string=0\n\
    \    local consonant_count_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local consonant_count_string_length_string_length_string_length_string_length_string_length_string=0\n\
    \    local consonant_count_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local consonant_count_string_length_string_length_string_length_string_length_string_length_string_length_string=0\n\
    \    local consonant_count_string_length_string_length_string_length_string_length_string",
  "    local -a words\n    local -a consonants\n    local -a vowels\n    local -a\
    \ result\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n   \
    \ local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n\
    \    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i\
    \ v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local\
    \ -i len\n    local -i count\n    local -i num\n    local -i num_consonants\n\
    \    local -i num_vowels\n    local -i num_spaces\n    local -i num_words\n  \
    \  local -i num_letters\n    local -i num_consonants_in_word\n    local -i num_vowels_in_word\n\
    \    local -i num_letters_in_word\n    local -i num_spaces_in_word\n    local\
    \ -i num_words_in_word\n    local -i num_letters_in_word\n    local -i num_consonants_in_word\n\
    \    local -i num_vowels_in_word\n    local -i num_spaces_in_word\n    local -i\
    \ num_words_in_word\n    local -i num_letters_in_word\n    local -i num_consonants_in_word\n\
    \    local -i num_vowels_in_word\n    local -i num_spaces_in_word\n    local -i\
    \ num_words_in_word\n    local -i num_letters_in_word\n    local -i num_consonants_in_word\n\
    \    local -i num_vowels_in_word\n    local -i num_spaces_in_word\n    local -i\
    \ num_words_in_word\n    local -i num_letters_in_word\n    local -i num_consonants_in_word\n\
    \    local -i num_vowels_in_word\n    local -i num_spaces_in_word\n   ", "   \
    \ local words=$(echo $1 | tr ' ' '\\n')\n    local result=()\n    for word in\
    \ $words; do\n        local consonants=$(echo $word | sed 's/[aeiou]//g')\n  \
    \      if [ ${#consonants} -eq $2 ]; then\n            result+=(\"\\\"$word\\\"\
    \")\n        fi\n    done\n    echo ${result[@]}", "    local string=$1\n    local\
    \ number=$2\n    local words=()\n    local word=''\n    local consonants=0\n \
    \   local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n  \
    \  local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n   \
    \ local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local\
    \ x=0\n    local y=0\n    local z=0\n    local a=0\n    local e=0\n    local i=0\n\
    \    local o=0\n    local u=0\n    local space=0\n    local length=${#string}\n\
    \    for ((i=0; i<length; i++)); do\n        if [[ ${string:$i:1} == ' ' ]]; then\n\
    \            if [[ $consonants -eq $number ]]; then\n                words+=($word)\n\
    \            fi\n            word=''\n            consonants=0\n            space=1\n\
    \        else\n            if [[ $space -eq 1 ]]; then\n                word+=\"\
    \\\"\"\n                space=0\n            fi\n            word+=\"${string:$i:1}\"\
    \n            if [[ ${string:$i:1} == 'a' ]]; then\n                a=1\n    \
    \        elif [[ ${string:$i:1} == 'e' ]]; then\n                e=1\n       \
    \     elif [[ ${string:$i:1} == 'i' ]]; then\n                i=1\n          \
    \  elif [[ ${string:$i:1} == 'o' ]]; then\n                o=1\n            elif\
    \ [[ ${string:$i:1} == 'u' ]]; then\n                u=1\n            else\n \
    \               consonants=$((consonants+1))\n            fi\n        fi\n   \
    \ done\n    if [[ $consonants -eq $number ]]; then\n        words+=($word)\n \
    \   fi\n    echo ${words[@]}", "    local string=$1\n    local n=$2\n    local\
    \ words=($string)\n    local result=()\n    for word in \"${words[@]}\"; do\n\
    \        local consonants=$(echo $word | sed -e 's/[aeiou]//g' | wc -c)\n    \
    \    if [ $consonants -eq $n ]; then\n            result+=(\"\\\"$word\\\"\")\n\
    \        fi\n    done\n    echo ${result[@]}", "    # Write your code here\n \
    \   # To print results to the standard output you can use echo\n    # Example:\
    \ echo \"Hello world\"\n    echo \"Hello world\"", "    local -a words=($(echo\
    \ $1 | tr ' ' '\\n'))\n    local -a result=()\n    for word in \"${words[@]}\"\
    ; do\n        local -i consonants=0\n        for ((i=0; i<${#word}; i++)); do\n\
    \            local -i code=$(printf \"%d\" \"'${word:$i:1}\")\n            if\
    \ ((code < 65 || code > 90)) && ((code < 97 || code > 122)); then\n          \
    \      continue\n            fi\n            if ((code == 65 || code == 69 ||\
    \ code == 73 || code == 79 || code == 85 || code == 97 || code == 101 || code\
    \ == 105 || code == 111 || code == 117)); then\n                continue\n   \
    \         fi\n            consonants=$((consonants + 1))\n        done\n     \
    \   if ((consonants == $2)); then\n            result+=(\"\\\"$word\\\"\")\n \
    \       fi\n    done\n    echo \"${result[@]}\"", "    local string=$1\n    local\
    \ n=$2\n    local words=$(echo $string | tr ' ' '\\n')\n    local result=()\n\
    \    for word in $words; do\n        local consonants=$(echo $word | sed 's/[aeiou]//g')\n\
    \        if [ ${#consonants} -eq $n ]; then\n            result+=(\"\\\"$word\\\
    \"\")\n        fi\n    done\n    echo ${result[@]}", "    local str=$1\n    local\
    \ num=$2\n    local words=($(echo $str | tr ' ' '\\n'))\n    local result=()\n\
    \    for word in ${words[@]}; do\n        local count=$(echo $word | grep -o -i\
    \ '[^aeiou]' | wc -l)\n        if [ $count -eq $num ]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo ${result[@]}", "    local -a words\n    local\
    \ -a result\n    local word\n    local consonants\n    local i\n    local j\n\
    \    local k\n    local -a vowels=('a' 'e' 'i' 'o' 'u')\n    local -a consonant_letters=('b'\
    \ 'c' 'd' 'f' 'g' 'h' 'j' 'k' 'l' 'm' 'n' 'p' 'q' 'r' 's' 't' 'v' 'w' 'x' 'y'\
    \ 'z')\n    words=($(echo $1 | tr ' ' '\\n'))\n    for ((i=0; i<${#words[@]};\
    \ i++)); do\n        word=${words[$i]}\n        consonants=0\n        for ((j=0;\
    \ j<${#word}; j++)); do\n            for ((k=0; k<${#vowels[@]}; k++)); do\n \
    \               if [[ ${word:$j:1} == ${vowels[$k]} ]]; then\n               \
    \     break\n                fi\n            done\n            if [[ $k -eq ${#vowels[@]}\
    \ ]]; then\n                for ((k=0; k<${#consonant_letters[@]}; k++)); do\n\
    \                    if [[ ${word:$j:1} == ${consonant_letters[$k]} ]]; then\n\
    \                        consonants=$((consonants+1))\n                      \
    \  break\n                    fi\n                done\n            fi\n     \
    \   done\n        if [[ $consonants -eq $2 ]]; then\n            result+=(\"\\\
    \"$word\\\"\")\n        fi\n    done\n    echo ${result[@]}", "    local string=$1\n\
    \    local n=$2\n    local words=($string)\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | sed -e 's/[aeiou]//g')\n\
    \        if [ ${#consonants} -eq $n ]; then\n            result+=(\\\"$word\\\"\
    )\n        fi\n    done\n    echo ${result[@]}", "    local -a words\n    local\
    \ -a consonants\n    local -a vowels\n    local -a result\n    local word\n  \
    \  local consonant_count\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local e\n    local i\n    local o\n\
    \    local u\n    local y\n    local space\n    local quote\n    local comma\n\
    \    local period\n    local exclamation\n    local question\n    local dash\n\
    \    local colon\n    local semicolon\n    local slash\n    local backslash\n\
    \    local at\n    local hash\n    local dollar\n    local percent\n    local\
    \ caret\n    local ampersand\n    local asterisk\n    local left_paren\n    local\
    \ right_paren\n    local left_bracket\n    local right_bracket\n    local left_brace\n\
    \    local right_brace\n    local plus\n    local equals\n    local underscore\n\
    \    local tilde\n    local backtick\n    local less_than\n    local greater_than\n\
    \    local bar\n    local single_quote\n    local double_quote\n    local backspace\n\
    \    local tab\n    local newline\n    local carriage_return\n    local form_feed\n\
    \    local vertical_tab\n    local null\n    local octal_escape\n    local hex_escape\n\
    \    local unicode_escape\n    local control_escape\n    local backslash_escape\n\
    \    local backslash_escape_escape\n    local backslash_escape_escape_escape\n\
    \    local backslash_escape_escape_escape_escape\n    local backslash_escape_escape_escape_escape_escape\n\
    \    local backslash_escape_escape_escape_escape_escape_escape\n    local backslash_escape_escape_escape_escape_escape_escape_escape\n\
    \    local backslash_escape_escape_escape_escape_escape_escape_escape_escape\n\
    \    local backslash_escape_escape_escape_escape_escape_escape_escape_escape_escape\n\
    \    local back", "    local string=$1\n    local n=$2\n    local words=$(echo\
    \ $string | tr \" \" \"\\n\")\n    local result=\"\"\n    for word in $words;\
    \ do\n        local count=$(echo $word | sed 's/[^aeiou]//g' | wc -c)\n      \
    \  if [ $count -eq $n ]; then\n            result=\"$result \\\"$word\\\"\"\n\
    \        fi\n    done\n    echo \"[$result]\"", "    echo $1 | tr ' ' '\\n' |\
    \ grep -E \"^[^aeiou]{$2}$\" | tr '\\n' ' ' | sed 's/ $//'", "    echo $1 | tr\
    \ -s \" \" \"\\n\" | grep -E \"^[^aeiouAEIOU]*([aeiouAEIOU][^aeiouAEIOU]){$2}[^aeiouAEIOU]*$\"\
    \ | tr -d '\"'", "    # your code here\n    echo \"Not implemented\"", "    local\
    \ words=$(echo $1 | tr ' ' '\\n')\n    local result=()\n    for word in $words;\
    \ do\n        local consonants=$(echo $word | tr -cd 'bcdfghjklmnpqrstvwxyz' |\
    \ wc -c)\n        if [ $consonants -eq $2 ]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo ${result[@]}"]
stop_tokens:
- "\n}"

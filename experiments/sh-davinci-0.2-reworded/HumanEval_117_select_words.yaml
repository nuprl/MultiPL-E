name: HumanEval_117_select_words
language: sh
prompt: "#!/bin/bash\n# Given a string s and a natural number n, you have been tasked\
  \ to implement \n# a function that returns a list of all words from string s that\
  \ contain exactly \n# n consonants, in order these words appear in the string s.\n\
  # If the string s is empty then the function should return an empty list.\n# Note:\
  \ you may assume the input string contains only letters and spaces.\n# Examples:\n\
  # >>> $(select_words \"Mary had a little lamb\" \"4\")\n# ['\"little\"']\n# >>>\
  \ $(select_words \"Mary had a little lamb\" \"3\")\n# ['\"Mary\"', '\"lamb\"']\n\
  # >>> $(select_words \"simple white space\" \"2\")\n# []\n# >>> $(select_words \"\
  Hello world\" \"4\")\n# ['\"world\"']\n# >>> $(select_words \"Uncle sam\" \"3\"\
  )\n# ['\"Uncle\"']\n#\n# $1 is a string\n# $2 is an integer\nselect_words() {\n"
tests: "}\n\ncandidate() {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n \
  \   [[ $(candidate \"Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate\
  \ \"Mary had a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple\
  \ white space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"\
  world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate\
  \ \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\"\
  \ ]]\n}\n\nrun_test"
completions: ["    local s=$1\n    local n=$2\n    local words=$(echo $s | tr ' '\
    \ '\\n')\n    local result=()\n    for word in $words; do\n        local count=$(echo\
    \ $word | grep -o '[^aeiouAEIOU]' | wc -l)\n        if [ $count -eq $n ]; then\n\
    \            result+=($word)\n        fi\n    done\n    echo ${result[@]}", " \
    \   local -a words\n    local -a consonants\n    local -a vowels\n    local -a\
    \ result\n    local word\n    local count\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local c\n    local v\n    local\
    \ -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local\
    \ -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local\
    \ -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local\
    \ -i x\n    local -i y\n    local -i z\n    local -i c\n    local -i v\n    local\
    \ -i count\n    local -i length\n    local -i word_length\n    local -i consonant_count\n\
    \    local -i vowel_count\n    local -i consonant_length\n    local -i vowel_length\n\
    \    local -i result_length\n    local -i result_count\n    local -i result_index\n\
    \    local -i result_word_length\n    local -i result_word_count\n    local -i\
    \ result_word_index\n    local -i result_word_char_index\n    local -i result_word_char_count\n\
    \    local -i result_word_char_length\n    local -i result_word_char_index\n \
    \   local -i result_word_char_count\n    local -i result_word_char_length\n  \
    \  local -i result_word_char_index\n    local -i result_word_char_count\n    local\
    \ -i result_word_char_length\n    local -i result_word_char_index\n    local -i\
    \ result_word_char_count\n    local -i result_word_char_length\n    local -i result_word_char_index\n\
    \    local -i result_word_char_count\n   ", "    local -a words\n    local -a\
    \ consonants\n    local -a vowels\n    local -a result\n    local word\n    local\
    \ i\n    local j\n    local k\n    local count\n    local -i n\n    local -i len\n\
    \    local -i len_consonants\n    local -i len_vowels\n    local -i len_result\n\
    \    local -i len_word\n    local -i len_words\n    local -i len_consonants_word\n\
    \    local -i len_vowels_word\n    local -i len_result_word\n    local -i len_words_word\n\
    \    local -i len_consonants_words\n    local -i len_vowels_words\n    local -i\
    \ len_result_words\n    local -i len_words_words\n    local -i len_consonants_consonants\n\
    \    local -i len_vowels_consonants\n    local -i len_result_consonants\n    local\
    \ -i len_words_consonants\n    local -i len_consonants_vowels\n    local -i len_vowels_vowels\n\
    \    local -i len_result_vowels\n    local -i len_words_vowels\n    local -i len_consonants_result\n\
    \    local -i len_vowels_result\n    local -i len_result_result\n    local -i\
    \ len_words_result\n    local -i len_consonants_i\n    local -i len_vowels_i\n\
    \    local -i len_result_i\n    local -i len_words_i\n    local -i len_consonants_j\n\
    \    local -i len_vowels_j\n    local -i len_result_j\n    local -i len_words_j\n\
    \    local -i len_consonants_k\n    local -i len_vowels_k\n    local -i len_result_k\n\
    \    local -i len_words_k\n    local -i len_consonants_count\n    local -i len_vowels_count\n\
    \    local -i len_result_count\n    local -i len_words", "    local string=\"\
    $1\"\n    local n=\"$2\"\n    local words\n    local word\n    local consonants\n\
    \    local consonant\n    local result\n    words=$(echo \"$string\" | tr ' '\
    \ '\\n')\n    for word in $words; do\n        consonants=$(echo \"$word\" | grep\
    \ -o '[^aeiouAEIOU]' | wc -l)\n        if [ \"$consonants\" -eq \"$n\" ]; then\n\
    \            result=\"$result \\\"$word\\\"\"\n        fi\n    done\n    echo\
    \ \"[$result]\"", "    # your code here\n    echo \"Not implemented\"", "    #\
    \ TODO: implement this function\n    echo \"Not implemented\"", "    local -a\
    \ words\n    local -a consonants=(\"b\" \"c\" \"d\" \"f\" \"g\" \"h\" \"j\" \"\
    k\" \"l\" \"m\" \"n\" \"p\" \"q\" \"r\" \"s\" \"t\" \"v\" \"w\" \"x\" \"y\" \"\
    z\")\n    local -a vowels=(\"a\" \"e\" \"i\" \"o\" \"u\")\n    local -a word\n\
    \    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i\
    \ m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local\
    \ -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local\
    \ -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i consonant_count\n\
    \    local -i word_count\n    local -i word_length\n    local -i word_index\n\
    \    local -i word_index_start\n    local -i word_index_end\n    local -i word_index_length\n\
    \    local -i word_index_length_start\n    local -i word_index_length_end\n  \
    \  local -i word_index_length_length\n    local -i word_index_length_length_start\n\
    \    local -i word_index_length_length_end\n    local -i word_index_length_length_length\n\
    \    local -i word_index_length_length_length_start\n    local -i word_index_length_length_length_end\n\
    \    local -i word_index_length_length_length_length\n    local -i word_index_length_length_length_length_start\n\
    \    local -i word_index_length_length_length_length_end\n    local -i word_index_length_length_length_length_length\n\
    \    local -i word_index_length_length_length_length_length_start\n    local -i\
    \ word_index_length_length_length_length_length_end\n    local -i word_index_length_length_length_",
  "    local -a words=()\n    local -a consonants=(\"b\" \"c\" \"d\" \"f\" \"g\" \"\
    h\" \"j\" \"k\" \"l\" \"m\" \"n\" \"p\" \"q\" \"r\" \"s\" \"t\" \"v\" \"w\" \"\
    x\" \"y\" \"z\")\n    local -a vowels=(\"a\" \"e\" \"i\" \"o\" \"u\")\n    local\
    \ -a word_consonants=()\n    local -a word_vowels=()\n    local word=\"\"\n  \
    \  local word_consonants_count=0\n    local word_vowels_count=0\n    local consonants_count=$2\n\
    \    local word_count=0\n    local word_index=0\n    local word_length=0\n   \
    \ local word_char=\"\"\n    local word_char_index=0\n    local word_char_count=0\n\
    \    local word_char_is_consonant=0\n    local word_char_is_vowel=0\n    local\
    \ word_char_is_consonant_or_vowel=0\n    local word_char_is_consonant_or_vowel_index=0\n\
    \    local word_char_is_consonant_or_vowel_count=0\n    local word_char_is_consonant_or_vowel_char=\"\
    \"\n    local word_char_is_consonant_or_vowel_char_index=0\n    local word_char_is_consonant_or_vowel_char_count=0\n\
    \    local word_char_is_consonant_or_vowel_char_is_consonant=0\n    local word_char_is_consonant_or_vowel_char_is_vowel=0\n\
    \    local word_char_is_consonant_or_vowel_char_is_consonant_or_vowel=0\n    local\
    \ word_char_is_consonant_or_vowel_char_is_consonant_or_vowel_index=0\n    local\
    \ word_char_is_cons", "    local words=($1)\n    local n=$2\n    local result=()\n\
    \    for word in \"${words[@]}\"; do\n        local consonants=$(echo $word |\
    \ sed -e 's/[aeiou]//g' | wc -c)\n        if [ $consonants -eq $n ]; then\n  \
    \          result+=($word)\n        fi\n    done\n    echo ${result[@]}", "  \
    \  local s=$1\n    local n=$2\n    local words=($(echo \"$s\" | tr ' ' '\\n'))\n\
    \    local result=()\n    for word in \"${words[@]}\"; do\n        local count=$(echo\
    \ \"$word\" | grep -o '[^aeiouAEIOU]' | wc -l)\n        if [ \"$count\" -eq \"\
    $n\" ]; then\n            result+=(\"\\\"$word\\\"\")\n        fi\n    done\n\
    \    echo \"[${result[@]}]\"", "    local string=\"$1\"\n    local num=\"$2\"\n\
    \    local words=($(echo \"$string\" | tr ' ' '\\n'))\n    local result=()\n \
    \   for word in \"${words[@]}\"; do\n        local count=$(echo \"$word\" | grep\
    \ -o '[^aeiouAEIOU]' | wc -l)\n        if [[ \"$count\" -eq \"$num\" ]]; then\n\
    \            result+=(\"\\\"$word\\\"\")\n        fi\n    done\n    echo \"${result[@]}\"",
  "    echo \"$1\" | tr -s ' ' '\\n' | awk -v n=$2 '{\n        gsub(/[aeiou]/,\"\"\
    ,$1);\n        if (length($1) == n) {\n            print \"\\\"\"$1\"\\\"\"\n\
    \        }\n    }'", "  local string=$1\n  local num_consonants=$2\n  local words=$(echo\
    \ $string | tr ' ' '\\n')\n  local result=()\n  for word in $words; do\n    local\
    \ num_consonants_in_word=$(echo $word | grep -o -i '[^aeiouy]' | wc -l)\n    if\
    \ [ $num_consonants_in_word -eq $num_consonants ]; then\n      result+=($word)\n\
    \    fi\n  done\n  echo ${result[@]}", "    local -a words\n    local -a consonants\n\
    \    local -a vowels\n    local -a result\n    local word\n    local consonant_count\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local space\n    local quote\n    local comma\n    local period\n    local\
    \ exclamation\n    local question\n    local dash\n    local colon\n    local\
    \ semicolon\n    local apostrophe\n    local left_paren\n    local right_paren\n\
    \    local left_bracket\n    local right_bracket\n    local left_brace\n    local\
    \ right_brace\n    local left_angle\n    local right_angle\n    local equal\n\
    \    local plus\n    local minus\n    local asterisk\n    local slash\n    local\
    \ backslash\n    local underscore\n    local at\n    local percent\n    local\
    \ dollar\n    local ampersand\n    local caret\n    local tilde\n    local backtick\n\
    \    local pipe\n    local pound\n    local less_than\n    local greater_than\n\
    \    local number_sign\n    local double_quote\n    local backspace\n    local\
    \ tab\n    local newline\n    local carriage_return\n    local form_feed\n   \
    \ local vertical_tab\n    local null\n    local bell\n    local escape\n    local\
    \ delete\n    local ctrl_a\n    local ctrl_b\n    local ctrl_c\n    local ctrl_d\n\
    \    local ctrl_e\n    local ctrl_f\n    local ctrl_g\n    local ctrl_h\n    local\
    \ ctrl_i\n    local ctrl_j\n    local ctrl_k\n    local ctrl_l\n    local ctrl_m\n\
    \    local ctrl_n\n    local ctrl_o\n    local ctrl_p\n    local ctrl_q\n    local\
    \ ctrl_r\n    local ctrl_s\n    local ctrl_t\n    local ctrl_u\n    local ctrl_v\n\
    \    local ctrl_w\n    local c", "    local string=$1\n    local n=$2\n    local\
    \ words=($string)\n    local result=()\n    for word in \"${words[@]}\"; do\n\
    \        local count=0\n        for ((i=0; i<${#word}; i++)); do\n           \
    \ local char=${word:$i:1}\n            if [[ $char =~ [^aeiou] ]]; then\n    \
    \            count=$((count+1))\n            fi\n        done\n        if [[ $count\
    \ -eq $n ]]; then\n            result+=(\"\\\"$word\\\"\")\n        fi\n    done\n\
    \    echo ${result[@]}", "    local str=\"$1\"\n    local n=\"$2\"\n    local\
    \ words=()\n    local word=\"\"\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n_consonants=0\n    local consonants=(\"\
    b\" \"c\" \"d\" \"f\" \"g\" \"h\" \"j\" \"k\" \"l\" \"m\" \"n\" \"p\" \"q\" \"\
    r\" \"s\" \"t\" \"v\" \"w\" \"x\" \"y\" \"z\")\n    local vowels=(\"a\" \"e\"\
    \ \"i\" \"o\" \"u\")\n    local str_len=${#str}\n    local consonants_len=${#consonants[@]}\n\
    \    local vowels_len=${#vowels[@]}\n    local word_len=0\n    local is_consonant=0\n\
    \    local is_vowel=0\n    local is_space=0\n    local is_letter=0\n    local\
    \ is_word=0\n    local is_word_end=0\n    local word_start=0\n    local word_end=0\n\
    \    local word_start_index=0\n    local word_end_index=0\n    local word_len=0\n\
    \    local word_str=\"\"\n    local word_str_len=0\n    local word_str_index=0\n\
    \    local word_str_char=\"\"\n    local word_str_char_len=0\n    local word_str_char_index=0\n\
    \    local word_str_char_is_consonant=0\n    local word_str_char_is_vowel=0\n\
    \    local word_str_char_is_letter=0\n    local word_str_char_is_space=0\n   \
    \ local word_str_char_is_word=0\n    local word_str_char_is_word_end=0\n    local\
    \ word_str_char_is_word_start=0\n    local word_str_char_is_word_start_index=0\n\
    \    local word_str_char_is_word_end_index=0\n    local word", "    local string=$1\n\
    \    local num=$2\n    local words=($string)\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local count=0\n        for (( i=0; i<${#word};\
    \ i++ )); do\n            if [[ ${word:$i:1} =~ [bcdfghjklmnpqrstvwxyz] ]]; then\n\
    \                (( count++ ))\n            fi\n        done\n        if [[ $count\
    \ -eq $num ]]; then\n            result+=(\\\"$word\\\")\n        fi\n    done\n\
    \    echo ${result[@]}", "    local string=\"$1\"\n    local n=\"$2\"\n    local\
    \ words=($(echo \"$string\" | tr ' ' '\\n'))\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo \"$word\" | tr -cd '[bcdfghjklmnpqrstvwxyz]'\
    \ | wc -c)\n        if [ \"$consonants\" -eq \"$n\" ]; then\n            result+=(\"\
    \\\"$word\\\"\")\n        fi\n    done\n    echo \"${result[@]}\"", "    local\
    \ string=$1\n    local n=$2\n    local words=($string)\n    local result=()\n\
    \    for word in \"${words[@]}\"; do\n        if [[ $(consonants_count $word)\
    \ -eq $n ]]; then\n            result+=(\"$word\")\n        fi\n    done\n   \
    \ echo \"${result[@]}\"", "    local str=$1\n    local n=$2\n    local words=($(echo\
    \ $str | tr ' ' '\\n'))\n    local result=()\n    for word in ${words[@]}; do\n\
    \        local count=$(echo $word | grep -o '[^aeiouAEIOU]' | wc -l)\n       \
    \ if [ $count -eq $n ]; then\n            result+=($word)\n        fi\n    done\n\
    \    echo ${result[@]}"]
stop_tokens:
- "\n}"

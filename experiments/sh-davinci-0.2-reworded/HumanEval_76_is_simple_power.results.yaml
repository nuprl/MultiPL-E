language: sh
name: HumanEval_76_is_simple_power
results:
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo true\n  elif [ $1 -eq $2 ]; then\n    echo true\n  elif [ $1 -gt $2\
    \ ]; then\n    if [ $(( $1 % $2 )) -eq 0 ]; then\n      is_simple_power $(( $1\
    \ / $2 )) $2\n    else\n      echo false\n    fi\n  else\n    echo false\n  fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 -eq 1 ]];\
    \ then\n    echo true\n  elif [[ $1 -eq $2 ]]; then\n    echo true\n  elif [[\
    \ $1 -eq $(( $2 * $2 )) ]]; then\n    echo true\n  else\n    echo false\n  fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq $2 ];\
    \ then\n    echo true\n  elif [ $1 -gt $2 ]; then\n    if [ $(( $1 % $2 )) -eq\
    \ 0 ]; then\n      is_simple_power $(( $1 / $2 )) $2\n    else\n      echo false\n\
    \    fi\n  else\n    echo false\n  fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq $2 ]\n\
    \    then\n        echo true\n    elif [ $1 -eq 1 ]\n    then\n        echo false\n\
    \    elif [ $1 -eq 0 ]\n    then\n        echo false\n    elif [ $1 -lt $2 ]\n\
    \    then\n        echo false\n    elif [ $(( $1 % $2 )) -eq 0 ]\n    then\n \
    \       is_simple_power $(( $1 / $2 )) $2\n    else\n        echo false\n    fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 -eq 1 ]];\
    \ then\n    echo \"true\"\n  elif [[ $1 -eq $2 ]]; then\n    echo \"true\"\n \
    \ elif [[ $1 -gt $2 ]]; then\n    if [[ $(( $1 % $2 )) -eq 0 ]]; then\n      is_simple_power\
    \ $(( $1 / $2 )) $2\n    else\n      echo \"false\"\n    fi\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 -eq 1 ]];\
    \ then\n    echo true\n  elif [[ $1 -eq $2 ]]; then\n    echo true\n  elif [[\
    \ $1 -gt $2 ]]; then\n    if [[ $(( $1 % $2 )) -eq 0 ]]; then\n      is_simple_power\
    \ $(( $1 / $2 )) $2\n    else\n      echo false\n    fi\n  else\n    echo false\n\
    \  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $1 -eq $2 ]; then\n        echo true\n \
    \   elif [ $1 -gt $2 ]; then\n        is_simple_power $(($1/$2)) $2\n    else\n\
    \        echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n  \
    \  [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  # Write your code\
    \ here\n  # $1 is an integer\n  # $2 is an integer\n  if [ $1 -eq $2 ]; then\n\
    \    echo \"true\"\n  elif [ $1 -eq 0 ]; then\n    echo \"false\"\n  elif [ $1\
    \ -eq 1 ]; then\n    echo \"false\"\n  elif [ $1 -lt $2 ]; then\n    echo \"false\"\
    \n  else\n    is_simple_power $(($1/$2)) $2\n  fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 -eq 1 ]];\
    \ then\n    echo \"true\"\n  elif [[ $1 -eq $2 ]]; then\n    echo \"true\"\n \
    \ elif [[ $1 -gt $2 ]]; then\n    if [[ $(( $1 % $2 )) -eq 0 ]]; then\n      is_simple_power\
    \ $(( $1 / $2 )) $2\n    else\n      echo \"false\"\n    fi\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 -eq 1 ]];\
    \ then\n    echo true\n  elif [[ $1 -eq $2 ]]; then\n    echo true\n  elif [[\
    \ $1 -gt $2 ]]; then\n    if [[ $1%$2 -eq 0 ]]; then\n      is_simple_power $((\
    \ $1/$2 )) $2\n    else\n      echo false\n    fi\n  else\n    echo false\n  fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $1 -eq $2 ]; then\n        echo true\n \
    \   elif [ $1 -eq $(($2 * $2)) ]; then\n        echo true\n    else\n        echo\
    \ false\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 2
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo \"false\"\n    return\n  fi\n  if [ $1 -eq 1 ]; then\n    echo \"true\"\
    \n    return\n  fi\n  if [ $2 -eq 0 ]; then\n    echo \"false\"\n    return\n\
    \  fi\n  if [ $2 -eq 1 ]; then\n    echo \"true\"\n    return\n  fi\n  if [ $1\
    \ -eq $2 ]; then\n    echo \"true\"\n    return\n  fi\n  if [ $1 -lt $2 ]; then\n\
    \    echo \"false\"\n    return\n  fi\n  if [ $1 -gt $2 ]; then\n    if [ $1 -eq\
    \ $(( $2 * $2 )) ]; then\n      echo \"true\"\n      return\n    fi\n    if [\
    \ $1 -gt $(( $2 * $2 )) ]; then\n      if [ $1 -eq $(( $2 * $2 * $2 )) ]; then\n\
    \        echo \"true\"\n        return\n      fi\n      if [ $1 -gt $(( $2 * $2\
    \ * $2 )) ]; then\n        if [ $1 -eq $(( $2 * $2 * $2 * $2 )) ]; then\n    \
    \      echo \"true\"\n          return\n        fi\n        if [ $1 -gt $(( $2\
    \ * $2 * $2 * $2 )) ]; then\n          if [ $1 -eq $(( $2 * $2 * $2 * $2 * $2\
    \ )) ]; then\n            echo \"true\"\n            return\n          fi\n  \
    \        if [ $1 -gt $(( $2 * $2 * $2 * $2 * $2 )) ]; then\n            if [ $1\
    \ -eq $(( $2 * $2 * $2 * $2 * $2 * $2 )) ]; then\n              echo \"true\"\n\
    \              return\n            fi\n            if [ $1 -gt $(( $2 * $2 * $2\
    \ * $2 * $2 * $2 )) ]; then\n              if [ $1 -eq $(( $2 * $2 * $2 * $2 *\
    \ $2 * $2 * $2 )) ]; then\n                echo \"true\"\n                return\n\
    \              fi\n              if [ $1 -gt $(( $2 * $2\n}\n\ncandidate() {\n\
    \    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpjtmu5vyi.sh: line 76: unexpected EOF while looking for matching
    `)''

    /tmp/tmpjtmu5vyi.sh: line 98: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $1 -eq $2 ]; then\n        echo true\n \
    \   elif [ $1 -lt $2 ]; then\n        echo false\n    else\n        is_simple_power\
    \ $(($1/$2)) $2\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo \"true\"\n  elif [ $1 -eq $2 ]; then\n    echo \"true\"\n  elif [ $1\
    \ -lt $2 ]; then\n    echo \"false\"\n  else\n    is_simple_power $(($1/$2)) $2\n\
    \  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo \"true\"\n  elif [ $1 -eq $2 ]; then\n    echo \"true\"\n  elif [ $1\
    \ -gt $2 ]; then\n    if [ $(($1 % $2)) -eq 0 ]; then\n      is_simple_power $(($1\
    \ / $2)) $2\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -eq $2 ]; then\n        echo \"true\"\
    \n    elif [ $1 -gt $2 ]; then\n        is_simple_power $(($1/$2)) $2\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n\
    \    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $1 -eq $2 ]; then\n        echo true\n \
    \   elif [ $1 -gt $2 ]; then\n        is_simple_power $(( $1 / $2 )) $2\n    else\n\
    \        echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n  \
    \  [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    local x=$1\n   \
    \ local n=$2\n    local result=$(echo \"$x $n\" | awk '{print ($1**(1/$2))}')\n\
    \    if [[ $result =~ ^[0-9]+$ ]]; then\n        echo \"true\"\n    else\n   \
    \     echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n  \
    \  [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  local result=$(echo \"$x/$n\" | bc -l)\n  local int_result=$(echo \"\
    $result\" | awk '{printf(\"%d\\n\",$1 + 0.5)}')\n  if [ \"$result\" == \"$int_result\"\
    \ ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $1 -eq $2 ]; then\n        echo true\n \
    \   elif [ $1 -lt $2 ]; then\n        echo false\n    else\n        is_simple_power\
    \ $(($1/$2)) $2\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo true\n  elif [ $1 -eq $2 ]; then\n    echo true\n  elif [ $1 -lt $2\
    \ ]; then\n    echo false\n  else\n    is_simple_power $(($1/$2)) $2\n  fi\n}\n\
    \ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ]\
    \ && [ $2 -eq 1 ]; then\n        echo \"true\"\n    elif [ $1 -eq $2 ]; then\n\
    \        echo \"true\"\n    elif [ $1 -eq $(($2 * $2)) ]; then\n        echo \"\
    true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo true\n        return\n    fi\n    if [[ $1 -eq $2 ]]; then\n\
    \        echo true\n        return\n    fi\n    if [[ $1 -lt $2 ]]; then\n   \
    \     echo false\n        return\n    fi\n    if [[ $1%$2 -eq 0 ]]; then\n   \
    \     is_simple_power $(( $1/$2 )) $2\n    else\n        echo false\n    fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo true\n        return\n    fi\n    if [[ $1 -eq $2 ]]; then\n\
    \        echo true\n        return\n    fi\n    if [[ $1 -lt $2 ]]; then\n   \
    \     echo false\n        return\n    fi\n    if [[ $1%$2 -eq 0 ]]; then\n   \
    \     is_simple_power $(($1/$2)) $2\n    else\n        echo false\n    fi\n}\n\
    \ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo \"true\"\n    elif [[ $1 -eq $2 ]]; then\n        echo \"\
    true\"\n    elif [[ $1 -gt $2 ]]; then\n        if [[ $(( $1 % $2 )) -eq 0 ]];\
    \ then\n            is_simple_power $(( $1 / $2 )) $2\n        else\n        \
    \    echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\
    \ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $1 -eq $2 ]; then\n        echo true\n \
    \   elif [ $1 -gt $2 ]; then\n        if [ $(( $1 % $2 )) -eq 0 ]; then\n    \
    \        is_simple_power $(( $1 / $2 )) $2\n        else\n            echo false\n\
    \        fi\n    else\n        echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  local result=$(echo \"$x $n\" | awk '{print (log($1)/log($2))}')\n \
    \ if [[ $result =~ ^[0-9]+$ ]]; then\n    echo true\n  else\n    echo false\n\
    \  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'awk: cmd. line:1: (FILENAME=- FNR=1) fatal: division by zero attempted

    '
  stdout: ''
  timestamp: 1660012211
- exit_code: -1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  local result=$(echo \"$x / $n\" | bc)\n  if [ \"$result\" -eq \"$result\"\
    \ ] 2>/dev/null; then\n    if [ \"$result\" -eq \"1\" ]; then\n      echo \"true\"\
    \n    else\n      is_simple_power \"$result\" \"$n\"\n    fi\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=13 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=8 encoding='utf-8'>
  timestamp: 1660012216
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo true\n  elif [ $1 -eq $2 ]; then\n    echo true\n  elif [ $1 -lt $2\
    \ ]; then\n    echo false\n  else\n    is_simple_power $(($1/$2)) $2\n  fi\n}\n\
    \ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ]\n\
    \    then\n        echo true\n    elif [ $1 -eq $2 ]\n    then\n        echo true\n\
    \    elif [ $1 -gt $2 ]\n    then\n        if [ $(( $1 % $2 )) -eq 0 ]\n     \
    \   then\n            is_simple_power $(( $1 / $2 )) $2\n        else\n      \
    \      echo false\n        fi\n    else\n        echo false\n    fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $1 -eq $2 ]; then\n        echo true\n \
    \   elif [ $1 -lt $2 ]; then\n        echo false\n    else\n        is_simple_power\
    \ $(($1/$2)) $2\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 -eq 1 ]];\
    \ then\n    echo \"true\"\n  elif [[ $1 -eq $2 ]]; then\n    echo \"true\"\n \
    \ elif [[ $1 -gt $2 ]]; then\n    if [[ $(($1 % $2)) -eq 0 ]]; then\n      is_simple_power\
    \ $(($1 / $2)) $2\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"\
    false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq $(echo\
    \ \"$2^$(echo \"l($1)/l($2)\" | bc -l)\" | bc -l) ]; then\n        echo \"true\"\
    \n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'Runtime warning (func=(main), adr=28): non-zero scale in exponent

    Runtime warning (func=(main), adr=29): non-zero scale in exponent

    Runtime warning (func=(main), adr=28): non-zero scale in exponent

    Runtime warning (func=(main), adr=28): non-zero scale in exponent

    Runtime warning (func=(main), adr=28): non-zero scale in exponent

    Runtime warning (func=(main), adr=28): non-zero scale in exponent

    Runtime warning (func=(main), adr=28): non-zero scale in exponent

    Runtime warning (func=(main), adr=28): non-zero scale in exponent

    Runtime error (func=(main), adr=11): Divide by zero

    (standard_in) 2: syntax error

    /tmp/tmpvgmj59mr.sh: line 22: [: 1: unary operator expected

    '
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ]\n\
    \    then\n        echo true\n    elif [ $1 -eq $2 ]\n    then\n        echo true\n\
    \    elif [ $1 -gt $2 ]\n    then\n        is_simple_power $(($1/$2)) $2\n   \
    \ else\n        echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n\
    \    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]\n\
    \  then\n    echo true\n  elif [ $1 -eq $2 ]\n  then\n    echo true\n  elif [\
    \ $1 -gt $2 ]\n  then\n    if [ $(( $1 % $2 )) -eq 0 ]\n    then\n      is_simple_power\
    \ $(( $1 / $2 )) $2\n    else\n      echo false\n    fi\n  else\n    echo false\n\
    \  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq $2 ];\
    \ then\n    echo \"true\"\n  elif [ $1 -eq 1 ]; then\n    echo \"false\"\n  elif\
    \ [ $1 -lt $2 ]; then\n    echo \"false\"\n  elif [ $1 -gt $2 ]; then\n    if\
    \ [ $(( $1 % $2 )) -eq 0 ]; then\n      is_simple_power $(( $1 / $2 )) $2\n  \
    \  else\n      echo \"false\"\n    fi\n  fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $1 -eq $2 ]; then\n        echo true\n \
    \   elif [ $1 -gt $2 ]; then\n        is_simple_power $(($1/$2)) $2\n    else\n\
    \        echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n  \
    \  [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq $2 ];\
    \ then\n    echo true\n  elif [ $1 -eq 1 ]; then\n    echo false\n  elif [ $1\
    \ -eq 0 ]; then\n    echo false\n  elif [ $1 -gt $2 ]; then\n    is_simple_power\
    \ $(( $1 / $2 )) $2\n  else\n    echo false\n  fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  local result=$(echo \"$x/$n\" | bc -l)\n  local int=$(echo \"$result\"\
    \ | awk '{printf(\"%d\\n\",$1 + 0.5)}')\n  if [ \"$result\" == \"$int\" ]; then\n\
    \    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n   \
    \ is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 2
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $# -ne 2 ];\
    \ then\n        echo \"Usage: $0 <integer> <integer>\"\n        exit 1\n    fi\n\
    \    if ! [[ $1 =~ ^[0-9]+$ ]]; then\n        echo \"Error: $1 is not an integer\"\
    \n        exit 1\n    fi\n    if ! [[ $2 =~ ^[0-9]+$ ]]; then\n        echo \"\
    Error: $2 is not an integer\"\n        exit 1\n    fi\n    if [ $2 -eq 0 ]; then\n\
    \        echo \"Error: $2 is equal to 0\"\n        exit 1\n    fi\n    if [ $1\
    \ -eq 0 ]; then\n        echo \"Error: $1 is equal to 0\"\n        exit 1\n  \
    \  fi\n    if [ $1 -eq 1 ]; then\n        echo \"true\"\n        exit 0\n    fi\n\
    \    if [ $2 -eq 1 ]; then\n        echo \"true\"\n        exit 0\n    fi\n  \
    \  if [ $1 -eq $2 ]; then\n        echo \"true\"\n        exit 0\n    fi\n   \
    \ if [ $1 -eq $(( $2 * $2 )) ]; then\n        echo \"true\"\n        exit 0\n\
    \    fi\n    if [ $1 -eq $(( $2 * $2 * $2 )) ]; then\n        echo \"true\"\n\
    \        exit 0\n    fi\n    if [ $1 -eq $(( $2 * $2 * $2 * $2 )) ]; then\n  \
    \      echo \"true\"\n        exit 0\n    fi\n    if [ $1 -eq $(( $2 * $2 * $2\
    \ * $2 * $2 )) ]; then\n        echo \"true\"\n        exit 0\n    fi\n    if\
    \ [ $1 -eq $(( $2 * $2 * $2 * $2 * $2 * $2 )) ]; then\n        echo \"true\"\n\
    \        exit 0\n    fi\n    if [ $1 -eq $(( $2 * $2 * $2 * $2 * $2 * $2 * $2\
    \ )) ]; then\n        echo \"true\"\n        exit 0\n    fi\n    if [ $1 -eq $((\
    \ $2 * $2 * $2 * $2 * $2 * $2 * $2 * $2 )) ]; then\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbexpzc8o.sh: line 79: syntax error near unexpected token `}''

    /tmp/tmpbexpzc8o.sh: line 79: `}''

    '
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  local result=$(echo \"scale=0; $x/$n\" | bc)\n  if [ $result -eq $(echo\
    \ \"scale=0; $n^$result\" | bc) ]; then\n    echo \"true\"\n  else\n    echo \"\
    false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    local x=$1\n   \
    \ local n=$2\n    local result=$(echo \"$x/$n\" | bc -l)\n    local int_result=$(echo\
    \ \"$result\" | sed 's/\\..*//')\n    if [ \"$result\" == \"$int_result\" ]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq $2 ]\n\
    \  then\n    echo true\n  elif [ $1 -eq 1 ]\n  then\n    echo false\n  elif [\
    \ $1 -eq 0 ]\n  then\n    echo false\n  elif [ $1 -lt $2 ]\n  then\n    echo false\n\
    \  elif [ $1 -gt $2 ]\n  then\n    if [ $(($1 % $2)) -eq 0 ]\n    then\n     \
    \ is_simple_power $(($1 / $2)) $2\n    else\n      echo false\n    fi\n  fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq $2 ]\n\
    \  then\n    echo true\n  elif [ $1 -eq 1 ]\n  then\n    echo false\n  elif [\
    \ $1 -eq 0 ]\n  then\n    echo false\n  elif [ $1 -lt $2 ]\n  then\n    echo false\n\
    \  elif [ $(( $1 % $2 )) -eq 0 ]\n  then\n    is_simple_power $(( $1 / $2 )) $2\n\
    \  else\n    echo false\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n  \
    \  [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq $(bc <<<\
    \ \"$2^$(bc <<< \"l($1)/l($2)\")\") ]; then\n    echo true\n  else\n    echo false\n\
    \  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'Runtime error (func=(main), adr=6): Function l not defined.

    (standard_in) 2: syntax error

    /tmp/tmp03ckhqp8.sh: line 22: [: 16: unary operator expected

    '
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo \"true\"\n  elif [ $1 -eq $2 ]; then\n    echo \"true\"\n  elif [ $1\
    \ -gt $2 ]; then\n    if [ $(($1 % $2)) -eq 0 ]; then\n      is_simple_power $(($1\
    \ / $2)) $2\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 2
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 0 ];\
    \ then\n        echo \"false\"\n        return\n    fi\n    if [ $1 -eq 1 ]; then\n\
    \        echo \"true\"\n        return\n    fi\n    if [ $2 -eq 0 ]; then\n  \
    \      echo \"false\"\n        return\n    fi\n    if [ $2 -eq 1 ]; then\n   \
    \     echo \"true\"\n        return\n    fi\n    if [ $1 -eq $2 ]; then\n    \
    \    echo \"true\"\n        return\n    fi\n    if [ $1 -eq $(($2 * $2)) ]; then\n\
    \        echo \"true\"\n        return\n    fi\n    if [ $1 -eq $(($2 * $2 * $2))\
    \ ]; then\n        echo \"true\"\n        return\n    fi\n    if [ $1 -eq $(($2\
    \ * $2 * $2 * $2)) ]; then\n        echo \"true\"\n        return\n    fi\n  \
    \  if [ $1 -eq $(($2 * $2 * $2 * $2 * $2)) ]; then\n        echo \"true\"\n  \
    \      return\n    fi\n    if [ $1 -eq $(($2 * $2 * $2 * $2 * $2 * $2)) ]; then\n\
    \        echo \"true\"\n        return\n    fi\n    if [ $1 -eq $(($2 * $2 * $2\
    \ * $2 * $2 * $2 * $2)) ]; then\n        echo \"true\"\n        return\n    fi\n\
    \    if [ $1 -eq $(($2 * $2 * $2 * $2 * $2 * $2 * $2 * $2)) ]; then\n        echo\
    \ \"true\"\n        return\n    fi\n    if [ $1 -eq $(($2 * $2 * $2 * $2 * $2\
    \ * $2 * $2 * $2 * $2)) ]; then\n        echo \"true\"\n        return\n    fi\n\
    \    if [ $1 -eq $(($2 * $2 * $2 * $2 * $2 * $2 * $2 * $2 * $2 * $2)) ]; then\n\
    \        echo \"true\"\n        return\n    fi\n    if [ $1 -eq $(($2 * $2 * $2\
    \ * $2 * $2 * $2 *\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpky5czzdz.sh: line 78: unexpected EOF while looking for matching
    `)''

    /tmp/tmpky5czzdz.sh: line 100: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  local int=$(echo \"scale=0; l($x)/l($n)\" | bc -l)\n  if [[ $x -eq $(echo\
    \ \"$n^$int\" | bc -l) ]]; then\n    echo true\n  else\n    echo false\n  fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: 'Runtime error (func=(main), adr=20): Divide by zero

    (standard_in) 2: syntax error

    '
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    # Write your code\
    \ here\n    # $1 is an integer\n    # $2 is an integer\n    if [ $1 -eq 1 ]; then\n\
    \        echo \"true\"\n    elif [ $1 -eq $2 ]; then\n        echo \"true\"\n\
    \    elif [ $1 -gt $2 ]; then\n        if [ $(( $1 % $2 )) -eq 0 ]; then\n   \
    \         is_simple_power $(( $1 / $2 )) $2\n        else\n            echo \"\
    false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 2
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq $2 ];\
    \ then\n    echo true\n  elif [ $1 -eq 1 ]; then\n    echo false\n  elif [ $1\
    \ -eq 0 ]; then\n    echo false\n  elif [ $1 -eq $(( $2 ** 2 )) ]; then\n    echo\
    \ true\n  elif [ $1 -eq $(( $2 ** 3 )) ]; then\n    echo true\n  elif [ $1 -eq\
    \ $(( $2 ** 4 )) ]; then\n    echo true\n  elif [ $1 -eq $(( $2 ** 5 )) ]; then\n\
    \    echo true\n  elif [ $1 -eq $(( $2 ** 6 )) ]; then\n    echo true\n  elif\
    \ [ $1 -eq $(( $2 ** 7 )) ]; then\n    echo true\n  elif [ $1 -eq $(( $2 ** 8\
    \ )) ]; then\n    echo true\n  elif [ $1 -eq $(( $2 ** 9 )) ]; then\n    echo\
    \ true\n  elif [ $1 -eq $(( $2 ** 10 )) ]; then\n    echo true\n  elif [ $1 -eq\
    \ $(( $2 ** 11 )) ]; then\n    echo true\n  elif [ $1 -eq $(( $2 ** 12 )) ]; then\n\
    \    echo true\n  elif [ $1 -eq $(( $2 ** 13 )) ]; then\n    echo true\n  elif\
    \ [ $1 -eq $(( $2 ** 14 )) ]; then\n    echo true\n  elif [ $1 -eq $(( $2 ** 15\
    \ )) ]; then\n    echo true\n  elif [ $1 -eq $(( $2 ** 16 )) ]; then\n    echo\
    \ true\n  elif [ $1 -eq $(( $2 ** 17 )) ]; then\n    echo true\n  elif [ $1 -eq\
    \ $(( $2 ** 18 )) ]; then\n    echo true\n  elif [ $1 -eq $(( $2 ** 19 )) ]; then\n\
    \    echo true\n  elif [ $1 -eq $(( $2 ** 20 )) ]; then\n    echo true\n  elif\
    \ [ $1 -eq $(( $2 ** 21 )) ]; then\n    echo true\n  elif [ $1 -eq $(( $2 ** 22\
    \ )) ]; then\n    echo true\n \n}\n\ncandidate() {\n    is_simple_power \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n\
    \    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpplvpmg71.sh: line 71: syntax error near unexpected token `}''

    /tmp/tmpplvpmg71.sh: line 71: `}''

    '
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -eq $2 ]; then\n        echo \"true\"\
    \n    elif [ $1 -lt $2 ]; then\n        echo \"false\"\n    else\n        is_simple_power\
    \ $(($1/$2)) $2\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo \"true\"\n  elif [ $1 -eq $2 ]; then\n    echo \"true\"\n  elif [ $1\
    \ -gt $2 ]; then\n    if [ $(( $1 % $2 )) -eq 0 ]; then\n      is_simple_power\
    \ $(( $1 / $2 )) $2\n    else\n      echo \"false\"\n    fi\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 -eq 1 ]];\
    \ then\n    echo \"true\"\n  elif [[ $1 -eq $2 ]]; then\n    echo \"true\"\n \
    \ elif [[ $1 -gt $2 ]]; then\n    echo \"false\"\n  else\n    is_simple_power\
    \ $(($1*$2)) $2\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  local result=$(echo \"$x $n\" | awk '{print log($1)/log($2)}')\n  if\
    \ [[ $result =~ ^[0-9]+$ ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'awk: cmd. line:1: (FILENAME=- FNR=1) fatal: division by zero attempted

    '
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $1 -eq $2 ]; then\n        echo true\n \
    \   elif [ $1 -gt $2 ]; then\n        if [ $(( $1 % $2 )) -eq 0 ]; then\n    \
    \        is_simple_power $(( $1 / $2 )) $2\n        else\n            echo false\n\
    \        fi\n    else\n        echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 -eq 1 ]];\
    \ then\n    echo true\n  elif [[ $1 -eq $2 ]]; then\n    echo true\n  elif [[\
    \ $1 -eq $(($2 * $2)) ]]; then\n    echo true\n  else\n    echo false\n  fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ \"$1\" -eq \"\
    1\" ]; then\n    echo \"true\"\n  elif [ \"$1\" -eq \"$2\" ]; then\n    echo \"\
    true\"\n  elif [ \"$1\" -gt \"$2\" ]; then\n    if [ \"$(($1 % $2))\" -eq \"0\"\
    \ ]; then\n      is_simple_power \"$(($1 / $2))\" \"$2\"\n    else\n      echo\
    \ \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n  \
    \  is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  local result=$(echo \"$x / $n\" | bc)\n  local result2=$(echo \"$result\
    \ / $n\" | bc)\n  if [ $result -eq $n ] && [ $result2 -eq 1 ]; then\n    echo\
    \ \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -eq $2 ]; then\n        echo \"true\"\
    \n    elif [ $1 -gt $2 ]; then\n        is_simple_power $(( $1 / $2 )) $2\n  \
    \  else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -eq $2 ]; then\n        echo \"true\"\
    \n    elif [ $1 -lt $2 ]; then\n        echo \"false\"\n    else\n        is_simple_power\
    \ $(($1/$2)) $2\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo \"true\"\n    elif [[ $1 -eq $2 ]]; then\n        echo \"\
    true\"\n    elif [[ $1 -gt $2 ]]; then\n        if [[ $(( $1 % $2 )) -eq 0 ]];\
    \ then\n            is_simple_power $(( $1 / $2 )) $2\n        else\n        \
    \    echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\
    \ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 2
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 == $2 ]];\
    \ then\n    echo true\n  elif [[ $1 == $(( $2 ** 2 )) ]]; then\n    echo true\n\
    \  elif [[ $1 == $(( $2 ** 3 )) ]]; then\n    echo true\n  elif [[ $1 == $(( $2\
    \ ** 4 )) ]]; then\n    echo true\n  elif [[ $1 == $(( $2 ** 5 )) ]]; then\n \
    \   echo true\n  elif [[ $1 == $(( $2 ** 6 )) ]]; then\n    echo true\n  elif\
    \ [[ $1 == $(( $2 ** 7 )) ]]; then\n    echo true\n  elif [[ $1 == $(( $2 ** 8\
    \ )) ]]; then\n    echo true\n  elif [[ $1 == $(( $2 ** 9 )) ]]; then\n    echo\
    \ true\n  elif [[ $1 == $(( $2 ** 10 )) ]]; then\n    echo true\n  elif [[ $1\
    \ == $(( $2 ** 11 )) ]]; then\n    echo true\n  elif [[ $1 == $(( $2 ** 12 ))\
    \ ]]; then\n    echo true\n  elif [[ $1 == $(( $2 ** 13 )) ]]; then\n    echo\
    \ true\n  elif [[ $1 == $(( $2 ** 14 )) ]]; then\n    echo true\n  elif [[ $1\
    \ == $(( $2 ** 15 )) ]]; then\n    echo true\n  elif [[ $1 == $(( $2 ** 16 ))\
    \ ]]; then\n    echo true\n  elif [[ $1 == $(( $2 ** 17 )) ]]; then\n    echo\
    \ true\n  elif [[ $1 == $(( $2 ** 18 )) ]]; then\n    echo true\n  elif [[ $1\
    \ == $(( $2 ** 19 )) ]]; then\n    echo true\n  elif [[ $1 == $(( $2 ** 20 ))\
    \ ]]; then\n    echo true\n  elif [[ $1 == $(( $2 ** 21 )) ]]; then\n    echo\
    \ true\n  elif [[ $1 == $(( $2 ** 22 )) ]]; then\n    echo true\n  elif [[ $1\
    \ == $(( $2 ** 23 )) ]]; then\n    echo true\n  elif [[ $1 == $(( $2\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp66x8hkk8.sh: line 68: unexpected EOF while looking for matching
    `)''

    /tmp/tmp66x8hkk8.sh: line 90: unexpected argument to conditional binary operator

    /tmp/tmp66x8hkk8.sh: line 90: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]\n\
    \  then\n    echo true\n  elif [ $1 -eq $2 ]\n  then\n    echo true\n  elif [\
    \ $1 -gt $2 ]\n  then\n    if [ $(( $1 % $2 )) -eq 0 ]\n    then\n      is_simple_power\
    \ $(( $1 / $2 )) $2\n    else\n      echo false\n    fi\n  else\n    echo false\n\
    \  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq $(bc <<<\
    \ \"scale=0; $2^$(bc <<< \"scale=0; l($1)/l($2)\")\") ]; then\n    echo \"true\"\
    \n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n\
    \    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'Runtime error (func=(main), adr=10): Function l not defined.

    (standard_in) 2: syntax error

    /tmp/tmp7kop_e10.sh: line 22: [: 16: unary operator expected

    '
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -eq $2 ]; then\n        echo \"true\"\
    \n    elif [ $1 -gt $2 ]; then\n        if [ $(($1 % $2)) -eq 0 ]; then\n    \
    \        is_simple_power $(($1 / $2)) $2\n        else\n            echo \"false\"\
    \n        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n \
    \   is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    local x=$1\n   \
    \ local n=$2\n    local result=$(echo \"$x/$n\" | bc -l)\n    local int_result=$(echo\
    \ \"$result\" | awk '{print int($1)}')\n    if [ \"$result\" == \"$int_result\"\
    \ ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\
    \ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $1 -eq $2 ]; then\n        echo true\n \
    \   elif [ $1 -gt $2 ]; then\n        if [ $1 -eq $(($2 * $2)) ]; then\n     \
    \       echo true\n        else\n            echo false\n        fi\n    else\n\
    \        echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n  \
    \  [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  if [ $n -eq 0 ]; then\n    echo \"false\"\n    return\n  fi\n  if [\
    \ $x -eq 0 ]; then\n    echo \"false\"\n    return\n  fi\n  if [ $n -eq 1 ]; then\n\
    \    echo \"true\"\n    return\n  fi\n  local res=$(echo \"scale=0; l($x)/l($n)\"\
    \ | bc -l)\n  if [ $res -eq 0 ]; then\n    echo \"true\"\n  else\n    echo \"\
    false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'Runtime error (func=(main), adr=20): Divide by zero

    /tmp/tmpc95bjd77.sh: line 37: [: -eq: unary operator expected

    '
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo \"true\"\n  elif [ $1 -eq $2 ]; then\n    echo \"true\"\n  elif [ $1\
    \ -gt $2 ]; then\n    if [ $(($1 % $2)) -eq 0 ]; then\n      is_simple_power $(($1\
    \ / $2)) $2\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq $2 ]\n\
    \    then\n        echo true\n    elif [ $1 -gt $2 ]\n    then\n        echo false\n\
    \    else\n        is_simple_power $(($1 * $2)) $2\n    fi\n}\n\ncandidate() {\n\
    \    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -eq $2 ]; then\n        echo \"true\"\
    \n    elif [ $1 -gt $2 ]; then\n        is_simple_power $(($1/$2)) $2\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n\
    \    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  local result=$(echo \"scale=0; $x/$n\" | bc)\n  if [ $result -eq $(echo\
    \ \"scale=0; $n^$result\" | bc) ]; then\n    echo \"true\"\n  else\n    echo \"\
    false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $1 -eq $2 ]; then\n        echo true\n \
    \   elif [ $1 -gt $2 ]; then\n        is_simple_power $(( $1 / $2 )) $2\n    else\n\
    \        echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n  \
    \  [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ]\n\
    \    then\n        echo true\n    elif [ $1 -eq $2 ]\n    then\n        echo true\n\
    \    elif [ $1 -gt $2 ]\n    then\n        if [ $(($1 % $2)) -eq 0 ]\n       \
    \ then\n            is_simple_power $(($1 / $2)) $2\n        else\n          \
    \  echo false\n        fi\n    else\n        echo false\n    fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq $(echo\
    \ \"scale=0; $2^$(echo \"scale=0; l($1)/l($2)\" | bc -l)\" | bc -l) ]; then\n\
    \    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n   \
    \ is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'Runtime error (func=(main), adr=20): Divide by zero

    (standard_in) 2: syntax error

    /tmp/tmpks94_1_w.sh: line 22: [: 16: unary operator expected

    '
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo true\n        return\n    fi\n    if [[ $1 -eq 0 ]]; then\n\
    \        echo false\n        return\n    fi\n    if [[ $1 -eq $2 ]]; then\n  \
    \      echo true\n        return\n    fi\n    if [[ $1 -lt $2 ]]; then\n     \
    \   echo false\n        return\n    fi\n    is_simple_power $(($1/$2)) $2\n}\n\
    \ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo true\n        return\n    fi\n    if [[ $1 -eq $2 ]]; then\n\
    \        echo true\n        return\n    fi\n    if [[ $1 -lt $2 ]]; then\n   \
    \     echo false\n        return\n    fi\n    local result=$(($1/$2))\n    if\
    \ [[ $result -eq $2 ]]; then\n        echo true\n        return\n    fi\n    is_simple_power\
    \ $result $2\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $1 -eq $2 ]; then\n        echo true\n \
    \   elif [ $1 -gt $2 ]; then\n        is_simple_power $(($1/$2)) $2\n    else\n\
    \        echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n  \
    \  [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo \"true\"\n  elif [ $1 -eq $2 ]; then\n    echo \"true\"\n  elif [ $1\
    \ -gt $2 ]; then\n    if [ $(( $1 % $2 )) -eq 0 ]; then\n      is_simple_power\
    \ $(( $1 / $2 )) $2\n    else\n      echo \"false\"\n    fi\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo true\n        return\n    fi\n    if [[ $1 -eq $2 ]]; then\n\
    \        echo true\n        return\n    fi\n    if [[ $1 -eq 0 ]]; then\n    \
    \    echo false\n        return\n    fi\n    if [[ $1 -lt $2 ]]; then\n      \
    \  echo false\n        return\n    fi\n    local result=$(bc <<< \"$1 % $2\")\n\
    \    if [[ $result -eq 0 ]]; then\n        is_simple_power $(bc <<< \"$1 / $2\"\
    ) $2\n    else\n        echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $1 -eq $2 ]; then\n        echo true\n \
    \   elif [ $1 -gt $2 ]; then\n        is_simple_power $(( $1 / $2 )) $2\n    else\n\
    \        echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n  \
    \  [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $1 -eq $2 ]; then\n        echo true\n \
    \   elif [ $1 -gt $2 ]; then\n        is_simple_power $(($1/$2)) $2\n    else\n\
    \        echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n  \
    \  [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo true\n  elif [ $1 -eq $2 ]; then\n    echo true\n  elif [ $1 -lt $2\
    \ ]; then\n    echo false\n  else\n    is_simple_power $(($1/$2)) $2\n  fi\n}\n\
    \ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 -eq 1 ]];\
    \ then\n    echo \"true\"\n  elif [[ $1 -eq $2 ]]; then\n    echo \"true\"\n \
    \ elif [[ $1 -gt $2 ]]; then\n    if [[ $(( $1 % $2 )) -eq 0 ]]; then\n      is_simple_power\
    \ $(( $1 / $2 )) $2\n    else\n      echo \"false\"\n    fi\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -eq $2 ]; then\n        echo \"true\"\
    \n    elif [ $1 -lt $2 ]; then\n        echo \"false\"\n    else\n        is_simple_power\
    \ $(($1/$2)) $2\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -eq $2 ]; then\n        echo \"true\"\
    \n    elif [ $1 -gt $2 ]; then\n        is_simple_power $(( $1 / $2 )) $2\n  \
    \  else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ]\n\
    \    then\n        echo true\n    elif [ $1 -eq $2 ]\n    then\n        echo true\n\
    \    elif [ $1 -gt $2 ]\n    then\n        is_simple_power $(( $1 / $2 )) $2\n\
    \    else\n        echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 2
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo \"false\"\n    return\n  fi\n  if [ $1 -eq 1 ]; then\n    echo \"true\"\
    \n    return\n  fi\n  if [ $2 -eq 0 ]; then\n    echo \"false\"\n    return\n\
    \  fi\n  if [ $2 -eq 1 ]; then\n    echo \"true\"\n    return\n  fi\n  if [ $2\
    \ -eq $1 ]; then\n    echo \"true\"\n    return\n  fi\n  if [ $2 -gt $1 ]; then\n\
    \    echo \"false\"\n    return\n  fi\n  if [ $1 -eq $(( $2 ** 2 )) ]; then\n\
    \    echo \"true\"\n    return\n  fi\n  if [ $1 -eq $(( $2 ** 3 )) ]; then\n \
    \   echo \"true\"\n    return\n  fi\n  if [ $1 -eq $(( $2 ** 4 )) ]; then\n  \
    \  echo \"true\"\n    return\n  fi\n  if [ $1 -eq $(( $2 ** 5 )) ]; then\n   \
    \ echo \"true\"\n    return\n  fi\n  if [ $1 -eq $(( $2 ** 6 )) ]; then\n    echo\
    \ \"true\"\n    return\n  fi\n  if [ $1 -eq $(( $2 ** 7 )) ]; then\n    echo \"\
    true\"\n    return\n  fi\n  if [ $1 -eq $(( $2 ** 8 )) ]; then\n    echo \"true\"\
    \n    return\n  fi\n  if [ $1 -eq $(( $2 ** 9 )) ]; then\n    echo \"true\"\n\
    \    return\n  fi\n  if [ $1 -eq $(( $2 ** 10 )) ]; then\n    echo \"true\"\n\
    \    return\n  fi\n  if [ $1 -eq $(( $2 ** 11 )) ]; then\n    echo \"true\"\n\
    \    return\n  fi\n  if [ $1 -eq $(( $2 ** 12 )) ]; then\n    echo \"true\"\n\
    \    return\n  fi\n  if [ $1 -eq $(( $2 ** 13 )) ]; then\n    echo \"true\"\n\
    \    return\n  fi\n  if [ $1 -eq $(( $2 ** 14 )) ]; then\n    echo \"true\"\n\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp341hvxyb.sh: line 97: syntax error near unexpected token `}''

    /tmp/tmp341hvxyb.sh: line 97: `}''

    '
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $1 -eq $2 ]; then\n        echo true\n \
    \   elif [ $1 -gt $2 ]; then\n        local x=$(($1/$2))\n        local y=$(($1%$2))\n\
    \        if [ $y -eq 0 ]; then\n            is_simple_power $x $2\n        else\n\
    \            echo false\n        fi\n    else\n        echo false\n    fi\n}\n\
    \ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq $(bc\
    \ <<< \"scale=0; $2^$(bc <<< \"scale=0; l($1)/l($2)\")\") ]; then\n        echo\
    \ true\n    else\n        echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'Runtime error (func=(main), adr=10): Function l not defined.

    (standard_in) 2: syntax error

    /tmp/tmphtsfz56v.sh: line 22: [: 16: unary operator expected

    '
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ]\n\
    \    then\n        echo true\n    elif [ $1 -eq $2 ]\n    then\n        echo true\n\
    \    elif [ $1 -gt $2 ]\n    then\n        if [ $(( $1 % $2 )) -eq 0 ]\n     \
    \   then\n            is_simple_power $(( $1 / $2 )) $2\n        else\n      \
    \      echo false\n        fi\n    else\n        echo false\n    fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq $(bc <<<\
    \ \"$2^$(bc <<< \"l($1)/l($2)\")\") ]; then\n    echo \"true\"\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'Runtime error (func=(main), adr=6): Function l not defined.

    (standard_in) 2: syntax error

    /tmp/tmp_2ue3v7s.sh: line 22: [: 16: unary operator expected

    '
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq $2 ];\
    \ then\n    echo \"true\"\n  elif [ $1 -eq 1 ]; then\n    echo \"false\"\n  elif\
    \ [ $(( $1 % $2 )) -eq 0 ]; then\n    is_simple_power $(( $1 / $2 )) $2\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\"\
    ) = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate\
    \ \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n\
    \    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"\
    6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ]\n\
    \    then\n        echo true\n    elif [ $1 -eq $2 ]\n    then\n        echo true\n\
    \    elif [ $1 -gt $2 ]\n    then\n        if [ $(( $1 % $2 )) -eq 0 ]\n     \
    \   then\n            is_simple_power $(( $1 / $2 )) $2\n        else\n      \
    \      echo false\n        fi\n    else\n        echo false\n    fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    # Write your code\
    \ here\n    # $1 is an integer\n    # $2 is an integer\n    #\n    # Write your\
    \ code here\n    if [ $1 -eq 1 ]; then\n        echo \"true\"\n    elif [ $1 -eq\
    \ $2 ]; then\n        echo \"true\"\n    elif [ $1 -gt $2 ]; then\n        if\
    \ [ $(( $1 % $2 )) -eq 0 ]; then\n            is_simple_power $(( $1 / $2 )) $2\n\
    \        else\n            echo \"false\"\n        fi\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo true\n  elif [ $1 -eq $2 ]; then\n    echo true\n  elif [ $1 -gt $2\
    \ ]; then\n    if [ $(( $1 % $2 )) -eq 0 ]; then\n      is_simple_power $(( $1\
    \ / $2 )) $2\n    else\n      echo false\n    fi\n  else\n    echo false\n  fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $1 -eq $2 ]; then\n        echo true\n \
    \   elif [ $1 -gt $2 ]; then\n        is_simple_power $(($1/$2)) $2\n    else\n\
    \        echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n  \
    \  [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq $2 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -lt $2 ]; then\n        echo \"false\"\
    \n    else\n        is_simple_power $(($1/$2)) $2\n    fi\n}\n\ncandidate() {\n\
    \    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  local result=$(echo \"$x/$n\" | bc -l)\n  local int_result=$(echo \"\
    $result\" | awk '{print int($1)}')\n  if [ \"$result\" == \"$int_result\" ]; then\n\
    \    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n   \
    \ is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo \"true\"\n    elif [[ $1 -eq $2 ]]; then\n        echo \"\
    true\"\n    elif [[ $1 -lt $2 ]]; then\n        echo \"false\"\n    else\n   \
    \     is_simple_power $(($1/$2)) $2\n    fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $(bc <<< \"\
    $1 % $2\") -eq 0 ]]; then\n    if [[ $(bc <<< \"$1 / $2\") -eq 1 ]]; then\n  \
    \    echo true\n    else\n      is_simple_power $(bc <<< \"$1 / $2\") $2\n   \
    \ fi\n  else\n    echo false\n  fi\n}\n\ncandidate() {\n    is_simple_power \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n\
    \    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -eq $2 ]; then\n        echo \"true\"\
    \n    elif [ $1 -gt $2 ]; then\n        is_simple_power $(($1/$2)) $2\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n\
    \    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo true\n        return\n    fi\n    if [[ $1 -eq $2 ]]; then\n\
    \        echo true\n        return\n    fi\n    if [[ $1 -lt $2 ]]; then\n   \
    \     echo false\n        return\n    fi\n    if [[ $1%$2 -eq 0 ]]; then\n   \
    \     is_simple_power $(( $1/$2 )) $2\n    else\n        echo false\n    fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo \"true\"\n  elif [ $1 -eq $2 ]; then\n    echo \"true\"\n  elif [ $1\
    \ -gt $2 ]; then\n    is_simple_power $(($1/$2)) $2\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo true\n  elif [ $1 -eq $2 ]; then\n    echo true\n  elif [ $1 -gt $2\
    \ ]; then\n    is_simple_power $(($1/$2)) $2\n  else\n    echo false\n  fi\n}\n\
    \ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq $2 ];\
    \ then\n    echo true\n  elif [ $1 -eq 1 ]; then\n    echo false\n  elif [ $1\
    \ -gt $2 ]; then\n    is_simple_power $(( $1 / $2 )) $2\n  else\n    echo false\n\
    \  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 == $2 ]];\
    \ then\n        echo true\n    elif [[ $1 == $(($2**2)) ]]; then\n        echo\
    \ true\n    elif [[ $1 == $(($2**3)) ]]; then\n        echo true\n    elif [[\
    \ $1 == $(($2**4)) ]]; then\n        echo true\n    elif [[ $1 == $(($2**5)) ]];\
    \ then\n        echo true\n    elif [[ $1 == $(($2**6)) ]]; then\n        echo\
    \ true\n    elif [[ $1 == $(($2**7)) ]]; then\n        echo true\n    elif [[\
    \ $1 == $(($2**8)) ]]; then\n        echo true\n    elif [[ $1 == $(($2**9)) ]];\
    \ then\n        echo true\n    elif [[ $1 == $(($2**10)) ]]; then\n        echo\
    \ true\n    else\n        echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 -eq 1 ]];\
    \ then\n    echo true\n  elif [[ $1 -eq $2 ]]; then\n    echo true\n  elif [[\
    \ $1 -gt $2 ]]; then\n    if [[ $1%$2 -eq 0 ]]; then\n      is_simple_power $((\
    \ $1/$2 )) $2\n    else\n      echo false\n    fi\n  else\n    echo false\n  fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    local x=$1\n   \
    \ local n=$2\n    local result=$(echo \"$x $n\" | awk '{print log($1)/log($2)}')\n\
    \    local int_result=$(echo \"$result\" | awk '{print int($1)}')\n    if [ \"\
    $result\" == \"$int_result\" ]; then\n        echo \"true\"\n    else\n      \
    \  echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\"\
    ) = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate\
    \ \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n\
    \    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"\
    6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'awk: cmd. line:1: (FILENAME=- FNR=1) fatal: division by zero attempted

    '
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo true\n  elif [ $1 -eq $2 ]; then\n    echo true\n  elif [ $1 -gt $2\
    \ ]; then\n    echo $(is_simple_power $(($1 / $2)) $2)\n  else\n    echo false\n\
    \  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo \"true\"\n    elif [[ $1 -eq $2 ]]; then\n        echo \"\
    true\"\n    elif [[ $1 -gt $2 ]]; then\n        is_simple_power $(( $1 / $2 ))\
    \ $2\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -eq $2 ]; then\n        echo \"true\"\
    \n    elif [ $1 -eq 0 ]; then\n        echo \"false\"\n    elif [ $1 -lt $2 ];\
    \ then\n        echo \"false\"\n    else\n        is_simple_power $(($1/$2)) $2\n\
    \    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  local result=$(echo \"$x $n\" | awk '{print log($1)/log($2)}')\n  local\
    \ int_result=$(echo \"$result\" | awk '{print int($1)}')\n  if [[ $result -eq\
    \ $int_result ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: '/tmp/tmp67oqqrm3.sh: line 26: [[: 4.28195: syntax error: invalid arithmetic
    operator (error token is ".28195")

    /tmp/tmp67oqqrm3.sh: line 26: [[: 4.58496: syntax error: invalid arithmetic operator
    (error token is ".58496")

    /tmp/tmp67oqqrm3.sh: line 26: [[: 3.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    /tmp/tmp67oqqrm3.sh: line 26: [[: 1.38685: syntax error: invalid arithmetic operator
    (error token is ".38685")

    awk: cmd. line:1: (FILENAME=- FNR=1) fatal: division by zero attempted

    '
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo \"true\"\n  elif [ $1 -eq $2 ]; then\n    echo \"true\"\n  elif [ $1\
    \ -gt $2 ]; then\n    if [ $(( $1 % $2 )) -eq 0 ]; then\n      is_simple_power\
    \ $(( $1 / $2 )) $2\n    else\n      echo \"false\"\n    fi\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq $(bc\
    \ <<< \"scale=0;$2^$(bc <<< \"scale=0;l($1)/l($2)\")\") ]; then\n        echo\
    \ \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n   \
    \ is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'Runtime error (func=(main), adr=10): Function l not defined.

    (standard_in) 2: syntax error

    /tmp/tmp3nhk1ob1.sh: line 22: [: 16: unary operator expected

    '
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  local result=$(echo \"$x / $n\" | bc)\n  if [ $result -eq 1 ]; then\n\
    \    echo true\n  else\n    echo false\n  fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ]\n\
    \    then\n        echo true\n    elif [ $1 -eq $2 ]\n    then\n        echo true\n\
    \    elif [ $1 -gt $2 ]\n    then\n        if [ $(( $1 % $2 )) -eq 0 ]\n     \
    \   then\n            is_simple_power $(( $1 / $2 )) $2\n        else\n      \
    \      echo false\n        fi\n    else\n        echo false\n    fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  local result=$(echo \"scale=0; $x/$n\" | bc)\n  if [ \"$result\" -eq\
    \ \"$result\" ] 2>/dev/null; then\n    echo \"true\"\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -eq $2 ]; then\n        echo \"true\"\
    \n    elif [ $1 -gt $2 ]; then\n        if [ $(($1 % $2)) -eq 0 ]; then\n    \
    \        is_simple_power $(($1 / $2)) $2\n        else\n            echo \"false\"\
    \n        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n \
    \   is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo true\n        return\n    fi\n    if [[ $1 -eq $2 ]]; then\n\
    \        echo true\n        return\n    fi\n    if [[ $1 -gt $2 ]]; then\n   \
    \     is_simple_power $(($1/$2)) $2\n    else\n        echo false\n    fi\n}\n\
    \ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq $2 ];\
    \ then\n    echo true\n  elif [ $1 -lt $2 ]; then\n    echo false\n  else\n  \
    \  is_simple_power $(($1/$2)) $2\n  fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  local result=$(echo \"$x $n\" | awk '{print ($1 == $2 ** int($1/$2))}')\n\
    \  echo $result\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo true\n        return\n    fi\n    if [[ $1 -eq $2 ]]; then\n\
    \        echo true\n        return\n    fi\n    if [[ $1 -gt $2 ]]; then\n   \
    \     if [[ $1%$2 -eq 0 ]]; then\n            is_simple_power $(( $1/$2 )) $2\n\
    \        else\n            echo false\n        fi\n    else\n        echo false\n\
    \    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo true\n        return\n    fi\n    if [[ $1 -eq $2 ]]; then\n\
    \        echo true\n        return\n    fi\n    if [[ $1 -lt $2 ]]; then\n   \
    \     echo false\n        return\n    fi\n    local result=$(is_simple_power $(($1\
    \ / $2)) $2)\n    if [[ $result == true ]]; then\n        if [[ $1 -eq $(($2 *\
    \ $2)) ]]; then\n            echo true\n            return\n        fi\n    fi\n\
    \    echo false\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo true\n  elif [ $1 -eq $2 ]; then\n    echo true\n  elif [ $1 -gt $2\
    \ ]; then\n    is_simple_power $(($1/$2)) $2\n  else\n    echo false\n  fi\n}\n\
    \ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  local result=$(echo \"$x/$n\" | bc -l)\n  local int_result=$(echo \"\
    $result\" | cut -d '.' -f 1)\n  local float_result=$(echo \"$result\" | cut -d\
    \ '.' -f 2)\n  if [ \"$float_result\" = \"0\" ]; then\n    echo \"true\"\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\"\
    ) = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate\
    \ \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n\
    \    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"\
    6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq $2 ];\
    \ then\n    echo \"true\"\n  elif [ $1 -eq 1 ]; then\n    echo \"false\"\n  elif\
    \ [ $1 -eq 0 ]; then\n    echo \"false\"\n  elif [ $1 -lt $2 ]; then\n    echo\
    \ \"false\"\n  elif [ $(( $1 % $2 )) -eq 0 ]; then\n    is_simple_power $(( $1\
    \ / $2 )) $2\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 -eq 1 ]];\
    \ then\n    echo true\n  elif [[ $1 -eq $2 ]]; then\n    echo true\n  elif [[\
    \ $1 -gt $2 ]]; then\n    if [[ $(($1 % $2)) -eq 0 ]]; then\n      is_simple_power\
    \ $(($1 / $2)) $2\n    else\n      echo false\n    fi\n  else\n    echo false\n\
    \  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 -eq 1 ]];\
    \ then\n    echo \"true\"\n  elif [[ $1 -eq $2 ]]; then\n    echo \"true\"\n \
    \ elif [[ $1 -eq $(($2**2)) ]]; then\n    echo \"true\"\n  elif [[ $1 -eq $(($2**3))\
    \ ]]; then\n    echo \"true\"\n  elif [[ $1 -eq $(($2**4)) ]]; then\n    echo\
    \ \"true\"\n  elif [[ $1 -eq $(($2**5)) ]]; then\n    echo \"true\"\n  elif [[\
    \ $1 -eq $(($2**6)) ]]; then\n    echo \"true\"\n  elif [[ $1 -eq $(($2**7)) ]];\
    \ then\n    echo \"true\"\n  elif [[ $1 -eq $(($2**8)) ]]; then\n    echo \"true\"\
    \n  elif [[ $1 -eq $(($2**9)) ]]; then\n    echo \"true\"\n  elif [[ $1 -eq $(($2**10))\
    \ ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo \"true\"\n  elif [ $1 -eq $2 ]; then\n    echo \"true\"\n  elif [ $1\
    \ -gt $2 ]; then\n    if [ $(( $1 % $2 )) -eq 0 ]; then\n      is_simple_power\
    \ $(( $1 / $2 )) $2\n    else\n      echo \"false\"\n    fi\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $1 -eq $2 ]; then\n        echo true\n \
    \   elif [ $1 -lt $2 ]; then\n        echo false\n    else\n        is_simple_power\
    \ $(($1/$2)) $2\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    local x=$1\n   \
    \ local n=$2\n    local result=$(echo \"$x/$n\" | bc -l)\n    local int_result=$(echo\
    \ \"$result\" | awk '{print int($1)}')\n    if [ \"$result\" == \"$int_result\"\
    \ ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\
    \ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo true\n        return\n    fi\n    if [[ $1 -eq $2 ]]; then\n\
    \        echo true\n        return\n    fi\n    if [[ $1 -gt $2 ]]; then\n   \
    \     if [[ $(( $1 % $2 )) -eq 0 ]]; then\n            is_simple_power $(( $1\
    \ / $2 )) $2\n        else\n            echo false\n        fi\n    else\n   \
    \     echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq $2 ]\
    \ || [ $1 -eq 1 ]; then\n        echo \"true\"\n    elif [ $1 -lt $2 ]; then\n\
    \        echo \"false\"\n    else\n        is_simple_power $(($1/$2)) $2\n   \
    \ fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo \"true\"\n    elif [ $(echo \"$1 % $2\" | bc) -eq 0 ]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -eq $2 ]; then\n        echo \"true\"\
    \n    elif [ $1 -lt $2 ]; then\n        echo \"false\"\n    else\n        is_simple_power\
    \ $(($1/$2)) $2\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 -eq 1 ]];\
    \ then\n    echo true\n  elif [[ $1 -eq $2 ]]; then\n    echo true\n  elif [[\
    \ $1 -gt $2 ]]; then\n    if [[ $1%$2 -eq 0 ]]; then\n      is_simple_power $(($1/$2))\
    \ $2\n    else\n      echo false\n    fi\n  else\n    echo false\n  fi\n}\n\n\
    candidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ \"$1\" -eq\
    \ \"1\" ]; then\n        echo \"true\"\n    elif [ \"$1\" -eq \"$2\" ]; then\n\
    \        echo \"true\"\n    elif [ \"$1\" -gt \"$2\" ]; then\n        if [ \"\
    $(($1 % $2))\" -eq \"0\" ]; then\n            is_simple_power \"$(($1 / $2))\"\
    \ \"$2\"\n        else\n            echo \"false\"\n        fi\n    else\n   \
    \     echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n  \
    \  [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  # Write your code\
    \ here\n  # $1 is an integer\n  # $2 is an integer\n  # return true or false\n\
    \  echo \"true\"\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 -eq 1 ]];\
    \ then\n    echo true\n  elif [[ $1 -eq $2 ]]; then\n    echo true\n  elif [[\
    \ $1 -gt $2 ]]; then\n    if [[ $1%$2 -eq 0 ]]; then\n      is_simple_power $((\
    \ $1/$2 )) $2\n    else\n      echo false\n    fi\n  else\n    echo false\n  fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]\n\
    \  then\n    echo true\n  elif [ $1 -eq $2 ]\n  then\n    echo true\n  elif [\
    \ $1 -gt $2 ]\n  then\n    if [ $(( $1 % $2 )) -eq 0 ]\n    then\n      is_simple_power\
    \ $(( $1 / $2 )) $2\n    else\n      echo false\n    fi\n  else\n    echo false\n\
    \  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -eq $2 ]; then\n        echo \"true\"\
    \n    elif [ $1 -lt $2 ]; then\n        echo \"false\"\n    else\n        is_simple_power\
    \ $(( $1 / $2 )) $2\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n  \
    \  [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $1 -eq $2 ]; then\n        echo true\n \
    \   elif [ $1 -gt $2 ]; then\n        if [ $(( $1 % $2 )) -eq 0 ]; then\n    \
    \        is_simple_power $(( $1 / $2 )) $2\n        else\n            echo false\n\
    \        fi\n    else\n        echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -eq $2 ]; then\n        echo \"true\"\
    \n    elif [ $1 -lt $2 ]; then\n        echo \"false\"\n    else\n        is_simple_power\
    \ $(($1/$2)) $2\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ]\n\
    \    then\n        echo true\n    elif [ $2 -eq 1 ]\n    then\n        echo false\n\
    \    elif [ $1 -eq $2 ]\n    then\n        echo true\n    elif [ $1 -gt $2 ]\n\
    \    then\n        is_simple_power $(($1/$2)) $2\n    else\n        echo false\n\
    \    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq $2 ]\n\
    \    then\n        echo true\n    elif [ $1 -eq 1 ]\n    then\n        echo false\n\
    \    elif [ $1 -gt $2 ]\n    then\n        is_simple_power $(($1/$2)) $2\n   \
    \ else\n        echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n\
    \    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    local x=$1\n   \
    \ local n=$2\n    local result=$(echo \"$x / $n\" | bc)\n    if [[ $result -eq\
    \ 1 ]]; then\n        echo \"true\"\n    elif [[ $result -eq $n ]]; then\n   \
    \     echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -eq $2 ]; then\n        echo \"true\"\
    \n    elif [ $1 -lt $2 ]; then\n        echo \"false\"\n    else\n        is_simple_power\
    \ $(( $1 / $2 )) $2\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n  \
    \  [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 == 1 ]];\
    \ then\n        echo true\n        return\n    fi\n    if [[ $1 == $2 ]]; then\n\
    \        echo true\n        return\n    fi\n    if [[ $1%$2 != 0 ]]; then\n  \
    \      echo false\n        return\n    fi\n    is_simple_power $(( $1/$2 )) $2\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq $2 ]\n\
    \    then\n        echo true\n    elif [ $1 -eq 1 ]\n    then\n        echo false\n\
    \    elif [ $1 -eq 0 ]\n    then\n        echo false\n    elif [ $1 -lt $2 ]\n\
    \    then\n        echo false\n    elif [ $1 -gt $2 ]\n    then\n        if [\
    \ $(( $1 % $2 )) -eq 0 ]\n        then\n            is_simple_power $(( $1 / $2\
    \ )) $2\n        else\n            echo false\n        fi\n    fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo \"true\"\n  elif [ $1 -eq $2 ]; then\n    echo \"true\"\n  elif [ $1\
    \ -gt $2 ]; then\n    if [ $(( $1 % $2 )) -eq 0 ]; then\n      is_simple_power\
    \ $(( $1 / $2 )) $2\n    else\n      echo \"false\"\n    fi\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo \"true\"\n    elif [[ $1 -eq $2 ]]; then\n        echo \"\
    true\"\n    elif [[ $1 -gt $2 ]]; then\n        local res=$(is_simple_power $(($1/$2))\
    \ $2)\n        if [[ $res == \"true\" ]]; then\n            echo \"true\"\n  \
    \      else\n            echo \"false\"\n        fi\n    else\n        echo \"\
    false\"\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ]\n\
    \    then\n        echo true\n    elif [ $1 -eq $2 ]\n    then\n        echo true\n\
    \    elif [ $1 -gt $2 ]\n    then\n        local result=$(($1 % $2))\n       \
    \ if [ $result -eq 0 ]\n        then\n            local new_result=$(($1 / $2))\n\
    \            is_simple_power $new_result $2\n        else\n            echo false\n\
    \        fi\n    else\n        echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    # Write your code\
    \ here\n    echo \"true\"\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\"\
    ) = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate\
    \ \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n\
    \    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"\
    6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo true\n        return\n    fi\n    if [[ $1 -eq $2 ]]; then\n\
    \        echo true\n        return\n    fi\n    if [[ $1 -lt $2 ]]; then\n   \
    \     echo false\n        return\n    fi\n    local x=$1\n    local n=$2\n   \
    \ local result=1\n    while [[ $result -lt $x ]]; do\n        result=$((result\
    \ * n))\n    done\n    if [[ $result -eq $x ]]; then\n        echo true\n    else\n\
    \        echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n  \
    \  [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $1 -eq $2 ]; then\n        echo true\n \
    \   elif [ $1 -gt $2 ]; then\n        is_simple_power $(($1/$2)) $2\n    else\n\
    \        echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n  \
    \  [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo true\n  elif [ $1 -eq $2 ]; then\n    echo true\n  elif [ $1 -gt $2\
    \ ]; then\n    echo $(is_simple_power $(($1 / $2)) $2)\n  else\n    echo false\n\
    \  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -eq $2 ]; then\n        echo \"true\"\
    \n    elif [ $1 -gt $2 ]; then\n        if [ $(( $1 % $2 )) -eq 0 ]; then\n  \
    \          is_simple_power $(( $1 / $2 )) $2\n        else\n            echo \"\
    false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $1 -eq $2 ]; then\n        echo true\n \
    \   elif [ $1 -lt $2 ]; then\n        echo false\n    else\n        is_simple_power\
    \ $(($1/$2)) $2\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo \"true\"\n  elif [ $1 -eq $2 ]; then\n    echo \"true\"\n  elif [ $1\
    \ -gt $2 ]; then\n    if [ $(($1 % $2)) -eq 0 ]; then\n      is_simple_power $(($1\
    \ / $2)) $2\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    local x=$1\n   \
    \ local n=$2\n    local result=$(echo \"scale=0; $x/$n\" | bc)\n    if [ $result\
    \ -eq $(echo \"scale=0; $n**$result\" | bc) ]; then\n        echo true\n    else\n\
    \        echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n  \
    \  [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    /tmp/tmpx98k1gt_.sh: line 25: [: 8: unary operator expected

    '
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo \"true\"\n  elif [ $1 -eq $2 ]; then\n    echo \"true\"\n  elif [ $1\
    \ -eq $(($2 * $2)) ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 -eq 1 ]];\
    \ then\n    echo \"true\"\n  elif [[ $1 -eq $2 ]]; then\n    echo \"true\"\n \
    \ elif [[ $1 -gt $2 ]]; then\n    if [[ $(( $1 % $2 )) -eq 0 ]]; then\n      is_simple_power\
    \ $(( $1 / $2 )) $2\n    else\n      echo \"false\"\n    fi\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo true\n        return\n    fi\n    if [[ $1 -eq $2 ]]; then\n\
    \        echo true\n        return\n    fi\n    if [[ $1 -lt $2 ]]; then\n   \
    \     echo false\n        return\n    fi\n    if [[ $1%$2 -eq 0 ]]; then\n   \
    \     is_simple_power $(( $1/$2 )) $2\n    else\n        echo false\n    fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $1 -eq $2 ]; then\n        echo true\n \
    \   elif [ $1 -gt $2 ]; then\n        if [ $(( $1 % $2 )) -eq 0 ]; then\n    \
    \        is_simple_power $(( $1 / $2 )) $2\n        else\n            echo false\n\
    \        fi\n    else\n        echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    local x=$1\n   \
    \ local n=$2\n    local result=$(bc <<< \"$x == $n^(($x/$n))\")\n    if [[ $result\
    \ -eq 1 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq $2 ];\
    \ then\n    echo true\n  elif [ $1 -eq 0 ]; then\n    echo false\n  elif [ $1\
    \ -gt $2 ]; then\n    is_simple_power $(( $1 / $2 )) $2\n  else\n    echo false\n\
    \  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -eq $2 ]; then\n        echo \"true\"\
    \n    elif [ $1 -lt $2 ]; then\n        echo \"false\"\n    else\n        is_simple_power\
    \ $(( $1 / $2 )) $2\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n  \
    \  [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ]\n\
    \    then\n        echo true\n    elif [ $1 -eq $2 ]\n    then\n        echo true\n\
    \    elif [ $1 -gt $2 ]\n    then\n        if [ $(( $1 % $2 )) -eq 0 ]\n     \
    \   then\n            is_simple_power $(( $1 / $2 )) $2\n        else\n      \
    \      echo false\n        fi\n    else\n        echo false\n    fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo \"true\"\n  elif [ $1 -eq $2 ]; then\n    echo \"true\"\n  elif [ $1\
    \ -lt $2 ]; then\n    echo \"false\"\n  else\n    is_simple_power $(($1/$2)) $2\n\
    \  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo \"true\"\n  elif [ $1 -eq $2 ]; then\n    echo \"true\"\n  elif [ $1\
    \ -gt $2 ]; then\n    if [ $(($1 % $2)) -eq 0 ]; then\n      is_simple_power $(($1\
    \ / $2)) $2\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo \"true\"\n    elif [[ $1 -eq $2 ]]; then\n        echo \"\
    true\"\n    elif [[ $1 -gt $2 ]]; then\n        if [[ $(( $1 % $2 )) -eq 0 ]];\
    \ then\n            is_simple_power $(( $1 / $2 )) $2\n        else\n        \
    \    echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\
    \ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ] &&\
    \ [ $2 -eq 1 ]; then\n    echo \"true\"\n  elif [ $1 -eq $2 ]; then\n    echo\
    \ \"true\"\n  elif [ $1 -eq $(($2**2)) ]; then\n    echo \"true\"\n  elif [ $1\
    \ -eq $(($2**3)) ]; then\n    echo \"true\"\n  elif [ $1 -eq $(($2**4)) ]; then\n\
    \    echo \"true\"\n  elif [ $1 -eq $(($2**5)) ]; then\n    echo \"true\"\n  elif\
    \ [ $1 -eq $(($2**6)) ]; then\n    echo \"true\"\n  elif [ $1 -eq $(($2**7)) ];\
    \ then\n    echo \"true\"\n  elif [ $1 -eq $(($2**8)) ]; then\n    echo \"true\"\
    \n  elif [ $1 -eq $(($2**9)) ]; then\n    echo \"true\"\n  elif [ $1 -eq $(($2**10))\
    \ ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -eq $2 ]; then\n        echo \"true\"\
    \n    elif [ $1 -eq 0 ]; then\n        echo \"false\"\n    elif [ $1 -lt $2 ];\
    \ then\n        echo \"false\"\n    else\n        is_simple_power $(($1/$2)) $2\n\
    \    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 2
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq $2 ]\n\
    \  then\n    echo true\n  elif [ $1 -eq 1 ]\n  then\n    echo false\n  elif [\
    \ $1 -eq 0 ]\n  then\n    echo false\n  elif [ $1 -lt $2 ]\n  then\n    echo false\n\
    \  elif [ $1 -eq $(($2**2)) ]\n  then\n    echo true\n  elif [ $1 -eq $(($2**3))\
    \ ]\n  then\n    echo true\n  elif [ $1 -eq $(($2**4)) ]\n  then\n    echo true\n\
    \  elif [ $1 -eq $(($2**5)) ]\n  then\n    echo true\n  elif [ $1 -eq $(($2**6))\
    \ ]\n  then\n    echo true\n  elif [ $1 -eq $(($2**7)) ]\n  then\n    echo true\n\
    \  elif [ $1 -eq $(($2**8)) ]\n  then\n    echo true\n  elif [ $1 -eq $(($2**9))\
    \ ]\n  then\n    echo true\n  elif [ $1 -eq $(($2**10)) ]\n  then\n    echo true\n\
    \  elif [ $1 -eq $(($2**11)) ]\n  then\n    echo true\n  elif [ $1 -eq $(($2**12))\
    \ ]\n  then\n    echo true\n  elif [ $1 -eq $(($2**13)) ]\n  then\n    echo true\n\
    \  elif [ $1 -eq $(($2**14)) ]\n  then\n    echo true\n  elif [ $1 -eq $(($2**15))\
    \ ]\n  then\n    echo true\n  elif [ $1 -eq $(($2**16)) ]\n  then\n    echo true\n\
    \  elif [ $1 -eq $(($2**17)) ]\n  then\n    echo true\n  elif [ $1 -eq $(($2**18))\
    \ ]\n  then\n    echo true\n  elif [ $1 -eq $(($2**19)) ]\n  then\n    echo true\n\
    \  elif [ $1 -eq $(($2**20)) ]\n  then\n    echo true\n \n}\n\ncandidate() {\n\
    \    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpnnlvk6fa.sh: line 92: syntax error near unexpected token `}''

    /tmp/tmpnnlvk6fa.sh: line 92: `}''

    '
  stdout: ''
  timestamp: 1660012211
- exit_code: 2
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ]\
    \ && [ $2 -eq 1 ]; then\n        echo true\n    elif [ $1 -eq $2 ]; then\n   \
    \     echo true\n    elif [ $1 -eq $(($2**2)) ]; then\n        echo true\n   \
    \ elif [ $1 -eq $(($2**3)) ]; then\n        echo true\n    elif [ $1 -eq $(($2**4))\
    \ ]; then\n        echo true\n    elif [ $1 -eq $(($2**5)) ]; then\n        echo\
    \ true\n    elif [ $1 -eq $(($2**6)) ]; then\n        echo true\n    elif [ $1\
    \ -eq $(($2**7)) ]; then\n        echo true\n    elif [ $1 -eq $(($2**8)) ]; then\n\
    \        echo true\n    elif [ $1 -eq $(($2**9)) ]; then\n        echo true\n\
    \    elif [ $1 -eq $(($2**10)) ]; then\n        echo true\n    elif [ $1 -eq $(($2**11))\
    \ ]; then\n        echo true\n    elif [ $1 -eq $(($2**12)) ]; then\n        echo\
    \ true\n    elif [ $1 -eq $(($2**13)) ]; then\n        echo true\n    elif [ $1\
    \ -eq $(($2**14)) ]; then\n        echo true\n    elif [ $1 -eq $(($2**15)) ];\
    \ then\n        echo true\n    elif [ $1 -eq $(($2**16)) ]; then\n        echo\
    \ true\n    elif [ $1 -eq $(($2**17)) ]; then\n        echo true\n    elif [ $1\
    \ -eq $(($2**18)) ]; then\n        echo true\n    elif [ $1 -eq $(($2**19)) ];\
    \ then\n        echo true\n    elif [ $1 -eq $(($2**20)) ]; then\n        echo\
    \ true\n    elif [ $1 -eq $(($2**21)) ]; then\n        echo true\n    elif [ $1\
    \ -eq $(($2**22)) ]; then\n        echo true\n    elif [ $1 -eq $(($2**23)) ];\
    \ then\n        echo true\n    elif [ $1 -eq $(\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpq9z1c5ko.sh: line 70: unexpected EOF while looking for matching
    `)''

    /tmp/tmpq9z1c5ko.sh: line 92: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 -eq 1 ]];\
    \ then\n    echo true\n  elif [[ $1 -eq $2 ]]; then\n    echo true\n  elif [[\
    \ $1 -gt $2 ]]; then\n    if [[ $(( $1 % $2 )) -eq 0 ]]; then\n      is_simple_power\
    \ $(( $1 / $2 )) $2\n    else\n      echo false\n    fi\n  else\n    echo false\n\
    \  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo \"true\"\n  elif [ $1 -eq $2 ]; then\n    echo \"true\"\n  elif [ $1\
    \ -gt $2 ]; then\n    is_simple_power $(( $1 / $2 )) $2\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 0 ]\
    \ || [ $2 -eq 0 ]; then\n        echo \"false\"\n        return\n    fi\n    if\
    \ [ $1 -eq 1 ]; then\n        echo \"true\"\n        return\n    fi\n    if [\
    \ $2 -eq 1 ]; then\n        echo \"false\"\n        return\n    fi\n    if [ $1\
    \ -eq $2 ]; then\n        echo \"true\"\n        return\n    fi\n    if [ $(($1\
    \ % $2)) -eq 0 ]; then\n        is_simple_power $(($1 / $2)) $2\n    else\n  \
    \      echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n  \
    \  [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  local result=$(echo \"$x/$n\" | bc -l)\n  local int_result=$(echo \"\
    $result\" | awk '{printf(\"%d\\n\",$1)}')\n  if [ \"$result\" = \"$int_result\"\
    \ ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ]\
    \ && [ $2 -eq 1 ]; then\n        echo true\n    elif [ $1 -eq $2 ]; then\n   \
    \     echo true\n    elif [ $1 -gt $2 ]; then\n        if [ $(( $1 % $2 )) -eq\
    \ 0 ]; then\n            is_simple_power $(( $1 / $2 )) $2\n        else\n   \
    \         echo false\n        fi\n    else\n        echo false\n    fi\n}\n\n\
    candidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  local result=$(echo \"$x/$n\" | bc -l)\n  if [[ $result == *.* ]]; then\n\
    \    echo \"false\"\n  else\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n   \
    \ is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo \"true\"\n  elif [ $1 -eq $2 ]; then\n    echo \"true\"\n  elif [ $1\
    \ -lt $2 ]; then\n    echo \"false\"\n  else\n    is_simple_power $(($1/$2)) $2\n\
    \  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq $(bc <<<\
    \ \"$2^$(bc <<< \"l($1)/l($2)\")\") ]; then\n    echo \"true\"\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'Runtime error (func=(main), adr=6): Function l not defined.

    (standard_in) 2: syntax error

    /tmp/tmp_2ue3v7s.sh: line 22: [: 16: unary operator expected

    '
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]\n\
    \  then\n    echo true\n  elif [ $1 -eq $2 ]\n  then\n    echo true\n  elif [\
    \ $1 -gt $2 ]\n  then\n    is_simple_power $(($1/$2)) $2\n  else\n    echo false\n\
    \  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 -eq 1 ]];\
    \ then\n    echo \"true\"\n  elif [[ $1 -eq $2 ]]; then\n    echo \"true\"\n \
    \ elif [[ $1 -gt $2 ]]; then\n    if [[ $(( $1 % $2 )) -eq 0 ]]; then\n      is_simple_power\
    \ $(( $1 / $2 )) $2\n    else\n      echo \"false\"\n    fi\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]\n\
    \  then\n    echo \"true\"\n  elif [ $1 -eq $2 ]\n  then\n    echo \"true\"\n\
    \  elif [ $1 -gt $2 ]\n  then\n    if [ $(( $1 % $2 )) -eq 0 ]\n    then\n   \
    \   is_simple_power $(( $1 / $2 )) $2\n    else\n      echo \"false\"\n    fi\n\
    \  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n\
    \    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -eq $2 ]; then\n        echo \"true\"\
    \n    elif [ $1 -lt $2 ]; then\n        echo \"false\"\n    else\n        is_simple_power\
    \ $(($1/$2)) $2\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  # Write your code\
    \ here\n  echo \"false\"\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo true\n  elif [ $1 -eq $2 ]; then\n    echo true\n  elif [ $1 -lt $2\
    \ ]; then\n    echo false\n  else\n    is_simple_power $(($1/$2)) $2\n  fi\n}\n\
    \ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo \"true\"\n  elif [ $1 -eq $2 ]; then\n    echo \"true\"\n  elif [ $1\
    \ -gt $2 ]; then\n    if [ $(( $1 % $2 )) -eq 0 ]; then\n      is_simple_power\
    \ $(( $1 / $2 )) $2\n    else\n      echo \"false\"\n    fi\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 -eq 1 ]];\
    \ then\n    echo true\n  elif [[ $1 -eq $2 ]]; then\n    echo true\n  elif [[\
    \ $1 -gt $2 ]]; then\n    if [[ $(( $1 % $2 )) -eq 0 ]]; then\n      is_simple_power\
    \ $(( $1 / $2 )) $2\n    else\n      echo false\n    fi\n  else\n    echo false\n\
    \  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $1 -eq $2 ]; then\n        echo true\n \
    \   elif [ $1 -lt $2 ]; then\n        echo false\n    else\n        is_simple_power\
    \ $(( $1 / $2 )) $2\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n  \
    \  [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq $2 ];\
    \ then\n        echo true\n    elif [ $1 -eq 1 ]; then\n        echo false\n \
    \   elif [ $1 -eq 0 ]; then\n        echo false\n    elif [ $1 -lt $2 ]; then\n\
    \        echo false\n    elif [ $(( $1 % $2 )) -eq 0 ]; then\n        is_simple_power\
    \ $(( $1 / $2 )) $2\n    else\n        echo false\n    fi\n}\n\ncandidate() {\n\
    \    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $1 -eq $2 ]; then\n        echo true\n \
    \   elif [ $1 -gt $2 ]; then\n        is_simple_power $(($1/$2)) $2\n    else\n\
    \        echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n  \
    \  [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  if [[ $x -eq 1 ]]; then\n    echo true\n  elif [[ $x -eq $n ]]; then\n\
    \    echo true\n  elif [[ $x -eq $(($n * $n)) ]]; then\n    echo true\n  else\n\
    \    echo false\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  local result=$(echo \"$x/$n\" | bc -l)\n  if [ \"$result\" == \"$(echo\
    \ \"$result\" | cut -d. -f1)\" ]; then\n    echo \"true\"\n  else\n    echo \"\
    false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo true\n    elif [[ $1 -eq $2 ]]; then\n        echo true\n\
    \    elif [[ $1 -eq 0 ]]; then\n        echo false\n    elif [[ $1 -lt $2 ]];\
    \ then\n        echo false\n    elif [[ $1 -gt $2 ]]; then\n        is_simple_power\
    \ $(($1/$2)) $2\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211
- exit_code: 2
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ \"$1\" -eq\
    \ \"1\" ]; then\n        echo \"true\"\n    elif [ \"$1\" -eq \"$2\" ]; then\n\
    \        echo \"true\"\n    elif [ \"$1\" -eq \"0\" ]; then\n        echo \"false\"\
    \n    elif [ \"$1\" -eq \"1\" ]; then\n        echo \"false\"\n    elif [ \"$1\"\
    \ -eq \"2\" ]; then\n        echo \"false\"\n    elif [ \"$1\" -eq \"3\" ]; then\n\
    \        echo \"false\"\n    elif [ \"$1\" -eq \"4\" ]; then\n        echo \"\
    false\"\n    elif [ \"$1\" -eq \"5\" ]; then\n        echo \"false\"\n    elif\
    \ [ \"$1\" -eq \"6\" ]; then\n        echo \"false\"\n    elif [ \"$1\" -eq \"\
    7\" ]; then\n        echo \"false\"\n    elif [ \"$1\" -eq \"8\" ]; then\n   \
    \     echo \"false\"\n    elif [ \"$1\" -eq \"9\" ]; then\n        echo \"false\"\
    \n    elif [ \"$1\" -eq \"10\" ]; then\n        echo \"false\"\n    elif [ \"\
    $1\" -eq \"11\" ]; then\n        echo \"false\"\n    elif [ \"$1\" -eq \"12\"\
    \ ]; then\n        echo \"false\"\n    elif [ \"$1\" -eq \"13\" ]; then\n    \
    \    echo \"false\"\n    elif [ \"$1\" -eq \"14\" ]; then\n        echo \"false\"\
    \n    elif [ \"$1\" -eq \"15\" ]; then\n        echo \"false\"\n    elif [ \"\
    $1\" -eq \"16\" ]; then\n        echo \"false\"\n    elif [ \"$1\" -eq \"17\"\
    \ ]; then\n        echo \"false\"\n    elif [ \"$1\" -eq \"18\" ]; then\n    \
    \    echo \"false\"\n    elif [ \"$1\" -eq \"19\" ]; then\n        echo \"false\"\
    \n    elif [ \"$1\" -eq \"20\" ]; then\n        echo \"false\"\n    elif [ \"\
    $1\" -eq \"21\" ]; then\n        echo \"false\"\n    elif [ \"$1\" -\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpt35cjuup.sh: line 71: syntax error near unexpected token `}''

    /tmp/tmpt35cjuup.sh: line 71: `}''

    '
  stdout: ''
  timestamp: 1660012211
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $1 -eq $2 ]; then\n        echo true\n \
    \   elif [ $1 -gt $2 ]; then\n        is_simple_power $(($1/$2)) $2\n    else\n\
    \        echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n  \
    \  [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012211

name: HumanEval_136_largest_smallest_integers
language: sh
prompt: "#!/bin/bash\n# Create a function that returns a list (a, b), where 'a' is\n\
  # the largest of negative integers, and 'b' is the smallest\n# of positive integers\
  \ in a list.\n# If there is no negative or positive integers, return them as None.\n\
  # Examples:\n# >>> $(largest_smallest_integers \"2 4 1 3 5 7\")\n# ['\"None\"',\
  \ '\"1\"']\n# >>> $(largest_smallest_integers \"\")\n# ['\"None\"', '\"None\"']\n\
  # >>> $(largest_smallest_integers \"0\")\n# ['\"None\"', '\"None\"']\n#\n# $1 is\
  \ a space-separated list\nlargest_smallest_integers() {\n"
tests: "}\n\ncandidate() {\n    largest_smallest_integers \"$@\"\n}\n\nset -e\nrun_test()\
  \ {\n    [[ $(candidate \"2 4 1 3 5 7\") = \"None 1\" ]]\n    [[ $(candidate \"\
  2 4 1 3 5 7 0\") = \"None 1\" ]]\n    [[ $(candidate \"1 3 2 4 5 6 -2\") = \"-2\
  \ 1\" ]]\n    [[ $(candidate \"4 5 3 6 2 7 -7\") = \"-7 2\" ]]\n    [[ $(candidate\
  \ \"7 3 8 4 9 2 5 -9\") = \"-9 2\" ]]\n    [[ $(candidate \"\") = \"None None\"\
  \ ]]\n    [[ $(candidate \"0\") = \"None None\" ]]\n    [[ $(candidate \"-1 -3 -5\
  \ -6\") = \"-1 None\" ]]\n    [[ $(candidate \"-1 -3 -5 -6 0\") = \"-1 None\" ]]\n\
  \    [[ $(candidate \"-6 -4 -4 -3 1\") = \"-3 1\" ]]\n    [[ $(candidate \"-6 -4\
  \ -4 -3 -100 1\") = \"-3 1\" ]]\n}\n\nrun_test"
completions: ["  local -a arr=($1)\n  local -a neg=()\n  local -a pos=()\n  local\
    \ -a res=()\n  for i in \"${arr[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n     \
    \ neg+=($i)\n    elif [[ $i -gt 0 ]]; then\n      pos+=($i)\n    fi\n  done\n\
    \  if [[ ${#neg[@]} -eq 0 ]]; then\n    res+=(\"None\")\n  else\n    res+=(\"\
    $(printf \"%s\\n\" \"${neg[@]}\" | sort -nr | head -n1)\")\n  fi\n  if [[ ${#pos[@]}\
    \ -eq 0 ]]; then\n    res+=(\"None\")\n  else\n    res+=(\"$(printf \"%s\\n\"\
    \ \"${pos[@]}\" | sort -n | head -n1)\")\n  fi\n  echo \"${res[@]}\"", "    local\
    \ -a list=($1)\n    local -a negatives\n    local -a positives\n    local -a result\n\
    \    local i\n    for i in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n\
    \            negatives+=($i)\n        elif [[ $i -gt 0 ]]; then\n            positives+=($i)\n\
    \        fi\n    done\n    if [[ ${#negatives[@]} -eq 0 ]]; then\n        result+=(None)\n\
    \    else\n        result+=($(printf \"%s\\n\" \"${negatives[@]}\" | sort -nr\
    \ | head -n 1))\n    fi\n    if [[ ${#positives[@]} -eq 0 ]]; then\n        result+=(None)\n\
    \    else\n        result+=($(printf \"%s\\n\" \"${positives[@]}\" | sort -n |\
    \ head -n 1))\n    fi\n    echo \"${result[@]}\"", "  local -a a=($1)\n  local\
    \ -i i\n  local -i max_neg=0\n  local -i min_pos=0\n  local -i n=${#a[@]}\n  for\
    \ ((i=0; i<n; i++)); do\n    if [[ ${a[i]} -lt 0 ]]; then\n      if [[ ${a[i]}\
    \ -gt $max_neg ]]; then\n        max_neg=${a[i]}\n      fi\n    elif [[ ${a[i]}\
    \ -gt 0 ]]; then\n      if [[ $min_pos -eq 0 ]]; then\n        min_pos=${a[i]}\n\
    \      elif [[ ${a[i]} -lt $min_pos ]]; then\n        min_pos=${a[i]}\n      fi\n\
    \    fi\n  done\n  if [[ $max_neg -eq 0 ]]; then\n    max_neg=None\n  fi\n  if\
    \ [[ $min_pos -eq 0 ]]; then\n    min_pos=None\n  fi\n  echo \"[\\\"$max_neg\\\
    \", \\\"$min_pos\\\"]\"", "    local -a list=($1)\n    local -a pos=()\n    local\
    \ -a neg=()\n    local -a res=()\n    local -i i=0\n    local -i j=0\n    local\
    \ -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n\
    \    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local\
    \ -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n\
    \    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n  \
    \  local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n  \
    \  local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n  \
    \  local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n  \
    \  local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n  \
    \  local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n  \
    \  local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n  \
    \  local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n\
    \    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n\
    \    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n\
    \   ", "  local -a list=($1)\n  local -i largest_negative=0\n  local -i smallest_positive=0\n\
    \  local -i i=0\n\n  for ((i=0; i<${#list[@]}; i++)); do\n    if [[ ${list[$i]}\
    \ -lt 0 ]]; then\n      if [[ ${list[$i]} -gt $largest_negative ]]; then\n   \
    \     largest_negative=${list[$i]}\n      fi\n    elif [[ ${list[$i]} -gt 0 ]];\
    \ then\n      if [[ $smallest_positive -eq 0 ]]; then\n        smallest_positive=${list[$i]}\n\
    \      elif [[ ${list[$i]} -lt $smallest_positive ]]; then\n        smallest_positive=${list[$i]}\n\
    \      fi\n    fi\n  done\n\n  if [[ $largest_negative -eq 0 ]]; then\n    largest_negative=\"\
    None\"\n  fi\n\n  if [[ $smallest_positive -eq 0 ]]; then\n    smallest_positive=\"\
    None\"\n  fi\n\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\"\
    ]\"", "  local largest_negative=None\n  local smallest_positive=None\n  for i\
    \ in $1; do\n    if [ $i -lt 0 ]; then\n      if [ $largest_negative = None ]\
    \ || [ $i -gt $largest_negative ]; then\n        largest_negative=$i\n      fi\n\
    \    elif [ $i -gt 0 ]; then\n      if [ $smallest_positive = None ] || [ $i -lt\
    \ $smallest_positive ]; then\n        smallest_positive=$i\n      fi\n    fi\n\
    \  done\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\"]\"",
  "    local -a list=($1)\n    local -a negatives\n    local -a positives\n    local\
    \ -a result\n    for i in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n\
    \            negatives+=($i)\n        elif [[ $i -gt 0 ]]; then\n            positives+=($i)\n\
    \        fi\n    done\n    if [[ ${#negatives[@]} -gt 0 ]]; then\n        result+=($(printf\
    \ \"%s\\n\" \"${negatives[@]}\" | sort -nr | head -n 1))\n    else\n        result+=(\"\
    None\")\n    fi\n    if [[ ${#positives[@]} -gt 0 ]]; then\n        result+=($(printf\
    \ \"%s\\n\" \"${positives[@]}\" | sort -n | head -n 1))\n    else\n        result+=(\"\
    None\")\n    fi\n    echo \"${result[@]}\"", "  local -a list=($1)\n  local -i\
    \ largest_negative=0\n  local -i smallest_positive=0\n  local -i first_positive=1\n\
    \  local -i first_negative=1\n  for i in \"${list[@]}\"; do\n    if [[ $i -lt\
    \ 0 ]]; then\n      if [[ $first_negative -eq 1 ]]; then\n        largest_negative=$i\n\
    \        first_negative=0\n      elif [[ $i -gt $largest_negative ]]; then\n \
    \       largest_negative=$i\n      fi\n    elif [[ $i -gt 0 ]]; then\n      if\
    \ [[ $first_positive -eq 1 ]]; then\n        smallest_positive=$i\n        first_positive=0\n\
    \      elif [[ $i -lt $smallest_positive ]]; then\n        smallest_positive=$i\n\
    \      fi\n    fi\n  done\n  if [[ $first_negative -eq 1 ]]; then\n    largest_negative=\"\
    None\"\n  fi\n  if [[ $first_positive -eq 1 ]]; then\n    smallest_positive=\"\
    None\"\n  fi\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\"\
    ]\"", "    local -a list=($1)\n    local -a negative_list=()\n    local -a positive_list=()\n\
    \    local largest_negative=None\n    local smallest_positive=None\n\n    for\
    \ i in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            negative_list+=($i)\n\
    \        elif [[ $i -gt 0 ]]; then\n            positive_list+=($i)\n        fi\n\
    \    done\n\n    if [[ ${#negative_list[@]} -gt 0 ]]; then\n        largest_negative=$(printf\
    \ \"%s\\n\" \"${negative_list[@]}\" | sort -nr | head -n 1)\n    fi\n\n    if\
    \ [[ ${#positive_list[@]} -gt 0 ]]; then\n        smallest_positive=$(printf \"\
    %s\\n\" \"${positive_list[@]}\" | sort -n | head -n 1)\n    fi\n\n    echo \"\
    [\\\"$largest_negative\\\", \\\"$smallest_positive\\\"]\"", "    local -a list=($1)\n\
    \    local -a negatives\n    local -a positives\n    local -a result=(\"None\"\
    \ \"None\")\n\n    for i in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n\
    \            negatives+=(\"$i\")\n        elif [[ $i -gt 0 ]]; then\n        \
    \    positives+=(\"$i\")\n        fi\n    done\n\n    if [[ ${#negatives[@]} -gt\
    \ 0 ]]; then\n        result[0]=\"$(printf '%s\\n' \"${negatives[@]}\" | sort\
    \ -nr | head -n 1)\"\n    fi\n\n    if [[ ${#positives[@]} -gt 0 ]]; then\n  \
    \      result[1]=\"$(printf '%s\\n' \"${positives[@]}\" | sort -n | head -n 1)\"\
    \n    fi\n\n    echo \"${result[@]}\"", "  local -a list=($1)\n  local -a negative_list\n\
    \  local -a positive_list\n  local -a result\n\n  for i in \"${list[@]}\"; do\n\
    \    if [[ $i -lt 0 ]]; then\n      negative_list+=($i)\n    elif [[ $i -gt 0\
    \ ]]; then\n      positive_list+=($i)\n    fi\n  done\n\n  if [[ ${#negative_list[@]}\
    \ -eq 0 ]]; then\n    result+=(None)\n  else\n    result+=($(printf \"%s\\n\"\
    \ \"${negative_list[@]}\" | sort -nr | head -n 1))\n  fi\n\n  if [[ ${#positive_list[@]}\
    \ -eq 0 ]]; then\n    result+=(None)\n  else\n    result+=($(printf \"%s\\n\"\
    \ \"${positive_list[@]}\" | sort -n | head -n 1))\n  fi\n\n  echo \"${result[@]}\"",
  "    local -a list=($1)\n    local -a negatives\n    local -a positives\n    local\
    \ -a result\n    local i\n\n    for ((i = 0; i < ${#list[@]}; i++)); do\n    \
    \    if [[ ${list[$i]} -lt 0 ]]; then\n            negatives+=(\"${list[$i]}\"\
    )\n        elif [[ ${list[$i]} -gt 0 ]]; then\n            positives+=(\"${list[$i]}\"\
    )\n        fi\n    done\n\n    if [[ ${#negatives[@]} -eq 0 ]]; then\n       \
    \ result+=('\"None\"')\n    else\n        result+=(\"$(printf '\"%s\"' \"${negatives[@]}\"\
    \ | sort -nr | head -n 1)\")\n    fi\n\n    if [[ ${#positives[@]} -eq 0 ]]; then\n\
    \        result+=('\"None\"')\n    else\n        result+=(\"$(printf '\"%s\"'\
    \ \"${positives[@]}\" | sort -n | head -n 1)\")\n    fi\n\n    echo \"${result[@]}\"",
  "  local list=$1\n  local largest_negative_integer=None\n  local smallest_positive_integer=None\n\
    \  for i in $list; do\n    if [[ $i -lt 0 ]]; then\n      if [[ $largest_negative_integer\
    \ = None ]] || [[ $i -gt $largest_negative_integer ]]; then\n        largest_negative_integer=$i\n\
    \      fi\n    elif [[ $i -gt 0 ]]; then\n      if [[ $smallest_positive_integer\
    \ = None ]] || [[ $i -lt $smallest_positive_integer ]]; then\n        smallest_positive_integer=$i\n\
    \      fi\n    fi\n  done\n  echo \"[\\\"$largest_negative_integer\\\", \\\"$smallest_positive_integer\\\
    \"]\"", "  local list=$1\n  local largest_negative=None\n  local smallest_positive=None\n\
    \  for i in $list; do\n    if [ $i -lt 0 ] && [ $i -gt $largest_negative ]; then\n\
    \      largest_negative=$i\n    elif [ $i -gt 0 ] && [ $i -lt $smallest_positive\
    \ ]; then\n      smallest_positive=$i\n    fi\n  done\n  echo \"[\\\"$largest_negative\\\
    \", \\\"$smallest_positive\\\"]\"", "  local -a list=($1)\n  local -a negative_list=()\n\
    \  local -a positive_list=()\n  local -a result=()\n  local i\n  for i in \"${list[@]}\"\
    ; do\n    if [[ $i -lt 0 ]]; then\n      negative_list+=($i)\n    elif [[ $i -gt\
    \ 0 ]]; then\n      positive_list+=($i)\n    fi\n  done\n  if [[ ${#negative_list[@]}\
    \ -eq 0 ]]; then\n    result+=(None)\n  else\n    result+=($(printf \"%s\\n\"\
    \ \"${negative_list[@]}\" | sort -nr | head -n 1))\n  fi\n  if [[ ${#positive_list[@]}\
    \ -eq 0 ]]; then\n    result+=(None)\n  else\n    result+=($(printf \"%s\\n\"\
    \ \"${positive_list[@]}\" | sort -n | head -n 1))\n  fi\n  echo \"${result[@]}\"",
  "  local -a list=($1)\n  local max=0\n  local min=0\n  local first=true\n  for i\
    \ in \"${list[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      if [[ $i -gt $max\
    \ ]]; then\n        max=$i\n      fi\n    elif [[ $i -gt 0 ]]; then\n      if\
    \ [[ $first == true ]]; then\n        min=$i\n        first=false\n      elif\
    \ [[ $i -lt $min ]]; then\n        min=$i\n      fi\n    fi\n  done\n  if [[ $max\
    \ == 0 ]]; then\n    max=\"None\"\n  fi\n  if [[ $min == 0 ]]; then\n    min=\"\
    None\"\n  fi\n  echo \"[\\\"$max\\\", \\\"$min\\\"]\"", "    local -a list=($1)\n\
    \    local -a positive_list=()\n    local -a negative_list=()\n    local -a result=(\"\
    None\" \"None\")\n\n    for i in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]];\
    \ then\n            negative_list+=($i)\n        elif [[ $i -gt 0 ]]; then\n \
    \           positive_list+=($i)\n        fi\n    done\n\n    if [[ ${#negative_list[@]}\
    \ -gt 0 ]]; then\n        result[0]=$(printf '%s\\n' \"${negative_list[@]}\" |\
    \ sort -nr | head -n1)\n    fi\n\n    if [[ ${#positive_list[@]} -gt 0 ]]; then\n\
    \        result[1]=$(printf '%s\\n' \"${positive_list[@]}\" | sort -n | head -n1)\n\
    \    fi\n\n    echo \"${result[@]}\"", "  local -a arr=()\n  local -a neg=()\n\
    \  local -a pos=()\n  local -a result=()\n  local i\n  local n\n  local p\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local j\n  local k\n  local l\n  local m\n  local o\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local aa\n  local ab\n  local ac\n  local ad\n  local ae\n \
    \ local af\n  local ag\n  local ah\n  local ai\n  local aj\n  local ak\n  local\
    \ al\n  local am\n  local an\n  local ao\n  local ap\n  local aq\n  local ar\n\
    \  local as\n  local at\n  local au\n  local av\n  local aw\n  local ax\n  local\
    \ ay\n  local az\n  local ba\n  local bb\n  local bc\n  local bd\n  local be\n\
    \  local bf\n  local bg\n  local bh\n  local bi\n  local bj\n  local bk\n  local\
    \ bl\n  local bm\n  local bn\n  local bo\n  local bp\n  local bq\n  local br\n\
    \  local bs\n  local bt\n  local bu\n  local bv\n  local bw\n  local bx\n  local\
    \ by\n  local bz\n  local ca\n  local cb\n  local cc\n  local cd\n  local ce\n\
    \  local cf\n  local cg\n  local ch\n  local ci\n  local cj\n  local ck\n  local\
    \ cl\n  local cm\n  local cn\n  local co\n  local cp\n  local cq\n  local cr\n\
    \  local cs\n  local ct\n  local cu\n  local cv\n  local cw\n  local cx\n  local\
    \ cy\n  local cz\n  local da\n  local db\n  local dc\n  local dd\n  local de\n\
    \  local df\n  local dg\n ", "    local -a list=($1)\n    local -a negatives=()\n\
    \    local -a positives=()\n    local -a result=()\n    local i\n    for i in\
    \ \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            negatives+=($i)\n\
    \        elif [[ $i -gt 0 ]]; then\n            positives+=($i)\n        fi\n\
    \    done\n    if [[ ${#negatives[@]} -gt 0 ]]; then\n        result+=($(printf\
    \ '\"%s\"' \"${negatives[@]}\" | sort -nr | head -n 1))\n    else\n        result+=('\"\
    None\"')\n    fi\n    if [[ ${#positives[@]} -gt 0 ]]; then\n        result+=($(printf\
    \ '\"%s\"' \"${positives[@]}\" | sort -n | head -n 1))\n    else\n        result+=('\"\
    None\"')\n    fi\n    echo \"${result[@]}\"", "  local -a list=($1)\n  local -a\
    \ negatives=()\n  local -a positives=()\n  local largest_negative=None\n  local\
    \ smallest_positive=None\n  for i in \"${list[@]}\"; do\n    if [[ $i -lt 0 ]];\
    \ then\n      negatives+=(\"$i\")\n    elif [[ $i -gt 0 ]]; then\n      positives+=(\"\
    $i\")\n    fi\n  done\n  if [[ ${#negatives[@]} -gt 0 ]]; then\n    largest_negative=$(printf\
    \ '%s\\n' \"${negatives[@]}\" | sort -nr | head -n1)\n  fi\n  if [[ ${#positives[@]}\
    \ -gt 0 ]]; then\n    smallest_positive=$(printf '%s\\n' \"${positives[@]}\" |\
    \ sort -n | head -n1)\n  fi\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\""]
stop_tokens:
- "\n}"

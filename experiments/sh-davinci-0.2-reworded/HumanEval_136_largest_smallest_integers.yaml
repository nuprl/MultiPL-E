name: HumanEval_136_largest_smallest_integers
language: sh
prompt: "#!/bin/bash\n# Create a function that returns a list (a, b), where 'a' is\n\
  # the largest of negative integers, and 'b' is the smallest\n# of positive integers\
  \ in a list.\n# If there is no negative or positive integers, return them as None.\n\
  # Examples:\n# >>> $(largest_smallest_integers \"2 4 1 3 5 7\")\n# ['\"None\"',\
  \ '\"1\"']\n# >>> $(largest_smallest_integers \"\")\n# ['\"None\"', '\"None\"']\n\
  # >>> $(largest_smallest_integers \"0\")\n# ['\"None\"', '\"None\"']\n#\n# $1 is\
  \ a space-separated list\nlargest_smallest_integers() {\n"
tests: "}\n\ncandidate() {\n    largest_smallest_integers \"$@\"\n}\n\nset -e\nrun_test()\
  \ {\n    [[ $(candidate \"2 4 1 3 5 7\") = \"None 1\" ]]\n    [[ $(candidate \"\
  2 4 1 3 5 7 0\") = \"None 1\" ]]\n    [[ $(candidate \"1 3 2 4 5 6 -2\") = \"-2\
  \ 1\" ]]\n    [[ $(candidate \"4 5 3 6 2 7 -7\") = \"-7 2\" ]]\n    [[ $(candidate\
  \ \"7 3 8 4 9 2 5 -9\") = \"-9 2\" ]]\n    [[ $(candidate \"\") = \"None None\"\
  \ ]]\n    [[ $(candidate \"0\") = \"None None\" ]]\n    [[ $(candidate \"-1 -3 -5\
  \ -6\") = \"-1 None\" ]]\n    [[ $(candidate \"-1 -3 -5 -6 0\") = \"-1 None\" ]]\n\
  \    [[ $(candidate \"-6 -4 -4 -3 1\") = \"-3 1\" ]]\n    [[ $(candidate \"-6 -4\
  \ -4 -3 -100 1\") = \"-3 1\" ]]\n}\n\nrun_test"
completions: ["  local -a arr=($1)\n  local -a neg=()\n  local -a pos=()\n  local\
    \ -a res=()\n  for i in \"${arr[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n     \
    \ neg+=($i)\n    elif [[ $i -gt 0 ]]; then\n      pos+=($i)\n    fi\n  done\n\
    \  if [[ ${#neg[@]} -eq 0 ]]; then\n    res+=(\"None\")\n  else\n    res+=(\"\
    $(printf \"%s\\n\" \"${neg[@]}\" | sort -nr | head -n1)\")\n  fi\n  if [[ ${#pos[@]}\
    \ -eq 0 ]]; then\n    res+=(\"None\")\n  else\n    res+=(\"$(printf \"%s\\n\"\
    \ \"${pos[@]}\" | sort -n | head -n1)\")\n  fi\n  echo \"${res[@]}\"", "    local\
    \ -a list=($1)\n    local -a negatives\n    local -a positives\n    local -a result\n\
    \    local i\n    for i in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n\
    \            negatives+=($i)\n        elif [[ $i -gt 0 ]]; then\n            positives+=($i)\n\
    \        fi\n    done\n    if [[ ${#negatives[@]} -eq 0 ]]; then\n        result+=(None)\n\
    \    else\n        result+=($(printf \"%s\\n\" \"${negatives[@]}\" | sort -nr\
    \ | head -n 1))\n    fi\n    if [[ ${#positives[@]} -eq 0 ]]; then\n        result+=(None)\n\
    \    else\n        result+=($(printf \"%s\\n\" \"${positives[@]}\" | sort -n |\
    \ head -n 1))\n    fi\n    echo \"${result[@]}\"", "  local -a a=($1)\n  local\
    \ -i i\n  local -i max_neg=0\n  local -i min_pos=0\n  local -i n=${#a[@]}\n  for\
    \ ((i=0; i<n; i++)); do\n    if [[ ${a[i]} -lt 0 ]]; then\n      if [[ ${a[i]}\
    \ -gt $max_neg ]]; then\n        max_neg=${a[i]}\n      fi\n    elif [[ ${a[i]}\
    \ -gt 0 ]]; then\n      if [[ $min_pos -eq 0 ]]; then\n        min_pos=${a[i]}\n\
    \      elif [[ ${a[i]} -lt $min_pos ]]; then\n        min_pos=${a[i]}\n      fi\n\
    \    fi\n  done\n  if [[ $max_neg -eq 0 ]]; then\n    max_neg=None\n  fi\n  if\
    \ [[ $min_pos -eq 0 ]]; then\n    min_pos=None\n  fi\n  echo \"[\\\"$max_neg\\\
    \", \\\"$min_pos\\\"]\"", "    local -a list=($1)\n    local -a pos=()\n    local\
    \ -a neg=()\n    local -a res=()\n    local -i i=0\n    local -i j=0\n    local\
    \ -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n\
    \    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local\
    \ -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n\
    \    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n  \
    \  local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n  \
    \  local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n  \
    \  local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n  \
    \  local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n  \
    \  local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n  \
    \  local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n  \
    \  local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n\
    \    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n\
    \    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n\
    \   ", "  local -a list=($1)\n  local -i largest_negative=0\n  local -i smallest_positive=0\n\
    \  local -i i=0\n\n  for ((i=0; i<${#list[@]}; i++)); do\n    if [[ ${list[$i]}\
    \ -lt 0 ]]; then\n      if [[ ${list[$i]} -gt $largest_negative ]]; then\n   \
    \     largest_negative=${list[$i]}\n      fi\n    elif [[ ${list[$i]} -gt 0 ]];\
    \ then\n      if [[ $smallest_positive -eq 0 ]]; then\n        smallest_positive=${list[$i]}\n\
    \      elif [[ ${list[$i]} -lt $smallest_positive ]]; then\n        smallest_positive=${list[$i]}\n\
    \      fi\n    fi\n  done\n\n  if [[ $largest_negative -eq 0 ]]; then\n    largest_negative=\"\
    None\"\n  fi\n\n  if [[ $smallest_positive -eq 0 ]]; then\n    smallest_positive=\"\
    None\"\n  fi\n\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\"\
    ]\"", "  local largest_negative=None\n  local smallest_positive=None\n  for i\
    \ in $1; do\n    if [ $i -lt 0 ]; then\n      if [ $largest_negative = None ]\
    \ || [ $i -gt $largest_negative ]; then\n        largest_negative=$i\n      fi\n\
    \    elif [ $i -gt 0 ]; then\n      if [ $smallest_positive = None ] || [ $i -lt\
    \ $smallest_positive ]; then\n        smallest_positive=$i\n      fi\n    fi\n\
    \  done\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\"]\"",
  "    local -a list=($1)\n    local -a negatives\n    local -a positives\n    local\
    \ -a result\n    for i in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n\
    \            negatives+=($i)\n        elif [[ $i -gt 0 ]]; then\n            positives+=($i)\n\
    \        fi\n    done\n    if [[ ${#negatives[@]} -gt 0 ]]; then\n        result+=($(printf\
    \ \"%s\\n\" \"${negatives[@]}\" | sort -nr | head -n 1))\n    else\n        result+=(\"\
    None\")\n    fi\n    if [[ ${#positives[@]} -gt 0 ]]; then\n        result+=($(printf\
    \ \"%s\\n\" \"${positives[@]}\" | sort -n | head -n 1))\n    else\n        result+=(\"\
    None\")\n    fi\n    echo \"${result[@]}\"", "  local -a list=($1)\n  local -i\
    \ largest_negative=0\n  local -i smallest_positive=0\n  local -i first_positive=1\n\
    \  local -i first_negative=1\n  for i in \"${list[@]}\"; do\n    if [[ $i -lt\
    \ 0 ]]; then\n      if [[ $first_negative -eq 1 ]]; then\n        largest_negative=$i\n\
    \        first_negative=0\n      elif [[ $i -gt $largest_negative ]]; then\n \
    \       largest_negative=$i\n      fi\n    elif [[ $i -gt 0 ]]; then\n      if\
    \ [[ $first_positive -eq 1 ]]; then\n        smallest_positive=$i\n        first_positive=0\n\
    \      elif [[ $i -lt $smallest_positive ]]; then\n        smallest_positive=$i\n\
    \      fi\n    fi\n  done\n  if [[ $first_negative -eq 1 ]]; then\n    largest_negative=\"\
    None\"\n  fi\n  if [[ $first_positive -eq 1 ]]; then\n    smallest_positive=\"\
    None\"\n  fi\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\"\
    ]\"", "    local -a list=($1)\n    local -a negative_list=()\n    local -a positive_list=()\n\
    \    local largest_negative=None\n    local smallest_positive=None\n\n    for\
    \ i in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            negative_list+=($i)\n\
    \        elif [[ $i -gt 0 ]]; then\n            positive_list+=($i)\n        fi\n\
    \    done\n\n    if [[ ${#negative_list[@]} -gt 0 ]]; then\n        largest_negative=$(printf\
    \ \"%s\\n\" \"${negative_list[@]}\" | sort -nr | head -n 1)\n    fi\n\n    if\
    \ [[ ${#positive_list[@]} -gt 0 ]]; then\n        smallest_positive=$(printf \"\
    %s\\n\" \"${positive_list[@]}\" | sort -n | head -n 1)\n    fi\n\n    echo \"\
    [\\\"$largest_negative\\\", \\\"$smallest_positive\\\"]\"", "    local -a list=($1)\n\
    \    local -a negatives\n    local -a positives\n    local -a result=(\"None\"\
    \ \"None\")\n\n    for i in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n\
    \            negatives+=(\"$i\")\n        elif [[ $i -gt 0 ]]; then\n        \
    \    positives+=(\"$i\")\n        fi\n    done\n\n    if [[ ${#negatives[@]} -gt\
    \ 0 ]]; then\n        result[0]=\"$(printf '%s\\n' \"${negatives[@]}\" | sort\
    \ -nr | head -n 1)\"\n    fi\n\n    if [[ ${#positives[@]} -gt 0 ]]; then\n  \
    \      result[1]=\"$(printf '%s\\n' \"${positives[@]}\" | sort -n | head -n 1)\"\
    \n    fi\n\n    echo \"${result[@]}\"", "  local -a list=($1)\n  local -a negative_list\n\
    \  local -a positive_list\n  local -a result\n\n  for i in \"${list[@]}\"; do\n\
    \    if [[ $i -lt 0 ]]; then\n      negative_list+=($i)\n    elif [[ $i -gt 0\
    \ ]]; then\n      positive_list+=($i)\n    fi\n  done\n\n  if [[ ${#negative_list[@]}\
    \ -eq 0 ]]; then\n    result+=(None)\n  else\n    result+=($(printf \"%s\\n\"\
    \ \"${negative_list[@]}\" | sort -nr | head -n 1))\n  fi\n\n  if [[ ${#positive_list[@]}\
    \ -eq 0 ]]; then\n    result+=(None)\n  else\n    result+=($(printf \"%s\\n\"\
    \ \"${positive_list[@]}\" | sort -n | head -n 1))\n  fi\n\n  echo \"${result[@]}\"",
  "    local -a list=($1)\n    local -a negatives\n    local -a positives\n    local\
    \ -a result\n    local i\n\n    for ((i = 0; i < ${#list[@]}; i++)); do\n    \
    \    if [[ ${list[$i]} -lt 0 ]]; then\n            negatives+=(\"${list[$i]}\"\
    )\n        elif [[ ${list[$i]} -gt 0 ]]; then\n            positives+=(\"${list[$i]}\"\
    )\n        fi\n    done\n\n    if [[ ${#negatives[@]} -eq 0 ]]; then\n       \
    \ result+=('\"None\"')\n    else\n        result+=(\"$(printf '\"%s\"' \"${negatives[@]}\"\
    \ | sort -nr | head -n 1)\")\n    fi\n\n    if [[ ${#positives[@]} -eq 0 ]]; then\n\
    \        result+=('\"None\"')\n    else\n        result+=(\"$(printf '\"%s\"'\
    \ \"${positives[@]}\" | sort -n | head -n 1)\")\n    fi\n\n    echo \"${result[@]}\"",
  "  local list=$1\n  local largest_negative_integer=None\n  local smallest_positive_integer=None\n\
    \  for i in $list; do\n    if [[ $i -lt 0 ]]; then\n      if [[ $largest_negative_integer\
    \ = None ]] || [[ $i -gt $largest_negative_integer ]]; then\n        largest_negative_integer=$i\n\
    \      fi\n    elif [[ $i -gt 0 ]]; then\n      if [[ $smallest_positive_integer\
    \ = None ]] || [[ $i -lt $smallest_positive_integer ]]; then\n        smallest_positive_integer=$i\n\
    \      fi\n    fi\n  done\n  echo \"[\\\"$largest_negative_integer\\\", \\\"$smallest_positive_integer\\\
    \"]\"", "  local list=$1\n  local largest_negative=None\n  local smallest_positive=None\n\
    \  for i in $list; do\n    if [ $i -lt 0 ] && [ $i -gt $largest_negative ]; then\n\
    \      largest_negative=$i\n    elif [ $i -gt 0 ] && [ $i -lt $smallest_positive\
    \ ]; then\n      smallest_positive=$i\n    fi\n  done\n  echo \"[\\\"$largest_negative\\\
    \", \\\"$smallest_positive\\\"]\"", "  local -a list=($1)\n  local -a negative_list=()\n\
    \  local -a positive_list=()\n  local -a result=()\n  local i\n  for i in \"${list[@]}\"\
    ; do\n    if [[ $i -lt 0 ]]; then\n      negative_list+=($i)\n    elif [[ $i -gt\
    \ 0 ]]; then\n      positive_list+=($i)\n    fi\n  done\n  if [[ ${#negative_list[@]}\
    \ -eq 0 ]]; then\n    result+=(None)\n  else\n    result+=($(printf \"%s\\n\"\
    \ \"${negative_list[@]}\" | sort -nr | head -n 1))\n  fi\n  if [[ ${#positive_list[@]}\
    \ -eq 0 ]]; then\n    result+=(None)\n  else\n    result+=($(printf \"%s\\n\"\
    \ \"${positive_list[@]}\" | sort -n | head -n 1))\n  fi\n  echo \"${result[@]}\"",
  "  local -a list=($1)\n  local max=0\n  local min=0\n  local first=true\n  for i\
    \ in \"${list[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      if [[ $i -gt $max\
    \ ]]; then\n        max=$i\n      fi\n    elif [[ $i -gt 0 ]]; then\n      if\
    \ [[ $first == true ]]; then\n        min=$i\n        first=false\n      elif\
    \ [[ $i -lt $min ]]; then\n        min=$i\n      fi\n    fi\n  done\n  if [[ $max\
    \ == 0 ]]; then\n    max=\"None\"\n  fi\n  if [[ $min == 0 ]]; then\n    min=\"\
    None\"\n  fi\n  echo \"[\\\"$max\\\", \\\"$min\\\"]\"", "    local -a list=($1)\n\
    \    local -a positive_list=()\n    local -a negative_list=()\n    local -a result=(\"\
    None\" \"None\")\n\n    for i in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]];\
    \ then\n            negative_list+=($i)\n        elif [[ $i -gt 0 ]]; then\n \
    \           positive_list+=($i)\n        fi\n    done\n\n    if [[ ${#negative_list[@]}\
    \ -gt 0 ]]; then\n        result[0]=$(printf '%s\\n' \"${negative_list[@]}\" |\
    \ sort -nr | head -n1)\n    fi\n\n    if [[ ${#positive_list[@]} -gt 0 ]]; then\n\
    \        result[1]=$(printf '%s\\n' \"${positive_list[@]}\" | sort -n | head -n1)\n\
    \    fi\n\n    echo \"${result[@]}\"", "  local -a arr=()\n  local -a neg=()\n\
    \  local -a pos=()\n  local -a result=()\n  local i\n  local n\n  local p\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local j\n  local k\n  local l\n  local m\n  local o\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local aa\n  local ab\n  local ac\n  local ad\n  local ae\n \
    \ local af\n  local ag\n  local ah\n  local ai\n  local aj\n  local ak\n  local\
    \ al\n  local am\n  local an\n  local ao\n  local ap\n  local aq\n  local ar\n\
    \  local as\n  local at\n  local au\n  local av\n  local aw\n  local ax\n  local\
    \ ay\n  local az\n  local ba\n  local bb\n  local bc\n  local bd\n  local be\n\
    \  local bf\n  local bg\n  local bh\n  local bi\n  local bj\n  local bk\n  local\
    \ bl\n  local bm\n  local bn\n  local bo\n  local bp\n  local bq\n  local br\n\
    \  local bs\n  local bt\n  local bu\n  local bv\n  local bw\n  local bx\n  local\
    \ by\n  local bz\n  local ca\n  local cb\n  local cc\n  local cd\n  local ce\n\
    \  local cf\n  local cg\n  local ch\n  local ci\n  local cj\n  local ck\n  local\
    \ cl\n  local cm\n  local cn\n  local co\n  local cp\n  local cq\n  local cr\n\
    \  local cs\n  local ct\n  local cu\n  local cv\n  local cw\n  local cx\n  local\
    \ cy\n  local cz\n  local da\n  local db\n  local dc\n  local dd\n  local de\n\
    \  local df\n  local dg\n ", "    local -a list=($1)\n    local -a negatives=()\n\
    \    local -a positives=()\n    local -a result=()\n    local i\n    for i in\
    \ \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            negatives+=($i)\n\
    \        elif [[ $i -gt 0 ]]; then\n            positives+=($i)\n        fi\n\
    \    done\n    if [[ ${#negatives[@]} -gt 0 ]]; then\n        result+=($(printf\
    \ '\"%s\"' \"${negatives[@]}\" | sort -nr | head -n 1))\n    else\n        result+=('\"\
    None\"')\n    fi\n    if [[ ${#positives[@]} -gt 0 ]]; then\n        result+=($(printf\
    \ '\"%s\"' \"${positives[@]}\" | sort -n | head -n 1))\n    else\n        result+=('\"\
    None\"')\n    fi\n    echo \"${result[@]}\"", "  local -a list=($1)\n  local -a\
    \ negatives=()\n  local -a positives=()\n  local largest_negative=None\n  local\
    \ smallest_positive=None\n  for i in \"${list[@]}\"; do\n    if [[ $i -lt 0 ]];\
    \ then\n      negatives+=(\"$i\")\n    elif [[ $i -gt 0 ]]; then\n      positives+=(\"\
    $i\")\n    fi\n  done\n  if [[ ${#negatives[@]} -gt 0 ]]; then\n    largest_negative=$(printf\
    \ '%s\\n' \"${negatives[@]}\" | sort -nr | head -n1)\n  fi\n  if [[ ${#positives[@]}\
    \ -gt 0 ]]; then\n    smallest_positive=$(printf '%s\\n' \"${positives[@]}\" |\
    \ sort -n | head -n1)\n  fi\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "  local -a array=($1)\n  local -a negative_array=()\n  local -a positive_array=()\n\
    \  local largest_negative=None\n  local smallest_positive=None\n\n  for i in \"\
    ${array[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      negative_array+=($i)\n \
    \   elif [[ $i -gt 0 ]]; then\n      positive_array+=($i)\n    fi\n  done\n\n\
    \  if [[ ${#negative_array[@]} -gt 0 ]]; then\n    largest_negative=$(printf '%s\\\
    n' \"${negative_array[@]}\" | sort -nr | head -n1)\n  fi\n\n  if [[ ${#positive_array[@]}\
    \ -gt 0 ]]; then\n    smallest_positive=$(printf '%s\\n' \"${positive_array[@]}\"\
    \ | sort -n | head -n1)\n  fi\n\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "  local -a arr=()\n  local -a pos=()\n  local -a neg=()\n  local -a result=()\n\
    \  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n\
    \  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n\
    \  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n\
    \  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local\
    \ ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n\
    \  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local\
    \ qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n\
    \  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local\
    \ bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n\
    \  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n \
    \ local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local\
    \ rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n\
    \  local xxx=0\n  local yyy=0\n  local zzz=0\n  local aaaa=0\n  local bbbb=0\n\
    \  local c", "    local -a list=($1)\n    local -a negatives\n    local -a positives\n\
    \    local -a result\n    for i in \"${list[@]}\"; do\n        if (( i < 0 ));\
    \ then\n            negatives+=($i)\n        elif (( i > 0 )); then\n        \
    \    positives+=($i)\n        fi\n    done\n    if (( ${#negatives[@]} > 0 ));\
    \ then\n        result+=($(printf \"%s\\n\" \"${negatives[@]}\" | sort -nr | head\
    \ -n 1))\n    else\n        result+=(\"None\")\n    fi\n    if (( ${#positives[@]}\
    \ > 0 )); then\n        result+=($(printf \"%s\\n\" \"${positives[@]}\" | sort\
    \ -n | head -n 1))\n    else\n        result+=(\"None\")\n    fi\n    echo \"\
    ${result[@]}\"", "  local -a list=($1)\n  local -a negative_integers=()\n  local\
    \ -a positive_integers=()\n  local largest_negative_integer=None\n  local smallest_positive_integer=None\n\
    \n  for i in \"${list[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      negative_integers+=($i)\n\
    \    elif [[ $i -gt 0 ]]; then\n      positive_integers+=($i)\n    fi\n  done\n\
    \n  if [[ ${#negative_integers[@]} -gt 0 ]]; then\n    largest_negative_integer=${negative_integers[0]}\n\
    \    for i in \"${negative_integers[@]}\"; do\n      if [[ $i -gt $largest_negative_integer\
    \ ]]; then\n        largest_negative_integer=$i\n      fi\n    done\n  fi\n\n\
    \  if [[ ${#positive_integers[@]} -gt 0 ]]; then\n    smallest_positive_integer=${positive_integers[0]}\n\
    \    for i in \"${positive_integers[@]}\"; do\n      if [[ $i -lt $smallest_positive_integer\
    \ ]]; then\n        smallest_positive_integer=$i\n      fi\n    done\n  fi\n\n\
    \  echo \"[\\\"$largest_negative_integer\\\", \\\"$smallest_positive_integer\\\
    \"]\"", "    local -a list=($1)\n    local -a negative_list=()\n    local -a positive_list=()\n\
    \    local largest_negative\n    local smallest_positive\n    for i in \"${list[@]}\"\
    ; do\n        if [[ $i -lt 0 ]]; then\n            negative_list+=($i)\n     \
    \   elif [[ $i -gt 0 ]]; then\n            positive_list+=($i)\n        fi\n \
    \   done\n    if [[ ${#negative_list[@]} -gt 0 ]]; then\n        largest_negative=$(printf\
    \ '%s\\n' \"${negative_list[@]}\" | sort -nr | head -n1)\n    else\n        largest_negative=\"\
    None\"\n    fi\n    if [[ ${#positive_list[@]} -gt 0 ]]; then\n        smallest_positive=$(printf\
    \ '%s\\n' \"${positive_list[@]}\" | sort -n | head -n1)\n    else\n        smallest_positive=\"\
    None\"\n    fi\n    echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "  local list=$1\n  local largest_negative=None\n  local smallest_positive=None\n\
    \  for i in $list; do\n    if [[ $i -lt 0 ]]; then\n      if [[ $largest_negative\
    \ == None ]] || [[ $i -gt $largest_negative ]]; then\n        largest_negative=$i\n\
    \      fi\n    elif [[ $i -gt 0 ]]; then\n      if [[ $smallest_positive == None\
    \ ]] || [[ $i -lt $smallest_positive ]]; then\n        smallest_positive=$i\n\
    \      fi\n    fi\n  done\n  echo ['\"'$largest_negative'\"', '\"'$smallest_positive'\"\
    ']", "  local list=$1\n  local largest_negative_integer=None\n  local smallest_positive_integer=None\n\
    \  for i in $list; do\n    if [[ $i -lt 0 ]]; then\n      if [[ $largest_negative_integer\
    \ == None ]]; then\n        largest_negative_integer=$i\n      else\n        if\
    \ [[ $i -gt $largest_negative_integer ]]; then\n          largest_negative_integer=$i\n\
    \        fi\n      fi\n    elif [[ $i -gt 0 ]]; then\n      if [[ $smallest_positive_integer\
    \ == None ]]; then\n        smallest_positive_integer=$i\n      else\n       \
    \ if [[ $i -lt $smallest_positive_integer ]]; then\n          smallest_positive_integer=$i\n\
    \        fi\n      fi\n    fi\n  done\n  echo \"[\\\"$largest_negative_integer\\\
    \", \\\"$smallest_positive_integer\\\"]\"", "  local -a list=($1)\n  local largest_negative=None\n\
    \  local smallest_positive=None\n  for i in \"${list[@]}\"; do\n    if [[ $i -lt\
    \ 0 ]]; then\n      if [[ $largest_negative == None ]] || [[ $i -gt $largest_negative\
    \ ]]; then\n        largest_negative=$i\n      fi\n    elif [[ $i -gt 0 ]]; then\n\
    \      if [[ $smallest_positive == None ]] || [[ $i -lt $smallest_positive ]];\
    \ then\n        smallest_positive=$i\n      fi\n    fi\n  done\n  echo \"[\\\"\
    $largest_negative\\\", \\\"$smallest_positive\\\"]\"", "  local -a list=($1)\n\
    \  local -a negatives\n  local -a positives\n  local -a result\n  local i\n  for\
    \ i in \"${list[@]}\"; do\n    if (( i < 0 )); then\n      negatives+=($i)\n \
    \   elif (( i > 0 )); then\n      positives+=($i)\n    fi\n  done\n  if [[ ${#negatives[@]}\
    \ -eq 0 ]]; then\n    result+=(None)\n  else\n    result+=($(printf \"%s\\n\"\
    \ \"${negatives[@]}\" | sort -nr | head -n 1))\n  fi\n  if [[ ${#positives[@]}\
    \ -eq 0 ]]; then\n    result+=(None)\n  else\n    result+=($(printf \"%s\\n\"\
    \ \"${positives[@]}\" | sort -n | head -n 1))\n  fi\n  echo \"${result[@]}\"",
  "    local -a positive_integers\n    local -a negative_integers\n    local -a integers\n\
    \    local -a result\n    local integer\n    local i\n\n    # Split the list into\
    \ positive and negative integers\n    for integer in $1; do\n        if [[ $integer\
    \ -lt 0 ]]; then\n            negative_integers+=($integer)\n        elif [[ $integer\
    \ -gt 0 ]]; then\n            positive_integers+=($integer)\n        fi\n    done\n\
    \n    # Sort the negative integers in descending order\n    for ((i = 0; i < ${#negative_integers[@]};\
    \ i++)); do\n        for ((j = i + 1; j < ${#negative_integers[@]}; j++)); do\n\
    \            if [[ ${negative_integers[i]} -lt ${negative_integers[j]} ]]; then\n\
    \                temp=${negative_integers[i]}\n                negative_integers[i]=${negative_integers[j]}\n\
    \                negative_integers[j]=$temp\n            fi\n        done\n  \
    \  done\n\n    # Sort the positive integers in ascending order\n    for ((i =\
    \ 0; i < ${#positive_integers[@]}; i++)); do\n        for ((j = i + 1; j < ${#positive_integers[@]};\
    \ j++)); do\n            if [[ ${positive_integers[i]} -gt ${positive_integers[j]}\
    \ ]]; then\n                temp=${positive_integers[i]}\n                positive_integers[i]=${positive_integers[j]}\n\
    \                positive_integers[j]=$temp\n            fi\n        done\n  \
    \  done\n\n    # Get the largest of negative integers\n    if [[ ${#negative_integers[@]}\
    \ -gt 0 ]]; then\n        result+=(${negative_integers[0]})\n    else\n      \
    \  result+=(\"None\")\n    fi\n\n    # Get the smallest of positive integers\n\
    \    if [[ ${#positive_integers[@]} -gt 0 ]]; then\n        result+=(${positive_integers[0]})\n\
    \    else\n        result+=(\"None\")\n    fi\n\n    echo ${result[@]}", "   \
    \ local list=$1\n    local largest_negative=None\n    local smallest_positive=None\n\
    \    for i in $list; do\n        if [[ $i -lt 0 ]]; then\n            if [[ $largest_negative\
    \ = None ]] || [[ $i -gt $largest_negative ]]; then\n                largest_negative=$i\n\
    \            fi\n        elif [[ $i -gt 0 ]]; then\n            if [[ $smallest_positive\
    \ = None ]] || [[ $i -lt $smallest_positive ]]; then\n                smallest_positive=$i\n\
    \            fi\n        fi\n    done\n    echo \"[\\\"$largest_negative\\\",\
    \ \\\"$smallest_positive\\\"]\"", "    local a b\n    a=$(echo \"$1\" | tr ' '\
    \ '\\n' | grep -v '^[0-9]*$' | sort -nr | head -n 1)\n    b=$(echo \"$1\" | tr\
    \ ' ' '\\n' | grep -v '^[0-9]*$' | sort -n | head -n 1)\n    echo \"[\\\"${a:-None}\\\
    \", \\\"${b:-None}\\\"]\"", "    local -a list=($1)\n    local largest_negative=None\n\
    \    local smallest_positive=None\n    for i in \"${list[@]}\"; do\n        if\
    \ [[ \"$i\" -lt 0 ]]; then\n            if [[ \"$largest_negative\" == None ]]\
    \ || [[ \"$i\" -gt \"$largest_negative\" ]]; then\n                largest_negative=\"\
    $i\"\n            fi\n        elif [[ \"$i\" -gt 0 ]]; then\n            if [[\
    \ \"$smallest_positive\" == None ]] || [[ \"$i\" -lt \"$smallest_positive\" ]];\
    \ then\n                smallest_positive=\"$i\"\n            fi\n        fi\n\
    \    done\n    echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\"]\"",
  "    local -a list=($1)\n    local -a negative_list\n    local -a positive_list\n\
    \    local largest_negative\n    local smallest_positive\n    local i\n\n    for\
    \ ((i = 0; i < ${#list[@]}; i++)); do\n        if [[ ${list[$i]} -lt 0 ]]; then\n\
    \            negative_list[${#negative_list[@]}]=${list[$i]}\n        elif [[\
    \ ${list[$i]} -gt 0 ]]; then\n            positive_list[${#positive_list[@]}]=${list[$i]}\n\
    \        fi\n    done\n\n    if [[ ${#negative_list[@]} -eq 0 ]]; then\n     \
    \   largest_negative=\"None\"\n    else\n        largest_negative=$(echo ${negative_list[@]}\
    \ | tr ' ' '\\n' | sort -nr | head -n 1)\n    fi\n\n    if [[ ${#positive_list[@]}\
    \ -eq 0 ]]; then\n        smallest_positive=\"None\"\n    else\n        smallest_positive=$(echo\
    \ ${positive_list[@]} | tr ' ' '\\n' | sort -n | head -n 1)\n    fi\n\n    echo\
    \ \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\"]\"", "  local -a list=($1)\n\
    \  local -a negatives\n  local -a positives\n  local -a results\n\n  for i in\
    \ \"${list[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      negatives+=($i)\n   \
    \ elif [[ $i -gt 0 ]]; then\n      positives+=($i)\n    fi\n  done\n\n  if [[\
    \ ${#negatives[@]} -eq 0 ]]; then\n    results+=(None)\n  else\n    results+=($(printf\
    \ \"%s\\n\" \"${negatives[@]}\" | sort -nr | head -n 1))\n  fi\n\n  if [[ ${#positives[@]}\
    \ -eq 0 ]]; then\n    results+=(None)\n  else\n    results+=($(printf \"%s\\n\"\
    \ \"${positives[@]}\" | sort -n | head -n 1))\n  fi\n\n  echo \"${results[@]}\"",
  "  local list=($1)\n  local largest_negative=None\n  local smallest_positive=None\n\
    \  for i in \"${list[@]}\"; do\n    if (( i < 0 )); then\n      if [[ $largest_negative\
    \ == None ]] || (( i > largest_negative )); then\n        largest_negative=$i\n\
    \      fi\n    elif (( i > 0 )); then\n      if [[ $smallest_positive == None\
    \ ]] || (( i < smallest_positive )); then\n        smallest_positive=$i\n    \
    \  fi\n    fi\n  done\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "    local a b\n    a=$(echo \"$1\" | tr ' ' '\\n' | grep -v '^[0-9]*$'\
    \ | sort -nr | head -n 1)\n    b=$(echo \"$1\" | tr ' ' '\\n' | grep -v '^[0-9]*$'\
    \ | sort -n | head -n 1)\n    echo \"[\\\"${a:-None}\\\", \\\"${b:-None}\\\"]\"",
  "    local list=\"$1\"\n    local largest_negative=None\n    local smallest_positive=None\n\
    \    for i in $list; do\n        if [[ $i -lt 0 ]]; then\n            if [[ $largest_negative\
    \ == None ]] || [[ $i -gt $largest_negative ]]; then\n                largest_negative=$i\n\
    \            fi\n        elif [[ $i -gt 0 ]]; then\n            if [[ $smallest_positive\
    \ == None ]] || [[ $i -lt $smallest_positive ]]; then\n                smallest_positive=$i\n\
    \            fi\n        fi\n    done\n    echo \"[\\\"$largest_negative\\\",\
    \ \\\"$smallest_positive\\\"]\"", "    local list=($1)\n    local largest_negative=None\n\
    \    local smallest_positive=None\n    for i in \"${list[@]}\"; do\n        if\
    \ [[ $i -lt 0 ]]; then\n            if [[ $largest_negative == None ]] || [[ $i\
    \ -gt $largest_negative ]]; then\n                largest_negative=$i\n      \
    \      fi\n        elif [[ $i -gt 0 ]]; then\n            if [[ $smallest_positive\
    \ == None ]] || [[ $i -lt $smallest_positive ]]; then\n                smallest_positive=$i\n\
    \            fi\n        fi\n    done\n    echo \"[\\\"$largest_negative\\\",\
    \ \\\"$smallest_positive\\\"]\"", "    local a b\n    a=$(echo \"$1\" | tr ' '\
    \ '\\n' | grep -v '^[0-9]*$' | sort -nr | head -n 1)\n    b=$(echo \"$1\" | tr\
    \ ' ' '\\n' | grep -v '^[0-9]*$' | sort -n | head -n 1)\n    if [ -z \"$a\" ];\
    \ then\n        a=\"None\"\n    fi\n    if [ -z \"$b\" ]; then\n        b=\"None\"\
    \n    fi\n    echo \"[\\\"$a\\\", \\\"$b\\\"]\"", "  local largest_negative=None\n\
    \  local smallest_positive=None\n  for i in $1; do\n    if [[ $i -lt 0 ]]; then\n\
    \      if [[ $largest_negative == None ]] || [[ $i -gt $largest_negative ]]; then\n\
    \        largest_negative=$i\n      fi\n    elif [[ $i -gt 0 ]]; then\n      if\
    \ [[ $smallest_positive == None ]] || [[ $i -lt $smallest_positive ]]; then\n\
    \        smallest_positive=$i\n      fi\n    fi\n  done\n  echo \"[\\\"$largest_negative\\\
    \", \\\"$smallest_positive\\\"]\"", "    local -a arr=($1)\n    local -a neg_arr=()\n\
    \    local -a pos_arr=()\n    local -a res=()\n    for i in \"${arr[@]}\"; do\n\
    \        if [[ $i -lt 0 ]]; then\n            neg_arr+=($i)\n        elif [[ $i\
    \ -gt 0 ]]; then\n            pos_arr+=($i)\n        fi\n    done\n    if [[ ${#neg_arr[@]}\
    \ -eq 0 ]]; then\n        res+=(\"None\")\n    else\n        res+=(\"$(echo \"\
    ${neg_arr[@]}\" | tr ' ' '\\n' | sort -nr | head -n 1)\")\n    fi\n    if [[ ${#pos_arr[@]}\
    \ -eq 0 ]]; then\n        res+=(\"None\")\n    else\n        res+=(\"$(echo \"\
    ${pos_arr[@]}\" | tr ' ' '\\n' | sort -n | head -n 1)\")\n    fi\n    echo \"\
    ${res[@]}\"", "  local -a list=($1)\n  local -a positive_list=()\n  local -a negative_list=()\n\
    \  local largest_negative=None\n  local smallest_positive=None\n\n  for i in \"\
    ${list[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      negative_list+=($i)\n   \
    \ elif [[ $i -gt 0 ]]; then\n      positive_list+=($i)\n    fi\n  done\n\n  if\
    \ [[ ${#negative_list[@]} -gt 0 ]]; then\n    largest_negative=$(printf '%s\\\
    n' \"${negative_list[@]}\" | sort -nr | head -n1)\n  fi\n\n  if [[ ${#positive_list[@]}\
    \ -gt 0 ]]; then\n    smallest_positive=$(printf '%s\\n' \"${positive_list[@]}\"\
    \ | sort -n | head -n1)\n  fi\n\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "  local -a list=($1)\n  local -i max_negative=0\n  local -i min_positive=0\n\
    \  local -i i=0\n  local -i len=${#list[@]}\n  local -i is_positive=0\n  local\
    \ -i is_negative=0\n  local -i is_zero=0\n  local -i is_non_zero=0\n  local -i\
    \ is_non_positive=0\n  local -i is_non_negative=0\n  local -i is_positive_or_zero=0\n\
    \  local -i is_negative_or_zero=0\n  local -i is_non_positive_or_zero=0\n  local\
    \ -i is_non_negative_or_zero=0\n  local -i is_positive_and_non_zero=0\n  local\
    \ -i is_negative_and_non_zero=0\n  local -i is_positive_or_negative=0\n  local\
    \ -i is_positive_or_negative_or_zero=0\n  local -i is_non_positive_or_negative=0\n\
    \  local -i is_non_positive_or_negative_or_zero=0\n  local -i is_positive_and_negative=0\n\
    \  local -i is_positive_and_negative_and_zero=0\n  local -i is_non_positive_and_negative=0\n\
    \  local -i is_non_positive_and_negative_and_zero=0\n  local -i is_positive_and_non_negative=0\n\
    \  local -i is_positive_and_non_negative_and_zero=0\n  local -i is_non_positive_and_non_negative=0\n\
    \  local -i is_non_positive_and_non_negative_and_zero=0\n  local -i is_positive_and_non_positive=0\n\
    \  local -i is_positive_and_non_positive_and_zero=0\n  local -i is_negative_and_non_negative=0\n\
    \  local -i is_negative_and_non_negative_and_zero=0\n  local -i is_negative_and_non_positive=0\n\
    \  local", "  local -a arr=()\n  local -i i=0\n  local -i len=0\n  local -i min=0\n\
    \  local -i max=0\n  local -i tmp=0\n  local -i is_first=1\n  local -i is_neg=0\n\
    \  local -i is_pos=0\n  local -i is_zero=0\n  local -i is_non_zero=0\n  local\
    \ -i is_non_zero_neg=0\n  local -i is_non_zero_pos=0\n  local -i is_non_zero_neg_first=1\n\
    \  local -i is_non_zero_pos_first=1\n  local -i is_non_zero_neg_last=0\n  local\
    \ -i is_non_zero_pos_last=0\n  local -i is_non_zero_neg_last_first=1\n  local\
    \ -i is_non_zero_pos_last_first=1\n  local -i is_non_zero_neg_last_second=0\n\
    \  local -i is_non_zero_pos_last_second=0\n  local -i is_non_zero_neg_last_second_first=1\n\
    \  local -i is_non_zero_pos_last_second_first=1\n  local -i is_non_zero_neg_last_second_second=0\n\
    \  local -i is_non_zero_pos_last_second_second=0\n  local -i is_non_zero_neg_last_second_second_first=1\n\
    \  local -i is_non_zero_pos_last_second_second_first=1\n  local -i is_non_zero_neg_last_second_second_second=0\n\
    \  local -i is_non_zero_pos_last_second_second_second=0\n  local -i is_non_zero_neg_last_second_second_second_first=1\n\
    \  local -i is_non_zero_pos_last_second_second_second_first=1\n  local -i is_non_zero_neg_last_second_second_second_second=0\n\
    \  local -i is_non", "  local list=$1\n  local largest_negative=None\n  local\
    \ smallest_positive=None\n  local number\n  for number in $list; do\n    if [[\
    \ $number -lt 0 ]]; then\n      if [[ $largest_negative = None ]] || [[ $number\
    \ -gt $largest_negative ]]; then\n        largest_negative=$number\n      fi\n\
    \    elif [[ $number -gt 0 ]]; then\n      if [[ $smallest_positive = None ]]\
    \ || [[ $number -lt $smallest_positive ]]; then\n        smallest_positive=$number\n\
    \      fi\n    fi\n  done\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "  local -a list=($1)\n  local max_neg=0\n  local min_pos=0\n  local max_neg_found=false\n\
    \  local min_pos_found=false\n  for i in \"${list[@]}\"; do\n    if [[ $i -lt\
    \ 0 ]]; then\n      if [[ $i -gt $max_neg ]]; then\n        max_neg=$i\n     \
    \   max_neg_found=true\n      fi\n    elif [[ $i -gt 0 ]]; then\n      if [[ $min_pos_found\
    \ == false ]]; then\n        min_pos=$i\n        min_pos_found=true\n      elif\
    \ [[ $i -lt $min_pos ]]; then\n        min_pos=$i\n      fi\n    fi\n  done\n\
    \  if [[ $max_neg_found == false ]]; then\n    max_neg=\"None\"\n  fi\n  if [[\
    \ $min_pos_found == false ]]; then\n    min_pos=\"None\"\n  fi\n  echo \"[\\\"\
    $max_neg\\\", \\\"$min_pos\\\"]\"", "  local -a arr=($1)\n  local -a neg_arr=()\n\
    \  local -a pos_arr=()\n  local -a result=()\n  local i\n  local neg_max=0\n \
    \ local pos_min=0\n\n  for i in \"${arr[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n\
    \      neg_arr+=($i)\n    else\n      pos_arr+=($i)\n    fi\n  done\n\n  if [[\
    \ ${#neg_arr[@]} -gt 0 ]]; then\n    neg_max=$(printf \"%s\\n\" \"${neg_arr[@]}\"\
    \ | sort -nr | head -n1)\n  fi\n\n  if [[ ${#pos_arr[@]} -gt 0 ]]; then\n    pos_min=$(printf\
    \ \"%s\\n\" \"${pos_arr[@]}\" | sort -n | head -n1)\n  fi\n\n  result+=(\"${neg_max}\"\
    )\n  result+=(\"${pos_min}\")\n\n  echo \"${result[@]}\"", "  local -a list\n\
    \  local -i a b\n  local -i i\n  list=($1)\n  a=0\n  b=0\n  for ((i=0; i<${#list[@]};\
    \ i++)); do\n    if [[ ${list[$i]} -lt 0 ]]; then\n      if [[ ${list[$i]} -gt\
    \ $a ]]; then\n        a=${list[$i]}\n      fi\n    elif [[ ${list[$i]} -gt 0\
    \ ]]; then\n      if [[ $b -eq 0 ]] || [[ ${list[$i]} -lt $b ]]; then\n      \
    \  b=${list[$i]}\n      fi\n    fi\n  done\n  if [[ $a -eq 0 ]]; then\n    a=\"\
    None\"\n  fi\n  if [[ $b -eq 0 ]]; then\n    b=\"None\"\n  fi\n  echo \"[\\\"\
    $a\\\", \\\"$b\\\"]\"", "  local -a list=($1)\n  local -a negative_integers=()\n\
    \  local -a positive_integers=()\n  for i in \"${list[@]}\"; do\n    if [[ $i\
    \ -lt 0 ]]; then\n      negative_integers+=($i)\n    elif [[ $i -gt 0 ]]; then\n\
    \      positive_integers+=($i)\n    fi\n  done\n  if [[ ${#negative_integers[@]}\
    \ -eq 0 ]]; then\n    negative_integers+=(None)\n  fi\n  if [[ ${#positive_integers[@]}\
    \ -eq 0 ]]; then\n    positive_integers+=(None)\n  fi\n  echo \"[\\\"$(echo \"\
    ${negative_integers[@]}\" | sort -nr | head -n 1)\\\", \\\"$(echo \"${positive_integers[@]}\"\
    \ | sort -n | head -n 1)\\\"]\"", "  local -a array=($1)\n  local -a negative_array=()\n\
    \  local -a positive_array=()\n  local -a result=()\n  local max_negative=0\n\
    \  local min_positive=0\n  local i=0\n  local j=0\n  local k=0\n  local len=${#array[@]}\n\
    \  local is_negative=0\n  local is_positive=0\n\n  for ((i=0; i<len; i++)); do\n\
    \    if [[ ${array[$i]} -lt 0 ]]; then\n      negative_array[$j]=${array[$i]}\n\
    \      ((j++))\n      is_negative=1\n    elif [[ ${array[$i]} -gt 0 ]]; then\n\
    \      positive_array[$k]=${array[$i]}\n      ((k++))\n      is_positive=1\n \
    \   fi\n  done\n\n  if [[ $is_negative -eq 1 ]]; then\n    max_negative=${negative_array[0]}\n\
    \    for ((i=1; i<${#negative_array[@]}; i++)); do\n      if [[ ${negative_array[$i]}\
    \ -gt $max_negative ]]; then\n        max_negative=${negative_array[$i]}\n   \
    \   fi\n    done\n  else\n    max_negative=\"None\"\n  fi\n\n  if [[ $is_positive\
    \ -eq 1 ]]; then\n    min_positive=${positive_array[0]}\n    for ((i=1; i<${#positive_array[@]};\
    \ i++)); do\n      if [[ ${positive_array[$i]} -lt $min_positive ]]; then\n  \
    \      min_positive=${positive_array[$i]}\n      fi\n    done\n  else\n    min_positive=\"\
    None\"\n  fi\n\n  result[0]=$max_negative\n  result[1]=$min_positive\n\n  echo\
    \ ${result[@]}", "    local -a list=($1)\n    local -a negatives=()\n    local\
    \ -a positives=()\n    local -a result=()\n    for i in \"${list[@]}\"; do\n \
    \       if [[ $i -lt 0 ]]; then\n            negatives+=($i)\n        elif [[\
    \ $i -gt 0 ]]; then\n            positives+=($i)\n        fi\n    done\n    if\
    \ [[ ${#negatives[@]} -eq 0 ]]; then\n        result+=(None)\n    else\n     \
    \   result+=($(echo \"${negatives[@]}\" | tr ' ' '\\n' | sort -nr | head -n 1))\n\
    \    fi\n    if [[ ${#positives[@]} -eq 0 ]]; then\n        result+=(None)\n \
    \   else\n        result+=($(echo \"${positives[@]}\" | tr ' ' '\\n' | sort -n\
    \ | head -n 1))\n    fi\n    echo \"${result[@]}\"", "    local list=$1\n    local\
    \ largest_negative=None\n    local smallest_positive=None\n    for i in $list;\
    \ do\n        if [[ $i -lt 0 ]]; then\n            if [[ $largest_negative ==\
    \ None ]] || [[ $i -gt $largest_negative ]]; then\n                largest_negative=$i\n\
    \            fi\n        elif [[ $i -gt 0 ]]; then\n            if [[ $smallest_positive\
    \ == None ]] || [[ $i -lt $smallest_positive ]]; then\n                smallest_positive=$i\n\
    \            fi\n        fi\n    done\n    echo \"[\\\"$largest_negative\\\",\
    \ \\\"$smallest_positive\\\"]\"", "  local -a array=($1)\n  local -a negatives\n\
    \  local -a positives\n  local -a result\n  for i in \"${array[@]}\"; do\n   \
    \ if [[ $i -lt 0 ]]; then\n      negatives+=($i)\n    elif [[ $i -gt 0 ]]; then\n\
    \      positives+=($i)\n    fi\n  done\n  if [[ ${#negatives[@]} -eq 0 ]]; then\n\
    \    result+=(None)\n  else\n    result+=($(printf \"%s\\n\" \"${negatives[@]}\"\
    \ | sort -nr | head -n 1))\n  fi\n  if [[ ${#positives[@]} -eq 0 ]]; then\n  \
    \  result+=(None)\n  else\n    result+=($(printf \"%s\\n\" \"${positives[@]}\"\
    \ | sort -n | head -n 1))\n  fi\n  echo \"${result[@]}\"", "  local -a list=($1)\n\
    \  local -a negative_list=()\n  local -a positive_list=()\n  local -a result=()\n\
    \  local largest_negative=0\n  local smallest_positive=0\n  local i=0\n  local\
    \ j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local\
    \ p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local\
    \ v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local\
    \ bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n\
    \  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local\
    \ mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n\
    \  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local\
    \ xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n\
    \  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n \
    \ local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local\
    \ nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n\
    \  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n \
    \ local yyy=0\n  local z", "    local -a a=($1)\n    local -a b=()\n    local\
    \ -a c=()\n    for i in ${a[@]}; do\n        if [ $i -lt 0 ]; then\n         \
    \   b+=($i)\n        elif [ $i -gt 0 ]; then\n            c+=($i)\n        fi\n\
    \    done\n    if [ ${#b[@]} -eq 0 ]; then\n        b+=(None)\n    else\n    \
    \    b=($(echo ${b[@]} | tr ' ' '\\n' | sort -nr | head -n 1))\n    fi\n    if\
    \ [ ${#c[@]} -eq 0 ]; then\n        c+=(None)\n    else\n        c=($(echo ${c[@]}\
    \ | tr ' ' '\\n' | sort -n | head -n 1))\n    fi\n    echo \"[\\\"${b[0]}\\\"\
    , \\\"${c[0]}\\\"]\"", "  local -a list=($1)\n  local -a negatives=()\n  local\
    \ -a positives=()\n  local -a result=()\n  local i\n  for i in \"${list[@]}\"\
    ; do\n    if (( i < 0 )); then\n      negatives+=($i)\n    elif (( i > 0 )); then\n\
    \      positives+=($i)\n    fi\n  done\n  if (( ${#negatives[@]} > 0 )); then\n\
    \    result+=($(printf \"%s\\n\" \"${negatives[@]}\" | sort -n | tail -n 1))\n\
    \  else\n    result+=(\"None\")\n  fi\n  if (( ${#positives[@]} > 0 )); then\n\
    \    result+=($(printf \"%s\\n\" \"${positives[@]}\" | sort -n | head -n 1))\n\
    \  else\n    result+=(\"None\")\n  fi\n  echo \"${result[@]}\"", "  local list=$1\n\
    \  local largest_negative=None\n  local smallest_positive=None\n  for i in $list;\
    \ do\n    if [[ $i -lt 0 ]]; then\n      if [[ $largest_negative == None ]] ||\
    \ [[ $i -gt $largest_negative ]]; then\n        largest_negative=$i\n      fi\n\
    \    elif [[ $i -gt 0 ]]; then\n      if [[ $smallest_positive == None ]] || [[\
    \ $i -lt $smallest_positive ]]; then\n        smallest_positive=$i\n      fi\n\
    \    fi\n  done\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "    local a b\n    a=$(echo \"$1\" | tr ' ' '\\n' | grep -v '^[0-9]*$'\
    \ | sort -nr | head -n 1)\n    b=$(echo \"$1\" | tr ' ' '\\n' | grep -v '^[0-9]*$'\
    \ | sort -n | head -n 1)\n    echo \"[\\\"$a\\\", \\\"$b\\\"]\"", "    local -a\
    \ list=($1)\n    local -a positive\n    local -a negative\n    local -a result\n\
    \    local i\n    for i in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n\
    \            negative+=(\"$i\")\n        elif [[ $i -gt 0 ]]; then\n         \
    \   positive+=(\"$i\")\n        fi\n    done\n    if [[ ${#negative[@]} -eq 0\
    \ ]]; then\n        result+=(\"None\")\n    else\n        result+=(\"$(printf\
    \ \"%s\\n\" \"${negative[@]}\" | sort -n | tail -n 1)\")\n    fi\n    if [[ ${#positive[@]}\
    \ -eq 0 ]]; then\n        result+=(\"None\")\n    else\n        result+=(\"$(printf\
    \ \"%s\\n\" \"${positive[@]}\" | sort -n | head -n 1)\")\n    fi\n    echo \"\
    ${result[@]}\"", "  local -a list=($1)\n  local -a negatives\n  local -a positives\n\
    \  local -a result\n  for i in \"${list[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n\
    \      negatives+=(\"$i\")\n    elif [[ $i -gt 0 ]]; then\n      positives+=(\"\
    $i\")\n    fi\n  done\n  if [[ ${#negatives[@]} -eq 0 ]]; then\n    result+=(\"\
    None\")\n  else\n    result+=(\"$(printf \"%s\\n\" \"${negatives[@]}\" | sort\
    \ -nr | head -n 1)\")\n  fi\n  if [[ ${#positives[@]} -eq 0 ]]; then\n    result+=(\"\
    None\")\n  else\n    result+=(\"$(printf \"%s\\n\" \"${positives[@]}\" | sort\
    \ -n | head -n 1)\")\n  fi\n  echo \"${result[@]}\"", "    local -a arr=()\n \
    \   local -a neg=()\n    local -a pos=()\n    local -a res=()\n    local i\n \
    \   local n\n    local p\n    local l\n    local s\n    IFS=' ' read -r -a arr\
    \ <<< \"$1\"\n    for i in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n\
    \            neg+=(\"$i\")\n        elif [[ $i -gt 0 ]]; then\n            pos+=(\"\
    $i\")\n        fi\n    done\n    if [[ ${#neg[@]} -eq 0 ]]; then\n        n=\"\
    None\"\n    else\n        n=$(printf \"%s\\n\" \"${neg[@]}\" | sort -nr | head\
    \ -n 1)\n    fi\n    if [[ ${#pos[@]} -eq 0 ]]; then\n        p=\"None\"\n   \
    \ else\n        p=$(printf \"%s\\n\" \"${pos[@]}\" | sort -n | head -n 1)\n  \
    \  fi\n    res+=(\"$n\")\n    res+=(\"$p\")\n    echo \"${res[@]}\"", "  local\
    \ -a list=($1)\n  local -a negatives=()\n  local -a positives=()\n  local -a result=()\n\
    \  local -i i=0\n  local -i len=${#list[@]}\n  local -i largest_neg\n  local -i\
    \ smallest_pos\n\n  for ((i=0; i<len; i++)); do\n    if [[ ${list[$i]} -lt 0 ]];\
    \ then\n      negatives+=(${list[$i]})\n    elif [[ ${list[$i]} -gt 0 ]]; then\n\
    \      positives+=(${list[$i]})\n    fi\n  done\n\n  if [[ ${#negatives[@]} -eq\
    \ 0 ]]; then\n    result+=(None)\n  else\n    largest_neg=${negatives[0]}\n  \
    \  for ((i=1; i<${#negatives[@]}; i++)); do\n      if [[ ${negatives[$i]} -gt\
    \ $largest_neg ]]; then\n        largest_neg=${negatives[$i]}\n      fi\n    done\n\
    \    result+=($largest_neg)\n  fi\n\n  if [[ ${#positives[@]} -eq 0 ]]; then\n\
    \    result+=(None)\n  else\n    smallest_pos=${positives[0]}\n    for ((i=1;\
    \ i<${#positives[@]}; i++)); do\n      if [[ ${positives[$i]} -lt $smallest_pos\
    \ ]]; then\n        smallest_pos=${positives[$i]}\n      fi\n    done\n    result+=($smallest_pos)\n\
    \  fi\n\n  echo \"${result[@]}\"", "    local list=$1\n    local largest_negative=None\n\
    \    local smallest_positive=None\n    for i in $list; do\n        if [[ $i -lt\
    \ 0 ]]; then\n            if [[ $largest_negative = None ]] || [[ $i -gt $largest_negative\
    \ ]]; then\n                largest_negative=$i\n            fi\n        elif\
    \ [[ $i -gt 0 ]]; then\n            if [[ $smallest_positive = None ]] || [[ $i\
    \ -lt $smallest_positive ]]; then\n                smallest_positive=$i\n    \
    \        fi\n        fi\n    done\n    echo \"[\\\"$largest_negative\\\", \\\"\
    $smallest_positive\\\"]\"", "  local -a list=($1)\n  local -a positive\n  local\
    \ -a negative\n  local -a result\n  for i in \"${list[@]}\"; do\n    if [[ $i\
    \ -lt 0 ]]; then\n      negative+=(\"$i\")\n    elif [[ $i -gt 0 ]]; then\n  \
    \    positive+=(\"$i\")\n    fi\n  done\n  if [[ ${#negative[@]} -eq 0 ]]; then\n\
    \    result+=(\"None\")\n  else\n    result+=(\"$(printf '%s\\n' \"${negative[@]}\"\
    \ | sort -nr | head -n1)\")\n  fi\n  if [[ ${#positive[@]} -eq 0 ]]; then\n  \
    \  result+=(\"None\")\n  else\n    result+=(\"$(printf '%s\\n' \"${positive[@]}\"\
    \ | sort -n | head -n1)\")\n  fi\n  echo \"${result[@]}\"", "    local -a list=($1)\n\
    \    local largest_negative_integer=None\n    local smallest_positive_integer=None\n\
    \    for i in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n          \
    \  if [[ $largest_negative_integer == None ]]; then\n                largest_negative_integer=$i\n\
    \            elif [[ $i -gt $largest_negative_integer ]]; then\n             \
    \   largest_negative_integer=$i\n            fi\n        elif [[ $i -gt 0 ]];\
    \ then\n            if [[ $smallest_positive_integer == None ]]; then\n      \
    \          smallest_positive_integer=$i\n            elif [[ $i -lt $smallest_positive_integer\
    \ ]]; then\n                smallest_positive_integer=$i\n            fi\n   \
    \     fi\n    done\n    echo \"[\\\"$largest_negative_integer\\\", \\\"$smallest_positive_integer\\\
    \"]\"", "  local -a a=($1)\n  local -a b=()\n  local -a c=()\n  for i in ${a[@]};\
    \ do\n    if [ $i -lt 0 ]; then\n      b+=($i)\n    elif [ $i -gt 0 ]; then\n\
    \      c+=($i)\n    fi\n  done\n  if [ ${#b[@]} -eq 0 ]; then\n    b=(\"None\"\
    )\n  else\n    b=($(printf \"%s\\n\" \"${b[@]}\" | sort -nr | head -n1))\n  fi\n\
    \  if [ ${#c[@]} -eq 0 ]; then\n    c=(\"None\")\n  else\n    c=($(printf \"%s\\\
    n\" \"${c[@]}\" | sort -n | head -n1))\n  fi\n  echo \"[\\\"${b[0]}\\\", \\\"\
    ${c[0]}\\\"]\"", "    local -a list\n    local -a negative_list\n    local -a\
    \ positive_list\n    local -a result\n    local -i i=0\n    local -i j=0\n   \
    \ local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\
    \ -i lll=0\n    local -i mmm=", "    local list=$1\n    local largest_negative=None\n\
    \    local smallest_positive=None\n    for i in $list; do\n        if [[ $i -lt\
    \ 0 ]]; then\n            if [[ $largest_negative == None ]] || [[ $i -gt $largest_negative\
    \ ]]; then\n                largest_negative=$i\n            fi\n        elif\
    \ [[ $i -gt 0 ]]; then\n            if [[ $smallest_positive == None ]] || [[\
    \ $i -lt $smallest_positive ]]; then\n                smallest_positive=$i\n \
    \           fi\n        fi\n    done\n    echo \"[\\\"$largest_negative\\\", \\\
    \"$smallest_positive\\\"]\"", "    local -a arr=($1)\n    local -a neg_arr=()\n\
    \    local -a pos_arr=()\n    local max_neg=0\n    local min_pos=0\n    local\
    \ i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n\
    \    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n \
    \   local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n  \
    \  local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n\
    \    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n\
    \    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n\
    \    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n\
    \    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n\
    \    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n\
    \    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local\
    \ ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n\
    \    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local\
    \ ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n\
    \    local uuu=0\n    local vvv=0\n    local www=0\n    local xxx=0\n    local\
    \ yyy=0\n    local zzz=0\n    local aaaa", "    local list=\"$1\"\n    local largest_negative=None\n\
    \    local smallest_positive=None\n    for i in $list; do\n        if [[ $i -lt\
    \ 0 ]]; then\n            if [[ $largest_negative == None ]] || [[ $i -gt $largest_negative\
    \ ]]; then\n                largest_negative=$i\n            fi\n        elif\
    \ [[ $i -gt 0 ]]; then\n            if [[ $smallest_positive == None ]] || [[\
    \ $i -lt $smallest_positive ]]; then\n                smallest_positive=$i\n \
    \           fi\n        fi\n    done\n    echo \"[\\\"$largest_negative\\\", \\\
    \"$smallest_positive\\\"]\"", "    local -a list=($1)\n    local -a negative_numbers=()\n\
    \    local -a positive_numbers=()\n    local largest_negative_number=None\n  \
    \  local smallest_positive_number=None\n\n    for number in \"${list[@]}\"; do\n\
    \        if [[ $number -lt 0 ]]; then\n            negative_numbers+=($number)\n\
    \        elif [[ $number -gt 0 ]]; then\n            positive_numbers+=($number)\n\
    \        fi\n    done\n\n    if [[ ${#negative_numbers[@]} -gt 0 ]]; then\n  \
    \      largest_negative_number=${negative_numbers[0]}\n        for number in \"\
    ${negative_numbers[@]}\"; do\n            if [[ $number -gt $largest_negative_number\
    \ ]]; then\n                largest_negative_number=$number\n            fi\n\
    \        done\n    fi\n\n    if [[ ${#positive_numbers[@]} -gt 0 ]]; then\n  \
    \      smallest_positive_number=${positive_numbers[0]}\n        for number in\
    \ \"${positive_numbers[@]}\"; do\n            if [[ $number -lt $smallest_positive_number\
    \ ]]; then\n                smallest_positive_number=$number\n            fi\n\
    \        done\n    fi\n\n    echo \"[\\\"$largest_negative_number\\\", \\\"$smallest_positive_number\\\
    \"]\"", "  local -a list=($1)\n  local -i a=0\n  local -i b=0\n  local -i i=0\n\
    \  local -i len=${#list[@]}\n  local -i found_a=0\n  local -i found_b=0\n  local\
    \ -i tmp=0\n\n  for ((i=0; i<len; i++)); do\n    tmp=${list[i]}\n    if ((tmp\
    \ < 0)); then\n      if ((found_a == 0)); then\n        a=tmp\n        found_a=1\n\
    \      elif ((tmp > a)); then\n        a=tmp\n      fi\n    elif ((tmp > 0));\
    \ then\n      if ((found_b == 0)); then\n        b=tmp\n        found_b=1\n  \
    \    elif ((tmp < b)); then\n        b=tmp\n      fi\n    fi\n  done\n\n  if ((found_a\
    \ == 0)); then\n    a=\"None\"\n  fi\n  if ((found_b == 0)); then\n    b=\"None\"\
    \n  fi\n\n  echo \"[\\\"$a\\\", \\\"$b\\\"]\"", "    local -a list=($1)\n    local\
    \ largest_negative=None\n    local smallest_positive=None\n    for i in \"${list[@]}\"\
    ; do\n        if [[ $i -lt 0 ]]; then\n            if [[ $largest_negative ==\
    \ None ]] || [[ $i -gt $largest_negative ]]; then\n                largest_negative=$i\n\
    \            fi\n        elif [[ $i -gt 0 ]]; then\n            if [[ $smallest_positive\
    \ == None ]] || [[ $i -lt $smallest_positive ]]; then\n                smallest_positive=$i\n\
    \            fi\n        fi\n    done\n    echo \"[\\\"$largest_negative\\\",\
    \ \\\"$smallest_positive\\\"]\"", "  local -a list=($1)\n  local -a negatives\n\
    \  local -a positives\n  local -a result\n  local i\n  for i in \"${list[@]}\"\
    ; do\n    if [[ $i -lt 0 ]]; then\n      negatives+=(\"$i\")\n    elif [[ $i -gt\
    \ 0 ]]; then\n      positives+=(\"$i\")\n    fi\n  done\n  if [[ ${#negatives[@]}\
    \ -eq 0 ]]; then\n    result+=(\"None\")\n  else\n    result+=(\"$(printf '%s\\\
    n' \"${negatives[@]}\" | sort -nr | head -n 1)\")\n  fi\n  if [[ ${#positives[@]}\
    \ -eq 0 ]]; then\n    result+=(\"None\")\n  else\n    result+=(\"$(printf '%s\\\
    n' \"${positives[@]}\" | sort -n | head -n 1)\")\n  fi\n  printf '[\"%s\", \"\
    %s\"]' \"${result[@]}\"", "    local -a list=($1)\n    local -a negatives\n  \
    \  local -a positives\n    local -a result\n    local i\n\n    for ((i = 0; i\
    \ < ${#list[@]}; i++)); do\n        if [[ ${list[$i]} -lt 0 ]]; then\n       \
    \     negatives+=(${list[$i]})\n        elif [[ ${list[$i]} -gt 0 ]]; then\n \
    \           positives+=(${list[$i]})\n        fi\n    done\n\n    if [[ ${#negatives[@]}\
    \ -eq 0 ]]; then\n        result+=('\"None\"')\n    else\n        result+=('\"\
    '$(printf '%s\\n' \"${negatives[@]}\" | sort -nr | head -n 1)'\"')\n    fi\n\n\
    \    if [[ ${#positives[@]} -eq 0 ]]; then\n        result+=('\"None\"')\n   \
    \ else\n        result+=('\"'$(printf '%s\\n' \"${positives[@]}\" | sort -n |\
    \ head -n 1)'\"')\n    fi\n\n    echo \"${result[@]}\"", "  local -a list=($1)\n\
    \  local -a negative_integers=()\n  local -a positive_integers=()\n  local largest_negative_integer=None\n\
    \  local smallest_positive_integer=None\n\n  for i in \"${list[@]}\"; do\n   \
    \ if [[ $i -lt 0 ]]; then\n      negative_integers+=($i)\n    elif [[ $i -gt 0\
    \ ]]; then\n      positive_integers+=($i)\n    fi\n  done\n\n  if [[ ${#negative_integers[@]}\
    \ -gt 0 ]]; then\n    largest_negative_integer=$(printf \"%s\\n\" \"${negative_integers[@]}\"\
    \ | sort -nr | head -n 1)\n  fi\n\n  if [[ ${#positive_integers[@]} -gt 0 ]];\
    \ then\n    smallest_positive_integer=$(printf \"%s\\n\" \"${positive_integers[@]}\"\
    \ | sort -n | head -n 1)\n  fi\n\n  echo \"[\\\"$largest_negative_integer\\\"\
    , \\\"$smallest_positive_integer\\\"]\"", "    local -a list=($1)\n    local -a\
    \ negatives=()\n    local -a positives=()\n    local -a result=(\"None\" \"None\"\
    )\n    for i in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n        \
    \    negatives+=($i)\n        elif [[ $i -gt 0 ]]; then\n            positives+=($i)\n\
    \        fi\n    done\n    if [[ ${#negatives[@]} -gt 0 ]]; then\n        result[0]=$(printf\
    \ \"%s\\n\" \"${negatives[@]}\" | sort -nr | head -n 1)\n    fi\n    if [[ ${#positives[@]}\
    \ -gt 0 ]]; then\n        result[1]=$(printf \"%s\\n\" \"${positives[@]}\" | sort\
    \ -n | head -n 1)\n    fi\n    echo \"${result[@]}\"", "    local -a list=($1)\n\
    \    local -a negative_list=()\n    local -a positive_list=()\n    local largest_negative=None\n\
    \    local smallest_positive=None\n\n    for i in \"${list[@]}\"; do\n       \
    \ if [[ $i -lt 0 ]]; then\n            negative_list+=($i)\n        elif [[ $i\
    \ -gt 0 ]]; then\n            positive_list+=($i)\n        fi\n    done\n\n  \
    \  if [[ ${#negative_list[@]} -gt 0 ]]; then\n        largest_negative=$(printf\
    \ \"%s\\n\" \"${negative_list[@]}\" | sort -nr | head -n 1)\n    fi\n\n    if\
    \ [[ ${#positive_list[@]} -gt 0 ]]; then\n        smallest_positive=$(printf \"\
    %s\\n\" \"${positive_list[@]}\" | sort -n | head -n 1)\n    fi\n\n    echo \"\
    [\\\"$largest_negative\\\", \\\"$smallest_positive\\\"]\"", "    local -a list=($1)\n\
    \    local -a negs=()\n    local -a poss=()\n    local a b\n    for i in \"${list[@]}\"\
    ; do\n        if [[ $i -lt 0 ]]; then\n            negs+=($i)\n        elif [[\
    \ $i -gt 0 ]]; then\n            poss+=($i)\n        fi\n    done\n    if [[ ${#negs[@]}\
    \ -eq 0 ]]; then\n        a=\"None\"\n    else\n        a=$(printf \"%s\\n\" \"\
    ${negs[@]}\" | sort -nr | head -n1)\n    fi\n    if [[ ${#poss[@]} -eq 0 ]]; then\n\
    \        b=\"None\"\n    else\n        b=$(printf \"%s\\n\" \"${poss[@]}\" | sort\
    \ -n | head -n1)\n    fi\n    echo \"[\\\"$a\\\", \\\"$b\\\"]\"", "    local -a\
    \ list=($1)\n    local -a negative_list=()\n    local -a positive_list=()\n  \
    \  local largest_negative\n    local smallest_positive\n    for i in \"${list[@]}\"\
    ; do\n        if ((i < 0)); then\n            negative_list+=($i)\n        elif\
    \ ((i > 0)); then\n            positive_list+=($i)\n        fi\n    done\n   \
    \ if ((${#negative_list[@]} > 0)); then\n        largest_negative=$(printf \"\
    %s\\n\" \"${negative_list[@]}\" | sort -nr | head -n 1)\n    else\n        largest_negative=\"\
    None\"\n    fi\n    if ((${#positive_list[@]} > 0)); then\n        smallest_positive=$(printf\
    \ \"%s\\n\" \"${positive_list[@]}\" | sort -n | head -n 1)\n    else\n       \
    \ smallest_positive=\"None\"\n    fi\n    echo \"[\\\"$largest_negative\\\", \\\
    \"$smallest_positive\\\"]\"", "  local -a list=($1)\n  local largest_negative_integer=None\n\
    \  local smallest_positive_integer=None\n  for i in \"${list[@]}\"; do\n    if\
    \ [[ $i -lt 0 ]]; then\n      if [[ $largest_negative_integer == None ]]; then\n\
    \        largest_negative_integer=$i\n      elif [[ $i -gt $largest_negative_integer\
    \ ]]; then\n        largest_negative_integer=$i\n      fi\n    elif [[ $i -gt\
    \ 0 ]]; then\n      if [[ $smallest_positive_integer == None ]]; then\n      \
    \  smallest_positive_integer=$i\n      elif [[ $i -lt $smallest_positive_integer\
    \ ]]; then\n        smallest_positive_integer=$i\n      fi\n    fi\n  done\n \
    \ echo \"[\\\"$largest_negative_integer\\\", \\\"$smallest_positive_integer\\\"\
    ]\"", "    local -a list=($1)\n    local -a negatives\n    local -a positives\n\
    \    local -a result\n    for i in \"${list[@]}\"; do\n        if [[ $i -lt 0\
    \ ]]; then\n            negatives+=($i)\n        elif [[ $i -gt 0 ]]; then\n \
    \           positives+=($i)\n        fi\n    done\n    if [[ ${#negatives[@]}\
    \ -eq 0 ]]; then\n        result+=(None)\n    else\n        result+=($(printf\
    \ \"%s\\n\" \"${negatives[@]}\" | sort -nr | head -n 1))\n    fi\n    if [[ ${#positives[@]}\
    \ -eq 0 ]]; then\n        result+=(None)\n    else\n        result+=($(printf\
    \ \"%s\\n\" \"${positives[@]}\" | sort -n | head -n 1))\n    fi\n    echo \"${result[@]}\"",
  "  local -a array=($1)\n  local largest_negative=None\n  local smallest_positive=None\n\
    \  for i in \"${array[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      if [[ $largest_negative\
    \ == None ]]; then\n        largest_negative=$i\n      elif [[ $i -gt $largest_negative\
    \ ]]; then\n        largest_negative=$i\n      fi\n    elif [[ $i -gt 0 ]]; then\n\
    \      if [[ $smallest_positive == None ]]; then\n        smallest_positive=$i\n\
    \      elif [[ $i -lt $smallest_positive ]]; then\n        smallest_positive=$i\n\
    \      fi\n    fi\n  done\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "  local list=$1\n  local largest_negative=None\n  local smallest_positive=None\n\
    \  for i in $list; do\n    if [[ $i -lt 0 ]]; then\n      if [[ $largest_negative\
    \ == None ]] || [[ $i -gt $largest_negative ]]; then\n        largest_negative=$i\n\
    \      fi\n    elif [[ $i -gt 0 ]]; then\n      if [[ $smallest_positive == None\
    \ ]] || [[ $i -lt $smallest_positive ]]; then\n        smallest_positive=$i\n\
    \      fi\n    fi\n  done\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "  local -a list=($1)\n  local largest_negative=None\n  local smallest_positive=None\n\
    \  for i in \"${list[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      if [[ $largest_negative\
    \ == None ]] || [[ $i -gt $largest_negative ]]; then\n        largest_negative=$i\n\
    \      fi\n    elif [[ $i -gt 0 ]]; then\n      if [[ $smallest_positive == None\
    \ ]] || [[ $i -lt $smallest_positive ]]; then\n        smallest_positive=$i\n\
    \      fi\n    fi\n  done\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "  local -a list=($1)\n  local -a positive_list=()\n  local -a negative_list=()\n\
    \  local -a result=()\n  local i\n  for i in \"${list[@]}\"; do\n    if [[ $i\
    \ -gt 0 ]]; then\n      positive_list+=($i)\n    elif [[ $i -lt 0 ]]; then\n \
    \     negative_list+=($i)\n    fi\n  done\n  if [[ ${#positive_list[@]} -eq 0\
    \ ]]; then\n    result+=(None)\n  else\n    result+=($(printf \"%s\\n\" \"${positive_list[@]}\"\
    \ | sort -n | head -n 1))\n  fi\n  if [[ ${#negative_list[@]} -eq 0 ]]; then\n\
    \    result+=(None)\n  else\n    result+=($(printf \"%s\\n\" \"${negative_list[@]}\"\
    \ | sort -n | tail -n 1))\n  fi\n  echo \"${result[@]}\"", "  local -a list=($1)\n\
    \  local largest_negative=None\n  local smallest_positive=None\n  for i in \"\
    ${list[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      if [[ $largest_negative ==\
    \ None ]] || [[ $i -gt $largest_negative ]]; then\n        largest_negative=$i\n\
    \      fi\n    elif [[ $i -gt 0 ]]; then\n      if [[ $smallest_positive == None\
    \ ]] || [[ $i -lt $smallest_positive ]]; then\n        smallest_positive=$i\n\
    \      fi\n    fi\n  done\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "    local -a list=($1)\n    local -a negative_list=()\n    local -a positive_list=()\n\
    \    local -a result=()\n    for i in \"${list[@]}\"; do\n        if [[ $i -lt\
    \ 0 ]]; then\n            negative_list+=($i)\n        elif [[ $i -gt 0 ]]; then\n\
    \            positive_list+=($i)\n        fi\n    done\n    if [[ ${#negative_list[@]}\
    \ -eq 0 ]]; then\n        result+=(None)\n    else\n        result+=($(printf\
    \ \"%s\\n\" \"${negative_list[@]}\" | sort -nr | head -n 1))\n    fi\n    if [[\
    \ ${#positive_list[@]} -eq 0 ]]; then\n        result+=(None)\n    else\n    \
    \    result+=($(printf \"%s\\n\" \"${positive_list[@]}\" | sort -n | head -n 1))\n\
    \    fi\n    echo \"${result[@]}\"", "  local -a arr=()\n  local -a neg=()\n \
    \ local -a pos=()\n  local -a res=()\n  local i=0\n  local j=0\n  local k=0\n\
    \  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n\
    \  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n\
    \  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n\
    \  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local\
    \ ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n\
    \  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local\
    \ tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n\
    \  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local\
    \ eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n\
    \  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n \
    \ local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local\
    \ uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n\
    \  local aaaa=0\n  local bbbb=0\n  local c", "    local -a list=($1)\n    local\
    \ -a negative_list=()\n    local -a positive_list=()\n    local -a result=()\n\
    \    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local\
    \ -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n\
    \    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local\
    \ -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\
    \    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n\
    \    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n\
    \    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n\
    \    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n\
    \    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n\
    \    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n\
    \    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n\
    \    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n\
    \    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n\
    \    local -i kkk=0\n    local -i lll", "    local -a list=($1)\n    local -a\
    \ negative_integers=()\n    local -a positive_integers=()\n    local -a result=()\n\
    \    local i=0\n    local largest_negative_integer=0\n    local smallest_positive_integer=0\n\
    \n    for i in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n         \
    \   negative_integers+=($i)\n        elif [[ $i -gt 0 ]]; then\n            positive_integers+=($i)\n\
    \        fi\n    done\n\n    if [[ ${#negative_integers[@]} -gt 0 ]]; then\n \
    \       largest_negative_integer=$(printf \"%s\\n\" \"${negative_integers[@]}\"\
    \ | sort -nr | head -n 1)\n    else\n        largest_negative_integer=\"None\"\
    \n    fi\n\n    if [[ ${#positive_integers[@]} -gt 0 ]]; then\n        smallest_positive_integer=$(printf\
    \ \"%s\\n\" \"${positive_integers[@]}\" | sort -n | head -n 1)\n    else\n   \
    \     smallest_positive_integer=\"None\"\n    fi\n\n    result+=(\"$largest_negative_integer\"\
    )\n    result+=(\"$smallest_positive_integer\")\n\n    echo \"${result[@]}\"",
  "  local -a list=($1)\n  local -a pos_list=()\n  local -a neg_list=()\n  local -a\
    \ result=()\n  local i=0\n  local pos_max=0\n  local neg_min=0\n\n  for i in \"\
    ${list[@]}\"; do\n    if [ $i -lt 0 ]; then\n      neg_list+=($i)\n    elif [\
    \ $i -gt 0 ]; then\n      pos_list+=($i)\n    fi\n  done\n\n  if [ ${#neg_list[@]}\
    \ -gt 0 ]; then\n    neg_min=${neg_list[0]}\n    for i in \"${neg_list[@]}\";\
    \ do\n      if [ $i -lt $neg_min ]; then\n        neg_min=$i\n      fi\n    done\n\
    \  else\n    neg_min=\"None\"\n  fi\n\n  if [ ${#pos_list[@]} -gt 0 ]; then\n\
    \    pos_max=${pos_list[0]}\n    for i in \"${pos_list[@]}\"; do\n      if [ $i\
    \ -gt $pos_max ]; then\n        pos_max=$i\n      fi\n    done\n  else\n    pos_max=\"\
    None\"\n  fi\n\n  result+=(\"$neg_min\")\n  result+=(\"$pos_max\")\n  echo \"\
    ${result[@]}\"", "  local -a list=($1)\n  local -i largest_negative=0\n  local\
    \ -i smallest_positive=0\n  local -i i=0\n  local -i n=${#list[@]}\n  local -i\
    \ is_positive=0\n  local -i is_negative=0\n  local -i is_zero=0\n  local -i is_non_zero=0\n\
    \  local -i is_non_zero_positive=0\n  local -i is_non_zero_negative=0\n  local\
    \ -i is_non_zero_positive_found=0\n  local -i is_non_zero_negative_found=0\n \
    \ local -i is_positive_found=0\n  local -i is_negative_found=0\n  local -i is_zero_found=0\n\
    \  local -i is_non_zero_found=0\n  local -i is_non_zero_positive_or_negative_found=0\n\
    \  local -i is_positive_or_negative_found=0\n  local -i is_zero_or_non_zero_found=0\n\
    \  local -i is_positive_or_negative_or_zero_found=0\n  local -i is_positive_or_negative_or_zero_or_non_zero_found=0\n\
    \  local -i is_positive_or_negative_or_zero_or_non_zero_positive_found=0\n  local\
    \ -i is_positive_or_negative_or_zero_or_non_zero_negative_found=0\n  local -i\
    \ is_positive_or_negative_or_zero_or_non_zero_positive_or_negative_found=0\n \
    \ local -i is_positive_or_negative_or_zero_or_non_zero_positive_or_negative_or_zero_found=0\n\
    \  local -i is_positive_or_negative_or_zero_or_non_zero_positive_or_negative_or_zero_or_non_zero_found=0\n\
    \  local -i is_positive_or_negative_or_zero_or_non_zero_positive_or_negative_or_zero_or_non_zero_positive_found=",
  "  local list=$1\n  local largest_negative=None\n  local smallest_positive=None\n\
    \  for i in $list; do\n    if [[ $i -lt 0 ]]; then\n      if [[ $largest_negative\
    \ == None ]] || [[ $i -gt $largest_negative ]]; then\n        largest_negative=$i\n\
    \      fi\n    elif [[ $i -gt 0 ]]; then\n      if [[ $smallest_positive == None\
    \ ]] || [[ $i -lt $smallest_positive ]]; then\n        smallest_positive=$i\n\
    \      fi\n    fi\n  done\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "  local -a arr=($1)\n  local -i a=0\n  local -i b=0\n  local -i i=0\n\
    \  local -i len=${#arr[@]}\n  local -i is_a_set=0\n  local -i is_b_set=0\n\n \
    \ while [ $i -lt $len ]; do\n    if [ ${arr[$i]} -lt 0 ]; then\n      if [ $is_a_set\
    \ -eq 0 ]; then\n        a=${arr[$i]}\n        is_a_set=1\n      elif [ ${arr[$i]}\
    \ -gt $a ]; then\n        a=${arr[$i]}\n      fi\n    elif [ ${arr[$i]} -gt 0\
    \ ]; then\n      if [ $is_b_set -eq 0 ]; then\n        b=${arr[$i]}\n        is_b_set=1\n\
    \      elif [ ${arr[$i]} -lt $b ]; then\n        b=${arr[$i]}\n      fi\n    fi\n\
    \    i=$i+1\n  done\n\n  if [ $is_a_set -eq 0 ]; then\n    a=\"None\"\n  fi\n\
    \  if [ $is_b_set -eq 0 ]; then\n    b=\"None\"\n  fi\n\n  echo \"[\\\"$a\\\"\
    , \\\"$b\\\"]\"", "    local -a list=($1)\n    local a=None\n    local b=None\n\
    \    for i in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n          \
    \  if [[ $a == None ]] || [[ $i -gt $a ]]; then\n                a=$i\n      \
    \      fi\n        elif [[ $i -gt 0 ]]; then\n            if [[ $b == None ]]\
    \ || [[ $i -lt $b ]]; then\n                b=$i\n            fi\n        fi\n\
    \    done\n    echo \"[\\\"$a\\\", \\\"$b\\\"]\"", "  local -a list=($1)\n  local\
    \ -a negatives=()\n  local -a positives=()\n  for i in \"${list[@]}\"; do\n  \
    \  if [[ $i -lt 0 ]]; then\n      negatives+=($i)\n    elif [[ $i -gt 0 ]]; then\n\
    \      positives+=($i)\n    fi\n  done\n  local largest_negative=None\n  local\
    \ smallest_positive=None\n  if [[ ${#negatives[@]} -gt 0 ]]; then\n    largest_negative=$(printf\
    \ \"%s\\n\" \"${negatives[@]}\" | sort -nr | head -n 1)\n  fi\n  if [[ ${#positives[@]}\
    \ -gt 0 ]]; then\n    smallest_positive=$(printf \"%s\\n\" \"${positives[@]}\"\
    \ | sort -n | head -n 1)\n  fi\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "    local -a list=($1)\n    local -a negative_list=()\n    local -a positive_list=()\n\
    \    local largest_negative=None\n    local smallest_positive=None\n\n    for\
    \ i in \"${list[@]}\"; do\n        if [[ \"$i\" -lt 0 ]]; then\n            negative_list+=(\"\
    $i\")\n        elif [[ \"$i\" -gt 0 ]]; then\n            positive_list+=(\"$i\"\
    )\n        fi\n    done\n\n    if [[ ${#negative_list[@]} -gt 0 ]]; then\n   \
    \     largest_negative=$(printf '%s\\n' \"${negative_list[@]}\" | sort -n | tail\
    \ -n 1)\n    fi\n\n    if [[ ${#positive_list[@]} -gt 0 ]]; then\n        smallest_positive=$(printf\
    \ '%s\\n' \"${positive_list[@]}\" | sort -n | head -n 1)\n    fi\n\n    echo \"\
    [\\\"$largest_negative\\\", \\\"$smallest_positive\\\"]\"", "  local -a list=($1)\n\
    \  local -a negative\n  local -a positive\n  local -a result\n  for i in \"${list[@]}\"\
    ; do\n    if (( i < 0 )); then\n      negative+=(\"$i\")\n    elif (( i > 0 ));\
    \ then\n      positive+=(\"$i\")\n    fi\n  done\n  if (( ${#negative[@]} > 0\
    \ )); then\n    result+=(\"$(printf '%s\\n' \"${negative[@]}\" | sort -nr | head\
    \ -n 1)\")\n  else\n    result+=(\"None\")\n  fi\n  if (( ${#positive[@]} > 0\
    \ )); then\n    result+=(\"$(printf '%s\\n' \"${positive[@]}\" | sort -n | head\
    \ -n 1)\")\n  else\n    result+=(\"None\")\n  fi\n  printf '[\"%s\", \"%s\"]'\
    \ \"${result[@]}\"", "    local -a list=($1)\n    local -a negative_list=()\n\
    \    local -a positive_list=()\n    local largest_negative=None\n    local smallest_positive=None\n\
    \n    for i in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n         \
    \   negative_list+=($i)\n        elif [[ $i -gt 0 ]]; then\n            positive_list+=($i)\n\
    \        fi\n    done\n\n    if [[ ${#negative_list[@]} -gt 0 ]]; then\n     \
    \   largest_negative=$(printf \"%s\\n\" \"${negative_list[@]}\" | sort -nr | head\
    \ -n 1)\n    fi\n\n    if [[ ${#positive_list[@]} -gt 0 ]]; then\n        smallest_positive=$(printf\
    \ \"%s\\n\" \"${positive_list[@]}\" | sort -n | head -n 1)\n    fi\n\n    echo\
    \ \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\"]\"", "    local -a\
    \ list=($1)\n    local -a negatives\n    local -a positives\n    local -a result\n\
    \n    for number in \"${list[@]}\"; do\n        if [[ $number -lt 0 ]]; then\n\
    \            negatives+=(\"$number\")\n        elif [[ $number -gt 0 ]]; then\n\
    \            positives+=(\"$number\")\n        fi\n    done\n\n    if [[ ${#negatives[@]}\
    \ -gt 0 ]]; then\n        result+=(\"$(printf '%s\\n' \"${negatives[@]}\" | sort\
    \ -n | tail -n 1)\")\n    else\n        result+=(\"None\")\n    fi\n\n    if [[\
    \ ${#positives[@]} -gt 0 ]]; then\n        result+=(\"$(printf '%s\\n' \"${positives[@]}\"\
    \ | sort -n | head -n 1)\")\n    else\n        result+=(\"None\")\n    fi\n\n\
    \    printf '[\"%s\", \"%s\"]' \"${result[@]}\"", "  local -a list=($1)\n  local\
    \ -i max=0\n  local -i min=0\n  local -i i=0\n  local -i len=${#list[@]}\n  local\
    \ -i is_negative=0\n  local -i is_positive=0\n  local -i is_zero=0\n  local -i\
    \ is_first=1\n  local -i is_first_negative=1\n  local -i is_first_positive=1\n\
    \  local -i is_first_zero=1\n  local -i is_first_negative_or_zero=1\n  local -i\
    \ is_first_positive_or_zero=1\n  local -i is_first_non_zero=1\n  local -i is_first_negative_or_positive=1\n\
    \  local -i is_first_negative_or_positive_or_zero=1\n  local -i is_first_non_negative=1\n\
    \  local -i is_first_non_positive=1\n  local -i is_first_non_negative_or_zero=1\n\
    \  local -i is_first_non_positive_or_zero=1\n  local -i is_first_non_negative_or_positive=1\n\
    \  local -i is_first_non_negative_or_positive_or_zero=1\n  local -i is_first_negative_or_positive_or_non_zero=1\n\
    \  local -i is_first_non_negative_or_positive_or_non_zero=1\n  local -i is_first_negative_or_positive_or_zero_or_non_zero=1\n\
    \  local -i is_first_non_negative_or_positive_or_zero_or_non_zero=1\n  local -i\
    \ is_first_negative_or_non_zero=1\n  local -i is_first_positive_or_non_zero=1\n\
    \  local -i is_first_non_negative_or_non_zero=1\n  local -i is_first_non_positive_or_non_zero=1\n\
    \  local -i is_first_negative_or_zero_or_non_zero=1\n  local -i", "    local -a\
    \ list=($1)\n    local largest_negative=None\n    local smallest_positive=None\n\
    \    for i in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n          \
    \  if [[ $largest_negative == None ]] || [[ $i -gt $largest_negative ]]; then\n\
    \                largest_negative=$i\n            fi\n        elif [[ $i -gt 0\
    \ ]]; then\n            if [[ $smallest_positive == None ]] || [[ $i -lt $smallest_positive\
    \ ]]; then\n                smallest_positive=$i\n            fi\n        fi\n\
    \    done\n    echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\"]\"",
  "  local -a list=($1)\n  local -a negatives\n  local -a positives\n  local -i i\n\
    \  local -i len=${#list[@]}\n  local -i largest_negative\n  local -i smallest_positive\n\
    \  local -i current_number\n\n  for ((i=0; i<len; i++)); do\n    current_number=${list[$i]}\n\
    \    if ((current_number < 0)); then\n      negatives+=($current_number)\n   \
    \ elif ((current_number > 0)); then\n      positives+=($current_number)\n    fi\n\
    \  done\n\n  if ((${#negatives[@]} > 0)); then\n    largest_negative=$(printf\
    \ \"%s\\n\" \"${negatives[@]}\" | sort -nr | head -n 1)\n  else\n    largest_negative=None\n\
    \  fi\n\n  if ((${#positives[@]} > 0)); then\n    smallest_positive=$(printf \"\
    %s\\n\" \"${positives[@]}\" | sort -n | head -n 1)\n  else\n    smallest_positive=None\n\
    \  fi\n\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\"]\"",
  "    local list=$1\n    local largest_negative=None\n    local smallest_positive=None\n\
    \    for i in $list; do\n        if [[ $i -lt 0 ]]; then\n            if [[ $largest_negative\
    \ == None ]] || [[ $i -gt $largest_negative ]]; then\n                largest_negative=$i\n\
    \            fi\n        elif [[ $i -gt 0 ]]; then\n            if [[ $smallest_positive\
    \ == None ]] || [[ $i -lt $smallest_positive ]]; then\n                smallest_positive=$i\n\
    \            fi\n        fi\n    done\n    echo \"[\\\"$largest_negative\\\",\
    \ \\\"$smallest_positive\\\"]\"", "  local -a list\n  local -a negative\n  local\
    \ -a positive\n  local -a result\n  list=($1)\n  for i in \"${list[@]}\"; do\n\
    \    if [[ $i -lt 0 ]]; then\n      negative+=(\"$i\")\n    elif [[ $i -gt 0 ]];\
    \ then\n      positive+=(\"$i\")\n    fi\n  done\n  if [[ ${#negative[@]} -eq\
    \ 0 ]]; then\n    result+=(\"None\")\n  else\n    result+=(\"$(printf \"%s\\n\"\
    \ \"${negative[@]}\" | sort -nr | head -n1)\")\n  fi\n  if [[ ${#positive[@]}\
    \ -eq 0 ]]; then\n    result+=(\"None\")\n  else\n    result+=(\"$(printf \"%s\\\
    n\" \"${positive[@]}\" | sort -n | head -n1)\")\n  fi\n  printf '\"%s\" ' \"${result[@]}\"",
  "  local -a list=($1)\n  local largest_negative_integer=None\n  local smallest_positive_integer=None\n\
    \  for i in \"${list[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      if [[ $largest_negative_integer\
    \ == None ]]; then\n        largest_negative_integer=$i\n      elif [[ $i -gt\
    \ $largest_negative_integer ]]; then\n        largest_negative_integer=$i\n  \
    \    fi\n    elif [[ $i -gt 0 ]]; then\n      if [[ $smallest_positive_integer\
    \ == None ]]; then\n        smallest_positive_integer=$i\n      elif [[ $i -lt\
    \ $smallest_positive_integer ]]; then\n        smallest_positive_integer=$i\n\
    \      fi\n    fi\n  done\n  echo \"[\\\"$largest_negative_integer\\\", \\\"$smallest_positive_integer\\\
    \"]\"", "    local a b\n    a=$(echo \"$1\" | tr ' ' '\\n' | grep -v '^[0-9]*$'\
    \ | sort -n | tail -n 1)\n    b=$(echo \"$1\" | tr ' ' '\\n' | grep -v '^[0-9]*$'\
    \ | sort -n | head -n 1)\n    echo \"[\\\"${a:-None}\\\", \\\"${b:-None}\\\"]\"",
  "  local -a list=($1)\n  local -a negative_list=()\n  local -a positive_list=()\n\
    \  local largest_negative=None\n  local smallest_positive=None\n\n  for i in \"\
    ${list[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      negative_list+=($i)\n   \
    \ elif [[ $i -gt 0 ]]; then\n      positive_list+=($i)\n    fi\n  done\n\n  if\
    \ [[ ${#negative_list[@]} -gt 0 ]]; then\n    largest_negative=${negative_list[0]}\n\
    \    for i in \"${negative_list[@]}\"; do\n      if [[ $i -gt $largest_negative\
    \ ]]; then\n        largest_negative=$i\n      fi\n    done\n  fi\n\n  if [[ ${#positive_list[@]}\
    \ -gt 0 ]]; then\n    smallest_positive=${positive_list[0]}\n    for i in \"${positive_list[@]}\"\
    ; do\n      if [[ $i -lt $smallest_positive ]]; then\n        smallest_positive=$i\n\
    \      fi\n    done\n  fi\n\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "    local -a arr=($1)\n    local -a neg_arr=()\n    local -a pos_arr=()\n\
    \    local -a res=()\n    local max_neg=0\n    local min_pos=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            neg_arr+=($i)\n\
    \        elif [[ $i -gt 0 ]]; then\n            pos_arr+=($i)\n        fi\n  \
    \  done\n    if [[ ${#neg_arr[@]} -eq 0 ]]; then\n        res+=(\"None\")\n  \
    \  else\n        max_neg=$(echo \"${neg_arr[@]}\" | tr ' ' '\\n' | sort -nr |\
    \ head -n 1)\n        res+=(\"$max_neg\")\n    fi\n    if [[ ${#pos_arr[@]} -eq\
    \ 0 ]]; then\n        res+=(\"None\")\n    else\n        min_pos=$(echo \"${pos_arr[@]}\"\
    \ | tr ' ' '\\n' | sort -n | head -n 1)\n        res+=(\"$min_pos\")\n    fi\n\
    \    echo \"${res[@]}\"", "    local -a arr=($1)\n    local -a neg_arr=()\n  \
    \  local -a pos_arr=()\n    local -a res=()\n    local i\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ $i -lt 0 ]]; then\n            neg_arr+=($i)\n        elif\
    \ [[ $i -gt 0 ]]; then\n            pos_arr+=($i)\n        fi\n    done\n    if\
    \ [[ ${#neg_arr[@]} -eq 0 ]]; then\n        res+=(None)\n    else\n        res+=($(printf\
    \ \"%s\\n\" \"${neg_arr[@]}\" | sort -nr | head -n 1))\n    fi\n    if [[ ${#pos_arr[@]}\
    \ -eq 0 ]]; then\n        res+=(None)\n    else\n        res+=($(printf \"%s\\\
    n\" \"${pos_arr[@]}\" | sort -n | head -n 1))\n    fi\n    echo \"${res[@]}\"",
  "    local -a list=($1)\n    local a=None\n    local b=None\n    for i in \"${list[@]}\"\
    ; do\n        if [[ $i -lt 0 ]]; then\n            if [[ $a == None ]] || [[ $i\
    \ -gt $a ]]; then\n                a=$i\n            fi\n        elif [[ $i -gt\
    \ 0 ]]; then\n            if [[ $b == None ]] || [[ $i -lt $b ]]; then\n     \
    \           b=$i\n            fi\n        fi\n    done\n    echo \"[\\\"$a\\\"\
    , \\\"$b\\\"]\"", "    local -a list=($1)\n    local -a negative_list=()\n   \
    \ local -a positive_list=()\n    local largest_negative=None\n    local smallest_positive=None\n\
    \n    for i in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n         \
    \   negative_list+=($i)\n        elif [[ $i -gt 0 ]]; then\n            positive_list+=($i)\n\
    \        fi\n    done\n\n    if [[ ${#negative_list[@]} -gt 0 ]]; then\n     \
    \   largest_negative=$(printf \"%s\\n\" \"${negative_list[@]}\" | sort -nr | head\
    \ -n 1)\n    fi\n\n    if [[ ${#positive_list[@]} -gt 0 ]]; then\n        smallest_positive=$(printf\
    \ \"%s\\n\" \"${positive_list[@]}\" | sort -n | head -n 1)\n    fi\n\n    echo\
    \ \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\"]\"", "  local list=$1\n\
    \  local largest_negative=None\n  local smallest_positive=None\n  for i in $list;\
    \ do\n    if [ $i -lt 0 ]; then\n      if [ $largest_negative = None ] || [ $i\
    \ -gt $largest_negative ]; then\n        largest_negative=$i\n      fi\n    elif\
    \ [ $i -gt 0 ]; then\n      if [ $smallest_positive = None ] || [ $i -lt $smallest_positive\
    \ ]; then\n        smallest_positive=$i\n      fi\n    fi\n  done\n  echo \"[\\\
    \"$largest_negative\\\", \\\"$smallest_positive\\\"]\"", "  local -a list=($1)\n\
    \  local -a negatives\n  local -a positives\n  local -a result\n  local i\n  for\
    \ i in \"${list[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      negatives+=($i)\n\
    \    elif [[ $i -gt 0 ]]; then\n      positives+=($i)\n    fi\n  done\n  if [[\
    \ ${#negatives[@]} -eq 0 ]]; then\n    result+=(None)\n  else\n    result+=($(printf\
    \ \"%s\\n\" \"${negatives[@]}\" | sort -nr | head -n 1))\n  fi\n  if [[ ${#positives[@]}\
    \ -eq 0 ]]; then\n    result+=(None)\n  else\n    result+=($(printf \"%s\\n\"\
    \ \"${positives[@]}\" | sort -n | head -n 1))\n  fi\n  echo \"${result[@]}\"",
  "  local -a list=($1)\n  local largest_negative=None\n  local smallest_positive=None\n\
    \  for i in \"${list[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      if [[ $largest_negative\
    \ = None ]] || [[ $i -gt $largest_negative ]]; then\n        largest_negative=$i\n\
    \      fi\n    elif [[ $i -gt 0 ]]; then\n      if [[ $smallest_positive = None\
    \ ]] || [[ $i -lt $smallest_positive ]]; then\n        smallest_positive=$i\n\
    \      fi\n    fi\n  done\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "    local list=$1\n    local largest_negative=None\n    local smallest_positive=None\n\
    \    for i in $list; do\n        if [[ $i -lt 0 ]]; then\n            if [[ $largest_negative\
    \ == None ]] || [[ $i -gt $largest_negative ]]; then\n                largest_negative=$i\n\
    \            fi\n        elif [[ $i -gt 0 ]]; then\n            if [[ $smallest_positive\
    \ == None ]] || [[ $i -lt $smallest_positive ]]; then\n                smallest_positive=$i\n\
    \            fi\n        fi\n    done\n    echo \"[\\\"$largest_negative\\\",\
    \ \\\"$smallest_positive\\\"]\"", "  local -a list=($1)\n  local -a negatives\n\
    \  local -a positives\n  local -a result\n\n  for i in \"${list[@]}\"; do\n  \
    \  if [[ $i -lt 0 ]]; then\n      negatives+=($i)\n    elif [[ $i -gt 0 ]]; then\n\
    \      positives+=($i)\n    fi\n  done\n\n  if [[ ${#negatives[@]} -gt 0 ]]; then\n\
    \    result+=($(printf '\"%s\"' \"${negatives[@]}\" | sort -nr | head -n 1))\n\
    \  else\n    result+=('\"None\"')\n  fi\n\n  if [[ ${#positives[@]} -gt 0 ]];\
    \ then\n    result+=($(printf '\"%s\"' \"${positives[@]}\" | sort -n | head -n\
    \ 1))\n  else\n    result+=('\"None\"')\n  fi\n\n  echo \"${result[@]}\"", " \
    \   local -a list=($1)\n    local -a neg_list=()\n    local -a pos_list=()\n \
    \   local -a result=()\n    local largest_neg=None\n    local smallest_pos=None\n\
    \n    for i in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n         \
    \   neg_list+=($i)\n        elif [[ $i -gt 0 ]]; then\n            pos_list+=($i)\n\
    \        fi\n    done\n\n    if [[ ${#neg_list[@]} -ne 0 ]]; then\n        largest_neg=$(printf\
    \ \"%s\\n\" \"${neg_list[@]}\" | sort -nr | head -n1)\n    fi\n\n    if [[ ${#pos_list[@]}\
    \ -ne 0 ]]; then\n        smallest_pos=$(printf \"%s\\n\" \"${pos_list[@]}\" |\
    \ sort -n | head -n1)\n    fi\n\n    result+=(\"$largest_neg\")\n    result+=(\"\
    $smallest_pos\")\n\n    echo \"${result[@]}\"", "  local -a a=($1)\n  local max_neg=0\n\
    \  local min_pos=0\n  local i=0\n  for ((i=0; i<${#a[@]}; i++)); do\n    if [[\
    \ ${a[$i]} -lt 0 ]]; then\n      if [[ ${a[$i]} -gt $max_neg ]]; then\n      \
    \  max_neg=${a[$i]}\n      fi\n    elif [[ ${a[$i]} -gt 0 ]]; then\n      if [[\
    \ $min_pos -eq 0 ]]; then\n        min_pos=${a[$i]}\n      elif [[ ${a[$i]} -lt\
    \ $min_pos ]]; then\n        min_pos=${a[$i]}\n      fi\n    fi\n  done\n  if\
    \ [[ $max_neg -eq 0 ]]; then\n    max_neg=None\n  fi\n  if [[ $min_pos -eq 0 ]];\
    \ then\n    min_pos=None\n  fi\n  echo \"[\\\"$max_neg\\\", \\\"$min_pos\\\"]\"",
  "  local -a list=($1)\n  local -i a=0\n  local -i b=0\n  local -i i=0\n  local -i\
    \ len=${#list[@]}\n  local -i flag=0\n  local -i flag2=0\n  local -i max=0\n \
    \ local -i min=0\n  for ((i=0; i<len; i++)); do\n    if [[ ${list[i]} -lt 0 ]];\
    \ then\n      if [[ ${list[i]} -gt $a ]]; then\n        a=${list[i]}\n      fi\n\
    \      flag=1\n    elif [[ ${list[i]} -gt 0 ]]; then\n      if [[ $flag2 -eq 0\
    \ ]]; then\n        b=${list[i]}\n        flag2=1\n      elif [[ ${list[i]} -lt\
    \ $b ]]; then\n        b=${list[i]}\n      fi\n    fi\n  done\n  if [[ $flag -eq\
    \ 0 ]]; then\n    a=\"None\"\n  fi\n  if [[ $flag2 -eq 0 ]]; then\n    b=\"None\"\
    \n  fi\n  echo \"[\\\"$a\\\", \\\"$b\\\"]\"", "  local -a list=($1)\n  local -a\
    \ negatives\n  local -a positives\n  local largest_negative\n  local smallest_positive\n\
    \  for i in \"${list[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      negatives+=($i)\n\
    \    elif [[ $i -gt 0 ]]; then\n      positives+=($i)\n    fi\n  done\n  if [[\
    \ ${#negatives[@]} -gt 0 ]]; then\n    largest_negative=$(echo \"${negatives[@]}\"\
    \ | tr ' ' '\\n' | sort -nr | head -n 1)\n  else\n    largest_negative=\"None\"\
    \n  fi\n  if [[ ${#positives[@]} -gt 0 ]]; then\n    smallest_positive=$(echo\
    \ \"${positives[@]}\" | tr ' ' '\\n' | sort -n | head -n 1)\n  else\n    smallest_positive=\"\
    None\"\n  fi\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\"\
    ]\"", "    local -a list=($1)\n    local -a negative_list=()\n    local -a positive_list=()\n\
    \    local largest_negative_integer=None\n    local smallest_positive_integer=None\n\
    \n    for i in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n         \
    \   negative_list+=($i)\n        elif [[ $i -gt 0 ]]; then\n            positive_list+=($i)\n\
    \        fi\n    done\n\n    if [[ ${#negative_list[@]} -gt 0 ]]; then\n     \
    \   largest_negative_integer=$(printf \"%s\\n\" \"${negative_list[@]}\" | sort\
    \ -nr | head -n 1)\n    fi\n\n    if [[ ${#positive_list[@]} -gt 0 ]]; then\n\
    \        smallest_positive_integer=$(printf \"%s\\n\" \"${positive_list[@]}\"\
    \ | sort -n | head -n 1)\n    fi\n\n    echo \"[\\\"$largest_negative_integer\\\
    \", \\\"$smallest_positive_integer\\\"]\"", "    local -a list=($1)\n    local\
    \ largest_negative=None\n    local smallest_positive=None\n    for i in \"${list[@]}\"\
    ; do\n        if [[ $i -lt 0 ]]; then\n            if [[ $largest_negative ==\
    \ None ]] || [[ $i -gt $largest_negative ]]; then\n                largest_negative=$i\n\
    \            fi\n        elif [[ $i -gt 0 ]]; then\n            if [[ $smallest_positive\
    \ == None ]] || [[ $i -lt $smallest_positive ]]; then\n                smallest_positive=$i\n\
    \            fi\n        fi\n    done\n    echo \"[\\\"$largest_negative\\\",\
    \ \\\"$smallest_positive\\\"]\"", "    local -a list=($1)\n    local -a negatives\n\
    \    local -a positives\n    local -a result\n    for i in \"${list[@]}\"; do\n\
    \        if [[ $i -lt 0 ]]; then\n            negatives+=(\"$i\")\n        elif\
    \ [[ $i -gt 0 ]]; then\n            positives+=(\"$i\")\n        fi\n    done\n\
    \    if [[ ${#negatives[@]} -eq 0 ]]; then\n        result+=(\"None\")\n    else\n\
    \        result+=(\"$(printf \"%s\\n\" \"${negatives[@]}\" | sort -n | tail -n\
    \ 1)\")\n    fi\n    if [[ ${#positives[@]} -eq 0 ]]; then\n        result+=(\"\
    None\")\n    else\n        result+=(\"$(printf \"%s\\n\" \"${positives[@]}\" |\
    \ sort -n | head -n 1)\")\n    fi\n    echo \"${result[@]}\"", "    local -a list=($1)\n\
    \    local -a negative_list=()\n    local -a positive_list=()\n    local largest_negative=None\n\
    \    local smallest_positive=None\n\n    for i in \"${list[@]}\"; do\n       \
    \ if [[ $i -lt 0 ]]; then\n            negative_list+=($i)\n        elif [[ $i\
    \ -gt 0 ]]; then\n            positive_list+=($i)\n        fi\n    done\n\n  \
    \  if [[ ${#negative_list[@]} -gt 0 ]]; then\n        largest_negative=$(printf\
    \ \"%s\\n\" \"${negative_list[@]}\" | sort -nr | head -n 1)\n    fi\n\n    if\
    \ [[ ${#positive_list[@]} -gt 0 ]]; then\n        smallest_positive=$(printf \"\
    %s\\n\" \"${positive_list[@]}\" | sort -n | head -n 1)\n    fi\n\n    echo \"\
    [\\\"$largest_negative\\\", \\\"$smallest_positive\\\"]\"", "  local -a arr=()\n\
    \  local -a neg=()\n  local -a pos=()\n  local -a res=()\n  local i\n  local n\n\
    \  local p\n  local s\n  IFS=' ' read -r -a arr <<< \"$1\"\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -lt 0 ]]; then\n      neg+=(\"$i\")\n    elif [[ $i -gt 0 ]];\
    \ then\n      pos+=(\"$i\")\n    fi\n  done\n  if [[ ${#neg[@]} -eq 0 ]]; then\n\
    \    n=\"None\"\n  else\n    n=$(printf '%s\\n' \"${neg[@]}\" | sort -nr | head\
    \ -n1)\n  fi\n  if [[ ${#pos[@]} -eq 0 ]]; then\n    p=\"None\"\n  else\n    p=$(printf\
    \ '%s\\n' \"${pos[@]}\" | sort -n | head -n1)\n  fi\n  res+=(\"$n\")\n  res+=(\"\
    $p\")\n  s=$(printf '\"%s\" ' \"${res[@]}\")\n  echo \"[${s% }]\"", "  local largest_negative=None\n\
    \  local smallest_positive=None\n  for i in $1; do\n    if [[ $i -lt 0 ]]; then\n\
    \      if [[ $largest_negative = None ]] || [[ $i -gt $largest_negative ]]; then\n\
    \        largest_negative=$i\n      fi\n    elif [[ $i -gt 0 ]]; then\n      if\
    \ [[ $smallest_positive = None ]] || [[ $i -lt $smallest_positive ]]; then\n \
    \       smallest_positive=$i\n      fi\n    fi\n  done\n  echo \"[\\\"$largest_negative\\\
    \", \\\"$smallest_positive\\\"]\"", "    local -a list=($1)\n    local largest_negative=None\n\
    \    local smallest_positive=None\n    for i in \"${list[@]}\"; do\n        if\
    \ [[ $i -lt 0 ]]; then\n            if [[ $largest_negative == None ]] || [[ $i\
    \ -gt $largest_negative ]]; then\n                largest_negative=$i\n      \
    \      fi\n        elif [[ $i -gt 0 ]]; then\n            if [[ $smallest_positive\
    \ == None ]] || [[ $i -lt $smallest_positive ]]; then\n                smallest_positive=$i\n\
    \            fi\n        fi\n    done\n    echo \"[\\\"$largest_negative\\\",\
    \ \\\"$smallest_positive\\\"]\"", "    local -a array=($1)\n    local -i i\n \
    \   local -i min=0\n    local -i max=0\n    local -i flag=0\n    for ((i=0; i<${#array[@]};\
    \ i++)); do\n        if [[ ${array[$i]} -lt 0 ]]; then\n            if [[ ${array[$i]}\
    \ -gt $max ]]; then\n                max=${array[$i]}\n            fi\n      \
    \      flag=1\n        elif [[ ${array[$i]} -gt 0 ]]; then\n            if [[\
    \ $flag -eq 0 ]]; then\n                min=${array[$i]}\n            elif [[\
    \ ${array[$i]} -lt $min ]]; then\n                min=${array[$i]}\n         \
    \   fi\n        fi\n    done\n    if [[ $flag -eq 0 ]]; then\n        echo \"\
    [\\\"None\\\", \\\"None\\\"]\"\n    else\n        echo \"[\\\"$max\\\", \\\"$min\\\
    \"]\"\n    fi", "  local -a list=($1)\n  local -i a=0\n  local -i b=0\n  local\
    \ -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local\
    \ -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local\
    \ -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local\
    \ -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n \
    \ local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n \
    \ local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i\
    \ pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n \
    \ local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i\
    \ yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n\
    \  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local\
    \ -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n\
    \  local -i mmm=0\n", "    local list=$1\n    local largest_negative=None\n  \
    \  local smallest_positive=None\n    for i in $list; do\n        if [[ $i -lt\
    \ 0 ]]; then\n            if [[ $largest_negative == None ]] || [[ $i -gt $largest_negative\
    \ ]]; then\n                largest_negative=$i\n            fi\n        elif\
    \ [[ $i -gt 0 ]]; then\n            if [[ $smallest_positive == None ]] || [[\
    \ $i -lt $smallest_positive ]]; then\n                smallest_positive=$i\n \
    \           fi\n        fi\n    done\n    echo \"[\\\"$largest_negative\\\", \\\
    \"$smallest_positive\\\"]\"", "    local -a list=($1)\n    local -a negatives\n\
    \    local -a positives\n    local -a result=(\"None\" \"None\")\n\n    for i\
    \ in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            negatives+=($i)\n\
    \        elif [[ $i -gt 0 ]]; then\n            positives+=($i)\n        fi\n\
    \    done\n\n    if [[ ${#negatives[@]} -gt 0 ]]; then\n        result[0]=$(printf\
    \ \"%s\\n\" \"${negatives[@]}\" | sort -nr | head -n 1)\n    fi\n\n    if [[ ${#positives[@]}\
    \ -gt 0 ]]; then\n        result[1]=$(printf \"%s\\n\" \"${positives[@]}\" | sort\
    \ -n | head -n 1)\n    fi\n\n    echo \"${result[@]}\"", "  local -a list=($1)\n\
    \  local -a negative_list=()\n  local -a positive_list=()\n  local largest_negative=None\n\
    \  local smallest_positive=None\n\n  for i in \"${list[@]}\"; do\n    if [[ $i\
    \ -lt 0 ]]; then\n      negative_list+=($i)\n    elif [[ $i -gt 0 ]]; then\n \
    \     positive_list+=($i)\n    fi\n  done\n\n  if [[ ${#negative_list[@]} -gt\
    \ 0 ]]; then\n    largest_negative=$(printf \"%s\\n\" \"${negative_list[@]}\"\
    \ | sort -nr | head -n 1)\n  fi\n\n  if [[ ${#positive_list[@]} -gt 0 ]]; then\n\
    \    smallest_positive=$(printf \"%s\\n\" \"${positive_list[@]}\" | sort -n |\
    \ head -n 1)\n  fi\n\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "    local -a list=($1)\n    local -a negative_list=()\n    local -a positive_list=()\n\
    \    local largest_negative_integer=None\n    local smallest_positive_integer=None\n\
    \n    for i in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n         \
    \   negative_list+=($i)\n        elif [[ $i -gt 0 ]]; then\n            positive_list+=($i)\n\
    \        fi\n    done\n\n    if [[ ${#negative_list[@]} -gt 0 ]]; then\n     \
    \   largest_negative_integer=$(printf \"%s\\n\" \"${negative_list[@]}\" | sort\
    \ -nr | head -n 1)\n    fi\n\n    if [[ ${#positive_list[@]} -gt 0 ]]; then\n\
    \        smallest_positive_integer=$(printf \"%s\\n\" \"${positive_list[@]}\"\
    \ | sort -n | head -n 1)\n    fi\n\n    echo \"[\\\"$largest_negative_integer\\\
    \", \\\"$smallest_positive_integer\\\"]\"", "    local -a a=($1)\n    local -i\
    \ i\n    local -i max_neg=0\n    local -i min_pos=0\n    local -i n=${#a[@]}\n\
    \    local -i found_neg=0\n    local -i found_pos=0\n    for ((i=0; i<n; i++));\
    \ do\n        if [[ ${a[i]} -lt 0 ]]; then\n            if [[ ${a[i]} -gt $max_neg\
    \ ]]; then\n                max_neg=${a[i]}\n            fi\n            found_neg=1\n\
    \        elif [[ ${a[i]} -gt 0 ]]; then\n            if [[ $found_pos -eq 0 ]];\
    \ then\n                min_pos=${a[i]}\n            elif [[ ${a[i]} -lt $min_pos\
    \ ]]; then\n                min_pos=${a[i]}\n            fi\n            found_pos=1\n\
    \        fi\n    done\n    if [[ $found_neg -eq 0 ]]; then\n        max_neg=None\n\
    \    fi\n    if [[ $found_pos -eq 0 ]]; then\n        min_pos=None\n    fi\n \
    \   echo \"[\\\"$max_neg\\\", \\\"$min_pos\\\"]\"", "    local -a negative_integers\n\
    \    local -a positive_integers\n    local -a list=($1)\n    local -i i\n    local\
    \ -i len=${#list[@]}\n    local -i largest_negative\n    local -i smallest_positive\n\
    \    local -i number\n\n    for ((i=0; i<len; i++)); do\n        number=${list[$i]}\n\
    \        if [[ $number -lt 0 ]]; then\n            negative_integers+=($number)\n\
    \        elif [[ $number -gt 0 ]]; then\n            positive_integers+=($number)\n\
    \        fi\n    done\n\n    if [[ ${#negative_integers[@]} -eq 0 ]]; then\n \
    \       largest_negative=\"None\"\n    else\n        largest_negative=$(printf\
    \ \"%s\\n\" \"${negative_integers[@]}\" | sort -n | tail -n 1)\n    fi\n\n   \
    \ if [[ ${#positive_integers[@]} -eq 0 ]]; then\n        smallest_positive=\"\
    None\"\n    else\n        smallest_positive=$(printf \"%s\\n\" \"${positive_integers[@]}\"\
    \ | sort -n | head -n 1)\n    fi\n\n    printf \"[\\\"%s\\\", \\\"%s\\\"]\" \"\
    $largest_negative\" \"$smallest_positive\"", "    local -a list=($1)\n    local\
    \ -a negatives\n    local -a positives\n    local -a result=(\"None\" \"None\"\
    )\n\n    for i in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n      \
    \      negatives+=(\"$i\")\n        elif [[ $i -gt 0 ]]; then\n            positives+=(\"\
    $i\")\n        fi\n    done\n\n    if [[ ${#negatives[@]} -gt 0 ]]; then\n   \
    \     result[0]=\"$(printf '%s\\n' \"${negatives[@]}\" | sort -nr | head -n 1)\"\
    \n    fi\n\n    if [[ ${#positives[@]} -gt 0 ]]; then\n        result[1]=\"$(printf\
    \ '%s\\n' \"${positives[@]}\" | sort -n | head -n 1)\"\n    fi\n\n    echo \"\
    ${result[@]}\"", "  local -a a\n  local -a b\n  local -a c\n  local -a d\n  local\
    \ -a e\n  local -a f\n  local -a g\n  local -a h\n  local -a i\n  local -a j\n\
    \  local -a k\n  local -a l\n  local -a m\n  local -a n\n  local -a o\n  local\
    \ -a p\n  local -a q\n  local -a r\n  local -a s\n  local -a t\n  local -a u\n\
    \  local -a v\n  local -a w\n  local -a x\n  local -a y\n  local -a z\n  local\
    \ -a aa\n  local -a ab\n  local -a ac\n  local -a ad\n  local -a ae\n  local -a\
    \ af\n  local -a ag\n  local -a ah\n  local -a ai\n  local -a aj\n  local -a ak\n\
    \  local -a al\n  local -a am\n  local -a an\n  local -a ao\n  local -a ap\n \
    \ local -a aq\n  local -a ar\n  local -a as\n  local -a at\n  local -a au\n  local\
    \ -a av\n  local -a aw\n  local -a ax\n  local -a ay\n  local -a az\n  local -a\
    \ ba\n  local -a bb\n  local -a bc\n  local -a bd\n  local -a be\n  local -a bf\n\
    \  local -a bg\n  local -a bh\n  local -a bi\n  local -a bj\n  local -a bk\n \
    \ local -a bl\n  local -a bm\n  local -a bn\n  local -a bo\n  local -a bp\n  local\
    \ -a bq\n  local -a br\n  local -a bs\n  local -a bt\n  local -a bu\n  local -a\
    \ bv\n  local -a bw\n  local -a bx\n  local -a by\n  local -a bz\n  local -a ca\n\
    \  local -a cb\n  local -a cc\n ", "  local list=$1\n  local largest_negative=None\n\
    \  local smallest_positive=None\n  for i in $list; do\n    if [[ $i -lt 0 ]];\
    \ then\n      if [[ $largest_negative == None ]] || [[ $i -gt $largest_negative\
    \ ]]; then\n        largest_negative=$i\n      fi\n    elif [[ $i -gt 0 ]]; then\n\
    \      if [[ $smallest_positive == None ]] || [[ $i -lt $smallest_positive ]];\
    \ then\n        smallest_positive=$i\n      fi\n    fi\n  done\n  echo \"[\\\"\
    $largest_negative\\\", \\\"$smallest_positive\\\"]\"", "  local list=$1\n  local\
    \ largest_negative=None\n  local smallest_positive=None\n  for i in $list; do\n\
    \    if [[ $i -lt 0 ]]; then\n      if [[ $largest_negative == None ]] || [[ $i\
    \ -gt $largest_negative ]]; then\n        largest_negative=$i\n      fi\n    elif\
    \ [[ $i -gt 0 ]]; then\n      if [[ $smallest_positive == None ]] || [[ $i -lt\
    \ $smallest_positive ]]; then\n        smallest_positive=$i\n      fi\n    fi\n\
    \  done\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\"]\"",
  "    local -a arr=($1)\n    local -a neg_arr=()\n    local -a pos_arr=()\n    local\
    \ -a res=()\n    local max_neg=0\n    local min_pos=0\n    local i=0\n    local\
    \ len=${#arr[@]}\n    for ((i=0; i<len; i++)); do\n        if [[ ${arr[$i]} -lt\
    \ 0 ]]; then\n            neg_arr+=(${arr[$i]})\n        else\n            pos_arr+=(${arr[$i]})\n\
    \        fi\n    done\n    if [[ ${#neg_arr[@]} -gt 0 ]]; then\n        max_neg=${neg_arr[0]}\n\
    \        for ((i=1; i<${#neg_arr[@]}; i++)); do\n            if [[ ${neg_arr[$i]}\
    \ -gt $max_neg ]]; then\n                max_neg=${neg_arr[$i]}\n            fi\n\
    \        done\n    fi\n    if [[ ${#pos_arr[@]} -gt 0 ]]; then\n        min_pos=${pos_arr[0]}\n\
    \        for ((i=1; i<${#pos_arr[@]}; i++)); do\n            if [[ ${pos_arr[$i]}\
    \ -lt $min_pos ]]; then\n                min_pos=${pos_arr[$i]}\n            fi\n\
    \        done\n    fi\n    if [[ $max_neg -eq 0 ]]; then\n        res+=(\"None\"\
    )\n    else\n        res+=(\"$max_neg\")\n    fi\n    if [[ $min_pos -eq 0 ]];\
    \ then\n        res+=(\"None\")\n    else\n        res+=(\"$min_pos\")\n    fi\n\
    \    echo \"${res[@]}\"", "    local -a list=($1)\n    local largest_negative=None\n\
    \    local smallest_positive=None\n    for i in \"${list[@]}\"; do\n        if\
    \ [[ $i -lt 0 ]]; then\n            if [[ $largest_negative == None ]] || [[ $i\
    \ -gt $largest_negative ]]; then\n                largest_negative=$i\n      \
    \      fi\n        elif [[ $i -gt 0 ]]; then\n            if [[ $smallest_positive\
    \ == None ]] || [[ $i -lt $smallest_positive ]]; then\n                smallest_positive=$i\n\
    \            fi\n        fi\n    done\n    echo \"[\\\"$largest_negative\\\",\
    \ \\\"$smallest_positive\\\"]\"", "  local -a list=($1)\n  local -a negative_integers=()\n\
    \  local -a positive_integers=()\n  local -a result=()\n  for i in \"${list[@]}\"\
    ; do\n    if (( i < 0 )); then\n      negative_integers+=($i)\n    elif (( i >\
    \ 0 )); then\n      positive_integers+=($i)\n    fi\n  done\n  if [[ ${#negative_integers[@]}\
    \ -eq 0 ]]; then\n    result+=(None)\n  else\n    result+=($(printf \"%s\\n\"\
    \ \"${negative_integers[@]}\" | sort -nr | head -n 1))\n  fi\n  if [[ ${#positive_integers[@]}\
    \ -eq 0 ]]; then\n    result+=(None)\n  else\n    result+=($(printf \"%s\\n\"\
    \ \"${positive_integers[@]}\" | sort -n | head -n 1))\n  fi\n  echo \"${result[@]}\"",
  "    local -a list=($1)\n    local -a negative_integers=()\n    local -a positive_integers=()\n\
    \    for i in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n          \
    \  negative_integers+=($i)\n        elif [[ $i -gt 0 ]]; then\n            positive_integers+=($i)\n\
    \        fi\n    done\n    local largest_negative_integer=$(echo \"${negative_integers[@]}\"\
    \ | tr ' ' '\\n' | sort -rn | head -n 1)\n    local smallest_positive_integer=$(echo\
    \ \"${positive_integers[@]}\" | tr ' ' '\\n' | sort -n | head -n 1)\n    if [[\
    \ -z $largest_negative_integer ]]; then\n        largest_negative_integer=\"None\"\
    \n    fi\n    if [[ -z $smallest_positive_integer ]]; then\n        smallest_positive_integer=\"\
    None\"\n    fi\n    echo \"[\\\"$largest_negative_integer\\\", \\\"$smallest_positive_integer\\\
    \"]\"", "  local -a list=($1)\n  local -a negative\n  local -a positive\n  local\
    \ i\n  for i in \"${list[@]}\"; do\n    if (( i < 0 )); then\n      negative+=(\"\
    $i\")\n    elif (( i > 0 )); then\n      positive+=(\"$i\")\n    fi\n  done\n\
    \  if (( ${#negative[@]} == 0 )); then\n    negative=(\"None\")\n  else\n    negative=($(printf\
    \ \"%s\\n\" \"${negative[@]}\" | sort -nr | head -n1))\n  fi\n  if (( ${#positive[@]}\
    \ == 0 )); then\n    positive=(\"None\")\n  else\n    positive=($(printf \"%s\\\
    n\" \"${positive[@]}\" | sort -n | head -n1))\n  fi\n  printf '[\"%s\", \"%s\"\
    ]' \"${negative[0]}\" \"${positive[0]}\"", "    local -a list=($1)\n    local\
    \ max_neg=0\n    local min_pos=0\n    local i=0\n    local len=${#list[@]}\n \
    \   local found_neg=0\n    local found_pos=0\n\n    for ((i=0; i<len; i++)); do\n\
    \        if [[ ${list[$i]} -lt 0 ]]; then\n            if [[ ${list[$i]} -gt $max_neg\
    \ ]]; then\n                max_neg=${list[$i]}\n            fi\n            found_neg=1\n\
    \        elif [[ ${list[$i]} -gt 0 ]]; then\n            if [[ $found_pos -eq\
    \ 0 ]]; then\n                min_pos=${list[$i]}\n            elif [[ ${list[$i]}\
    \ -lt $min_pos ]]; then\n                min_pos=${list[$i]}\n            fi\n\
    \            found_pos=1\n        fi\n    done\n\n    if [[ $found_neg -eq 0 ]];\
    \ then\n        max_neg=\"None\"\n    fi\n    if [[ $found_pos -eq 0 ]]; then\n\
    \        min_pos=\"None\"\n    fi\n\n    echo \"[\\\"$max_neg\\\", \\\"$min_pos\\\
    \"]\"", "    local a b\n    a=$(echo \"$1\" | tr \" \" \"\\n\" | grep -v \"^[0-9]*$\"\
    \ | sort -nr | head -n 1)\n    b=$(echo \"$1\" | tr \" \" \"\\n\" | grep -v \"\
    ^[0-9]*$\" | sort -n | head -n 1)\n    echo \"[\\\"${a:-None}\\\", \\\"${b:-None}\\\
    \"]\"", "    local list=$1\n    local largest_negative=None\n    local smallest_positive=None\n\
    \    for i in $list; do\n        if [[ $i -lt 0 ]]; then\n            if [[ $largest_negative\
    \ == None ]] || [[ $i -gt $largest_negative ]]; then\n                largest_negative=$i\n\
    \            fi\n        elif [[ $i -gt 0 ]]; then\n            if [[ $smallest_positive\
    \ == None ]] || [[ $i -lt $smallest_positive ]]; then\n                smallest_positive=$i\n\
    \            fi\n        fi\n    done\n    echo \"[\\\"$largest_negative\\\",\
    \ \\\"$smallest_positive\\\"]\"", "  local list=$1\n  local largest_negative=None\n\
    \  local smallest_positive=None\n  for i in $list; do\n    if [[ $i -lt 0 ]];\
    \ then\n      if [[ $largest_negative == None ]] || [[ $i -gt $largest_negative\
    \ ]]; then\n        largest_negative=$i\n      fi\n    elif [[ $i -gt 0 ]]; then\n\
    \      if [[ $smallest_positive == None ]] || [[ $i -lt $smallest_positive ]];\
    \ then\n        smallest_positive=$i\n      fi\n    fi\n  done\n  echo \"[\\\"\
    $largest_negative\\\", \\\"$smallest_positive\\\"]\"", "    local -a list=($1)\n\
    \    local largest_negative=None\n    local smallest_positive=None\n    for i\
    \ in \"${list[@]}\"; do\n        if [ $i -lt 0 ] && [ $i -gt $largest_negative\
    \ ]; then\n            largest_negative=$i\n        elif [ $i -gt 0 ] && [ $i\
    \ -lt $smallest_positive ]; then\n            smallest_positive=$i\n        fi\n\
    \    done\n    echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\"]\"",
  "  local -a list=($1)\n  local -a negative_list=()\n  local -a positive_list=()\n\
    \  local -a result=()\n  local max_negative=0\n  local min_positive=0\n  for i\
    \ in \"${list[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      negative_list+=($i)\n\
    \    elif [[ $i -gt 0 ]]; then\n      positive_list+=($i)\n    fi\n  done\n  if\
    \ [[ ${#negative_list[@]} -eq 0 ]]; then\n    result+=(\"None\")\n  else\n   \
    \ max_negative=$(printf \"%s\\n\" \"${negative_list[@]}\" | sort -nr | head -n1)\n\
    \    result+=(\"$max_negative\")\n  fi\n  if [[ ${#positive_list[@]} -eq 0 ]];\
    \ then\n    result+=(\"None\")\n  else\n    min_positive=$(printf \"%s\\n\" \"\
    ${positive_list[@]}\" | sort -n | head -n1)\n    result+=(\"$min_positive\")\n\
    \  fi\n  echo \"${result[@]}\"", "  local -a list=($1)\n  local max_neg=0\n  local\
    \ min_pos=0\n  local i=0\n  local len=${#list[@]}\n  local is_neg=0\n  local is_pos=0\n\
    \  for ((i=0; i<len; i++)); do\n    if [[ ${list[$i]} -lt 0 ]]; then\n      if\
    \ [[ ${list[$i]} -gt $max_neg ]]; then\n        max_neg=${list[$i]}\n      fi\n\
    \      is_neg=1\n    elif [[ ${list[$i]} -gt 0 ]]; then\n      if [[ $is_pos -eq\
    \ 0 ]]; then\n        min_pos=${list[$i]}\n      elif [[ ${list[$i]} -lt $min_pos\
    \ ]]; then\n        min_pos=${list[$i]}\n      fi\n      is_pos=1\n    fi\n  done\n\
    \  if [[ $is_neg -eq 0 ]]; then\n    max_neg=\"None\"\n  fi\n  if [[ $is_pos -eq\
    \ 0 ]]; then\n    min_pos=\"None\"\n  fi\n  echo \"[\\\"$max_neg\\\", \\\"$min_pos\\\
    \"]\"", "    local -a list=($1)\n    local -a negatives\n    local -a positives\n\
    \    local -a result\n    for i in \"${list[@]}\"; do\n        if (( i < 0 ));\
    \ then\n            negatives+=($i)\n        elif (( i > 0 )); then\n        \
    \    positives+=($i)\n        fi\n    done\n    if [[ ${#negatives[@]} -eq 0 ]];\
    \ then\n        result+=(None)\n    else\n        result+=($(printf \"%s\\n\"\
    \ \"${negatives[@]}\" | sort -nr | head -n 1))\n    fi\n    if [[ ${#positives[@]}\
    \ -eq 0 ]]; then\n        result+=(None)\n    else\n        result+=($(printf\
    \ \"%s\\n\" \"${positives[@]}\" | sort -n | head -n 1))\n    fi\n    echo \"${result[@]}\"",
  "    local list=$1\n    local largest_negative=None\n    local smallest_positive=None\n\
    \    for i in $list; do\n        if [[ $i -lt 0 ]]; then\n            if [[ $largest_negative\
    \ == None ]] || [[ $i -gt $largest_negative ]]; then\n                largest_negative=$i\n\
    \            fi\n        elif [[ $i -gt 0 ]]; then\n            if [[ $smallest_positive\
    \ == None ]] || [[ $i -lt $smallest_positive ]]; then\n                smallest_positive=$i\n\
    \            fi\n        fi\n    done\n    echo \"[\\\"$largest_negative\\\",\
    \ \\\"$smallest_positive\\\"]\"", "    local -a list=($1)\n    local largest_negative=None\n\
    \    local smallest_positive=None\n    for i in \"${list[@]}\"; do\n        if\
    \ [[ $i -lt 0 ]]; then\n            if [[ $largest_negative == None ]] || [[ $i\
    \ -gt $largest_negative ]]; then\n                largest_negative=$i\n      \
    \      fi\n        elif [[ $i -gt 0 ]]; then\n            if [[ $smallest_positive\
    \ == None ]] || [[ $i -lt $smallest_positive ]]; then\n                smallest_positive=$i\n\
    \            fi\n        fi\n    done\n    echo \"[\\\"$largest_negative\\\",\
    \ \\\"$smallest_positive\\\"]\"", "    local -a arr=($1)\n    local -a pos\n \
    \   local -a neg\n    local -a result\n    for i in \"${arr[@]}\"; do\n      \
    \  if [[ $i -lt 0 ]]; then\n            neg+=(\"$i\")\n        elif [[ $i -gt\
    \ 0 ]]; then\n            pos+=(\"$i\")\n        fi\n    done\n    if [[ ${#neg[@]}\
    \ -eq 0 ]]; then\n        result+=(\"None\")\n    else\n        result+=(\"$(printf\
    \ \"%s\\n\" \"${neg[@]}\" | sort -nr | head -n1)\")\n    fi\n    if [[ ${#pos[@]}\
    \ -eq 0 ]]; then\n        result+=(\"None\")\n    else\n        result+=(\"$(printf\
    \ \"%s\\n\" \"${pos[@]}\" | sort -n | head -n1)\")\n    fi\n    echo \"${result[@]}\"",
  "  local -a list=($1)\n  local -a negatives=()\n  local -a positives=()\n  local\
    \ -a result=()\n  local i=0\n  local largest=0\n  local smallest=0\n\n  for i\
    \ in \"${list[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      negatives+=(\"$i\"\
    )\n    elif [[ $i -gt 0 ]]; then\n      positives+=(\"$i\")\n    fi\n  done\n\n\
    \  if [[ ${#negatives[@]} -gt 0 ]]; then\n    largest=$(printf \"%s\\n\" \"${negatives[@]}\"\
    \ | sort -nr | head -n 1)\n  else\n    largest=\"None\"\n  fi\n\n  if [[ ${#positives[@]}\
    \ -gt 0 ]]; then\n    smallest=$(printf \"%s\\n\" \"${positives[@]}\" | sort -n\
    \ | head -n 1)\n  else\n    smallest=\"None\"\n  fi\n\n  result=(\"$largest\"\
    \ \"$smallest\")\n  echo \"${result[@]}\"", "  local -a list=($1)\n  local -a\
    \ negatives\n  local -a positives\n  local -a result\n  for i in \"${list[@]}\"\
    ; do\n    if [[ $i -lt 0 ]]; then\n      negatives+=($i)\n    elif [[ $i -gt 0\
    \ ]]; then\n      positives+=($i)\n    fi\n  done\n  if [[ ${#negatives[@]} -eq\
    \ 0 ]]; then\n    result+=(None)\n  else\n    result+=($(printf \"%s\\n\" \"${negatives[@]}\"\
    \ | sort -nr | head -n 1))\n  fi\n  if [[ ${#positives[@]} -eq 0 ]]; then\n  \
    \  result+=(None)\n  else\n    result+=($(printf \"%s\\n\" \"${positives[@]}\"\
    \ | sort -n | head -n 1))\n  fi\n  echo \"${result[@]}\"", "  local -a list=($1)\n\
    \  local -a negative_list=()\n  local -a positive_list=()\n  local largest_negative\n\
    \  local smallest_positive\n  for i in \"${list[@]}\"; do\n    if [[ $i -lt 0\
    \ ]]; then\n      negative_list+=($i)\n    elif [[ $i -gt 0 ]]; then\n      positive_list+=($i)\n\
    \    fi\n  done\n  if [[ ${#negative_list[@]} -eq 0 ]]; then\n    largest_negative=\"\
    None\"\n  else\n    largest_negative=$(printf \"%s\\n\" \"${negative_list[@]}\"\
    \ | sort -nr | head -n1)\n  fi\n  if [[ ${#positive_list[@]} -eq 0 ]]; then\n\
    \    smallest_positive=\"None\"\n  else\n    smallest_positive=$(printf \"%s\\\
    n\" \"${positive_list[@]}\" | sort -n | head -n1)\n  fi\n  echo \"[\\\"$largest_negative\\\
    \", \\\"$smallest_positive\\\"]\"", "  local a b\n  a=$(echo \"$1\" | tr ' ' '\\\
    n' | grep -v '^[0-9]*$' | sort -n | tail -n 1)\n  b=$(echo \"$1\" | tr ' ' '\\\
    n' | grep -v '^[0-9]*$' | sort -n | head -n 1)\n  echo \"[\\\"${a:-None}\\\",\
    \ \\\"${b:-None}\\\"]\"", "  local largest_negative=None\n  local smallest_positive=None\n\
    \  for i in $1; do\n    if [[ $i -lt 0 ]]; then\n      if [[ $largest_negative\
    \ = None ]] || [[ $i -gt $largest_negative ]]; then\n        largest_negative=$i\n\
    \      fi\n    elif [[ $i -gt 0 ]]; then\n      if [[ $smallest_positive = None\
    \ ]] || [[ $i -lt $smallest_positive ]]; then\n        smallest_positive=$i\n\
    \      fi\n    fi\n  done\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "    local list=$1\n    local largest_negative=None\n    local smallest_positive=None\n\
    \    for i in $list; do\n        if [[ $i -lt 0 ]]; then\n            if [[ $largest_negative\
    \ == None ]] || [[ $i -gt $largest_negative ]]; then\n                largest_negative=$i\n\
    \            fi\n        elif [[ $i -gt 0 ]]; then\n            if [[ $smallest_positive\
    \ == None ]] || [[ $i -lt $smallest_positive ]]; then\n                smallest_positive=$i\n\
    \            fi\n        fi\n    done\n    echo \"[\\\"$largest_negative\\\",\
    \ \\\"$smallest_positive\\\"]\"", "  local -a arr=($1)\n  local -a negs=()\n \
    \ local -a poss=()\n  local -i i=0\n  local -i len=${#arr[@]}\n  local -i max_neg=0\n\
    \  local -i min_pos=0\n  local -i val=0\n  local -i flag=0\n  local -i flag2=0\n\
    \  local -i flag3=0\n  local -i flag4=0\n  for ((i=0; i<len; i++)); do\n    val=${arr[i]}\n\
    \    if [[ $val -lt 0 ]]; then\n      negs+=($val)\n      flag=1\n    elif [[\
    \ $val -gt 0 ]]; then\n      poss+=($val)\n      flag2=1\n    fi\n  done\n  if\
    \ [[ $flag -eq 1 ]]; then\n    max_neg=$(printf \"%s\\n\" ${negs[@]} | sort -nr\
    \ | head -n 1)\n    flag3=1\n  fi\n  if [[ $flag2 -eq 1 ]]; then\n    min_pos=$(printf\
    \ \"%s\\n\" ${poss[@]} | sort -n | head -n 1)\n    flag4=1\n  fi\n  if [[ $flag3\
    \ -eq 1 ]]; then\n    echo \"\\\"$max_neg\\\"\"\n  else\n    echo \"\\\"None\\\
    \"\"\n  fi\n  if [[ $flag4 -eq 1 ]]; then\n    echo \"\\\"$min_pos\\\"\"\n  else\n\
    \    echo \"\\\"None\\\"\"\n  fi", "    local -a list=($1)\n    local -a negatives\n\
    \    local -a positives\n    local -a result\n    local i\n    local n\n    local\
    \ p\n\n    for i in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n    \
    \        negatives+=(\"$i\")\n        elif [[ $i -gt 0 ]]; then\n            positives+=(\"\
    $i\")\n        fi\n    done\n\n    if [[ ${#negatives[@]} -eq 0 ]]; then\n   \
    \     n=\"None\"\n    else\n        n=$(printf \"%s\\n\" \"${negatives[@]}\" |\
    \ sort -nr | head -n 1)\n    fi\n\n    if [[ ${#positives[@]} -eq 0 ]]; then\n\
    \        p=\"None\"\n    else\n        p=$(printf \"%s\\n\" \"${positives[@]}\"\
    \ | sort -n | head -n 1)\n    fi\n\n    result=(\"$n\" \"$p\")\n    echo \"${result[@]}\"",
  "    local largest_negative=None\n    local smallest_positive=None\n    for i in\
    \ $1; do\n        if [[ $i -lt 0 ]]; then\n            if [[ $largest_negative\
    \ == None ]] || [[ $i -gt $largest_negative ]]; then\n                largest_negative=$i\n\
    \            fi\n        elif [[ $i -gt 0 ]]; then\n            if [[ $smallest_positive\
    \ == None ]] || [[ $i -lt $smallest_positive ]]; then\n                smallest_positive=$i\n\
    \            fi\n        fi\n    done\n    echo \"[\\\"$largest_negative\\\",\
    \ \\\"$smallest_positive\\\"]\"", "  local largest_negative=None\n  local smallest_positive=None\n\
    \  for i in $1; do\n    if [[ $i -lt 0 ]]; then\n      if [[ $largest_negative\
    \ == None ]] || [[ $i -gt $largest_negative ]]; then\n        largest_negative=$i\n\
    \      fi\n    elif [[ $i -gt 0 ]]; then\n      if [[ $smallest_positive == None\
    \ ]] || [[ $i -lt $smallest_positive ]]; then\n        smallest_positive=$i\n\
    \      fi\n    fi\n  done\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "  local -a array=($1)\n  local -a negative_array=()\n  local -a positive_array=()\n\
    \  local -a result=()\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  for i in\
    \ \"${array[@]}\"; do\n    if [ \"$i\" -lt 0 ]; then\n      negative_array+=($i)\n\
    \    elif [ \"$i\" -gt 0 ]; then\n      positive_array+=($i)\n    fi\n  done\n\
    \  if [ \"${#negative_array[@]}\" -gt 0 ]; then\n    for j in \"${negative_array[@]}\"\
    ; do\n      if [ \"$j\" -gt \"$k\" ]; then\n        k=\"$j\"\n      fi\n    done\n\
    \    result+=($k)\n  else\n    result+=(\"None\")\n  fi\n  if [ \"${#positive_array[@]}\"\
    \ -gt 0 ]; then\n    for l in \"${positive_array[@]}\"; do\n      if [ \"$l\"\
    \ -lt \"$m\" ]; then\n        m=\"$l\"\n      fi\n    done\n    result+=($m)\n\
    \  else\n    result+=(\"None\")\n  fi\n  echo \"${result[@]}\"", "  local -a list=($1)\n\
    \  local largest_negative_integer=None\n  local smallest_positive_integer=None\n\
    \  for i in \"${list[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      if [[ $largest_negative_integer\
    \ == None ]]; then\n        largest_negative_integer=$i\n      elif [[ $i -gt\
    \ $largest_negative_integer ]]; then\n        largest_negative_integer=$i\n  \
    \    fi\n    elif [[ $i -gt 0 ]]; then\n      if [[ $smallest_positive_integer\
    \ == None ]]; then\n        smallest_positive_integer=$i\n      elif [[ $i -lt\
    \ $smallest_positive_integer ]]; then\n        smallest_positive_integer=$i\n\
    \      fi\n    fi\n  done\n  echo \"[\\\"$largest_negative_integer\\\", \\\"$smallest_positive_integer\\\
    \"]\"", "  local -a arr=()\n  local -a neg=()\n  local -a pos=()\n  local -a res=()\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local aa\n  local bb\n  local cc\n\
    \  local dd\n  local ee\n  local ff\n  local gg\n  local hh\n  local ii\n  local\
    \ jj\n  local kk\n  local ll\n  local mm\n  local nn\n  local oo\n  local pp\n\
    \  local qq\n  local rr\n  local ss\n  local tt\n  local uu\n  local vv\n  local\
    \ ww\n  local xx\n  local yy\n  local zz\n  local aaa\n  local bbb\n  local ccc\n\
    \  local ddd\n  local eee\n  local fff\n  local ggg\n  local hhh\n  local iii\n\
    \  local jjj\n  local kkk\n  local lll\n  local mmm\n  local nnn\n  local ooo\n\
    \  local ppp\n  local qqq\n  local rrr\n  local sss\n  local ttt\n  local uuu\n\
    \  local vvv\n  local www\n  local xxx\n  local yyy\n  local zzz\n  local aaaa\n\
    \  local bbbb\n  local cccc\n  local dddd\n  local eeee\n  local ffff\n  local\
    \ gggg\n  local hhhh\n  local iiii\n  local jjjj\n  local kkkk\n  local llll\n\
    \  local mmmm\n  local nnnn\n  local oooo\n  local pppp\n  local qqqq\n  local\
    \ rrrr\n  local ssss\n  local tttt\n  local uuuu\n  local vvvv\n  local wwww\n\
    \  local xxxx\n  local yyyy\n  local zzzz\n  local aaaaa\n  local bbbbb\n", " \
    \ local -a arr=($1)\n  local -a neg_arr=()\n  local -a pos_arr=()\n  local -a\
    \ res=()\n  local max_neg=0\n  local min_pos=0\n  for i in \"${arr[@]}\"; do\n\
    \    if [[ $i -lt 0 ]]; then\n      neg_arr+=($i)\n    elif [[ $i -gt 0 ]]; then\n\
    \      pos_arr+=($i)\n    fi\n  done\n  if [[ ${#neg_arr[@]} -eq 0 ]]; then\n\
    \    res+=(None)\n  else\n    max_neg=$(printf \"%s\\n\" \"${neg_arr[@]}\" | sort\
    \ -nr | head -n1)\n    res+=($max_neg)\n  fi\n  if [[ ${#pos_arr[@]} -eq 0 ]];\
    \ then\n    res+=(None)\n  else\n    min_pos=$(printf \"%s\\n\" \"${pos_arr[@]}\"\
    \ | sort -n | head -n1)\n    res+=($min_pos)\n  fi\n  echo \"${res[@]}\"", " \
    \   local -a list=($1)\n    local -a negative_list=()\n    local -a positive_list=()\n\
    \    local -a result=()\n    local largest_negative\n    local smallest_positive\n\
    \n    for i in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n         \
    \   negative_list+=(\"$i\")\n        elif [[ $i -gt 0 ]]; then\n            positive_list+=(\"\
    $i\")\n        fi\n    done\n\n    if [[ ${#negative_list[@]} -eq 0 ]]; then\n\
    \        largest_negative=\"None\"\n    else\n        largest_negative=$(printf\
    \ \"%s\\n\" \"${negative_list[@]}\" | sort -nr | head -n 1)\n    fi\n\n    if\
    \ [[ ${#positive_list[@]} -eq 0 ]]; then\n        smallest_positive=\"None\"\n\
    \    else\n        smallest_positive=$(printf \"%s\\n\" \"${positive_list[@]}\"\
    \ | sort -n | head -n 1)\n    fi\n\n    result+=(\"$largest_negative\")\n    result+=(\"\
    $smallest_positive\")\n\n    echo \"${result[@]}\"", "  local list=$1\n  local\
    \ largest_negative=None\n  local smallest_positive=None\n  for i in $list; do\n\
    \    if [[ $i -lt 0 ]]; then\n      if [[ $largest_negative == None ]] || [[ $i\
    \ -gt $largest_negative ]]; then\n        largest_negative=$i\n      fi\n    elif\
    \ [[ $i -gt 0 ]]; then\n      if [[ $smallest_positive == None ]] || [[ $i -lt\
    \ $smallest_positive ]]; then\n        smallest_positive=$i\n      fi\n    fi\n\
    \  done\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\"]\"",
  "    local list=$1\n    local largest_negative=None\n    local smallest_positive=None\n\
    \    for i in $list; do\n        if [[ $i -lt 0 ]]; then\n            if [[ $largest_negative\
    \ == None ]] || [[ $i -gt $largest_negative ]]; then\n                largest_negative=$i\n\
    \            fi\n        elif [[ $i -gt 0 ]]; then\n            if [[ $smallest_positive\
    \ == None ]] || [[ $i -lt $smallest_positive ]]; then\n                smallest_positive=$i\n\
    \            fi\n        fi\n    done\n    echo \"[\\\"$largest_negative\\\",\
    \ \\\"$smallest_positive\\\"]\"", "    local -a list=($1)\n    local -a neg_list=()\n\
    \    local -a pos_list=()\n    for i in \"${list[@]}\"; do\n        if [[ $i -lt\
    \ 0 ]]; then\n            neg_list+=($i)\n        elif [[ $i -gt 0 ]]; then\n\
    \            pos_list+=($i)\n        fi\n    done\n    if [[ ${#neg_list[@]} -eq\
    \ 0 ]]; then\n        neg_list+=(\"None\")\n    fi\n    if [[ ${#pos_list[@]}\
    \ -eq 0 ]]; then\n        pos_list+=(\"None\")\n    fi\n    echo \"[\\\"$(printf\
    \ \"%s\" \"${neg_list[@]}\" | sort -nr | head -n 1)\\\"\"\n    echo \"\\\"$(printf\
    \ \"%s\" \"${pos_list[@]}\" | sort -n | head -n 1)\\\"]\"", "  local list=$1\n\
    \  local largest_negative=None\n  local smallest_positive=None\n  for i in $list;\
    \ do\n    if [[ $i -lt 0 ]]; then\n      if [[ $largest_negative == None ]] ||\
    \ [[ $i -gt $largest_negative ]]; then\n        largest_negative=$i\n      fi\n\
    \    elif [[ $i -gt 0 ]]; then\n      if [[ $smallest_positive == None ]] || [[\
    \ $i -lt $smallest_positive ]]; then\n        smallest_positive=$i\n      fi\n\
    \    fi\n  done\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "  local -a list=($1)\n  local -a negative_list=()\n  local -a positive_list=()\n\
    \  local -a result=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local\
    \ -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n\
    \  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i\
    \ jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n \
    \ local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i\
    \ ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n \
    \ local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i\
    \ bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n\
    \  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local\
    \ -i kkk=0\n  local -i lll", "  local -a list=($1)\n  local max_neg=0\n  local\
    \ min_pos=0\n  local i=0\n  local len=${#list[@]}\n  local found_neg=0\n  local\
    \ found_pos=0\n\n  while [ $i -lt $len ]; do\n    if [ ${list[$i]} -lt 0 ]; then\n\
    \      if [ $found_neg -eq 0 ]; then\n        max_neg=${list[$i]}\n        found_neg=1\n\
    \      else\n        if [ ${list[$i]} -gt $max_neg ]; then\n          max_neg=${list[$i]}\n\
    \        fi\n      fi\n    else\n      if [ ${list[$i]} -gt 0 ]; then\n      \
    \  if [ $found_pos -eq 0 ]; then\n          min_pos=${list[$i]}\n          found_pos=1\n\
    \        else\n          if [ ${list[$i]} -lt $min_pos ]; then\n            min_pos=${list[$i]}\n\
    \          fi\n        fi\n      fi\n    fi\n    i=$((i+1))\n  done\n\n  if [\
    \ $found_neg -eq 0 ]; then\n    max_neg=\"None\"\n  fi\n\n  if [ $found_pos -eq\
    \ 0 ]; then\n    min_pos=\"None\"\n  fi\n\n  echo \"[\\\"$max_neg\\\", \\\"$min_pos\\\
    \"]\"", "    local -a list=($1)\n    local -a negative_list=()\n    local -a positive_list=()\n\
    \    local largest_negative=None\n    local smallest_positive=None\n\n    for\
    \ i in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            negative_list+=($i)\n\
    \        elif [[ $i -gt 0 ]]; then\n            positive_list+=($i)\n        fi\n\
    \    done\n\n    if [[ ${#negative_list[@]} -gt 0 ]]; then\n        largest_negative=$(printf\
    \ \"%s\\n\" \"${negative_list[@]}\" | sort -nr | head -n 1)\n    fi\n\n    if\
    \ [[ ${#positive_list[@]} -gt 0 ]]; then\n        smallest_positive=$(printf \"\
    %s\\n\" \"${positive_list[@]}\" | sort -n | head -n 1)\n    fi\n\n    echo \"\
    [\\\"$largest_negative\\\", \\\"$smallest_positive\\\"]\"", "    local -a list=($1)\n\
    \    local -a positive=()\n    local -a negative=()\n    local -a result=()\n\
    \    local i\n    for i in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n\
    \            negative+=($i)\n        elif [[ $i -gt 0 ]]; then\n            positive+=($i)\n\
    \        fi\n    done\n    if [[ ${#negative[@]} -eq 0 ]]; then\n        result+=(None)\n\
    \    else\n        result+=($(printf \"%s\\n\" \"${negative[@]}\" | sort -nr |\
    \ head -n 1))\n    fi\n    if [[ ${#positive[@]} -eq 0 ]]; then\n        result+=(None)\n\
    \    else\n        result+=($(printf \"%s\\n\" \"${positive[@]}\" | sort -n |\
    \ head -n 1))\n    fi\n    echo \"${result[@]}\"", "    local -a array\n    local\
    \ -i i\n    local -i max_negative\n    local -i min_positive\n    local -i n\n\
    \    local -i value\n\n    array=($1)\n    max_negative=0\n    min_positive=0\n\
    \    for ((i = 0; i < ${#array[@]}; i++)); do\n        value=${array[$i]}\n  \
    \      if [[ $value -lt 0 ]]; then\n            if [[ $value -gt $max_negative\
    \ ]]; then\n                max_negative=$value\n            fi\n        elif\
    \ [[ $value -gt 0 ]]; then\n            if [[ $min_positive -eq 0 ]]; then\n \
    \               min_positive=$value\n            elif [[ $value -lt $min_positive\
    \ ]]; then\n                min_positive=$value\n            fi\n        fi\n\
    \    done\n    if [[ $max_negative -eq 0 ]]; then\n        max_negative=\"None\"\
    \n    fi\n    if [[ $min_positive -eq 0 ]]; then\n        min_positive=\"None\"\
    \n    fi\n    echo \"[\\\"$max_negative\\\", \\\"$min_positive\\\"]\"", "  local\
    \ -a list=($1)\n  local -a negative_integers\n  local -a positive_integers\n \
    \ local -i i\n  local -i n\n  local -i largest_negative_integer\n  local -i smallest_positive_integer\n\
    \n  for ((i = 0; i < ${#list[@]}; i++)); do\n    if ((list[i] < 0)); then\n  \
    \    negative_integers+=(${list[i]})\n    elif ((list[i] > 0)); then\n      positive_integers+=(${list[i]})\n\
    \    fi\n  done\n\n  if ((${#negative_integers[@]} > 0)); then\n    largest_negative_integer=${negative_integers[0]}\n\
    \    for ((i = 1; i < ${#negative_integers[@]}; i++)); do\n      if ((negative_integers[i]\
    \ > largest_negative_integer)); then\n        largest_negative_integer=${negative_integers[i]}\n\
    \      fi\n    done\n  else\n    largest_negative_integer=\"None\"\n  fi\n\n \
    \ if ((${#positive_integers[@]} > 0)); then\n    smallest_positive_integer=${positive_integers[0]}\n\
    \    for ((i = 1; i < ${#positive_integers[@]}; i++)); do\n      if ((positive_integers[i]\
    \ < smallest_positive_integer)); then\n        smallest_positive_integer=${positive_integers[i]}\n\
    \      fi\n    done\n  else\n    smallest_positive_integer=\"None\"\n  fi\n\n\
    \  echo \"[\\\"$largest_negative_integer\\\", \\\"$smallest_positive_integer\\\
    \"]\"", "  local -a list=($1)\n  local -a negatives\n  local -a positives\n  local\
    \ -a result\n  for i in \"${list[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n    \
    \  negatives+=($i)\n    elif [[ $i -gt 0 ]]; then\n      positives+=($i)\n   \
    \ fi\n  done\n  if [[ ${#negatives[@]} -gt 0 ]]; then\n    result+=($(printf '%s\\\
    n' \"${negatives[@]}\" | sort -nr | head -n1))\n  else\n    result+=(\"None\"\
    )\n  fi\n  if [[ ${#positives[@]} -gt 0 ]]; then\n    result+=($(printf '%s\\\
    n' \"${positives[@]}\" | sort -n | head -n1))\n  else\n    result+=(\"None\")\n\
    \  fi\n  echo \"${result[@]}\"", "    local -a a=($1)\n    local -a b=()\n   \
    \ local -a c=()\n    local -a d=()\n    local -a e=()\n    local -a f=()\n   \
    \ local -a g=()\n    local -a h=()\n    local -a i=()\n    local -a j=()\n   \
    \ local -a k=()\n    local -a l=()\n    local -a m=()\n    local -a n=()\n   \
    \ local -a o=()\n    local -a p=()\n    local -a q=()\n    local -a r=()\n   \
    \ local -a s=()\n    local -a t=()\n    local -a u=()\n    local -a v=()\n   \
    \ local -a w=()\n    local -a x=()\n    local -a y=()\n    local -a z=()\n   \
    \ local -a aa=()\n    local -a ab=()\n    local -a ac=()\n    local -a ad=()\n\
    \    local -a ae=()\n    local -a af=()\n    local -a ag=()\n    local -a ah=()\n\
    \    local -a ai=()\n    local -a aj=()\n    local -a ak=()\n    local -a al=()\n\
    \    local -a am=()\n    local -a an=()\n    local -a ao=()\n    local -a ap=()\n\
    \    local -a aq=()\n    local -a ar=()\n    local -a as=()\n    local -a at=()\n\
    \    local -a au=()\n    local -a av=()\n    local -a aw=()\n    local -a ax=()\n\
    \    local -a ay=()\n    local -a az=()\n    local -a ba=()\n    local -a bb=()\n\
    \    local -a bc=()\n    local -a bd=()\n    local -a be=()\n    local -a bf=()\n\
    \    local -a bg=()\n    local -a bh=()\n    local -a bi=()\n    local -a bj=()\n\
    \   ", "    local -a list=($1)\n    local -a negatives\n    local -a positives\n\
    \    local -a result\n    for i in \"${list[@]}\"; do\n        if [[ $i -lt 0\
    \ ]]; then\n            negatives+=($i)\n        elif [[ $i -gt 0 ]]; then\n \
    \           positives+=($i)\n        fi\n    done\n    if [[ ${#negatives[@]}\
    \ -eq 0 ]]; then\n        result+=(None)\n    else\n        result+=($(printf\
    \ '%s\\n' \"${negatives[@]}\" | sort -nr | head -n1))\n    fi\n    if [[ ${#positives[@]}\
    \ -eq 0 ]]; then\n        result+=(None)\n    else\n        result+=($(printf\
    \ '%s\\n' \"${positives[@]}\" | sort -n | head -n1))\n    fi\n    echo \"${result[@]}\"",
  "  local list=$1\n  local largest_negative=None\n  local smallest_positive=None\n\
    \  for i in $list; do\n    if [[ $i -lt 0 ]]; then\n      if [[ $largest_negative\
    \ == None ]] || [[ $i -gt $largest_negative ]]; then\n        largest_negative=$i\n\
    \      fi\n    elif [[ $i -gt 0 ]]; then\n      if [[ $smallest_positive == None\
    \ ]] || [[ $i -lt $smallest_positive ]]; then\n        smallest_positive=$i\n\
    \      fi\n    fi\n  done\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "  local list=$1\n  local largest_negative=None\n  local smallest_positive=None\n\
    \  for i in $list; do\n    if [ $i -lt 0 ]; then\n      if [ $largest_negative\
    \ = None ] || [ $i -gt $largest_negative ]; then\n        largest_negative=$i\n\
    \      fi\n    elif [ $i -gt 0 ]; then\n      if [ $smallest_positive = None ]\
    \ || [ $i -lt $smallest_positive ]; then\n        smallest_positive=$i\n     \
    \ fi\n    fi\n  done\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "  local -a list=($1)\n  local -a positive_list=()\n  local -a negative_list=()\n\
    \  local largest_negative\n  local smallest_positive\n\n  for i in \"${list[@]}\"\
    ; do\n    if [[ $i -lt 0 ]]; then\n      negative_list+=($i)\n    elif [[ $i -gt\
    \ 0 ]]; then\n      positive_list+=($i)\n    fi\n  done\n\n  if [[ ${#negative_list[@]}\
    \ -eq 0 ]]; then\n    largest_negative=\"None\"\n  else\n    largest_negative=$(printf\
    \ \"%s\\n\" \"${negative_list[@]}\" | sort -nr | head -n1)\n  fi\n\n  if [[ ${#positive_list[@]}\
    \ -eq 0 ]]; then\n    smallest_positive=\"None\"\n  else\n    smallest_positive=$(printf\
    \ \"%s\\n\" \"${positive_list[@]}\" | sort -n | head -n1)\n  fi\n\n  echo \"[\\\
    \"$largest_negative\\\", \\\"$smallest_positive\\\"]\"", "  local -a list=($1)\n\
    \  local -a negative_list=()\n  local -a positive_list=()\n  local largest_negative=None\n\
    \  local smallest_positive=None\n\n  for item in \"${list[@]}\"; do\n    if [[\
    \ $item -lt 0 ]]; then\n      negative_list+=($item)\n    elif [[ $item -gt 0\
    \ ]]; then\n      positive_list+=($item)\n    fi\n  done\n\n  if [[ ${#negative_list[@]}\
    \ -gt 0 ]]; then\n    largest_negative=$(printf \"%s\\n\" \"${negative_list[@]}\"\
    \ | sort -nr | head -n 1)\n  fi\n\n  if [[ ${#positive_list[@]} -gt 0 ]]; then\n\
    \    smallest_positive=$(printf \"%s\\n\" \"${positive_list[@]}\" | sort -n |\
    \ head -n 1)\n  fi\n\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "  local -a list=($1)\n  local -a negatives\n  local -a positives\n  local\
    \ -a result\n  for i in \"${list[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n    \
    \  negatives+=(\"$i\")\n    elif [[ $i -gt 0 ]]; then\n      positives+=(\"$i\"\
    )\n    fi\n  done\n  if [[ ${#negatives[@]} -eq 0 ]]; then\n    result+=(\"None\"\
    )\n  else\n    result+=(\"$(printf \"%s\\n\" \"${negatives[@]}\" | sort -nr |\
    \ head -n 1)\")\n  fi\n  if [[ ${#positives[@]} -eq 0 ]]; then\n    result+=(\"\
    None\")\n  else\n    result+=(\"$(printf \"%s\\n\" \"${positives[@]}\" | sort\
    \ -n | head -n 1)\")\n  fi\n  echo \"${result[@]}\"", "  local -a list=($1)\n\
    \  local -a negatives\n  local -a positives\n  local -i i\n  local -i len=${#list[@]}\n\
    \  local -i largest_negative\n  local -i smallest_positive\n  local -i number\n\
    \n  for ((i=0; i<len; i++)); do\n    number=${list[$i]}\n    if ((number < 0));\
    \ then\n      negatives+=($number)\n    elif ((number > 0)); then\n      positives+=($number)\n\
    \    fi\n  done\n\n  if ((${#negatives[@]} > 0)); then\n    largest_negative=$(printf\
    \ \"%s\\n\" \"${negatives[@]}\" | sort -nr | head -n 1)\n  else\n    largest_negative=\"\
    None\"\n  fi\n\n  if ((${#positives[@]} > 0)); then\n    smallest_positive=$(printf\
    \ \"%s\\n\" \"${positives[@]}\" | sort -n | head -n 1)\n  else\n    smallest_positive=\"\
    None\"\n  fi\n\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\"\
    ]\"", "    local -a list=($1)\n    local largest_negative=None\n    local smallest_positive=None\n\
    \    for i in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n          \
    \  if [[ $largest_negative == None ]] || [[ $i -gt $largest_negative ]]; then\n\
    \                largest_negative=$i\n            fi\n        elif [[ $i -gt 0\
    \ ]]; then\n            if [[ $smallest_positive == None ]] || [[ $i -lt $smallest_positive\
    \ ]]; then\n                smallest_positive=$i\n            fi\n        fi\n\
    \    done\n    echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\"]\"",
  "  local -a list\n  local -a negatives\n  local -a positives\n  local -a result\n\
    \  local i\n  local n\n  local p\n\n  list=($1)\n  for i in \"${list[@]}\"; do\n\
    \    if [[ $i -lt 0 ]]; then\n      negatives+=($i)\n    elif [[ $i -gt 0 ]];\
    \ then\n      positives+=($i)\n    fi\n  done\n\n  if [[ ${#negatives[@]} -eq\
    \ 0 ]]; then\n    n=\"None\"\n  else\n    n=$(printf \"%s\\n\" \"${negatives[@]}\"\
    \ | sort -nr | head -n 1)\n  fi\n\n  if [[ ${#positives[@]} -eq 0 ]]; then\n \
    \   p=\"None\"\n  else\n    p=$(printf \"%s\\n\" \"${positives[@]}\" | sort -n\
    \ | head -n 1)\n  fi\n\n  result=($n $p)\n  echo ${result[@]}", "  local -a list=($1)\n\
    \  local -a negative_list=()\n  local -a positive_list=()\n  local -a result=(\"\
    None\" \"None\")\n\n  for i in \"${list[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n\
    \      negative_list+=($i)\n    elif [[ $i -gt 0 ]]; then\n      positive_list+=($i)\n\
    \    fi\n  done\n\n  if [[ ${#negative_list[@]} -gt 0 ]]; then\n    result[0]=$(printf\
    \ \"%s\\n\" \"${negative_list[@]}\" | sort -nr | head -n1)\n  fi\n\n  if [[ ${#positive_list[@]}\
    \ -gt 0 ]]; then\n    result[1]=$(printf \"%s\\n\" \"${positive_list[@]}\" | sort\
    \ -n | head -n1)\n  fi\n\n  echo \"${result[@]}\"", "  local -a list\n  local\
    \ -i i\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n\
    \  local -i f\n  local -i g\n  local -i h\n  local -i j\n  local -i k\n  local\
    \ -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n\
    \  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local\
    \ -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i A\n  local -i B\n\
    \  local -i C\n  local -i D\n  local -i E\n  local -i F\n  local -i G\n  local\
    \ -i H\n  local -i I\n  local -i J\n  local -i K\n  local -i L\n  local -i M\n\
    \  local -i N\n  local -i O\n  local -i P\n  local -i Q\n  local -i R\n  local\
    \ -i S\n  local -i T\n  local -i U\n  local -i V\n  local -i W\n  local -i X\n\
    \  local -i Y\n  local -i Z\n  local -i aa\n  local -i bb\n  local -i cc\n  local\
    \ -i dd\n  local -i ee\n  local -i ff\n  local -i gg\n  local -i hh\n  local -i\
    \ ii\n  local -i jj\n  local -i kk\n  local -i ll\n  local -i mm\n  local -i nn\n\
    \  local -i oo\n  local -i pp\n  local -i qq\n  local -i rr\n  local -i ss\n \
    \ local -i tt\n  local -i uu\n  local -i vv\n  local -i ww\n  local -i xx\n  local\
    \ -i yy\n  local -i zz\n  local -i Aa\n  local -i Bb\n  local -i Cc", "  local\
    \ list=$1\n  local largest_negative=None\n  local smallest_positive=None\n  for\
    \ i in $list; do\n    if [[ $i -lt 0 ]]; then\n      if [[ $largest_negative ==\
    \ None ]] || [[ $i -gt $largest_negative ]]; then\n        largest_negative=$i\n\
    \      fi\n    elif [[ $i -gt 0 ]]; then\n      if [[ $smallest_positive == None\
    \ ]] || [[ $i -lt $smallest_positive ]]; then\n        smallest_positive=$i\n\
    \      fi\n    fi\n  done\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "  local -a list=($1)\n  local largest_negative=None\n  local smallest_positive=None\n\
    \  for i in \"${list[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      if [[ $largest_negative\
    \ = None ]] || [[ $i -gt $largest_negative ]]; then\n        largest_negative=$i\n\
    \      fi\n    elif [[ $i -gt 0 ]]; then\n      if [[ $smallest_positive = None\
    \ ]] || [[ $i -lt $smallest_positive ]]; then\n        smallest_positive=$i\n\
    \      fi\n    fi\n  done\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "    local -a list=($1)\n    local -a negative_list=()\n    local -a positive_list=()\n\
    \    local largest_negative=None\n    local smallest_positive=None\n\n    for\
    \ i in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            negative_list+=($i)\n\
    \        elif [[ $i -gt 0 ]]; then\n            positive_list+=($i)\n        fi\n\
    \    done\n\n    if [[ ${#negative_list[@]} -gt 0 ]]; then\n        largest_negative=$(printf\
    \ '%s\\n' \"${negative_list[@]}\" | sort -nr | head -n1)\n    fi\n\n    if [[\
    \ ${#positive_list[@]} -gt 0 ]]; then\n        smallest_positive=$(printf '%s\\\
    n' \"${positive_list[@]}\" | sort -n | head -n1)\n    fi\n\n    echo \"[\\\"$largest_negative\\\
    \", \\\"$smallest_positive\\\"]\"", "  local -a list=($1)\n  local -a negative_integers=()\n\
    \  local -a positive_integers=()\n  for i in \"${list[@]}\"; do\n    if (( i <\
    \ 0 )); then\n      negative_integers+=($i)\n    elif (( i > 0 )); then\n    \
    \  positive_integers+=($i)\n    fi\n  done\n  if (( ${#negative_integers[@]} ==\
    \ 0 )); then\n    negative_integers+=(None)\n  fi\n  if (( ${#positive_integers[@]}\
    \ == 0 )); then\n    positive_integers+=(None)\n  fi\n  echo \"[\\\"$(echo ${negative_integers[@]}\
    \ | tr ' ' '\\n' | sort -nr | head -n 1)\\\", \\\"$(echo ${positive_integers[@]}\
    \ | tr ' ' '\\n' | sort -n | head -n 1)\\\"]\""]
stop_tokens:
- "\n}"

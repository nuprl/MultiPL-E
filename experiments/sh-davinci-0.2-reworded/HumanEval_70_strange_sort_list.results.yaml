language: sh
name: HumanEval_70_strange_sort_list
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local min=0\n    local max=0\n    local\
    \ min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n    local\
    \ k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n\
    \    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n \
    \   local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n  \
    \  local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n   \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[\
    \ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\"\
    \ ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n\
    \    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[\
    \ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    while [ $i -lt ${#list[@]}\
    \ ]; do\n        local min=${list[0]}\n        local min_index=0\n        local\
    \ max=${list[0]}\n        local max_index=0\n        for j in \"${!list[@]}\"\
    ; do\n            if [ ${list[$j]} -lt $min ]; then\n                min=${list[$j]}\n\
    \                min_index=$j\n            fi\n            if [ ${list[$j]} -gt\
    \ $max ]; then\n                max=${list[$j]}\n                max_index=$j\n\
    \            fi\n        done\n        if [ $((i % 2)) -eq 0 ]; then\n       \
    \     result+=($min)\n            unset list[$min_index]\n        else\n     \
    \       result+=($max)\n            unset list[$max_index]\n        fi\n     \
    \   list=(${list[@]})\n        i=$((i + 1))\n    done\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i n=${#list[@]}\n    local -i m=0\n    local -i min=0\n\
    \    local -i max=0\n    local -i min_index=0\n    local -i max_index=0\n    local\
    \ -i min_index_found=0\n    local -i max_index_found=0\n    local -i min_index_found_first=0\n\
    \    local -i max_index_found_first=0\n    local -i min_index_found_second=0\n\
    \    local -i max_index_found_second=0\n    local -i min_index_found_third=0\n\
    \    local -i max_index_found_third=0\n    local -i min_index_found_fourth=0\n\
    \    local -i max_index_found_fourth=0\n    local -i min_index_found_fifth=0\n\
    \    local -i max_index_found_fifth=0\n    local -i min_index_found_sixth=0\n\
    \    local -i max_index_found_sixth=0\n    local -i min_index_found_seventh=0\n\
    \    local -i max_index_found_seventh=0\n    local -i min_index_found_eighth=0\n\
    \    local -i max_index_found_eighth=0\n    local -i min_index_found_ninth=0\n\
    \    local -i max_index_found_ninth=0\n    local -i min_index_found_tenth=0\n\
    \    local -i max_index_found_tenth=0\n    local -i min_index_found_eleventh=0\n\
    \    local -i max_index_found_eleventh=0\n    local -i min_index_found_twelfth=0\n\
    \    local -i max_index_found_twelfth=0\n    local -i min_index_found_thirteenth=0\n\
    \    local -i max_index_found_thirteenth=0\n    local -i min_\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\
    \ -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n\
    \    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n\
    \    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n\
    \    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n\
    \    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n\
    \    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n\
    \    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local\
    \ hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n\
    \    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local\
    \ qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n\
    \    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local\
    \ zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local n=${#list[@]}\n    local min=0\n    local max=0\n    local tmp=0\n\
    \    for ((i=0; i<n; i++)); do\n        min=${list[0]}\n        max=${list[0]}\n\
    \        for ((j=0; j<n; j++)); do\n            if [[ ${list[j]} -lt $min ]];\
    \ then\n                min=${list[j]}\n            fi\n            if [[ ${list[j]}\
    \ -gt $max ]]; then\n                max=${list[j]}\n            fi\n        done\n\
    \        if [[ $((i%2)) -eq 0 ]]; then\n            result[k]=$min\n         \
    \   for ((j=0; j<n; j++)); do\n                if [[ ${list[j]} -eq $min ]]; then\n\
    \                    list[j]=$max\n                fi\n            done\n    \
    \    else\n            result[k]=$max\n            for ((j=0; j<n; j++)); do\n\
    \                if [[ ${list[j]} -eq $max ]]; then\n                    list[j]=$min\n\
    \                fi\n            done\n        fi\n        k=$((k+1))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[\
    \ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\"\
    \ ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n\
    \    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[\
    \ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local temp=0\n    local temp_index=0\n    local\
    \ temp_index_2=0\n    local temp_index_3=0\n    local temp_index_4=0\n    local\
    \ temp_index_5=0\n    local temp_index_6=0\n    local temp_index_7=0\n    local\
    \ temp_index_8=0\n    local temp_index_9=0\n    local temp_index_10=0\n    local\
    \ temp_index_11=0\n    local temp_index_12=0\n    local temp_index_13=0\n    local\
    \ temp_index_14=0\n    local temp_index_15=0\n    local temp_index_16=0\n    local\
    \ temp_index_17=0\n    local temp_index_18=0\n    local temp_index_19=0\n    local\
    \ temp_index_20=0\n    local temp_index_21=0\n    local temp_index_22=0\n    local\
    \ temp_index_23=0\n    local temp_index_24=0\n    local temp_index_25=0\n    local\
    \ temp_index_26=0\n    local temp_index_27=0\n    local temp_index_28=0\n    local\
    \ temp_index_29=0\n    local temp_index_30=0\n    local temp_index_31=0\n    local\
    \ temp_index_32=0\n    local temp_index_33=0\n    local temp_index_34=0\n    local\
    \ temp_index_35=0\n    local temp_index_36=0\n    local temp_index_37=0\n    local\
    \ temp_index_38=0\n    local temp_index_39=0\n    local temp_index_40=0\n    local\
    \ temp_index_41=0\n    local temp_index_42=0\n    local temp_index_43=0\n    local\
    \ temp\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n\
    \    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n\
    \    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n\
    \    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n\
    \    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n\
    \    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n\
    \    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local\
    \ hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n\
    \    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local\
    \ qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n\
    \    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local\
    \ zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local n=${#list[@]}\n    local m=$((n / 2))\n    local min=0\n    local max=0\n\
    \    local min_idx=0\n    local max_idx=0\n    local tmp=0\n    local tmp_idx=0\n\
    \    local tmp_idx2=0\n    local tmp_idx3=0\n    local tmp_idx4=0\n    local tmp_idx5=0\n\
    \    local tmp_idx6=0\n    local tmp_idx7=0\n    local tmp_idx8=0\n    local tmp_idx9=0\n\
    \    local tmp_idx10=0\n    local tmp_idx11=0\n    local tmp_idx12=0\n    local\
    \ tmp_idx13=0\n    local tmp_idx14=0\n    local tmp_idx15=0\n    local tmp_idx16=0\n\
    \    local tmp_idx17=0\n    local tmp_idx18=0\n    local tmp_idx19=0\n    local\
    \ tmp_idx20=0\n    local tmp_idx21=0\n    local tmp_idx22=0\n    local tmp_idx23=0\n\
    \    local tmp_idx24=0\n    local tmp_idx25=0\n    local tmp_idx26=0\n    local\
    \ tmp_idx27=0\n    local tmp_idx28=0\n    local tmp_idx29=0\n    local tmp_idx30=0\n\
    \    local tmp_idx31=0\n    local tmp_idx32=0\n    local tmp_idx33=0\n    local\
    \ tmp_idx34=0\n    local tmp_idx35=0\n    local tmp_idx36=0\n    local tmp_idx37=0\n\
    \    local tmp_idx38=0\n    local tmp_idx39=0\n    local tmp_idx40=0\n    local\
    \ tmp_idx41=0\n    local tmp_idx42=0\n    local tmp\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=(\"$@\")\n  local result=()\n  local min=${list[0]}\n  local max=${list[0]}\n\
    \  local min_index=0\n  local max_index=0\n  local i=0\n  local j=0\n  local k=0\n\
    \  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n\
    \  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n\
    \  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n\
    \  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local\
    \ ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n\
    \  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local\
    \ tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n\
    \  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local\
    \ eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n\
    \  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n \
    \ local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local\
    \ uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local n=${#list[@]}\n    local min=0\n    local max=0\n    local min_index=0\n\
    \    local max_index=0\n    local temp=0\n    for ((i=0; i<n; i++)); do\n    \
    \    min=${list[0]}\n        max=${list[0]}\n        min_index=0\n        max_index=0\n\
    \        for ((j=0; j<n; j++)); do\n            if [ ${list[j]} -lt $min ]; then\n\
    \                min=${list[j]}\n                min_index=$j\n            fi\n\
    \            if [ ${list[j]} -gt $max ]; then\n                max=${list[j]}\n\
    \                max_index=$j\n            fi\n        done\n        if [ $((i%2))\
    \ -eq 0 ]; then\n            result[$i]=$min\n            list[$min_index]=$max\n\
    \        else\n            result[$i]=$max\n            list[$max_index]=$min\n\
    \        fi\n    done\n    echo \"[\"\n    for ((k=0; k<n; k++)); do\n       \
    \ echo \"\\\"${result[k]}\\\"\"\n        if [ $k -lt $((n-1)) ]; then\n      \
    \      echo \",\"\n        fi\n    done\n    echo \"]\"\n}\n\ncandidate() {\n\
    \    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=($1)\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local\
    \ n=${#list[@]}\n  local min=0\n  local max=0\n  local min_index=0\n  local max_index=0\n\
    \  local temp=0\n  local temp_index=0\n  local temp_index2=0\n  local temp_index3=0\n\
    \  local temp_index4=0\n  local temp_index5=0\n  local temp_index6=0\n  local\
    \ temp_index7=0\n  local temp_index8=0\n  local temp_index9=0\n  local temp_index10=0\n\
    \  local temp_index11=0\n  local temp_index12=0\n  local temp_index13=0\n  local\
    \ temp_index14=0\n  local temp_index15=0\n  local temp_index16=0\n  local temp_index17=0\n\
    \  local temp_index18=0\n  local temp_index19=0\n  local temp_index20=0\n  local\
    \ temp_index21=0\n  local temp_index22=0\n  local temp_index23=0\n  local temp_index24=0\n\
    \  local temp_index25=0\n  local temp_index26=0\n  local temp_index27=0\n  local\
    \ temp_index28=0\n  local temp_index29=0\n  local temp_index30=0\n  local temp_index31=0\n\
    \  local temp_index32=0\n  local temp_index33=0\n  local temp_index34=0\n  local\
    \ temp_index35=0\n  local temp_index36=0\n  local temp_index37=0\n  local temp_index38=0\n\
    \  local temp_index39=0\n  local temp_index40=0\n  local temp_index41=0\n  local\
    \ temp_index42=0\n  local temp_index43=0\n  local temp_index44=0\n  local temp_index45=0\n\
    \  local temp_index46=0\n  local temp_index47=0\n  local temp_index48=0\n  local\
    \ temp\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=$1\n  local min=0\n  local max=0\n  local sorted_list=()\n  local i=0\n\
    \  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n\
    \  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n\
    \  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n\
    \  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local\
    \ gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n\
    \  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local\
    \ rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n\
    \  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local\
    \ ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n\
    \  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n \
    \ local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local\
    \ sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n\
    \  local yyy=0\n  local zzz=0\n  local aaaa=0\n  local bbbb=0\n  local cccc=0\n\
    \ \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\
    \ -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ -a list=($1)\n  local -a result=()\n  local -i i=0\n  local -i j=0\n  local\
    \ -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local\
    \ -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local\
    \ -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local\
    \ -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n\
    \  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i\
    \ ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n \
    \ local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i\
    \ rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n \
    \ local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i\
    \ aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n\
    \  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local\
    \ -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    while [ $i -lt ${#list[@]}\
    \ ]; do\n        local min=${list[0]}\n        local min_index=0\n        local\
    \ max=${list[0]}\n        local max_index=0\n        for j in $(seq 0 $((${#list[@]}\
    \ - 1))); do\n            if [ ${list[$j]} -lt $min ]; then\n                min=${list[$j]}\n\
    \                min_index=$j\n            fi\n            if [ ${list[$j]} -gt\
    \ $max ]; then\n                max=${list[$j]}\n                max_index=$j\n\
    \            fi\n        done\n        if [ $((i % 2)) -eq 0 ]; then\n       \
    \     result+=($min)\n            list[$min_index]=$((max + 1))\n        else\n\
    \            result+=($max)\n            list[$max_index]=$((min - 1))\n     \
    \   fi\n        i=$((i + 1))\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local sorted=()\n    local min=0\n    local max=0\n    local\
    \ min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n    local\
    \ k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n\
    \    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n \
    \   local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n  \
    \  local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n   \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[\
    \ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\"\
    \ ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n\
    \    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[\
    \ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\
    \ -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=$1\n    local min=$(echo \"$list\" | tr ' ' '\\n' | sort -n | head -n 1)\n\
    \    local max=$(echo \"$list\" | tr ' ' '\\n' | sort -n | tail -n 1)\n    local\
    \ sorted_list=$(echo \"$list\" | tr ' ' '\\n' | sort -n)\n    local result=\"\"\
    \n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n\
    \    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n \
    \   local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n  \
    \  local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local ab=0\n \
    \   local ac=0\n    local ad=0\n    local ae=0\n    local af=0\n    local ag=0\n\
    \    local ah=0\n    local ai=0\n    local aj=0\n    local ak=0\n    local al=0\n\
    \    local am=0\n    local an=0\n    local ao=0\n    local ap=0\n    local aq=0\n\
    \    local ar=0\n    local as=0\n    local at=0\n    local au=0\n    local av=0\n\
    \    local aw=0\n    local ax=0\n    local ay=0\n    local az=0\n    local ba=0\n\
    \    local bb=0\n    local bc=0\n    local bd=0\n    local be=0\n    local bf=0\n\
    \    local bg=0\n    local bh=0\n    local bi=0\n    local bj=0\n    local bk=0\n\
    \    local bl=0\n    local bm=0\n    local bn=0\n    local bo=0\n    local bp=0\n\
    \    local bq=0\n    local br=0\n    local bs=0\n    local bt=0\n    local bu=0\n\
    \    local bv=0\n    local b\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n\
    \    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1\
    \ 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5\
    \ 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n\
    \    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n\
    \    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n\
    \    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n\
    \    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n\
    \    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n\
    \    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local\
    \ hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n\
    \    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local\
    \ qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n\
    \    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local\
    \ zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local sorted_list=()\n    local i=0\n    local j=0\n    local\
    \ k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n\
    \    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n \
    \   local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n  \
    \  local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ e\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=$1\n    local sorted_list=$(echo $list | tr ' ' '\\n' | sort -n)\n    local\
    \ min_list=$(echo $sorted_list | tr ' ' '\\n' | head -n $(( $(echo $sorted_list\
    \ | wc -w) / 2 )))\n    local max_list=$(echo $sorted_list | tr ' ' '\\n' | tail\
    \ -n $(( $(echo $sorted_list | wc -w) / 2 )))\n    local result=\"\"\n    for\
    \ i in $(seq 1 $(( $(echo $min_list | wc -w) + $(echo $max_list | wc -w) )));\
    \ do\n        if [ $(( i % 2 )) -eq 0 ]; then\n            result=\"$result $(echo\
    \ $max_list | tr ' ' '\\n' | head -n 1)\"\n            max_list=$(echo $max_list\
    \ | tr ' ' '\\n' | tail -n +2)\n        else\n            result=\"$result $(echo\
    \ $min_list | tr ' ' '\\n' | head -n 1)\"\n            min_list=$(echo $min_list\
    \ | tr ' ' '\\n' | tail -n +2)\n        fi\n    done\n    echo $result\n}\n\n\
    candidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\"\
    ) = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n \
    \   [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"\
    5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=\"$1\"\n    local result=\"\"\n    local min=\"\"\n    local max=\"\"\n\
    \    local min_index=\"\"\n    local max_index=\"\"\n    local i=0\n    local\
    \ j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n\
    \    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n \
    \   local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n  \
    \  local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n\
    \    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n\
    \    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n\
    \    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n\
    \    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n\
    \    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n\
    \    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local\
    \ hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n\
    \    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local\
    \ qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n\
    \    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local\
    \ zzz=0\n    local aaaa=0\n    local bbbb=\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=($1)\n  local result=()\n  local i=0\n  while [ $i -lt ${#list[@]} ]; do\n\
    \    local min=${list[0]}\n    local min_index=0\n    local max=${list[0]}\n \
    \   local max_index=0\n    for j in ${!list[@]}; do\n      if [ ${list[$j]} -lt\
    \ $min ]; then\n        min=${list[$j]}\n        min_index=$j\n      fi\n    \
    \  if [ ${list[$j]} -gt $max ]; then\n        max=${list[$j]}\n        max_index=$j\n\
    \      fi\n    done\n    if [ $((i % 2)) -eq 0 ]; then\n      result+=($min)\n\
    \      unset list[$min_index]\n    else\n      result+=($max)\n      unset list[$max_index]\n\
    \    fi\n    list=(${list[@]})\n    i=$((i + 1))\n  done\n  echo ${result[@]}\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 0
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=($1)\n  local result=()\n  local i=0\n  local j=${#list[@]}\n  while [\
    \ $i -lt $j ]; do\n    local min=${list[0]}\n    local min_index=0\n    local\
    \ max=${list[0]}\n    local max_index=0\n    for ((k=0; k<${#list[@]}; k++));\
    \ do\n      if [ ${list[$k]} -lt $min ]; then\n        min=${list[$k]}\n     \
    \   min_index=$k\n      fi\n      if [ ${list[$k]} -gt $max ]; then\n        max=${list[$k]}\n\
    \        max_index=$k\n      fi\n    done\n    if [ $((i%2)) -eq 0 ]; then\n \
    \     result+=($min)\n      unset list[$min_index]\n    else\n      result+=($max)\n\
    \      unset list[$max_index]\n    fi\n    list=(${list[@]})\n    i=$((i+1))\n\
    \  done\n  echo ${result[@]}\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n\
    \    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1\
    \ 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5\
    \ 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\
    \ -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=($1)\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local\
    \ n=${#list[@]}\n  local m=$((n/2))\n  local tmp=0\n  for ((i=0; i<n; i++)); do\n\
    \    if ((i%2==0)); then\n      tmp=${list[0]}\n      for ((j=0; j<n-1; j++));\
    \ do\n        list[j]=${list[j+1]}\n      done\n      list[n-1]=$tmp\n    else\n\
    \      tmp=${list[n-1]}\n      for ((j=n-1; j>0; j--)); do\n        list[j]=${list[j-1]}\n\
    \      done\n      list[0]=$tmp\n    fi\n    result[k]=$tmp\n    ((k++))\n  done\n\
    \  echo ${result[@]}\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[\
    \ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\"\
    \ ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n\
    \    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[\
    \ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=($1)\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local\
    \ l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local\
    \ r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local\
    \ x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local\
    \ dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n\
    \  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local\
    \ oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n\
    \  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local\
    \ zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n\
    \  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n \
    \ local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local\
    \ ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n\
    \  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n \
    \ local aaaa=0\n  local bbbb=0\n  local cccc=0\n  local dddd=0\n  local eeee\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local res=()\n    local i=0\n    local j=0\n    local k=0\n \
    \   local len=${#list[@]}\n    local min=0\n    local max=0\n    local temp=0\n\
    \    local flag=0\n    for ((i=0; i<len; i++)); do\n        min=${list[i]}\n \
    \       for ((j=i+1; j<len; j++)); do\n            if [[ ${list[j]} -lt $min ]];\
    \ then\n                min=${list[j]}\n                k=$j\n            fi\n\
    \        done\n        temp=${list[i]}\n        list[i]=$min\n        list[k]=$temp\n\
    \    done\n    for ((i=0; i<len; i++)); do\n        if [[ $flag -eq 0 ]]; then\n\
    \            res+=(${list[i]})\n            flag=1\n        else\n           \
    \ res=(${list[i]} ${res[@]})\n            flag=0\n        fi\n    done\n    echo\
    \ ${res[@]}\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a sorted_list=()\n    local -i i=0\n    local -i j=0\n\
    \    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\
    \ -i lll=0\n    local -i mmm=0\n    local -i nnn\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\
    \ -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=$1\n    local -a array=($list)\n    local -a result=()\n    local -i i=0\n\
    \    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local\
    \ -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n\
    \    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local\
    \ -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n\
    \    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n\
    \    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n\
    \    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n\
    \    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n\
    \    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n\
    \    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n\
    \    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n\
    \    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n\
    \    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n\
    \    local -i lll=0\n    local -i mmm=0\n    local\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ -a list=($1)\n  local -a result=()\n  local -i i=0\n  local -i j=${#list[@]}\n\
    \  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n\
    \  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n\
    \  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n\
    \  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i\
    \ dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n \
    \ local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i\
    \ mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n \
    \ local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i\
    \ vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n \
    \ local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local\
    \ -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n\
    \  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local\
    \ -\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a arr=()\n    local -a res=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local n=0\n    local m=0\n    local -i max=0\n    local -i min=0\n    local\
    \ -i max_i=0\n    local -i min_i=0\n    local -i max_j=0\n    local -i min_j=0\n\
    \    local -i max_k=0\n    local -i min_k=0\n    local -i max_m=0\n    local -i\
    \ min_m=0\n    local -i max_n=0\n    local -i min_n=0\n    local -i max_i_j=0\n\
    \    local -i min_i_j=0\n    local -i max_k_m=0\n    local -i min_k_m=0\n    local\
    \ -i max_n_i=0\n    local -i min_n_i=0\n    local -i max_j_k=0\n    local -i min_j_k=0\n\
    \    local -i max_m_n=0\n    local -i min_m_n=0\n    local -i max_i_j_k=0\n  \
    \  local -i min_i_j_k=0\n    local -i max_m_n_i=0\n    local -i min_m_n_i=0\n\
    \    local -i max_j_k_m=0\n    local -i min_j_k_m=0\n    local -i max_n_i_j=0\n\
    \    local -i min_n_i_j=0\n    local -i max_m_n_i_j=0\n    local -i min_m_n_i_j=0\n\
    \    local -i max_j_k_m_n=0\n    local -i min_j_k_m_n=0\n    local -i max_n_i_j_k=0\n\
    \    local -i min_n_i_j_k=0\n    local -i max_m_n_i_j_k=0\n    local -\n}\n\n\
    candidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\"\
    ) = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n \
    \   [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"\
    5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=\"$1\"\n    local result=\"\"\n    local min=\"\"\n    local max=\"\"\n\
    \    local min_index=\"\"\n    local max_index=\"\"\n    local i=0\n    local\
    \ j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n\
    \    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n \
    \   local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n  \
    \  local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n\
    \    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n\
    \    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n\
    \    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n\
    \    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n\
    \    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n\
    \    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local\
    \ hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n\
    \    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local\
    \ qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n\
    \    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local\
    \ zzz=0\n    local aaaa=0\n    local bbbb=\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a arr\n    local -a res\n    local -i i\n    local -i j\n    local -i k\n \
    \   local -i len\n    local -i min\n    local -i max\n    local -i min_index\n\
    \    local -i max_index\n    local -i min_index_found\n    local -i max_index_found\n\
    \    local -i min_found\n    local -i max_found\n    local -i min_found_index\n\
    \    local -i max_found_index\n    local -i min_found_index_found\n    local -i\
    \ max_found_index_found\n    local -i min_found_index_found_index\n    local -i\
    \ max_found_index_found_index\n    local -i min_found_index_found_index_found\n\
    \    local -i max_found_index_found_index_found\n    local -i min_found_index_found_index_found_index\n\
    \    local -i max_found_index_found_index_found_index\n    local -i min_found_index_found_index_found_index_found\n\
    \    local -i max_found_index_found_index_found_index_found\n    local -i min_found_index_found_index_found_index_found_index\n\
    \    local -i max_found_index_found_index_found_index_found_index\n    local -i\
    \ min_found_index_found_index_found_index_found_index_found\n    local -i max_found_index_found_index_found_index_found_index_found\n\
    \    local -i min_found_index_found_index_found_index_found_index_found_index\n\
    \    local -i max_found_index_found_index_found_index_found_index_found_index\n\
    \    local -i min_found_index_found_index_found_index_found_index_found_index_found\n\
    \    local -i max_found_index_found_index_found_index_found_index_found_index_found\n\
    \    local -i min_found_index_found_index_found_index_found_index_found_index_found_index\n\
    \   \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=($1)\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local\
    \ l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local\
    \ r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local\
    \ x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local\
    \ dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n\
    \  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local\
    \ oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n\
    \  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local\
    \ zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n\
    \  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n \
    \ local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local\
    \ ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n\
    \  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n \
    \ local aaaa=0\n  local bbbb=0\n  local cccc=0\n  local dddd=0\n  local eeee\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=($1)\n  local result=()\n  local min=${list[0]}\n  local max=${list[0]}\n\
    \  local min_index=0\n  local max_index=0\n  local i=0\n  local j=0\n  local k=0\n\
    \  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n\
    \  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n\
    \  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n\
    \  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local\
    \ ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n\
    \  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local\
    \ tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n\
    \  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local\
    \ eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n\
    \  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n \
    \ local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local\
    \ uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n\
    \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=($1)\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local\
    \ n=${#list[@]}\n  local m=$((n/2))\n  local min=0\n  local max=0\n  local min_index=0\n\
    \  local max_index=0\n  local min_found=0\n  local max_found=0\n  local temp=0\n\
    \  for ((i=0; i<m; i++)); do\n    min=${list[0]}\n    max=${list[0]}\n    min_index=0\n\
    \    max_index=0\n    min_found=0\n    max_found=0\n    for ((j=0; j<n; j++));\
    \ do\n      if [[ ${list[j]} -lt $min ]]; then\n        min=${list[j]}\n     \
    \   min_index=$j\n        min_found=1\n      fi\n      if [[ ${list[j]} -gt $max\
    \ ]]; then\n        max=${list[j]}\n        max_index=$j\n        max_found=1\n\
    \      fi\n    done\n    if [[ $min_found -eq 1 ]]; then\n      result[k]=$min\n\
    \      ((k++))\n      list[min_index]=$((min+1))\n    fi\n    if [[ $max_found\
    \ -eq 1 ]]; then\n      result[k]=$max\n      ((k++))\n      list[max_index]=$((max-1))\n\
    \    fi\n  done\n  if [[ $((n%2)) -eq 1 ]]; then\n    result[k]=${list[0]}\n \
    \ fi\n  echo ${result[@]}\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n\
    \    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1\
    \ 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5\
    \ 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=$1\n    local result=()\n    local min=0\n    local max=0\n    local min_index=0\n\
    \    local max_index=0\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n \
    \   local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n\
    \    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n\
    \    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n\
    \    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n\
    \    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n\
    \    local aaa=0\n    local bbb=0\n    local ccc=0\n    local ddd=0\n    local\
    \ eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n\
    \    local jjj=0\n    local kkk=0\n    local lll=0\n    local mmm=0\n    local\
    \ nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n\
    \    local sss=0\n    local ttt=0\n    local uuu=0\n    local vvv=0\n    local\
    \ www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n    local aaaa=0\n\
    \    local b\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5\
    \ 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[\
    \ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    \    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate\
    \ \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\"\
    ) = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a sorted=()\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i min=0\n    local -i max=0\n    local -i min_index=0\n    local -i\
    \ max_index=0\n    local -i min_max_index=0\n    local -i max_min_index=0\n  \
    \  local -i min_max_index_len=0\n    local -i max_min_index_len=0\n    local -i\
    \ min_max_index_len_2=0\n    local -i max_min_index_len_2=0\n    local -i min_max_index_len_2_1=0\n\
    \    local -i max_min_index_len_2_1=0\n    local -i min_max_index_len_2_1_1=0\n\
    \    local -i max_min_index_len_2_1_1=0\n    local -i min_max_index_len_2_1_1_1=0\n\
    \    local -i max_min_index_len_2_1_1_1=0\n    local -i min_max_index_len_2_1_1_1_1=0\n\
    \    local -i max_min_index_len_2_1_1_1_1=0\n    local -i min_max_index_len_2_1_1_1_1_1=0\n\
    \    local -i max_min_index_len_2_1_1_1_1_1=0\n    local -i min_max_index_len_2_1_1_1_1_1_1=0\n\
    \    local -i max_min_index_len_2_1_1_1_1_1_1=0\n    local -i min_max_index_len_2_1_1_1_1_1_1_1=0\n\
    \    local -i max_min_index_len_2_1_1_1_1_1_1_1=0\n    local -i min_max_index_len_2_1_\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ -a list=($1)\n  local -a result=()\n  local -i i=0\n  local -i j=0\n  local\
    \ -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local\
    \ -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local\
    \ -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local\
    \ -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n\
    \  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i\
    \ ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n \
    \ local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i\
    \ rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n \
    \ local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i\
    \ aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n\
    \  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local\
    \ -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a array=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n\
    \    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\
    \ -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=${#list[@]}\n\
    \    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\
    \ -i lll=0\n    local -i mmm=0\n    local -\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a sorted\n    local -i i=0\n    local -i j=0\n    local\
    \ -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n\
    \    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local\
    \ -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n\
    \    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i ab=0\n  \
    \  local -i ac=0\n    local -i ad=0\n    local -i ae=0\n    local -i af=0\n  \
    \  local -i ag=0\n    local -i ah=0\n    local -i ai=0\n    local -i aj=0\n  \
    \  local -i ak=0\n    local -i al=0\n    local -i am=0\n    local -i an=0\n  \
    \  local -i ao=0\n    local -i ap=0\n    local -i aq=0\n    local -i ar=0\n  \
    \  local -i as=0\n    local -i at=0\n    local -i au=0\n    local -i av=0\n  \
    \  local -i aw=0\n    local -i ax=0\n    local -i ay=0\n    local -i az=0\n  \
    \  local -i ba=0\n    local -i bb=0\n    local -i bc=0\n    local -i bd=0\n  \
    \  local -i be=0\n    local -i bf=0\n    local -i bg=0\n    local -i bh=0\n  \
    \  local -i bi=0\n    local -i bj=0\n    local -i bk=0\n    local -i bl=0\n  \
    \  local -i bm=0\n    local -i bn=0\n    local -i bo=0\n    local -i bp=0\n}\n\
    \ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\"\
    ) = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n \
    \   [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"\
    5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local n=${#list[@]}\n    local m=$((n / 2))\n    while [ $i -lt $n ]; do\n\
    \        if [ $k -eq 0 ]; then\n            result[$i]=${list[$j]}\n         \
    \   j=$((j + 1))\n        else\n            result[$i]=${list[$m]}\n         \
    \   m=$((m + 1))\n        fi\n        i=$((i + 1))\n        k=$((1 - k))\n   \
    \ done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local min=${list[0]}\n    local max=${list[0]}\n    local min_index=0\n\
    \    local max_index=0\n    local result=()\n    local i=0\n    local j=0\n  \
    \  local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n   \
    \ local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local\
    \ u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n\
    \    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=$1\n  local min=0\n  local max=0\n  local result=()\n  local i=0\n  local\
    \ j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local\
    \ p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local\
    \ v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local\
    \ bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n\
    \  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local\
    \ mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n\
    \  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local\
    \ xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n\
    \  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n \
    \ local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local\
    \ nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n\
    \  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n \
    \ local yyy=0\n  local zzz=0\n  local aaaa=0\n  local bbbb=0\n  local cccc=0\n\
    \  local d\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i len=${#list[@]}\n    local -i is_even=0\n    local\
    \ -i is_odd=0\n    local -i is_even_len=0\n    local -i is_odd_len=0\n    local\
    \ -i is_even_i=0\n    local -i is_odd_i=0\n    local -i is_even_j=0\n    local\
    \ -i is_odd_j=0\n    local -i is_even_k=0\n    local -i is_odd_k=0\n    local\
    \ -i min=0\n    local -i max=0\n    local -i min_i=0\n    local -i max_i=0\n \
    \   local -i min_j=0\n    local -i max_j=0\n    local -i min_k=0\n    local -i\
    \ max_k=0\n    local -i min_len=0\n    local -i max_len=0\n    local -i min_len_i=0\n\
    \    local -i max_len_i=0\n    local -i min_len_j=0\n    local -i max_len_j=0\n\
    \    local -i min_len_k=0\n    local -i max_len_k=0\n    local -i min_len_i_j=0\n\
    \    local -i max_len_i_j=0\n    local -i min_len_i_k=0\n    local -i max_len_i_k=0\n\
    \    local -i min_len_j_k=0\n    local -i max_len_j_k=0\n    local -i min_len_i_j_k=0\n\
    \    local -i max_len_i_j_k=0\n    local -i min_len_i_j_k_len=0\n    local -i\
    \ max_len_i_j_k_len=0\n    local -i min_len_i_j_k_len_i=0\n\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\
    \ -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i len=${#list[@]}\n    local -i sign=1\n    for ((i=0;\
    \ i<len; i++)); do\n        if ((i%2)); then\n            j=$((len-1))\n     \
    \       sign=-1\n        else\n            j=0\n            sign=1\n        fi\n\
    \        k=$((j+sign))\n        while ((k>=0 && k<len)); do\n            if ((list[j]>list[k]));\
    \ then\n                j=$k\n            fi\n            k=$((k+sign))\n    \
    \    done\n        result[i]=${list[j]}\n        list[j]=$((list[j]+1))\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n\
    \    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1\
    \ 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5\
    \ 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local len=${#list[@]}\n    local i=0\n \
    \   local j=0\n    local k=0\n    local tmp=0\n    local min=0\n    local max=0\n\
    \    local min_index=0\n    local max_index=0\n    local min_found=false\n   \
    \ local max_found=false\n    local min_found_index=0\n    local max_found_index=0\n\
    \    local min_found_value=0\n    local max_found_value=0\n    local min_found_value_index=0\n\
    \    local max_found_value_index=0\n    local min_found_value_index_found=false\n\
    \    local max_found_value_index_found=false\n    local min_found_value_index_found_value=0\n\
    \    local max_found_value_index_found_value=0\n    local min_found_value_index_found_value_index=0\n\
    \    local max_found_value_index_found_value_index=0\n    local min_found_value_index_found_value_index_found=false\n\
    \    local max_found_value_index_found_value_index_found=false\n    local min_found_value_index_found_value_index_found_value=0\n\
    \    local max_found_value_index_found_value_index_found_value=0\n    local min_found_value_index_found_value_index_found_value_index=0\n\
    \    local max_found_value_index_found_value_index_found_value_index=0\n    local\
    \ min_found_value_index_found_value_index_found_value_index_found=false\n    local\
    \ max_found_value_index_found_value_index_found_value_index_found=false\n    local\
    \ min_found_value_index_found_value_index_found_value_index_found_value=0\n  \
    \  local max_found_value_index_found_value_index_found_value_index_found_value=0\n\
    \    local min_found_value_index_found_value_index_found_\n}\n\ncandidate() {\n\
    \    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local n=${#list[@]}\n    local m=$((n / 2))\n    for ((i=0; i<m; i++)); do\n\
    \        result[$((k++))]=${list[$i]}\n        result[$((k++))]=${list[$((n -\
    \ i - 1))]}\n    done\n    if [[ $((n % 2)) -eq 1 ]]; then\n        result[$((k++))]=${list[$m]}\n\
    \    fi\n    echo ${result[@]}\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n\
    \    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1\
    \ 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5\
    \ 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=$1\n    local result=\"\"\n    local min=0\n    local max=0\n    local\
    \ min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n    local\
    \ temp=0\n    local temp_index=0\n    local list_length=0\n    local list_array=()\n\
    \    local result_array=()\n    local result_length=0\n    local result_index=0\n\
    \    local result_string=\"\"\n    local result_string_length=0\n    local result_string_temp=\"\
    \"\n    local result_string_temp_length=0\n    local result_string_temp_index=0\n\
    \    local result_string_temp_char=\"\"\n    local result_string_temp_char_code=0\n\
    \    local result_string_temp_char_code_hex=\"\"\n    local result_string_temp_char_code_hex_length=0\n\
    \    local result_string_temp_char_code_hex_char=\"\"\n    local result_string_temp_char_code_hex_char_code=0\n\
    \    local result_string_temp_char_code_hex_char_code_hex=\"\"\n    local result_string_temp_char_code_hex_char_code_hex_length=0\n\
    \    local result_string_temp_char_code_hex_char_code_hex_char=\"\"\n    local\
    \ result_string_temp_char_code_hex_char_code_hex_char_code=0\n    local result_string_temp_char_code_hex_char_code_hex_char_code_hex=\"\
    \"\n    local result_string_temp_char_code_hex_char_code_hex_char_code_hex_length=0\n\
    \    local result_string_temp_char_code_hex_char_code_hex_char_code_hex_char=\"\
    \"\n    local result_string_temp_char_code_hex_char_code_hex_char_code_hex_char_code=0\n\
    \    local result_string_temp_char_code_hex_char_code_hex_char_code_hex_char_code_hex=\"\
    \"\n    local result_string_temp_char_code_hex_char_\n}\n\ncandidate() {\n   \
    \ strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local min=0\n    local max=0\n   \
    \ local i=0\n    local j=0\n    local k=0\n    local n=${#list[@]}\n    local\
    \ tmp=0\n    local tmp_min=0\n    local tmp_max=0\n    local tmp_i=0\n    local\
    \ tmp_j=0\n    local tmp_k=0\n    local tmp_n=0\n    local tmp_result=()\n   \
    \ for ((i=0; i<n; i++)); do\n        if ((list[i] < list[min])); then\n      \
    \      min=$i\n        fi\n        if ((list[i] > list[max])); then\n        \
    \    max=$i\n        fi\n    done\n    if ((min == max)); then\n        for ((i=0;\
    \ i<n; i++)); do\n            result[i]=${list[min]}\n        done\n    else\n\
    \        tmp_min=$min\n        tmp_max=$max\n        tmp_i=$i\n        tmp_j=$j\n\
    \        tmp_k=$k\n        tmp_n=$n\n        tmp_result=(\"${result[@]}\")\n \
    \       for ((i=0; i<n; i++)); do\n            if ((i % 2 == 0)); then\n     \
    \           result[i]=${list[min]}\n                if ((min < max)); then\n \
    \                   min=$((min + 1))\n                fi\n            else\n \
    \               result[i]=${list[max]}\n                if ((max > min)); then\n\
    \                    max=$((max - 1))\n                fi\n            fi\n  \
    \      done\n    fi\n    echo \"[\"$(IFS=,; echo \"${result[*]}\")\"]\"\n}\n\n\
    candidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\"\
    ) = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n \
    \   [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"\
    5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local n=${#list[@]}\n    local min=0\n    local max=0\n    local min_index=0\n\
    \    local max_index=0\n    local tmp=0\n    local tmp_index=0\n    local tmp_index_2=0\n\
    \    local tmp_index_3=0\n    local tmp_index_4=0\n    local tmp_index_5=0\n \
    \   local tmp_index_6=0\n    local tmp_index_7=0\n    local tmp_index_8=0\n  \
    \  local tmp_index_9=0\n    local tmp_index_10=0\n    local tmp_index_11=0\n \
    \   local tmp_index_12=0\n    local tmp_index_13=0\n    local tmp_index_14=0\n\
    \    local tmp_index_15=0\n    local tmp_index_16=0\n    local tmp_index_17=0\n\
    \    local tmp_index_18=0\n    local tmp_index_19=0\n    local tmp_index_20=0\n\
    \    local tmp_index_21=0\n    local tmp_index_22=0\n    local tmp_index_23=0\n\
    \    local tmp_index_24=0\n    local tmp_index_25=0\n    local tmp_index_26=0\n\
    \    local tmp_index_27=0\n    local tmp_index_28=0\n    local tmp_index_29=0\n\
    \    local tmp_index_30=0\n    local tmp_index_31=0\n    local tmp_index_32=0\n\
    \    local tmp_index_33=0\n    local tmp_index_34=0\n    local tmp_index_35=0\n\
    \    local tmp_index_36=0\n    local tmp_index_37=0\n    local tmp_index_38=0\n\
    \    local tmp_index_39=0\n    local tmp_index_40=0\n    local tmp_index_41=0\n\
    \    local tmp_index_42=0\n    local tmp_index_43=0\n    local tmp_index_\n}\n\
    \ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\"\
    ) = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n \
    \   [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"\
    5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local n=${#list[@]}\n    local min=0\n    local max=0\n    local tmp=0\n\
    \    local tmp_index=0\n    local tmp_index_max=0\n    local tmp_index_min=0\n\
    \    local tmp_index_max_min=0\n    local tmp_index_min_max=0\n    local tmp_index_max_min_max=0\n\
    \    local tmp_index_min_max_min=0\n    local tmp_index_max_min_max_min=0\n  \
    \  local tmp_index_min_max_min_max=0\n    local tmp_index_max_min_max_min_max=0\n\
    \    local tmp_index_min_max_min_max_min=0\n    local tmp_index_max_min_max_min_max_min=0\n\
    \    local tmp_index_min_max_min_max_min_max=0\n    local tmp_index_max_min_max_min_max_min_max=0\n\
    \    local tmp_index_min_max_min_max_min_max_min=0\n    local tmp_index_max_min_max_min_max_min_max_min=0\n\
    \    local tmp_index_min_max_min_max_min_max_min_max=0\n    local tmp_index_max_min_max_min_max_min_max_min_max=0\n\
    \    local tmp_index_min_max_min_max_min_max_min_max_min=0\n    local tmp_index_max_min_max_min_max_min_max_min_max_min=0\n\
    \    local tmp_index_min_max_min_max_min_max_min_max_min_max=0\n    local tmp_index_max_min_max_min_max_min_max_min_max_min_max=0\n\
    \    local tmp_index_min_max_min_max_min_max_min_max_min_max_min=0\n    local\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ -a list=($1)\n  local -a result=()\n  local -i i=0\n  local -i j=0\n  local\
    \ -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local\
    \ -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local\
    \ -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local\
    \ -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n\
    \  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i\
    \ ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n \
    \ local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i\
    \ rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n \
    \ local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i\
    \ aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n\
    \  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local\
    \ -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local i=0\n    local j=0\n    local\
    \ k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n\
    \    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n \
    \   local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n  \
    \  local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n   \n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i n=${#list[@]}\n    local -i m=0\n    local -i min=0\n\
    \    local -i max=0\n    local -i min_index=0\n    local -i max_index=0\n    local\
    \ -i min_found=0\n    local -i max_found=0\n    local -i min_found_index=0\n \
    \   local -i max_found_index=0\n    local -i min_found_index_prev=0\n    local\
    \ -i max_found_index_prev=0\n    local -i min_found_prev=0\n    local -i max_found_prev=0\n\
    \    local -i min_found_prev_index=0\n    local -i max_found_prev_index=0\n  \
    \  local -i min_found_prev_index_prev=0\n    local -i max_found_prev_index_prev=0\n\
    \    local -i min_found_prev_prev=0\n    local -i max_found_prev_prev=0\n    local\
    \ -i min_found_prev_prev_index=0\n    local -i max_found_prev_prev_index=0\n \
    \   local -i min_found_prev_prev_index_prev=0\n    local -i max_found_prev_prev_index_prev=0\n\
    \    local -i min_found_prev_prev_prev=0\n    local -i max_found_prev_prev_prev=0\n\
    \    local -i min_found_prev_prev_prev_index=0\n    local -i max_found_prev_prev_prev_index=0\n\
    \    local -i min_found_prev_prev_prev_index_prev=0\n    local -i max_found_prev_prev_prev_index_prev=0\n\
    \    local -i min_found_prev_prev_prev_prev=0\n    local -i max_found_prev_prev_prev_prev=0\n\
    \    local -i min_found_prev_prev_prev_prev_\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=$1\n    local min=\n    local max=\n    local result=\n    local i=\n \
    \   local j=\n    local k=\n    local l=\n    local m=\n    local n=\n    local\
    \ o=\n    local p=\n    local q=\n    local r=\n    local s=\n    local t=\n \
    \   local u=\n    local v=\n    local w=\n    local x=\n    local y=\n    local\
    \ z=\n    local aa=\n    local bb=\n    local cc=\n    local dd=\n    local ee=\n\
    \    local ff=\n    local gg=\n    local hh=\n    local ii=\n    local jj=\n \
    \   local kk=\n    local ll=\n    local mm=\n    local nn=\n    local oo=\n  \
    \  local pp=\n    local qq=\n    local rr=\n    local ss=\n    local tt=\n   \
    \ local uu=\n    local vv=\n    local ww=\n    local xx=\n    local yy=\n    local\
    \ zz=\n    local aaa=\n    local bbb=\n    local ccc=\n    local ddd=\n    local\
    \ eee=\n    local fff=\n    local ggg=\n    local hhh=\n    local iii=\n    local\
    \ jjj=\n    local kkk=\n    local lll=\n    local mmm=\n    local nnn=\n    local\
    \ ooo=\n    local ppp=\n    local qqq=\n    local rrr=\n    local sss=\n    local\
    \ ttt=\n    local uuu=\n    local vvv=\n    local www=\n    local xxx=\n    local\
    \ yyy=\n    local zzz=\n    local aaaa=\n    local bbbb=\n    local cccc=\n  \
    \  local dddd=\n    local eeee=\n    local ffff=\n    local gggg=\n    local hhhh=\n\
    \    local iiii=\n    local jjjj=\n    local kkkk=\n    local llll=\n    local\
    \ mmmm=\n    local nnnn=\n    local oooo=\n   \n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    while [ $i -lt ${#list[@]}\
    \ ]; do\n        local min=${list[0]}\n        local min_index=0\n        local\
    \ max=${list[0]}\n        local max_index=0\n        for j in \"${!list[@]}\"\
    ; do\n            if [ ${list[$j]} -lt $min ]; then\n                min=${list[$j]}\n\
    \                min_index=$j\n            fi\n            if [ ${list[$j]} -gt\
    \ $max ]; then\n                max=${list[$j]}\n                max_index=$j\n\
    \            fi\n        done\n        if [ $((i % 2)) -eq 0 ]; then\n       \
    \     result+=(\"$min\")\n            unset list[$min_index]\n        else\n \
    \           result+=(\"$max\")\n            unset list[$max_index]\n        fi\n\
    \        list=( \"${list[@]}\" )\n        i=$((i + 1))\n    done\n    echo \"\
    ${result[@]}\"\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5\
    \ 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[\
    \ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    \    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate\
    \ \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\"\
    ) = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ -a list=($1)\n  local -a result=()\n  local -i i=0\n  local -i j=0\n  local\
    \ -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local\
    \ -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local\
    \ -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local\
    \ -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n\
    \  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i\
    \ ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n \
    \ local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i\
    \ rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n \
    \ local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i\
    \ aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n\
    \  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local\
    \ -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i n=${#list[@]}\n\
    \    local -i k=0\n    local -i j=0\n    local -i l=0\n    local -i m=0\n    local\
    \ -i min=0\n    local -i max=0\n    local -i min_index=0\n    local -i max_index=0\n\
    \    local -i min_index_temp=0\n    local -i max_index_temp=0\n    local -i min_index_temp2=0\n\
    \    local -i max_index_temp2=0\n    local -i min_index_temp3=0\n    local -i\
    \ max_index_temp3=0\n    local -i min_index_temp4=0\n    local -i max_index_temp4=0\n\
    \    local -i min_index_temp5=0\n    local -i max_index_temp5=0\n    local -i\
    \ min_index_temp6=0\n    local -i max_index_temp6=0\n    local -i min_index_temp7=0\n\
    \    local -i max_index_temp7=0\n    local -i min_index_temp8=0\n    local -i\
    \ max_index_temp8=0\n    local -i min_index_temp9=0\n    local -i max_index_temp9=0\n\
    \    local -i min_index_temp10=0\n    local -i max_index_temp10=0\n    local -i\
    \ min_index_temp11=0\n    local -i max_index_temp11=0\n    local -i min_index_temp12=0\n\
    \    local -i max_index_temp12=0\n    local -i min_index_temp13=0\n    local -i\
    \ max_index_temp13=0\n    local -i min_index_temp14=0\n    local -i max_index_temp14=0\n\
    \    local -i min_index_temp15=0\n    local -i max_index_temp15=0\n    local -i\
    \ min_index_temp16=0\n    local -\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local n=${#list[@]}\n    local m=$((n/2))\n    local tmp=0\n    local min=0\n\
    \    local max=0\n    local min_index=0\n    local max_index=0\n    local min_index_tmp=0\n\
    \    local max_index_tmp=0\n    local min_index_tmp_2=0\n    local max_index_tmp_2=0\n\
    \    local min_index_tmp_3=0\n    local max_index_tmp_3=0\n    local min_index_tmp_4=0\n\
    \    local max_index_tmp_4=0\n    local min_index_tmp_5=0\n    local max_index_tmp_5=0\n\
    \    local min_index_tmp_6=0\n    local max_index_tmp_6=0\n    local min_index_tmp_7=0\n\
    \    local max_index_tmp_7=0\n    local min_index_tmp_8=0\n    local max_index_tmp_8=0\n\
    \    local min_index_tmp_9=0\n    local max_index_tmp_9=0\n    local min_index_tmp_10=0\n\
    \    local max_index_tmp_10=0\n    local min_index_tmp_11=0\n    local max_index_tmp_11=0\n\
    \    local min_index_tmp_12=0\n    local max_index_tmp_12=0\n    local min_index_tmp_13=0\n\
    \    local max_index_tmp_13=0\n    local min_index_tmp_14=0\n    local max_index_tmp_14=0\n\
    \    local min_index_tmp_15=0\n    local max_index_tmp_15=0\n    local min_index_tmp_16=0\n\
    \    local max_index_tmp_16=0\n    local min_index_tmp_17=0\n    local max_index_tmp_17=0\n\
    \    local min_index_tmp_18=0\n    local max_index_tmp_\n}\n\ncandidate() {\n\
    \    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local sorted=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n\
    \    for i in \"${list[@]}\"; do\n        if [[ $i -lt $min ]]; then\n       \
    \     min=$i\n            min_index=$j\n        fi\n        if [[ $i -gt $max\
    \ ]]; then\n            max=$i\n            max_index=$j\n        fi\n       \
    \ j=$((j+1))\n    done\n    sorted+=($min)\n    list[$min_index]=$max\n    if\
    \ [[ ${#list[@]} -gt 1 ]]; then\n        sorted+=($(strange_sort_list \"${list[@]}\"\
    ))\n    fi\n    echo \"${sorted[@]}\"\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local len=${#list[@]}\n    local min=0\n    local max=0\n    local min_index=0\n\
    \    local max_index=0\n    local temp=0\n    local temp_index=0\n    local is_even=0\n\
    \    local is_odd=0\n    local is_even_index=0\n    local is_odd_index=0\n   \
    \ local is_even_min=0\n    local is_odd_min=0\n    local is_even_max=0\n    local\
    \ is_odd_max=0\n    local is_even_min_index=0\n    local is_odd_min_index=0\n\
    \    local is_even_max_index=0\n    local is_odd_max_index=0\n    local is_even_temp=0\n\
    \    local is_odd_temp=0\n    local is_even_temp_index=0\n    local is_odd_temp_index=0\n\
    \    local is_even_len=0\n    local is_odd_len=0\n    local is_even_i=0\n    local\
    \ is_odd_i=0\n    local is_even_j=0\n    local is_odd_j=0\n    local is_even_k=0\n\
    \    local is_odd_k=0\n    local is_even_temp_index=0\n    local is_odd_temp_index=0\n\
    \    local is_even_temp=0\n    local is_odd_temp=0\n    local is_even_min_index=0\n\
    \    local is_odd_min_index=0\n    local is_even_max_index=0\n    local is_odd_max_index=0\n\
    \    local is_even_min=0\n    local is_odd_min=0\n    local is_even_max=0\n  \
    \  local is_odd_max=0\n    local is_even_j=0\n    local is_odd_j=0\n    local\
    \ is_even_k=0\n    local is_odd_k=0\n    local is_even_\n}\n\ncandidate() {\n\
    \    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 2
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    if\
    \ [ -z \"$1\" ]; then\n        echo \"[]\"\n        return\n    fi\n    local\
    \ list=($1)\n    local min=${list[0]}\n    local max=${list[0]}\n    local min_index=0\n\
    \    local max_index=0\n    local result=()\n    local i=0\n    for i in ${!list[@]};\
    \ do\n        if [ \"${list[$i]}\" -lt \"$min\" ]; then\n            min=${list[$i]}\n\
    \            min_index=$i\n        fi\n        if [ \"${list[$i]}\" -gt \"$max\"\
    \ ]; then\n            max=${list[$i]}\"\n            max_index=$i\n        fi\n\
    \    done\n    result+=(\"$min\")\n    list[$min_index]=\"\"\n    result+=(\"\
    $max\")\n    list[$max_index]=\"\"\n    while [ ${#list[@]} -gt 0 ]; do\n    \
    \    min=${list[0]}\n        min_index=0\n        max=${list[0]}\n        max_index=0\n\
    \        for i in ${!list[@]}; do\n            if [ -z \"${list[$i]}\" ]; then\n\
    \                continue\n            fi\n            if [ \"${list[$i]}\" -lt\
    \ \"$min\" ]; then\n                min=${list[$i]}\n                min_index=$i\n\
    \            fi\n            if [ \"${list[$i]}\" -gt \"$max\" ]; then\n     \
    \           max=${list[$i]}\"\n                max_index=$i\n            fi\n\
    \        done\n        result+=(\"$min\")\n        list[$min_index]=\"\"\n   \
    \     result+=(\"$max\")\n        list[$max_index]=\"\"\n    done\n    echo \"\
    [$(IFS=,; echo \"${result[*]}\")]\"\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5ikc_rby.sh: line 62: syntax error near unexpected token `done''

    /tmp/tmp5ikc_rby.sh: line 62: `    done''

    '
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=\"$1\"\n    local result=\"\"\n    local min=\"\"\n    local max=\"\"\n\
    \    local min_index=\"\"\n    local max_index=\"\"\n    local i=0\n    local\
    \ j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n\
    \    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n \
    \   local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n  \
    \  local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n\
    \    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n\
    \    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n\
    \    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n\
    \    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n\
    \    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n\
    \    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local\
    \ hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n\
    \    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local\
    \ qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n\
    \    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local\
    \ zzz=0\n    local aaaa=0\n    local bbbb=\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i len=${#list[@]}\n    local -i min=0\n    local\
    \ -i max=0\n    local -i min_index=0\n    local -i max_index=0\n    local -i tmp=0\n\
    \    local -i tmp_index=0\n    local -i tmp_index2=0\n    local -i tmp_index3=0\n\
    \    local -i tmp_index4=0\n    local -i tmp_index5=0\n    local -i tmp_index6=0\n\
    \    local -i tmp_index7=0\n    local -i tmp_index8=0\n    local -i tmp_index9=0\n\
    \    local -i tmp_index10=0\n    local -i tmp_index11=0\n    local -i tmp_index12=0\n\
    \    local -i tmp_index13=0\n    local -i tmp_index14=0\n    local -i tmp_index15=0\n\
    \    local -i tmp_index16=0\n    local -i tmp_index17=0\n    local -i tmp_index18=0\n\
    \    local -i tmp_index19=0\n    local -i tmp_index20=0\n    local -i tmp_index21=0\n\
    \    local -i tmp_index22=0\n    local -i tmp_index23=0\n    local -i tmp_index24=0\n\
    \    local -i tmp_index25=0\n    local -i tmp_index26=0\n    local -i tmp_index27=0\n\
    \    local -i tmp_index28=0\n    local -i tmp_index29=0\n    local -i tmp_index30=0\n\
    \    local -i tmp_index31=0\n    local -i tmp_index32=0\n    local -i tmp_index33=0\n\
    \    local -i tmp_index34=0\n    local -i tmp_index35=0\n    local -i tmp_index36=0\n\
    \    local -i tmp_index37=0\n    local -i tmp_\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=$1\n    local sorted_list=$(echo $list | tr ' ' '\\n' | sort -n)\n    local\
    \ min_max_list=()\n    local min_max_list_len=0\n    local min_max_list_len_half=0\n\
    \    local min_max_list_len_half_plus_one=0\n    local min_max_list_len_half_minus_one=0\n\
    \    local min_max_list_len_half_minus_one_plus_one=0\n    local min_max_list_len_half_minus_one_plus_one_plus_one=0\n\
    \    local min_max_list_len_half_minus_one_plus_one_plus_one_plus_one=0\n    local\
    \ min_max_list_len_half_minus_one_plus_one_plus_one_plus_one_plus_one=0\n    local\
    \ min_max_list_len_half_minus_one_plus_one_plus_one_plus_one_plus_one_plus_one=0\n\
    \    local min_max_list_len_half_minus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one=0\n\
    \    local min_max_list_len_half_minus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one=0\n\
    \    local min_max_list_len_half_minus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one=0\n\
    \    local min_max_list_len_half_minus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one=0\n\
    \    local min_max_list_len_half_minus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one=0\n\
    \    local min_max_list_len\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n\
    \    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1\
    \ 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5\
    \ 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local n=${#list[@]}\n    local m=$((n/2))\n    local min=0\n    local max=0\n\
    \    local min_index=0\n    local max_index=0\n    local min_found=0\n    local\
    \ max_found=0\n    local min_found_index=0\n    local max_found_index=0\n    local\
    \ min_found_index_2=0\n    local max_found_index_2=0\n    local min_found_2=0\n\
    \    local max_found_2=0\n    local min_index_2=0\n    local max_index_2=0\n \
    \   local min_2=0\n    local max_2=0\n    local min_found_index_3=0\n    local\
    \ max_found_index_3=0\n    local min_found_3=0\n    local max_found_3=0\n    local\
    \ min_index_3=0\n    local max_index_3=0\n    local min_3=0\n    local max_3=0\n\
    \    local min_found_index_4=0\n    local max_found_index_4=0\n    local min_found_4=0\n\
    \    local max_found_4=0\n    local min_index_4=0\n    local max_index_4=0\n \
    \   local min_4=0\n    local max_4=0\n    local min_found_index_5=0\n    local\
    \ max_found_index_5=0\n    local min_found_5=0\n    local max_found_5=0\n    local\
    \ min_index_5=0\n    local max_index_5=0\n    local min_5=0\n    local max_5=0\n\
    \    local min_found_index_6=0\n    local max_found_index_6=0\n    local min_found_6=0\n\
    \    local max_found_6=0\n    local min_index_6=0\n    local max_index_6=0\n \
    \   local min_6=0\n    local\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n\
    \    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1\
    \ 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5\
    \ 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local n=${#list[@]}\n    local min=0\n    local max=0\n    local min_index=0\n\
    \    local max_index=0\n    local tmp=0\n    local tmp_index=0\n    local tmp_index2=0\n\
    \    local tmp_index3=0\n    local tmp_index4=0\n    local tmp_index5=0\n    local\
    \ tmp_index6=0\n    local tmp_index7=0\n    local tmp_index8=0\n    local tmp_index9=0\n\
    \    local tmp_index10=0\n    local tmp_index11=0\n    local tmp_index12=0\n \
    \   local tmp_index13=0\n    local tmp_index14=0\n    local tmp_index15=0\n  \
    \  local tmp_index16=0\n    local tmp_index17=0\n    local tmp_index18=0\n   \
    \ local tmp_index19=0\n    local tmp_index20=0\n    local tmp_index21=0\n    local\
    \ tmp_index22=0\n    local tmp_index23=0\n    local tmp_index24=0\n    local tmp_index25=0\n\
    \    local tmp_index26=0\n    local tmp_index27=0\n    local tmp_index28=0\n \
    \   local tmp_index29=0\n    local tmp_index30=0\n    local tmp_index31=0\n  \
    \  local tmp_index32=0\n    local tmp_index33=0\n    local tmp_index34=0\n   \
    \ local tmp_index35=0\n    local tmp_index36=0\n    local tmp_index37=0\n    local\
    \ tmp_index38=0\n    local tmp_index39=0\n    local tmp_index40=0\n    local tmp_index41=0\n\
    \    local tmp_index42=0\n    local tmp_index43=0\n    local tmp_index44=0\n \
    \   local tmp_index45=0\n    local tmp_index46=0\n    local tmp_index47=0\n  \
    \  local tmp_index48=0\n    local tmp\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=$1\n    local sorted_list=\"\"\n    local min=\"\"\n    local max=\"\"\n\
    \    local min_index=\"\"\n    local max_index=\"\"\n    local i=\"\"\n    local\
    \ j=\"\"\n    local k=\"\"\n    local temp=\"\"\n    local temp_list=\"\"\n  \
    \  local temp_index=\"\"\n    local temp_index_list=\"\"\n    local temp_index_list_length=\"\
    \"\n    local temp_index_list_length_half=\"\"\n    local temp_index_list_length_half_rounded=\"\
    \"\n    local temp_index_list_length_half_rounded_plus_one=\"\"\n    local temp_index_list_length_half_rounded_minus_one=\"\
    \"\n    local temp_index_list_length_half_rounded_minus_two=\"\"\n    local temp_index_list_length_half_rounded_minus_three=\"\
    \"\n    local temp_index_list_length_half_rounded_minus_four=\"\"\n    local temp_index_list_length_half_rounded_minus_five=\"\
    \"\n    local temp_index_list_length_half_rounded_minus_six=\"\"\n    local temp_index_list_length_half_rounded_minus_seven=\"\
    \"\n    local temp_index_list_length_half_rounded_minus_eight=\"\"\n    local\
    \ temp_index_list_length_half_rounded_minus_nine=\"\"\n    local temp_index_list_length_half_rounded_minus_ten=\"\
    \"\n    local temp_index_list_length_half_rounded_minus_eleven=\"\"\n    local\
    \ temp_index_list_length_half_rounded_minus_twelve=\"\"\n    local temp_index_list_length_half_rounded_minus_thirteen=\"\
    \"\n    local temp_index_list_length_half_rounded_minus_fourteen=\"\"\n    local\
    \ temp_index_list_length_half_rounded_minus_fifteen=\"\"\n    local temp_index_list_length_half_rounded_minus_sixteen=\"\
    \"\n    local temp_index_list_length_half_rounded_minus_seventeen=\"\"\n    local\
    \ temp_index_list_length_half_rounded_minus_eighteen=\"\"\n    local temp_index_list_length_half_rounded_minus_nineteen=\"\
    \"\n    local\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5\
    \ 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[\
    \ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    \    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate\
    \ \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\"\
    ) = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local n=${#list[@]}\n    local m=$((n / 2))\n    local tmp=()\n    local\
    \ tmp2=()\n    local tmp3=()\n    local tmp4=()\n    local tmp5=()\n    local\
    \ tmp6=()\n    local tmp7=()\n    local tmp8=()\n    local tmp9=()\n    local\
    \ tmp10=()\n    local tmp11=()\n    local tmp12=()\n    local tmp13=()\n    local\
    \ tmp14=()\n    local tmp15=()\n    local tmp16=()\n    local tmp17=()\n    local\
    \ tmp18=()\n    local tmp19=()\n    local tmp20=()\n    local tmp21=()\n    local\
    \ tmp22=()\n    local tmp23=()\n    local tmp24=()\n    local tmp25=()\n    local\
    \ tmp26=()\n    local tmp27=()\n    local tmp28=()\n    local tmp29=()\n    local\
    \ tmp30=()\n    local tmp31=()\n    local tmp32=()\n    local tmp33=()\n    local\
    \ tmp34=()\n    local tmp35=()\n    local tmp36=()\n    local tmp37=()\n    local\
    \ tmp38=()\n    local tmp39=()\n    local tmp40=()\n    local tmp41=()\n    local\
    \ tmp42=()\n    local tmp43=()\n    local tmp44=()\n    local tmp45=()\n    local\
    \ tmp46=()\n    local tmp47=()\n    local tmp48=()\n    local tmp49=()\n    local\
    \ tmp50=()\n    local tmp51=()\n    local tmp52=()\n    local tmp53=()\n    local\
    \ tmp54=()\n    local tmp55=()\n    local tmp56=()\n    local tmp57=()\n    local\
    \ tmp58=()\n    local tmp59=()\n    local tmp60=()\n    local tmp61=()\n    local\
    \ tmp62=()\n    local tmp63=()\n    local tmp64=()\n    local tmp65=()\n    local\
    \ tmp66\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n\
    \    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local\
    \ -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i\
    \ kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i\
    \ oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i\
    \ ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i\
    \ ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i\
    \ aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i\
    \ ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i\
    \ iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local\
    \ -i mmm=0\n    local -i nnn=0\n    local -i ooo=\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=\"$1\"\n    local result=\"\"\n    local min=\"\"\n    local max=\"\"\n\
    \    local min_index=\"\"\n    local max_index=\"\"\n    local i=0\n    local\
    \ j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n\
    \    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n \
    \   local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n  \
    \  local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n\
    \    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n\
    \    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n\
    \    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n\
    \    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n\
    \    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n\
    \    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local\
    \ hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n\
    \    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local\
    \ qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n\
    \    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local\
    \ zzz=0\n    local aaaa=0\n    local bbbb=\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=($1)\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local\
    \ l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local\
    \ r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local\
    \ x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local\
    \ dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n\
    \  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local\
    \ oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n\
    \  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local\
    \ zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n\
    \  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n \
    \ local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local\
    \ ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n\
    \  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n \
    \ local aaaa=0\n  local bbbb=0\n  local cccc=0\n  local dddd=0\n  local eeee\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\
    \ -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=$1\n    local result=()\n    local min=0\n    local max=0\n    local min_index=0\n\
    \    local max_index=0\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local temp=0\n    local temp_index=0\n    local temp_list=()\n    local\
    \ temp_result=()\n    local temp_min=0\n    local temp_max=0\n    local temp_min_index=0\n\
    \    local temp_max_index=0\n    local temp_i=0\n    local temp_j=0\n    local\
    \ temp_k=0\n    local temp_l=0\n    local temp_temp=0\n    local temp_temp_index=0\n\
    \    local temp_temp_list=()\n    local temp_temp_result=()\n    local temp_temp_min=0\n\
    \    local temp_temp_max=0\n    local temp_temp_min_index=0\n    local temp_temp_max_index=0\n\
    \    local temp_temp_i=0\n    local temp_temp_j=0\n    local temp_temp_k=0\n \
    \   local temp_temp_l=0\n    local temp_temp_temp=0\n    local temp_temp_temp_index=0\n\
    \    local temp_temp_temp_list=()\n    local temp_temp_temp_result=()\n    local\
    \ temp_temp_temp_min=0\n    local temp_temp_temp_max=0\n    local temp_temp_temp_min_index=0\n\
    \    local temp_temp_temp_max_index=0\n    local temp_temp_temp_i=0\n    local\
    \ temp_temp_temp_j=0\n    local temp_temp_temp_k=0\n    local temp_temp_temp_l=0\n\
    \    local temp_temp_temp_temp=0\n    local temp_temp_temp_temp_index=0\n    local\
    \ temp_temp_temp_temp_list=()\n    local temp_temp_temp_temp_result=()\n    local\
    \ temp_temp_temp_temp_min=0\n    local temp_temp_temp_temp_max=0\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local\
    \ m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n\
    \    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n \
    \   local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local ab=0\n\
    \    local ac=0\n    local ad=0\n    local ae=0\n    local af=0\n    local ag=0\n\
    \    local ah=0\n    local ai=0\n    local aj=0\n    local ak=0\n    local al=0\n\
    \    local am=0\n    local an=0\n    local ao=0\n    local ap=0\n    local aq=0\n\
    \    local ar=0\n    local as=0\n    local at=0\n    local au=0\n    local av=0\n\
    \    local aw=0\n    local ax=0\n    local ay=0\n    local az=0\n    local ba=0\n\
    \    local bb=0\n    local bc=0\n    local bd=0\n    local be=0\n    local bf=0\n\
    \    local bg=0\n    local bh=0\n    local bi=0\n    local bj=0\n    local bk=0\n\
    \    local bl=0\n    local bm=0\n    local bn=0\n    local bo=0\n    local bp=0\n\
    \    local bq=0\n    local br=0\n    local bs=0\n    local bt=0\n    local bu=0\n\
    \    local bv=0\n    local bw=0\n    local bx=0\n    local by=0\n    local bz=0\n\
    \    local ca=0\n    local cb=0\n    local cc=0\n    local cd=0\n    local ce=0\n\
    \    local cf=0\n    local cg=0\n    local ch=0\n    local ci=0\n    local c\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=$1\n    local sorted_list=\"\"\n    local min=\"\"\n    local max=\"\"\n\
    \    local min_index=\"\"\n    local max_index=\"\"\n    local i=0\n    local\
    \ j=0\n    local k=0\n    local temp=\"\"\n    local temp_list=\"\"\n    local\
    \ temp_index=\"\"\n    local temp_index_list=\"\"\n    local temp_index_list_length=0\n\
    \    local temp_index_list_length_half=0\n    local temp_index_list_length_half_rounded=0\n\
    \    local temp_index_list_length_half_rounded_plus_one=0\n    local temp_index_list_length_half_rounded_minus_one=0\n\
    \    local temp_index_list_length_half_rounded_plus_one_index=\"\"\n    local\
    \ temp_index_list_length_half_rounded_minus_one_index=\"\"\n    local temp_index_list_length_half_rounded_index=\"\
    \"\n    local temp_index_list_length_half_rounded_index_plus_one=\"\"\n    local\
    \ temp_index_list_length_half_rounded_index_minus_one=\"\"\n    local temp_index_list_length_half_rounded_index_plus_one_value=\"\
    \"\n    local temp_index_list_length_half_rounded_index_minus_one_value=\"\"\n\
    \    local temp_index_list_length_half_rounded_index_value=\"\"\n    local temp_index_list_length_half_rounded_index_value_plus_one=\"\
    \"\n    local temp_index_list_length_half_rounded_index_value_minus_one=\"\"\n\
    \    local temp_index_list_length_half_rounded_index_value_plus_one_index=\"\"\
    \n    local temp_index_list_length_half_rounded_index_value_minus_one_index=\"\
    \"\n    local temp_index_list_length_half_rounded_index_value_plus_one_index_plus_one=\"\
    \"\n    local temp_index_list_length_half_rounded_index_value_minus_one_index_plus_one=\"\
    \"\n    local temp_index_list_length_half_rounded_index_value_plus_one_index_minus_\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a arr=()\n    local -a res=()\n    local -a tmp=()\n    local i=0\n    local\
    \ j=0\n    local k=0\n    local n=0\n    local m=0\n    local l=0\n    local x=0\n\
    \    local y=0\n    local z=0\n    local p=0\n    local q=0\n    local r=0\n \
    \   local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n  \
    \  local a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n   \
    \ local f=0\n    local g=0\n    local h=0\n    local o=0\n    local p=0\n    local\
    \ q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n\
    \    local w=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n \
    \   local e=0\n    local f=0\n    local g=0\n    local h=0\n    local o=0\n  \
    \  local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n   \
    \ local u=0\n    local v=0\n    local w=0\n    local a=0\n    local b=0\n    local\
    \ c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n\
    \    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n \
    \   local t=0\n    local u=0\n    local v=0\n    local w=0\n    local a=0\n  \
    \  local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n   \
    \ local g=0\n    local h=0\n    local o=0\n    local p=0\n    local q=0\n    local\
    \ r=0\n    local s=0\n   \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n\
    \    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1\
    \ 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5\
    \ 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a arr=($1)\n    local -a res=()\n    local -i i=0\n    local -i j=${#arr[@]}-1\n\
    \    local -i k=0\n    while ((i <= j)); do\n        if ((k % 2 == 0)); then\n\
    \            res[k]=${arr[i]}\n            ((i++))\n        else\n           \
    \ res[k]=${arr[j]}\n            ((j--))\n        fi\n        ((k++))\n    done\n\
    \    echo \"${res[@]}\"\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n   \
    \ [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3\
    \ 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6\
    \ 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    while [ $i -lt ${#list[@]}\
    \ ]; do\n        local min=${list[0]}\n        local min_index=0\n        local\
    \ max=${list[0]}\n        local max_index=0\n        local j=0\n        while\
    \ [ $j -lt ${#list[@]} ]; do\n            if [ ${list[$j]} -lt $min ]; then\n\
    \                min=${list[$j]}\n                min_index=$j\n            fi\n\
    \            if [ ${list[$j]} -gt $max ]; then\n                max=${list[$j]}\n\
    \                max_index=$j\n            fi\n            j=$((j+1))\n      \
    \  done\n        if [ $((i%2)) -eq 0 ]; then\n            result+=($min)\n   \
    \         list[$min_index]=$max\n        else\n            result+=($max)\n  \
    \          list[$max_index]=$min\n        fi\n        i=$((i+1))\n    done\n \
    \   echo ${result[@]}\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[\
    \ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\"\
    \ ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n\
    \    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[\
    \ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a sorted_list=()\n    local -i i=0\n    local -i j=0\n\
    \    local -i k=0\n    local -i l=0\n    local -i n=${#list[@]}\n    local -i\
    \ m=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\
    \ -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n\n}\n\ncandidate() {\n   \
    \ strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local n=${#list[@]}\n    local min=0\n    local max=0\n    local min_index=0\n\
    \    local max_index=0\n    local temp=0\n    for ((i=0; i<n; i++)); do\n    \
    \    min=${list[0]}\n        max=${list[0]}\n        min_index=0\n        max_index=0\n\
    \        for ((j=0; j<n; j++)); do\n            if [[ ${list[j]} -lt $min ]];\
    \ then\n                min=${list[j]}\n                min_index=$j\n       \
    \     fi\n            if [[ ${list[j]} -gt $max ]]; then\n                max=${list[j]}\n\
    \                max_index=$j\n            fi\n        done\n        if [[ $i\
    \ -eq 0 ]]; then\n            result[k]=$min\n            list[min_index]=$max\n\
    \        else\n            result[k]=$max\n            list[max_index]=$min\n\
    \        fi\n        k=$((k+1))\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i n=${#list[@]}\n    local -i m=n/2\n    for ((i=0;\
    \ i<m; i++)); do\n        result[k++]=${list[i]}\n        result[k++]=${list[n-i-1]}\n\
    \    done\n    if ((n%2)); then\n        result[k++]=${list[m]}\n    fi\n    echo\
    \ \"[$(join_by ', ' \"${result[@]}\")]\"\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpeyfm4w9q.sh: line 29: join_by: command not found

    '
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=($1)\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local\
    \ l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local\
    \ r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local\
    \ x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local\
    \ dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n\
    \  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local\
    \ oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n\
    \  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local\
    \ zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n\
    \  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n \
    \ local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local\
    \ ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n\
    \  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n \
    \ local aaaa=0\n  local bbbb=0\n  local cccc=0\n  local dddd=0\n  local eeee\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local n=${#list[@]}\n    local m=$((n / 2))\n    local l=$((n - 1))\n   \
    \ for ((i = 0; i < m; i++)); do\n        result[$((j++))]=${list[$i]}\n      \
    \  result[$((l--))]=${list[$((n - i - 1))]}\n    done\n    if ((n % 2)); then\n\
    \        result[$((j++))]=${list[$((n / 2))]}\n    fi\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\
    \ -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local n=${#list[@]}\n    local m=$((n/2))\n    local min=0\n    local max=0\n\
    \    local min_index=0\n    local max_index=0\n    local min_found=0\n    local\
    \ max_found=0\n    local min_found_index=0\n    local max_found_index=0\n    local\
    \ min_found_index_2=0\n    local max_found_index_2=0\n    local min_found_2=0\n\
    \    local max_found_2=0\n    local min_index_2=0\n    local max_index_2=0\n \
    \   local min_2=0\n    local max_2=0\n    local min_found_index_3=0\n    local\
    \ max_found_index_3=0\n    local min_found_3=0\n    local max_found_3=0\n    local\
    \ min_index_3=0\n    local max_index_3=0\n    local min_3=0\n    local max_3=0\n\
    \    local min_found_index_4=0\n    local max_found_index_4=0\n    local min_found_4=0\n\
    \    local max_found_4=0\n    local min_index_4=0\n    local max_index_4=0\n \
    \   local min_4=0\n    local max_4=0\n    local min_found_index_5=0\n    local\
    \ max_found_index_5=0\n    local min_found_5=0\n    local max_found_5=0\n    local\
    \ min_index_5=0\n    local max_index_5=0\n    local min_5=0\n    local max_5=0\n\
    \    local min_found_index_6=0\n    local max_found_index_6=0\n    local min_found_6=0\n\
    \    local max_found_6=0\n    local min_index_6=0\n    local max_index_6=0\n \
    \   local min_6=0\n    local\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n\
    \    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1\
    \ 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5\
    \ 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local len=${#list[@]}\n    local min=0\n    local max=0\n    local min_index=0\n\
    \    local max_index=0\n    local temp=0\n    local temp_index=0\n    local temp_index2=0\n\
    \    local temp_index3=0\n    local temp_index4=0\n    local temp_index5=0\n \
    \   local temp_index6=0\n    local temp_index7=0\n    local temp_index8=0\n  \
    \  local temp_index9=0\n    local temp_index10=0\n    local temp_index11=0\n \
    \   local temp_index12=0\n    local temp_index13=0\n    local temp_index14=0\n\
    \    local temp_index15=0\n    local temp_index16=0\n    local temp_index17=0\n\
    \    local temp_index18=0\n    local temp_index19=0\n    local temp_index20=0\n\
    \    local temp_index21=0\n    local temp_index22=0\n    local temp_index23=0\n\
    \    local temp_index24=0\n    local temp_index25=0\n    local temp_index26=0\n\
    \    local temp_index27=0\n    local temp_index28=0\n    local temp_index29=0\n\
    \    local temp_index30=0\n    local temp_index31=0\n    local temp_index32=0\n\
    \    local temp_index33=0\n    local temp_index34=0\n    local temp_index35=0\n\
    \    local temp_index36=0\n    local temp_index37=0\n    local temp_index38=0\n\
    \    local temp_index39=0\n    local temp_index40=0\n    local temp_index41=0\n\
    \    local temp_index42=0\n    local temp_index43=0\n    local temp_index44=0\n\
    \    local temp_index45=0\n    local temp_index46=0\n    local temp_index47=0\n\
    \    local temp_index48=0\n    local temp\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n\
    \    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n\
    \    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n\
    \    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n\
    \    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n\
    \    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n\
    \    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local\
    \ hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n\
    \    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local\
    \ qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n\
    \    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local\
    \ zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local n=${#list[@]}\n    local m=$((n/2))\n    local tmp=0\n    local min=0\n\
    \    local max=0\n    local min_index=0\n    local max_index=0\n    local min_index_tmp=0\n\
    \    local max_index_tmp=0\n    local min_index_tmp_2=0\n    local max_index_tmp_2=0\n\
    \    local min_index_tmp_3=0\n    local max_index_tmp_3=0\n    local min_index_tmp_4=0\n\
    \    local max_index_tmp_4=0\n    local min_index_tmp_5=0\n    local max_index_tmp_5=0\n\
    \    local min_index_tmp_6=0\n    local max_index_tmp_6=0\n    local min_index_tmp_7=0\n\
    \    local max_index_tmp_7=0\n    local min_index_tmp_8=0\n    local max_index_tmp_8=0\n\
    \    local min_index_tmp_9=0\n    local max_index_tmp_9=0\n    local min_index_tmp_10=0\n\
    \    local max_index_tmp_10=0\n    local min_index_tmp_11=0\n    local max_index_tmp_11=0\n\
    \    local min_index_tmp_12=0\n    local max_index_tmp_12=0\n    local min_index_tmp_13=0\n\
    \    local max_index_tmp_13=0\n    local min_index_tmp_14=0\n    local max_index_tmp_14=0\n\
    \    local min_index_tmp_15=0\n    local max_index_tmp_15=0\n    local min_index_tmp_16=0\n\
    \    local max_index_tmp_16=0\n    local min_index_tmp_17=0\n    local max_index_tmp_17=0\n\
    \    local min_index_tmp_18=0\n    local max_index_tmp_\n}\n\ncandidate() {\n\
    \    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i len=${#list[@]}\n    local -i min=0\n    local -i max=0\n    local\
    \ -i min_index=0\n    local -i max_index=0\n    local -i tmp=0\n    local -i tmp_index=0\n\
    \    local -i tmp_index2=0\n    local -i tmp_index3=0\n    local -i tmp_index4=0\n\
    \    local -i tmp_index5=0\n    local -i tmp_index6=0\n    local -i tmp_index7=0\n\
    \    local -i tmp_index8=0\n    local -i tmp_index9=0\n    local -i tmp_index10=0\n\
    \    local -i tmp_index11=0\n    local -i tmp_index12=0\n    local -i tmp_index13=0\n\
    \    local -i tmp_index14=0\n    local -i tmp_index15=0\n    local -i tmp_index16=0\n\
    \    local -i tmp_index17=0\n    local -i tmp_index18=0\n    local -i tmp_index19=0\n\
    \    local -i tmp_index20=0\n    local -i tmp_index21=0\n    local -i tmp_index22=0\n\
    \    local -i tmp_index23=0\n    local -i tmp_index24=0\n    local -i tmp_index25=0\n\
    \    local -i tmp_index26=0\n    local -i tmp_index27=0\n    local -i tmp_index28=0\n\
    \    local -i tmp_index29=0\n    local -i tmp_index30=0\n    local -i tmp_index31=0\n\
    \    local -i tmp_index32=0\n    local -i tmp_index33=0\n    local -i tmp_index34=0\n\
    \    local -i tmp_index35=0\n    local -i tmp_index36=0\n    local -i tmp_index37=0\n\
    \    local -i tmp_index38=0\n    local -\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i len=${#list[@]}\n    local -i half=0\n    local\
    \ -i min=0\n    local -i max=0\n    local -i min_index=0\n    local -i max_index=0\n\
    \    local -i tmp=0\n    local -i tmp_index=0\n    local -i tmp_index2=0\n   \
    \ local -i tmp_index3=0\n    local -i tmp_index4=0\n    local -i tmp_index5=0\n\
    \    local -i tmp_index6=0\n    local -i tmp_index7=0\n    local -i tmp_index8=0\n\
    \    local -i tmp_index9=0\n    local -i tmp_index10=0\n    local -i tmp_index11=0\n\
    \    local -i tmp_index12=0\n    local -i tmp_index13=0\n    local -i tmp_index14=0\n\
    \    local -i tmp_index15=0\n    local -i tmp_index16=0\n    local -i tmp_index17=0\n\
    \    local -i tmp_index18=0\n    local -i tmp_index19=0\n    local -i tmp_index20=0\n\
    \    local -i tmp_index21=0\n    local -i tmp_index22=0\n    local -i tmp_index23=0\n\
    \    local -i tmp_index24=0\n    local -i tmp_index25=0\n    local -i tmp_index26=0\n\
    \    local -i tmp_index27=0\n    local -i tmp_index28=0\n    local -i tmp_index29=0\n\
    \    local -i tmp_index30=0\n    local -i tmp_index31=0\n    local -i tmp_index32=0\n\
    \    local -i tmp_index33=0\n    local -i tmp_index34=0\n    local -i tmp_index35=0\n\
    \    local -i tmp_index36=0\n    local -i tmp_index37=\n}\n\ncandidate() {\n \
    \   strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=($1)\n  local result=()\n  local i=0\n  local j=${#list[@]}\n  local k=0\n\
    \  while [ $i -lt $j ]; do\n    if [ $k -eq 0 ]; then\n      result[$i]=$(echo\
    \ \"${list[@]}\" | tr ' ' '\\n' | sort -n | head -n 1)\n      list=($(echo \"\
    ${list[@]}\" | tr ' ' '\\n' | grep -v ${result[$i]}))\n    else\n      result[$i]=$(echo\
    \ \"${list[@]}\" | tr ' ' '\\n' | sort -n | tail -n 1)\n      list=($(echo \"\
    ${list[@]}\" | tr ' ' '\\n' | grep -v ${result[$i]}))\n    fi\n    k=$((k ^ 1))\n\
    \    i=$((i + 1))\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'Usage: grep [OPTION]... PATTERNS [FILE]...

    Try ''grep --help'' for more information.

    Usage: grep [OPTION]... PATTERNS [FILE]...

    Try ''grep --help'' for more information.

    Usage: grep [OPTION]... PATTERNS [FILE]...

    Try ''grep --help'' for more information.

    '
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=($1)\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local\
    \ l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local\
    \ r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local\
    \ x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local\
    \ dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n\
    \  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local\
    \ oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n\
    \  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local\
    \ zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n\
    \  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n \
    \ local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local\
    \ ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n\
    \  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n \
    \ local aaaa=0\n  local bbbb=0\n  local cccc=0\n  local dddd=0\n  local eeee\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=\"$1\"\n    local result=\"\"\n    local min=0\n    local max=0\n    local\
    \ min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n    local\
    \ tmp=0\n    local tmp_index=0\n    local tmp_list=\"\"\n    local tmp_result=\"\
    \"\n    local tmp_min=0\n    local tmp_max=0\n    local tmp_min_index=0\n    local\
    \ tmp_max_index=0\n    local tmp_i=0\n    local tmp_j=0\n    local tmp_tmp=0\n\
    \    local tmp_tmp_index=0\n    local tmp_tmp_list=\"\"\n    local tmp_tmp_result=\"\
    \"\n    local tmp_tmp_min=0\n    local tmp_tmp_max=0\n    local tmp_tmp_min_index=0\n\
    \    local tmp_tmp_max_index=0\n    local tmp_tmp_i=0\n    local tmp_tmp_j=0\n\
    \    local tmp_tmp_tmp=0\n    local tmp_tmp_tmp_index=0\n    local tmp_tmp_tmp_list=\"\
    \"\n    local tmp_tmp_tmp_result=\"\"\n    local tmp_tmp_tmp_min=0\n    local\
    \ tmp_tmp_tmp_max=0\n    local tmp_tmp_tmp_min_index=0\n    local tmp_tmp_tmp_max_index=0\n\
    \    local tmp_tmp_tmp_i=0\n    local tmp_tmp_tmp_j=0\n    local tmp_tmp_tmp_tmp=0\n\
    \    local tmp_tmp_tmp_tmp_index=0\n    local tmp_tmp_tmp_tmp_list=\"\"\n    local\
    \ tmp_tmp_tmp_tmp_result=\"\"\n    local tmp_tmp_tmp_tmp_min=0\n    local tmp_tmp_tmp_tmp_max=0\n\
    \    local tmp_tmp_tmp_tmp_min_index=0\n    local tmp_tmp_tmp_tmp_max_index=0\n\
    \    local tmp_tmp_tmp_tmp_i=0\n    local tmp_tmp_tmp_tmp_j=0\n    local tmp_tmp_tmp_tmp_tmp=0\n\
    \    local tmp_\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5\
    \ 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[\
    \ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    \    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate\
    \ \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\"\
    ) = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i len=${#list[@]}\n    local -i half=$(($len / 2))\n\
    \    local -i min=0\n    local -i max=0\n    local -i min_index=0\n    local -i\
    \ max_index=0\n    local -i min_found=0\n    local -i max_found=0\n    local -i\
    \ min_found_index=0\n    local -i max_found_index=0\n    local -i min_found_index_prev=0\n\
    \    local -i max_found_index_prev=0\n    local -i min_found_index_next=0\n  \
    \  local -i max_found_index_next=0\n    local -i min_found_index_prev_prev=0\n\
    \    local -i max_found_index_prev_prev=0\n    local -i min_found_index_next_next=0\n\
    \    local -i max_found_index_next_next=0\n    local -i min_found_index_prev_prev_prev=0\n\
    \    local -i max_found_index_prev_prev_prev=0\n    local -i min_found_index_next_next_next=0\n\
    \    local -i max_found_index_next_next_next=0\n    local -i min_found_index_prev_prev_prev_prev=0\n\
    \    local -i max_found_index_prev_prev_prev_prev=0\n    local -i min_found_index_next_next_next_next=0\n\
    \    local -i max_found_index_next_next_next_next=0\n    local -i min_found_index_prev_prev_prev_prev_prev=0\n\
    \    local -i max_found_index_prev_prev_prev_prev_prev=0\n    local -i min_found_index_next_next_next_next_next=0\n\
    \    local -i max_found_index_next_next_next_next_next=0\n    local -\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=($1)\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local\
    \ l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local\
    \ r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local\
    \ x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local\
    \ dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n\
    \  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local\
    \ oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n\
    \  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local\
    \ zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n\
    \  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n \
    \ local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local\
    \ ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n\
    \  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n \
    \ local aaaa=0\n  local bbbb=0\n  local cccc=0\n  local dddd=0\n  local eeee\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=\"$1\"\n    local result=\"\"\n    local min=0\n    local max=0\n    local\
    \ i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n\
    \    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n \
    \   local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n  \
    \  local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n\
    \    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n\
    \    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n\
    \    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n\
    \    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n\
    \    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n\
    \    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local\
    \ ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n\
    \    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local\
    \ ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n\
    \    local uuu=0\n    local vvv=0\n    local www=0\n    local xxx=0\n    local\
    \ yyy=0\n    local zzz=0\n    local aaaa=0\n    local bbbb=0\n    local cccc=0\n\
    \    local\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=($1)\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local\
    \ len=${#list[@]}\n  local min=0\n  local max=0\n  local min_index=0\n  local\
    \ max_index=0\n  local temp=0\n  local temp_index=0\n  local temp_index2=0\n \
    \ local temp_index3=0\n  local temp_index4=0\n  local temp_index5=0\n  local temp_index6=0\n\
    \  local temp_index7=0\n  local temp_index8=0\n  local temp_index9=0\n  local\
    \ temp_index10=0\n  local temp_index11=0\n  local temp_index12=0\n  local temp_index13=0\n\
    \  local temp_index14=0\n  local temp_index15=0\n  local temp_index16=0\n  local\
    \ temp_index17=0\n  local temp_index18=0\n  local temp_index19=0\n  local temp_index20=0\n\
    \  local temp_index21=0\n  local temp_index22=0\n  local temp_index23=0\n  local\
    \ temp_index24=0\n  local temp_index25=0\n  local temp_index26=0\n  local temp_index27=0\n\
    \  local temp_index28=0\n  local temp_index29=0\n  local temp_index30=0\n  local\
    \ temp_index31=0\n  local temp_index32=0\n  local temp_index33=0\n  local temp_index34=0\n\
    \  local temp_index35=0\n  local temp_index36=0\n  local temp_index37=0\n  local\
    \ temp_index38=0\n  local temp_index39=0\n  local temp_index40=0\n  local temp_index41=0\n\
    \  local temp_index42=0\n  local temp_index43=0\n  local temp_index44=0\n  local\
    \ temp_index45=0\n  local temp_index46=0\n  local temp_index47=0\n  local temp_index48=0\n\
    \  local temp\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5\
    \ 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[\
    \ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    \    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate\
    \ \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\"\
    ) = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=$1\n    local min=$(echo \"$list\" | tr ' ' '\\n' | sort -n | head -n 1)\n\
    \    local max=$(echo \"$list\" | tr ' ' '\\n' | sort -n | tail -n 1)\n    local\
    \ min_list=$(echo \"$list\" | tr ' ' '\\n' | sort -n | grep -v \"$max\")\n   \
    \ local max_list=$(echo \"$list\" | tr ' ' '\\n' | sort -n | grep -v \"$min\"\
    )\n    local min_list_len=$(echo \"$min_list\" | wc -l)\n    local max_list_len=$(echo\
    \ \"$max_list\" | wc -l)\n    local min_list_len_half=$((min_list_len / 2))\n\
    \    local max_list_len_half=$((max_list_len / 2))\n    local min_list_first_half=$(echo\
    \ \"$min_list\" | head -n \"$min_list_len_half\")\n    local min_list_second_half=$(echo\
    \ \"$min_list\" | tail -n \"$min_list_len_half\")\n    local max_list_first_half=$(echo\
    \ \"$max_list\" | head -n \"$max_list_len_half\")\n    local max_list_second_half=$(echo\
    \ \"$max_list\" | tail -n \"$max_list_len_half\")\n    local min_list_first_half_len=$(echo\
    \ \"$min_list_first_half\" | wc -l)\n    local min_list_second_half_len=$(echo\
    \ \"$min_list_second_half\" | wc -l)\n    local max_list_first_half_len=$(echo\
    \ \"$max_list_first_half\" | wc -l)\n    local max_list_second_half_len=$(echo\
    \ \"$max_list_second_half\" | wc -l)\n    local min_list_first_half_last=$(echo\
    \ \"$min_list_first_half\" | tail -n 1)\n    local min_list_second_half_first=$(echo\
    \ \"$min_list_second_half\" | head -n 1)\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=\"$1\"\n    local sorted_list=\"\"\n    local min=\"\"\n    local max=\"\
    \"\n    local min_index=\"\"\n    local max_index=\"\"\n    local i=\"\"\n   \
    \ local j=\"\"\n    local k=\"\"\n    local l=\"\"\n    local m=\"\"\n    local\
    \ n=\"\"\n    local o=\"\"\n    local p=\"\"\n    local q=\"\"\n    local r=\"\
    \"\n    local s=\"\"\n    local t=\"\"\n    local u=\"\"\n    local v=\"\"\n \
    \   local w=\"\"\n    local x=\"\"\n    local y=\"\"\n    local z=\"\"\n    local\
    \ aa=\"\"\n    local bb=\"\"\n    local cc=\"\"\n    local dd=\"\"\n    local\
    \ ee=\"\"\n    local ff=\"\"\n    local gg=\"\"\n    local hh=\"\"\n    local\
    \ ii=\"\"\n    local jj=\"\"\n    local kk=\"\"\n    local ll=\"\"\n    local\
    \ mm=\"\"\n    local nn=\"\"\n    local oo=\"\"\n    local pp=\"\"\n    local\
    \ qq=\"\"\n    local rr=\"\"\n    local ss=\"\"\n    local tt=\"\"\n    local\
    \ uu=\"\"\n    local vv=\"\"\n    local ww=\"\"\n    local xx=\"\"\n    local\
    \ yy=\"\"\n    local zz=\"\"\n    local aaa=\"\"\n    local bbb=\"\"\n    local\
    \ ccc=\"\"\n    local ddd=\"\"\n    local eee=\"\"\n    local fff=\"\"\n    local\
    \ ggg=\"\"\n    local hhh=\"\"\n    local iii=\"\"\n    local jjj=\"\"\n    local\
    \ kkk=\"\"\n    local lll=\"\"\n    local mmm=\"\"\n    local nnn=\"\"\n    local\
    \ ooo=\"\"\n    local ppp=\"\"\n    local qqq=\"\"\n    local rrr=\"\"\n    local\
    \ sss=\"\"\n    local ttt=\"\"\n    local uuu=\"\"\n    local vvv=\"\"\n    local\
    \ www=\"\"\n    local xxx=\"\"\n    local yyy=\"\"\n    local zzz=\"\"\n    local\
    \ aaaa=\"\"\n    local bbbb=\"\"\n    local cccc=\"\"\n    local dddd=\"\"\n \
    \   local eeee=\"\"\n    local ffff=\"\"\n    local gggg=\"\"\n    local hhhh=\"\
    \"\n    local iiii=\"\"\n    local jjjj=\"\"\n    local kkkk=\"\"\n    local llll=\"\
    \"\n    local\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5\
    \ 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[\
    \ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    \    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate\
    \ \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\"\
    ) = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a sorted\n    local -i i=0\n    local -i j=0\n    local\
    \ -i k=0\n    local -i n=${#list[@]}\n    local -i m=0\n    local -i p=0\n   \
    \ local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local\
    \ -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n\
    \    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local\
    \ -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n\
    \    local -i l=0\n    local -i o=0\n    local -i min=0\n    local -i max=0\n\
    \    local -i min_index=0\n    local -i max_index=0\n    local -i min_index_remaining=0\n\
    \    local -i max_index_remaining=0\n    local -i min_remaining=0\n    local -i\
    \ max_remaining=0\n    local -i min_remaining_index=0\n    local -i max_remaining_index=0\n\
    \    local -i min_remaining_index_remaining=0\n    local -i max_remaining_index_remaining=0\n\
    \    local -i min_remaining_remaining=0\n    local -i max_remaining_remaining=0\n\
    \    local -i min_remaining_remaining_index=0\n    local -i max_remaining_remaining_index=0\n\
    \    local -i min_remaining_remaining_index_remaining=0\n    local -i max_remaining_remaining_index_remaining=0\n\
    \    local -i min_remaining_remaining_remaining=0\n    local -i max_remaining_remaining_remaining=0\n\
    \    local -i min_remaining\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n\
    \    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1\
    \ 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5\
    \ 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local sorted=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n\
    \    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n\
    \    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n\
    \    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n\
    \    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n\
    \    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n\
    \    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local\
    \ hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n\
    \    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local\
    \ qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n\
    \    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local\
    \ zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=$1\n  local sorted_list=$(echo $list | tr ' ' '\\n' | sort -n)\n  local\
    \ min=$(echo $sorted_list | cut -d ' ' -f 1)\n  local max=$(echo $sorted_list\
    \ | cut -d ' ' -f $(echo $sorted_list | wc -w))\n  local min_max_list=$(echo $sorted_list\
    \ | sed \"s/$min//g\" | sed \"s/$max//g\")\n  local result=$(echo $min $min_max_list\
    \ $max)\n  echo $result\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n   \
    \ [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3\
    \ 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6\
    \ 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local sorted_list=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    for ((i=0; i<${#list[@]}; i++)); do\n     \
    \   if [[ ${list[$i]} -lt $min ]]; then\n            min=${list[$i]}\n       \
    \     min_index=$i\n        fi\n        if [[ ${list[$i]} -gt $max ]]; then\n\
    \            max=${list[$i]}\n            max_index=$i\n        fi\n    done\n\
    \    for ((j=0; j<${#list[@]}; j++)); do\n        if [[ $j%2 -eq 0 ]]; then\n\
    \            sorted_list[$j]=$min\n            list[$min_index]=$max\n       \
    \ else\n            sorted_list[$j]=$max\n            list[$max_index]=$min\n\
    \        fi\n        min=${list[0]}\n        max=${list[0]}\n        min_index=0\n\
    \        max_index=0\n        for ((k=0; k<${#list[@]}; k++)); do\n          \
    \  if [[ ${list[$k]} -lt $min ]]; then\n                min=${list[$k]}\n    \
    \            min_index=$k\n            fi\n            if [[ ${list[$k]} -gt $max\
    \ ]]; then\n                max=${list[$k]}\n                max_index=$k\n  \
    \          fi\n        done\n    done\n    for ((l=0; l<${#sorted_list[@]}; l++));\
    \ do\n        echo -n '\"'${sorted_list[$l]}'\"'\n        if [[ $l -lt $((${#sorted_list[@]}-1))\
    \ ]]; then\n            echo -n ', '\n        fi\n    done\n    echo\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=$1\n    local -a array\n    local -a result\n    local -i i=0\n    local\
    \ -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n\
    \    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local\
    \ -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n\
    \    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n   \
    \ local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n   \
    \ local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n   \
    \ local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n   \
    \ local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n   \
    \ local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n   \
    \ local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n   \
    \ local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n\
    \    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n\
    \    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n\
    \    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n\
    \    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n\
    \    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n\
    \    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n\
    \    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n\
    \    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n\
    \    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local\
    \ hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n\
    \    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local\
    \ qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n\
    \    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local\
    \ zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i l=0\n    local -i n=${#list[@]}\n    local -i m=0\n\
    \    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local\
    \ -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n\
    \    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n  \
    \  local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n  \
    \  local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n  \
    \  local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n  \
    \  local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n  \
    \  local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n  \
    \  local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n  \
    \  local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n\
    \    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n\
    \    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n\
    \    local -i mmm=0\n    local -i nnn=0\n    local\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n\
    \    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n\
    \    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n\
    \    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n\
    \    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n\
    \    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n\
    \    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local\
    \ hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n\
    \    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local\
    \ qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n\
    \    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local\
    \ zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=($1)\n  local sorted=()\n  local min=${list[0]}\n  local max=${list[0]}\n\
    \  local min_index=0\n  local max_index=0\n  local i=0\n  local j=0\n  local k=0\n\
    \  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n\
    \  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n\
    \  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n\
    \  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local\
    \ ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n\
    \  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local\
    \ tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n\
    \  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local\
    \ eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n\
    \  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n \
    \ local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local\
    \ uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n\
    \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local len=${#list[@]}\n    local res=()\n    local i=0\n    local\
    \ j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n\
    \    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n \
    \   local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n  \
    \  local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n\
    \    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n\
    \    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n\
    \    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n\
    \    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n\
    \    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n\
    \    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local\
    \ hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n\
    \    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local\
    \ qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n\
    \    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local\
    \ zzz=0\n    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local\n}\n\n\
    candidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\"\
    ) = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n \
    \   [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"\
    5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local len=${#list[@]}\n    local tmp=0\n    local tmp_index=0\n\
    \    local tmp_min=0\n    local tmp_max=0\n    local tmp_min_index=0\n    local\
    \ tmp_max_index=0\n    local tmp_i=0\n    local tmp_j=0\n    local tmp_k=0\n \
    \   local tmp_len=0\n    local tmp_result=()\n    local tmp_list=()\n    local\
    \ tmp_result_len=0\n    local tmp_list_len=0\n    local tmp_result_index=0\n \
    \   local tmp_list_index=0\n    local tmp_result_value=0\n    local tmp_list_value=0\n\
    \    local tmp_result_value_len=0\n    local tmp_list_value_len=0\n    local tmp_result_value_index=0\n\
    \    local tmp_list_value_index=0\n    local tmp_result_value_char=0\n    local\
    \ tmp_list_value_char=0\n    local tmp_result_value_char_code=0\n    local tmp_list_value_char_code=0\n\
    \    local tmp_result_value_char_code_sum=0\n    local tmp_list_value_char_code_sum=0\n\
    \    local tmp_result_value_char_code_sum_diff=0\n    local tmp_list_value_char_code_sum_diff=0\n\
    \    local tmp_result_value_char_code_sum_diff_abs=0\n    local tmp_list_value_char_code_sum_diff_abs=0\n\
    \    local tmp_result_value_char_code_sum_diff_abs_sum=0\n    local tmp_list_value_char_code_sum_diff_abs_sum=0\n\
    \    local tmp_result_value_char_code_sum_diff_abs_sum_diff=\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local length=${#list[@]}\n    local i=0\n    local j=0\n    local\
    \ result=()\n    local min=0\n    local max=0\n    local min_index=0\n    local\
    \ max_index=0\n    local temp=0\n    local temp_index=0\n    local temp_index_2=0\n\
    \    local temp_index_3=0\n    local temp_index_4=0\n    local temp_index_5=0\n\
    \    local temp_index_6=0\n    local temp_index_7=0\n    local temp_index_8=0\n\
    \    local temp_index_9=0\n    local temp_index_10=0\n    local temp_index_11=0\n\
    \    local temp_index_12=0\n    local temp_index_13=0\n    local temp_index_14=0\n\
    \    local temp_index_15=0\n    local temp_index_16=0\n    local temp_index_17=0\n\
    \    local temp_index_18=0\n    local temp_index_19=0\n    local temp_index_20=0\n\
    \    local temp_index_21=0\n    local temp_index_22=0\n    local temp_index_23=0\n\
    \    local temp_index_24=0\n    local temp_index_25=0\n    local temp_index_26=0\n\
    \    local temp_index_27=0\n    local temp_index_28=0\n    local temp_index_29=0\n\
    \    local temp_index_30=0\n    local temp_index_31=0\n    local temp_index_32=0\n\
    \    local temp_index_33=0\n    local temp_index_34=0\n    local temp_index_35=0\n\
    \    local temp_index_36=0\n    local temp_index_37=0\n    local temp_index_38=0\n\
    \    local temp_index_39=0\n    local temp_index_40=0\n    local temp_index_41=0\n\
    \    local temp_index_42=0\n    local temp_index_43=0\n    local temp_index_44=0\n\
    \    local\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\
    \ -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local len=${#list[@]}\n    local i=0\n \
    \   local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n  \
    \  local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n   \
    \ local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local\
    \ y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local\
    \ dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local\
    \ ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local\
    \ nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local\
    \ ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local\
    \ xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n   \
    \ local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n\
    \    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local\
    \ lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n\
    \    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local\
    \ uuu=0\n    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n\
    \    local zzz=0\n    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\
    \ -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i l=0\n    local -i n=${#list[@]}\n    local -i m=0\n\
    \    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local\
    \ -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n\
    \    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n  \
    \  local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n  \
    \  local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n  \
    \  local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n  \
    \  local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n  \
    \  local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n  \
    \  local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n  \
    \  local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n\
    \    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n\
    \    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n\
    \    local -i mmm=0\n    local -i nnn=0\n    local\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    for i in ${list[@]}; do\n        if [[ $i -lt $min ]]; then\n           \
    \ min=$i\n        fi\n        if [[ $i -gt $max ]]; then\n            max=$i\n\
    \        fi\n    done\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n \
    \   local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n\
    \    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n\
    \    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n\
    \    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n\
    \    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n\
    \    local aaa=0\n    local bbb=0\n    local ccc=0\n    local ddd=0\n    local\
    \ eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n\
    \    local jjj=0\n    local kkk=0\n    local lll=0\n    local mmm=0\n    local\
    \ nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n\
    \    local sss=0\n    local ttt=0\n\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i n=${#list[@]}\n    local -i m=0\n    local -i min=0\n\
    \    local -i max=0\n    local -i min_index=0\n    local -i max_index=0\n    local\
    \ -i min_found=0\n    local -i max_found=0\n    local -i min_found_index=0\n \
    \   local -i max_found_index=0\n    local -i min_found_index_2=0\n    local -i\
    \ max_found_index_2=0\n    local -i min_found_2=0\n    local -i max_found_2=0\n\
    \    local -i min_index_2=0\n    local -i max_index_2=0\n    local -i min_2=0\n\
    \    local -i max_2=0\n    local -i min_found_index_3=0\n    local -i max_found_index_3=0\n\
    \    local -i min_found_3=0\n    local -i max_found_3=0\n    local -i min_index_3=0\n\
    \    local -i max_index_3=0\n    local -i min_3=0\n    local -i max_3=0\n    local\
    \ -i min_found_index_4=0\n    local -i max_found_index_4=0\n    local -i min_found_4=0\n\
    \    local -i max_found_4=0\n    local -i min_index_4=0\n    local -i max_index_4=0\n\
    \    local -i min_4=0\n    local -i max_4=0\n    local -i min_found_index_5=0\n\
    \    local -i max_found_index_5=0\n    local -i min_found_5=0\n    local -i max_found_5=0\n\
    \    local -i min_index_5=0\n    local -i max_index_5=0\n    local -i\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\
    \ -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i len=${#list[@]}\n    local -i min=0\n    local -i max=0\n    local\
    \ -i min_index=0\n    local -i max_index=0\n    local -i tmp=0\n    local -i tmp_index=0\n\
    \    local -i is_odd=0\n    local -i is_even=0\n    local -i is_even_index=0\n\
    \    local -i is_odd_index=0\n    local -i is_even_index_tmp=0\n    local -i is_odd_index_tmp=0\n\
    \    local -i is_even_index_tmp_index=0\n    local -i is_odd_index_tmp_index=0\n\
    \    local -i is_even_index_tmp_index_tmp=0\n    local -i is_odd_index_tmp_index_tmp=0\n\
    \    local -i is_even_index_tmp_index_tmp_index=0\n    local -i is_odd_index_tmp_index_tmp_index=0\n\
    \    local -i is_even_index_tmp_index_tmp_index_tmp=0\n    local -i is_odd_index_tmp_index_tmp_index_tmp=0\n\
    \    local -i is_even_index_tmp_index_tmp_index_tmp_index=0\n    local -i is_odd_index_tmp_index_tmp_index_tmp_index=0\n\
    \    local -i is_even_index_tmp_index_tmp_index_tmp_index_tmp=0\n    local -i\
    \ is_odd_index_tmp_index_tmp_index_tmp_index_tmp=0\n    local -i is_even_index_tmp_index_tmp_index_tmp_index_tmp_index=0\n\
    \    local -i is_odd_index_tmp_index_tmp_index_tmp_index_tmp_index=0\n    local\
    \ -i is_even_index_tmp_index_tmp_index_tmp_index_tmp_index_tmp=0\n\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=($1)\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local\
    \ l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local\
    \ r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local\
    \ x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local\
    \ dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n\
    \  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local\
    \ oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n\
    \  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local\
    \ zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n\
    \  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n \
    \ local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local\
    \ ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n\
    \  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n \
    \ local aaaa=0\n  local bbbb=0\n  local cccc=0\n  local dddd=0\n  local eeee\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local sorted=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n    local i=0\n    for n in ${list[@]};\
    \ do\n        if (( n < min )); then\n            min=$n\n            min_index=$i\n\
    \        fi\n        if (( n > max )); then\n            max=$n\n            max_index=$i\n\
    \        fi\n        (( i++ ))\n    done\n    sorted+=($min)\n    list[$min_index]=\n\
    \    list=(${list[@]})\n    sorted+=($max)\n    list[$max_index]=\n    list=(${list[@]})\n\
    \    while (( ${#list[@]} > 0 )); do\n        min=${list[0]}\n        min_index=0\n\
    \        i=0\n        for n in ${list[@]}; do\n            if (( n < min )); then\n\
    \                min=$n\n                min_index=$i\n            fi\n      \
    \      (( i++ ))\n        done\n        sorted+=($min)\n        list[$min_index]=\n\
    \        list=(${list[@]})\n    done\n    echo \"[$(printf '\"%s\", ' \"${sorted[@]}\"\
    )]\"\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i n=${#list[@]}\n    local -i m=0\n    local -i min=0\n\
    \    local -i max=0\n    local -i tmp=0\n    local -i min_index=0\n    local -i\
    \ max_index=0\n    local -i min_found=0\n    local -i max_found=0\n    local -i\
    \ min_found_index=0\n    local -i max_found_index=0\n    local -i min_found_tmp=0\n\
    \    local -i max_found_tmp=0\n    local -i min_found_tmp_index=0\n    local -i\
    \ max_found_tmp_index=0\n    local -i min_found_tmp_index_tmp=0\n    local -i\
    \ max_found_tmp_index_tmp=0\n    local -i min_found_tmp_index_tmp_tmp=0\n    local\
    \ -i max_found_tmp_index_tmp_tmp=0\n    local -i min_found_tmp_index_tmp_tmp_tmp=0\n\
    \    local -i max_found_tmp_index_tmp_tmp_tmp=0\n    local -i min_found_tmp_index_tmp_tmp_tmp_tmp=0\n\
    \    local -i max_found_tmp_index_tmp_tmp_tmp_tmp=0\n    local -i min_found_tmp_index_tmp_tmp_tmp_tmp_tmp=0\n\
    \    local -i max_found_tmp_index_tmp_tmp_tmp_tmp_tmp=0\n    local -i min_found_tmp_index_tmp_tmp_tmp_tmp_tmp_tmp=0\n\
    \    local -i max_found_tmp_index_tmp_tmp_tmp_tmp_tmp_tmp=0\n    local -i min_found_tmp_index_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n\
    \    local -i max_found_tmp_index_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local sorted_list=()\n    local min_index=0\n    local max_index=0\n\
    \    local min_value=${list[0]}\n    local max_value=${list[0]}\n    local i=0\n\
    \    local j=0\n    local k=0\n    local l=0\n    local n=${#list[@]}\n    local\
    \ m=0\n    local tmp=0\n    local tmp_index=0\n    local tmp_value=0\n    local\
    \ tmp_list=()\n    local tmp_list_index=0\n    local tmp_list_value=0\n    local\
    \ tmp_list_length=0\n    local tmp_list_length_half=0\n    local tmp_list_length_half_plus_one=0\n\
    \    local tmp_list_length_half_minus_one=0\n    local tmp_list_length_half_plus_one_index=0\n\
    \    local tmp_list_length_half_minus_one_index=0\n    local tmp_list_length_half_plus_one_value=0\n\
    \    local tmp_list_length_half_minus_one_value=0\n    local tmp_list_length_half_plus_one_value_index=0\n\
    \    local tmp_list_length_half_minus_one_value_index=0\n    local tmp_list_length_half_plus_one_value_index_value=0\n\
    \    local tmp_list_length_half_minus_one_value_index_value=0\n    local tmp_list_length_half_plus_one_value_index_value_index=0\n\
    \    local tmp_list_length_half_minus_one_value_index_value_index=0\n    local\
    \ tmp_list_length_half_plus_one_value_index_value_index_value=0\n    local tmp_list_length_half_minus_one_value_index_value_index_value=0\n\
    \    local tmp_list_length_half_plus_one_value_index_value_index_value_index=0\n\
    \    local tmp_list_length_half_minus_one_value_index_value_index_value_index=\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=($1)\n  local sorted=()\n  local min=0\n  local max=0\n  local i=0\n  local\
    \ j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local\
    \ p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local\
    \ v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local\
    \ bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n\
    \  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local\
    \ mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n\
    \  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local\
    \ xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n\
    \  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n \
    \ local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local\
    \ nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n\
    \  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n \
    \ local yyy=0\n  local zzz=0\n  local aaaa=0\n  local bbbb=0\n  local cccc=0\n\
    \ \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local sorted=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local len=${#list[@]}\n    local min=0\n    local max=0\n    local min_idx=0\n\
    \    local max_idx=0\n    local min_found=0\n    local max_found=0\n    local\
    \ tmp=0\n    local tmp_idx=0\n    local tmp_found=0\n    local tmp_list=()\n \
    \   local tmp_list_idx=()\n    local tmp_list_found=()\n    local tmp_list_len=0\n\
    \    local tmp_list_idx_len=0\n    local tmp_list_found_len=0\n    local tmp_list_idx_len_half=0\n\
    \    local tmp_list_found_len_half=0\n    local tmp_list_idx_len_half_idx=0\n\
    \    local tmp_list_found_len_half_idx=0\n    local tmp_list_idx_len_half_idx_idx=0\n\
    \    local tmp_list_found_len_half_idx_idx=0\n    local tmp_list_idx_len_half_idx_idx_idx=0\n\
    \    local tmp_list_found_len_half_idx_idx_idx=0\n    local tmp_list_idx_len_half_idx_idx_idx_idx=0\n\
    \    local tmp_list_found_len_half_idx_idx_idx_idx=0\n    local tmp_list_idx_len_half_idx_idx_idx_idx_idx=0\n\
    \    local tmp_list_found_len_half_idx_idx_idx_idx_idx=0\n    local tmp_list_idx_len_half_idx_idx_idx_idx_idx_idx=0\n\
    \    local tmp_list_found_len_half_idx_idx_idx_idx_idx_idx=0\n    local tmp_list_\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i n=${#list[@]}\n    local -i m=0\n    local -i tmp=0\n\
    \    local -i min=0\n    local -i max=0\n    local -i min_index=0\n    local -i\
    \ max_index=0\n    local -i min_index_tmp=0\n    local -i max_index_tmp=0\n  \
    \  local -i min_index_tmp2=0\n    local -i max_index_tmp2=0\n    local -i min_index_tmp3=0\n\
    \    local -i max_index_tmp3=0\n    local -i min_index_tmp4=0\n    local -i max_index_tmp4=0\n\
    \    local -i min_index_tmp5=0\n    local -i max_index_tmp5=0\n    local -i min_index_tmp6=0\n\
    \    local -i max_index_tmp6=0\n    local -i min_index_tmp7=0\n    local -i max_index_tmp7=0\n\
    \    local -i min_index_tmp8=0\n    local -i max_index_tmp8=0\n    local -i min_index_tmp9=0\n\
    \    local -i max_index_tmp9=0\n    local -i min_index_tmp10=0\n    local -i max_index_tmp10=0\n\
    \    local -i min_index_tmp11=0\n    local -i max_index_tmp11=0\n    local -i\
    \ min_index_tmp12=0\n    local -i max_index_tmp12=0\n    local -i min_index_tmp13=0\n\
    \    local -i max_index_tmp13=0\n    local -i min_index_tmp14=0\n    local -i\
    \ max_index_tmp14=0\n    local -i min_index_tmp15=0\n    local -i max_index_tmp15=0\n\
    \    local -i min_index_tmp16=0\n    local -\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n\
    \    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n\
    \    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n\
    \    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n\
    \    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n\
    \    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n\
    \    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local\
    \ hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n\
    \    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local\
    \ qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n\
    \    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local\
    \ zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i min=0\n    local -i max=0\n    local -i min_index=0\n    local -i\
    \ max_index=0\n    local -i min_index_found=0\n    local -i max_index_found=0\n\
    \    local -i min_index_found_prev=0\n    local -i max_index_found_prev=0\n  \
    \  local -i min_index_found_prev_prev=0\n    local -i max_index_found_prev_prev=0\n\
    \    local -i min_index_found_prev_prev_prev=0\n    local -i max_index_found_prev_prev_prev=0\n\
    \    local -i min_index_found_prev_prev_prev_prev=0\n    local -i max_index_found_prev_prev_prev_prev=0\n\
    \    local -i min_index_found_prev_prev_prev_prev_prev=0\n    local -i max_index_found_prev_prev_prev_prev_prev=0\n\
    \    local -i min_index_found_prev_prev_prev_prev_prev_prev=0\n    local -i max_index_found_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i min_index_found_prev_prev_prev_prev_prev_prev_prev=0\n    local\
    \ -i max_index_found_prev_prev_prev_prev_prev_prev_prev=0\n    local -i min_index_found_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i max_index_found_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local\
    \ -i min_index_found_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local\
    \ -i max_index_found_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local\
    \ -i min_index_found_prev_prev_prev_\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=\"$1\"\n  local sorted_list=\"\"\n  local min_value=\"\"\n  local max_value=\"\
    \"\n  local min_index=\"\"\n  local max_index=\"\"\n  local i=\"\"\n  local j=\"\
    \"\n  local k=\"\"\n  local l=\"\"\n  local temp=\"\"\n  local temp_list=\"\"\n\
    \  local temp_index=\"\"\n  local temp_value=\"\"\n  local temp_index_2=\"\"\n\
    \  local temp_value_2=\"\"\n  local temp_index_3=\"\"\n  local temp_value_3=\"\
    \"\n  local temp_index_4=\"\"\n  local temp_value_4=\"\"\n  local temp_index_5=\"\
    \"\n  local temp_value_5=\"\"\n  local temp_index_6=\"\"\n  local temp_value_6=\"\
    \"\n  local temp_index_7=\"\"\n  local temp_value_7=\"\"\n  local temp_index_8=\"\
    \"\n  local temp_value_8=\"\"\n  local temp_index_9=\"\"\n  local temp_value_9=\"\
    \"\n  local temp_index_10=\"\"\n  local temp_value_10=\"\"\n  local temp_index_11=\"\
    \"\n  local temp_value_11=\"\"\n  local temp_index_12=\"\"\n  local temp_value_12=\"\
    \"\n  local temp_index_13=\"\"\n  local temp_value_13=\"\"\n  local temp_index_14=\"\
    \"\n  local temp_value_14=\"\"\n  local temp_index_15=\"\"\n  local temp_value_15=\"\
    \"\n  local temp_index_16=\"\"\n  local temp_value_16=\"\"\n  local temp_index_17=\"\
    \"\n  local temp_value_17=\"\"\n  local temp_index_18=\"\"\n  local temp_value_18=\"\
    \"\n  local temp_index_19=\"\"\n  local temp_value_19=\"\"\n  local temp_index_20=\"\
    \"\n  local temp_value_20=\"\"\n  local temp_index_21=\"\"\n  local temp_value_21=\"\
    \"\n  local temp_index_22=\"\"\n  local temp_value_22=\"\"\n  local temp_index_23=\"\
    \"\n  local temp_value_23=\"\"\n  local temp_index_24=\"\"\n  local temp_value_24=\"\
    \"\n  local temp_index_25=\"\"\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n\
    \    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1\
    \ 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5\
    \ 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=$1\n    local result=\"\"\n    local min=0\n    local max=0\n    local\
    \ min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n    local\
    \ temp=0\n    local temp_index=0\n    local temp_list=\"\"\n    local temp_result=\"\
    \"\n    local temp_result_index=0\n    local temp_result_list=\"\"\n    local\
    \ temp_result_result=\"\"\n    local temp_result_result_index=0\n    local temp_result_result_list=\"\
    \"\n    local temp_result_result_result=\"\"\n    local temp_result_result_result_index=0\n\
    \    local temp_result_result_result_list=\"\"\n    local temp_result_result_result_result=\"\
    \"\n    local temp_result_result_result_result_index=0\n    local temp_result_result_result_result_list=\"\
    \"\n    local temp_result_result_result_result_result=\"\"\n    local temp_result_result_result_result_result_index=0\n\
    \    local temp_result_result_result_result_result_list=\"\"\n    local temp_result_result_result_result_result_result=\"\
    \"\n    local temp_result_result_result_result_result_result_index=0\n    local\
    \ temp_result_result_result_result_result_result_list=\"\"\n    local temp_result_result_result_result_result_result_result=\"\
    \"\n    local temp_result_result_result_result_result_result_result_index=0\n\
    \    local temp_result_result_result_result_result_result_result_list=\"\"\n \
    \   local temp_result_result_result_result_result_result_result_result=\"\"\n\
    \    local temp_result_result_result_result_result_result_result_result_index=0\n\
    \    local temp_result_result_result_result_result_result_result_result_list=\"\
    \"\n    local temp_result_result_result_result_result_result_result_result_result=\"\
    \"\n    local temp_result_result_result_result_result_result_result_result_result_index=0\n\
    \    local temp_result_result_result_result_result_\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=$1\n  local min=0\n  local max=0\n  local min_index=0\n  local max_index=0\n\
    \  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local tmp=0\n  local\
    \ tmp_index=0\n  local tmp_index_2=0\n  local tmp_index_3=0\n  local tmp_index_4=0\n\
    \  local tmp_index_5=0\n  local tmp_index_6=0\n  local tmp_index_7=0\n  local\
    \ tmp_index_8=0\n  local tmp_index_9=0\n  local tmp_index_10=0\n  local tmp_index_11=0\n\
    \  local tmp_index_12=0\n  local tmp_index_13=0\n  local tmp_index_14=0\n  local\
    \ tmp_index_15=0\n  local tmp_index_16=0\n  local tmp_index_17=0\n  local tmp_index_18=0\n\
    \  local tmp_index_19=0\n  local tmp_index_20=0\n  local tmp_index_21=0\n  local\
    \ tmp_index_22=0\n  local tmp_index_23=0\n  local tmp_index_24=0\n  local tmp_index_25=0\n\
    \  local tmp_index_26=0\n  local tmp_index_27=0\n  local tmp_index_28=0\n  local\
    \ tmp_index_29=0\n  local tmp_index_30=0\n  local tmp_index_31=0\n  local tmp_index_32=0\n\
    \  local tmp_index_33=0\n  local tmp_index_34=0\n  local tmp_index_35=0\n  local\
    \ tmp_index_36=0\n  local tmp_index_37=0\n  local tmp_index_38=0\n  local tmp_index_39=0\n\
    \  local tmp_index_40=0\n  local tmp_index_41=0\n  local tmp_index_42=0\n  local\
    \ tmp_index_43=0\n  local tmp_index_44=0\n  local tmp_index_45=0\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 2
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    while [ $i -lt ${#list[@]}\
    \ ]; do\n        local min=${list[0]}\n        local max=${list[0]}\n        local\
    \ min_index=0\n        local max_index=0\n        for j in \"${!list[@]}\"; do\n\
    \            if [ \"${list[$j]}\" -lt \"$min\" ]; then\n                min=${list[$j]}\n\
    \                min_index=$j\n            fi\n            if [ \"${list[$j]}\"\
    \ -gt \"$max\" ]; then\n                max=${list[$j]}\"\n                max_index=$j\n\
    \            fi\n        done\n        if [ $((i % 2)) -eq 0 ]; then\n       \
    \     result+=(\"$min\")\n            unset list[$min_index]\n        else\n \
    \           result+=(\"$max\")\n            unset list[$max_index]\n        fi\n\
    \        list=( \"${list[@]}\" )\n        i=$((i + 1))\n    done\n    echo \"\
    ${result[@]}\"\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5\
    \ 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[\
    \ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    \    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate\
    \ \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\"\
    ) = \"111111\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsnwgpvor.sh: line 60: unexpected EOF while looking for matching
    `"''

    /tmp/tmpsnwgpvor.sh: line 64: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local n=${#list[@]}\n    local min=0\n    local max=0\n    local min_index=0\n\
    \    local max_index=0\n    local tmp=0\n    local tmp_index=0\n    local is_even=0\n\
    \    local is_odd=0\n    local is_even_index=0\n    local is_odd_index=0\n   \
    \ local is_even_max=0\n    local is_odd_max=0\n    local is_even_min=0\n    local\
    \ is_odd_min=0\n    local is_even_max_index=0\n    local is_odd_max_index=0\n\
    \    local is_even_min_index=0\n    local is_odd_min_index=0\n    local is_even_tmp=0\n\
    \    local is_odd_tmp=0\n    local is_even_tmp_index=0\n    local is_odd_tmp_index=0\n\
    \    local is_even_tmp_max=0\n    local is_odd_tmp_max=0\n    local is_even_tmp_min=0\n\
    \    local is_odd_tmp_min=0\n    local is_even_tmp_max_index=0\n    local is_odd_tmp_max_index=0\n\
    \    local is_even_tmp_min_index=0\n    local is_odd_tmp_min_index=0\n    local\
    \ is_even_tmp_max_index=0\n    local is_odd_tmp_max_index=0\n    local is_even_tmp_min_index=0\n\
    \    local is_odd_tmp_min_index=0\n    local is_even_tmp_max_index=0\n    local\
    \ is_odd_tmp_max_index=0\n    local is_even_tmp_min_index=0\n    local is_odd_tmp_min_index=0\n\
    \    local is_even_tmp_max_index=0\n    local is_odd_tmp_max_index=0\n    local\
    \ is_even_tmp_min_index=0\n\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n\
    \    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1\
    \ 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5\
    \ 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\
    \ -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ -a list=($1)\n  local -a result=()\n  local -i i=0\n  local -i j=0\n  local\
    \ -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local\
    \ -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local\
    \ -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local\
    \ -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n\
    \  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i\
    \ ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n \
    \ local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i\
    \ rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n \
    \ local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i\
    \ aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n\
    \  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local\
    \ -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local sorted=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n\
    \    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n\
    \    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n\
    \    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n\
    \    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n\
    \    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n\
    \    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local\
    \ hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n\
    \    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local\
    \ qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n\
    \    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local\
    \ zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=$1\n  local result=()\n  local min=0\n  local max=0\n  local min_index=0\n\
    \  local max_index=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local\
    \ m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local\
    \ s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local\
    \ y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n \
    \ local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local\
    \ jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n\
    \  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local\
    \ uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n\
    \  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n \
    \ local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local\
    \ kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n\
    \  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n \
    \ local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n  local\
    \ aaaa=0\n  local b\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5\
    \ 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[\
    \ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    \    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate\
    \ \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\"\
    ) = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local len=${#list[@]}\n    local result=()\n    local i=0\n \
    \   local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n  \
    \  local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n   \
    \ local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local\
    \ y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local\
    \ dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local\
    \ ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local\
    \ nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local\
    \ ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local\
    \ xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n   \
    \ local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n\
    \    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local\
    \ lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n\
    \    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local\
    \ uuu=0\n    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n\
    \    local zzz=0\n    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=$1\n    local result=\"\"\n    local min=0\n    local max=0\n    local\
    \ min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n    local\
    \ tmp=0\n    local tmp_index=0\n    local len=0\n    local list_len=0\n    local\
    \ list_len_half=0\n    local list_len_half_plus_one=0\n    local list_len_half_minus_one=0\n\
    \    local list_len_minus_one=0\n    local list_len_minus_two=0\n    local list_len_minus_three=0\n\
    \    local list_len_minus_four=0\n    local list_len_minus_five=0\n    local list_len_minus_six=0\n\
    \    local list_len_minus_seven=0\n    local list_len_minus_eight=0\n    local\
    \ list_len_minus_nine=0\n    local list_len_minus_ten=0\n    local list_len_minus_eleven=0\n\
    \    local list_len_minus_twelve=0\n    local list_len_minus_thirteen=0\n    local\
    \ list_len_minus_fourteen=0\n    local list_len_minus_fifteen=0\n    local list_len_minus_sixteen=0\n\
    \    local list_len_minus_seventeen=0\n    local list_len_minus_eighteen=0\n \
    \   local list_len_minus_nineteen=0\n    local list_len_minus_twenty=0\n    local\
    \ list_len_minus_twenty_one=0\n    local list_len_minus_twenty_two=0\n    local\
    \ list_len_minus_twenty_three=0\n    local list_len_minus_twenty_four=0\n    local\
    \ list_len_minus_twenty_five=0\n    local list_len_minus_twenty_six=0\n    local\
    \ list_len_minus_twenty_seven=0\n    local list_len_minus_twenty_eight=0\n   \
    \ local list_len_minus_twenty_nine=0\n    local list_len_minus_\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local res=()\n    local i=0\n    local j=0\n    local k=0\n \
    \   local len=${#list[@]}\n    local min=0\n    local max=0\n    local min_index=0\n\
    \    local max_index=0\n    local tmp=0\n    for ((i=0; i<len; i++)); do\n   \
    \     min=${list[0]}\n        max=${list[0]}\n        for ((j=0; j<len; j++));\
    \ do\n            if [ ${list[j]} -lt $min ]; then\n                min=${list[j]}\n\
    \                min_index=$j\n            fi\n            if [ ${list[j]} -gt\
    \ $max ]; then\n                max=${list[j]}\n                max_index=$j\n\
    \            fi\n        done\n        if [ $((i%2)) -eq 0 ]; then\n         \
    \   res[$k]=$min\n            list[$min_index]=$max\n        else\n          \
    \  res[$k]=$max\n            list[$max_index]=$min\n        fi\n        k=$((k+1))\n\
    \    done\n    echo ${res[@]}\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n\
    \    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1\
    \ 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5\
    \ 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=($1)\n  local sorted=()\n  local min=${list[0]}\n  local max=${list[0]}\n\
    \  local min_index=0\n  local max_index=0\n  local i=0\n  local j=0\n  local k=0\n\
    \  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n\
    \  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n\
    \  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n\
    \  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local\
    \ ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n\
    \  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local\
    \ tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n\
    \  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local\
    \ eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n\
    \  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n \
    \ local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local\
    \ uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n\
    \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=($1)\n  local res=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n\
    \  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n\
    \  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n\
    \  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n\
    \  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local\
    \ jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n\
    \  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local\
    \ uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n\
    \  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n \
    \ local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local\
    \ kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n\
    \  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n \
    \ local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n  local\
    \ aaaa=0\n  local bbbb=0\n  local cccc=0\n  local dddd=0\n  local eeee\n}\n\n\
    candidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\"\
    ) = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n \
    \   [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"\
    5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i len=${#list[@]}\n    local -i half=$((len / 2))\n\
    \    local -i min=0\n    local -i max=0\n    local -i min_index=0\n    local -i\
    \ max_index=0\n    local -i min_index_found=0\n    local -i max_index_found=0\n\
    \    local -i min_index_found_count=0\n    local -i max_index_found_count=0\n\
    \    local -i min_index_found_count_max=0\n    local -i max_index_found_count_max=0\n\
    \    local -i min_index_found_count_min=0\n    local -i max_index_found_count_min=0\n\
    \    local -i min_index_found_count_min_index=0\n    local -i max_index_found_count_min_index=0\n\
    \    local -i min_index_found_count_max_index=0\n    local -i max_index_found_count_max_index=0\n\
    \    local -i min_index_found_count_min_index_found=0\n    local -i max_index_found_count_min_index_found=0\n\
    \    local -i min_index_found_count_max_index_found=0\n    local -i max_index_found_count_max_index_found=0\n\
    \    local -i min_index_found_count_min_index_found_count=0\n    local -i max_index_found_count_min_index_found_count=0\n\
    \    local -i min_index_found_count_max_index_found_count=0\n    local -i max_index_found_count_max_index_found_count=0\n\
    \    local -i min_index_found_count_min_index_found_count_max=0\n    local -i\
    \ max_index_found_count_min_index_found_count_max=0\n    local -i\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=($1)\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local\
    \ l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local\
    \ r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local\
    \ x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local\
    \ dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n\
    \  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local\
    \ oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n\
    \  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local\
    \ zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n\
    \  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n \
    \ local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local\
    \ ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n\
    \  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n \
    \ local aaaa=0\n  local bbbb=0\n  local cccc=0\n  local dddd=0\n  local eeee\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n  \
    \  local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n\
    \    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n\
    \    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n\
    \    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n\
    \    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n\
    \    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local\
    \ fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n\
    \    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local\
    \ ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n\
    \    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local\
    \ xxx=0\n    local yyy=0\n    local zzz=0\n    local aaaa=0\n    local bbbb=0\n\
    \   \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n\
    \    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n\
    \    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n\
    \    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n\
    \    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n\
    \    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n\
    \    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local\
    \ hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n\
    \    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local\
    \ qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n\
    \    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local\
    \ zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local min=${list[0]}\n    local max=${list[0]}\n    local min_index=0\n\
    \    local max_index=0\n    local i=0\n    local result=()\n    for item in ${list[@]};\
    \ do\n        if [[ $item -lt $min ]]; then\n            min=$item\n         \
    \   min_index=$i\n        fi\n        if [[ $item -gt $max ]]; then\n        \
    \    max=$item\n            max_index=$i\n        fi\n        i=$((i+1))\n   \
    \ done\n    i=0\n    while [[ $i -lt ${#list[@]} ]]; do\n        if [[ $i -eq\
    \ $min_index ]]; then\n            result+=($min)\n            i=$((i+1))\n  \
    \          continue\n        fi\n        if [[ $i -eq $max_index ]]; then\n  \
    \          result+=($max)\n            i=$((i+1))\n            continue\n    \
    \    fi\n        if [[ $((i%2)) -eq 0 ]]; then\n            result+=(${list[$min_index]})\n\
    \            min_index=$((min_index+1))\n        else\n            result+=(${list[$max_index]})\n\
    \            max_index=$((max_index-1))\n        fi\n        i=$((i+1))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[\
    \ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\"\
    \ ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n\
    \    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[\
    \ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local n=${#list[@]}\n    local min=0\n    local max=0\n    local min_index=0\n\
    \    local max_index=0\n    local min_found=0\n    local max_found=0\n    local\
    \ min_found_index=0\n    local max_found_index=0\n    local min_found_index_prev=0\n\
    \    local max_found_index_prev=0\n    local min_found_index_prev_prev=0\n   \
    \ local max_found_index_prev_prev=0\n    local min_found_index_prev_prev_prev=0\n\
    \    local max_found_index_prev_prev_prev=0\n    local min_found_index_prev_prev_prev_prev=0\n\
    \    local max_found_index_prev_prev_prev_prev=0\n    local min_found_index_prev_prev_prev_prev_prev=0\n\
    \    local max_found_index_prev_prev_prev_prev_prev=0\n    local min_found_index_prev_prev_prev_prev_prev_prev=0\n\
    \    local max_found_index_prev_prev_prev_prev_prev_prev=0\n    local min_found_index_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local max_found_index_prev_prev_prev_prev_prev_prev_prev=0\n    local min_found_index_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local max_found_index_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local\
    \ min_found_index_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local max_found_index_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local min_found_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local max_found_index_prev_prev_prev_\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local sorted_list=()\n    local i=0\n    local j=0\n    local\
    \ k=0\n    local n=${#list[@]}\n    local m=$((n/2))\n    local tmp=0\n    local\
    \ tmp_list=()\n    local tmp_list_2=()\n    local tmp_list_3=()\n    local tmp_list_4=()\n\
    \    local tmp_list_5=()\n    local tmp_list_6=()\n    local tmp_list_7=()\n \
    \   local tmp_list_8=()\n    local tmp_list_9=()\n    local tmp_list_10=()\n \
    \   local tmp_list_11=()\n    local tmp_list_12=()\n    local tmp_list_13=()\n\
    \    local tmp_list_14=()\n    local tmp_list_15=()\n    local tmp_list_16=()\n\
    \    local tmp_list_17=()\n    local tmp_list_18=()\n    local tmp_list_19=()\n\
    \    local tmp_list_20=()\n    local tmp_list_21=()\n    local tmp_list_22=()\n\
    \    local tmp_list_23=()\n    local tmp_list_24=()\n    local tmp_list_25=()\n\
    \    local tmp_list_26=()\n    local tmp_list_27=()\n    local tmp_list_28=()\n\
    \    local tmp_list_29=()\n    local tmp_list_30=()\n    local tmp_list_31=()\n\
    \    local tmp_list_32=()\n    local tmp_list_33=()\n    local tmp_list_34=()\n\
    \    local tmp_list_35=()\n    local tmp_list_36=()\n    local tmp_list_37=()\n\
    \    local tmp_list_38=()\n    local tmp_list_39=()\n    local tmp_list_40=()\n\
    \    local tmp_list_41=()\n    local tmp_list_42=()\n    local tmp_list_43=()\n\
    \    local tmp_list_44=()\n    local tmp_list_45=()\n    local\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local\
    \ m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n\
    \    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n \
    \   local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n\
    \    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n\
    \    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n\
    \    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n\
    \    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n\
    \    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n\
    \    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local\
    \ fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n\
    \    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local\
    \ ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n\
    \    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local\
    \ xxx=0\n    local yyy=0\n    local zzz=0\n    local aaaa=0\n    local bbbb=0\n\
    \    local cccc=0\n    local dddd=0\n    local eeee=0\n    local f\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i len=${#list[@]}\n    local -i half_len=$((len /\
    \ 2))\n    local -i is_odd=$((len % 2))\n    local -i is_even=$((1 - is_odd))\n\
    \    local -i is_first_half=$((1 - is_even))\n    local -i is_second_half=$((1\
    \ - is_first_half))\n    local -i is_first_half_even=$((half_len % 2))\n    local\
    \ -i is_first_half_odd=$((1 - is_first_half_even))\n    local -i is_second_half_even=$((is_even\
    \ * is_first_half_even))\n    local -i is_second_half_odd=$((is_even * is_first_half_odd))\n\
    \    local -i is_first_half_even_odd=$((is_first_half * is_first_half_odd))\n\
    \    local -i is_first_half_odd_even=$((is_first_half * is_first_half_even))\n\
    \    local -i is_second_half_even_odd=$((is_second_half * is_second_half_odd))\n\
    \    local -i is_second_half_odd_even=$((is_second_half * is_second_half_even))\n\
    \    local -i is_first_half_even_odd_even=$((is_first_half_even_odd * is_second_half_even))\n\
    \    local -i is_first_half_odd_even_odd=$((is_first_half_odd_even * is_second_half_odd))\n\
    \    local -i is_first_half_even_odd_odd=$((is_first_half_even_odd * is_second_half_odd))\n\
    \    local -i is_first_half_odd_even_even=$((is_first_half_odd_even * is_second_half_even))\n\
    \    local -i is_first_half_even_even=$\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4idthd1w.sh: line 38: local: $: syntax error: operand expected
    (error token is "$")

    '
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local n=${#list[@]}\n    local m=$((n / 2))\n    local min=0\n    local max=0\n\
    \    local min_index=0\n    local max_index=0\n    local temp=0\n    local temp_index=0\n\
    \    local temp_index_2=0\n    local temp_index_3=0\n    local temp_index_4=0\n\
    \    local temp_index_5=0\n    local temp_index_6=0\n    local temp_index_7=0\n\
    \    local temp_index_8=0\n    local temp_index_9=0\n    local temp_index_10=0\n\
    \    local temp_index_11=0\n    local temp_index_12=0\n    local temp_index_13=0\n\
    \    local temp_index_14=0\n    local temp_index_15=0\n    local temp_index_16=0\n\
    \    local temp_index_17=0\n    local temp_index_18=0\n    local temp_index_19=0\n\
    \    local temp_index_20=0\n    local temp_index_21=0\n    local temp_index_22=0\n\
    \    local temp_index_23=0\n    local temp_index_24=0\n    local temp_index_25=0\n\
    \    local temp_index_26=0\n    local temp_index_27=0\n    local temp_index_28=0\n\
    \    local temp_index_29=0\n    local temp_index_30=0\n    local temp_index_31=0\n\
    \    local temp_index_32=0\n    local temp_index_33=0\n    local temp_index_34=0\n\
    \    local temp_index_35=0\n    local temp_index_36=0\n    local temp_index_37=0\n\
    \    local temp_index_38=0\n    local temp_index_39=0\n    local temp_index_40=0\n\
    \    local temp_index_41=0\n    local temp_index_42=0\n    local temp_index_\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=$1\n    local min_max_list=()\n    local min_max_list_len=0\n    local\
    \ min_max_list_index=0\n    local min_max_list_index_max=0\n    local min_max_list_index_min=0\n\
    \    local min_max_list_index_min_max=0\n    local min_max_list_index_max_min=0\n\
    \    local min_max_list_index_min_max_min=0\n    local min_max_list_index_max_min_max=0\n\
    \    local min_max_list_index_min_max_min_max=0\n    local min_max_list_index_max_min_max_min=0\n\
    \    local min_max_list_index_min_max_min_max_min=0\n    local min_max_list_index_max_min_max_min_max=0\n\
    \    local min_max_list_index_min_max_min_max_min_max=0\n    local min_max_list_index_max_min_max_min_max_min=0\n\
    \    local min_max_list_index_min_max_min_max_min_max_min=0\n    local min_max_list_index_max_min_max_min_max_min_max=0\n\
    \    local min_max_list_index_min_max_min_max_min_max_min_max=0\n    local min_max_list_index_max_min_max_min_max_min_max_min=0\n\
    \    local min_max_list_index_min_max_min_max_min_max_min_max_min=0\n    local\
    \ min_max_list_index_max_min_max_min_max_min_max_min_max=0\n    local min_max_list_index_min_max_min_max_min_max_min_max_min_max=0\n\
    \    local min_max_list_index_max_min_max_min_max_min_max_min_max_min=0\n    local\
    \ min_max_list_index_min\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n   \
    \ [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3\
    \ 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6\
    \ 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local len=${#list[@]}\n    local i=0\n    local j=0\n    local\
    \ result=()\n    local tmp=()\n    local min=0\n    local max=0\n    local min_index=0\n\
    \    local max_index=0\n    local tmp_index=0\n    local tmp_value=0\n    local\
    \ tmp_value_index=0\n    local tmp_value_index_2=0\n    local tmp_value_2=0\n\
    \    local tmp_value_index_3=0\n    local tmp_value_3=0\n    local tmp_value_index_4=0\n\
    \    local tmp_value_4=0\n    local tmp_value_index_5=0\n    local tmp_value_5=0\n\
    \    local tmp_value_index_6=0\n    local tmp_value_6=0\n    local tmp_value_index_7=0\n\
    \    local tmp_value_7=0\n    local tmp_value_index_8=0\n    local tmp_value_8=0\n\
    \    local tmp_value_index_9=0\n    local tmp_value_9=0\n    local tmp_value_index_10=0\n\
    \    local tmp_value_10=0\n    local tmp_value_index_11=0\n    local tmp_value_11=0\n\
    \    local tmp_value_index_12=0\n    local tmp_value_12=0\n    local tmp_value_index_13=0\n\
    \    local tmp_value_13=0\n    local tmp_value_index_14=0\n    local tmp_value_14=0\n\
    \    local tmp_value_index_15=0\n    local tmp_value_15=0\n    local tmp_value_index_16=0\n\
    \    local tmp_value_16=0\n    local tmp_value_index_17=0\n    local tmp_value_17=0\n\
    \    local tmp_value_index_18=0\n    local tmp_value_18=0\n    local tmp_value_index_19=0\n\
    \    local tmp_value_19=0\n    local tmp_value_index_20=0\n    local tmp_value_\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011351
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=\"$1\"\n    local result=()\n    local min=0\n    local max=0\n    local\
    \ min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n    local\
    \ k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n\
    \    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n \
    \   local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n  \
    \  local a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n   \
    \ local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n    local\
    \ k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n\
    \    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n \
    \   local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n  \
    \  local a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n   \
    \ local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n    local\
    \ k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n\
    \    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n \
    \   local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n  \
    \  local a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n   \
    \ local f=0\n    local g=0\n    local h=0\n   \n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=\"$1\"\n    local result=\"\"\n    local min=\"\"\n    local max=\"\"\n\
    \    local min_index=\"\"\n    local max_index=\"\"\n    local i=\"\"\n    local\
    \ j=\"\"\n    local k=\"\"\n    local l=\"\"\n    local m=\"\"\n    local n=\"\
    \"\n    local o=\"\"\n    local p=\"\"\n    local q=\"\"\n    local r=\"\"\n \
    \   local s=\"\"\n    local t=\"\"\n    local u=\"\"\n    local v=\"\"\n    local\
    \ w=\"\"\n    local x=\"\"\n    local y=\"\"\n    local z=\"\"\n    local aa=\"\
    \"\n    local bb=\"\"\n    local cc=\"\"\n    local dd=\"\"\n    local ee=\"\"\
    \n    local ff=\"\"\n    local gg=\"\"\n    local hh=\"\"\n    local ii=\"\"\n\
    \    local jj=\"\"\n    local kk=\"\"\n    local ll=\"\"\n    local mm=\"\"\n\
    \    local nn=\"\"\n    local oo=\"\"\n    local pp=\"\"\n    local qq=\"\"\n\
    \    local rr=\"\"\n    local ss=\"\"\n    local tt=\"\"\n    local uu=\"\"\n\
    \    local vv=\"\"\n    local ww=\"\"\n    local xx=\"\"\n    local yy=\"\"\n\
    \    local zz=\"\"\n    local aaa=\"\"\n    local bbb=\"\"\n    local ccc=\"\"\
    \n    local ddd=\"\"\n    local eee=\"\"\n    local fff=\"\"\n    local ggg=\"\
    \"\n    local hhh=\"\"\n    local iii=\"\"\n    local jjj=\"\"\n    local kkk=\"\
    \"\n    local lll=\"\"\n    local mmm=\"\"\n    local nnn=\"\"\n    local ooo=\"\
    \"\n    local ppp=\"\"\n    local qqq=\"\"\n    local rrr=\"\"\n    local sss=\"\
    \"\n    local ttt=\"\"\n    local uuu=\"\"\n    local vvv=\"\"\n    local www=\"\
    \"\n    local xxx=\"\"\n    local yyy=\"\"\n    local zzz=\"\"\n    local aaaa=\"\
    \"\n    local bbbb=\"\"\n    local cccc=\"\"\n    local dddd=\"\"\n    local eeee=\"\
    \"\n    local ffff=\"\"\n    local gggg=\"\"\n    local hhhh=\"\"\n    local iiii=\"\
    \"\n    local jjjj=\"\"\n    local kkkk=\"\"\n    local llll=\"\"\n    local mmmm\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011352

name: HumanEval_65_circular_shift
language: sh
prompt: "#!/bin/bash\n# Circular shift the digits of the integer x, shift the digits\
  \ right by shift\n# and return the result as a string.\n# If shift > number of digits,\
  \ return digits reversed.\n# >>> $(circular_shift \"12\" \"1\")\n# \"21\"\n# >>>\
  \ $(circular_shift \"12\" \"2\")\n# \"12\"\n#\n# $1 is an integer\n# $2 is an integer\n\
  circular_shift() {\n"
tests: "}\n\ncandidate() {\n    circular_shift \"$@\"\n}\n\nset -e\nrun_test() {\n\
  \    [[ $(candidate \"100\" \"2\") = \"001\" ]]\n    [[ $(candidate \"12\" \"2\"\
  ) = \"12\" ]]\n    [[ $(candidate \"97\" \"8\") = \"79\" ]]\n    [[ $(candidate\
  \ \"12\" \"1\") = \"21\" ]]\n    [[ $(candidate \"11\" \"101\") = \"11\" ]]\n}\n\
  \nrun_test"
completions: ["    local x=$1\n    local shift=$2\n    local digits=$(echo -n \"$x\"\
    \ | wc -c)\n    local reversed=$(echo -n \"$x\" | rev)\n    if [ \"$shift\" -gt\
    \ \"$digits\" ]; then\n        echo -n \"$reversed\"\n    else\n        local\
    \ right=$(echo -n \"$reversed\" | cut -c \"1-$shift\")\n        local left=$(echo\
    \ -n \"$reversed\" | cut -c \"$((shift + 1))-$digits\")\n        echo -n \"$left$right\"\
    \ | rev\n    fi", "  local x=\"$1\"\n  local shift=\"$2\"\n  local len=$(echo\
    \ \"$x\" | wc -c)\n  local len=$((len - 1))\n  if [[ $shift -gt $len ]]; then\n\
    \    echo \"$x\" | rev\n  else\n    local x1=$(echo \"$x\" | cut -c1-$shift)\n\
    \    local x2=$(echo \"$x\" | cut -c$((shift + 1))-$len)\n    echo \"$x2$x1\"\n\
    \  fi", "    local x=$1\n    local shift=$2\n    local len=${#x}\n    if [ $shift\
    \ -ge $len ]; then\n        echo $x | rev\n    else\n        echo ${x:$shift}${x:0:$shift}\n\
    \    fi", "    local x=$1\n    local shift=$2\n    local len=${#x}\n    local\
    \ n=$((len - shift))\n    if ((n < 0)); then\n        n=$((n + len))\n    fi\n\
    \    local left=${x:0:n}\n    local right=${x:n}\n    echo \"${right}${left}\"",
  "    local x=\"$1\"\n    local shift=\"$2\"\n    local digits=\"${#x}\"\n    local\
    \ result=\"\"\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n  \
    \  if [ \"$shift\" -gt \"$digits\" ]; then\n        for ((i=0; i<digits; i++));\
    \ do\n            result=\"${x:$i:1}$result\"\n        done\n    else\n      \
    \  for ((i=0; i<digits; i++)); do\n            j=$(((i+shift)%digits))\n     \
    \       result=\"${result}${x:$j:1}\"\n        done\n    fi\n    echo \"$result\"",
  "    local x=\"$1\"\n    local shift=\"$2\"\n    local len=\"${#x}\"\n    local\
    \ i\n    local y\n    if (( shift >= len )); then\n        y=\"$(rev <<< \"$x\"\
    )\"\n    else\n        for (( i = 0; i < len; i++ )); do\n            y+=\"${x:((i\
    \ + shift) % len):1}\"\n        done\n    fi\n    echo \"$y\"", "  local x=$1\n\
    \  local shift=$2\n  local digits=$(echo $x | wc -c)\n  local reversed=$(echo\
    \ $x | rev)\n  if [ $shift -gt $digits ]; then\n    echo $reversed\n  else\n \
    \   local first=$(echo $reversed | cut -c 1-$shift)\n    local second=$(echo $reversed\
    \ | cut -c $((shift+1))-$digits)\n    echo $second$first\n  fi", "  local x=$1\n\
    \  local shift=$2\n  local len=${#x}\n  local shift=$((shift % len))\n  local\
    \ y=$(echo $x | rev)\n  local y=${y:0:$shift}\n  local y=${y}${x:0:$((len - shift))}\n\
    \  echo $y", "    local x=$1\n    local shift=$2\n    local digits=$(echo $x |\
    \ wc -c)\n    local digits=$((digits - 1))\n    if [[ $shift -gt $digits ]]; then\n\
    \        echo $x | rev\n    else\n        local first=$(echo $x | cut -c 1-$shift)\n\
    \        local last=$(echo $x | cut -c $((shift + 1))-$digits)\n        echo $last$first\n\
    \    fi", "  local x=\"$1\"\n  local shift=\"$2\"\n  local digits=\"${#x}\"\n\
    \  if [[ \"$shift\" -gt \"$digits\" ]]; then\n    echo \"$x\" | rev\n  else\n\
    \    local left=\"${x:0:$shift}\"\n    local right=\"${x:$shift}\"\n    echo \"\
    $right$left\"\n  fi", "    local x=\"$1\"\n    local shift=\"$2\"\n    local digits=\"\
    ${#x}\"\n    if [ \"$shift\" -ge \"$digits\" ]; then\n        echo \"$x\" | rev\n\
    \    else\n        echo \"${x:$shift}${x:0:$shift}\"\n    fi", "    local x=\"\
    $1\"\n    local shift=\"$2\"\n    local digits=\"${#x}\"\n    if [ \"$shift\"\
    \ -ge \"$digits\" ]; then\n        echo \"$x\" | rev\n    else\n        local\
    \ x_shifted=\"${x:$shift:$digits}${x:0:$shift}\"\n        echo \"$x_shifted\"\n\
    \    fi", "    local x=$1\n    local shift=$2\n    local digits=$(echo $x | wc\
    \ -c)\n    local digits=$((digits - 1))\n    if [ $shift -gt $digits ]; then\n\
    \        echo $x | rev\n    else\n        local right=$(echo $x | cut -c $shift-\
    \ | rev)\n        local left=$(echo $x | cut -c 1-$((digits - shift)) | rev)\n\
    \        echo $right$left\n    fi", "    local x=\"$1\"\n    local shift=\"$2\"\
    \n    local len=\"${#x}\"\n    local i\n    for ((i=0; i<shift; i++)); do\n  \
    \      local last=\"${x:len-1:1}\"\n        x=\"${last}${x:0:len-1}\"\n    done\n\
    \    echo \"$x\"", "    local x=$1\n    local shift=$2\n    local digits=$(echo\
    \ $x | wc -c)\n    local digits=$((digits - 1))\n    if [[ $shift -gt $digits\
    \ ]]; then\n        echo $x | rev\n    else\n        local right=$(echo $x | cut\
    \ -c $shift- )\n        local left=$(echo $x | cut -c 1-$((shift - 1)) )\n   \
    \     echo $right$left\n    fi", "  local x=$1\n  local shift=$2\n  local len=${#x}\n\
    \  if [ $shift -ge $len ]; then\n    echo $x | rev\n  else\n    echo $x | cut\
    \ -c $shift- | rev\n    echo $x | cut -c 1-$((shift-1))\n  fi", "  local x=$1\n\
    \  local shift=$2\n  local digits=${#x}\n  local shift=$((shift % digits))\n \
    \ if [ $shift -eq 0 ]; then\n    echo $x\n  else\n    echo $((x % 10**shift))$((x\
    \ / 10**shift))\n  fi", "    local x=$1\n    local shift=$2\n    local x_len=$(echo\
    \ -n \"$x\" | wc -c)\n    if [ $shift -gt $x_len ]; then\n        echo -n \"$x\"\
    \ | rev\n    else\n        echo -n \"$x\" | tail -c $shift\n        echo -n \"\
    $x\" | head -c $(($x_len - $shift))\n    fi", "    local x=$1\n    local shift=$2\n\
    \    local len=${#x}\n    local shift=$((shift % len))\n    if ((shift == 0));\
    \ then\n        echo \"$x\"\n    else\n        echo \"${x:shift}${x:0:shift}\"\
    \n    fi", "    local x=$1\n    local shift=$2\n    local digits=$(echo \"$x\"\
    \ | wc -c)\n    if [ \"$shift\" -ge \"$digits\" ]; then\n        echo \"$x\" |\
    \ rev\n    else\n        local y=$(echo \"$x\" | cut -c \"$shift-$digits\")\n\
    \        local z=$(echo \"$x\" | cut -c \"1-$((shift-1))\")\n        echo \"$y$z\"\
    \n    fi"]
stop_tokens:
- "\n}"

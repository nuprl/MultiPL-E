name: HumanEval_2_truncate_number
language: sh
prompt: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
  \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
  # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
  # >>> $(truncate_number \"3.5\")\n# \"0.5\"\n#\n# $1 is a floating point\ntruncate_number()\
  \ {\n"
tests: "}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n\
  \    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
  \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
completions: ["    local number=\"$1\"\n    local integer_part=\"${number%.*}\"\n\
    \    local decimal_part=\"${number#*.}\"\n    echo \"0.${decimal_part}\"", " \
    \   echo \"$1\" | awk '{printf(\"%s\", $1 - int($1))}'", '    printf "%.*f\n"
    0 "$1"', "    local number=$1\n    local integer_part=$(echo $number | cut -d.\
    \ -f1)\n    local decimal_part=$(echo $number | cut -d. -f2)\n    echo \"0.$decimal_part\"",
  "    local number=\"$1\"\n    local integer_part=\"${number%.*}\"\n    local decimal_part=\"\
    ${number#*.}\"\n    echo \"0.${decimal_part}\"", "    echo \"$1\" | awk '{printf\
    \ \"%f\", $1 - int($1)}'", "    local number=$1\n    local integer_part=$(echo\
    \ $number | cut -d. -f1)\n    local decimal_part=$(echo $number | cut -d. -f2)\n\
    \    echo \"0.$decimal_part\"", "    local number=\"$1\"\n    local integer_part=$(echo\
    \ \"$number\" | cut -d '.' -f 1)\n    local decimal_part=$(echo \"$number\" |\
    \ cut -d '.' -f 2)\n    echo \"0.$decimal_part\"", "    local number=$1\n    local\
    \ int_part=$(echo $number | cut -d. -f1)\n    local decimal_part=$(echo $number\
    \ | cut -d. -f2)\n    echo \"0.$decimal_part\"", "    local number=$1\n    local\
    \ integer_part=${number%.*}\n    local decimal_part=${number#*.}\n    local truncated_number=$(echo\
    \ \"scale=2; $number - $integer_part\" | bc)\n    echo $truncated_number", " \
    \ echo \"$1\" | awk '{print $1 - int($1)}'", "    echo \"$1\" | awk '{print $1-int($1)}'",
  "    echo $1 | awk '{printf \"%.2f\", $1 - int($1)}'", "    echo \"$1\" | awk '{printf(\"\
    %s\", $1 - int($1))}'", "    echo $1 | awk '{print $1 - int($1)}'", "    local\
    \ number=$1\n    local integer_part=${number%.*}\n    local decimal_part=${number#*.}\n\
    \    echo \"0.${decimal_part}\"", "    local number=$1\n    local integer_part=${number%.*}\n\
    \    local decimal_part=${number#*.}\n    echo \"0.$decimal_part\"", "    local\
    \ number=\"$1\"\n    local integer_part=\"${number%.*}\"\n    local decimal_part=\"\
    ${number#*.}\"\n    local truncated_number=\"0.$decimal_part\"\n    echo \"$truncated_number\"",
  "    echo \"$1\" | awk '{printf \"%.*f\", 2, $1}'", "    local number=$1\n    local\
    \ integer_part=${number%.*}\n    local decimal_part=${number#*.}\n    echo \"\
    0.${decimal_part}\""]
stop_tokens:
- "\n}"

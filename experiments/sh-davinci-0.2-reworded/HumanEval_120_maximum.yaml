name: HumanEval_120_maximum
language: sh
prompt: "#!/bin/bash\n# Given an array arr of integers and a positive integer k, return\
  \ a sorted list \n# of length k with the maximum k numbers in arr.\n# Example 1:\n\
  # >>> $(maximum \"-3 -4 5\" \"3\")\n# ['\"-4\"', '\"-3\"', '\"5\"']\n# Example 2:\n\
  # >>> $(maximum \"4 -4 4\" \"2\")\n# ['\"4\"', '\"4\"']\n# Example 3:\n# >>> $(maximum\
  \ \"-3 2 1 2 -1 -2 1\" \"1\")\n# ['\"2\"']\n# Note:\n# 1. The length of the array\
  \ will be in the range of [1, 1000].\n# 2. The elements in the array will be in\
  \ the range of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated\
  \ list\n# $2 is an integer\nmaximum() {\n"
tests: "}\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
  \ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\"\
  \ \"2\") = \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n\
  \    [[ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
  \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13\
  \ -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
  \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n    [[\
  \ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\" \"2\"\
  ) = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n\
  }\n\nrun_test"
completions: ["    local -a arr=(\"$@\")\n    local -a max=()\n    local -i i=0\n\
    \    local -i j=0\n    local -i k=0\n    local -i len=${#arr[@]}\n    local -i\
    \ max_len=${arr[-1]}\n    local -i max_num=0\n    local -i max_index=0\n    local\
    \ -i max_count=0\n    local -i max_count_index=0\n    local -i max_count_num=0\n\
    \    local -i max_count_len=0\n    local -i max_count_max_len=0\n    local -i\
    \ max_count_max_num=0\n    local -i max_count_max_index=0\n    local -i max_count_max_count=0\n\
    \    local -i max_count_max_count_index=0\n    local -i max_count_max_count_num=0\n\
    \    local -i max_count_max_count_len=0\n    local -i max_count_max_count_max_len=0\n\
    \    local -i max_count_max_count_max_num=0\n    local -i max_count_max_count_max_index=0\n\
    \    local -i max_count_max_count_max_count=0\n    local -i max_count_max_count_max_count_index=0\n\
    \    local -i max_count_max_count_max_count_num=0\n    local -i max_count_max_count_max_count_len=0\n\
    \    local -i max_count_max_count_max_count_max_len=0\n    local -i max_count_max_count_max_count_max_num=0\n\
    \    local -i max_count_max_count_max_count_max_index=0\n    local -i max_count_max_count_max_count_max_count=0\n\
    \    local -i max_count_max_count_max_count_max_count_index=0\n    local -i max_count_max_count_max_count_max_count_num=0\n\
    \    local", "    local -a arr=($1)\n    local -i k=$2\n    local -i i=0\n   \
    \ local -i j=0\n    local -i n=${#arr[@]}\n    local -i max=0\n    local -i max_idx=0\n\
    \    local -a res=()\n    for ((i=0; i<k; i++)); do\n        max=${arr[0]}\n \
    \       max_idx=0\n        for ((j=1; j<n-i; j++)); do\n            if [[ ${arr[j]}\
    \ -gt $max ]]; then\n                max=${arr[j]}\n                max_idx=$j\n\
    \            fi\n        done\n        res+=($max)\n        arr[$max_idx]=${arr[n-i-1]}\n\
    \    done\n    echo \"${res[@]}\"", "    local -n arr=$1\n    local k=$2\n   \
    \ local -a arr_sorted\n    local -a arr_max\n    local i\n    local j\n    local\
    \ max\n    local max_index\n    local len=${#arr[@]}\n    for ((i=0; i<k; i++));\
    \ do\n        max=${arr[0]}\n        max_index=0\n        for ((j=1; j<len; j++));\
    \ do\n            if [[ ${arr[j]} -gt $max ]]; then\n                max=${arr[j]}\n\
    \                max_index=$j\n            fi\n        done\n        arr_max[i]=$max\n\
    \        arr[$max_index]=$((max-1))\n    done\n    echo ${arr_max[@]}", "    local\
    \ arr=($1)\n    local k=$2\n    local len=${#arr[@]}\n    local i\n    local j\n\
    \    local temp\n    local result=()\n    for ((i=0; i<len; i++)); do\n      \
    \  for ((j=i+1; j<len; j++)); do\n            if [[ ${arr[i]} -lt ${arr[j]} ]];\
    \ then\n                temp=${arr[i]}\n                arr[i]=${arr[j]}\n   \
    \             arr[j]=$temp\n            fi\n        done\n    done\n    for ((i=0;\
    \ i<k; i++)); do\n        result[i]=${arr[i]}\n    done\n    echo ${result[@]}",
  "    local arr=($1)\n    local k=$2\n    local len=${#arr[@]}\n    local i=0\n \
    \   local j=0\n    local temp=0\n    local result=()\n    for ((i=0; i<len; i++));\
    \ do\n        for ((j=i+1; j<len; j++)); do\n            if [[ ${arr[i]} -lt ${arr[j]}\
    \ ]]; then\n                temp=${arr[i]}\n                arr[i]=${arr[j]}\n\
    \                arr[j]=$temp\n            fi\n        done\n    done\n    for\
    \ ((i=0; i<k; i++)); do\n        result[i]=${arr[i]}\n    done\n    echo ${result[@]}",
  "    local -a arr=()\n    local -a max=()\n    local -i k=$2\n    local -i i=0\n\
    \    local -i j=0\n    local -i n=0\n    local -i max_i=0\n    local -i max_j=0\n\
    \    local -i max_n=0\n    local -i max_val=0\n    local -i val=0\n    local -i\
    \ len=0\n    local -i len_max=0\n    local -i len_arr=0\n    local -i len_max_arr=0\n\
    \    local -i len_max_arr_max=0\n    local -i len_max_arr_max_max=0\n    local\
    \ -i len_max_arr_max_max_max=0\n    local -i len_max_arr_max_max_max_max=0\n \
    \   local -i len_max_arr_max_max_max_max_max=0\n    local -i len_max_arr_max_max_max_max_max_max=0\n\
    \    local -i len_max_arr_max_max_max_max_max_max_max=0\n    local -i len_max_arr_max_max_max_max_max_max_max_max=0\n\
    \    local -i len_max_arr_max_max_max_max_max_max_max_max_max=0\n    local -i\
    \ len_max_arr_max_max_max_max_max_max_max_max_max_max=0\n    local -i len_max_arr_max_max_max_max_max_max_max_max_max_max_max=0\n\
    \    local -i len_max_arr_max_max_max_max_max_max_max_max_max_max_max_max=0\n\
    \    local -i len_max_arr_max_max_max_max_max_max_max_max_max_max_max_max_max=0\n\
    \    local -i len_max_arr_max_max_max_max_max_max_max_max_max_max_max_max_max_max",
  "    local arr=(\"$@\")\n    local k=${arr[-1]}\n    arr=(\"${arr[@]:0:${#arr[@]}-1}\"\
    )\n    local len=${#arr[@]}\n    local i\n    local j\n    local tmp\n    for\
    \ ((i=0; i<len; i++)); do\n        for ((j=i+1; j<len; j++)); do\n           \
    \ if ((${arr[i]} < ${arr[j]})); then\n                tmp=${arr[i]}\n        \
    \        arr[i]=${arr[j]}\n                arr[j]=$tmp\n            fi\n     \
    \   done\n    done\n    echo \"${arr[@]:0:k}\"", "    local -a arr=(\"$@\")\n\
    \    local -a max=()\n    local -i i=0\n    local -i j=0\n    local -i k=0\n \
    \   local -i n=0\n    local -i m=0\n    local -i len=0\n    local -i max_len=0\n\
    \    local -i max_i=0\n    local -i max_j=0\n    local -i max_k=0\n    local -i\
    \ max_n=0\n    local -i max_m=0\n    local -i max_len=0\n    local -i max_len=0\n\
    \    local -i max_len=0\n    local -i max_len=0\n    local -i max_len=0\n    local\
    \ -i max_len=0\n    local -i max_len=0\n    local -i max_len=0\n    local -i max_len=0\n\
    \    local -i max_len=0\n    local -i max_len=0\n    local -i max_len=0\n    local\
    \ -i max_len=0\n    local -i max_len=0\n    local -i max_len=0\n    local -i max_len=0\n\
    \    local -i max_len=0\n    local -i max_len=0\n    local -i max_len=0\n    local\
    \ -i max_len=0\n    local -i max_len=0\n    local -i max_len=0\n    local -i max_len=0\n\
    \    local -i max_len=0\n    local -i max_len=0\n    local -i max_len=0\n    local\
    \ -i max_len=0\n    local -i max_len=0\n    local -i max_len=0\n    local -i max_len=0\n\
    \    local -i max_len=0\n    local -i max_len=0\n    local -i max_len=0\n    local\
    \ -i max_len=0\n    local -i max_len=0\n    local -i max_len=0\n    local -i max_len=0\n\
    \    local -i max_len=0\n    local -i", "    local -a arr\n    local -i k\n  \
    \  local -i i\n    local -i j\n    local -i max\n    local -i max_idx\n    local\
    \ -i tmp\n    local -i len\n    local -i start\n    local -i end\n    local -i\
    \ mid\n    local -i mid_val\n    local -i mid_val_idx\n    local -i mid_val_idx_2\n\
    \    local -i mid_val_2\n    local -i mid_val_idx_3\n    local -i mid_val_3\n\
    \    local -i mid_val_idx_4\n    local -i mid_val_4\n    local -i mid_val_idx_5\n\
    \    local -i mid_val_5\n    local -i mid_val_idx_6\n    local -i mid_val_6\n\
    \    local -i mid_val_idx_7\n    local -i mid_val_7\n    local -i mid_val_idx_8\n\
    \    local -i mid_val_8\n    local -i mid_val_idx_9\n    local -i mid_val_9\n\
    \    local -i mid_val_idx_10\n    local -i mid_val_10\n    local -i mid_val_idx_11\n\
    \    local -i mid_val_11\n    local -i mid_val_idx_12\n    local -i mid_val_12\n\
    \    local -i mid_val_idx_13\n    local -i mid_val_13\n    local -i mid_val_idx_14\n\
    \    local -i mid_val_14\n    local -i mid_val_idx_15\n    local -i mid_val_15\n\
    \    local -i mid_val_idx_16\n    local -i mid_val_16\n    local -i mid_val_idx_17\n\
    \    local -i mid_val_17\n    local -i mid_val_idx_18\n    local -i mid_val_18\n\
    \    local -i mid_val_idx_19\n    local -i mid_val_19\n    local -i mid_val_id",
  "    local -a arr=(\"$@\")\n    local -a max\n    local -i i=0\n    local -i j=0\n\
    \    local -i k=0\n    local -i len=${#arr[@]}\n    local -i maxlen=0\n    local\
    \ -i maxidx=0\n    local -i maxval=0\n    local -i val=0\n    local -i tmp=0\n\
    \    local -i idx=0\n    local -i cnt=0\n    local -i num=0\n    local -i num2=0\n\
    \    local -i num3=0\n    local -i num4=0\n    local -i num5=0\n    local -i num6=0\n\
    \    local -i num7=0\n    local -i num8=0\n    local -i num9=0\n    local -i num10=0\n\
    \    local -i num11=0\n    local -i num12=0\n    local -i num13=0\n    local -i\
    \ num14=0\n    local -i num15=0\n    local -i num16=0\n    local -i num17=0\n\
    \    local -i num18=0\n    local -i num19=0\n    local -i num20=0\n    local -i\
    \ num21=0\n    local -i num22=0\n    local -i num23=0\n    local -i num24=0\n\
    \    local -i num25=0\n    local -i num26=0\n    local -i num27=0\n    local -i\
    \ num28=0\n    local -i num29=0\n    local -i num30=0\n    local -i num31=0\n\
    \    local -i num32=0\n    local -i num33=0\n    local -i num34=0\n    local -i\
    \ num35=0\n    local -i num36=0\n    local -i num37=0\n    local -i num38=0\n\
    \    local -i num39=0\n    local -i num40=0\n    local -i num41=0\n    local -i\
    \ num42=0\n    local -i num43=0\n    local -i num44=0\n", "    local -a arr=(\"\
    $@\")\n    local -a max=()\n    local -a result=()\n    local i=0\n    local k=${arr[-1]}\n\
    \    local len=${#arr[@]}\n    for ((i=0; i<len-1; i++)); do\n        local j=0\n\
    \        for ((j=0; j<k; j++)); do\n            if [[ ${arr[i]} -gt ${max[j]}\
    \ ]]; then\n                max[j]=${arr[i]}\n                break\n        \
    \    fi\n        done\n    done\n    for ((i=0; i<k; i++)); do\n        result[i]=\"\
    \\\"${max[i]}\\\"\"\n    done\n    echo \"${result[@]}\"", "    local arr=($1)\n\
    \    local k=$2\n    local len=${#arr[@]}\n    local i=0\n    local j=0\n    local\
    \ temp=0\n    local result=()\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1;\
    \ j<len; j++)); do\n            if [[ ${arr[i]} -lt ${arr[j]} ]]; then\n     \
    \           temp=${arr[i]}\n                arr[i]=${arr[j]}\n               \
    \ arr[j]=$temp\n            fi\n        done\n    done\n    for ((i=0; i<k; i++));\
    \ do\n        result[i]=${arr[i]}\n    done\n    echo ${result[@]}", "    local\
    \ arr=\"$1\"\n    local k=\"$2\"\n    local result=()\n    local i=0\n    local\
    \ j=0\n    local len=0\n    local max=0\n    local max_index=0\n    local tmp=0\n\
    \    local tmp_index=0\n    local tmp_arr=()\n    local tmp_arr_len=0\n    local\
    \ tmp_arr_max=0\n    local tmp_arr_max_index=0\n    local tmp_arr_tmp=0\n    local\
    \ tmp_arr_tmp_index=0\n    local tmp_arr_tmp_arr=()\n    local tmp_arr_tmp_arr_len=0\n\
    \    local tmp_arr_tmp_arr_max=0\n    local tmp_arr_tmp_arr_max_index=0\n    local\
    \ tmp_arr_tmp_arr_tmp=0\n    local tmp_arr_tmp_arr_tmp_index=0\n    local tmp_arr_tmp_arr_tmp_arr=()\n\
    \    local tmp_arr_tmp_arr_tmp_arr_len=0\n    local tmp_arr_tmp_arr_tmp_arr_max=0\n\
    \    local tmp_arr_tmp_arr_tmp_arr_max_index=0\n    local tmp_arr_tmp_arr_tmp_arr_tmp=0\n\
    \    local tmp_arr_tmp_arr_tmp_arr_tmp_index=0\n    local tmp_arr_tmp_arr_tmp_arr_tmp_arr=()\n\
    \    local tmp_arr_tmp_arr_tmp_arr_tmp_arr_len=0\n    local tmp_arr_tmp_arr_tmp_arr_tmp_arr_max=0\n\
    \    local tmp_arr_tmp_arr_tmp_arr_tmp_arr_max_index=0\n    local tmp_arr_tmp_arr_tmp_arr_tmp_arr_tmp=0\n\
    \    local tmp_arr_tmp_arr_tmp_arr_tmp_arr_tmp_index=0\n    local tmp_arr_tmp_arr_tmp_arr_tmp_arr_tmp_arr=()\n\
    \    local tmp_arr_tmp_arr_tmp_arr_tmp_arr_tmp_arr_len=0\n   ", "    local -a\
    \ arr=($1)\n    local k=$2\n    local -a result=()\n    for ((i=0; i<k; i++));\
    \ do\n        local max=${arr[0]}\n        local max_index=0\n        for ((j=1;\
    \ j<${#arr[@]}; j++)); do\n            if [[ ${arr[j]} -gt $max ]]; then\n   \
    \             max=${arr[j]}\n                max_index=$j\n            fi\n  \
    \      done\n        result+=($max)\n        unset arr[$max_index]\n        arr=(${arr[@]})\n\
    \    done\n    echo ${result[@]}", "    local -a arr=($1)\n    local k=$2\n  \
    \  local -a result=()\n    for ((i=0; i<k; i++)); do\n        result[i]=${arr[0]}\n\
    \        for ((j=1; j<${#arr[@]}; j++)); do\n            if [[ ${arr[j]} -gt ${result[i]}\
    \ ]]; then\n                result[i]=${arr[j]}\n                unset arr[j]\n\
    \            fi\n        done\n    done\n    echo ${result[@]}", "    local -n\
    \ arr=$1\n    local k=$2\n    local -a res\n    local i\n    for ((i=0; i<k; i++));\
    \ do\n        local max=${arr[0]}\n        local max_i=0\n        for ((j=1; j<${#arr[@]};\
    \ j++)); do\n            if ((${arr[j]} > max)); then\n                max=${arr[j]}\n\
    \                max_i=$j\n            fi\n        done\n        res[i]=$max\n\
    \        unset arr[$max_i]\n    done\n    echo \"${res[@]}\"", "    local -a arr=(\"\
    $@\")\n    local -a max=()\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ n=${#arr[@]}\n    local max_len=${arr[$((n-1))]}\n    for ((i=0; i<n; i++));\
    \ do\n        if [[ ${arr[$i]} -gt ${max[$j]} ]]; then\n            max[$j]=${arr[$i]}\n\
    \            j=$((j+1))\n        fi\n        if [[ $j -eq $max_len ]]; then\n\
    \            j=0\n            for ((k=0; k<max_len; k++)); do\n              \
    \  if [[ ${arr[$i]} -gt ${max[$j]} ]]; then\n                    max[$j]=${arr[$i]}\n\
    \                fi\n                j=$((j+1))\n            done\n        fi\n\
    \    done\n    echo \"${max[@]}\"", "    local -a arr\n    local -i i j k\n  \
    \  local -i len=${#1}\n    local -i max\n    local -i max_index\n    local -i\
    \ max_count=0\n    local -i max_count_index=0\n    local -i max_count_value\n\
    \    local -i max_count_value_index=0\n    local -i max_count_value_count=0\n\
    \    local -i max_count_value_count_index=0\n    local -i max_count_value_count_value\n\
    \    local -i max_count_value_count_value_index=0\n    local -i max_count_value_count_value_count=0\n\
    \    local -i max_count_value_count_value_count_index=0\n    local -i max_count_value_count_value_count_value\n\
    \    local -i max_count_value_count_value_count_value_index=0\n    local -i max_count_value_count_value_count_value_count=0\n\
    \    local -i max_count_value_count_value_count_value_count_index=0\n    local\
    \ -i max_count_value_count_value_count_value_count_value\n    local -i max_count_value_count_value_count_value_count_value_index=0\n\
    \    local -i max_count_value_count_value_count_value_count_value_count=0\n  \
    \  local -i max_count_value_count_value_count_value_count_value_count_index=0\n\
    \    local -i max_count_value_count_value_count_value_count_value_count_value\n\
    \    local -i max_count_value_count_value_count_value_count_value_count_value_index=0\n\
    \    local -i max_count_value_count_value_count_value_count_value_count_value_count=0\n\
    \    local -i max_count_value_count_value_count_value_count_value_count_value_count_index=0\n\
    \    local -i max_count_value_count_value_count_value_count_", "    local arr\n\
    \    IFS=' ' read -r -a arr <<< \"$1\"\n    local len=${#arr[@]}\n    local k=$2\n\
    \    local i\n    local j\n    local tmp\n    for ((i=0; i<len; i++)); do\n  \
    \      for ((j=i+1; j<len; j++)); do\n            if [[ ${arr[i]} -lt ${arr[j]}\
    \ ]]; then\n                tmp=${arr[i]}\n                arr[i]=${arr[j]}\n\
    \                arr[j]=$tmp\n            fi\n        done\n    done\n    for\
    \ ((i=0; i<k; i++)); do\n        echo -n \"\\\"${arr[i]}\\\" \"\n    done\n  \
    \  echo", "    local -a arr=(\"$@\")\n    local -a max=()\n    local -i i=0\n\
    \    local -i j=0\n    local -i k=0\n    local -i len=${#arr[@]}\n    local -i\
    \ max_len=${arr[$len-1]}\n    local -i tmp=0\n    local -i tmp_len=0\n    local\
    \ -i tmp_max=0\n    local -i tmp_max_len=0\n    local -i tmp_max_len_idx=0\n \
    \   local -i tmp_max_idx=0\n    local -i tmp_len_idx=0\n    local -i tmp_idx=0\n\
    \    local -i tmp_max_idx=0\n    local -i tmp_max_len_idx=0\n    local -i tmp_max_len_idx=0\n\
    \    local -i tmp_max_len_idx=0\n    local -i tmp_max_len_idx=0\n    local -i\
    \ tmp_max_len_idx=0\n    local -i tmp_max_len_idx=0\n    local -i tmp_max_len_idx=0\n\
    \    local -i tmp_max_len_idx=0\n    local -i tmp_max_len_idx=0\n    local -i\
    \ tmp_max_len_idx=0\n    local -i tmp_max_len_idx=0\n    local -i tmp_max_len_idx=0\n\
    \    local -i tmp_max_len_idx=0\n    local -i tmp_max_len_idx=0\n    local -i\
    \ tmp_max_len_idx=0\n    local -i tmp_max_len_idx=0\n    local -i tmp_max_len_idx=0\n\
    \    local -i tmp_max_len_idx=0\n    local -i tmp_max_len_idx=0\n    local -i\
    \ tmp_max_len_idx=0\n    local -i tmp_max_len_idx=0\n    local -i tmp_max_len_idx=0\n\
    \    local -"]
stop_tokens:
- "\n}"

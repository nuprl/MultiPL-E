language: sh
name: HumanEval_157_right_angle_triangle
results:
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    if [[ $a -gt $b ]]; then\n\
    \        if [[ $a -gt $c ]]; then\n            if [[ $(($a*$a)) -eq $(($b*$b+$c*$c))\
    \ ]]; then\n                echo \"true\"\n            else\n                echo\
    \ \"false\"\n            fi\n        else\n            if [[ $(($c*$c)) -eq $(($a*$a+$b*$b))\
    \ ]]; then\n                echo \"true\"\n            else\n                echo\
    \ \"false\"\n            fi\n        fi\n    else\n        if [[ $b -gt $c ]];\
    \ then\n            if [[ $(($b*$b)) -eq $(($a*$a+$c*$c)) ]]; then\n         \
    \       echo \"true\"\n            else\n                echo \"false\"\n    \
    \        fi\n        else\n            if [[ $(($c*$c)) -eq $(($a*$a+$b*$b)) ]];\
    \ then\n                echo \"true\"\n            else\n                echo\
    \ \"false\"\n            fi\n        fi\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010490
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n    echo \"false\"\n \
    \ elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n    if [[ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3\
    \ )) ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n    fi\n \
    \ elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n    if [[ $(( $2 * $2 )) -eq $(( $1\
    \ * $1 + $3 * $3 )) ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\
    \n    fi\n  elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n    if [[ $(( $3 * $3 ))\
    \ -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010490
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n    echo \"false\"\n \
    \ elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq\
    \ $2 && $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq $2 && $1 -eq\
    \ $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq $2 && $1 -eq $3 ]]; then\n\
    \    echo \"false\"\n  elif [[ $1 -eq $2 && $1 -eq $3 ]]; then\n    echo \"false\"\
    \n  elif [[ $1 -eq $2 && $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1\
    \ -eq $2 && $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq $2 && $1\
    \ -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq $2 && $1 -eq $3 ]]; then\n\
    \    echo \"false\"\n  elif [[ $1 -eq $2 && $1 -eq $3 ]]; then\n    echo \"false\"\
    \n  elif [[ $1 -eq $2 && $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1\
    \ -eq $2 && $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq $2 && $1\
    \ -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq $2 && $1 -eq $3 ]]; then\n\
    \    echo \"false\"\n  elif [[ $1 -eq $2 && $1 -eq $3 ]]; then\n    echo \"false\"\
    \n  elif [[ $1 -eq $2 && $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1\
    \ -eq $2 && $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq $2 && $1\
    \ -eq $3 ]]; then\n   \n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpb04fi8uk.sh: line 54: syntax error near unexpected token `}''

    /tmp/tmpb04fi8uk.sh: line 54: `}''

    '
  stdout: ''
  timestamp: 1660010490
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    if [ $a -gt $b ] && [\
    \ $a -gt $c ]; then\n        if [ $((a*a)) -eq $((b*b+c*c)) ]; then\n        \
    \    echo \"true\"\n        else\n            echo \"false\"\n        fi\n   \
    \ elif [ $b -gt $a ] && [ $b -gt $c ]; then\n        if [ $((b*b)) -eq $((a*a+c*c))\
    \ ]; then\n            echo \"true\"\n        else\n            echo \"false\"\
    \n        fi\n    elif [ $c -gt $a ] && [ $c -gt $b ]; then\n        if [ $((c*c))\
    \ -eq $((a*a+b*b)) ]; then\n            echo \"true\"\n        else\n        \
    \    echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\
    \ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010490
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    local result=\"false\"\
    \n    if [ $a -gt 0 ] && [ $b -gt 0 ] && [ $c -gt 0 ]; then\n        if [ $a -eq\
    \ $b ] && [ $b -eq $c ]; then\n            result=\"true\"\n        elif [ $a\
    \ -eq $b ] || [ $b -eq $c ] || [ $a -eq $c ]; then\n            result=\"false\"\
    \n        else\n            if [ $((a * a + b * b)) -eq $((c * c)) ] || \\\n \
    \              [ $((a * a + c * c)) -eq $((b * b)) ] || \\\n               [ $((b\
    \ * b + c * c)) -eq $((a * a)) ]; then\n                result=\"true\"\n    \
    \        fi\n        fi\n    fi\n    echo $result\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010490
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=$a\n  local min1=$b\n\
    \  local min2=$c\n  if [ $b -gt $max ]; then\n    max=$b\n    min1=$a\n    min2=$c\n\
    \  fi\n  if [ $c -gt $max ]; then\n    max=$c\n    min1=$a\n    min2=$b\n  fi\n\
    \  if [ $((max * max)) -eq $((min1 * min1 + min2 * min2)) ]; then\n    echo \"\
    true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010490
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  if [[ $a -gt 0 && $b -gt 0 &&\
    \ $c -gt 0 ]]; then\n    if [[ $a -eq $b ]]; then\n      if [[ $a -eq $c ]]; then\n\
    \        echo \"false\"\n      else\n        echo \"true\"\n      fi\n    elif\
    \ [[ $a -eq $c ]]; then\n      echo \"true\"\n    elif [[ $b -eq $c ]]; then\n\
    \      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010490
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=$((a > b ? a : b))\n\
    \  max=$((max > c ? max : c))\n  local min=$((a < b ? a : b))\n  min=$((min <\
    \ c ? min : c))\n  local mid=$((a + b + c - max - min))\n  if ((max * max == min\
    \ * min + mid * mid)); then\n    echo \"true\"\n  else\n    echo \"false\"\n \
    \ fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010490
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n    echo \"false\"\n \
    \ elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n    if [[ $1 -eq $(( $2 * $2 + $3 * $3 )) ]]; then\n\
    \      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  elif [[ $2 -gt\
    \ $1 && $2 -gt $3 ]]; then\n    if [[ $2 -eq $(( $1 * $1 + $3 * $3 )) ]]; then\n\
    \      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  elif [[ $3 -gt\
    \ $1 && $3 -gt $2 ]]; then\n    if [[ $3 -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n\
    \      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010490
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n    if [[ $1 -eq $2 &&\
    \ $2 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $2 || $2 -eq $3\
    \ || $1 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -gt $2 && $1 -gt\
    \ $3 ]]; then\n      if [[ $1 -eq $(($2*$2 + $3*$3)) ]]; then\n        echo \"\
    true\"\n      else\n        echo \"false\"\n      fi\n    elif [[ $2 -gt $1 &&\
    \ $2 -gt $3 ]]; then\n      if [[ $2 -eq $(($1*$1 + $3*$3)) ]]; then\n       \
    \ echo \"true\"\n      else\n        echo \"false\"\n      fi\n    elif [[ $3\
    \ -gt $1 && $3 -gt $2 ]]; then\n      if [[ $3 -eq $(($1*$1 + $2*$2)) ]]; then\n\
    \        echo \"true\"\n      else\n        echo \"false\"\n      fi\n    fi\n\
    \  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010490
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    if (( $a > $b && $a >\
    \ $c )); then\n        if (( $a * $a == $b * $b + $c * $c )); then\n         \
    \   echo \"true\"\n        else\n            echo \"false\"\n        fi\n    elif\
    \ (( $b > $a && $b > $c )); then\n        if (( $b * $b == $a * $a + $c * $c ));\
    \ then\n            echo \"true\"\n        else\n            echo \"false\"\n\
    \        fi\n    elif (( $c > $a && $c > $b )); then\n        if (( $c * $c ==\
    \ $a * $a + $b * $b )); then\n            echo \"true\"\n        else\n      \
    \      echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010490
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $# -ne 3 ]]; then\n        echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n        return 1\n    fi\n    if [[ ! $1 =~ ^[0-9]+$\
    \ ]]; then\n        echo \"Error: $1 is not an integer\"\n        return 1\n \
    \   fi\n    if [[ ! $2 =~ ^[0-9]+$ ]]; then\n        echo \"Error: $2 is not an\
    \ integer\"\n        return 1\n    fi\n    if [[ ! $3 =~ ^[0-9]+$ ]]; then\n \
    \       echo \"Error: $3 is not an integer\"\n        return 1\n    fi\n    if\
    \ [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n        echo \"false\"\n     \
    \   return 0\n    fi\n    if [[ $1 -eq $2 ]]; then\n        if [[ $1 -eq $3 ]];\
    \ then\n            echo \"false\"\n            return 0\n        fi\n    fi\n\
    \    if [[ $1 -eq $3 ]]; then\n        if [[ $1 -eq $2 ]]; then\n            echo\
    \ \"false\"\n            return 0\n        fi\n    fi\n    if [[ $2 -eq $3 ]];\
    \ then\n        if [[ $2 -eq $1 ]]; then\n            echo \"false\"\n       \
    \     return 0\n        fi\n    fi\n    if [[ $1 -eq $2 ]]; then\n        if [[\
    \ $1 -eq $3 ]]; then\n            echo \"false\"\n            return 0\n     \
    \   fi\n    fi\n    if [[ $1 -eq $3 ]]; then\n        if [[ $1 -eq $2 ]]; then\n\
    \            echo \"false\"\n            return 0\n        fi\n    fi\n    if\
    \ [[ $2 -eq $3 ]]; then\n        if [[ $2 -eq $1 ]]; then\n            echo \"\
    false\"\n            return 0\n        fi\n    fi\n    if [[ $1 -eq $2 ]]; then\n\
    \        if [[ $1 -eq $3 ]]; then\n            echo \"false\"\n            return\
    \ 0\n        fi\n    fi\n    if [[ $1 -eq $3 ]]; then\n        if [[ $1 -eq $2\
    \ ]\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprcrtyzrx.sh: line 79: syntax error in conditional expression

    /tmp/tmprcrtyzrx.sh: line 79: syntax error near `]''

    /tmp/tmprcrtyzrx.sh: line 79: `        if [[ $1 -eq $2 ]''

    '
  stdout: ''
  timestamp: 1660010490
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  if [ $a -gt $b ] && [ $a -gt\
    \ $c ]; then\n    if [ $((a*a)) -eq $((b*b+c*c)) ]; then\n      echo \"true\"\n\
    \    else\n      echo \"false\"\n    fi\n  elif [ $b -gt $a ] && [ $b -gt $c ];\
    \ then\n    if [ $((b*b)) -eq $((a*a+c*c)) ]; then\n      echo \"true\"\n    else\n\
    \      echo \"false\"\n    fi\n  elif [ $c -gt $a ] && [ $c -gt $b ]; then\n \
    \   if [ $((c*c)) -eq $((a*a+b*b)) ]; then\n      echo \"true\"\n    else\n  \
    \    echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010490
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  if [[ $a -gt 0 && $b -gt 0 &&\
    \ $c -gt 0 ]]; then\n    if [[ $((a*a)) -eq $((b*b+c*c)) || $((b*b)) -eq $((a*a+c*c))\
    \ || $((c*c)) -eq $((a*a+b*b)) ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010490
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=0\n  local sum=0\n\
    \  local result=\"false\"\n  if [ $a -gt $b ]; then\n    max=$a\n  else\n    max=$b\n\
    \  fi\n  if [ $max -lt $c ]; then\n    max=$c\n  fi\n  if [ $max -eq $a ]; then\n\
    \    sum=$((b*b+c*c))\n  elif [ $max -eq $b ]; then\n    sum=$((a*a+c*c))\n  else\n\
    \    sum=$((a*a+b*b))\n  fi\n  if [ $sum -eq $((max*max)) ]; then\n    result=\"\
    true\"\n  fi\n  echo $result\n}\n\ncandidate() {\n    right_angle_triangle \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010490
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n        if [[ $1 -eq\
    \ $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n            echo \"false\"\n        elif\
    \ [[ $1 -gt $2 && $1 -gt $3 ]]; then\n            if [[ $(( $1 * $1 )) -eq $((\
    \ $2 * $2 + $3 * $3 )) ]]; then\n                echo \"true\"\n            else\n\
    \                echo \"false\"\n            fi\n        elif [[ $2 -gt $1 &&\
    \ $2 -gt $3 ]]; then\n            if [[ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 *\
    \ $3 )) ]]; then\n                echo \"true\"\n            else\n          \
    \      echo \"false\"\n            fi\n        elif [[ $3 -gt $1 && $3 -gt $2\
    \ ]]; then\n            if [[ $(( $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]];\
    \ then\n                echo \"true\"\n            else\n                echo\
    \ \"false\"\n            fi\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    if [ $a -gt $b ] && [\
    \ $a -gt $c ]; then\n        if [ $((a*a)) -eq $((b*b+c*c)) ]; then\n        \
    \    echo \"true\"\n        else\n            echo \"false\"\n        fi\n   \
    \ elif [ $b -gt $a ] && [ $b -gt $c ]; then\n        if [ $((b*b)) -eq $((a*a+c*c))\
    \ ]; then\n            echo \"true\"\n        else\n            echo \"false\"\
    \n        fi\n    elif [ $c -gt $a ] && [ $c -gt $b ]; then\n        if [ $((c*c))\
    \ -eq $((a*a+b*b)) ]; then\n            echo \"true\"\n        else\n        \
    \    echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\
    \ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010490
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n    if [[ $1 -eq $2 &&\
    \ $2 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $2 || $2 -eq $3\
    \ || $1 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -gt $2 && $1 -gt\
    \ $3 ]]; then\n      if [[ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]]; then\n\
    \        echo \"true\"\n      else\n        echo \"false\"\n      fi\n    elif\
    \ [[ $2 -gt $1 && $2 -gt $3 ]]; then\n      if [[ $(( $2 * $2 )) -eq $(( $1 *\
    \ $1 + $3 * $3 )) ]]; then\n        echo \"true\"\n      else\n        echo \"\
    false\"\n      fi\n    elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n      if [[ $((\
    \ $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n        echo \"true\"\n  \
    \    else\n        echo \"false\"\n      fi\n    fi\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010490
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n    echo \"false\"\n \
    \ elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n    if [[ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3\
    \ )) ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n    fi\n \
    \ elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n    if [[ $(( $2 * $2 )) -eq $(( $1\
    \ * $1 + $3 * $3 )) ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\
    \n    fi\n  elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n    if [[ $(( $3 * $3 ))\
    \ -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010490
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    local max=$a\n    local\
    \ min1=$b\n    local min2=$c\n    if [ $b -gt $max ]; then\n        max=$b\n \
    \       min1=$a\n        min2=$c\n    fi\n    if [ $c -gt $max ]; then\n     \
    \   max=$c\n        min1=$a\n        min2=$b\n    fi\n    if [ $((max*max)) -eq\
    \ $((min1*min1+min2*min2)) ]; then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    local max=$a\n    local\
    \ min1=$b\n    local min2=$c\n    if [ $b -gt $max ]; then\n        max=$b\n \
    \       min1=$a\n        min2=$c\n    fi\n    if [ $c -gt $max ]; then\n     \
    \   max=$c\n        min1=$a\n        min2=$b\n    fi\n    if [ $((max*max)) -eq\
    \ $((min1*min1+min2*min2)) ]; then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=0\n  local sum=0\n\
    \  local result=false\n  if [ $a -gt $b ]; then\n    if [ $a -gt $c ]; then\n\
    \      max=$a\n    else\n      max=$c\n    fi\n  else\n    if [ $b -gt $c ]; then\n\
    \      max=$b\n    else\n      max=$c\n    fi\n  fi\n  sum=$(($a*$a+$b*$b+$c*$c))\n\
    \  if [ $sum -eq $(($max*$max*2)) ]; then\n    result=true\n  fi\n  echo $result\n\
    }\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010490
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $# -ne 3 ]]; then\n        echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n        return 1\n    fi\n    if [[ $1 -eq 0 || $2 -eq\
    \ 0 || $3 -eq 0 ]]; then\n        echo \"false\"\n        return 0\n    fi\n \
    \   if [[ $1 -lt 0 || $2 -lt 0 || $3 -lt 0 ]]; then\n        echo \"false\"\n\
    \        return 0\n    fi\n    if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n       \
    \ echo \"false\"\n        return 0\n    fi\n    if [[ $1 -eq $2 || $2 -eq $3 ||\
    \ $1 -eq $3 ]]; then\n        echo \"false\"\n        return 0\n    fi\n    if\
    \ [[ $1 -gt $2 && $1 -gt $3 ]]; then\n        if [[ $(( $1 * $1 )) -eq $(( $2\
    \ * $2 + $3 * $3 )) ]]; then\n            echo \"true\"\n            return 0\n\
    \        fi\n    fi\n    if [[ $2 -gt $1 && $2 -gt $3 ]]; then\n        if [[\
    \ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]]; then\n            echo \"true\"\
    \n            return 0\n        fi\n    fi\n    if [[ $3 -gt $1 && $3 -gt $2 ]];\
    \ then\n        if [[ $(( $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n \
    \           echo \"true\"\n            return 0\n        fi\n    fi\n    echo\
    \ \"false\"\n    return 0\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    local max=0\n    local\
    \ sum=0\n    local result=\"false\"\n    if [ $a -gt $b ]; then\n        max=$a\n\
    \    else\n        max=$b\n    fi\n    if [ $max -lt $c ]; then\n        max=$c\n\
    \    fi\n    if [ $max -eq $a ]; then\n        sum=$((b*b+c*c))\n    elif [ $max\
    \ -eq $b ]; then\n        sum=$((a*a+c*c))\n    else\n        sum=$((a*a+b*b))\n\
    \    fi\n    if [ $sum -eq $((max*max)) ]; then\n        result=\"true\"\n   \
    \ fi\n    echo $result\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n    echo \"false\"\n \
    \ elif [[ $1 -eq $2 ]]; then\n    if [[ $1 -eq $3 ]]; then\n      echo \"false\"\
    \n    else\n      echo \"true\"\n    fi\n  elif [[ $1 -eq $3 ]]; then\n    echo\
    \ \"true\"\n  elif [[ $2 -eq $3 ]]; then\n    echo \"true\"\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010490
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $# -ne 3 ]]; then\n        echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n        return 1\n    fi\n    if [[ $1 -eq 0 || $2 -eq\
    \ 0 || $3 -eq 0 ]]; then\n        echo \"false\"\n        return 0\n    fi\n \
    \   if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n        echo \"false\"\n        return\
    \ 0\n    fi\n    if [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n        echo\
    \ \"false\"\n        return 0\n    fi\n    if [[ $1 -gt $2 && $1 -gt $3 ]]; then\n\
    \        if [[ $1 -eq $(( $2 * $2 + $3 * $3 )) ]]; then\n            echo \"true\"\
    \n            return 0\n        fi\n    fi\n    if [[ $2 -gt $1 && $2 -gt $3 ]];\
    \ then\n        if [[ $2 -eq $(( $1 * $1 + $3 * $3 )) ]]; then\n            echo\
    \ \"true\"\n            return 0\n        fi\n    fi\n    if [[ $3 -gt $1 && $3\
    \ -gt $2 ]]; then\n        if [[ $3 -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n  \
    \          echo \"true\"\n            return 0\n        fi\n    fi\n    echo \"\
    false\"\n    return 0\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n        if [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n            if [[ $(($1 * $1)) -eq $(($2 * $2 + $3\
    \ * $3)) ]]; then\n                echo \"true\"\n            else\n         \
    \       echo \"false\"\n            fi\n        elif [[ $2 -gt $1 && $2 -gt $3\
    \ ]]; then\n            if [[ $(($2 * $2)) -eq $(($1 * $1 + $3 * $3)) ]]; then\n\
    \                echo \"true\"\n            else\n                echo \"false\"\
    \n            fi\n        elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n          \
    \  if [[ $(($3 * $3)) -eq $(($1 * $1 + $2 * $2)) ]]; then\n                echo\
    \ \"true\"\n            else\n                echo \"false\"\n            fi\n\
    \        else\n            echo \"false\"\n        fi\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    if (( $a > $b && $a >\
    \ $c )); then\n        if (( $a * $a == $b * $b + $c * $c )); then\n         \
    \   echo \"true\"\n        else\n            echo \"false\"\n        fi\n    elif\
    \ (( $b > $a && $b > $c )); then\n        if (( $b * $b == $a * $a + $c * $c ));\
    \ then\n            echo \"true\"\n        else\n            echo \"false\"\n\
    \        fi\n    elif (( $c > $a && $c > $b )); then\n        if (( $c * $c ==\
    \ $a * $a + $b * $b )); then\n            echo \"true\"\n        else\n      \
    \      echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010490
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=$a\n  local min1=$b\n\
    \  local min2=$c\n  if [ $b -gt $max ]; then\n    max=$b\n    min1=$a\n    min2=$c\n\
    \  fi\n  if [ $c -gt $max ]; then\n    max=$c\n    min1=$a\n    min2=$b\n  fi\n\
    \  if [ $((max*max)) -eq $((min1*min1+min2*min2)) ]; then\n    echo \"true\"\n\
    \  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=$a\n  local mid=$b\n\
    \  local min=$c\n  if [ $a -lt $b ]; then\n    max=$b\n    mid=$a\n  fi\n  if\
    \ [ $max -lt $c ]; then\n    min=$mid\n    mid=$max\n    max=$c\n  fi\n  if [\
    \ $mid -lt $c ]; then\n    min=$mid\n    mid=$c\n  fi\n  if [ $((max*max)) -eq\
    \ $((mid*mid+min*min)) ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n\
    \  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    local max=$a\n    local\
    \ min1=$b\n    local min2=$c\n    if [[ $b -gt $max ]]; then\n        max=$b\n\
    \        min1=$a\n        min2=$c\n    fi\n    if [[ $c -gt $max ]]; then\n  \
    \      max=$c\n        min1=$a\n        min2=$b\n    fi\n    if [[ $max -eq $min1\
    \ ]]; then\n        min1=$min2\n    fi\n    if [[ $max -eq $min2 ]]; then\n  \
    \      min2=$min1\n    fi\n    if [[ $((max*max)) -eq $((min1*min1+min2*min2))\
    \ ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local result=\"false\"\n  if\
    \ (( $a > 0 && $b > 0 && $c > 0 )); then\n    if (( $a*$a + $b*$b == $c*$c ||\
    \ $a*$a + $c*$c == $b*$b || $b*$b + $c*$c == $a*$a )); then\n      result=\"true\"\
    \n    fi\n  fi\n  echo $result\n}\n\ncandidate() {\n    right_angle_triangle \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n        echo \"false\"\
    \n        return\n    fi\n    if [[ $1 -lt 0 || $2 -lt 0 || $3 -lt 0 ]]; then\n\
    \        echo \"false\"\n        return\n    fi\n    if [[ $1 -eq $2 && $2 -eq\
    \ $3 ]]; then\n        echo \"false\"\n        return\n    fi\n    if [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n        echo \"false\"\n        return\n\
    \    fi\n    if [[ $1 -gt $2 && $1 -gt $3 ]]; then\n        if [[ $1 -eq $(($2*$2\
    \ + $3*$3)) ]]; then\n            echo \"true\"\n            return\n        fi\n\
    \    fi\n    if [[ $2 -gt $1 && $2 -gt $3 ]]; then\n        if [[ $2 -eq $(($1*$1\
    \ + $3*$3)) ]]; then\n            echo \"true\"\n            return\n        fi\n\
    \    fi\n    if [[ $3 -gt $1 && $3 -gt $2 ]]; then\n        if [[ $3 -eq $(($1*$1\
    \ + $2*$2)) ]]; then\n            echo \"true\"\n            return\n        fi\n\
    \    fi\n    echo \"false\"\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n    echo \"false\"\n \
    \ elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n    if [[ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3\
    \ )) ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n    fi\n \
    \ elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n    if [[ $(( $2 * $2 )) -eq $(( $1\
    \ * $1 + $3 * $3 )) ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\
    \n    fi\n  elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n    if [[ $(( $3 * $3 ))\
    \ -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010490
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    if (( $a > $b && $a >\
    \ $c )); then\n        if (( $a * $a == $b * $b + $c * $c )); then\n         \
    \   echo \"true\"\n        else\n            echo \"false\"\n        fi\n    elif\
    \ (( $b > $a && $b > $c )); then\n        if (( $b * $b == $a * $a + $c * $c ));\
    \ then\n            echo \"true\"\n        else\n            echo \"false\"\n\
    \        fi\n    elif (( $c > $a && $c > $b )); then\n        if (( $c * $c ==\
    \ $a * $a + $b * $b )); then\n            echo \"true\"\n        else\n      \
    \      echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010490
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $# -ne 3 ]]; then\n        echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n        return 1\n    fi\n    if [[ $1 -eq 0 || $2 -eq\
    \ 0 || $3 -eq 0 ]]; then\n        echo \"false\"\n        return 0\n    fi\n \
    \   if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n        echo \"false\"\n        return\
    \ 0\n    fi\n    if [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n        echo\
    \ \"false\"\n        return 0\n    fi\n    if [[ $1 -gt $2 && $1 -gt $3 ]]; then\n\
    \        if [[ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]]; then\n        \
    \    echo \"true\"\n            return 0\n        fi\n    fi\n    if [[ $2 -gt\
    \ $1 && $2 -gt $3 ]]; then\n        if [[ $(( $2 * $2 )) -eq $(( $1 * $1 + $3\
    \ * $3 )) ]]; then\n            echo \"true\"\n            return 0\n        fi\n\
    \    fi\n    if [[ $3 -gt $1 && $3 -gt $2 ]]; then\n        if [[ $(( $3 * $3\
    \ )) -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n            echo \"true\"\n      \
    \      return 0\n        fi\n    fi\n    echo \"false\"\n    return 0\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    if [[ $a -gt $b ]]; then\n\
    \        if [[ $a -gt $c ]]; then\n            if [[ $a -eq $(( $b * $b + $c *\
    \ $c )) ]]; then\n                echo \"true\"\n            else\n          \
    \      echo \"false\"\n            fi\n        else\n            if [[ $c -eq\
    \ $(( $a * $a + $b * $b )) ]]; then\n                echo \"true\"\n         \
    \   else\n                echo \"false\"\n            fi\n        fi\n    else\n\
    \        if [[ $b -gt $c ]]; then\n            if [[ $b -eq $(( $a * $a + $c *\
    \ $c )) ]]; then\n                echo \"true\"\n            else\n          \
    \      echo \"false\"\n            fi\n        else\n            if [[ $c -eq\
    \ $(( $a * $a + $b * $b )) ]]; then\n                echo \"true\"\n         \
    \   else\n                echo \"false\"\n            fi\n        fi\n    fi\n\
    }\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    local max=$a\n    local\
    \ min1=$b\n    local min2=$c\n    if [ $b -gt $max ]; then\n        max=$b\n \
    \       min1=$a\n        min2=$c\n    fi\n    if [ $c -gt $max ]; then\n     \
    \   max=$c\n        min1=$a\n        min2=$b\n    fi\n    if [ $((max*max)) -eq\
    \ $((min1*min1+min2*min2)) ]; then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  if [[ $a -gt 0 && $b -gt 0 &&\
    \ $c -gt 0 ]]; then\n    if [[ $((a*a)) -eq $((b*b+c*c)) || $((b*b)) -eq $((a*a+c*c))\
    \ || $((c*c)) -eq $((a*a+b*b)) ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010490
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    if [ $a -gt $b ] && [\
    \ $a -gt $c ]; then\n        if [ $((a*a)) -eq $((b*b+c*c)) ]; then\n        \
    \    echo \"true\"\n        else\n            echo \"false\"\n        fi\n   \
    \ elif [ $b -gt $a ] && [ $b -gt $c ]; then\n        if [ $((b*b)) -eq $((a*a+c*c))\
    \ ]; then\n            echo \"true\"\n        else\n            echo \"false\"\
    \n        fi\n    elif [ $c -gt $a ] && [ $c -gt $b ]; then\n        if [ $((c*c))\
    \ -eq $((a*a+b*b)) ]; then\n            echo \"true\"\n        else\n        \
    \    echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\
    \ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010490
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    local max=$a\n    local\
    \ min1=$b\n    local min2=$c\n    if [[ $b -gt $max ]]; then\n        max=$b\n\
    \        min1=$a\n        min2=$c\n    fi\n    if [[ $c -gt $max ]]; then\n  \
    \      max=$c\n        min1=$a\n        min2=$b\n    fi\n    if [[ $((max*max))\
    \ -eq $((min1*min1+min2*min2)) ]]; then\n        echo \"true\"\n    else\n   \
    \     echo \"false\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    local max=$(echo \"$a\
    \ $b $c\" | tr ' ' '\\n' | sort -nr | head -n 1)\n    local sum=$(echo \"$a $b\
    \ $c\" | tr ' ' '\\n' | sort -nr | tail -n 2 | paste -sd+ | bc)\n    if [ $max\
    \ -eq $sum ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n\
    \    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n        if [[ $1 -eq\
    \ $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n            echo \"false\"\n        elif\
    \ [[ $1 -gt $2 && $1 -gt $3 ]]; then\n            if [[ $(($1 * $1)) -eq $(($2\
    \ * $2 + $3 * $3)) ]]; then\n                echo \"true\"\n            else\n\
    \                echo \"false\"\n            fi\n        elif [[ $2 -gt $1 &&\
    \ $2 -gt $3 ]]; then\n            if [[ $(($2 * $2)) -eq $(($1 * $1 + $3 * $3))\
    \ ]]; then\n                echo \"true\"\n            else\n                echo\
    \ \"false\"\n            fi\n        elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n\
    \            if [[ $(($3 * $3)) -eq $(($1 * $1 + $2 * $2)) ]]; then\n        \
    \        echo \"true\"\n            else\n                echo \"false\"\n   \
    \         fi\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n    if [[ $1 -eq $2 &&\
    \ $2 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $2 || $2 -eq $3\
    \ || $1 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -gt $2 && $1 -gt\
    \ $3 ]]; then\n      if [[ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]]; then\n\
    \        echo \"true\"\n      else\n        echo \"false\"\n      fi\n    elif\
    \ [[ $2 -gt $1 && $2 -gt $3 ]]; then\n      if [[ $(( $2 * $2 )) -eq $(( $1 *\
    \ $1 + $3 * $3 )) ]]; then\n        echo \"true\"\n      else\n        echo \"\
    false\"\n      fi\n    elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n      if [[ $((\
    \ $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n        echo \"true\"\n  \
    \    else\n        echo \"false\"\n      fi\n    fi\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010490
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n        echo \"false\"\
    \n        return\n    fi\n    if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    if [[ $1 -eq $2 || $2 -eq $3 || $1 -eq\
    \ $3 ]]; then\n        echo \"false\"\n        return\n    fi\n    if [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n        if [[ $1 -eq $(($2*$2 + $3*$3)) ]]; then\n\
    \            echo \"true\"\n            return\n        fi\n    fi\n    if [[\
    \ $2 -gt $1 && $2 -gt $3 ]]; then\n        if [[ $2 -eq $(($1*$1 + $3*$3)) ]];\
    \ then\n            echo \"true\"\n            return\n        fi\n    fi\n  \
    \  if [[ $3 -gt $1 && $3 -gt $2 ]]; then\n        if [[ $3 -eq $(($1*$1 + $2*$2))\
    \ ]]; then\n            echo \"true\"\n            return\n        fi\n    fi\n\
    \    echo \"false\"\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=0\n  local sum=0\n\
    \  local result=\"false\"\n  if [ $a -gt $b ]; then\n    max=$a\n  else\n    max=$b\n\
    \  fi\n  if [ $max -lt $c ]; then\n    max=$c\n  fi\n  sum=$(($a*$a+$b*$b+$c*$c))\n\
    \  if [ $sum -eq $(($max*$max*2)) ]; then\n    result=\"true\"\n  fi\n  echo $result\n\
    }\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n    if [[ $1 -eq $2 &&\
    \ $2 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $2 || $2 -eq $3\
    \ || $1 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -gt $2 && $1 -gt\
    \ $3 ]]; then\n      if [[ $1 -eq $(( $2 * $2 + $3 * $3 )) ]]; then\n        echo\
    \ \"true\"\n      else\n        echo \"false\"\n      fi\n    elif [[ $2 -gt $1\
    \ && $2 -gt $3 ]]; then\n      if [[ $2 -eq $(( $1 * $1 + $3 * $3 )) ]]; then\n\
    \        echo \"true\"\n      else\n        echo \"false\"\n      fi\n    elif\
    \ [[ $3 -gt $1 && $3 -gt $2 ]]; then\n      if [[ $3 -eq $(( $1 * $1 + $2 * $2\
    \ )) ]]; then\n        echo \"true\"\n      else\n        echo \"false\"\n   \
    \   fi\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n    echo \"false\"\n \
    \ elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n    if [[ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3\
    \ )) ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n    fi\n \
    \ elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n    if [[ $(( $2 * $2 )) -eq $(( $1\
    \ * $1 + $3 * $3 )) ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\
    \n    fi\n  elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n    if [[ $(( $3 * $3 ))\
    \ -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010490
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n        echo \"false\"\
    \n    elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n        echo \"false\"\n    elif\
    \ [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n        echo \"false\"\n  \
    \  elif [[ $1 -gt $2 && $1 -gt $3 ]]; then\n        if [[ $1 -eq $(( $2 * $2 +\
    \ $3 * $3 )) ]]; then\n            echo \"true\"\n        else\n            echo\
    \ \"false\"\n        fi\n    elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n       \
    \ if [[ $2 -eq $(( $1 * $1 + $3 * $3 )) ]]; then\n            echo \"true\"\n\
    \        else\n            echo \"false\"\n        fi\n    elif [[ $3 -gt $1 &&\
    \ $3 -gt $2 ]]; then\n        if [[ $3 -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n\
    \            echo \"true\"\n        else\n            echo \"false\"\n       \
    \ fi\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") =\
    \ \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    local result=\"false\"\
    \n    if [ $a -gt 0 ] && [ $b -gt 0 ] && [ $c -gt 0 ]; then\n        if [ $a -eq\
    \ $b ] && [ $b -eq $c ]; then\n            result=\"true\"\n        elif [ $a\
    \ -eq $b ] || [ $b -eq $c ] || [ $a -eq $c ]; then\n            result=\"false\"\
    \n        else\n            if [ $((a*a+b*b)) -eq $((c*c)) ] || [ $((a*a+c*c))\
    \ -eq $((b*b)) ] || [ $((b*b+c*c)) -eq $((a*a)) ]; then\n                result=\"\
    true\"\n            fi\n        fi\n    fi\n    echo $result\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n        return 1\n    fi\n    if [[ ! $1 =~ ^[0-9]+$\
    \ ]]; then\n        echo \"Error: $1 is not an integer\"\n        return 1\n \
    \   fi\n    if [[ ! $2 =~ ^[0-9]+$ ]]; then\n        echo \"Error: $2 is not an\
    \ integer\"\n        return 1\n    fi\n    if [[ ! $3 =~ ^[0-9]+$ ]]; then\n \
    \       echo \"Error: $3 is not an integer\"\n        return 1\n    fi\n    if\
    \ [ $1 -eq 0 ] || [ $2 -eq 0 ] || [ $3 -eq 0 ]; then\n        echo \"false\"\n\
    \        return 0\n    fi\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n     \
    \   echo \"false\"\n        return 0\n    fi\n    if [ $1 -eq $2 ] || [ $2 -eq\
    \ $3 ] || [ $1 -eq $3 ]; then\n        echo \"false\"\n        return 0\n    fi\n\
    \    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"\
    false\"\n        return 0\n    fi\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [\
    \ $1 -eq $3 ]; then\n        echo \"false\"\n        return 0\n    fi\n    if\
    \ [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"false\"\
    \n        return 0\n    fi\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq\
    \ $3 ]; then\n        echo \"false\"\n        return 0\n    fi\n    if [ $1 -eq\
    \ $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"false\"\n     \
    \   return 0\n    fi\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppudxgxue.sh: line 65: syntax error near unexpected token `}''

    /tmp/tmppudxgxue.sh: line 65: `}''

    '
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n    echo \"false\"\n \
    \ elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n    if [[ $1 -eq $(( $2 * $2 + $3 * $3 )) ]]; then\n\
    \      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  elif [[ $2 -gt\
    \ $1 && $2 -gt $3 ]]; then\n    if [[ $2 -eq $(( $1 * $1 + $3 * $3 )) ]]; then\n\
    \      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  elif [[ $3 -gt\
    \ $1 && $3 -gt $2 ]]; then\n    if [[ $3 -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n\
    \      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010490
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    local max=$a\n    local\
    \ mid=$b\n    local min=$c\n    if [ $a -lt $b ]; then\n        max=$b\n     \
    \   mid=$a\n    fi\n    if [ $max -lt $c ]; then\n        min=$mid\n        mid=$max\n\
    \        max=$c\n    fi\n    if [ $mid -lt $c ]; then\n        min=$mid\n    \
    \    mid=$c\n    fi\n    if [ $((max*max)) -eq $((mid*mid+min*min)) ]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  if [[ $a -gt 0 && $b -gt 0 &&\
    \ $c -gt 0 ]]; then\n    if [[ $a -eq $b && $b -eq $c ]]; then\n      echo \"\
    false\"\n    elif [[ $a -eq $b || $b -eq $c || $a -eq $c ]]; then\n      echo\
    \ \"false\"\n    elif [[ $a -eq $(( $b * $b + $c * $c )) || $b -eq $(( $a * $a\
    \ + $c * $c )) || $c -eq $(( $a * $a + $b * $b )) ]]; then\n      echo \"true\"\
    \n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local result=\"false\"\n  if\
    \ [ $a -gt 0 ] && [ $b -gt 0 ] && [ $c -gt 0 ]; then\n    if [ $a -eq $b ] &&\
    \ [ $b -eq $c ]; then\n      result=\"true\"\n    elif [ $a -eq $b ] || [ $b -eq\
    \ $c ] || [ $a -eq $c ]; then\n      result=\"false\"\n    else\n      if [ $a\
    \ -gt $b ] && [ $a -gt $c ]; then\n        if [ $((a*a)) -eq $((b*b+c*c)) ]; then\n\
    \          result=\"true\"\n        fi\n      elif [ $b -gt $a ] && [ $b -gt $c\
    \ ]; then\n        if [ $((b*b)) -eq $((a*a+c*c)) ]; then\n          result=\"\
    true\"\n        fi\n      elif [ $c -gt $a ] && [ $c -gt $b ]; then\n        if\
    \ [ $((c*c)) -eq $((a*a+b*b)) ]; then\n          result=\"true\"\n        fi\n\
    \      fi\n    fi\n  fi\n  echo \"$result\"\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local result=\"false\"\n  if\
    \ [[ $a -gt 0 && $b -gt 0 && $c -gt 0 ]]; then\n    if [[ $((a*a)) -eq $((b*b+c*c))\
    \ || $((b*b)) -eq $((a*a+c*c)) || $((c*c)) -eq $((a*a+b*b)) ]]; then\n      result=\"\
    true\"\n    fi\n  fi\n  echo $result\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  if [ $a -gt $b ] && [ $a -gt\
    \ $c ]; then\n    if [ $((a*a)) -eq $((b*b+c*c)) ]; then\n      echo \"true\"\n\
    \    else\n      echo \"false\"\n    fi\n  elif [ $b -gt $a ] && [ $b -gt $c ];\
    \ then\n    if [ $((b*b)) -eq $((a*a+c*c)) ]; then\n      echo \"true\"\n    else\n\
    \      echo \"false\"\n    fi\n  elif [ $c -gt $a ] && [ $c -gt $b ]; then\n \
    \   if [ $((c*c)) -eq $((a*a+b*b)) ]; then\n      echo \"true\"\n    else\n  \
    \    echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010490
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $# -ne 3 ]]; then\n    echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n    return 1\n  fi\n  if [[ $1 -eq 0 || $2 -eq 0 || $3\
    \ -eq 0 ]]; then\n    echo \"false\"\n    return 0\n  fi\n  if [[ $1 -eq $2 ]];\
    \ then\n    if [[ $2 -eq $3 ]]; then\n      echo \"false\"\n      return 0\n \
    \   fi\n  fi\n  if [[ $1 -eq $3 ]]; then\n    if [[ $2 -eq $3 ]]; then\n     \
    \ echo \"false\"\n      return 0\n    fi\n  fi\n  if [[ $2 -eq $3 ]]; then\n \
    \   if [[ $1 -eq $3 ]]; then\n      echo \"false\"\n      return 0\n    fi\n \
    \ fi\n  if [[ $1 -eq $2 ]]; then\n    if [[ $2 -eq $3 ]]; then\n      echo \"\
    false\"\n      return 0\n    fi\n  fi\n  if [[ $1 -eq $3 ]]; then\n    if [[ $2\
    \ -eq $3 ]]; then\n      echo \"false\"\n      return 0\n    fi\n  fi\n  if [[\
    \ $2 -eq $3 ]]; then\n    if [[ $1 -eq $3 ]]; then\n      echo \"false\"\n   \
    \   return 0\n    fi\n  fi\n  if [[ $1 -eq $2 ]]; then\n    if [[ $2 -eq $3 ]];\
    \ then\n      echo \"false\"\n      return 0\n    fi\n  fi\n  if [[ $1 -eq $3\
    \ ]]; then\n    if [[ $2 -eq $3 ]]; then\n      echo \"false\"\n      return 0\n\
    \    fi\n  fi\n  if [[ $2 -eq $3 ]]; then\n    if [[ $1 -eq $3 ]]; then\n    \
    \  echo \"false\"\n      return 0\n    fi\n  fi\n  if [[ $1 -eq $2 ]]; then\n\
    \    if [[ $2 -eq $3 ]]; then\n      echo \"false\"\n      return 0\n    fi\n\
    \  fi\n  if [[ $1 -eq $3 ]]; then\n   \n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpt2lwpks5.sh: line 86: syntax error near unexpected token `}''

    /tmp/tmpt2lwpks5.sh: line 86: `}''

    '
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    if [[ $a -gt $b ]]; then\n\
    \        if [[ $a -gt $c ]]; then\n            if [[ $((a*a)) -eq $((b*b+c*c))\
    \ ]]; then\n                echo \"true\"\n            else\n                echo\
    \ \"false\"\n            fi\n        else\n            if [[ $((c*c)) -eq $((a*a+b*b))\
    \ ]]; then\n                echo \"true\"\n            else\n                echo\
    \ \"false\"\n            fi\n        fi\n    else\n        if [[ $b -gt $c ]];\
    \ then\n            if [[ $((b*b)) -eq $((a*a+c*c)) ]]; then\n               \
    \ echo \"true\"\n            else\n                echo \"false\"\n          \
    \  fi\n        else\n            if [[ $((c*c)) -eq $((a*a+b*b)) ]]; then\n  \
    \              echo \"true\"\n            else\n                echo \"false\"\
    \n            fi\n        fi\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n    return 1\n  fi\n  if ! [[ $1 =~ ^[0-9]+$ ]]; then\n\
    \    echo \"Error: $1 is not an integer\"\n    return 1\n  fi\n  if ! [[ $2 =~\
    \ ^[0-9]+$ ]]; then\n    echo \"Error: $2 is not an integer\"\n    return 1\n\
    \  fi\n  if ! [[ $3 =~ ^[0-9]+$ ]]; then\n    echo \"Error: $3 is not an integer\"\
    \n    return 1\n  fi\n  if [ $1 -eq 0 ] || [ $2 -eq 0 ] || [ $3 -eq 0 ]; then\n\
    \    echo \"false\"\n    return 0\n  fi\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ];\
    \ then\n    echo \"false\"\n    return 0\n  fi\n  if [ $1 -eq $2 ] || [ $2 -eq\
    \ $3 ] || [ $1 -eq $3 ]; then\n    echo \"false\"\n    return 0\n  fi\n  if [\
    \ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n    echo \"false\"\n  \
    \  return 0\n  fi\n  if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n\
    \    echo \"false\"\n    return 0\n  fi\n  if [ $1 -eq $2 ] || [ $2 -eq $3 ] ||\
    \ [ $1 -eq $3 ]; then\n    echo \"false\"\n    return 0\n  fi\n  if [ $1 -eq $2\
    \ ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n    echo \"false\"\n    return 0\n\
    \  fi\n  if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n    echo \"\
    false\"\n    return 0\n  fi\n  if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1\n}\n\n\
    candidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n\
    \    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\"\
    \ \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\"\
    \ ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[\
    \ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpae7lj2x7.sh: line 65: syntax error near unexpected token `}''

    /tmp/tmpae7lj2x7.sh: line 65: `}''

    '
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    local max=$a\n    local\
    \ min1=$b\n    local min2=$c\n    if [[ $b -gt $max ]]; then\n        max=$b\n\
    \        min1=$a\n        min2=$c\n    fi\n    if [[ $c -gt $max ]]; then\n  \
    \      max=$c\n        min1=$a\n        min2=$b\n    fi\n    if [[ $((max*max))\
    \ -eq $((min1*min1+min2*min2)) ]]; then\n        echo \"true\"\n    else\n   \
    \     echo \"false\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $# -ne 3 ]]; then\n    echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n    return 1\n  fi\n  if [[ $1 -eq 0 || $2 -eq 0 || $3\
    \ -eq 0 ]]; then\n    echo \"false\"\n    return 0\n  fi\n  if [[ $1 -eq $2 &&\
    \ $2 -eq $3 ]]; then\n    echo \"false\"\n    return 0\n  fi\n  if [[ $1 -eq $2\
    \ || $2 -eq $3 || $1 -eq $3 ]]; then\n    echo \"false\"\n    return 0\n  fi\n\
    \  if [[ $1 -gt $2 && $1 -gt $3 ]]; then\n    if [[ $1 -eq $(($2*$2 + $3*$3))\
    \ ]]; then\n      echo \"true\"\n      return 0\n    fi\n  fi\n  if [[ $2 -gt\
    \ $1 && $2 -gt $3 ]]; then\n    if [[ $2 -eq $(($1*$1 + $3*$3)) ]]; then\n   \
    \   echo \"true\"\n      return 0\n    fi\n  fi\n  if [[ $3 -gt $1 && $3 -gt $2\
    \ ]]; then\n    if [[ $3 -eq $(($1*$1 + $2*$2)) ]]; then\n      echo \"true\"\n\
    \      return 0\n    fi\n  fi\n  echo \"false\"\n  return 0\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n    if [[ $1 -eq $2 &&\
    \ $2 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $2 || $2 -eq $3\
    \ || $1 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $(( $2 * $2\
    \ + $3 * $3 )) || $2 -eq $(( $1 * $1 + $3 * $3 )) || $3 -eq $(( $1 * $1 + $2 *\
    \ $2 )) ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n    fi\n\
    \  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=$a\n  local min1=$b\n\
    \  local min2=$c\n  if [ $b -gt $max ]; then\n    max=$b\n    min1=$a\n    min2=$c\n\
    \  fi\n  if [ $c -gt $max ]; then\n    max=$c\n    min1=$a\n    min2=$b\n  fi\n\
    \  if [ $((max*max)) -eq $((min1*min1+min2*min2)) ]; then\n    echo \"true\"\n\
    \  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=$a\n  local min1=$b\n\
    \  local min2=$c\n  if [ $a -lt $b ]; then\n    max=$b\n    min1=$a\n  fi\n  if\
    \ [ $max -lt $c ]; then\n    max=$c\n    min1=$b\n    min2=$a\n  fi\n  if [ $min1\
    \ -lt $min2 ]; then\n    local tmp=$min1\n    min1=$min2\n    min2=$tmp\n  fi\n\
    \  if [ $((max*max)) -eq $((min1*min1+min2*min2)) ]; then\n    echo \"true\"\n\
    \  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    local result=\"false\"\
    \n    if [[ $a -gt 0 && $b -gt 0 && $c -gt 0 ]]; then\n        if [[ $a -eq $b\
    \ && $b -eq $c ]]; then\n            result=\"true\"\n        elif [[ $a -eq $b\
    \ && $b -ne $c ]]; then\n            if [[ $(( $a * $a + $b * $b )) -eq $(( $c\
    \ * $c )) ]]; then\n                result=\"true\"\n            fi\n        elif\
    \ [[ $a -eq $c && $c -ne $b ]]; then\n            if [[ $(( $a * $a + $c * $c\
    \ )) -eq $(( $b * $b )) ]]; then\n                result=\"true\"\n          \
    \  fi\n        elif [[ $b -eq $c && $c -ne $a ]]; then\n            if [[ $((\
    \ $b * $b + $c * $c )) -eq $(( $a * $a )) ]]; then\n                result=\"\
    true\"\n            fi\n        elif [[ $a -ne $b && $b -ne $c && $c -ne $a ]];\
    \ then\n            if [[ $(( $a * $a + $b * $b )) -eq $(( $c * $c )) ]]; then\n\
    \                result=\"true\"\n            elif [[ $(( $a * $a + $c * $c ))\
    \ -eq $(( $b * $b )) ]]; then\n                result=\"true\"\n            elif\
    \ [[ $(( $b * $b + $c * $c )) -eq $(( $a * $a )) ]]; then\n                result=\"\
    true\"\n            fi\n        fi\n    fi\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  if (( $a > 0 && $b > 0 && $c\
    \ > 0 )); then\n    if (( $a*$a + $b*$b == $c*$c )); then\n      echo \"true\"\
    \n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    local max=$a\n    local\
    \ min1=$b\n    local min2=$c\n    if [[ $b -gt $max ]]; then\n        max=$b\n\
    \        min1=$a\n        min2=$c\n    fi\n    if [[ $c -gt $max ]]; then\n  \
    \      max=$c\n        min1=$a\n        min2=$b\n    fi\n    if [[ $((max*max))\
    \ -eq $((min1*min1+min2*min2)) ]]; then\n        echo \"true\"\n    else\n   \
    \     echo \"false\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n        echo \"false\"\
    \n        return\n    fi\n    if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    if [[ $1 -eq $2 || $2 -eq $3 || $1 -eq\
    \ $3 ]]; then\n        echo \"false\"\n        return\n    fi\n    if [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n        if [[ $(( $1 * $1 )) -eq $(( $2 * $2 + $3\
    \ * $3 )) ]]; then\n            echo \"true\"\n            return\n        fi\n\
    \    fi\n    if [[ $2 -gt $1 && $2 -gt $3 ]]; then\n        if [[ $(( $2 * $2\
    \ )) -eq $(( $1 * $1 + $3 * $3 )) ]]; then\n            echo \"true\"\n      \
    \      return\n        fi\n    fi\n    if [[ $3 -gt $1 && $3 -gt $2 ]]; then\n\
    \        if [[ $(( $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n        \
    \    echo \"true\"\n            return\n        fi\n    fi\n    echo \"false\"\
    \n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    if ((a*a+b*b==c*c)) ||\
    \ ((a*a+c*c==b*b)) || ((b*b+c*c==a*a)); then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    if [[ $a -gt $b ]]; then\n\
    \        if [[ $a -gt $c ]]; then\n            if [[ $a -eq $(($b**2 + $c**2))**0.5\
    \ ]]; then\n                echo \"true\"\n            else\n                echo\
    \ \"false\"\n            fi\n        else\n            if [[ $c -eq $(($a**2 +\
    \ $b**2))**0.5 ]]; then\n                echo \"true\"\n            else\n   \
    \             echo \"false\"\n            fi\n        fi\n    else\n        if\
    \ [[ $b -gt $c ]]; then\n            if [[ $b -eq $(($a**2 + $c**2))**0.5 ]];\
    \ then\n                echo \"true\"\n            else\n                echo\
    \ \"false\"\n            fi\n        else\n            if [[ $c -eq $(($a**2 +\
    \ $b**2))**0.5 ]]; then\n                echo \"true\"\n            else\n   \
    \             echo \"false\"\n            fi\n        fi\n    fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpk04klycn.sh: line 41: [[: 25**0.5: syntax error: invalid arithmetic
    operator (error token is ".5")

    '
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n    if [[ $1 -eq $2 &&\
    \ $2 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $2 || $2 -eq $3\
    \ || $1 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -gt $2 && $1 -gt\
    \ $3 ]]; then\n      if [[ $1 -eq $(($2 * $2 + $3 * $3)) ]]; then\n        echo\
    \ \"true\"\n      else\n        echo \"false\"\n      fi\n    elif [[ $2 -gt $1\
    \ && $2 -gt $3 ]]; then\n      if [[ $2 -eq $(($1 * $1 + $3 * $3)) ]]; then\n\
    \        echo \"true\"\n      else\n        echo \"false\"\n      fi\n    elif\
    \ [[ $3 -gt $1 && $3 -gt $2 ]]; then\n      if [[ $3 -eq $(($1 * $1 + $2 * $2))\
    \ ]]; then\n        echo \"true\"\n      else\n        echo \"false\"\n      fi\n\
    \    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    local result=\"false\"\
    \n    if (( $a*$a + $b*$b == $c*$c )) || (( $a*$a + $c*$c == $b*$b )) || (( $b*$b\
    \ + $c*$c == $a*$a )); then\n        result=\"true\"\n    fi\n    echo $result\n\
    }\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  if [ $a -gt $b ] && [ $a -gt\
    \ $c ]; then\n    if [ $((a*a)) -eq $((b*b+c*c)) ]; then\n      echo \"true\"\n\
    \    else\n      echo \"false\"\n    fi\n  elif [ $b -gt $a ] && [ $b -gt $c ];\
    \ then\n    if [ $((b*b)) -eq $((a*a+c*c)) ]; then\n      echo \"true\"\n    else\n\
    \      echo \"false\"\n    fi\n  elif [ $c -gt $a ] && [ $c -gt $b ]; then\n \
    \   if [ $((c*c)) -eq $((a*a+b*b)) ]; then\n      echo \"true\"\n    else\n  \
    \    echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010490
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $# -ne 3 ]]; then\n    echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n    return 1\n  fi\n  if [[ ! $1 =~ ^[0-9]+$ ]]; then\n\
    \    echo \"Error: $1 is not an integer\"\n    return 1\n  fi\n  if [[ ! $2 =~\
    \ ^[0-9]+$ ]]; then\n    echo \"Error: $2 is not an integer\"\n    return 1\n\
    \  fi\n  if [[ ! $3 =~ ^[0-9]+$ ]]; then\n    echo \"Error: $3 is not an integer\"\
    \n    return 1\n  fi\n  if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n    echo\
    \ \"false\"\n    return 0\n  fi\n  if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n   \
    \ echo \"false\"\n    return 0\n  fi\n  if [[ $1 -eq $2 || $2 -eq $3 || $1 -eq\
    \ $3 ]]; then\n    echo \"false\"\n    return 0\n  fi\n  if [[ $1 -gt $2 && $1\
    \ -gt $3 ]]; then\n    if [[ $1 -eq $(( $2 * $2 + $3 * $3 )) ]]; then\n      echo\
    \ \"true\"\n      return 0\n    fi\n  fi\n  if [[ $2 -gt $1 && $2 -gt $3 ]]; then\n\
    \    if [[ $2 -eq $(( $1 * $1 + $3 * $3 )) ]]; then\n      echo \"true\"\n   \
    \   return 0\n    fi\n  fi\n  if [[ $3 -gt $1 && $3 -gt $2 ]]; then\n    if [[\
    \ $3 -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n      echo \"true\"\n      return\
    \ 0\n    fi\n  fi\n  echo \"false\"\n  return 0\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n        return 1\n    fi\n    if [[ ! $1 =~ ^[0-9]+$\
    \ ]]; then\n        echo \"Usage: right_angle_triangle <integer> <integer> <integer>\"\
    \n        return 1\n    fi\n    if [[ ! $2 =~ ^[0-9]+$ ]]; then\n        echo\
    \ \"Usage: right_angle_triangle <integer> <integer> <integer>\"\n        return\
    \ 1\n    fi\n    if [[ ! $3 =~ ^[0-9]+$ ]]; then\n        echo \"Usage: right_angle_triangle\
    \ <integer> <integer> <integer>\"\n        return 1\n    fi\n    if [ $1 -eq 0\
    \ ] || [ $2 -eq 0 ] || [ $3 -eq 0 ]; then\n        echo \"false\"\n        return\
    \ 0\n    fi\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo \"false\"\
    \n        return 0\n    fi\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq\
    \ $3 ]; then\n        echo \"false\"\n        return 0\n    fi\n    if [ $1 -gt\
    \ $2 ] && [ $1 -gt $3 ]; then\n        if [ $(( $1 * $1 )) -eq $(( $2 * $2 + $3\
    \ * $3 )) ]; then\n            echo \"true\"\n            return 0\n        fi\n\
    \    fi\n    if [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        if [ $(( $2 * $2\
    \ )) -eq $(( $1 * $1 + $3 * $3 )) ]; then\n            echo \"true\"\n       \
    \     return 0\n        fi\n    fi\n    if [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n\
    \        if [ $(( $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]; then\n          \
    \  echo \"true\"\n            return 0\n        fi\n    fi\n    echo \"false\"\
    \n    return 0\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"\
    6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n\
    \    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"\
    10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"\
    true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate\
    \ \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    local max=$a\n    local\
    \ min1=$b\n    local min2=$c\n    if [ $b -gt $max ]; then\n        max=$b\n \
    \       min1=$a\n        min2=$c\n    fi\n    if [ $c -gt $max ]; then\n     \
    \   max=$c\n        min1=$a\n        min2=$b\n    fi\n    if [ $((max * max))\
    \ -eq $((min1 * min1 + min2 * min2)) ]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local result=\"false\"\n  if\
    \ [[ $a -gt 0 && $b -gt 0 && $c -gt 0 ]]; then\n    if [[ $a -eq $b && $b -eq\
    \ $c ]]; then\n      result=\"false\"\n    elif [[ $a -eq $b || $b -eq $c || $a\
    \ -eq $c ]]; then\n      result=\"true\"\n    elif [[ $a -gt $b && $a -gt $c ]];\
    \ then\n      if [[ $((a*a)) -eq $((b*b+c*c)) ]]; then\n        result=\"true\"\
    \n      fi\n    elif [[ $b -gt $a && $b -gt $c ]]; then\n      if [[ $((b*b))\
    \ -eq $((a*a+c*c)) ]]; then\n        result=\"true\"\n      fi\n    elif [[ $c\
    \ -gt $a && $c -gt $b ]]; then\n      if [[ $((c*c)) -eq $((a*a+b*b)) ]]; then\n\
    \        result=\"true\"\n      fi\n    fi\n  fi\n  echo \"$result\"\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=$a\n  local min1=$b\n\
    \  local min2=$c\n  if [ $b -gt $max ]; then\n    max=$b\n    min1=$a\n    min2=$c\n\
    \  fi\n  if [ $c -gt $max ]; then\n    max=$c\n    min1=$a\n    min2=$b\n  fi\n\
    \  if [ $((max*max)) -eq $((min1*min1+min2*min2)) ]; then\n    echo \"true\"\n\
    \  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n    return 1\n  fi\n  if ! [[ $1 =~ ^[0-9]+$ ]]; then\n\
    \    echo \"Error: $1 is not an integer\"\n    return 1\n  fi\n  if ! [[ $2 =~\
    \ ^[0-9]+$ ]]; then\n    echo \"Error: $2 is not an integer\"\n    return 1\n\
    \  fi\n  if ! [[ $3 =~ ^[0-9]+$ ]]; then\n    echo \"Error: $3 is not an integer\"\
    \n    return 1\n  fi\n  if [ $1 -eq 0 ] || [ $2 -eq 0 ] || [ $3 -eq 0 ]; then\n\
    \    echo \"false\"\n    return 0\n  fi\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ];\
    \ then\n    echo \"false\"\n    return 0\n  fi\n  if [ $1 -eq $2 ] || [ $2 -eq\
    \ $3 ] || [ $1 -eq $3 ]; then\n    echo \"false\"\n    return 0\n  fi\n  if [\
    \ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $(( $1 * $1 )) -eq $(( $2 * $2\
    \ + $3 * $3 )) ]; then\n      echo \"true\"\n      return 0\n    fi\n  fi\n  if\
    \ [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $(( $2 * $2 )) -eq $(( $1 * $1\
    \ + $3 * $3 )) ]; then\n      echo \"true\"\n      return 0\n    fi\n  fi\n  if\
    \ [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n    if [ $(( $3 * $3 )) -eq $(( $1 * $1\
    \ + $2 * $2 )) ]; then\n      echo \"true\"\n      return 0\n    fi\n  fi\n  echo\
    \ \"false\"\n  return 0\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n    echo \"false\"\n \
    \ elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq\
    \ $2 && $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq $2 && $1 -eq\
    \ $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq $2 && $1 -eq $3 ]]; then\n\
    \    echo \"false\"\n  elif [[ $1 -eq $2 && $1 -eq $3 ]]; then\n    echo \"false\"\
    \n  elif [[ $1 -eq $2 && $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1\
    \ -eq $2 && $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq $2 && $1\
    \ -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq $2 && $1 -eq $3 ]]; then\n\
    \    echo \"false\"\n  elif [[ $1 -eq $2 && $1 -eq $3 ]]; then\n    echo \"false\"\
    \n  elif [[ $1 -eq $2 && $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1\
    \ -eq $2 && $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq $2 && $1\
    \ -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq $2 && $1 -eq $3 ]]; then\n\
    \    echo \"false\"\n  elif [[ $1 -eq $2 && $1 -eq $3 ]]; then\n    echo \"false\"\
    \n  elif [[ $1 -eq $2 && $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1\
    \ -eq $2 && $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq $2 && $1\
    \ -eq $3 ]]; then\n   \n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpb04fi8uk.sh: line 54: syntax error near unexpected token `}''

    /tmp/tmpb04fi8uk.sh: line 54: `}''

    '
  stdout: ''
  timestamp: 1660010490
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n        return 1\n    fi\n    if ! [[ $1 =~ ^[0-9]+$\
    \ ]]; then\n        echo \"Error: $1 is not an integer\"\n        return 1\n \
    \   fi\n    if ! [[ $2 =~ ^[0-9]+$ ]]; then\n        echo \"Error: $2 is not an\
    \ integer\"\n        return 1\n    fi\n    if ! [[ $3 =~ ^[0-9]+$ ]]; then\n \
    \       echo \"Error: $3 is not an integer\"\n        return 1\n    fi\n    if\
    \ [ $1 -eq 0 ] || [ $2 -eq 0 ] || [ $3 -eq 0 ]; then\n        echo \"false\"\n\
    \        return 0\n    fi\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n     \
    \   echo \"false\"\n        return 0\n    fi\n    if [ $1 -eq $2 ] || [ $2 -eq\
    \ $3 ] || [ $1 -eq $3 ]; then\n        echo \"false\"\n        return 0\n    fi\n\
    \    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        if [ $1 -eq $(( $2 * $2\
    \ + $3 * $3 )) ]; then\n            echo \"true\"\n            return 0\n    \
    \    fi\n    fi\n    if [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        if [ $2\
    \ -eq $(( $1 * $1 + $3 * $3 )) ]; then\n            echo \"true\"\n          \
    \  return 0\n        fi\n    fi\n    if [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n\
    \        if [ $3 -eq $(( $1 * $1 + $2 * $2 )) ]; then\n            echo \"true\"\
    \n            return 0\n        fi\n    fi\n    echo \"false\"\n    return 0\n\
    }\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n    echo \"false\"\n \
    \ elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n    if [[ $1 -eq $(($2 * $2 + $3 * $3)) ]]; then\n\
    \      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  elif [[ $2 -gt\
    \ $1 && $2 -gt $3 ]]; then\n    if [[ $2 -eq $(($1 * $1 + $3 * $3)) ]]; then\n\
    \      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  elif [[ $3 -gt\
    \ $1 && $3 -gt $2 ]]; then\n    if [[ $3 -eq $(($1 * $1 + $2 * $2)) ]]; then\n\
    \      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    local max=$a\n    local\
    \ min1=$b\n    local min2=$c\n    if [ $b -gt $max ]; then\n        max=$b\n \
    \       min1=$a\n        min2=$c\n    fi\n    if [ $c -gt $max ]; then\n     \
    \   max=$c\n        min1=$a\n        min2=$b\n    fi\n    if [ $((max*max)) -eq\
    \ $((min1*min1+min2*min2)) ]; then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  if (( $a > 0 && $b > 0 && $c\
    \ > 0 )); then\n    if (( $a*$a == $b*$b + $c*$c || $b*$b == $a*$a + $c*$c ||\
    \ $c*$c == $a*$a + $b*$b )); then\n      echo \"true\"\n    else\n      echo \"\
    false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n        echo \"false\"\
    \n        return\n    fi\n    if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    if [[ $1 -eq $2 || $2 -eq $3 || $1 -eq\
    \ $3 ]]; then\n        echo \"false\"\n        return\n    fi\n    if [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n        if [[ $1 -eq $2 + $3 ]]; then\n          \
    \  echo \"true\"\n            return\n        fi\n    fi\n    if [[ $2 -gt $1\
    \ && $2 -gt $3 ]]; then\n        if [[ $2 -eq $1 + $3 ]]; then\n            echo\
    \ \"true\"\n            return\n        fi\n    fi\n    if [[ $3 -gt $1 && $3\
    \ -gt $2 ]]; then\n        if [[ $3 -eq $1 + $2 ]]; then\n            echo \"\
    true\"\n            return\n        fi\n    fi\n    echo \"false\"\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzwqc2uqr.sh: line 29: syntax error in conditional expression

    /tmp/tmpzwqc2uqr.sh: line 29: syntax error near `+''

    /tmp/tmpzwqc2uqr.sh: line 29: `        if [[ $1 -eq $2 + $3 ]]; then''

    '
  stdout: ''
  timestamp: 1660010491
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n        if [[ $1 -eq\
    \ $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n            echo \"false\"\n        elif\
    \ [[ $1 -eq $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif\
    \ [[ $1 -eq $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif\
    \ [[ $1 -eq $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif\
    \ [[ $1 -eq $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif\
    \ [[ $1 -eq $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif\
    \ [[ $1 -eq $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif\
    \ [[ $1 -eq $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif\
    \ [[ $1 -eq $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif\
    \ [[ $1 -eq $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif\
    \ [[ $1 -eq $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif\
    \ [[ $1 -eq $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif\
    \ [[ $1 -eq $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif\
    \ [[ $1 -eq $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif\
    \ [[ $1 -eq $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif\
    \ [[ $1 -eq $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif\
    \ [[ $1 -eq $2 && $2 -eq $3 ]]; then\n           \n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcwfy_vyz.sh: line 53: syntax error near unexpected token `}''

    /tmp/tmpcwfy_vyz.sh: line 53: `}''

    '
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local result=\"false\"\n  if\
    \ [ $a -gt 0 ] && [ $b -gt 0 ] && [ $c -gt 0 ]; then\n    if [ $a -eq $b ] &&\
    \ [ $b -eq $c ]; then\n      result=\"true\"\n    elif [ $a -eq $b ] || [ $b -eq\
    \ $c ] || [ $a -eq $c ]; then\n      result=\"false\"\n    else\n      if [ $a\
    \ -gt $b ] && [ $a -gt $c ]; then\n        if [ $((a*a)) -eq $((b*b+c*c)) ]; then\n\
    \          result=\"true\"\n        fi\n      elif [ $b -gt $a ] && [ $b -gt $c\
    \ ]; then\n        if [ $((b*b)) -eq $((a*a+c*c)) ]; then\n          result=\"\
    true\"\n        fi\n      elif [ $c -gt $a ] && [ $c -gt $b ]; then\n        if\
    \ [ $((c*c)) -eq $((a*a+b*b)) ]; then\n          result=\"true\"\n        fi\n\
    \      fi\n    fi\n  fi\n  echo \"$result\"\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=$a\n  local min1=$b\n\
    \  local min2=$c\n  if [ $b -gt $max ]; then\n    max=$b\n    min1=$a\n    min2=$c\n\
    \  fi\n  if [ $c -gt $max ]; then\n    max=$c\n    min1=$a\n    min2=$b\n  fi\n\
    \  if [ $((max*max)) -eq $((min1*min1+min2*min2)) ]; then\n    echo \"true\"\n\
    \  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    if [ $a -gt $b ] && [\
    \ $a -gt $c ]; then\n        if [ $((a*a)) -eq $((b*b+c*c)) ]; then\n        \
    \    echo \"true\"\n        else\n            echo \"false\"\n        fi\n   \
    \ elif [ $b -gt $a ] && [ $b -gt $c ]; then\n        if [ $((b*b)) -eq $((a*a+c*c))\
    \ ]; then\n            echo \"true\"\n        else\n            echo \"false\"\
    \n        fi\n    elif [ $c -gt $a ] && [ $c -gt $b ]; then\n        if [ $((c*c))\
    \ -eq $((a*a+b*b)) ]; then\n            echo \"true\"\n        else\n        \
    \    echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\
    \ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010490
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  if [[ $a -gt 0 && $b -gt 0 &&\
    \ $c -gt 0 ]]; then\n    if [[ $a -eq $b && $b -eq $c ]]; then\n      echo \"\
    false\"\n    elif [[ $a -eq $b || $b -eq $c || $a -eq $c ]]; then\n      echo\
    \ \"false\"\n    elif [[ $a -gt $b && $a -gt $c ]]; then\n      if [[ $((a * a))\
    \ -eq $((b * b + c * c)) ]]; then\n        echo \"true\"\n      else\n       \
    \ echo \"false\"\n      fi\n    elif [[ $b -gt $a && $b -gt $c ]]; then\n    \
    \  if [[ $((b * b)) -eq $((a * a + c * c)) ]]; then\n        echo \"true\"\n \
    \     else\n        echo \"false\"\n      fi\n    elif [[ $c -gt $a && $c -gt\
    \ $b ]]; then\n      if [[ $((c * c)) -eq $((a * a + b * b)) ]]; then\n      \
    \  echo \"true\"\n      else\n        echo \"false\"\n      fi\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $# -ne 3 ]]; then\n        echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n        return 1\n    fi\n    if [[ $1 -eq 0 || $2 -eq\
    \ 0 || $3 -eq 0 ]]; then\n        echo \"false\"\n        return 0\n    fi\n \
    \   if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n        echo \"false\"\n        return\
    \ 0\n    fi\n    if [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n        echo\
    \ \"false\"\n        return 0\n    fi\n    if [[ $1 -gt $2 && $1 -gt $3 ]]; then\n\
    \        if [[ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]]; then\n        \
    \    echo \"true\"\n            return 0\n        fi\n    fi\n    if [[ $2 -gt\
    \ $1 && $2 -gt $3 ]]; then\n        if [[ $(( $2 * $2 )) -eq $(( $1 * $1 + $3\
    \ * $3 )) ]]; then\n            echo \"true\"\n            return 0\n        fi\n\
    \    fi\n    if [[ $3 -gt $1 && $3 -gt $2 ]]; then\n        if [[ $(( $3 * $3\
    \ )) -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n            echo \"true\"\n      \
    \      return 0\n        fi\n    fi\n    echo \"false\"\n    return 0\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n    return 1\n  fi\n  if ! [[ $1 =~ ^[0-9]+$ ]]; then\n\
    \    echo \"Error: $1 is not an integer\"\n    return 1\n  fi\n  if ! [[ $2 =~\
    \ ^[0-9]+$ ]]; then\n    echo \"Error: $2 is not an integer\"\n    return 1\n\
    \  fi\n  if ! [[ $3 =~ ^[0-9]+$ ]]; then\n    echo \"Error: $3 is not an integer\"\
    \n    return 1\n  fi\n  if [ $1 -eq 0 ] || [ $2 -eq 0 ] || [ $3 -eq 0 ]; then\n\
    \    echo \"false\"\n    return 0\n  fi\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ];\
    \ then\n    echo \"false\"\n    return 0\n  fi\n  if [ $1 -eq $2 ] || [ $2 -eq\
    \ $3 ] || [ $1 -eq $3 ]; then\n    echo \"false\"\n    return 0\n  fi\n  if [\
    \ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $(( $1 * $1 )) -eq $(( $2 * $2\
    \ + $3 * $3 )) ]; then\n      echo \"true\"\n      return 0\n    fi\n  fi\n  if\
    \ [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $(( $2 * $2 )) -eq $(( $1 * $1\
    \ + $3 * $3 )) ]; then\n      echo \"true\"\n      return 0\n    fi\n  fi\n  if\
    \ [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n    if [ $(( $3 * $3 )) -eq $(( $1 * $1\
    \ + $2 * $2 )) ]; then\n      echo \"true\"\n      return 0\n    fi\n  fi\n  echo\
    \ \"false\"\n  return 0\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  if (( a**2 + b**2 == c**2 ))\
    \ || (( a**2 + c**2 == b**2 )) || (( b**2 + c**2 == a**2 )); then\n    echo \"\
    true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n    if [[ $1 -eq $2 &&\
    \ $2 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $2 || $2 -eq $3\
    \ || $1 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -gt $2 && $1 -gt\
    \ $3 ]]; then\n      if [[ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]]; then\n\
    \        echo \"true\"\n      else\n        echo \"false\"\n      fi\n    elif\
    \ [[ $2 -gt $1 && $2 -gt $3 ]]; then\n      if [[ $(( $2 * $2 )) -eq $(( $1 *\
    \ $1 + $3 * $3 )) ]]; then\n        echo \"true\"\n      else\n        echo \"\
    false\"\n      fi\n    elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n      if [[ $((\
    \ $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n        echo \"true\"\n  \
    \    else\n        echo \"false\"\n      fi\n    fi\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010490
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=0\n  local sum=0\n\
    \  if [[ $a -gt $b ]]; then\n    max=$a\n  else\n    max=$b\n  fi\n  if [[ $max\
    \ -lt $c ]]; then\n    max=$c\n  fi\n  if [[ $max -eq $a ]]; then\n    sum=$((b*b+c*c))\n\
    \  elif [[ $max -eq $b ]]; then\n    sum=$((a*a+c*c))\n  else\n    sum=$((a*a+b*b))\n\
    \  fi\n  if [[ $max*$max -eq $sum ]]; then\n    echo \"true\"\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n        echo \"false\"\
    \n        return\n    fi\n    if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    if [[ $1 -eq $2 || $2 -eq $3 || $1 -eq\
    \ $3 ]]; then\n        echo \"false\"\n        return\n    fi\n    if [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n        if [[ $(( $1 * $1 )) -eq $(( $2 * $2 + $3\
    \ * $3 )) ]]; then\n            echo \"true\"\n            return\n        fi\n\
    \    fi\n    if [[ $2 -gt $1 && $2 -gt $3 ]]; then\n        if [[ $(( $2 * $2\
    \ )) -eq $(( $1 * $1 + $3 * $3 )) ]]; then\n            echo \"true\"\n      \
    \      return\n        fi\n    fi\n    if [[ $3 -gt $1 && $3 -gt $2 ]]; then\n\
    \        if [[ $(( $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n        \
    \    echo \"true\"\n            return\n        fi\n    fi\n    echo \"false\"\
    \n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n        echo \"false\"\
    \n        return\n    fi\n    if [[ $1 -gt $2 && $1 -gt $3 ]]; then\n        if\
    \ [[ $1 -eq $2 + $3 ]]; then\n            echo \"true\"\n        else\n      \
    \      echo \"false\"\n        fi\n    elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n\
    \        if [[ $2 -eq $1 + $3 ]]; then\n            echo \"true\"\n        else\n\
    \            echo \"false\"\n        fi\n    elif [[ $3 -gt $1 && $3 -gt $2 ]];\
    \ then\n        if [[ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n   \
    \     else\n            echo \"false\"\n        fi\n    else\n        echo \"\
    false\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"\
    6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n\
    \    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"\
    10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"\
    true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate\
    \ \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpoz2_3fwr.sh: line 21: syntax error in conditional expression

    /tmp/tmpoz2_3fwr.sh: line 21: syntax error near `+''

    /tmp/tmpoz2_3fwr.sh: line 21: `        if [[ $1 -eq $2 + $3 ]]; then''

    '
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=0\n  local sum=0\n\
    \  local result=\"false\"\n  if [[ $a -gt $b ]]; then\n    max=$a\n  else\n  \
    \  max=$b\n  fi\n  if [[ $max -lt $c ]]; then\n    max=$c\n  fi\n  if [[ $a -ne\
    \ $max ]]; then\n    sum=$((sum+a*a))\n  fi\n  if [[ $b -ne $max ]]; then\n  \
    \  sum=$((sum+b*b))\n  fi\n  if [[ $c -ne $max ]]; then\n    sum=$((sum+c*c))\n\
    \  fi\n  if [[ $((max*max)) -eq $sum ]]; then\n    result=\"true\"\n  fi\n  echo\
    \ $result\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") =\
    \ \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local result=\"false\"\n  if\
    \ [ $a -gt 0 ] && [ $b -gt 0 ] && [ $c -gt 0 ]; then\n    if [ $a -gt $b ] &&\
    \ [ $a -gt $c ]; then\n      if [ $((a*a)) -eq $((b*b+c*c)) ]; then\n        result=\"\
    true\"\n      fi\n    elif [ $b -gt $a ] && [ $b -gt $c ]; then\n      if [ $((b*b))\
    \ -eq $((a*a+c*c)) ]; then\n        result=\"true\"\n      fi\n    elif [ $c -gt\
    \ $a ] && [ $c -gt $b ]; then\n      if [ $((c*c)) -eq $((a*a+b*b)) ]; then\n\
    \        result=\"true\"\n      fi\n    fi\n  fi\n  echo \"$result\"\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n    if [[ $1 -eq $2 &&\
    \ $2 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $2 || $2 -eq $3\
    \ || $1 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -gt $2 && $1 -gt\
    \ $3 ]]; then\n      if [[ $(($1 * $1)) -eq $(($2 * $2 + $3 * $3)) ]]; then\n\
    \        echo \"true\"\n      else\n        echo \"false\"\n      fi\n    elif\
    \ [[ $2 -gt $1 && $2 -gt $3 ]]; then\n      if [[ $(($2 * $2)) -eq $(($1 * $1\
    \ + $3 * $3)) ]]; then\n        echo \"true\"\n      else\n        echo \"false\"\
    \n      fi\n    elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n      if [[ $(($3 * $3))\
    \ -eq $(($1 * $1 + $2 * $2)) ]]; then\n        echo \"true\"\n      else\n   \
    \     echo \"false\"\n      fi\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n\
    \    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\"\
    \ \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\"\
    \ ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[\
    \ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=0\n  local sum=0\n\
    \  if [[ $a -gt $b ]]; then\n    max=$a\n  else\n    max=$b\n  fi\n  if [[ $max\
    \ -lt $c ]]; then\n    max=$c\n  fi\n  sum=$(($a*$a+$b*$b+$c*$c))\n  if [[ $sum\
    \ -eq $(($max*$max*2)) ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n        echo \"false\"\
    \n        return\n    fi\n    if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    if [[ $1 -eq $2 || $2 -eq $3 || $1 -eq\
    \ $3 ]]; then\n        echo \"false\"\n        return\n    fi\n    if [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n        if [[ $1 -eq $(( $2 * $2 + $3 * $3 )) ]];\
    \ then\n            echo \"true\"\n            return\n        fi\n    fi\n  \
    \  if [[ $2 -gt $1 && $2 -gt $3 ]]; then\n        if [[ $2 -eq $(( $1 * $1 + $3\
    \ * $3 )) ]]; then\n            echo \"true\"\n            return\n        fi\n\
    \    fi\n    if [[ $3 -gt $1 && $3 -gt $2 ]]; then\n        if [[ $3 -eq $(( $1\
    \ * $1 + $2 * $2 )) ]]; then\n            echo \"true\"\n            return\n\
    \        fi\n    fi\n    echo \"false\"\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=$a\n  local min1=$b\n\
    \  local min2=$c\n  if [ $a -lt $b ]; then\n    max=$b\n    min1=$a\n  fi\n  if\
    \ [ $max -lt $c ]; then\n    min2=$min1\n    min1=$max\n    max=$c\n  fi\n  if\
    \ [ $min1 -lt $min2 ]; then\n    local tmp=$min1\n    min1=$min2\n    min2=$tmp\n\
    \  fi\n  if [ $((max * max)) -eq $((min1 * min1 + min2 * min2)) ]; then\n    echo\
    \ \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    local max=$a\n    local\
    \ min1=$b\n    local min2=$c\n    if [ $b -gt $max ]; then\n        max=$b\n \
    \       min1=$a\n        min2=$c\n    fi\n    if [ $c -gt $max ]; then\n     \
    \   max=$c\n        min1=$a\n        min2=$b\n    fi\n    if [ $((max * max))\
    \ -eq $((min1 * min1 + min2 * min2)) ]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    local result=\"false\"\
    \n    if [[ $a -gt 0 && $b -gt 0 && $c -gt 0 ]]; then\n        if [[ $a -eq $b\
    \ && $b -eq $c ]]; then\n            result=\"false\"\n        elif [[ $a -eq\
    \ $b || $b -eq $c || $a -eq $c ]]; then\n            result=\"true\"\n       \
    \ elif [[ $a -gt $b && $a -gt $c ]]; then\n            if [[ $(($a*$a)) -eq $(($b*$b+$c*$c))\
    \ ]]; then\n                result=\"true\"\n            fi\n        elif [[ $b\
    \ -gt $a && $b -gt $c ]]; then\n            if [[ $(($b*$b)) -eq $(($a*$a+$c*$c))\
    \ ]]; then\n                result=\"true\"\n            fi\n        elif [[ $c\
    \ -gt $a && $c -gt $b ]]; then\n            if [[ $(($c*$c)) -eq $(($a*$a+$b*$b))\
    \ ]]; then\n                result=\"true\"\n            fi\n        fi\n    fi\n\
    \    echo $result\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=$a\n  local min1=$b\n\
    \  local min2=$c\n  if [ $b -gt $max ]; then\n    max=$b\n    min1=$a\n    min2=$c\n\
    \  fi\n  if [ $c -gt $max ]; then\n    max=$c\n    min1=$a\n    min2=$b\n  fi\n\
    \  if [ $((max*max)) -eq $((min1*min1+min2*min2)) ]; then\n    echo \"true\"\n\
    \  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n        return 1\n    fi\n    if [[ ! $1 =~ ^[0-9]+$\
    \ ]]; then\n        echo \"Usage: right_angle_triangle <integer> <integer> <integer>\"\
    \n        return 1\n    fi\n    if [[ ! $2 =~ ^[0-9]+$ ]]; then\n        echo\
    \ \"Usage: right_angle_triangle <integer> <integer> <integer>\"\n        return\
    \ 1\n    fi\n    if [[ ! $3 =~ ^[0-9]+$ ]]; then\n        echo \"Usage: right_angle_triangle\
    \ <integer> <integer> <integer>\"\n        return 1\n    fi\n    if [ $1 -eq 0\
    \ ] || [ $2 -eq 0 ] || [ $3 -eq 0 ]; then\n        echo \"false\"\n        return\
    \ 0\n    fi\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo \"false\"\
    \n        return 0\n    fi\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq\
    \ $3 ]; then\n        echo \"false\"\n        return 0\n    fi\n    if [ $1 -gt\
    \ $2 ] && [ $1 -gt $3 ]; then\n        if [ $1 -eq $(($2*$2 + $3*$3)) ]; then\n\
    \            echo \"true\"\n            return 0\n        fi\n    fi\n    if [\
    \ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        if [ $2 -eq $(($1*$1 + $3*$3)) ];\
    \ then\n            echo \"true\"\n            return 0\n        fi\n    fi\n\
    \    if [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n        if [ $3 -eq $(($1*$1 + $2*$2))\
    \ ]; then\n            echo \"true\"\n            return 0\n        fi\n    fi\n\
    \    echo \"false\"\n    return 0\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    local max=$a\n    local\
    \ min1=$b\n    local min2=$c\n    if [ $b -gt $max ]; then\n        max=$b\n \
    \       min1=$a\n        min2=$c\n    fi\n    if [ $c -gt $max ]; then\n     \
    \   max=$c\n        min1=$a\n        min2=$b\n    fi\n    if [ $((max*max)) -eq\
    \ $((min1*min1+min2*min2)) ]; then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    if [[ $a -gt $b ]]; then\n\
    \        if [[ $a -gt $c ]]; then\n            if [[ $a -eq $((b*b + c*c)) ]];\
    \ then\n                echo \"true\"\n            else\n                echo\
    \ \"false\"\n            fi\n        else\n            if [[ $c -eq $((a*a + b*b))\
    \ ]]; then\n                echo \"true\"\n            else\n                echo\
    \ \"false\"\n            fi\n        fi\n    else\n        if [[ $b -gt $c ]];\
    \ then\n            if [[ $b -eq $((a*a + c*c)) ]]; then\n                echo\
    \ \"true\"\n            else\n                echo \"false\"\n            fi\n\
    \        else\n            if [[ $c -eq $((a*a + b*b)) ]]; then\n            \
    \    echo \"true\"\n            else\n                echo \"false\"\n       \
    \     fi\n        fi\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=$a\n  local mid=$b\n\
    \  local min=$c\n  if [ $a -lt $b ]; then\n    max=$b\n    mid=$a\n  fi\n  if\
    \ [ $max -lt $c ]; then\n    min=$mid\n    mid=$max\n    max=$c\n  fi\n  if [\
    \ $mid -lt $c ]; then\n    min=$mid\n    mid=$c\n  fi\n  if [ $((max*max)) -eq\
    \ $((mid*mid+min*min)) ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n\
    \  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n    echo \"false\"\n \
    \ elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n    if [[ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3\
    \ )) ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n    fi\n \
    \ elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n    if [[ $(( $2 * $2 )) -eq $(( $1\
    \ * $1 + $3 * $3 )) ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\
    \n    fi\n  elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n    if [[ $(( $3 * $3 ))\
    \ -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010490
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n        if [[ $1 -eq\
    \ $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n            echo \"false\"\n        elif\
    \ [[ $1 -gt $2 && $1 -gt $3 ]]; then\n            if [[ $(( $1 * $1 )) -eq $((\
    \ $2 * $2 + $3 * $3 )) ]]; then\n                echo \"true\"\n            else\n\
    \                echo \"false\"\n            fi\n        elif [[ $2 -gt $1 &&\
    \ $2 -gt $3 ]]; then\n            if [[ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 *\
    \ $3 )) ]]; then\n                echo \"true\"\n            else\n          \
    \      echo \"false\"\n            fi\n        elif [[ $3 -gt $1 && $3 -gt $2\
    \ ]]; then\n            if [[ $(( $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]];\
    \ then\n                echo \"true\"\n            else\n                echo\
    \ \"false\"\n            fi\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n        if [[ $1 -eq\
    \ $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n            echo \"false\"\n        elif\
    \ [[ $1 -gt $2 && $1 -gt $3 ]]; then\n            if [[ $(( $1 * $1 )) -eq $((\
    \ $2 * $2 + $3 * $3 )) ]]; then\n                echo \"true\"\n            else\n\
    \                echo \"false\"\n            fi\n        elif [[ $2 -gt $1 &&\
    \ $2 -gt $3 ]]; then\n            if [[ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 *\
    \ $3 )) ]]; then\n                echo \"true\"\n            else\n          \
    \      echo \"false\"\n            fi\n        elif [[ $3 -gt $1 && $3 -gt $2\
    \ ]]; then\n            if [[ $(( $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]];\
    \ then\n                echo \"true\"\n            else\n                echo\
    \ \"false\"\n            fi\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n    echo \"false\"\n \
    \ elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n    if [[ $(($1**2)) -eq $(($2**2 + $3**2)) ]]; then\n\
    \      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  elif [[ $2 -gt\
    \ $1 && $2 -gt $3 ]]; then\n    if [[ $(($2**2)) -eq $(($1**2 + $3**2)) ]]; then\n\
    \      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  elif [[ $3 -gt\
    \ $1 && $3 -gt $2 ]]; then\n    if [[ $(($3**2)) -eq $(($1**2 + $2**2)) ]]; then\n\
    \      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n    return 1\n  fi\n  if ! [[ $1 =~ ^[0-9]+$ ]]; then\n\
    \    echo \"Error: $1 is not an integer\"\n    return 1\n  fi\n  if ! [[ $2 =~\
    \ ^[0-9]+$ ]]; then\n    echo \"Error: $2 is not an integer\"\n    return 1\n\
    \  fi\n  if ! [[ $3 =~ ^[0-9]+$ ]]; then\n    echo \"Error: $3 is not an integer\"\
    \n    return 1\n  fi\n  if [ $1 -eq 0 ] || [ $2 -eq 0 ] || [ $3 -eq 0 ]; then\n\
    \    echo \"false\"\n    return 0\n  fi\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ];\
    \ then\n    echo \"false\"\n    return 0\n  fi\n  if [ $1 -eq $2 ] || [ $2 -eq\
    \ $3 ] || [ $1 -eq $3 ]; then\n    echo \"false\"\n    return 0\n  fi\n  if [\
    \ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $(( $1 * $1 )) -eq $(( $2 * $2\
    \ + $3 * $3 )) ]; then\n      echo \"true\"\n      return 0\n    fi\n  fi\n  if\
    \ [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $(( $2 * $2 )) -eq $(( $1 * $1\
    \ + $3 * $3 )) ]; then\n      echo \"true\"\n      return 0\n    fi\n  fi\n  if\
    \ [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n    if [ $(( $3 * $3 )) -eq $(( $1 * $1\
    \ + $2 * $2 )) ]; then\n      echo \"true\"\n      return 0\n    fi\n  fi\n  echo\
    \ \"false\"\n  return 0\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    local max=$a\n    local\
    \ min1=$b\n    local min2=$c\n    if [ $max -lt $b ]; then\n        max=$b\n \
    \       min1=$a\n        min2=$c\n    fi\n    if [ $max -lt $c ]; then\n     \
    \   max=$c\n        min1=$a\n        min2=$b\n    fi\n    if [ $min1 -lt $min2\
    \ ]; then\n        local tmp=$min1\n        min1=$min2\n        min2=$tmp\n  \
    \  fi\n    if [ $((min1*min1+min2*min2)) -eq $((max*max)) ]; then\n        echo\
    \ \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n   \
    \ right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  if [ $a -gt $b ]; then\n    if\
    \ [ $a -gt $c ]; then\n      if [ $((a*a)) -eq $((b*b+c*c)) ]; then\n        echo\
    \ \"true\"\n      else\n        echo \"false\"\n      fi\n    else\n      if [\
    \ $((c*c)) -eq $((a*a+b*b)) ]; then\n        echo \"true\"\n      else\n     \
    \   echo \"false\"\n      fi\n    fi\n  else\n    if [ $b -gt $c ]; then\n   \
    \   if [ $((b*b)) -eq $((a*a+c*c)) ]; then\n        echo \"true\"\n      else\n\
    \        echo \"false\"\n      fi\n    else\n      if [ $((c*c)) -eq $((a*a+b*b))\
    \ ]; then\n        echo \"true\"\n      else\n        echo \"false\"\n      fi\n\
    \    fi\n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") =\
    \ \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n        echo \"false\"\
    \n        return\n    fi\n    if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    if [[ $1 -eq $2 || $2 -eq $3 || $1 -eq\
    \ $3 ]]; then\n        echo \"false\"\n        return\n    fi\n    if [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n        if [[ $1 -eq $(($2*$2 + $3*$3)) ]]; then\n\
    \            echo \"true\"\n            return\n        fi\n    fi\n    if [[\
    \ $2 -gt $1 && $2 -gt $3 ]]; then\n        if [[ $2 -eq $(($1*$1 + $3*$3)) ]];\
    \ then\n            echo \"true\"\n            return\n        fi\n    fi\n  \
    \  if [[ $3 -gt $1 && $3 -gt $2 ]]; then\n        if [[ $3 -eq $(($1*$1 + $2*$2))\
    \ ]]; then\n            echo \"true\"\n            return\n        fi\n    fi\n\
    \    echo \"false\"\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    local max=$a\n    local\
    \ mid=$b\n    local min=$c\n    if [ $a -lt $b ]; then\n        max=$b\n     \
    \   mid=$a\n    fi\n    if [ $max -lt $c ]; then\n        min=$mid\n        mid=$max\n\
    \        max=$c\n    fi\n    if [ $mid -lt $c ]; then\n        min=$mid\n    \
    \    mid=$c\n    fi\n    if [ $((max*max)) -eq $((mid*mid+min*min)) ]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n    return 1\n  fi\n  if [[ ! $1 =~ ^[0-9]+$ ]]; then\n\
    \    echo \"Error: $1 is not an integer\"\n    return 1\n  fi\n  if [[ ! $2 =~\
    \ ^[0-9]+$ ]]; then\n    echo \"Error: $2 is not an integer\"\n    return 1\n\
    \  fi\n  if [[ ! $3 =~ ^[0-9]+$ ]]; then\n    echo \"Error: $3 is not an integer\"\
    \n    return 1\n  fi\n  if [ $1 -eq 0 ] || [ $2 -eq 0 ] || [ $3 -eq 0 ]; then\n\
    \    echo \"false\"\n    return 0\n  fi\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ];\
    \ then\n    echo \"false\"\n    return 0\n  fi\n  if [ $1 -eq $2 ] || [ $2 -eq\
    \ $3 ] || [ $1 -eq $3 ]; then\n    echo \"false\"\n    return 0\n  fi\n  if [\
    \ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $(( $1 * $1 )) -eq $(( $2 * $2\
    \ + $3 * $3 )) ]; then\n      echo \"true\"\n      return 0\n    fi\n  fi\n  if\
    \ [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $(( $2 * $2 )) -eq $(( $1 * $1\
    \ + $3 * $3 )) ]; then\n      echo \"true\"\n      return 0\n    fi\n  fi\n  if\
    \ [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n    if [ $(( $3 * $3 )) -eq $(( $1 * $1\
    \ + $2 * $2 )) ]; then\n      echo \"true\"\n      return 0\n    fi\n  fi\n  echo\
    \ \"false\"\n  return 0\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [ -z \"$1\" ] || [ -z \"$2\" ] || [ -z \"$3\" ]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    if [ \"$1\" -eq 0 ] || [ \"$2\" -eq 0\
    \ ] || [ \"$3\" -eq 0 ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    if [ \"$1\" -lt 0 ] || [ \"$2\" -lt 0 ] || [ \"$3\" -lt 0 ]; then\n     \
    \   echo \"false\"\n        return\n    fi\n    if [ \"$1\" -eq \"$2\" ] && [\
    \ \"$2\" -eq \"$3\" ]; then\n        echo \"false\"\n        return\n    fi\n\
    \    if [ \"$1\" -eq \"$2\" ] || [ \"$2\" -eq \"$3\" ] || [ \"$1\" -eq \"$3\"\
    \ ]; then\n        echo \"false\"\n        return\n    fi\n    if [ \"$1\" -gt\
    \ \"$2\" ] && [ \"$1\" -gt \"$3\" ]; then\n        if [ \"$1\" -eq \"$(($2 * $2\
    \ + $3 * $3))\" ]; then\n            echo \"true\"\n            return\n     \
    \   fi\n    fi\n    if [ \"$2\" -gt \"$1\" ] && [ \"$2\" -gt \"$3\" ]; then\n\
    \        if [ \"$2\" -eq \"$(($1 * $1 + $3 * $3))\" ]; then\n            echo\
    \ \"true\"\n            return\n        fi\n    fi\n    if [ \"$3\" -gt \"$1\"\
    \ ] && [ \"$3\" -gt \"$2\" ]; then\n        if [ \"$3\" -eq \"$(($1 * $1 + $2\
    \ * $2))\" ]; then\n            echo \"true\"\n            return\n        fi\n\
    \    fi\n    echo \"false\"\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [ $1 -eq 0 ] || [ $2 -eq 0 ] || [ $3 -eq 0 ]; then\n        echo \"\
    false\"\n    else\n        if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n         \
    \   echo \"false\"\n        else\n            if [ $1 -eq $2 ] || [ $2 -eq $3\
    \ ] || [ $1 -eq $3 ]; then\n                echo \"false\"\n            else\n\
    \                if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n                   \
    \ if [ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]; then\n                 \
    \       echo \"true\"\n                    else\n                        echo\
    \ \"false\"\n                    fi\n                elif [ $2 -gt $1 ] && [ $2\
    \ -gt $3 ]; then\n                    if [ $(( $2 * $2 )) -eq $(( $1 * $1 + $3\
    \ * $3 )) ]; then\n                        echo \"true\"\n                   \
    \ else\n                        echo \"false\"\n                    fi\n     \
    \           elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n                    if\
    \ [ $(( $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]; then\n                    \
    \    echo \"true\"\n                    else\n                        echo \"\
    false\"\n                    fi\n                fi\n            fi\n        fi\n\
    \    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: $0 <integer> <integer> <integer>\"\
    \n    return 1\n  fi\n  if ! [[ $1 =~ ^[0-9]+$ ]]; then\n    echo \"Error: $1\
    \ is not an integer\"\n    return 1\n  fi\n  if ! [[ $2 =~ ^[0-9]+$ ]]; then\n\
    \    echo \"Error: $2 is not an integer\"\n    return 1\n  fi\n  if ! [[ $3 =~\
    \ ^[0-9]+$ ]]; then\n    echo \"Error: $3 is not an integer\"\n    return 1\n\
    \  fi\n  if (( $1 <= 0 || $2 <= 0 || $3 <= 0 )); then\n    echo \"false\"\n  \
    \  return 0\n  fi\n  if (( $1 == $2 && $2 == $3 )); then\n    echo \"false\"\n\
    \    return 0\n  fi\n  if (( $1 > $2 && $1 > $3 )); then\n    if (( $1*$1 == $2*$2\
    \ + $3*$3 )); then\n      echo \"true\"\n      return 0\n    fi\n  fi\n  if ((\
    \ $2 > $1 && $2 > $3 )); then\n    if (( $2*$2 == $1*$1 + $3*$3 )); then\n   \
    \   echo \"true\"\n      return 0\n    fi\n  fi\n  if (( $3 > $1 && $3 > $2 ));\
    \ then\n    if (( $3*$3 == $1*$1 + $2*$2 )); then\n      echo \"true\"\n     \
    \ return 0\n    fi\n  fi\n  echo \"false\"\n  return 0\n}\n\ncandidate() {\n \
    \   right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n        return 1\n    fi\n    if ! [[ $1 =~ ^[0-9]+$\
    \ ]]; then\n        echo \"Error: $1 is not an integer\"\n        return 1\n \
    \   fi\n    if ! [[ $2 =~ ^[0-9]+$ ]]; then\n        echo \"Error: $2 is not an\
    \ integer\"\n        return 1\n    fi\n    if ! [[ $3 =~ ^[0-9]+$ ]]; then\n \
    \       echo \"Error: $3 is not an integer\"\n        return 1\n    fi\n    if\
    \ [ $1 -eq 0 ] || [ $2 -eq 0 ] || [ $3 -eq 0 ]; then\n        echo \"false\"\n\
    \        return 0\n    fi\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n     \
    \   echo \"false\"\n        return 0\n    fi\n    if [ $1 -eq $2 ] || [ $2 -eq\
    \ $3 ] || [ $1 -eq $3 ]; then\n        echo \"false\"\n        return 0\n    fi\n\
    \    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        if [ $1 -eq $(($2*$2 + $3*$3))\
    \ ]; then\n            echo \"true\"\n            return 0\n        fi\n    fi\n\
    \    if [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        if [ $2 -eq $(($1*$1 + $3*$3))\
    \ ]; then\n            echo \"true\"\n            return 0\n        fi\n    fi\n\
    \    if [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n        if [ $3 -eq $(($1*$1 + $2*$2))\
    \ ]; then\n            echo \"true\"\n            return 0\n        fi\n    fi\n\
    \    echo \"false\"\n    return 0\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local result=\"false\"\n  if\
    \ [ $a -gt 0 ] && [ $b -gt 0 ] && [ $c -gt 0 ]; then\n    if [ $((a*a)) -eq $((b*b+c*c))\
    \ ] || [ $((b*b)) -eq $((a*a+c*c)) ] || [ $((c*c)) -eq $((a*a+b*b)) ]; then\n\
    \      result=\"true\"\n    fi\n  fi\n  echo $result\n}\n\ncandidate() {\n   \
    \ right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    local max=$a\n    local\
    \ min1=$b\n    local min2=$c\n    if [ $max -lt $b ]; then\n        max=$b\n \
    \       min1=$a\n        min2=$c\n    fi\n    if [ $max -lt $c ]; then\n     \
    \   max=$c\n        min1=$a\n        min2=$b\n    fi\n    if [ $((max*max)) -eq\
    \ $((min1*min1+min2*min2)) ]; then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n    echo \"false\"\n \
    \ elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n    if [[ $1 -eq $(($2*$2 + $3*$3)) ]]; then\n   \
    \   echo \"true\"\n    else\n      echo \"false\"\n    fi\n  elif [[ $2 -gt $1\
    \ && $2 -gt $3 ]]; then\n    if [[ $2 -eq $(($1*$1 + $3*$3)) ]]; then\n      echo\
    \ \"true\"\n    else\n      echo \"false\"\n    fi\n  elif [[ $3 -gt $1 && $3\
    \ -gt $2 ]]; then\n    if [[ $3 -eq $(($1*$1 + $2*$2)) ]]; then\n      echo \"\
    true\"\n    else\n      echo \"false\"\n    fi\n  fi\n}\n\ncandidate() {\n   \
    \ right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=0\n  local sum=0\n\
    \  local result=\"false\"\n  if [ $a -gt $b ]; then\n    max=$a\n  else\n    max=$b\n\
    \  fi\n  if [ $max -lt $c ]; then\n    max=$c\n  fi\n  if [ $a -ne $max ]; then\n\
    \    sum=$(($sum + $a * $a))\n  fi\n  if [ $b -ne $max ]; then\n    sum=$(($sum\
    \ + $b * $b))\n  fi\n  if [ $c -ne $max ]; then\n    sum=$(($sum + $c * $c))\n\
    \  fi\n  if [ $sum -eq $(($max * $max)) ]; then\n    result=\"true\"\n  fi\n \
    \ echo $result\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"\
    6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n\
    \    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"\
    10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"\
    true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate\
    \ \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=$a\n  local mid=$b\n\
    \  local min=$c\n  if [ $a -lt $b ]; then\n    max=$b\n    mid=$a\n  fi\n  if\
    \ [ $max -lt $c ]; then\n    min=$mid\n    mid=$max\n    max=$c\n  fi\n  if [\
    \ $mid -lt $c ]; then\n    min=$mid\n    mid=$c\n  fi\n  if [ $((max * max)) -eq\
    \ $((mid * mid + min * min)) ]; then\n    echo \"true\"\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    if (( (a*a + b*b == c*c)\
    \ || (a*a + c*c == b*b) || (b*b + c*c == a*a) )); then\n        echo \"true\"\n\
    \    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n        echo \"false\"\
    \n        return\n    fi\n    if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    if [[ $1 -eq $2 || $2 -eq $3 || $1 -eq\
    \ $3 ]]; then\n        echo \"false\"\n        return\n    fi\n    if [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n        if [[ $1 -eq $(( $2 * $2 + $3 * $3 )) ]];\
    \ then\n            echo \"true\"\n            return\n        fi\n    fi\n  \
    \  if [[ $2 -gt $1 && $2 -gt $3 ]]; then\n        if [[ $2 -eq $(( $1 * $1 + $3\
    \ * $3 )) ]]; then\n            echo \"true\"\n            return\n        fi\n\
    \    fi\n    if [[ $3 -gt $1 && $3 -gt $2 ]]; then\n        if [[ $3 -eq $(( $1\
    \ * $1 + $2 * $2 )) ]]; then\n            echo \"true\"\n            return\n\
    \        fi\n    fi\n    echo \"false\"\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n        if [[ $1 -eq\
    \ $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n            echo \"false\"\n        elif\
    \ [[ $1 -gt $2 && $1 -gt $3 ]]; then\n            if [[ $1 -eq $(( $2 * $2 + $3\
    \ * $3 )) ]]; then\n                echo \"true\"\n            else\n        \
    \        echo \"false\"\n            fi\n        elif [[ $2 -gt $1 && $2 -gt $3\
    \ ]]; then\n            if [[ $2 -eq $(( $1 * $1 + $3 * $3 )) ]]; then\n     \
    \           echo \"true\"\n            else\n                echo \"false\"\n\
    \            fi\n        elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n           \
    \ if [[ $3 -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n                echo \"true\"\
    \n            else\n                echo \"false\"\n            fi\n        fi\n\
    \    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    local max=$a\n    local\
    \ min1=$b\n    local min2=$c\n    if [ $max -lt $b ]; then\n        max=$b\n \
    \       min1=$a\n        min2=$c\n    fi\n    if [ $max -lt $c ]; then\n     \
    \   max=$c\n        min1=$a\n        min2=$b\n    fi\n    if [ $max -eq $(($min1\
    \ * $min1 + $min2 * $min2)) ]; then\n        echo \"true\"\n    else\n       \
    \ echo \"false\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=$a\n  local min1=$b\n\
    \  local min2=$c\n  if [ $b -gt $max ]; then\n    max=$b\n    min1=$a\n    min2=$c\n\
    \  fi\n  if [ $c -gt $max ]; then\n    max=$c\n    min1=$a\n    min2=$b\n  fi\n\
    \  if [ $((max*max)) -eq $((min1*min1+min2*min2)) ]; then\n    echo \"true\"\n\
    \  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local result=\"false\"\n  if\
    \ [[ $a -gt 0 && $b -gt 0 && $c -gt 0 ]]; then\n    if [[ $a -eq $b && $b -eq\
    \ $c ]]; then\n      result=\"true\"\n    elif [[ $a -eq $b && $b -eq $c ]]; then\n\
    \      result=\"true\"\n    elif [[ $a -eq $b && $b -eq $c ]]; then\n      result=\"\
    true\"\n    elif [[ $a -eq $b && $b -eq $c ]]; then\n      result=\"true\"\n \
    \   elif [[ $a -eq $b && $b -eq $c ]]; then\n      result=\"true\"\n    elif [[\
    \ $a -eq $b && $b -eq $c ]]; then\n      result=\"true\"\n    elif [[ $a -eq $b\
    \ && $b -eq $c ]]; then\n      result=\"true\"\n    elif [[ $a -eq $b && $b -eq\
    \ $c ]]; then\n      result=\"true\"\n    elif [[ $a -eq $b && $b -eq $c ]]; then\n\
    \      result=\"true\"\n    elif [[ $a -eq $b && $b -eq $c ]]; then\n      result=\"\
    true\"\n    elif [[ $a -eq $b && $b -eq $c ]]; then\n      result=\"true\"\n \
    \   elif [[ $a -eq $b && $b -eq $c ]]; then\n      result=\"true\"\n    elif [[\
    \ $a -eq $b && $b -eq $c ]]; then\n      result=\"true\"\n    elif [[ $a -eq $b\
    \ && $b -eq $c ]]; then\n      result=\"true\"\n    elif [[ $a -eq $b && $b -eq\
    \ $c ]]; then\n      result=\"true\"\n    elif [[ $a -eq $b && $b -eq $c ]]; then\n\
    \      result=\"true\"\n    elif [[ $a -eq $b && $b -eq $c ]]; then\n      result=\"\
    true\"\n    elif [[\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmplrf8ageb.sh: line 56: unexpected token `newline'', conditional
    binary operator expected

    /tmp/tmplrf8ageb.sh: line 56: syntax error near `}''

    /tmp/tmplrf8ageb.sh: line 56: `}''

    '
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    if [[ $a -gt $b ]]; then\n\
    \        if [[ $a -gt $c ]]; then\n            if [[ $a -eq $(($b*$b + $c*$c))\
    \ ]]; then\n                echo \"true\"\n            else\n                echo\
    \ \"false\"\n            fi\n        else\n            if [[ $c -eq $(($a*$a +\
    \ $b*$b)) ]]; then\n                echo \"true\"\n            else\n        \
    \        echo \"false\"\n            fi\n        fi\n    else\n        if [[ $b\
    \ -gt $c ]]; then\n            if [[ $b -eq $(($a*$a + $c*$c)) ]]; then\n    \
    \            echo \"true\"\n            else\n                echo \"false\"\n\
    \            fi\n        else\n            if [[ $c -eq $(($a*$a + $b*$b)) ]];\
    \ then\n                echo \"true\"\n            else\n                echo\
    \ \"false\"\n            fi\n        fi\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n    echo \"false\"\n \
    \ else\n    if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n      echo \"false\"\n    else\n\
    \      if [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n        echo \"false\"\
    \n      else\n        if [[ $1 -gt $2 && $1 -gt $3 ]]; then\n          if [[ $1\
    \ -eq $(( $2 * $2 + $3 * $3 )) ]]; then\n            echo \"true\"\n         \
    \ else\n            echo \"false\"\n          fi\n        elif [[ $2 -gt $1 &&\
    \ $2 -gt $3 ]]; then\n          if [[ $2 -eq $(( $1 * $1 + $3 * $3 )) ]]; then\n\
    \            echo \"true\"\n          else\n            echo \"false\"\n     \
    \     fi\n        elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n          if [[ $3\
    \ -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n            echo \"true\"\n         \
    \ else\n            echo \"false\"\n          fi\n        fi\n      fi\n    fi\n\
    \  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=$a\n  local min1=$b\n\
    \  local min2=$c\n  if [ $b -gt $max ]; then\n    max=$b\n    min1=$a\n    min2=$c\n\
    \  fi\n  if [ $c -gt $max ]; then\n    max=$c\n    min1=$a\n    min2=$b\n  fi\n\
    \  if [ $((min1*min1 + min2*min2)) -eq $((max*max)) ]; then\n    echo \"true\"\
    \n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n    if [[ $1 -eq $2 &&\
    \ $2 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $2 || $2 -eq $3\
    \ || $1 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $(( $2 * $2\
    \ + $3 * $3 )) || $2 -eq $(( $1 * $1 + $3 * $3 )) || $3 -eq $(( $1 * $1 + $2 *\
    \ $2 )) ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n    fi\n\
    \  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n    if [[ $1 -gt $2 &&\
    \ $1 -gt $3 ]]; then\n      if [[ $1 -eq $(($2*$2 + $3*$3)) ]]; then\n       \
    \ echo \"true\"\n      else\n        echo \"false\"\n      fi\n    elif [[ $2\
    \ -gt $1 && $2 -gt $3 ]]; then\n      if [[ $2 -eq $(($1*$1 + $3*$3)) ]]; then\n\
    \        echo \"true\"\n      else\n        echo \"false\"\n      fi\n    elif\
    \ [[ $3 -gt $1 && $3 -gt $2 ]]; then\n      if [[ $3 -eq $(($1*$1 + $2*$2)) ]];\
    \ then\n        echo \"true\"\n      else\n        echo \"false\"\n      fi\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  if (( $a*$a + $b*$b == $c*$c\
    \ )); then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n    if [[ $1 -eq $2 &&\
    \ $2 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $2 && $2 -ne $3\
    \ ]]; then\n      if [[ $1 -eq $3 || $2 -eq $3 ]]; then\n        echo \"false\"\
    \n      else\n        echo \"true\"\n      fi\n    elif [[ $1 -ne $2 && $2 -eq\
    \ $3 ]]; then\n      if [[ $1 -eq $3 || $2 -eq $1 ]]; then\n        echo \"false\"\
    \n      else\n        echo \"true\"\n      fi\n    elif [[ $1 -eq $3 && $2 -ne\
    \ $3 ]]; then\n      if [[ $1 -eq $2 || $3 -eq $2 ]]; then\n        echo \"false\"\
    \n      else\n        echo \"true\"\n      fi\n    elif [[ $1 -ne $2 && $2 -ne\
    \ $3 && $1 -ne $3 ]]; then\n      if [[ $1 -eq $3 || $2 -eq $1 || $3 -eq $2 ]];\
    \ then\n        echo \"false\"\n      else\n        echo \"true\"\n      fi\n\
    \    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n        echo \"false\"\
    \n        return\n    fi\n    if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    if [[ $1 -eq $2 || $2 -eq $3 || $1 -eq\
    \ $3 ]]; then\n        echo \"false\"\n        return\n    fi\n    if [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n        if [[ $1 -eq $(( $2 * $2 + $3 * $3 )) ]];\
    \ then\n            echo \"true\"\n            return\n        fi\n    fi\n  \
    \  if [[ $2 -gt $1 && $2 -gt $3 ]]; then\n        if [[ $2 -eq $(( $1 * $1 + $3\
    \ * $3 )) ]]; then\n            echo \"true\"\n            return\n        fi\n\
    \    fi\n    if [[ $3 -gt $1 && $3 -gt $2 ]]; then\n        if [[ $3 -eq $(( $1\
    \ * $1 + $2 * $2 )) ]]; then\n            echo \"true\"\n            return\n\
    \        fi\n    fi\n    echo \"false\"\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n        echo \"false\"\
    \n        return\n    fi\n    if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    if [[ $1 -eq $2 || $2 -eq $3 || $1 -eq\
    \ $3 ]]; then\n        echo \"false\"\n        return\n    fi\n    if [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n        if [[ $1 -eq $2 + $3 ]]; then\n          \
    \  echo \"true\"\n            return\n        fi\n    fi\n    if [[ $2 -gt $1\
    \ && $2 -gt $3 ]]; then\n        if [[ $2 -eq $1 + $3 ]]; then\n            echo\
    \ \"true\"\n            return\n        fi\n    fi\n    if [[ $3 -gt $1 && $3\
    \ -gt $2 ]]; then\n        if [[ $3 -eq $1 + $2 ]]; then\n            echo \"\
    true\"\n            return\n        fi\n    fi\n    echo \"false\"\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzwqc2uqr.sh: line 29: syntax error in conditional expression

    /tmp/tmpzwqc2uqr.sh: line 29: syntax error near `+''

    /tmp/tmpzwqc2uqr.sh: line 29: `        if [[ $1 -eq $2 + $3 ]]; then''

    '
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n        echo \"false\"\
    \n        return\n    fi\n    if [[ $1 -eq $2 ]]; then\n        if [[ $1 -eq $3\
    \ ]]; then\n            echo \"false\"\n            return\n        fi\n    fi\n\
    \    if [[ $1 -eq $3 ]]; then\n        if [[ $1 -eq $2 ]]; then\n            echo\
    \ \"false\"\n            return\n        fi\n    fi\n    if [[ $2 -eq $3 ]]; then\n\
    \        if [[ $2 -eq $1 ]]; then\n            echo \"false\"\n            return\n\
    \        fi\n    fi\n    if [[ $1 -eq $2 && $1 -eq $3 ]]; then\n        echo \"\
    false\"\n        return\n    fi\n    if [[ $1 -eq $2 && $1 -eq $3 ]]; then\n \
    \       echo \"false\"\n        return\n    fi\n    if [[ $1 -eq $2 && $1 -eq\
    \ $3 ]]; then\n        echo \"false\"\n        return\n    fi\n    if [[ $1 -eq\
    \ $2 && $1 -eq $3 ]]; then\n        echo \"false\"\n        return\n    fi\n \
    \   if [[ $1 -eq $2 && $1 -eq $3 ]]; then\n        echo \"false\"\n        return\n\
    \    fi\n    if [[ $1 -eq $2 && $1 -eq $3 ]]; then\n        echo \"false\"\n \
    \       return\n    fi\n    if [[ $1 -eq $2 && $1 -eq $3 ]]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    if [[ $1 -eq $2 && $1 -eq $3 ]]; then\n\
    \        echo \"false\"\n        return\n    fi\n    if [[ $1 -eq $2 && $1 -eq\
    \ $3 ]]; then\n        echo \"false\"\n        return\n    fi\n    if [[ $1 -eq\
    \ $2 && $1 -eq $3 ]]; then\n        echo \"false\"\n        return\n    fi\n \
    \   if [[ $1 -eq $2 && $1 -eq $3 ]]; then\n        echo \"false\"\n        return\n\
    \    fi\n\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") =\
    \ \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $# -ne 3 ]]; then\n    echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n    return 1\n  fi\n  if [[ ! $1 =~ ^[0-9]+$ ]]; then\n\
    \    echo \"Usage: right_angle_triangle <integer> <integer> <integer>\"\n    return\
    \ 1\n  fi\n  if [[ ! $2 =~ ^[0-9]+$ ]]; then\n    echo \"Usage: right_angle_triangle\
    \ <integer> <integer> <integer>\"\n    return 1\n  fi\n  if [[ ! $3 =~ ^[0-9]+$\
    \ ]]; then\n    echo \"Usage: right_angle_triangle <integer> <integer> <integer>\"\
    \n    return 1\n  fi\n  if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n    echo\
    \ \"false\"\n    return 0\n  fi\n  if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n   \
    \ echo \"false\"\n    return 0\n  fi\n  if [[ $1 -eq $2 || $2 -eq $3 || $1 -eq\
    \ $3 ]]; then\n    echo \"false\"\n    return 0\n  fi\n  if [[ $1 -gt $2 && $1\
    \ -gt $3 ]]; then\n    if [[ $1 -eq $(( $2 * $2 + $3 * $3 )) ]]; then\n      echo\
    \ \"true\"\n      return 0\n    fi\n  fi\n  if [[ $2 -gt $1 && $2 -gt $3 ]]; then\n\
    \    if [[ $2 -eq $(( $1 * $1 + $3 * $3 )) ]]; then\n      echo \"true\"\n   \
    \   return 0\n    fi\n  fi\n  if [[ $3 -gt $1 && $3 -gt $2 ]]; then\n    if [[\
    \ $3 -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n      echo \"true\"\n      return\
    \ 0\n    fi\n  fi\n  echo \"false\"\n  return 0\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    if [[ $a -gt $b ]]; then\n\
    \        if [[ $a -gt $c ]]; then\n            if [[ $a -eq $(( $b * $b + $c *\
    \ $c )) ]]; then\n                echo \"true\"\n            else\n          \
    \      echo \"false\"\n            fi\n        else\n            if [[ $c -eq\
    \ $(( $a * $a + $b * $b )) ]]; then\n                echo \"true\"\n         \
    \   else\n                echo \"false\"\n            fi\n        fi\n    else\n\
    \        if [[ $b -gt $c ]]; then\n            if [[ $b -eq $(( $a * $a + $c *\
    \ $c )) ]]; then\n                echo \"true\"\n            else\n          \
    \      echo \"false\"\n            fi\n        else\n            if [[ $c -eq\
    \ $(( $a * $a + $b * $b )) ]]; then\n                echo \"true\"\n         \
    \   else\n                echo \"false\"\n            fi\n        fi\n    fi\n\
    }\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=$a\n  local min1=$b\n\
    \  local min2=$c\n  if [ $b -gt $max ]; then\n    max=$b\n    min1=$a\n    min2=$c\n\
    \  fi\n  if [ $c -gt $max ]; then\n    max=$c\n    min1=$a\n    min2=$b\n  fi\n\
    \  if [ $((max*max)) -eq $((min1*min1+min2*min2)) ]; then\n    echo \"true\"\n\
    \  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=$a\n  local min1=$b\n\
    \  local min2=$c\n  if [ $b -gt $max ]; then\n    max=$b\n    min1=$a\n    min2=$c\n\
    \  fi\n  if [ $c -gt $max ]; then\n    max=$c\n    min1=$a\n    min2=$b\n  fi\n\
    \  if [ $((max*max)) -eq $((min1*min1+min2*min2)) ]; then\n    echo \"true\"\n\
    \  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n    return 1\n  fi\n  if ! [[ $1 =~ ^[0-9]+$ ]]; then\n\
    \    echo \"Error: $1 is not an integer\"\n    return 1\n  fi\n  if ! [[ $2 =~\
    \ ^[0-9]+$ ]]; then\n    echo \"Error: $2 is not an integer\"\n    return 1\n\
    \  fi\n  if ! [[ $3 =~ ^[0-9]+$ ]]; then\n    echo \"Error: $3 is not an integer\"\
    \n    return 1\n  fi\n  if [ $1 -eq 0 ] || [ $2 -eq 0 ] || [ $3 -eq 0 ]; then\n\
    \    echo \"false\"\n    return 0\n  fi\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ];\
    \ then\n    echo \"false\"\n    return 0\n  fi\n  if [ $1 -eq $2 ] || [ $2 -eq\
    \ $3 ] || [ $1 -eq $3 ]; then\n    echo \"false\"\n    return 0\n  fi\n  if [\
    \ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $(( $1 * $1 )) -eq $(( $2 * $2\
    \ + $3 * $3 )) ]; then\n      echo \"true\"\n      return 0\n    fi\n  fi\n  if\
    \ [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $(( $2 * $2 )) -eq $(( $1 * $1\
    \ + $3 * $3 )) ]; then\n      echo \"true\"\n      return 0\n    fi\n  fi\n  if\
    \ [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n    if [ $(( $3 * $3 )) -eq $(( $1 * $1\
    \ + $2 * $2 )) ]; then\n      echo \"true\"\n      return 0\n    fi\n  fi\n  echo\
    \ \"false\"\n  return 0\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n        return 1\n    fi\n    if [[ ! $1 =~ ^[0-9]+$\
    \ ]]; then\n        echo \"Error: $1 is not an integer\"\n        return 1\n \
    \   fi\n    if [[ ! $2 =~ ^[0-9]+$ ]]; then\n        echo \"Error: $2 is not an\
    \ integer\"\n        return 1\n    fi\n    if [[ ! $3 =~ ^[0-9]+$ ]]; then\n \
    \       echo \"Error: $3 is not an integer\"\n        return 1\n    fi\n    if\
    \ [ $1 -eq 0 ] || [ $2 -eq 0 ] || [ $3 -eq 0 ]; then\n        echo \"false\"\n\
    \        return 0\n    fi\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n     \
    \   echo \"false\"\n        return 0\n    fi\n    if [ $1 -eq $2 ] || [ $2 -eq\
    \ $3 ] || [ $1 -eq $3 ]; then\n        echo \"false\"\n        return 0\n    fi\n\
    \    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        if [ $(( $1 * $1 )) -eq\
    \ $(( $2 * $2 + $3 * $3 )) ]; then\n            echo \"true\"\n            return\
    \ 0\n        fi\n    fi\n    if [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n       \
    \ if [ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]; then\n            echo \"\
    true\"\n            return 0\n        fi\n    fi\n    if [ $3 -gt $1 ] && [ $3\
    \ -gt $2 ]; then\n        if [ $(( $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ];\
    \ then\n            echo \"true\"\n            return 0\n        fi\n    fi\n\
    \    echo \"false\"\n    return 0\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n    echo \"false\"\n \
    \ else\n    if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n      echo \"false\"\n    else\n\
    \      if [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n        echo \"false\"\
    \n      else\n        if [[ $1 -eq $(( $2 * $2 + $3 * $3 )) || $2 -eq $(( $1 *\
    \ $1 + $3 * $3 )) || $3 -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ fi\n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") =\
    \ \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n        echo \"false\"\
    \n        return\n    fi\n    if [[ $1 -eq $2 ]]; then\n        if [[ $2 -eq $3\
    \ ]]; then\n            echo \"false\"\n            return\n        fi\n    fi\n\
    \    if [[ $1 -eq $3 ]]; then\n        if [[ $2 -eq $3 ]]; then\n            echo\
    \ \"false\"\n            return\n        fi\n    fi\n    if [[ $1 -eq $2 ]]; then\n\
    \        if [[ $2 -eq $3 ]]; then\n            echo \"false\"\n            return\n\
    \        fi\n    fi\n    if [[ $1 -eq $2 ]]; then\n        if [[ $2 -eq $3 ]];\
    \ then\n            echo \"false\"\n            return\n        fi\n    fi\n \
    \   if [[ $1 -eq $2 ]]; then\n        if [[ $2 -eq $3 ]]; then\n            echo\
    \ \"false\"\n            return\n        fi\n    fi\n    if [[ $1 -eq $2 ]]; then\n\
    \        if [[ $2 -eq $3 ]]; then\n            echo \"false\"\n            return\n\
    \        fi\n    fi\n    if [[ $1 -eq $2 ]]; then\n        if [[ $2 -eq $3 ]];\
    \ then\n            echo \"false\"\n            return\n        fi\n    fi\n \
    \   if [[ $1 -eq $2 ]]; then\n        if [[ $2 -eq $3 ]]; then\n            echo\
    \ \"false\"\n            return\n        fi\n    fi\n    if [[ $1 -eq $2 ]]; then\n\
    \        if [[ $2 -eq $3 ]]; then\n            echo \"false\"\n            return\n\
    \        fi\n    fi\n    if [[ $1 -eq $2 ]]; then\n        if [[ $2 -eq $3 ]];\
    \ then\n            echo \"false\"\n            return\n        fi\n    fi\n \
    \   if [[ $1 -eq $2 ]]; then\n        if [[ $2 -eq $3 ]]; then\n            echo\
    \ \"false\"\n            return\n        fi\n    fi\n    if [[ $1 -eq $2 ]]; then\n\
    \        if [[ $2 -eq $3 ]];\n}\n\ncandidate() {\n    right_angle_triangle \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1w7bzrno.sh: line 88: syntax error near unexpected token `}''

    /tmp/tmp1w7bzrno.sh: line 88: `}''

    '
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n        echo \"false\"\
    \n        return\n    fi\n    if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    if [[ $1 -eq $2 || $2 -eq $3 || $1 -eq\
    \ $3 ]]; then\n        echo \"false\"\n        return\n    fi\n    if [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n        if [[ $(( $1 * $1 )) -eq $(( $2 * $2 + $3\
    \ * $3 )) ]]; then\n            echo \"true\"\n            return\n        fi\n\
    \    fi\n    if [[ $2 -gt $1 && $2 -gt $3 ]]; then\n        if [[ $(( $2 * $2\
    \ )) -eq $(( $1 * $1 + $3 * $3 )) ]]; then\n            echo \"true\"\n      \
    \      return\n        fi\n    fi\n    if [[ $3 -gt $1 && $3 -gt $2 ]]; then\n\
    \        if [[ $(( $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n        \
    \    echo \"true\"\n            return\n        fi\n    fi\n    echo \"false\"\
    \n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n        echo \"false\"\
    \n        return\n    fi\n    if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    if [[ $1 -eq $2 || $2 -eq $3 || $1 -eq\
    \ $3 ]]; then\n        echo \"false\"\n        return\n    fi\n    if [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n        if [[ $1 -eq $(( $2 * $2 + $3 * $3 )) ]];\
    \ then\n            echo \"true\"\n            return\n        fi\n    fi\n  \
    \  if [[ $2 -gt $1 && $2 -gt $3 ]]; then\n        if [[ $2 -eq $(( $1 * $1 + $3\
    \ * $3 )) ]]; then\n            echo \"true\"\n            return\n        fi\n\
    \    fi\n    if [[ $3 -gt $1 && $3 -gt $2 ]]; then\n        if [[ $3 -eq $(( $1\
    \ * $1 + $2 * $2 )) ]]; then\n            echo \"true\"\n            return\n\
    \        fi\n    fi\n    echo \"false\"\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  if [[ $a -gt 0 && $b -gt 0 &&\
    \ $c -gt 0 ]]; then\n    if [[ $((a*a)) -eq $((b*b+c*c)) || $((b*b)) -eq $((a*a+c*c))\
    \ || $((c*c)) -eq $((a*a+b*b)) ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010490
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n        echo \"false\"\
    \n        return\n    fi\n    if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    if [[ $1 -eq $2 || $2 -eq $3 || $1 -eq\
    \ $3 ]]; then\n        echo \"false\"\n        return\n    fi\n    if [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n        if [[ $1 -eq $(( $2 * $2 + $3 * $3 )) ]];\
    \ then\n            echo \"true\"\n            return\n        fi\n    fi\n  \
    \  if [[ $2 -gt $1 && $2 -gt $3 ]]; then\n        if [[ $2 -eq $(( $1 * $1 + $3\
    \ * $3 )) ]]; then\n            echo \"true\"\n            return\n        fi\n\
    \    fi\n    if [[ $3 -gt $1 && $3 -gt $2 ]]; then\n        if [[ $3 -eq $(( $1\
    \ * $1 + $2 * $2 )) ]]; then\n            echo \"true\"\n            return\n\
    \        fi\n    fi\n    echo \"false\"\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    if [ $a -gt $b ] && [\
    \ $a -gt $c ]; then\n        if [ $((a*a)) -eq $((b*b+c*c)) ]; then\n        \
    \    echo \"true\"\n        else\n            echo \"false\"\n        fi\n   \
    \ elif [ $b -gt $a ] && [ $b -gt $c ]; then\n        if [ $((b*b)) -eq $((a*a+c*c))\
    \ ]; then\n            echo \"true\"\n        else\n            echo \"false\"\
    \n        fi\n    elif [ $c -gt $a ] && [ $c -gt $b ]; then\n        if [ $((c*c))\
    \ -eq $((a*a+b*b)) ]; then\n            echo \"true\"\n        else\n        \
    \    echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\
    \ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010490
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  if [ $((a*a + b*b)) -eq $((c*c))\
    \ ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n    return 1\n  fi\n  if [[ ! $1 =~ ^[0-9]+$ ]]; then\n\
    \    echo \"Error: $1 is not an integer\"\n    return 1\n  fi\n  if [[ ! $2 =~\
    \ ^[0-9]+$ ]]; then\n    echo \"Error: $2 is not an integer\"\n    return 1\n\
    \  fi\n  if [[ ! $3 =~ ^[0-9]+$ ]]; then\n    echo \"Error: $3 is not an integer\"\
    \n    return 1\n  fi\n  if [ $1 -eq 0 -o $2 -eq 0 -o $3 -eq 0 ]; then\n    echo\
    \ \"false\"\n    return 0\n  fi\n  if [ $1 -eq $2 -a $2 -eq $3 ]; then\n    echo\
    \ \"false\"\n    return 0\n  fi\n  if [ $1 -eq $2 -o $2 -eq $3 -o $1 -eq $3 ];\
    \ then\n    echo \"false\"\n    return 0\n  fi\n  if [ $1 -eq $2 -o $2 -eq $3\
    \ -o $1 -eq $3 ]; then\n    echo \"false\"\n    return 0\n  fi\n  if [ $1 -eq\
    \ $2 -o $2 -eq $3 -o $1 -eq $3 ]; then\n    echo \"false\"\n    return 0\n  fi\n\
    \  if [ $1 -eq $2 -o $2 -eq $3 -o $1 -eq $3 ]; then\n    echo \"false\"\n    return\
    \ 0\n  fi\n  if [ $1 -eq $2 -o $2 -eq $3 -o $1 -eq $3 ]; then\n    echo \"false\"\
    \n    return 0\n  fi\n  if [ $1 -eq $2 -o $2 -eq $3 -o $1 -eq $3 ]; then\n   \
    \ echo \"false\"\n    return 0\n  fi\n  if [ $1 -eq $2 -o $2 -eq $3 -o $1 -eq\
    \ $3 ]; then\n    echo \"false\"\n    return 0\n\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp78znw8ww.sh: line 68: syntax error near unexpected token `}''

    /tmp/tmp78znw8ww.sh: line 68: `}''

    '
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local result=\"false\"\n  if\
    \ [ $a -gt 0 ] && [ $b -gt 0 ] && [ $c -gt 0 ]; then\n    if [ $((a*a)) -eq $((b*b+c*c))\
    \ ] || [ $((b*b)) -eq $((a*a+c*c)) ] || [ $((c*c)) -eq $((a*a+b*b)) ]; then\n\
    \      result=\"true\"\n    fi\n  fi\n  echo $result\n}\n\ncandidate() {\n   \
    \ right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n    echo \"false\"\n \
    \ else\n    if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n      echo \"false\"\n    else\n\
    \      if [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n        echo \"false\"\
    \n      else\n        if [[ $1 -gt $2 && $1 -gt $3 ]]; then\n          if [[ $1\
    \ -eq $(( $2 * $2 + $3 * $3 )) ]]; then\n            echo \"true\"\n         \
    \ else\n            echo \"false\"\n          fi\n        elif [[ $2 -gt $1 &&\
    \ $2 -gt $3 ]]; then\n          if [[ $2 -eq $(( $1 * $1 + $3 * $3 )) ]]; then\n\
    \            echo \"true\"\n          else\n            echo \"false\"\n     \
    \     fi\n        elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n          if [[ $3\
    \ -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n            echo \"true\"\n         \
    \ else\n            echo \"false\"\n          fi\n        fi\n      fi\n    fi\n\
    \  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n        return 1\n    fi\n    if ! [[ $1 =~ ^[0-9]+$\
    \ ]]; then\n        echo \"Error: $1 is not an integer\"\n        return 1\n \
    \   fi\n    if ! [[ $2 =~ ^[0-9]+$ ]]; then\n        echo \"Error: $2 is not an\
    \ integer\"\n        return 1\n    fi\n    if ! [[ $3 =~ ^[0-9]+$ ]]; then\n \
    \       echo \"Error: $3 is not an integer\"\n        return 1\n    fi\n    if\
    \ [ $1 -eq 0 ] || [ $2 -eq 0 ] || [ $3 -eq 0 ]; then\n        echo \"false\"\n\
    \        return 0\n    fi\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n     \
    \   echo \"false\"\n        return 0\n    fi\n    if [ $1 -eq $2 ] || [ $2 -eq\
    \ $3 ] || [ $1 -eq $3 ]; then\n        echo \"false\"\n        return 0\n    fi\n\
    \    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        if [ $(( $1 * $1 )) -eq\
    \ $(( $2 * $2 + $3 * $3 )) ]; then\n            echo \"true\"\n            return\
    \ 0\n        fi\n    fi\n    if [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n       \
    \ if [ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]; then\n            echo \"\
    true\"\n            return 0\n        fi\n    fi\n    if [ $3 -gt $1 ] && [ $3\
    \ -gt $2 ]; then\n        if [ $(( $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ];\
    \ then\n            echo \"true\"\n            return 0\n        fi\n    fi\n\
    \    echo \"false\"\n    return 0\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n        if [[ $1 -eq\
    \ $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n            echo \"false\"\n        elif\
    \ [[ $1 -gt $2 && $1 -gt $3 ]]; then\n            if [[ $1 -eq $(($2**2 + $3**2))\
    \ ]]; then\n                echo \"true\"\n            else\n                echo\
    \ \"false\"\n            fi\n        elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n\
    \            if [[ $2 -eq $(($1**2 + $3**2)) ]]; then\n                echo \"\
    true\"\n            else\n                echo \"false\"\n            fi\n   \
    \     elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n            if [[ $3 -eq $(($1**2\
    \ + $2**2)) ]]; then\n                echo \"true\"\n            else\n      \
    \          echo \"false\"\n            fi\n        fi\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  if (( $a > 0 && $b > 0 && $c\
    \ > 0 )); then\n    if (( $a > $b && $a > $c )); then\n      if (( $a*$a == $b*$b\
    \ + $c*$c )); then\n        echo \"true\"\n      else\n        echo \"false\"\n\
    \      fi\n    elif (( $b > $a && $b > $c )); then\n      if (( $b*$b == $a*$a\
    \ + $c*$c )); then\n        echo \"true\"\n      else\n        echo \"false\"\n\
    \      fi\n    elif (( $c > $a && $c > $b )); then\n      if (( $c*$c == $a*$a\
    \ + $b*$b )); then\n        echo \"true\"\n      else\n        echo \"false\"\n\
    \      fi\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: $0 <integer> <integer> <integer>\"\
    \n        exit 1\n    fi\n    if ! [[ $1 =~ ^[0-9]+$ ]]; then\n        echo \"\
    Error: $1 is not an integer\"\n        exit 1\n    fi\n    if ! [[ $2 =~ ^[0-9]+$\
    \ ]]; then\n        echo \"Error: $2 is not an integer\"\n        exit 1\n   \
    \ fi\n    if ! [[ $3 =~ ^[0-9]+$ ]]; then\n        echo \"Error: $3 is not an\
    \ integer\"\n        exit 1\n    fi\n    if [ $1 -eq 0 ] || [ $2 -eq 0 ] || [\
    \ $3 -eq 0 ]; then\n        echo \"false\"\n        exit 0\n    fi\n    if [ $1\
    \ -eq $2 ] && [ $2 -eq $3 ]; then\n        echo \"false\"\n        exit 0\n  \
    \  fi\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo\
    \ \"false\"\n        exit 0\n    fi\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n\
    \        if [ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]; then\n          \
    \  echo \"true\"\n            exit 0\n        fi\n    fi\n    if [ $2 -gt $1 ]\
    \ && [ $2 -gt $3 ]; then\n        if [ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 * $3\
    \ )) ]; then\n            echo \"true\"\n            exit 0\n        fi\n    fi\n\
    \    if [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n        if [ $(( $3 * $3 )) -eq\
    \ $(( $1 * $1 + $2 * $2 )) ]; then\n            echo \"true\"\n            exit\
    \ 0\n        fi\n    fi\n    echo \"false\"\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n    return 1\n  fi\n  local a=$1\n  local b=$2\n  local\
    \ c=$3\n  if [ $a -gt $b ] && [ $a -gt $c ]; then\n    if [ $((a*a)) -eq $((b*b+c*c))\
    \ ]; then\n      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  elif\
    \ [ $b -gt $a ] && [ $b -gt $c ]; then\n    if [ $((b*b)) -eq $((a*a+c*c)) ];\
    \ then\n      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  elif [\
    \ $c -gt $a ] && [ $c -gt $b ]; then\n    if [ $((c*c)) -eq $((a*a+b*b)) ]; then\n\
    \      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n    return 1\n  fi\n  if ! [[ $1 =~ ^[0-9]+$ ]]; then\n\
    \    echo \"Error: $1 is not an integer\"\n    return 1\n  fi\n  if ! [[ $2 =~\
    \ ^[0-9]+$ ]]; then\n    echo \"Error: $2 is not an integer\"\n    return 1\n\
    \  fi\n  if ! [[ $3 =~ ^[0-9]+$ ]]; then\n    echo \"Error: $3 is not an integer\"\
    \n    return 1\n  fi\n  if [ $1 -eq 0 ] || [ $2 -eq 0 ] || [ $3 -eq 0 ]; then\n\
    \    echo \"false\"\n    return 0\n  fi\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ];\
    \ then\n    echo \"false\"\n    return 0\n  fi\n  if [ $1 -eq $2 ] || [ $2 -eq\
    \ $3 ] || [ $1 -eq $3 ]; then\n    echo \"false\"\n    return 0\n  fi\n  if [\
    \ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $(( $1 * $1 )) -eq $(( $2 * $2\
    \ + $3 * $3 )) ]; then\n      echo \"true\"\n      return 0\n    fi\n  fi\n  if\
    \ [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $(( $2 * $2 )) -eq $(( $1 * $1\
    \ + $3 * $3 )) ]; then\n      echo \"true\"\n      return 0\n    fi\n  fi\n  if\
    \ [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n    if [ $(( $3 * $3 )) -eq $(( $1 * $1\
    \ + $2 * $2 )) ]; then\n      echo \"true\"\n      return 0\n    fi\n  fi\n  echo\
    \ \"false\"\n  return 0\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    local max=$a\n    local\
    \ min1=$b\n    local min2=$c\n    if [ $b -gt $max ]; then\n        max=$b\n \
    \       min1=$a\n        min2=$c\n    fi\n    if [ $c -gt $max ]; then\n     \
    \   max=$c\n        min1=$a\n        min2=$b\n    fi\n    if [ $((max*max)) -eq\
    \ $((min1*min1+min2*min2)) ]; then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n    echo \"false\"\n \
    \ else\n    if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n      echo \"false\"\n    else\n\
    \      if [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n        echo \"false\"\
    \n      else\n        if [[ $1 -gt $2 && $1 -gt $3 ]]; then\n          if [[ $((\
    \ $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]]; then\n            echo \"true\"\n\
    \          else\n            echo \"false\"\n          fi\n        elif [[ $2\
    \ -gt $1 && $2 -gt $3 ]]; then\n          if [[ $(( $2 * $2 )) -eq $(( $1 * $1\
    \ + $3 * $3 )) ]]; then\n            echo \"true\"\n          else\n         \
    \   echo \"false\"\n          fi\n        elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n\
    \          if [[ $(( $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n      \
    \      echo \"true\"\n          else\n            echo \"false\"\n          fi\n\
    \        fi\n      fi\n    fi\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local result=\"false\"\n  if\
    \ [[ $a -gt 0 && $b -gt 0 && $c -gt 0 ]]; then\n    if [[ $a -eq $b && $b -eq\
    \ $c ]]; then\n      result=\"false\"\n    elif [[ $a -eq $b || $b -eq $c || $a\
    \ -eq $c ]]; then\n      result=\"true\"\n    elif [[ $a -gt $b && $a -gt $c ]];\
    \ then\n      if [[ $((a*a)) -eq $((b*b+c*c)) ]]; then\n        result=\"true\"\
    \n      fi\n    elif [[ $b -gt $a && $b -gt $c ]]; then\n      if [[ $((b*b))\
    \ -eq $((a*a+c*c)) ]]; then\n        result=\"true\"\n      fi\n    elif [[ $c\
    \ -gt $a && $c -gt $b ]]; then\n      if [[ $((c*c)) -eq $((a*a+b*b)) ]]; then\n\
    \        result=\"true\"\n      fi\n    fi\n  fi\n  echo \"$result\"\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    local max=$a\n    local\
    \ min1=$b\n    local min2=$c\n    if [ $max -lt $b ]; then\n        max=$b\n \
    \       min1=$a\n        min2=$c\n    fi\n    if [ $max -lt $c ]; then\n     \
    \   max=$c\n        min1=$a\n        min2=$b\n    fi\n    if [ $max -eq $(($min1*$min1+$min2*$min2))\
    \ ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\
    \ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    if [[ $a -gt $b ]]; then\n\
    \        if [[ $a -gt $c ]]; then\n            if [[ $a -eq $(( $b * $b + $c *\
    \ $c )) ]]; then\n                echo \"true\"\n            else\n          \
    \      echo \"false\"\n            fi\n        else\n            if [[ $c -eq\
    \ $(( $a * $a + $b * $b )) ]]; then\n                echo \"true\"\n         \
    \   else\n                echo \"false\"\n            fi\n        fi\n    else\n\
    \        if [[ $b -gt $c ]]; then\n            if [[ $b -eq $(( $a * $a + $c *\
    \ $c )) ]]; then\n                echo \"true\"\n            else\n          \
    \      echo \"false\"\n            fi\n        else\n            if [[ $c -eq\
    \ $(( $a * $a + $b * $b )) ]]; then\n                echo \"true\"\n         \
    \   else\n                echo \"false\"\n            fi\n        fi\n    fi\n\
    }\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n        echo \"false\"\
    \n    elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n        echo \"false\"\n    elif\
    \ [[ $1 -eq $2 && $1 -eq $3 ]]; then\n        echo \"false\"\n    elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n        echo \"false\"\n    elif [[ $1\
    \ -gt $2 && $1 -gt $3 ]]; then\n        if [[ $1 -eq $(( $2 * $2 + $3 * $3 ))\
    \ ]]; then\n            echo \"true\"\n        else\n            echo \"false\"\
    \n        fi\n    elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n        if [[ $2 -eq\
    \ $(( $1 * $1 + $3 * $3 )) ]]; then\n            echo \"true\"\n        else\n\
    \            echo \"false\"\n        fi\n    elif [[ $3 -gt $1 && $3 -gt $2 ]];\
    \ then\n        if [[ $3 -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n            echo\
    \ \"true\"\n        else\n            echo \"false\"\n        fi\n    fi\n}\n\n\
    candidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n\
    \    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\"\
    \ \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\"\
    \ ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[\
    \ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  if [ $a -gt $b ] && [ $a -gt\
    \ $c ]; then\n    if [ $((a*a)) -eq $((b*b+c*c)) ]; then\n      echo \"true\"\n\
    \    else\n      echo \"false\"\n    fi\n  elif [ $b -gt $a ] && [ $b -gt $c ];\
    \ then\n    if [ $((b*b)) -eq $((a*a+c*c)) ]; then\n      echo \"true\"\n    else\n\
    \      echo \"false\"\n    fi\n  elif [ $c -gt $a ] && [ $c -gt $b ]; then\n \
    \   if [ $((c*c)) -eq $((a*a+b*b)) ]; then\n      echo \"true\"\n    else\n  \
    \    echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010490
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  if [[ $a -gt 0 && $b -gt 0 &&\
    \ $c -gt 0 ]]; then\n    if [[ $a -eq $b && $b -eq $c ]]; then\n      echo \"\
    false\"\n    elif [[ $a -eq $b || $b -eq $c || $a -eq $c ]]; then\n      echo\
    \ \"false\"\n    elif [[ $a -gt $b && $a -gt $c ]]; then\n      if [[ $((a*a))\
    \ -eq $((b*b+c*c)) ]]; then\n        echo \"true\"\n      else\n        echo \"\
    false\"\n      fi\n    elif [[ $b -gt $a && $b -gt $c ]]; then\n      if [[ $((b*b))\
    \ -eq $((a*a+c*c)) ]]; then\n        echo \"true\"\n      else\n        echo \"\
    false\"\n      fi\n    elif [[ $c -gt $a && $c -gt $b ]]; then\n      if [[ $((c*c))\
    \ -eq $((a*a+b*b)) ]]; then\n        echo \"true\"\n      else\n        echo \"\
    false\"\n      fi\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  if (( $a > 0 && $b > 0 && $c\
    \ > 0 )); then\n    if (( $a > $b && $a > $c )); then\n      if (( $a*$a == $b*$b\
    \ + $c*$c )); then\n        echo \"true\"\n      else\n        echo \"false\"\n\
    \      fi\n    elif (( $b > $a && $b > $c )); then\n      if (( $b*$b == $a*$a\
    \ + $c*$c )); then\n        echo \"true\"\n      else\n        echo \"false\"\n\
    \      fi\n    elif (( $c > $a && $c > $b )); then\n      if (( $c*$c == $a*$a\
    \ + $b*$b )); then\n        echo \"true\"\n      else\n        echo \"false\"\n\
    \      fi\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n\
    \  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n        echo \"false\"\
    \n        return\n    fi\n    if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    if [[ $1 -eq $2 || $2 -eq $3 || $1 -eq\
    \ $3 ]]; then\n        echo \"false\"\n        return\n    fi\n    if [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n        if [[ $1 -eq $(($2*$2 + $3*$3)) ]]; then\n\
    \            echo \"true\"\n            return\n        fi\n    fi\n    if [[\
    \ $2 -gt $1 && $2 -gt $3 ]]; then\n        if [[ $2 -eq $(($1*$1 + $3*$3)) ]];\
    \ then\n            echo \"true\"\n            return\n        fi\n    fi\n  \
    \  if [[ $3 -gt $1 && $3 -gt $2 ]]; then\n        if [[ $3 -eq $(($1*$1 + $2*$2))\
    \ ]]; then\n            echo \"true\"\n            return\n        fi\n    fi\n\
    \    echo \"false\"\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $# -ne 3 ]]; then\n    echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n    return 1\n  fi\n  if [[ $1 -eq 0 || $2 -eq 0 || $3\
    \ -eq 0 ]]; then\n    echo \"false\"\n    return 0\n  fi\n  if [[ $1 -eq $2 &&\
    \ $2 -eq $3 ]]; then\n    echo \"false\"\n    return 0\n  fi\n  if [[ $1 -eq $2\
    \ || $2 -eq $3 || $1 -eq $3 ]]; then\n    echo \"false\"\n    return 0\n  fi\n\
    \  if [[ $1 -gt $2 && $1 -gt $3 ]]; then\n    if [[ $1 -eq $(( $2 * $2 + $3 *\
    \ $3 )) ]]; then\n      echo \"true\"\n      return 0\n    fi\n  fi\n  if [[ $2\
    \ -gt $1 && $2 -gt $3 ]]; then\n    if [[ $2 -eq $(( $1 * $1 + $3 * $3 )) ]];\
    \ then\n      echo \"true\"\n      return 0\n    fi\n  fi\n  if [[ $3 -gt $1 &&\
    \ $3 -gt $2 ]]; then\n    if [[ $3 -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n   \
    \   echo \"true\"\n      return 0\n    fi\n  fi\n  echo \"false\"\n  return 0\n\
    }\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n    return 1\n  fi\n  if ! [[ $1 =~ ^[0-9]+$ ]]; then\n\
    \    echo \"Error: $1 is not an integer\"\n    return 1\n  fi\n  if ! [[ $2 =~\
    \ ^[0-9]+$ ]]; then\n    echo \"Error: $2 is not an integer\"\n    return 1\n\
    \  fi\n  if ! [[ $3 =~ ^[0-9]+$ ]]; then\n    echo \"Error: $3 is not an integer\"\
    \n    return 1\n  fi\n  if [ $1 -eq 0 ] || [ $2 -eq 0 ] || [ $3 -eq 0 ]; then\n\
    \    echo \"false\"\n    return 0\n  fi\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ];\
    \ then\n    echo \"false\"\n    return 0\n  fi\n  if [ $1 -eq $2 ] || [ $2 -eq\
    \ $3 ] || [ $1 -eq $3 ]; then\n    echo \"false\"\n    return 0\n  fi\n  if [\
    \ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $(( $1 * $1 )) -eq $(( $2 * $2\
    \ + $3 * $3 )) ]; then\n      echo \"true\"\n      return 0\n    fi\n  fi\n  if\
    \ [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $(( $2 * $2 )) -eq $(( $1 * $1\
    \ + $3 * $3 )) ]; then\n      echo \"true\"\n      return 0\n    fi\n  fi\n  if\
    \ [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n    if [ $(( $3 * $3 )) -eq $(( $1 * $1\
    \ + $2 * $2 )) ]; then\n      echo \"true\"\n      return 0\n    fi\n  fi\n  echo\
    \ \"false\"\n  return 0\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n        echo \"false\"\
    \n        return\n    fi\n    if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    if [[ $1 -eq $2 || $2 -eq $3 || $1 -eq\
    \ $3 ]]; then\n        echo \"false\"\n        return\n    fi\n    if [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n        if [[ $1 -eq $(( $2 * $2 + $3 * $3 )) ]];\
    \ then\n            echo \"true\"\n            return\n        fi\n    fi\n  \
    \  if [[ $2 -gt $1 && $2 -gt $3 ]]; then\n        if [[ $2 -eq $(( $1 * $1 + $3\
    \ * $3 )) ]]; then\n            echo \"true\"\n            return\n        fi\n\
    \    fi\n    if [[ $3 -gt $1 && $3 -gt $2 ]]; then\n        if [[ $3 -eq $(( $1\
    \ * $1 + $2 * $2 )) ]]; then\n            echo \"true\"\n            return\n\
    \        fi\n    fi\n    echo \"false\"\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  if [[ $a -gt 0 && $b -gt 0 &&\
    \ $c -gt 0 ]]; then\n    if [[ $a -gt $b && $a -gt $c ]]; then\n      if [[ $((a*a))\
    \ -eq $((b*b+c*c)) ]]; then\n        echo \"true\"\n      else\n        echo \"\
    false\"\n      fi\n    elif [[ $b -gt $a && $b -gt $c ]]; then\n      if [[ $((b*b))\
    \ -eq $((a*a+c*c)) ]]; then\n        echo \"true\"\n      else\n        echo \"\
    false\"\n      fi\n    elif [[ $c -gt $a && $c -gt $b ]]; then\n      if [[ $((c*c))\
    \ -eq $((a*a+b*b)) ]]; then\n        echo \"true\"\n      else\n        echo \"\
    false\"\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"\
    false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") =\
    \ \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    local max=$a\n    local\
    \ min1=$b\n    local min2=$c\n    if [[ $a -lt $b ]]; then\n        max=$b\n \
    \       min1=$a\n    fi\n    if [[ $max -lt $c ]]; then\n        max=$c\n    \
    \    min1=$b\n        min2=$a\n    fi\n    if [[ $min1 -lt $min2 ]]; then\n  \
    \      local tmp=$min1\n        min1=$min2\n        min2=$tmp\n    fi\n    if\
    \ [[ $((max*max)) -eq $((min1*min1+min2*min2)) ]]; then\n        echo \"true\"\
    \n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    if [[ $a -eq 0 || $b\
    \ -eq 0 || $c -eq 0 ]]; then\n        echo \"false\"\n    else\n        if [[\
    \ $a -eq $b && $b -eq $c ]]; then\n            echo \"false\"\n        else\n\
    \            if [[ $a -eq $b || $b -eq $c || $a -eq $c ]]; then\n            \
    \    echo \"true\"\n            else\n                echo \"false\"\n       \
    \     fi\n        fi\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  if (( $a*$a + $b*$b == $c*$c\
    \ )); then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  if [[ $a -gt 0 && $b -gt 0 &&\
    \ $c -gt 0 ]]; then\n    if [[ $a -eq $b && $b -eq $c ]]; then\n      echo \"\
    false\"\n    elif [[ $a -eq $b || $b -eq $c || $a -eq $c ]]; then\n      echo\
    \ \"false\"\n    elif [[ $a -gt $b && $a -gt $c ]]; then\n      if [[ $((a*a))\
    \ -eq $((b*b+c*c)) ]]; then\n        echo \"true\"\n      else\n        echo \"\
    false\"\n      fi\n    elif [[ $b -gt $a && $b -gt $c ]]; then\n      if [[ $((b*b))\
    \ -eq $((a*a+c*c)) ]]; then\n        echo \"true\"\n      else\n        echo \"\
    false\"\n      fi\n    elif [[ $c -gt $a && $c -gt $b ]]; then\n      if [[ $((c*c))\
    \ -eq $((a*a+b*b)) ]]; then\n        echo \"true\"\n      else\n        echo \"\
    false\"\n      fi\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    local max=$a\n    local\
    \ min1=$b\n    local min2=$c\n    if [ $b -gt $max ]; then\n        max=$b\n \
    \       min1=$a\n        min2=$c\n    fi\n    if [ $c -gt $max ]; then\n     \
    \   max=$c\n        min1=$a\n        min2=$b\n    fi\n    if [ $((max*max)) -eq\
    \ $((min1*min1+min2*min2)) ]; then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $# -ne 3 ]]; then\n        echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n        return 1\n    fi\n    if [[ $1 -eq 0 || $2 -eq\
    \ 0 || $3 -eq 0 ]]; then\n        echo \"false\"\n        return 0\n    fi\n \
    \   if [[ $1 -eq $2 ]]; then\n        if [[ $1 -eq $3 ]]; then\n            echo\
    \ \"false\"\n            return 0\n        fi\n    fi\n    if [[ $1 -eq $3 ]];\
    \ then\n        if [[ $1 -eq $2 ]]; then\n            echo \"false\"\n       \
    \     return 0\n        fi\n    fi\n    if [[ $2 -eq $3 ]]; then\n        if [[\
    \ $2 -eq $1 ]]; then\n            echo \"false\"\n            return 0\n     \
    \   fi\n    fi\n    if [[ $1 -eq $2 && $1 -eq $3 ]]; then\n        echo \"false\"\
    \n        return 0\n    fi\n    if [[ $1 -eq $2 || $1 -eq $3 || $2 -eq $3 ]];\
    \ then\n        echo \"false\"\n        return 0\n    fi\n    if [[ $1 -gt $2\
    \ && $1 -gt $3 ]]; then\n        if [[ $1 -eq $2 + $3 ]]; then\n            echo\
    \ \"true\"\n            return 0\n        fi\n    fi\n    if [[ $2 -gt $1 && $2\
    \ -gt $3 ]]; then\n        if [[ $2 -eq $1 + $3 ]]; then\n            echo \"\
    true\"\n            return 0\n        fi\n    fi\n    if [[ $3 -gt $1 && $3 -gt\
    \ $2 ]]; then\n        if [[ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\
    \n            return 0\n        fi\n    fi\n    echo \"false\"\n    return 0\n\
    }\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpavqyi2in.sh: line 51: syntax error in conditional expression

    /tmp/tmpavqyi2in.sh: line 51: syntax error near `+''

    /tmp/tmpavqyi2in.sh: line 51: `        if [[ $1 -eq $2 + $3 ]]; then''

    '
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n        echo \"false\"\
    \n        return\n    fi\n    if [[ $1 -eq $2 ]]; then\n        if [[ $1 -eq $3\
    \ ]]; then\n            echo \"false\"\n            return\n        fi\n    fi\n\
    \    if [[ $1 -eq $3 ]]; then\n        if [[ $1 -eq $2 ]]; then\n            echo\
    \ \"false\"\n            return\n        fi\n    fi\n    if [[ $2 -eq $3 ]]; then\n\
    \        if [[ $2 -eq $1 ]]; then\n            echo \"false\"\n            return\n\
    \        fi\n    fi\n    if [[ $1 -gt $2 ]]; then\n        if [[ $1 -gt $3 ]];\
    \ then\n            if [[ $1 -eq $(( $2 * $2 + $3 * $3 )) ]]; then\n         \
    \       echo \"true\"\n                return\n            fi\n        fi\n  \
    \  fi\n    if [[ $2 -gt $1 ]]; then\n        if [[ $2 -gt $3 ]]; then\n      \
    \      if [[ $2 -eq $(( $1 * $1 + $3 * $3 )) ]]; then\n                echo \"\
    true\"\n                return\n            fi\n        fi\n    fi\n    if [[\
    \ $3 -gt $1 ]]; then\n        if [[ $3 -gt $2 ]]; then\n            if [[ $3 -eq\
    \ $(( $1 * $1 + $2 * $2 )) ]]; then\n                echo \"true\"\n         \
    \       return\n            fi\n        fi\n    fi\n    echo \"false\"\n}\n\n\
    candidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n\
    \    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\"\
    \ \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\"\
    \ ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[\
    \ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n    if [[ $1 -eq $2 &&\
    \ $2 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $2 || $2 -eq $3\
    \ || $1 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -gt $2 && $1 -gt\
    \ $3 ]]; then\n      if [[ $1 -eq $(($2**2 + $3**2)) ]]; then\n        echo \"\
    true\"\n      else\n        echo \"false\"\n      fi\n    elif [[ $2 -gt $1 &&\
    \ $2 -gt $3 ]]; then\n      if [[ $2 -eq $(($1**2 + $3**2)) ]]; then\n       \
    \ echo \"true\"\n      else\n        echo \"false\"\n      fi\n    elif [[ $3\
    \ -gt $1 && $3 -gt $2 ]]; then\n      if [[ $3 -eq $(($1**2 + $2**2)) ]]; then\n\
    \        echo \"true\"\n      else\n        echo \"false\"\n      fi\n    fi\n\
    \  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    local max=$a\n    local\
    \ min1=$b\n    local min2=$c\n    if [ $b -gt $max ]; then\n        max=$b\n \
    \       min1=$a\n        min2=$c\n    fi\n    if [ $c -gt $max ]; then\n     \
    \   max=$c\n        min1=$a\n        min2=$b\n    fi\n    if [ $((max*max)) -eq\
    \ $((min1*min1+min2*min2)) ]; then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local result=\"false\"\n  if\
    \ [[ $a -gt 0 && $b -gt 0 && $c -gt 0 ]]; then\n    if [[ $a -eq $b && $b -eq\
    \ $c ]]; then\n      result=\"false\"\n    elif [[ $a -eq $b || $b -eq $c || $a\
    \ -eq $c ]]; then\n      result=\"true\"\n    elif [[ $a -gt $b && $a -gt $c ]];\
    \ then\n      if [[ $((a*a)) -eq $((b*b+c*c)) ]]; then\n        result=\"true\"\
    \n      fi\n    elif [[ $b -gt $a && $b -gt $c ]]; then\n      if [[ $((b*b))\
    \ -eq $((a*a+c*c)) ]]; then\n        result=\"true\"\n      fi\n    elif [[ $c\
    \ -gt $a && $c -gt $b ]]; then\n      if [[ $((c*c)) -eq $((a*a+b*b)) ]]; then\n\
    \        result=\"true\"\n      fi\n    fi\n  fi\n  echo \"$result\"\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local result=\"false\"\n  if\
    \ [[ $a -gt 0 && $b -gt 0 && $c -gt 0 ]]; then\n    if [[ $a -eq $b && $b -eq\
    \ $c ]]; then\n      result=\"true\"\n    elif [[ $a -eq $b || $b -eq $c || $a\
    \ -eq $c ]]; then\n      result=\"false\"\n    elif [[ $a -gt $b && $a -gt $c\
    \ ]]; then\n      if [[ $((a * a)) -eq $((b * b + c * c)) ]]; then\n        result=\"\
    true\"\n      fi\n    elif [[ $b -gt $a && $b -gt $c ]]; then\n      if [[ $((b\
    \ * b)) -eq $((a * a + c * c)) ]]; then\n        result=\"true\"\n      fi\n \
    \   elif [[ $c -gt $a && $c -gt $b ]]; then\n      if [[ $((c * c)) -eq $((a *\
    \ a + b * b)) ]]; then\n        result=\"true\"\n      fi\n    fi\n  fi\n  echo\
    \ \"$result\"\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") =\
    \ \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local result=\"false\"\n  if\
    \ [[ $a -gt 0 && $b -gt 0 && $c -gt 0 ]]; then\n    if [[ $a -gt $b && $a -gt\
    \ $c ]]; then\n      if [[ $((a*a)) -eq $((b*b+c*c)) ]]; then\n        result=\"\
    true\"\n      fi\n    elif [[ $b -gt $a && $b -gt $c ]]; then\n      if [[ $((b*b))\
    \ -eq $((a*a+c*c)) ]]; then\n        result=\"true\"\n      fi\n    elif [[ $c\
    \ -gt $a && $c -gt $b ]]; then\n      if [[ $((c*c)) -eq $((a*a+b*b)) ]]; then\n\
    \        result=\"true\"\n      fi\n    fi\n  fi\n  echo \"$result\"\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    local max=$a\n    local\
    \ min1=$b\n    local min2=$c\n    if [ $a -lt $b ]; then\n        max=$b\n   \
    \     min1=$a\n    fi\n    if [ $max -lt $c ]; then\n        min2=$min1\n    \
    \    min1=$max\n        max=$c\n    elif [ $min1 -gt $c ]; then\n        min2=$min1\n\
    \        min1=$c\n    fi\n    if [ $((max*max)) -eq $((min1*min1+min2*min2)) ];\
    \ then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n\
    \    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\"\
    \ \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\"\
    \ ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[\
    \ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=$a\n  local min1=$b\n\
    \  local min2=$c\n  if [[ $b -gt $max ]]; then\n    max=$b\n    min1=$a\n    min2=$c\n\
    \  fi\n  if [[ $c -gt $max ]]; then\n    max=$c\n    min1=$a\n    min2=$b\n  fi\n\
    \  if [[ $((max * max)) -eq $((min1 * min1 + min2 * min2)) ]]; then\n    echo\
    \ \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n        echo \"false\"\
    \n        return\n    fi\n    if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    if [[ $1 -eq $2 || $2 -eq $3 || $1 -eq\
    \ $3 ]]; then\n        echo \"false\"\n        return\n    fi\n    if [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n        if [[ $1 -eq $(( $2**2 + $3**2 )) ]]; then\n\
    \            echo \"true\"\n            return\n        fi\n    fi\n    if [[\
    \ $2 -gt $1 && $2 -gt $3 ]]; then\n        if [[ $2 -eq $(( $1**2 + $3**2 )) ]];\
    \ then\n            echo \"true\"\n            return\n        fi\n    fi\n  \
    \  if [[ $3 -gt $1 && $3 -gt $2 ]]; then\n        if [[ $3 -eq $(( $1**2 + $2**2\
    \ )) ]]; then\n            echo \"true\"\n            return\n        fi\n   \
    \ fi\n    echo \"false\"\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local result=\"\"\n  if [[ $a\
    \ -gt 0 && $b -gt 0 && $c -gt 0 ]]; then\n    if [[ $a -eq $b && $b -eq $c ]];\
    \ then\n      result=\"false\"\n    elif [[ $a -eq $b || $b -eq $c || $a -eq $c\
    \ ]]; then\n      result=\"false\"\n    elif [[ $a -eq $((b*b + c*c)) || $b -eq\
    \ $((a*a + c*c)) || $c -eq $((a*a + b*b)) ]]; then\n      result=\"true\"\n  \
    \  else\n      result=\"false\"\n    fi\n  else\n    result=\"false\"\n  fi\n\
    \  echo \"$result\"\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n# sides form a right-angled triangle, false otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    local result=\"false\"\
    \n    if [ $a -gt 0 ] && [ $b -gt 0 ] && [ $c -gt 0 ]; then\n        if [ $a -eq\
    \ $b ] && [ $b -eq $c ]; then\n            result=\"true\"\n        elif [ $a\
    \ -eq $b ] || [ $b -eq $c ] || [ $a -eq $c ]; then\n            result=\"false\"\
    \n        else\n            local max=$a\n            if [ $b -gt $max ]; then\n\
    \                max=$b\n            fi\n            if [ $c -gt $max ]; then\n\
    \                max=$c\n            fi\n            if [ $max -eq $a ]; then\n\
    \                if [ $((b*b+c*c)) -eq $((a*a)) ]; then\n                    result=\"\
    true\"\n                fi\n            elif [ $max -eq $b ]; then\n         \
    \       if [ $((a*a+c*c)) -eq $((b*b)) ]; then\n                    result=\"\
    true\"\n                fi\n            elif [ $max -eq $c ]; then\n         \
    \       if [ $((a*a+b*b)) -eq $((c*c)) ]; then\n                    result=\"\
    true\"\n                fi\n            fi\n        fi\n    fi\n    echo $result\n\
    }\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010491

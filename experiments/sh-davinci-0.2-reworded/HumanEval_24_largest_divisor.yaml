name: HumanEval_24_largest_divisor
language: sh
prompt: "#!/bin/bash\n# For a given number n, find the largest number that divides\
  \ n evenly, smaller than n\n# >>> $(largest_divisor \"15\")\n# \"5\"\n#\n# $1 is\
  \ an integer\nlargest_divisor() {\n"
tests: "}\n\ncandidate() {\n    largest_divisor \"$@\"\n}\n\nset -e\nrun_test() {\n\
  \    [[ $(candidate \"3\") = \"1\" ]]\n    [[ $(candidate \"7\") = \"1\" ]]\n  \
  \  [[ $(candidate \"10\") = \"5\" ]]\n    [[ $(candidate \"100\") = \"50\" ]]\n\
  \    [[ $(candidate \"49\") = \"7\" ]]\n}\n\nrun_test"
completions: ["  local n=$1\n  local i=2\n  while [ $((n % i)) -eq 0 ]; do\n    n=$((n\
    \ / i))\n  done\n  echo $n", "    local n=$1\n    local i=$((n-1))\n    while\
    \ [[ $((n%i)) -ne 0 ]]; do\n        i=$((i-1))\n    done\n    echo $i", "  local\
    \ n=$1\n  local i=$((n-1))\n  while [[ $((n%i)) -ne 0 ]]; do\n    i=$((i-1))\n\
    \  done\n  echo $i", "    local n=$1\n    local i=2\n    while [ $i -lt $n ];\
    \ do\n        if [ $(($n % $i)) -eq 0 ]; then\n            echo $i\n         \
    \   return\n        fi\n        i=$(($i + 1))\n    done\n    echo $n", "  local\
    \ n=$1\n  local i=$((n-1))\n  while [[ $((n%i)) -ne 0 ]]; do\n    i=$((i-1))\n\
    \  done\n  echo $i", "    local n=$1\n    local i=2\n    local max=0\n    while\
    \ [ $i -lt $n ]; do\n        if [ $(($n % $i)) -eq 0 ]; then\n            max=$i\n\
    \        fi\n        i=$(($i + 1))\n    done\n    echo $max", "  local n=$1\n\
    \  local i=$n\n  while [ $i -gt 1 ]; do\n    if [ $(($n % $i)) -eq 0 ]; then\n\
    \      echo $i\n      return\n    fi\n    i=$(($i - 1))\n  done", "    local n=$1\n\
    \    local i=$((n-1))\n    while [[ $((n%i)) -ne 0 ]]; do\n        i=$((i-1))\n\
    \    done\n    echo $i", "    local n=$1\n    for ((i=n-1; i>0; i--)); do\n  \
    \      if [[ $((n%i)) -eq 0 ]]; then\n            echo $i\n            return\n\
    \        fi\n    done", "  local n=$1\n  local i=$(($n-1))\n  while [[ $i -gt\
    \ 0 ]]; do\n    if [[ $((n%i)) -eq 0 ]]; then\n      echo $i\n      return\n \
    \   fi\n    i=$(($i-1))\n  done", "  local n=$1\n  local divisor=2\n  while [\
    \ $divisor -lt $n ]; do\n    if [ $(($n % $divisor)) -eq 0 ]; then\n      echo\
    \ $divisor\n      return\n    fi\n    divisor=$(($divisor + 1))\n  done\n  echo\
    \ $n", "  local n=$1\n  local i=$((n-1))\n  while [[ $((n%i)) -ne 0 ]]; do\n \
    \   i=$((i-1))\n  done\n  echo $i", "    local n=$1\n    local i=2\n    while\
    \ [ $i -lt $n ]; do\n        if [ $((n % i)) -eq 0 ]; then\n            echo $i\n\
    \            return\n        fi\n        i=$((i + 1))\n    done\n    echo $n",
  "  local n=$1\n  local i=$((n-1))\n  while [[ $((n%i)) -ne 0 ]]; do\n    i=$((i-1))\n\
    \  done\n  echo $i", "    local n=$1\n    local i=$((n - 1))\n    while [[ $((n\
    \ % i)) -ne 0 ]]; do\n        i=$((i - 1))\n    done\n    echo $i", "  local n=$1\n\
    \  local i=2\n  while [ $i -lt $n ]; do\n    if [ $(($n % $i)) -eq 0 ]; then\n\
    \      echo $i\n      return\n    fi\n    i=$(($i + 1))\n  done\n  echo $n", " \
    \   local n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $((n\
    \ % i)) -eq 0 ]; then\n            echo $i\n            return\n        fi\n \
    \       i=$((i + 1))\n    done\n    echo $n", "    local n=$1\n    local i=$((n-1))\n\
    \    while [[ $((n%i)) -ne 0 ]]; do\n        i=$((i-1))\n    done\n    echo $i",
  "  local n=$1\n  local i=$((n-1))\n  while [[ $((n%i)) -ne 0 ]]; do\n    i=$((i-1))\n\
    \  done\n  echo $i", "    local n=$1\n    local i=2\n    while [[ $i -lt $n ]];\
    \ do\n        if [[ $((n % i)) -eq 0 ]]; then\n            echo $i\n         \
    \   return\n        fi\n        ((i++))\n    done"]
stop_tokens:
- "\n}"

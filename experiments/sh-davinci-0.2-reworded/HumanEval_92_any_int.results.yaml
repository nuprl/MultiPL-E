language: sh
name: HumanEval_92_any_int
results:
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3)) ]] || [[ $2\
    \ -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n      echo \"true\"\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3)) ]] || [[ $2\
    \ -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n      echo \"true\"\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [ $# -ne 3 ]; then\n        echo\
    \ \"Usage: any_int <number> <number> <number>\"\n        return 1\n    fi\n\n\
    \    if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]];\
    \ then\n        if [ $1 -eq $2 + $3 ] || [ $2 -eq $1 + $3 ] || [ $3 -eq $1 + $2\
    \ ]; then\n            echo \"true\"\n        else\n            echo \"false\"\
    \n        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n \
    \   any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpfl8u17k8.sh: line 25: [: too many arguments

    /tmp/tmpfl8u17k8.sh: line 25: [: too many arguments

    /tmp/tmpfl8u17k8.sh: line 25: [: too many arguments

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3)) ]] || [[ $2\
    \ -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n      echo \"true\"\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [[ $1 =~ ^-?[0-9]+$ ]] && [[ $2\
    \ =~ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2\
    \ + $3)) ]] || [[ $2 -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n\
    \            echo \"true\"\n        else\n            echo \"false\"\n       \
    \ fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3)) ]] || [[ $2\
    \ -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n      echo \"true\"\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^-?[0-9]+$ ]] && [[ $2 =~\
    \ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] ||\
    \ [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n  \
    \  else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqx_zdt3c.sh: line 20: syntax error in conditional expression

    /tmp/tmpqx_zdt3c.sh: line 20: syntax error near `+''

    /tmp/tmpqx_zdt3c.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ \"$1\" =~ ^[0-9]+$ ]] && [[ \"\
    $2\" =~ ^[0-9]+$ ]] && [[ \"$3\" =~ ^[0-9]+$ ]]; then\n    if [[ \"$1\" -eq \"\
    $2\" + \"$3\" ]] || [[ \"$2\" -eq \"$1\" + \"$3\" ]] || [[ \"$3\" -eq \"$1\" +\
    \ \"$2\" ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n    fi\n\
    \  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpo92nsdox.sh: line 20: syntax error in conditional expression

    /tmp/tmpo92nsdox.sh: line 20: syntax error near `+''

    /tmp/tmpo92nsdox.sh: line 20: `    if [[ "$1" -eq "$2" + "$3" ]] || [[ "$2" -eq
    "$1" + "$3" ]] || [[ "$3" -eq "$1" + "$2" ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3)) ]] || [[ $2\
    \ -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n      echo \"true\"\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~\
    \ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3))\
    \ ]] || [[ $2 -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n       \
    \     echo \"true\"\n        else\n            echo \"false\"\n        fi\n  \
    \  else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3)) ]] || [[ $2\
    \ -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n      echo \"true\"\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^-?[0-9]+$ ]] && [[ $2 =~\
    \ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3))\
    \ ]] || [[ $2 -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n      echo\
    \ \"true\"\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3)) ]] || [[ $2\
    \ -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n      echo \"true\"\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [ $# -ne 3 ]; then\n        echo\
    \ \"Usage: any_int <number> <number> <number>\"\n        return 1\n    fi\n\n\
    \    if [[ $1 =~ ^-?[0-9]+$ ]] && [[ $2 =~ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$\
    \ ]]; then\n        if [ $1 -eq $2 + $3 ] || [ $2 -eq $1 + $3 ] || [ $3 -eq $1\
    \ + $2 ]; then\n            echo \"true\"\n        else\n            echo \"false\"\
    \n        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n \
    \   any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp9ktq3jsv.sh: line 25: [: too many arguments

    /tmp/tmp9ktq3jsv.sh: line 25: [: too many arguments

    /tmp/tmp9ktq3jsv.sh: line 25: [: too many arguments

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [ $1 -eq $(($2 + $3)) ] || [ $2 -eq\
    \ $(($1 + $3)) ] || [ $3 -eq $(($1 + $2)) ]; then\n      echo \"true\"\n    else\n\
    \      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [[ $1 =~ ^-?[0-9]+$ ]] && [[ $2\
    \ =~ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n        if [[ $1 -eq $2 +\
    \ $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n            echo\
    \ \"true\"\n        else\n            echo \"false\"\n        fi\n    else\n \
    \       echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n  \
    \  [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgu_txdbu.sh: line 20: syntax error in conditional expression

    /tmp/tmpgu_txdbu.sh: line 20: syntax error near `+''

    /tmp/tmpgu_txdbu.sh: line 20: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^-?[0-9]+$ ]] && [[ $2 =~\
    \ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n    if [ $1 -eq $2 + $3 ] ||\
    \ [ $2 -eq $1 + $3 ] || [ $3 -eq $1 + $2 ]; then\n      echo \"true\"\n    else\n\
    \      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpu_ahx1jp.sh: line 20: [: too many arguments

    /tmp/tmpu_ahx1jp.sh: line 20: [: too many arguments

    /tmp/tmpu_ahx1jp.sh: line 20: [: too many arguments

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3)) ]] || [[ $2\
    \ -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n      echo \"true\"\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [[ $1 =~ ^-?[0-9]+$ ]] && [[ $2\
    \ =~ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n        if [[ $1 -eq $2 +\
    \ $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n            echo\
    \ \"true\"\n        else\n            echo \"false\"\n        fi\n    else\n \
    \       echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n  \
    \  [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgu_txdbu.sh: line 20: syntax error in conditional expression

    /tmp/tmpgu_txdbu.sh: line 20: syntax error near `+''

    /tmp/tmpgu_txdbu.sh: line 20: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [ $# -ne 3 ]; then\n    echo \"Usage:\
    \ any_int <float> <float> <float>\"\n    return 1\n  fi\n  local -i sum=$(($1\
    \ + $2 + $3))\n  local -i product=$(($1 * $2 * $3))\n  if [ $sum -eq $product\
    \ ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0ata7ki7.sh: line 23: 2.5 + 2 + 3: syntax error: invalid arithmetic
    operator (error token is ".5 + 2 + 3")

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [[ $1 =~ ^-?[0-9]+$ ]] && [[ $2\
    \ =~ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2\
    \ + $3)) ]] || [[ $2 -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n\
    \            echo \"true\"\n        else\n            echo \"false\"\n       \
    \ fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [ $1 -eq $(($2 + $3)) ] || [ $2 -eq\
    \ $(($1 + $3)) ] || [ $3 -eq $(($1 + $2)) ]; then\n      echo \"true\"\n    else\n\
    \      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^-?[0-9]+$ ]] && [[ $2 =~\
    \ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3))\
    \ ]] || [[ $2 -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n      echo\
    \ \"true\"\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~\
    \ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 ]] ||\
    \ [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\
    \n        else\n            echo \"false\"\n        fi\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmps4u8l935.sh: line 20: syntax error in conditional expression

    /tmp/tmps4u8l935.sh: line 20: syntax error near `+''

    /tmp/tmps4u8l935.sh: line 20: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [ $1 -eq $2 + $3 ] || [ $2 -eq $1 +\
    \ $3 ] || [ $3 -eq $1 + $2 ]; then\n      echo \"true\"\n    else\n      echo\
    \ \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n  \
    \  any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpqp6822qk.sh: line 20: [: too many arguments

    /tmp/tmpqp6822qk.sh: line 20: [: too many arguments

    /tmp/tmpqp6822qk.sh: line 20: [: too many arguments

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [ $# -ne 3 ]; then\n        echo\
    \ \"Usage: any_int <int> <int> <int>\"\n        return 1\n    fi\n    if [ $(echo\
    \ \"$1 + $2\" | bc) -eq $3 ]; then\n        echo \"true\"\n    elif [ $(echo \"\
    $1 + $3\" | bc) -eq $2 ]; then\n        echo \"true\"\n    elif [ $(echo \"$2\
    \ + $3\" | bc) -eq $1 ]; then\n        echo \"true\"\n    else\n        echo \"\
    false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: '/tmp/tmp3dwral8u.sh: line 23: [: 4.5: integer expression expected

    /tmp/tmp3dwral8u.sh: line 25: [: 5.5: integer expression expected

    /tmp/tmp3dwral8u.sh: line 27: [: 2.5: integer expression expected

    /tmp/tmp3dwral8u.sh: line 23: [: 6.5: integer expression expected

    /tmp/tmp3dwral8u.sh: line 25: [: 5.0: integer expression expected

    /tmp/tmp3dwral8u.sh: line 27: [: 8.5: integer expression expected

    /tmp/tmp3dwral8u.sh: line 23: [: 4.4: integer expression expected

    /tmp/tmp3dwral8u.sh: line 25: [: 4.4: integer expression expected

    /tmp/tmp3dwral8u.sh: line 27: [: 4.4: integer expression expected

    /tmp/tmp3dwral8u.sh: line 23: [: 7.0: integer expression expected

    /tmp/tmp3dwral8u.sh: line 25: [: 10.0: integer expression expected

    /tmp/tmp3dwral8u.sh: line 27: [: 3.0: integer expression expected

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [ $# -ne 3 ]; then\n        echo\
    \ \"Usage: any_int <int> <int> <int>\"\n        return 1\n    fi\n    if [[ $1\
    \ =~ ^-?[0-9]+$ ]] && [[ $2 =~ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n\
    \        if [ $1 -eq $2 + $3 ] || [ $2 -eq $1 + $3 ] || [ $3 -eq $1 + $2 ]; then\n\
    \            echo \"true\"\n        else\n            echo \"false\"\n       \
    \ fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpqtwab9n7.sh: line 24: [: too many arguments

    /tmp/tmpqtwab9n7.sh: line 24: [: too many arguments

    /tmp/tmpqtwab9n7.sh: line 24: [: too many arguments

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~\
    \ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 ]] ||\
    \ [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\
    \n        else\n            echo \"false\"\n        fi\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmps4u8l935.sh: line 20: syntax error in conditional expression

    /tmp/tmps4u8l935.sh: line 20: syntax error near `+''

    /tmp/tmps4u8l935.sh: line 20: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 == *.* ]] || [[ $2 == *.* ]]\
    \ || [[ $3 == *.* ]]; then\n    echo \"false\"\n  else\n    if [[ $1 -eq $2 +\
    \ $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\
    \n    else\n      echo \"false\"\n    fi\n  fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppnd1gazg.sh: line 22: syntax error in conditional expression

    /tmp/tmppnd1gazg.sh: line 22: syntax error near `+''

    /tmp/tmppnd1gazg.sh: line 22: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [ $1 -eq $2 + $3 ] || [ $2 -eq $1 +\
    \ $3 ] || [ $3 -eq $1 + $2 ]; then\n      echo \"true\"\n    else\n      echo\
    \ \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n  \
    \  any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpqp6822qk.sh: line 20: [: too many arguments

    /tmp/tmpqp6822qk.sh: line 20: [: too many arguments

    /tmp/tmpqp6822qk.sh: line 20: [: too many arguments

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 == $(($2 + $3)) ]] || [[ $2 ==\
    \ $(($1 + $3)) ]] || [[ $3 == $(($1 + $2)) ]]; then\n      echo \"true\"\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~\
    \ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 ]] ||\
    \ [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\
    \n        else\n            echo \"false\"\n        fi\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmps4u8l935.sh: line 20: syntax error in conditional expression

    /tmp/tmps4u8l935.sh: line 20: syntax error near `+''

    /tmp/tmps4u8l935.sh: line 20: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3)) ]] || [[ $2\
    \ -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n      echo \"true\"\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [[ $1 =~ ^-?[0-9]+$ ]] && [[ $2\
    \ =~ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2\
    \ + $3)) ]] || [[ $2 -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n\
    \            echo \"true\"\n        else\n            echo \"false\"\n       \
    \ fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^-?[0-9]+$ ]] && [[ $2 =~\
    \ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3))\
    \ ]] || [[ $2 -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n      echo\
    \ \"true\"\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [[ $1 =~ ^-?[0-9]+$ ]] && [[ $2\
    \ =~ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n        if [[ $1 -eq $2 +\
    \ $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n            echo\
    \ \"true\"\n        else\n            echo \"false\"\n        fi\n    else\n \
    \       echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n  \
    \  [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgu_txdbu.sh: line 20: syntax error in conditional expression

    /tmp/tmpgu_txdbu.sh: line 20: syntax error near `+''

    /tmp/tmpgu_txdbu.sh: line 20: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^-?[0-9]+$ ]] && [[ $2 =~\
    \ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3))\
    \ ]] || [[ $2 -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n      echo\
    \ \"true\"\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~\
    \ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3))\
    \ ]] || [[ $2 -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n       \
    \     echo \"true\"\n        else\n            echo \"false\"\n        fi\n  \
    \  else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    # Check if all arguments are integers\n\
    \    if [[ $1 =~ ^-?[0-9]+$ ]] && [[ $2 =~ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$\
    \ ]]; then\n        # Check if any of the arguments are equal to the sum of the\
    \ other two\n        if [ $1 -eq $(($2 + $3)) ] || [ $2 -eq $(($1 + $3)) ] ||\
    \ [ $3 -eq $(($1 + $2)) ]; then\n            echo \"true\"\n        else\n   \
    \         echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3)) ]] || [[ $2\
    \ -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n      echo \"true\"\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~\
    \ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 ]] ||\
    \ [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\
    \n        else\n            echo \"false\"\n        fi\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmps4u8l935.sh: line 20: syntax error in conditional expression

    /tmp/tmps4u8l935.sh: line 20: syntax error near `+''

    /tmp/tmps4u8l935.sh: line 20: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~\
    \ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 ]] ||\
    \ [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\
    \n        else\n            echo \"false\"\n        fi\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmps4u8l935.sh: line 20: syntax error in conditional expression

    /tmp/tmps4u8l935.sh: line 20: syntax error near `+''

    /tmp/tmps4u8l935.sh: line 20: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~\
    \ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 ]] ||\
    \ [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\
    \n        else\n            echo \"false\"\n        fi\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmps4u8l935.sh: line 20: syntax error in conditional expression

    /tmp/tmps4u8l935.sh: line 20: syntax error near `+''

    /tmp/tmps4u8l935.sh: line 20: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [[ $1 =~ ^-?[0-9]+$ ]] && [[ $2\
    \ =~ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2\
    \ + $3)) ]] || [[ $2 -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n\
    \            echo \"true\"\n        else\n            echo \"false\"\n       \
    \ fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~\
    \ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 ]] ||\
    \ [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\
    \n        else\n            echo \"false\"\n        fi\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmps4u8l935.sh: line 20: syntax error in conditional expression

    /tmp/tmps4u8l935.sh: line 20: syntax error near `+''

    /tmp/tmps4u8l935.sh: line 20: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~\
    \ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 ]] ||\
    \ [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\
    \n        else\n            echo \"false\"\n        fi\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmps4u8l935.sh: line 20: syntax error in conditional expression

    /tmp/tmps4u8l935.sh: line 20: syntax error near `+''

    /tmp/tmps4u8l935.sh: line 20: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~\
    \ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if [ $1 -eq $2 + $3 ] ||\
    \ [ $2 -eq $1 + $3 ] || [ $3 -eq $1 + $2 ]; then\n            echo \"true\"\n\
    \        else\n            echo \"false\"\n        fi\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpjj1iyv8n.sh: line 20: [: too many arguments

    /tmp/tmpjj1iyv8n.sh: line 20: [: too many arguments

    /tmp/tmpjj1iyv8n.sh: line 20: [: too many arguments

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [ $1 -eq $(($2 + $3)) ] || [ $2 -eq\
    \ $(($1 + $3)) ] || [ $3 -eq $(($1 + $2)) ]; then\n      echo \"true\"\n    else\n\
    \      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~\
    \ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3))\
    \ ]] || [[ $2 -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n       \
    \     echo \"true\"\n        else\n            echo \"false\"\n        fi\n  \
    \  else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [[ $1 =~ ^-?[0-9]+$ ]] && [[ $2\
    \ =~ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n        if [[ $1 -eq $2 +\
    \ $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n            echo\
    \ \"true\"\n        else\n            echo \"false\"\n        fi\n    else\n \
    \       echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n  \
    \  [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgu_txdbu.sh: line 20: syntax error in conditional expression

    /tmp/tmpgu_txdbu.sh: line 20: syntax error near `+''

    /tmp/tmpgu_txdbu.sh: line 20: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3)) ]] || [[ $2\
    \ -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n      echo \"true\"\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [ \"$1\" -eq \"$1\" ] 2>/dev/null\
    \ && [ \"$2\" -eq \"$2\" ] 2>/dev/null && [ \"$3\" -eq \"$3\" ] 2>/dev/null; then\n\
    \        if [ \"$1\" -eq \"$2\" + \"$3\" ] || [ \"$2\" -eq \"$1\" + \"$3\" ] ||\
    \ [ \"$3\" -eq \"$1\" + \"$2\" ]; then\n            echo \"true\"\n        else\n\
    \            echo \"false\"\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_k742pdz.sh: line 20: [: too many arguments

    /tmp/tmp_k742pdz.sh: line 20: [: too many arguments

    /tmp/tmp_k742pdz.sh: line 20: [: too many arguments

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [ $1 -eq $2 + $3 ] || [ $2 -eq $1 +\
    \ $3 ] || [ $3 -eq $1 + $2 ]; then\n      echo \"true\"\n    else\n      echo\
    \ \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n  \
    \  any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpqp6822qk.sh: line 20: [: too many arguments

    /tmp/tmpqp6822qk.sh: line 20: [: too many arguments

    /tmp/tmpqp6822qk.sh: line 20: [: too many arguments

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~\
    \ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3))\
    \ ]] || [[ $2 -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n       \
    \     echo \"true\"\n        else\n            echo \"false\"\n        fi\n  \
    \  else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n\tif [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n\t\tif [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n\t\t\techo \"true\"\n\t\telse\n\t\t\t\
    echo \"false\"\n\t\tfi\n\telse\n\t\techo \"false\"\n\tfi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: "/tmp/tmpkrbkhwlb.sh: line 20: syntax error in conditional expression\n\
    /tmp/tmpkrbkhwlb.sh: line 20: syntax error near `+'\n/tmp/tmpkrbkhwlb.sh: line\
    \ 20: `\t\tif [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2\
    \ ]]; then'\n"
  stdout: ''
  timestamp: 1660012325
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^-?[0-9]+$ ]] && [[ $2 =~\
    \ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3))\
    \ ]] || [[ $2 -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n      echo\
    \ \"true\"\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~\
    \ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3))\
    \ ]] || [[ $2 -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n       \
    \     echo \"true\"\n        else\n            echo \"false\"\n        fi\n  \
    \  else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~\
    \ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3))\
    \ ]] || [[ $2 -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n       \
    \     echo \"true\"\n        else\n            echo \"false\"\n        fi\n  \
    \  else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3)) ]] || [[ $2\
    \ -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n      echo \"true\"\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ \"$1\" =~ ^[0-9]+$ ]] && [[ \"\
    $2\" =~ ^[0-9]+$ ]] && [[ \"$3\" =~ ^[0-9]+$ ]]; then\n    if [[ \"$1\" -eq \"\
    $2\" + \"$3\" ]] || [[ \"$2\" -eq \"$1\" + \"$3\" ]] || [[ \"$3\" -eq \"$1\" +\
    \ \"$2\" ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n    fi\n\
    \  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpo92nsdox.sh: line 20: syntax error in conditional expression

    /tmp/tmpo92nsdox.sh: line 20: syntax error near `+''

    /tmp/tmpo92nsdox.sh: line 20: `    if [[ "$1" -eq "$2" + "$3" ]] || [[ "$2" -eq
    "$1" + "$3" ]] || [[ "$3" -eq "$1" + "$2" ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ \"$1\" =~ ^[0-9]+$ ]] && [[ \"\
    $2\" =~ ^[0-9]+$ ]] && [[ \"$3\" =~ ^[0-9]+$ ]]; then\n    if [[ \"$1\" -eq \"\
    $2\" + \"$3\" ]] || [[ \"$2\" -eq \"$1\" + \"$3\" ]] || [[ \"$3\" -eq \"$1\" +\
    \ \"$2\" ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n    fi\n\
    \  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpo92nsdox.sh: line 20: syntax error in conditional expression

    /tmp/tmpo92nsdox.sh: line 20: syntax error near `+''

    /tmp/tmpo92nsdox.sh: line 20: `    if [[ "$1" -eq "$2" + "$3" ]] || [[ "$2" -eq
    "$1" + "$3" ]] || [[ "$3" -eq "$1" + "$2" ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3)) ]] || [[ $2\
    \ -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n      echo \"true\"\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3)) ]] || [[ $2\
    \ -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n      echo \"true\"\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [ $# -ne 3 ]; then\n    echo \"Usage:\
    \ any_int <int> <int> <int>\"\n    return 1\n  fi\n  if [[ $1 =~ ^[0-9]+$ ]] &&\
    \ [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [ $1 -eq $2 + $3\
    \ ] || [ $2 -eq $1 + $3 ] || [ $3 -eq $1 + $2 ]; then\n      echo \"true\"\n \
    \   else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpij6kkt0v.sh: line 24: [: too many arguments

    /tmp/tmpij6kkt0v.sh: line 24: [: too many arguments

    /tmp/tmpij6kkt0v.sh: line 24: [: too many arguments

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~\
    \ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if [ $1 -eq $2 + $3 ] ||\
    \ [ $2 -eq $1 + $3 ] || [ $3 -eq $1 + $2 ]; then\n            echo \"true\"\n\
    \        else\n            echo \"false\"\n        fi\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpjj1iyv8n.sh: line 20: [: too many arguments

    /tmp/tmpjj1iyv8n.sh: line 20: [: too many arguments

    /tmp/tmpjj1iyv8n.sh: line 20: [: too many arguments

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~\
    \ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 ]] ||\
    \ [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\
    \n        else\n            echo \"false\"\n        fi\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmps4u8l935.sh: line 20: syntax error in conditional expression

    /tmp/tmps4u8l935.sh: line 20: syntax error near `+''

    /tmp/tmps4u8l935.sh: line 20: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [[ \"$1\" =~ ^-?[0-9]+$ ]] && [[\
    \ \"$2\" =~ ^-?[0-9]+$ ]] && [[ \"$3\" =~ ^-?[0-9]+$ ]]; then\n        if [[ \"\
    $1\" -eq \"$2\" + \"$3\" ]] || [[ \"$2\" -eq \"$1\" + \"$3\" ]] || [[ \"$3\" -eq\
    \ \"$1\" + \"$2\" ]]; then\n            echo \"true\"\n        else\n        \
    \    echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpi_1c8x9y.sh: line 20: syntax error in conditional expression

    /tmp/tmpi_1c8x9y.sh: line 20: syntax error near `+''

    /tmp/tmpi_1c8x9y.sh: line 20: `        if [[ "$1" -eq "$2" + "$3" ]] || [[ "$2"
    -eq "$1" + "$3" ]] || [[ "$3" -eq "$1" + "$2" ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [[ $1 =~ ^-?[0-9]+$ ]] && [[ $2\
    \ =~ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2\
    \ + $3)) ]] || [[ $2 -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n\
    \            echo \"true\"\n        else\n            echo \"false\"\n       \
    \ fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  # Check if all arguments are integers\n\
    \  if [[ $1 =~ ^-?[0-9]+$ ]] && [[ $2 =~ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$\
    \ ]]; then\n    # Check if any of the arguments is equal to the sum of the other\
    \ two\n    if [[ $1 -eq $(($2 + $3)) ]] || [[ $2 -eq $(($1 + $3)) ]] || [[ $3\
    \ -eq $(($1 + $2)) ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\
    \n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^-?[0-9]+$ ]] && [[ $2 =~\
    \ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] ||\
    \ [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n  \
    \  else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqx_zdt3c.sh: line 20: syntax error in conditional expression

    /tmp/tmpqx_zdt3c.sh: line 20: syntax error near `+''

    /tmp/tmpqx_zdt3c.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [ $# -ne 3 ]; then\n        echo\
    \ \"Usage: any_int <number> <number> <number>\"\n        return 1\n    fi\n\n\
    \    if [[ \"$1\" =~ ^[0-9]+$ ]] && [[ \"$2\" =~ ^[0-9]+$ ]] && [[ \"$3\" =~ ^[0-9]+$\
    \ ]]; then\n        if [ \"$1\" -eq \"$2\" ] || [ \"$1\" -eq \"$3\" ] || [ \"\
    $2\" -eq \"$3\" ]; then\n            echo \"false\"\n        elif [ \"$1\" -eq\
    \ \"$(($2 + $3))\" ] || [ \"$2\" -eq \"$(($1 + $3))\" ] || [ \"$3\" -eq \"$(($1\
    \ + $2))\" ]; then\n            echo \"true\"\n        else\n            echo\
    \ \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~\
    \ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if [ $1 -eq $(($2 + $3))\
    \ ] || [ $2 -eq $(($1 + $3)) ] || [ $3 -eq $(($1 + $2)) ]; then\n            echo\
    \ \"true\"\n        else\n            echo \"false\"\n        fi\n    else\n \
    \       echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n  \
    \  [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3)) ]] || [[ $2\
    \ -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n      echo \"true\"\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [[ $1 =~ ^-?[0-9]+$ ]] && [[ $2\
    \ =~ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n        if [[ $1 -eq $2 +\
    \ $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n            echo\
    \ \"true\"\n        else\n            echo \"false\"\n        fi\n    else\n \
    \       echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n  \
    \  [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgu_txdbu.sh: line 20: syntax error in conditional expression

    /tmp/tmpgu_txdbu.sh: line 20: syntax error near `+''

    /tmp/tmpgu_txdbu.sh: line 20: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3)) ]] || [[ $2\
    \ -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n      echo \"true\"\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~\
    \ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if [ $1 -eq $(($2 + $3))\
    \ ] || [ $2 -eq $(($1 + $3)) ] || [ $3 -eq $(($1 + $2)) ]; then\n            echo\
    \ \"true\"\n        else\n            echo \"false\"\n        fi\n    else\n \
    \       echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n  \
    \  [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [ $# -ne 3 ]; then\n    echo \"Usage:\
    \ any_int <float> <float> <float>\"\n    return 1\n  fi\n  if ! [[ \"$1\" =~ ^[0-9]+$\
    \ ]]; then\n    echo \"false\"\n    return 0\n  fi\n  if ! [[ \"$2\" =~ ^[0-9]+$\
    \ ]]; then\n    echo \"false\"\n    return 0\n  fi\n  if ! [[ \"$3\" =~ ^[0-9]+$\
    \ ]]; then\n    echo \"false\"\n    return 0\n  fi\n  if [ \"$1\" -eq \"$2\" ]\
    \ || [ \"$1\" -eq \"$3\" ] || [ \"$2\" -eq \"$3\" ]; then\n    echo \"false\"\n\
    \    return 0\n  fi\n  if [ \"$1\" -eq \"$(($2 + $3))\" ] || [ \"$2\" -eq \"$(($1\
    \ + $3))\" ] || [ \"$3\" -eq \"$(($1 + $2))\" ]; then\n    echo \"true\"\n   \
    \ return 0\n  fi\n  echo \"false\"\n  return 0\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~\
    \ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 ]] ||\
    \ [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\
    \n        else\n            echo \"false\"\n        fi\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmps4u8l935.sh: line 20: syntax error in conditional expression

    /tmp/tmps4u8l935.sh: line 20: syntax error near `+''

    /tmp/tmps4u8l935.sh: line 20: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3)) ]] || [[ $2\
    \ -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n      echo \"true\"\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^-?[0-9]+$ ]] && [[ $2 =~\
    \ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3))\
    \ ]] || [[ $2 -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n      echo\
    \ \"true\"\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^-?[0-9]+$ ]] && [[ $2 =~\
    \ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] ||\
    \ [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n  \
    \  else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqx_zdt3c.sh: line 20: syntax error in conditional expression

    /tmp/tmpqx_zdt3c.sh: line 20: syntax error near `+''

    /tmp/tmpqx_zdt3c.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [ $(echo \"$1\" | grep -E \"^[0-9]+$\"\
    ) ] && [ $(echo \"$2\" | grep -E \"^[0-9]+$\") ] && [ $(echo \"$3\" | grep -E\
    \ \"^[0-9]+$\") ]; then\n        if [ $1 -eq $(($2 + $3)) ] || [ $2 -eq $(($1\
    \ + $3)) ] || [ $3 -eq $(($1 + $2)) ]; then\n            echo \"true\"\n     \
    \   else\n            echo \"false\"\n        fi\n    else\n        echo \"false\"\
    \n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2+$3 ]] || [[ $2 -eq $1+$3\
    \ ]] || [[ $3 -eq $1+$2 ]]; then\n      echo \"true\"\n    else\n      echo \"\
    false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [ $# -ne 3 ]; then\n    echo \"Usage:\
    \ any_int <int> <int> <int>\"\n    return 1\n  fi\n  if [ $(echo \"$1 + $2\" |\
    \ bc) -eq $3 ]; then\n    echo \"true\"\n  elif [ $(echo \"$1 + $3\" | bc) -eq\
    \ $2 ]; then\n    echo \"true\"\n  elif [ $(echo \"$2 + $3\" | bc) -eq $1 ]; then\n\
    \    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n   \
    \ any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: '/tmp/tmp2570tp6x.sh: line 23: [: 4.5: integer expression expected

    /tmp/tmp2570tp6x.sh: line 25: [: 5.5: integer expression expected

    /tmp/tmp2570tp6x.sh: line 27: [: 2.5: integer expression expected

    /tmp/tmp2570tp6x.sh: line 23: [: 6.5: integer expression expected

    /tmp/tmp2570tp6x.sh: line 25: [: 5.0: integer expression expected

    /tmp/tmp2570tp6x.sh: line 27: [: 8.5: integer expression expected

    /tmp/tmp2570tp6x.sh: line 23: [: 4.4: integer expression expected

    /tmp/tmp2570tp6x.sh: line 25: [: 4.4: integer expression expected

    /tmp/tmp2570tp6x.sh: line 27: [: 4.4: integer expression expected

    /tmp/tmp2570tp6x.sh: line 23: [: 7.0: integer expression expected

    /tmp/tmp2570tp6x.sh: line 25: [: 10.0: integer expression expected

    /tmp/tmp2570tp6x.sh: line 27: [: 3.0: integer expression expected

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [ $# -ne 3 ]; then\n    echo \"Usage:\
    \ $0 <number> <number> <number>\"\n    return 1\n  fi\n\n  if [ $(echo \"$1 +\
    \ $2\" | bc) -eq $3 ] || [ $(echo \"$1 + $3\" | bc) -eq $2 ] || [ $(echo \"$2\
    \ + $3\" | bc) -eq $1 ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n\
    \  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: '/tmp/tmp9cmmsoba.sh: line 24: [: 4.5: integer expression expected

    /tmp/tmp9cmmsoba.sh: line 24: [: 5.5: integer expression expected

    /tmp/tmp9cmmsoba.sh: line 24: [: 2.5: integer expression expected

    /tmp/tmp9cmmsoba.sh: line 24: [: 6.5: integer expression expected

    /tmp/tmp9cmmsoba.sh: line 24: [: 5.0: integer expression expected

    /tmp/tmp9cmmsoba.sh: line 24: [: 8.5: integer expression expected

    /tmp/tmp9cmmsoba.sh: line 24: [: 4.4: integer expression expected

    /tmp/tmp9cmmsoba.sh: line 24: [: 4.4: integer expression expected

    /tmp/tmp9cmmsoba.sh: line 24: [: 4.4: integer expression expected

    /tmp/tmp9cmmsoba.sh: line 24: [: 7.0: integer expression expected

    /tmp/tmp9cmmsoba.sh: line 24: [: 10.0: integer expression expected

    /tmp/tmp9cmmsoba.sh: line 24: [: 3.0: integer expression expected

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3)) ]] || [[ $2\
    \ -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n      echo \"true\"\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^-?[0-9]+$ ]] && [[ $2 =~\
    \ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n    if [ $1 -eq $(($2 + $3))\
    \ ] || [ $2 -eq $(($1 + $3)) ] || [ $3 -eq $(($1 + $2)) ]; then\n      echo \"\
    true\"\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3)) ]] || [[ $2\
    \ -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n      echo \"true\"\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3)) ]] || [[ $2\
    \ -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n      echo \"true\"\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^-?[0-9]+$ ]] && [[ $2 =~\
    \ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] ||\
    \ [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n  \
    \  else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqx_zdt3c.sh: line 20: syntax error in conditional expression

    /tmp/tmpqx_zdt3c.sh: line 20: syntax error near `+''

    /tmp/tmpqx_zdt3c.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3)) ]] || [[ $2\
    \ -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n      echo \"true\"\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [ $1 -eq $(($2 + $3)) ] || [ $2 -eq\
    \ $(($1 + $3)) ] || [ $3 -eq $(($1 + $2)) ]; then\n      echo \"true\"\n    else\n\
    \      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [ $# -ne 3 ]; then\n    echo \"Usage:\
    \ $0 <number> <number> <number>\"\n    return 1\n  fi\n\n  if ! [[ $1 =~ ^[0-9]+$\
    \ ]]; then\n    echo \"false\"\n    return 0\n  fi\n\n  if ! [[ $2 =~ ^[0-9]+$\
    \ ]]; then\n    echo \"false\"\n    return 0\n  fi\n\n  if ! [[ $3 =~ ^[0-9]+$\
    \ ]]; then\n    echo \"false\"\n    return 0\n  fi\n\n  if [ $1 -eq $2 + $3 ]\
    \ || [ $2 -eq $1 + $3 ] || [ $3 -eq $1 + $2 ]; then\n    echo \"true\"\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"\
    2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") =\
    \ \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpbj5a7hp4.sh: line 39: [: too many arguments

    /tmp/tmpbj5a7hp4.sh: line 39: [: too many arguments

    /tmp/tmpbj5a7hp4.sh: line 39: [: too many arguments

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3)) ]] || [[ $2\
    \ -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n      echo \"true\"\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [ $# -ne 3 ]; then\n        echo\
    \ \"Usage: any_int <int> <int> <int>\"\n        return 1\n    fi\n    if [[ $1\
    \ =~ ^-?[0-9]+$ ]] && [[ $2 =~ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n\
    \        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2\
    \ ]]; then\n            echo \"true\"\n        else\n            echo \"false\"\
    \n        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n \
    \   any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpo9m8u9sq.sh: line 24: syntax error in conditional expression

    /tmp/tmpo9m8u9sq.sh: line 24: syntax error near `+''

    /tmp/tmpo9m8u9sq.sh: line 24: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [ $# -ne 3 ]; then\n        echo\
    \ \"Usage: any_int <number> <number> <number>\"\n        return 1\n    fi\n\n\
    \    if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]];\
    \ then\n        if [ $1 -eq $2 + $3 ] || [ $2 -eq $1 + $3 ] || [ $3 -eq $1 + $2\
    \ ]; then\n            echo \"true\"\n        else\n            echo \"false\"\
    \n        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n \
    \   any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpfl8u17k8.sh: line 25: [: too many arguments

    /tmp/tmpfl8u17k8.sh: line 25: [: too many arguments

    /tmp/tmpfl8u17k8.sh: line 25: [: too many arguments

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^-?[0-9]+$ ]] && [[ $2 =~\
    \ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3))\
    \ ]] || [[ $2 -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n      echo\
    \ \"true\"\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~\
    \ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 ]] ||\
    \ [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\
    \n        else\n            echo \"false\"\n        fi\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmps4u8l935.sh: line 20: syntax error in conditional expression

    /tmp/tmps4u8l935.sh: line 20: syntax error near `+''

    /tmp/tmps4u8l935.sh: line 20: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^-?[0-9]+$ ]] && [[ $2 =~\
    \ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3))\
    \ ]] || [[ $2 -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n      echo\
    \ \"true\"\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^-?[0-9]+$ ]] && [[ $2 =~\
    \ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n    if [ $1 -eq $(($2 + $3))\
    \ ] || [ $2 -eq $(($1 + $3)) ] || [ $3 -eq $(($1 + $2)) ]; then\n      echo \"\
    true\"\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [ $1 -eq $2 + $3 ] || [ $2 -eq $1 +\
    \ $3 ] || [ $3 -eq $1 + $2 ]; then\n      echo \"true\"\n    else\n      echo\
    \ \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n  \
    \  any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpqp6822qk.sh: line 20: [: too many arguments

    /tmp/tmpqp6822qk.sh: line 20: [: too many arguments

    /tmp/tmpqp6822qk.sh: line 20: [: too many arguments

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [ $# -ne 3 ]; then\n    echo \"Usage:\
    \ any_int <number1> <number2> <number3>\"\n    return 1\n  fi\n  if ! [[ $1 =~\
    \ ^[0-9]+$ ]]; then\n    echo \"false\"\n    return 0\n  fi\n  if ! [[ $2 =~ ^[0-9]+$\
    \ ]]; then\n    echo \"false\"\n    return 0\n  fi\n  if ! [[ $3 =~ ^[0-9]+$ ]];\
    \ then\n    echo \"false\"\n    return 0\n  fi\n  if [ $1 -eq $(($2 + $3)) ];\
    \ then\n    echo \"true\"\n    return 0\n  fi\n  if [ $2 -eq $(($1 + $3)) ]; then\n\
    \    echo \"true\"\n    return 0\n  fi\n  if [ $3 -eq $(($1 + $2)) ]; then\n \
    \   echo \"true\"\n    return 0\n  fi\n  echo \"false\"\n  return 0\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~\
    \ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3))\
    \ ]] || [[ $2 -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n       \
    \     echo \"true\"\n        else\n            echo \"false\"\n        fi\n  \
    \  else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^-?[0-9]+$ ]] && [[ $2 =~\
    \ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] ||\
    \ [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n  \
    \  else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqx_zdt3c.sh: line 20: syntax error in conditional expression

    /tmp/tmpqx_zdt3c.sh: line 20: syntax error near `+''

    /tmp/tmpqx_zdt3c.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~\
    \ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 ]] ||\
    \ [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\
    \n        else\n            echo \"false\"\n        fi\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmps4u8l935.sh: line 20: syntax error in conditional expression

    /tmp/tmps4u8l935.sh: line 20: syntax error near `+''

    /tmp/tmps4u8l935.sh: line 20: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^-?[0-9]+$ ]] && [[ $2 =~\
    \ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n    if [[ $1 -eq $2+$3 ]] ||\
    \ [[ $2 -eq $1+$3 ]] || [[ $3 -eq $1+$2 ]]; then\n      echo \"true\"\n    else\n\
    \      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [ $1 -eq $(($2 + $3)) ] || [ $2 -eq\
    \ $(($1 + $3)) ] || [ $3 -eq $(($1 + $2)) ]; then\n      echo \"true\"\n    else\n\
    \      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~\
    \ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 ]] ||\
    \ [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\
    \n        else\n            echo \"false\"\n        fi\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmps4u8l935.sh: line 20: syntax error in conditional expression

    /tmp/tmps4u8l935.sh: line 20: syntax error near `+''

    /tmp/tmps4u8l935.sh: line 20: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~\
    \ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if [ $1 -eq $(($2 + $3))\
    \ ] || [ $2 -eq $(($1 + $3)) ] || [ $3 -eq $(($1 + $2)) ]; then\n            echo\
    \ \"true\"\n        else\n            echo \"false\"\n        fi\n    else\n \
    \       echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n  \
    \  [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~\
    \ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3))\
    \ ]] || [[ $2 -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n       \
    \     echo \"true\"\n        else\n            echo \"false\"\n        fi\n  \
    \  else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^-?[0-9]+$ ]] && [[ $2 =~\
    \ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3))\
    \ ]] || [[ $2 -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n      echo\
    \ \"true\"\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~\
    \ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3))\
    \ ]] || [[ $2 -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n       \
    \     echo \"true\"\n        else\n            echo \"false\"\n        fi\n  \
    \  else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [ $1 -eq $2 + $3 ] || [ $2 -eq $1 +\
    \ $3 ] || [ $3 -eq $1 + $2 ]; then\n      echo \"true\"\n    else\n      echo\
    \ \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n  \
    \  any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpqp6822qk.sh: line 20: [: too many arguments

    /tmp/tmpqp6822qk.sh: line 20: [: too many arguments

    /tmp/tmpqp6822qk.sh: line 20: [: too many arguments

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^-?[0-9]+$ ]] && [[ $2 =~\
    \ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] ||\
    \ [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n  \
    \  else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqx_zdt3c.sh: line 20: syntax error in conditional expression

    /tmp/tmpqx_zdt3c.sh: line 20: syntax error near `+''

    /tmp/tmpqx_zdt3c.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3)) ]] || [[ $2\
    \ -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n      echo \"true\"\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [ $# -ne 3 ]; then\n    echo \"Usage:\
    \ any_int <int> <int> <int>\"\n    return 1\n  fi\n  if [[ $1 =~ ^[0-9]+$ ]] &&\
    \ [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [ $1 -eq $2 + $3\
    \ ] || [ $2 -eq $1 + $3 ] || [ $3 -eq $1 + $2 ]; then\n      echo \"true\"\n \
    \   else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpij6kkt0v.sh: line 24: [: too many arguments

    /tmp/tmpij6kkt0v.sh: line 24: [: too many arguments

    /tmp/tmpij6kkt0v.sh: line 24: [: too many arguments

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [[ $1 =~ ^-?[0-9]+$ ]] && [[ $2\
    \ =~ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n        if [[ $1 -eq $2 +\
    \ $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n            echo\
    \ \"true\"\n        else\n            echo \"false\"\n        fi\n    else\n \
    \       echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n  \
    \  [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgu_txdbu.sh: line 20: syntax error in conditional expression

    /tmp/tmpgu_txdbu.sh: line 20: syntax error near `+''

    /tmp/tmpgu_txdbu.sh: line 20: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [ $# -ne 3 ]; then\n        echo\
    \ \"Usage: any_int <number> <number> <number>\"\n        return 1\n    fi\n\n\
    \    if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]];\
    \ then\n        if [ $1 -eq $2 + $3 ] || [ $2 -eq $1 + $3 ] || [ $3 -eq $1 + $2\
    \ ]; then\n            echo \"true\"\n        else\n            echo \"false\"\
    \n        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n \
    \   any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpfl8u17k8.sh: line 25: [: too many arguments

    /tmp/tmpfl8u17k8.sh: line 25: [: too many arguments

    /tmp/tmpfl8u17k8.sh: line 25: [: too many arguments

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^-?[0-9]+$ ]] && [[ $2 =~\
    \ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3))\
    \ ]] || [[ $2 -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n      echo\
    \ \"true\"\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^-?[0-9]+$ ]] && [[ $2 =~\
    \ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3))\
    \ ]] || [[ $2 -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n      echo\
    \ \"true\"\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [ $1 -eq $(($2 + $3)) ] || [ $2 -eq\
    \ $(($1 + $3)) ] || [ $3 -eq $(($1 + $2)) ]; then\n      echo \"true\"\n    else\n\
    \      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [ $1 -eq $(($2 + $3)) ] || [ $2 -eq\
    \ $(($1 + $3)) ] || [ $3 -eq $(($1 + $2)) ]; then\n      echo \"true\"\n    else\n\
    \      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  # Check if all arguments are integers\n\
    \  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n\
    \    # Check if any of the arguments are equal to the sum of the other two\n \
    \   if [[ $1 -eq $(($2 + $3)) ]] || [[ $2 -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1\
    \ + $2)) ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n    fi\n\
    \  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  # Check if all numbers are integers\n\
    \  if [[ $1 =~ ^-?[0-9]+$ ]] && [[ $2 =~ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$\
    \ ]]; then\n    # Check if one of the numbers is equal to the sum of the other\
    \ two\n    if [[ $1 -eq $(($2 + $3)) ]] || [[ $2 -eq $(($1 + $3)) ]] || [[ $3\
    \ -eq $(($1 + $2)) ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\
    \n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~\
    \ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 ]] ||\
    \ [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\
    \n        else\n            echo \"false\"\n        fi\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmps4u8l935.sh: line 20: syntax error in conditional expression

    /tmp/tmps4u8l935.sh: line 20: syntax error near `+''

    /tmp/tmps4u8l935.sh: line 20: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [ $1 -eq $2 ] || [ $1 -eq $3 ] ||\
    \ [ $2 -eq $3 ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3)) ]] || [[ $2\
    \ -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n      echo \"true\"\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^-?[0-9]+$ ]] && [[ $2 =~\
    \ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3))\
    \ ]] || [[ $2 -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n      echo\
    \ \"true\"\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3)) ]] || [[ $2\
    \ -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n      echo \"true\"\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2+$3 ]] || [[ $2 -eq $1+$3\
    \ ]] || [[ $3 -eq $1+$2 ]]; then\n      echo \"true\"\n    else\n      echo \"\
    false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [ $1 -eq $2 ] || [ $1 -eq $3 ] ||\
    \ [ $2 -eq $3 ]; then\n    echo \"false\"\n  elif [ $1 -eq $(($2 + $3)) ] || [\
    \ $2 -eq $(($1 + $3)) ] || [ $3 -eq $(($1 + $2)) ]; then\n    echo \"true\"\n\
    \  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpp9ow3bng.sh: line 19: [: 2.5: integer expression expected

    /tmp/tmpp9ow3bng.sh: line 19: [: 2.5: integer expression expected

    /tmp/tmpp9ow3bng.sh: line 21: [: 2.5: integer expression expected

    /tmp/tmpp9ow3bng.sh: line 21: 2.5 + 3: syntax error: invalid arithmetic operator
    (error token is ".5 + 3")

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3)) ]] || [[ $2\
    \ -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n      echo \"true\"\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [ $# -ne 3 ]; then\n    echo \"Usage:\
    \ any_int <number> <number> <number>\"\n    return 1\n  fi\n  if [[ $1 =~ ^[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [ $1 -eq $2\
    \ + $3 ] || [ $2 -eq $1 + $3 ] || [ $3 -eq $1 + $2 ]; then\n      echo \"true\"\
    \n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpbvsel3_a.sh: line 24: [: too many arguments

    /tmp/tmpbvsel3_a.sh: line 24: [: too many arguments

    /tmp/tmpbvsel3_a.sh: line 24: [: too many arguments

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^-?[0-9]+$ ]] && [[ $2 =~\
    \ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] ||\
    \ [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n  \
    \  else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqx_zdt3c.sh: line 20: syntax error in conditional expression

    /tmp/tmpqx_zdt3c.sh: line 20: syntax error near `+''

    /tmp/tmpqx_zdt3c.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [ $# -ne 3 ]; then\n    echo \"Usage:\
    \ $0 <number> <number> <number>\"\n    return 1\n  fi\n\n  if ! [[ $1 =~ ^[0-9]+$\
    \ ]]; then\n    echo \"false\"\n    return 0\n  fi\n\n  if ! [[ $2 =~ ^[0-9]+$\
    \ ]]; then\n    echo \"false\"\n    return 0\n  fi\n\n  if ! [[ $3 =~ ^[0-9]+$\
    \ ]]; then\n    echo \"false\"\n    return 0\n  fi\n\n  if [ $1 -eq $(($2 + $3))\
    \ ]; then\n    echo \"true\"\n    return 0\n  fi\n\n  if [ $2 -eq $(($1 + $3))\
    \ ]; then\n    echo \"true\"\n    return 0\n  fi\n\n  if [ $3 -eq $(($1 + $2))\
    \ ]; then\n    echo \"true\"\n    return 0\n  fi\n\n  echo \"false\"\n  return\
    \ 0\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [[ $1 =~ ^-?[0-9]+$ ]] && [[ $2\
    \ =~ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n        if [ $1 -eq $2 + $3\
    \ ] || [ $2 -eq $1 + $3 ] || [ $3 -eq $1 + $2 ]; then\n            echo \"true\"\
    \n        else\n            echo \"false\"\n        fi\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpcbh10kpk.sh: line 20: [: too many arguments

    /tmp/tmpcbh10kpk.sh: line 20: [: too many arguments

    /tmp/tmpcbh10kpk.sh: line 20: [: too many arguments

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    if [[ $a =~ ^[0-9]+$ ]] && [[ $b =~ ^[0-9]+$ ]] && [[ $c =~ ^[0-9]+$\
    \ ]]; then\n        if [ $a -eq $((b+c)) ] || [ $b -eq $((a+c)) ] || [ $c -eq\
    \ $((a+b)) ]; then\n            echo \"true\"\n        else\n            echo\
    \ \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1\
    \ + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsaek5hac.sh: line 20: syntax error in conditional expression

    /tmp/tmpsaek5hac.sh: line 20: syntax error near `+''

    /tmp/tmpsaek5hac.sh: line 20: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1660012325
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~\
    \ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3))\
    \ ]] || [[ $2 -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n       \
    \     echo \"true\"\n        else\n            echo \"false\"\n        fi\n  \
    \  else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012325

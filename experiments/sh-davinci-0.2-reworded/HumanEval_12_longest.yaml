name: HumanEval_12_longest
language: sh
prompt: "#!/bin/bash\n# Out of list of strings, return the longest one. Return the\
  \ first one in case of multiple\n# strings of the same length. Return None in case\
  \ the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest \"\
  a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a space-separated\
  \ list\nlongest() {\n"
tests: "}\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
  \ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n  \
  \  [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
completions: ["    local max_len=0\n    local max_str=\"\"\n    for str in $1; do\n\
    \        local len=${#str}\n        if [ $len -gt $max_len ]; then\n         \
    \   max_len=$len\n            max_str=$str\n        fi\n    done\n    if [ $max_len\
    \ -eq 0 ]; then\n        echo \"None\"\n    else\n        echo \"$max_str\"\n\
    \    fi", "  local longest=\"\"\n  for word in $1; do\n    if [[ ${#word} -gt\
    \ ${#longest} ]]; then\n      longest=$word\n    fi\n  done\n  if [[ -z $longest\
    \ ]]; then\n    echo \"None\"\n  else\n    echo \"$longest\"\n  fi", "  if [ -z\
    \ \"$1\" ]; then\n    echo \"None\"\n  else\n    echo \"$1\" | tr ' ' '\\n' |\
    \ sort -r -k1,1 | head -n1\n  fi", "    local longest_word\n    longest_word=$(echo\
    \ \"$1\" | tr ' ' '\\n' | sort -r -k1,1 | head -n1)\n    if [ -z \"$longest_word\"\
    \ ]; then\n        echo \"None\"\n    else\n        echo \"$longest_word\"\n \
    \   fi", "    local longest_string=\"\"\n    local longest_string_length=0\n \
    \   for string in $1; do\n        if [[ ${#string} -gt $longest_string_length\
    \ ]]; then\n            longest_string=$string\n            longest_string_length=${#string}\n\
    \        fi\n    done\n    if [[ -z $longest_string ]]; then\n        echo \"\
    None\"\n    else\n        echo \"$longest_string\"\n    fi", "  local max_len=0\n\
    \  local max_str=\"\"\n  for str in $1; do\n    if [[ ${#str} -gt $max_len ]];\
    \ then\n      max_len=${#str}\n      max_str=$str\n    fi\n  done\n  if [[ $max_len\
    \ -eq 0 ]]; then\n    echo \"None\"\n  else\n    echo \"$max_str\"\n  fi", " \
    \   if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        echo \"$1\"\
    \ | tr ' ' '\\n' | sort -r -k1,1 | head -n1\n    fi", "  if [ -z \"$1\" ]; then\n\
    \    echo \"None\"\n  else\n    echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 -s\
    \ | head -n1\n  fi", "    local longest\n    for word in $1; do\n        if [\
    \ -z \"$longest\" ] || [ ${#word} -gt ${#longest} ]; then\n            longest=\"\
    $word\"\n        fi\n    done\n    if [ -z \"$longest\" ]; then\n        echo\
    \ \"None\"\n    else\n        echo \"$longest\"\n    fi", "    if [ -z \"$1\"\
    \ ]; then\n        echo \"None\"\n    else\n        echo \"$1\" | tr ' ' '\\n'\
    \ | sort -nr | head -n 1\n    fi", "    local longest=\"\"\n    for word in $1;\
    \ do\n        if [ ${#word} -gt ${#longest} ]; then\n            longest=\"$word\"\
    \n        fi\n    done\n    if [ -z \"$longest\" ]; then\n        echo \"None\"\
    \n    else\n        echo \"$longest\"\n    fi", "    local longest=\"\"\n    local\
    \ longest_len=0\n    for word in $1; do\n        local len=${#word}\n        if\
    \ [ $len -gt $longest_len ]; then\n            longest=$word\n            longest_len=$len\n\
    \        fi\n    done\n    if [ $longest_len -eq 0 ]; then\n        echo \"None\"\
    \n    else\n        echo \"$longest\"\n    fi", "    local longest_str=\"\"\n\
    \    local longest_len=0\n    for str in $1; do\n        local len=$(echo -n \"\
    $str\" | wc -c)\n        if [ $len -gt $longest_len ]; then\n            longest_str=\"\
    $str\"\n            longest_len=$len\n        fi\n    done\n    if [ $longest_len\
    \ -eq 0 ]; then\n        echo \"None\"\n    else\n        echo \"$longest_str\"\
    \n    fi", "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n    \
    \    echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 | head -n1\n    fi", "    if [\
    \ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        echo \"$1\" | tr\
    \ ' ' '\\n' | sort -r -k1,1 -t' ' | head -n1\n    fi", "    if [ -z \"$1\" ];\
    \ then\n        echo \"None\"\n    else\n        echo \"$1\" | tr ' ' '\\n' |\
    \ sort -r -k1,1 -t' ' | head -n1\n    fi", "    if [ -z \"$1\" ]; then\n     \
    \   echo \"None\"\n    else\n        echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1\
    \ -t' ' | head -n1\n    fi", "    local max_len=0\n    local max_str=\"\"\n  \
    \  for str in $1; do\n        local len=${#str}\n        if [[ $len -gt $max_len\
    \ ]]; then\n            max_len=$len\n            max_str=$str\n        fi\n \
    \   done\n    if [[ $max_len -eq 0 ]]; then\n        echo \"None\"\n    else\n\
    \        echo \"$max_str\"\n    fi", "    local max_len=0\n    local max_str=\"\
    \"\n    for str in $1; do\n        local len=${#str}\n        if [ $len -gt $max_len\
    \ ]; then\n            max_len=$len\n            max_str=$str\n        fi\n  \
    \  done\n    if [ $max_len -eq 0 ]; then\n        echo \"None\"\n    else\n  \
    \      echo \"$max_str\"\n    fi", "    local longest_str longest_len\n    longest_str=\n\
    \    longest_len=0\n    for str in $1; do\n        len=${#str}\n        if [ $len\
    \ -gt $longest_len ]; then\n            longest_str=$str\n            longest_len=$len\n\
    \        fi\n    done\n    if [ -z \"$longest_str\" ]; then\n        echo \"None\"\
    \n    else\n        echo \"$longest_str\"\n    fi"]
stop_tokens:
- "\n}"

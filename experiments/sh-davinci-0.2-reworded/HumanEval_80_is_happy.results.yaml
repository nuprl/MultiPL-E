language: sh
name: HumanEval_80_is_happy
results:
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=$1\n\
    \  local len=${#str}\n  local i=0\n  local res=\"true\"\n  if [ $len -lt 3 ];\
    \ then\n    res=\"false\"\n  else\n    while [ $i -lt $len ]; do\n      if [ $i\
    \ -ge $((len-2)) ]; then\n        break\n      fi\n      if [ \"${str:$i:1}\"\
    \ == \"${str:$((i+1)):1}\" ] || [ \"${str:$i:1}\" == \"${str:$((i+2)):1}\" ] ||\
    \ [ \"${str:$((i+1)):1}\" == \"${str:$((i+2)):1}\" ]; then\n        res=\"false\"\
    \n        break\n      fi\n      i=$((i+1))\n    done\n  fi\n  echo $res\n}\n\n\
    candidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local s=$1\n\
    \    local l=${#s}\n    if [[ $l -lt 3 ]]; then\n        echo \"false\"\n    \
    \    return\n    fi\n    for ((i=0; i<l-2; i++)); do\n        if [[ ${s:i:1} ==\
    \ ${s:i+1:1} || ${s:i:1} == ${s:i+2:1} || ${s:i+1:1} == ${s:i+2:1} ]]; then\n\
    \            echo \"false\"\n            return\n        fi\n    done\n    echo\
    \ \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  if [ ${#1}\
    \ -lt 3 ]; then\n    echo \"false\"\n  else\n    for i in $(seq 0 2 $((${#1} -\
    \ 1))); do\n      if [ \"${1:$i:1}\" == \"${1:$(($i + 1)):1}\" ] || [ \"${1:$i:1}\"\
    \ == \"${1:$(($i + 2)):1}\" ] || [ \"${1:$(($i + 1)):1}\" == \"${1:$(($i + 2)):1}\"\
    \ ]; then\n        echo \"false\"\n        return\n      fi\n    done\n    echo\
    \ \"true\"\n  fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=$1\n\
    \    local len=${#str}\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ flag=0\n    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n\
    \    fi\n    for ((i=0; i<len-2; i++)); do\n        for ((j=i+1; j<len-1; j++));\
    \ do\n            for ((k=j+1; k<len; k++)); do\n                if [ ${str:i:1}\
    \ == ${str:j:1} ] || [ ${str:i:1} == ${str:k:1} ] || [ ${str:j:1} == ${str:k:1}\
    \ ]; then\n                    flag=1\n                    break\n           \
    \     fi\n            done\n            if [ $flag -eq 1 ]; then\n           \
    \     break\n            fi\n        done\n        if [ $flag -eq 1 ]; then\n\
    \            break\n        fi\n    done\n    if [ $flag -eq 1 ]; then\n     \
    \   echo \"false\"\n    else\n        echo \"true\"\n    fi\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=$1\n\
    \    local len=${#str}\n    if [ $len -lt 3 ]; then\n        echo \"false\"\n\
    \        return\n    fi\n    for ((i=0; i<$len-2; i++)); do\n        if [ ${str:$i:1}\
    \ == ${str:$i+1:1} ] || [ ${str:$i:1} == ${str:$i+2:1} ] || [ ${str:$i+1:1} ==\
    \ ${str:$i+2:1} ]; then\n            echo \"false\"\n            return\n    \
    \    fi\n    done\n    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=$1\n\
    \  local len=${#str}\n  local i=0\n  local j=0\n  local k=0\n  local char=''\n\
    \  local char2=''\n  local char3=''\n  local flag=0\n  if [[ $len -lt 3 ]]; then\n\
    \    echo \"false\"\n    return\n  fi\n  for ((i=0; i<len; i++)); do\n    char=${str:i:1}\n\
    \    for ((j=i+1; j<len; j++)); do\n      char2=${str:j:1}\n      if [[ $char\
    \ == $char2 ]]; then\n        echo \"false\"\n        return\n      fi\n    done\n\
    \  done\n  for ((i=0; i<len-2; i++)); do\n    char=${str:i:1}\n    char2=${str:i+1:1}\n\
    \    char3=${str:i+2:1}\n    if [[ $char == $char2 || $char == $char3 || $char2\
    \ == $char3 ]]; then\n      echo \"false\"\n      return\n    fi\n  done\n  echo\
    \ \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  if [[ ${#1}\
    \ -lt 3 ]]; then\n    echo \"false\"\n  else\n    for (( i=0; i<${#1}-2; i++ ));\
    \ do\n      if [[ ${1:$i:1} == ${1:$i+1:1} ]] || [[ ${1:$i:1} == ${1:$i+2:1} ]]\
    \ || [[ ${1:$i+1:1} == ${1:$i+2:1} ]]; then\n        echo \"false\"\n        return\n\
    \      fi\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=\"\
    $1\"\n    local len=${#str}\n    local i=0\n    local j=0\n    local k=0\n   \
    \ local char=''\n    local char1=''\n    local char2=''\n    local char3=''\n\
    \    local char4=''\n    local char5=''\n    local char6=''\n    local char7=''\n\
    \    local char8=''\n    local char9=''\n    local char10=''\n    local char11=''\n\
    \    local char12=''\n    local char13=''\n    local char14=''\n    local char15=''\n\
    \    local char16=''\n    local char17=''\n    local char18=''\n    local char19=''\n\
    \    local char20=''\n    local char21=''\n    local char22=''\n    local char23=''\n\
    \    local char24=''\n    local char25=''\n    local char26=''\n    local char27=''\n\
    \    local char28=''\n    local char29=''\n    local char30=''\n    local char31=''\n\
    \    local char32=''\n    local char33=''\n    local char34=''\n    local char35=''\n\
    \    local char36=''\n    local char37=''\n    local char38=''\n    local char39=''\n\
    \    local char40=''\n    local char41=''\n    local char42=''\n    local char43=''\n\
    \    local char44=''\n    local char45=''\n    local char46=''\n    local char47=''\n\
    \    local char48=''\n    local char49=''\n    local char50=''\n    local char51=''\n\
    \    local char52=''\n    local char53=''\n    local char54=''\n    local char55=''\n\
    \    local char56=''\n    local char57=''\n    local char58=''\n    local char59=''\n\
    \    local char60=''\n    local char61=''\n    local char62=''\n    local char63=''\n\
    \    local char64=''\n    local char65=''\n    local char66=''\n    local char67=''\n\
    \   \n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=$1\n\
    \  local len=${#str}\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local\
    \ m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local\
    \ s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local\
    \ y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local\
    \ e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local\
    \ k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local\
    \ q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local\
    \ w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local\
    \ cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n\
    \  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local\
    \ nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n\
    \  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local\
    \ yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n\
    \  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii\n}\n\n\
    candidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  if [ ${#1}\
    \ -lt 3 ]; then\n    echo \"false\"\n  else\n    for (( i=0; i<${#1}-2; i++ ));\
    \ do\n      if [ \"${1:$i:1}\" == \"${1:$i+1:1}\" ] || [ \"${1:$i:1}\" == \"${1:$i+2:1}\"\
    \ ] || [ \"${1:$i+1:1}\" == \"${1:$i+2:1}\" ]; then\n        echo \"false\"\n\
    \        return\n      fi\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=$1\n\
    \  local len=${#str}\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local\
    \ m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local\
    \ s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local\
    \ y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n \
    \ local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local\
    \ jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n\
    \  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local\
    \ uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n\
    \  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n \
    \ local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local\
    \ kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n\
    \  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n \
    \ local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n  local\
    \ aaaa=0\n  local bbbb=0\n  local cccc=0\n  local dddd=0\n  local eee\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  if [ ${#1}\
    \ -lt 3 ]; then\n    echo \"false\"\n  else\n    for (( i=0; i<${#1}-2; i++ ));\
    \ do\n      if [ \"${1:$i:1}\" == \"${1:$i+1:1}\" ] || [ \"${1:$i:1}\" == \"${1:$i+2:1}\"\
    \ ] || [ \"${1:$i+1:1}\" == \"${1:$i+2:1}\" ]; then\n        echo \"false\"\n\
    \        return\n      fi\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local s=$1\n\
    \  local len=${#s}\n  if [[ $len -lt 3 ]]; then\n    echo \"false\"\n    return\n\
    \  fi\n  for (( i=0; i<$len-2; i++ )); do\n    local c1=${s:$i:1}\n    local c2=${s:$i+1:1}\n\
    \    local c3=${s:$i+2:1}\n    if [[ $c1 == $c2 || $c1 == $c3 || $c2 == $c3 ]];\
    \ then\n      echo \"false\"\n      return\n    fi\n  done\n  echo \"true\"\n\
    }\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    if [[ ${#1}\
    \ -lt 3 ]]; then\n        echo \"false\"\n    else\n        for (( i=0; i<${#1}-2;\
    \ i++ )); do\n            if [[ ${1:$i:1} == ${1:$i+1:1} || ${1:$i:1} == ${1:$i+2:1}\
    \ || ${1:$i+1:1} == ${1:$i+2:1} ]]; then\n                echo \"false\"\n   \
    \             return\n            fi\n        done\n        echo \"true\"\n  \
    \  fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    if [ ${#1}\
    \ -lt 3 ]; then\n        echo \"false\"\n    else\n        for ((i=0; i<${#1}-2;\
    \ i++)); do\n            if [ \"${1:$i:1}\" == \"${1:$i+1:1}\" ] || [ \"${1:$i:1}\"\
    \ == \"${1:$i+2:1}\" ] || [ \"${1:$i+1:1}\" == \"${1:$i+2:1}\" ]; then\n     \
    \           echo \"false\"\n                return\n            fi\n        done\n\
    \        echo \"true\"\n    fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local string=\"\
    $1\"\n  local length=${#string}\n  local i=0\n  local j=0\n  local k=0\n  local\
    \ char=\"\"\n  local char2=\"\"\n  local char3=\"\"\n  local result=\"true\"\n\
    \n  if [[ $length -lt 3 ]]; then\n    result=\"false\"\n  else\n    while [[ $i\
    \ -lt $length ]]; do\n      j=$((i+1))\n      k=$((i+2))\n      char=${string:$i:1}\n\
    \      char2=${string:$j:1}\n      char3=${string:$k:1}\n      if [[ $char ==\
    \ $char2 || $char == $char3 || $char2 == $char3 ]]; then\n        result=\"false\"\
    \n        break\n      fi\n      i=$((i+1))\n    done\n  fi\n  echo \"$result\"\
    \n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=$1\n\
    \  local len=${#str}\n  local i=0\n  local j=0\n  local k=0\n  local char=\"\"\
    \n  local char2=\"\"\n  local char3=\"\"\n  local is_happy=\"true\"\n\n  if [\
    \ $len -lt 3 ]; then\n    is_happy=\"false\"\n  else\n    while [ $i -lt $len\
    \ ]; do\n      j=$((i+1))\n      k=$((i+2))\n      char=${str:$i:1}\n      char2=${str:$j:1}\n\
    \      char3=${str:$k:1}\n      if [ \"$char\" == \"$char2\" ] || [ \"$char\"\
    \ == \"$char3\" ] || [ \"$char2\" == \"$char3\" ]; then\n        is_happy=\"false\"\
    \n        break\n      fi\n      i=$((i+1))\n    done\n  fi\n  echo $is_happy\n\
    }\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    if [[ ${#1}\
    \ -lt 3 ]]; then\n        echo \"false\"\n    else\n        for (( i=0; i<${#1}-2;\
    \ i++ )); do\n            if [[ ${1:$i:1} == ${1:$i+1:1} || ${1:$i:1} == ${1:$i+2:1}\
    \ || ${1:$i+1:1} == ${1:$i+2:1} ]]; then\n                echo \"false\"\n   \
    \             return\n            fi\n        done\n        echo \"true\"\n  \
    \  fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=$1\n\
    \    local len=${#str}\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ is_happy=true\n    if [ $len -lt 3 ]; then\n        is_happy=false\n    else\n\
    \        for ((i=0; i<len-2; i++)); do\n            for ((j=i+1; j<len-1; j++));\
    \ do\n                for ((k=j+1; k<len; k++)); do\n                    if [\
    \ ${str:i:1} == ${str:j:1} ] || [ ${str:i:1} == ${str:k:1} ] || [ ${str:j:1} ==\
    \ ${str:k:1} ]; then\n                        is_happy=false\n               \
    \     fi\n                done\n            done\n        done\n    fi\n    echo\
    \ $is_happy\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=\"\
    $1\"\n  local len=${#str}\n  local i=0\n  local j=0\n  local k=0\n  local c1=\"\
    \"\n  local c2=\"\"\n  local c3=\"\"\n  local result=\"true\"\n\n  if [ $len -lt\
    \ 3 ]; then\n    result=\"false\"\n  else\n    for ((i=0; i<len-2; i++)); do\n\
    \      c1=${str:i:1}\n      c2=${str:i+1:1}\n      c3=${str:i+2:1}\n      if [\
    \ \"$c1\" == \"$c2\" ] || [ \"$c1\" == \"$c3\" ] || [ \"$c2\" == \"$c3\" ]; then\n\
    \        result=\"false\"\n        break\n      fi\n    done\n  fi\n\n  echo \"\
    $result\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    if [ ${#1}\
    \ -lt 3 ]; then\n        echo \"false\"\n    else\n        for ((i=0; i<${#1}-2;\
    \ i++)); do\n            if [ \"${1:$i:1}\" == \"${1:$i+1:1}\" ] || [ \"${1:$i:1}\"\
    \ == \"${1:$i+2:1}\" ] || [ \"${1:$i+1:1}\" == \"${1:$i+2:1}\" ]; then\n     \
    \           echo \"false\"\n                return\n            fi\n        done\n\
    \        echo \"true\"\n    fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local string=\"\
    $1\"\n    local length=${#string}\n    local i=0\n    local j=0\n    local k=0\n\
    \    local result=\"true\"\n    if [ $length -lt 3 ]; then\n        result=\"\
    false\"\n    else\n        while [ $i -lt $length ]; do\n            j=$((i+1))\n\
    \            k=$((i+2))\n            if [ $j -lt $length ] && [ $k -lt $length\
    \ ]; then\n                if [ \"${string:$i:1}\" == \"${string:$j:1}\" ] ||\
    \ [ \"${string:$i:1}\" == \"${string:$k:1}\" ] || [ \"${string:$j:1}\" == \"${string:$k:1}\"\
    \ ]; then\n                    result=\"false\"\n                    break\n \
    \               fi\n            fi\n            i=$((i+1))\n        done\n   \
    \ fi\n    echo \"$result\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=$1\n\
    \  local len=${#str}\n  local i=0\n  local j=0\n  local k=0\n  local c1=''\n \
    \ local c2=''\n  local c3=''\n  local result='true'\n\n  if [ $len -lt 3 ]; then\n\
    \    result='false'\n  else\n    for ((i=0; i<len-2; i++)); do\n      c1=${str:i:1}\n\
    \      c2=${str:i+1:1}\n      c3=${str:i+2:1}\n      if [ \"$c1\" == \"$c2\" ]\
    \ || [ \"$c1\" == \"$c3\" ] || [ \"$c2\" == \"$c3\" ]; then\n        result='false'\n\
    \        break\n      fi\n    done\n  fi\n\n  echo $result\n}\n\ncandidate() {\n\
    \    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=$1\n\
    \    local len=${#str}\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ temp=0\n    local flag=0\n    if [ $len -lt 3 ]; then\n        echo \"false\"\
    \n        return\n    fi\n    for ((i=0; i<len-2; i++)); do\n        for ((j=i+1;\
    \ j<len-1; j++)); do\n            for ((k=j+1; k<len; k++)); do\n            \
    \    if [ ${str:i:1} == ${str:j:1} ] || [ ${str:i:1} == ${str:k:1} ] || [ ${str:j:1}\
    \ == ${str:k:1} ]; then\n                    flag=1\n                    break\n\
    \                fi\n            done\n            if [ $flag -eq 1 ]; then\n\
    \                break\n            fi\n        done\n        if [ $flag -eq 1\
    \ ]; then\n            break\n        fi\n    done\n    if [ $flag -eq 1 ]; then\n\
    \        echo \"false\"\n    else\n        echo \"true\"\n    fi\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=$1\n\
    \  local len=${#str}\n  local i=0\n  local j=0\n  local k=0\n  local result=\"\
    true\"\n  if [[ $len -lt 3 ]]; then\n    result=\"false\"\n  else\n    for ((\
    \ i=0; i<=$len-3; i++ )); do\n      for (( j=$i+1; j<=$len-2; j++ )); do\n   \
    \     for (( k=$j+1; k<=$len-1; k++ )); do\n          if [[ ${str:$i:1} == ${str:$j:1}\
    \ || ${str:$i:1} == ${str:$k:1} || ${str:$j:1} == ${str:$k:1} ]]; then\n     \
    \       result=\"false\"\n          fi\n        done\n      done\n    done\n \
    \ fi\n  echo $result\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=$1\n\
    \    local len=${#str}\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ is_happy=true\n    if [[ $len -lt 3 ]]; then\n        is_happy=false\n    else\n\
    \        for ((i=0; i<len-2; i++)); do\n            for ((j=i+1; j<len-1; j++));\
    \ do\n                for ((k=j+1; k<len; k++)); do\n                    if [[\
    \ ${str:i:1} == ${str:j:1} || ${str:i:1} == ${str:k:1} || ${str:j:1} == ${str:k:1}\
    \ ]]; then\n                        is_happy=false\n                    fi\n \
    \               done\n            done\n        done\n    fi\n    echo $is_happy\n\
    }\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=$1\n\
    \  local len=${#str}\n  if [ $len -lt 3 ]; then\n    echo \"false\"\n    return\n\
    \  fi\n  for (( i=0; i<$len-2; i++ )); do\n    local c1=${str:$i:1}\n    local\
    \ c2=${str:$((i+1)):1}\n    local c3=${str:$((i+2)):1}\n    if [ \"$c1\" == \"\
    $c2\" ] || [ \"$c1\" == \"$c3\" ] || [ \"$c2\" == \"$c3\" ]; then\n      echo\
    \ \"false\"\n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n\
    \    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  if [[ ${#1}\
    \ -lt 3 ]]; then\n    echo \"false\"\n  else\n    for (( i=0; i<${#1}-2; i++ ));\
    \ do\n      if [[ ${1:$i:1} == ${1:$i+1:1} ]] || [[ ${1:$i:1} == ${1:$i+2:1} ]]\
    \ || [[ ${1:$i+1:1} == ${1:$i+2:1} ]]; then\n        echo \"false\"\n        return\n\
    \      fi\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=$1\n\
    \  local len=${#str}\n  if [[ $len -lt 3 ]]; then\n    echo \"false\"\n    return\n\
    \  fi\n  for (( i=0; i<len-2; i++ )); do\n    if [[ ${str:i:1} == ${str:i+1:1}\
    \ || ${str:i:1} == ${str:i+2:1} || ${str:i+1:1} == ${str:i+2:1} ]]; then\n   \
    \   echo \"false\"\n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  if [ ${#1}\
    \ -lt 3 ]; then\n    echo \"false\"\n  else\n    for i in $(seq 3 ${#1}); do\n\
    \      if [ \"${1:i-3:3}\" == \"${1:i-2:2}\" ]; then\n        echo \"false\"\n\
    \        return\n      fi\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=$1\n\
    \  local len=${#str}\n  if [[ $len -lt 3 ]]; then\n    echo \"false\"\n    return\n\
    \  fi\n  for (( i=0; i<len-2; i++ )); do\n    if [[ ${str:i:1} == ${str:i+1:1}\
    \ || ${str:i:1} == ${str:i+2:1} || ${str:i+1:1} == ${str:i+2:1} ]]; then\n   \
    \   echo \"false\"\n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local string=$1\n\
    \    local length=${#string}\n    if [[ $length -lt 3 ]]; then\n        echo \"\
    false\"\n        return\n    fi\n    for ((i=0; i<length-2; i++)); do\n      \
    \  local c1=${string:i:1}\n        local c2=${string:i+1:1}\n        local c3=${string:i+2:1}\n\
    \        if [[ $c1 == $c2 || $c1 == $c3 || $c2 == $c3 ]]; then\n            echo\
    \ \"false\"\n            return\n        fi\n    done\n    echo \"true\"\n}\n\n\
    candidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    if [ ${#1}\
    \ -lt 3 ]; then\n        echo \"false\"\n    else\n        for ((i=0; i<${#1}-2;\
    \ i++)); do\n            if [ \"${1:$i:1}\" == \"${1:$i+1:1}\" ] || [ \"${1:$i:1}\"\
    \ == \"${1:$i+2:1}\" ] || [ \"${1:$i+1:1}\" == \"${1:$i+2:1}\" ]; then\n     \
    \           echo \"false\"\n                return\n            fi\n        done\n\
    \        echo \"true\"\n    fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  if [[ ${#1}\
    \ -lt 3 ]]; then\n    echo \"false\"\n  else\n    for (( i=0; i<${#1}-2; i++ ));\
    \ do\n      if [[ ${1:$i:1} == ${1:$i+1:1} ]] || [[ ${1:$i:1} == ${1:$i+2:1} ]]\
    \ || [[ ${1:$i+1:1} == ${1:$i+2:1} ]]; then\n        echo \"false\"\n        return\n\
    \      fi\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=$1\n\
    \    local len=${#str}\n    if [ $len -lt 3 ]; then\n        echo \"false\"\n\
    \        return\n    fi\n    local i=0\n    local j=1\n    local k=2\n    while\
    \ [ $k -lt $len ]; do\n        if [ \"${str:$i:1}\" == \"${str:$j:1}\" ] || [\
    \ \"${str:$i:1}\" == \"${str:$k:1}\" ] || [ \"${str:$j:1}\" == \"${str:$k:1}\"\
    \ ]; then\n            echo \"false\"\n            return\n        fi\n      \
    \  i=$((i+1))\n        j=$((j+1))\n        k=$((k+1))\n    done\n    echo \"true\"\
    \n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  if [ ${#1}\
    \ -lt 3 ]; then\n    echo \"false\"\n  else\n    for (( i=0; i<${#1}-2; i++ ));\
    \ do\n      if [ \"${1:$i:1}\" == \"${1:$i+1:1}\" ] || [ \"${1:$i:1}\" == \"${1:$i+2:1}\"\
    \ ] || [ \"${1:$i+1:1}\" == \"${1:$i+2:1}\" ]; then\n        echo \"false\"\n\
    \        return\n      fi\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=\"\
    $1\"\n  local len=${#str}\n  if [ $len -lt 3 ]; then\n    echo \"false\"\n   \
    \ return\n  fi\n  local i=0\n  local j=2\n  while [ $j -lt $len ]; do\n    if\
    \ [ \"${str:$i:1}\" == \"${str:$j:1}\" ]; then\n      echo \"false\"\n      return\n\
    \    fi\n    i=$((i+1))\n    j=$((j+1))\n  done\n  echo \"true\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    if [ ${#1}\
    \ -lt 3 ]; then\n        echo \"false\"\n    else\n        for (( i=0; i<${#1}-2;\
    \ i++ )); do\n            if [ \"${1:$i:1}\" == \"${1:$i+1:1}\" ] || [ \"${1:$i:1}\"\
    \ == \"${1:$i+2:1}\" ] || [ \"${1:$i+1:1}\" == \"${1:$i+2:1}\" ]; then\n     \
    \           echo \"false\"\n                return\n            fi\n        done\n\
    \        echo \"true\"\n    fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local string=$1\n\
    \    local len=${#string}\n    if [ $len -lt 3 ]; then\n        echo \"false\"\
    \n        return\n    fi\n    for ((i=0; i<$len-2; i++)); do\n        if [ \"\
    ${string:$i:1}\" == \"${string:$((i+1)):1}\" ] || [ \"${string:$i:1}\" == \"${string:$((i+2)):1}\"\
    \ ] || [ \"${string:$((i+1)):1}\" == \"${string:$((i+2)):1}\" ]; then\n      \
    \      echo \"false\"\n            return\n        fi\n    done\n    echo \"true\"\
    \n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=$1\n\
    \  local len=${#str}\n  local i=0\n  local j=0\n  local k=0\n  local char1=\"\"\
    \n  local char2=\"\"\n  local char3=\"\"\n  if [[ $len -lt 3 ]]; then\n    echo\
    \ \"false\"\n    return\n  fi\n  for ((i=0; i<len-2; i++)); do\n    char1=${str:i:1}\n\
    \    char2=${str:i+1:1}\n    char3=${str:i+2:1}\n    if [[ $char1 == $char2 ||\
    \ $char1 == $char3 || $char2 == $char3 ]]; then\n      echo \"false\"\n      return\n\
    \    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=\"\
    $1\"\n  local len=${#str}\n  if [[ $len -lt 3 ]]; then\n    echo \"false\"\n \
    \   return\n  fi\n  for (( i=0; i<$len-2; i++ )); do\n    if [[ ${str:$i:1} ==\
    \ ${str:$i+1:1} ]] || [[ ${str:$i:1} == ${str:$i+2:1} ]] || [[ ${str:$i+1:1} ==\
    \ ${str:$i+2:1} ]]; then\n      echo \"false\"\n      return\n    fi\n  done\n\
    \  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  if [[ ${#1}\
    \ -lt 3 ]]; then\n    echo \"false\"\n  else\n    for (( i=0; i<${#1}-2; i++ ));\
    \ do\n      if [[ ${1:$i:1} == ${1:$i+1:1} ]] || [[ ${1:$i:1} == ${1:$i+2:1} ]]\
    \ || [[ ${1:$i+1:1} == ${1:$i+2:1} ]]; then\n        echo \"false\"\n        return\n\
    \      fi\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=$1\n\
    \  local len=${#str}\n  if [ $len -lt 3 ]; then\n    echo \"false\"\n    return\n\
    \  fi\n  for ((i=0; i<$len-2; i++)); do\n    local c1=${str:$i:1}\n    local c2=${str:$i+1:1}\n\
    \    local c3=${str:$i+2:1}\n    if [ \"$c1\" == \"$c2\" ] || [ \"$c1\" == \"\
    $c3\" ] || [ \"$c2\" == \"$c3\" ]; then\n      echo \"false\"\n      return\n\
    \    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  if [ ${#1}\
    \ -lt 3 ]; then\n    echo \"false\"\n  else\n    for (( i=0; i<${#1}-2; i++ ));\
    \ do\n      if [ \"${1:$i:1}\" == \"${1:$i+1:1}\" ] || [ \"${1:$i:1}\" == \"${1:$i+2:1}\"\
    \ ] || [ \"${1:$i+1:1}\" == \"${1:$i+2:1}\" ]; then\n        echo \"false\"\n\
    \        return\n      fi\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  if [[ ${#1}\
    \ -lt 3 ]]; then\n    echo \"false\"\n  else\n    for (( i=0; i<${#1}-2; i++ ));\
    \ do\n      if [[ ${1:$i:1} == ${1:$i+1:1} ]] || [[ ${1:$i:1} == ${1:$i+2:1} ]]\
    \ || [[ ${1:$i+1:1} == ${1:$i+2:1} ]]; then\n        echo \"false\"\n        return\n\
    \      fi\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=$1\n\
    \    local len=${#str}\n    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n\
    \        return\n    fi\n    for (( i=0; i<len-2; i++ )); do\n        if [[ ${str:i:1}\
    \ == ${str:i+1:1} || ${str:i:1} == ${str:i+2:1} || ${str:i+1:1} == ${str:i+2:1}\
    \ ]]; then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    if [[ ${#1}\
    \ -lt 3 ]]; then\n        echo \"false\"\n    else\n        for (( i=0; i<${#1}-2;\
    \ i++ )); do\n            if [[ ${1:$i:1} == ${1:$i+1:1} || ${1:$i:1} == ${1:$i+2:1}\
    \ || ${1:$i+1:1} == ${1:$i+2:1} ]]; then\n                echo \"false\"\n   \
    \             return\n            fi\n        done\n        echo \"true\"\n  \
    \  fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=\"\
    $1\"\n  local len=${#str}\n  if [ $len -lt 3 ]; then\n    echo \"false\"\n   \
    \ return\n  fi\n  for ((i=0; i<len-2; i++)); do\n    if [ \"${str:i:1}\" == \"\
    ${str:i+1:1}\" ] || [ \"${str:i:1}\" == \"${str:i+2:1}\" ] || [ \"${str:i+1:1}\"\
    \ == \"${str:i+2:1}\" ]; then\n      echo \"false\"\n      return\n    fi\n  done\n\
    \  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=$1\n\
    \  local len=${#str}\n  local i=0\n  local j=0\n  local k=0\n  local c=0\n  local\
    \ d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local\
    \ j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local\
    \ p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local\
    \ v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local\
    \ ab=0\n  local ac=0\n  local ad=0\n  local ae=0\n  local af=0\n  local ag=0\n\
    \  local ah=0\n  local ai=0\n  local aj=0\n  local ak=0\n  local al=0\n  local\
    \ am=0\n  local an=0\n  local ao=0\n  local ap=0\n  local aq=0\n  local ar=0\n\
    \  local as=0\n  local at=0\n  local au=0\n  local av=0\n  local aw=0\n  local\
    \ ax=0\n  local ay=0\n  local az=0\n  local ba=0\n  local bb=0\n  local bc=0\n\
    \  local bd=0\n  local be=0\n  local bf=0\n  local bg=0\n  local bh=0\n  local\
    \ bi=0\n  local bj=0\n  local bk=0\n  local bl=0\n  local bm=0\n  local bn=0\n\
    \  local bo=0\n  local bp=0\n  local bq=0\n  local br=0\n  local bs=0\n  local\
    \ bt=0\n  local bu=0\n  local bv=0\n  local bw=0\n  local bx=0\n  local by=0\n\
    \  local bz=0\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local string=$1\n\
    \    local len=${#string}\n    if [ $len -lt 3 ]; then\n        echo \"false\"\
    \n        return\n    fi\n    local i=0\n    while [ $i -lt $len ]; do\n     \
    \   local j=$((i+1))\n        while [ $j -lt $len ]; do\n            local k=$((j+1))\n\
    \            while [ $k -lt $len ]; do\n                if [ \"${string:$i:1}\"\
    \ == \"${string:$j:1}\" ] || [ \"${string:$i:1}\" == \"${string:$k:1}\" ] || [\
    \ \"${string:$j:1}\" == \"${string:$k:1}\" ]; then\n                    echo \"\
    false\"\n                    return\n                fi\n                k=$((k+1))\n\
    \            done\n            j=$((j+1))\n        done\n        i=$((i+1))\n\
    \    done\n    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local string=\"\
    $1\"\n  local length=\"${#string}\"\n  if [ \"$length\" -lt 3 ]; then\n    echo\
    \ \"false\"\n  else\n    local first=\"${string:0:1}\"\n    local second=\"${string:1:1}\"\
    \n    local third=\"${string:2:1}\"\n    if [ \"$first\" = \"$second\" ] || [\
    \ \"$first\" = \"$third\" ] || [ \"$second\" = \"$third\" ]; then\n      echo\
    \ \"false\"\n    else\n      echo \"true\"\n    fi\n  fi\n}\n\ncandidate() {\n\
    \    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=$1\n\
    \    local len=${#str}\n    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n\
    \        return\n    fi\n    for ((i=0; i<len-2; i++)); do\n        if [[ ${str:i:1}\
    \ == ${str:i+1:1} || ${str:i:1} == ${str:i+2:1} || ${str:i+1:1} == ${str:i+2:1}\
    \ ]]; then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local string=$1\n\
    \    local length=${#string}\n    if [[ $length -lt 3 ]]; then\n        echo \"\
    false\"\n        return\n    fi\n    for (( i=0; i<$length-2; i++ )); do\n   \
    \     if [[ ${string:$i:1} == ${string:$i+1:1} ]] || [[ ${string:$i:1} == ${string:$i+2:1}\
    \ ]] || [[ ${string:$i+1:1} == ${string:$i+2:1} ]]; then\n            echo \"\
    false\"\n            return\n        fi\n    done\n    echo \"true\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=\"\
    $1\"\n    local len=${#str}\n    if [[ $len -lt 3 ]]; then\n        echo \"false\"\
    \n        return\n    fi\n    for (( i=0; i<len-2; i++ )); do\n        if [[ ${str:i:1}\
    \ == ${str:i+1:1} ]] || [[ ${str:i:1} == ${str:i+2:1} ]] || [[ ${str:i+1:1} ==\
    \ ${str:i+2:1} ]]; then\n            echo \"false\"\n            return\n    \
    \    fi\n    done\n    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local string=$1\n\
    \  local length=${#string}\n  local i=0\n  local result=true\n  if [ $length -lt\
    \ 3 ]; then\n    result=false\n  else\n    while [ $i -lt $length ]; do\n    \
    \  local c1=${string:$i:1}\n      local c2=${string:$((i+1)):1}\n      local c3=${string:$((i+2)):1}\n\
    \      if [ \"$c1\" == \"$c2\" ] || [ \"$c1\" == \"$c3\" ] || [ \"$c2\" == \"\
    $c3\" ]; then\n        result=false\n        break\n      fi\n      i=$((i+1))\n\
    \    done\n  fi\n  echo $result\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local string=$1\n\
    \    local length=${#string}\n    if [ $length -lt 3 ]; then\n        echo \"\
    false\"\n        return\n    fi\n    for (( i=0; i<$length-2; i++ )); do\n   \
    \     if [ \"${string:$i:1}\" == \"${string:$((i+1)):1}\" ] || [ \"${string:$i:1}\"\
    \ == \"${string:$((i+2)):1}\" ] || [ \"${string:$((i+1)):1}\" == \"${string:$((i+2)):1}\"\
    \ ]; then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=$1\n\
    \  local len=${#str}\n  if [ $len -lt 3 ]; then\n    echo \"false\"\n    return\n\
    \  fi\n  for ((i=0; i<$len-2; i++)); do\n    if [ \"${str:$i:1}\" == \"${str:$((i+1)):1}\"\
    \ ] || [ \"${str:$i:1}\" == \"${str:$((i+2)):1}\" ] || [ \"${str:$((i+1)):1}\"\
    \ == \"${str:$((i+2)):1}\" ]; then\n      echo \"false\"\n      return\n    fi\n\
    \  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"\
    aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=$1\n\
    \    local len=${#str}\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ res=\"true\"\n    if [[ $len -lt 3 ]]; then\n        res=\"false\"\n    else\n\
    \        for ((i=0; i<len-2; i++)); do\n            for ((j=i+1; j<len-1; j++));\
    \ do\n                for ((k=j+1; k<len; k++)); do\n                    if [[\
    \ ${str:i:1} == ${str:j:1} || ${str:i:1} == ${str:k:1} || ${str:j:1} == ${str:k:1}\
    \ ]]; then\n                        res=\"false\"\n                    fi\n  \
    \              done\n            done\n        done\n    fi\n    echo $res\n}\n\
    \ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local string=$1\n\
    \    local length=${#string}\n    local result=true\n    if [[ $length -lt 3 ]];\
    \ then\n        result=false\n    else\n        for (( i=0; i<$length-2; i++ ));\
    \ do\n            if [[ ${string:$i:1} == ${string:$i+1:1} ]] || [[ ${string:$i:1}\
    \ == ${string:$i+2:1} ]] || [[ ${string:$i+1:1} == ${string:$i+2:1} ]]; then\n\
    \                result=false\n                break\n            fi\n       \
    \ done\n    fi\n    echo $result\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    if [ ${#1}\
    \ -lt 3 ]; then\n        echo \"false\"\n    else\n        for i in $(seq 0 2\
    \ $((${#1} - 1))); do\n            if [ \"${1:$i:1}\" == \"${1:$(($i + 1)):1}\"\
    \ ] || [ \"${1:$i:1}\" == \"${1:$(($i + 2)):1}\" ] || [ \"${1:$(($i + 1)):1}\"\
    \ == \"${1:$(($i + 2)):1}\" ]; then\n                echo \"false\"\n        \
    \        return\n            fi\n        done\n        echo \"true\"\n    fi\n\
    }\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local len=${#1}\n\
    \  if [ $len -lt 3 ]; then\n    echo \"false\"\n  else\n    local i=0\n    while\
    \ [ $i -lt $len ]; do\n      local c1=${1:$i:1}\n      local c2=${1:$((i+1)):1}\n\
    \      local c3=${1:$((i+2)):1}\n      if [ \"$c1\" == \"$c2\" ] || [ \"$c1\"\
    \ == \"$c3\" ] || [ \"$c2\" == \"$c3\" ]; then\n        echo \"false\"\n     \
    \   return\n      fi\n      i=$((i+1))\n    done\n    echo \"true\"\n  fi\n}\n\
    \ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=$1\n\
    \  local len=${#str}\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local\
    \ m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local\
    \ s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local\
    \ y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local\
    \ e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local\
    \ k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local\
    \ q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local\
    \ w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local\
    \ cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n\
    \  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local\
    \ nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n\
    \  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local\
    \ yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n\
    \  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii\n}\n\n\
    candidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=$1\n\
    \    local len=${#str}\n    local i\n    local j\n    local k\n    local l\n \
    \   local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local aa\n    local bb\n    local cc\n    local\
    \ dd\n    local ee\n    local ff\n    local gg\n    local hh\n    local ii\n \
    \   local jj\n    local kk\n    local ll\n    local mm\n    local nn\n    local\
    \ oo\n    local pp\n    local qq\n    local rr\n    local ss\n    local tt\n \
    \   local uu\n    local vv\n    local ww\n    local xx\n    local yy\n    local\
    \ zz\n    local aaa\n    local bbb\n    local ccc\n    local ddd\n    local eee\n\
    \    local fff\n    local ggg\n    local hhh\n    local iii\n    local jjj\n \
    \   local kkk\n    local lll\n    local mmm\n    local nnn\n    local ooo\n  \
    \  local ppp\n    local qqq\n    local rrr\n    local sss\n    local ttt\n   \
    \ local uuu\n    local vvv\n    local www\n    local xxx\n    local yyy\n    local\
    \ zzz\n    local aaaa\n    local bbbb\n    local cccc\n    local dddd\n    local\
    \ eeee\n    local ffff\n    local gggg\n    local hhhh\n    local iiii\n    local\
    \ jjjj\n    local kkkk\n    local llll\n    local mmmm\n    local nnnn\n    local\
    \ oooo\n    local pppp\n    local qqqq\n    local rrrr\n    local ssss\n    local\
    \ tttt\n    local uuuu\n    local vvvv\n    local wwww\n    local xxxx\n    local\
    \ yyyy\n    local zzzz\n    local aaaaa\n    local bbbbb\n    local ccccc\n  \
    \  local ddddd\n    local eeeee\n\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    if [ ${#1}\
    \ -lt 3 ]; then\n        echo \"false\"\n    else\n        for ((i=0; i<${#1}-2;\
    \ i++)); do\n            if [ ${1:$i:1} == ${1:$i+1:1} ] || [ ${1:$i:1} == ${1:$i+2:1}\
    \ ] || [ ${1:$i+1:1} == ${1:$i+2:1} ]; then\n                echo \"false\"\n\
    \                return\n            fi\n        done\n        echo \"true\"\n\
    \    fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=$1\n\
    \    local len=${#str}\n    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n\
    \        return\n    fi\n    for ((i=0; i<len-2; i++)); do\n        if [[ ${str:i:1}\
    \ == ${str:i+1:1} || ${str:i:1} == ${str:i+2:1} || ${str:i+1:1} == ${str:i+2:1}\
    \ ]]; then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  if [[ ${#1}\
    \ -lt 3 ]]; then\n    echo \"false\"\n  else\n    for ((i=0; i<${#1}-2; i++));\
    \ do\n      if [[ ${1:i:1} == ${1:i+1:1} || ${1:i:1} == ${1:i+2:1} || ${1:i+1:1}\
    \ == ${1:i+2:1} ]]; then\n        echo \"false\"\n        return\n      fi\n \
    \   done\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  if [[ ${#1}\
    \ -lt 3 ]]; then\n    echo \"false\"\n  else\n    for (( i=0; i<${#1}-2; i++ ));\
    \ do\n      if [[ ${1:$i:1} == ${1:$i+1:1} ]] || [[ ${1:$i:1} == ${1:$i+2:1} ]]\
    \ || [[ ${1:$i+1:1} == ${1:$i+2:1} ]]; then\n        echo \"false\"\n        return\n\
    \      fi\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    if [[ ${#1}\
    \ -lt 3 ]]; then\n        echo \"false\"\n    else\n        for (( i=0; i<${#1}-2;\
    \ i++ )); do\n            if [[ ${1:$i:1} == ${1:$i+1:1} || ${1:$i:1} == ${1:$i+2:1}\
    \ || ${1:$i+1:1} == ${1:$i+2:1} ]]; then\n                echo \"false\"\n   \
    \             return\n            fi\n        done\n        echo \"true\"\n  \
    \  fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    if [[ ${#1}\
    \ -lt 3 ]]; then\n        echo \"false\"\n    else\n        for i in $(seq 0 2\
    \ $((${#1} - 1))); do\n            if [[ ${1:$i:1} == ${1:$(($i + 1)):1} ]]; then\n\
    \                echo \"false\"\n                return\n            fi\n    \
    \    done\n        echo \"true\"\n    fi\n}\n\ncandidate() {\n    is_happy \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n  \
    \  [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\"\
    \ ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\"\
    ) = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    if [[ ${#1}\
    \ -lt 3 ]]; then\n        echo \"false\"\n    else\n        for ((i=0; i<${#1}-2;\
    \ i++)); do\n            if [[ ${1:i:1} == ${1:i+1:1} || ${1:i:1} == ${1:i+2:1}\
    \ || ${1:i+1:1} == ${1:i+2:1} ]]; then\n                echo \"false\"\n     \
    \           return\n            fi\n        done\n        echo \"true\"\n    fi\n\
    }\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    if [ ${#1}\
    \ -lt 3 ]; then\n        echo \"false\"\n    else\n        for (( i=0; i<${#1}-2;\
    \ i++ )); do\n            if [ \"${1:$i:1}\" == \"${1:$i+1:1}\" ] || [ \"${1:$i:1}\"\
    \ == \"${1:$i+2:1}\" ] || [ \"${1:$i+1:1}\" == \"${1:$i+2:1}\" ]; then\n     \
    \           echo \"false\"\n                return\n            fi\n        done\n\
    \        echo \"true\"\n    fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=$1\n\
    \    local len=${#str}\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ res=true\n    for ((i=0; i<len-2; i++))\n    do\n        for ((j=i+1; j<len-1;\
    \ j++))\n        do\n            for ((k=j+1; k<len; k++))\n            do\n \
    \               if [[ ${str:i:1} == ${str:j:1} || ${str:i:1} == ${str:k:1} ||\
    \ ${str:j:1} == ${str:k:1} ]]\n                then\n                    res=false\n\
    \                fi\n            done\n        done\n    done\n    echo $res\n\
    }\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=$1\n\
    \    local len=${#str}\n    if [ $len -lt 3 ]; then\n        echo \"false\"\n\
    \        return\n    fi\n    for ((i=0; i<len-2; i++)); do\n        if [ \"${str:i:1}\"\
    \ == \"${str:i+1:1}\" ] || [ \"${str:i:1}\" == \"${str:i+2:1}\" ] || [ \"${str:i+1:1}\"\
    \ == \"${str:i+2:1}\" ]; then\n            echo \"false\"\n            return\n\
    \        fi\n    done\n    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n  \
    \  [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\"\
    \ ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\"\
    ) = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    if [[ ${#1}\
    \ -lt 3 ]]; then\n        echo \"false\"\n    else\n        for (( i=0; i<${#1}-2;\
    \ i++ )); do\n            if [[ ${1:$i:1} == ${1:$i+1:1} || ${1:$i:1} == ${1:$i+2:1}\
    \ || ${1:$i+1:1} == ${1:$i+2:1} ]]; then\n                echo \"false\"\n   \
    \             return\n            fi\n        done\n        echo \"true\"\n  \
    \  fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=$1\n\
    \    local len=${#str}\n    if [ $len -lt 3 ]; then\n        echo \"false\"\n\
    \        return\n    fi\n    local i=0\n    while [ $i -lt $len ]; do\n      \
    \  local a=${str:$i:1}\n        local b=${str:$((i+1)):1}\n        local c=${str:$((i+2)):1}\n\
    \        if [ \"$a\" = \"$b\" ] || [ \"$a\" = \"$c\" ] || [ \"$b\" = \"$c\" ];\
    \ then\n            echo \"false\"\n            return\n        fi\n        i=$((i+1))\n\
    \    done\n    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local string=\"\
    $1\"\n    local length=${#string}\n    local i=0\n    local j=0\n    local k=0\n\
    \    local result=\"true\"\n    if [[ $length -lt 3 ]]; then\n        result=\"\
    false\"\n    else\n        for ((i=0; i<$length-2; i++)); do\n            for\
    \ ((j=$i+1; j<$length-1; j++)); do\n                for ((k=$j+1; k<$length; k++));\
    \ do\n                    if [[ ${string:$i:1} == ${string:$j:1} || ${string:$i:1}\
    \ == ${string:$k:1} || ${string:$j:1} == ${string:$k:1} ]]; then\n           \
    \             result=\"false\"\n                    fi\n                done\n\
    \            done\n        done\n    fi\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local s=$1\n\
    \    local len=${#s}\n    if [ $len -lt 3 ]; then\n        echo \"false\"\n  \
    \      return\n    fi\n    for ((i=0; i<len-2; i++)); do\n        if [ \"${s:i:1}\"\
    \ == \"${s:i+1:1}\" ] || [ \"${s:i:1}\" == \"${s:i+2:1}\" ] || [ \"${s:i+1:1}\"\
    \ == \"${s:i+2:1}\" ]; then\n            echo \"false\"\n            return\n\
    \        fi\n    done\n    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n  \
    \  [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\"\
    \ ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\"\
    ) = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=$1\n\
    \  local len=${#str}\n  local i=0\n  local j=0\n  local k=0\n  local result=true\n\
    \  if [ $len -lt 3 ]; then\n    result=false\n  else\n    while [ $i -lt $len\
    \ ]; do\n      j=$(($i+1))\n      k=$(($i+2))\n      if [ $j -lt $len ] && [ $k\
    \ -lt $len ]; then\n        if [ ${str:$i:1} == ${str:$j:1} ] || [ ${str:$i:1}\
    \ == ${str:$k:1} ] || [ ${str:$j:1} == ${str:$k:1} ]; then\n          result=false\n\
    \          break\n        fi\n      fi\n      i=$(($i+1))\n    done\n  fi\n  echo\
    \ $result\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local s=$1\n\
    \    local len=${#s}\n    if [ $len -lt 3 ]; then\n        echo \"false\"\n  \
    \      return\n    fi\n    for ((i=0; i<$len-2; i++)); do\n        if [ \"${s:$i:1}\"\
    \ == \"${s:$((i+1)):1}\" ] || [ \"${s:$i:1}\" == \"${s:$((i+2)):1}\" ] || [ \"\
    ${s:$((i+1)):1}\" == \"${s:$((i+2)):1}\" ]; then\n            echo \"false\"\n\
    \            return\n        fi\n    done\n    echo \"true\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=$1\n\
    \    local len=${#str}\n    if [ $len -lt 3 ]; then\n        echo \"false\"\n\
    \        return\n    fi\n    local i=0\n    while [ $i -lt $len ]; do\n      \
    \  local c1=${str:$i:1}\n        local c2=${str:$((i+1)):1}\n        local c3=${str:$((i+2)):1}\n\
    \        if [ \"$c1\" == \"$c2\" ] || [ \"$c1\" == \"$c3\" ] || [ \"$c2\" == \"\
    $c3\" ]; then\n            echo \"false\"\n            return\n        fi\n  \
    \      i=$((i+1))\n    done\n    echo \"true\"\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=\"\
    $1\"\n    local len=${#str}\n    local i=0\n    local j=0\n    local k=0\n   \
    \ local is_happy=true\n    if [ $len -lt 3 ]; then\n        is_happy=false\n \
    \   else\n        for ((i=0; i<len-2; i++)); do\n            for ((j=i+1; j<len-1;\
    \ j++)); do\n                for ((k=j+1; k<len; k++)); do\n                 \
    \   if [ \"${str:i:1}\" == \"${str:j:1}\" ] || [ \"${str:i:1}\" == \"${str:k:1}\"\
    \ ] || [ \"${str:j:1}\" == \"${str:k:1}\" ]; then\n                        is_happy=false\n\
    \                        break\n                    fi\n                done\n\
    \                if [ \"$is_happy\" == \"false\" ]; then\n                   \
    \ break\n                fi\n            done\n            if [ \"$is_happy\"\
    \ == \"false\" ]; then\n                break\n            fi\n        done\n\
    \    fi\n    echo \"$is_happy\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=\"\
    $1\"\n    local len=${#str}\n    if [ $len -lt 3 ]; then\n        echo \"false\"\
    \n        return\n    fi\n    for (( i=0; i<len-2; i++ )); do\n        if [ \"\
    ${str:$i:1}\" == \"${str:$((i+1)):1}\" ] || [ \"${str:$i:1}\" == \"${str:$((i+2)):1}\"\
    \ ] || [ \"${str:$((i+1)):1}\" == \"${str:$((i+2)):1}\" ]; then\n            echo\
    \ \"false\"\n            return\n        fi\n    done\n    echo \"true\"\n}\n\n\
    candidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  if [[ ${#1}\
    \ -lt 3 ]]; then\n    echo \"false\"\n  else\n    for (( i=0; i<${#1}-2; i++ ));\
    \ do\n      if [[ ${1:$i:1} == ${1:$i+1:1} || ${1:$i:1} == ${1:$i+2:1} || ${1:$i+1:1}\
    \ == ${1:$i+2:1} ]]; then\n        echo \"false\"\n        return\n      fi\n\
    \    done\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    if [ ${#1}\
    \ -lt 3 ]; then\n        echo \"false\"\n    else\n        for ((i=0; i<${#1}-2;\
    \ i++)); do\n            if [ \"${1:$i:1}\" == \"${1:$i+1:1}\" ] || [ \"${1:$i:1}\"\
    \ == \"${1:$i+2:1}\" ] || [ \"${1:$i+1:1}\" == \"${1:$i+2:1}\" ]; then\n     \
    \           echo \"false\"\n                return\n            fi\n        done\n\
    \        echo \"true\"\n    fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=\"\
    $1\"\n  local len=${#str}\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n\
    \  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n\
    \  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n\
    \  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n\
    \  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n\
    \  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n\
    \  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n\
    \  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n\
    \  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local\
    \ hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n\
    \  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local\
    \ ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n\
    \  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local\
    \ ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n \n}\n\n\
    candidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=$1\n\
    \    local len=${#str}\n    if [ $len -lt 3 ]; then\n        echo \"false\"\n\
    \        return\n    fi\n    for (( i=0; i<$len-2; i++ )); do\n        if [ \"\
    ${str:$i:1}\" == \"${str:$i+1:1}\" ] || [ \"${str:$i:1}\" == \"${str:$i+2:1}\"\
    \ ] || [ \"${str:$i+1:1}\" == \"${str:$i+2:1}\" ]; then\n            echo \"false\"\
    \n            return\n        fi\n    done\n    echo \"true\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  if [[ ${#1}\
    \ -lt 3 ]]; then\n    echo \"false\"\n  else\n    for (( i=0; i<${#1}-2; i++ ));\
    \ do\n      if [[ ${1:$i:1} == ${1:$i+1:1} || ${1:$i:1} == ${1:$i+2:1} || ${1:$i+1:1}\
    \ == ${1:$i+2:1} ]]; then\n        echo \"false\"\n        return\n      fi\n\
    \    done\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    if [[ ${#1}\
    \ -lt 3 ]]; then\n        echo \"false\"\n    else\n        for (( i=0; i<${#1}-2;\
    \ i++ )); do\n            if [[ ${1:$i:1} == ${1:$i+1:1} || ${1:$i:1} == ${1:$i+2:1}\
    \ || ${1:$i+1:1} == ${1:$i+2:1} ]]; then\n                echo \"false\"\n   \
    \             return\n            fi\n        done\n        echo \"true\"\n  \
    \  fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=$1\n\
    \    local len=${#str}\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ char=''\n    local char2=''\n    local char3=''\n    local result=''\n\n   \
    \ if [ $len -lt 3 ]; then\n        result=\"false\"\n    else\n        while [\
    \ $i -lt $len ]; do\n            char=${str:$i:1}\n            j=$((i+1))\n  \
    \          while [ $j -lt $len ]; do\n                char2=${str:$j:1}\n    \
    \            if [ \"$char\" == \"$char2\" ]; then\n                    result=\"\
    false\"\n                    break\n                fi\n                k=$((j+1))\n\
    \                while [ $k -lt $len ]; do\n                    char3=${str:$k:1}\n\
    \                    if [ \"$char\" == \"$char3\" ] || [ \"$char2\" == \"$char3\"\
    \ ]; then\n                        result=\"false\"\n                        break\n\
    \                    fi\n                    k=$((k+1))\n                done\n\
    \                if [ \"$result\" == \"false\" ]; then\n                    break\n\
    \                fi\n                j=$((j+1))\n            done\n          \
    \  if [ \"$result\" == \"false\" ]; then\n                break\n            fi\n\
    \            i=$((i+1))\n        done\n        if [ \"$result\" != \"false\" ];\
    \ then\n            result=\"true\"\n        fi\n    fi\n    echo \"$result\"\n\
    }\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  if [ ${#1}\
    \ -lt 3 ]; then\n    echo \"false\"\n  else\n    for (( i=0; i<${#1}-2; i++ ));\
    \ do\n      if [ \"${1:$i:1}\" == \"${1:$((i+1)):1}\" ] || [ \"${1:$i:1}\" ==\
    \ \"${1:$((i+2)):1}\" ] || [ \"${1:$((i+1)):1}\" == \"${1:$((i+2)):1}\" ]; then\n\
    \        echo \"false\"\n        return\n      fi\n    done\n    echo \"true\"\
    \n  fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  if [ ${#1}\
    \ -lt 3 ]; then\n    echo \"false\"\n  else\n    for (( i=0; i<${#1}-2; i++ ));\
    \ do\n      if [ \"${1:$i:1}\" == \"${1:$i+1:1}\" ] || [ \"${1:$i:1}\" == \"${1:$i+2:1}\"\
    \ ] || [ \"${1:$i+1:1}\" == \"${1:$i+2:1}\" ]; then\n        echo \"false\"\n\
    \        return\n      fi\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    if [[ ${#1}\
    \ -lt 3 ]]; then\n        echo \"false\"\n    else\n        for (( i=0; i<${#1}-2;\
    \ i++ )); do\n            if [[ ${1:$i:1} == ${1:$i+1:1} || ${1:$i:1} == ${1:$i+2:1}\
    \ || ${1:$i+1:1} == ${1:$i+2:1} ]]; then\n                echo \"false\"\n   \
    \             return\n            fi\n        done\n        echo \"true\"\n  \
    \  fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    if [ ${#1}\
    \ -lt 3 ]; then\n        echo \"false\"\n    else\n        for i in $(seq 0 2\
    \ $((${#1} - 1))); do\n            if [ \"${1:$i:1}\" == \"${1:$(($i + 1)):1}\"\
    \ ] || [ \"${1:$i:1}\" == \"${1:$(($i + 2)):1}\" ] || [ \"${1:$(($i + 1)):1}\"\
    \ == \"${1:$(($i + 2)):1}\" ]; then\n                echo \"false\"\n        \
    \        return\n            fi\n        done\n        echo \"true\"\n    fi\n\
    }\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local s=$1\n\
    \    local len=${#s}\n    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n\
    \        return\n    fi\n    for (( i=0; i<len-2; i++ )); do\n        local c1=${s:i:1}\n\
    \        local c2=${s:i+1:1}\n        local c3=${s:i+2:1}\n        if [[ $c1 ==\
    \ $c2 || $c1 == $c3 || $c2 == $c3 ]]; then\n            echo \"false\"\n     \
    \       return\n        fi\n    done\n    echo \"true\"\n}\n\ncandidate() {\n\
    \    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=$1\n\
    \    local len=${#str}\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n  \
    \  local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n   \
    \ local g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n \
    \   local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n\
    \    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n\
    \    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n\
    \    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n\
    \    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n\
    \    local aaa=0\n    local bbb=0\n    local ccc=0\n    local ddd=0\n    local\
    \ eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n    local iii\n}\n\
    \ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=$1\n\
    \  local len=${#str}\n  local i=0\n  local is_happy=true\n  while [ $i -lt $len\
    \ ]; do\n    local substr=${str:$i:3}\n    if [ ${#substr} -eq 3 ]; then\n   \
    \   if [ $(echo $substr | uniq | wc -l) -ne 3 ]; then\n        is_happy=false\n\
    \        break\n      fi\n    fi\n    i=$((i+1))\n  done\n  echo $is_happy\n}\n\
    \ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    if [[ ${#1}\
    \ -lt 3 ]]; then\n        echo \"false\"\n    else\n        for (( i=0; i<${#1}-2;\
    \ i++ )); do\n            if [[ ${1:$i:1} == ${1:$i+1:1} || ${1:$i:1} == ${1:$i+2:1}\
    \ || ${1:$i+1:1} == ${1:$i+2:1} ]]; then\n                echo \"false\"\n   \
    \             return\n            fi\n        done\n        echo \"true\"\n  \
    \  fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=\"\
    $1\"\n    local len=${#str}\n    if [ $len -lt 3 ]; then\n        echo \"false\"\
    \n        return\n    fi\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ a=0\n    local b=0\n    local c=0\n    for ((i=0; i<len-2; i++)); do\n     \
    \   a=${str:i:1}\n        b=${str:i+1:1}\n        c=${str:i+2:1}\n        if [\
    \ $a == $b ] || [ $a == $c ] || [ $b == $c ]; then\n            echo \"false\"\
    \n            return\n        fi\n    done\n    echo \"true\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=\"\
    $1\"\n  local len=${#str}\n  if [[ $len -lt 3 ]]; then\n    echo \"false\"\n \
    \   return\n  fi\n  local i=0\n  local j=0\n  local k=0\n  local c1=\"\"\n  local\
    \ c2=\"\"\n  local c3=\"\"\n  for ((i=0; i<len-2; i++)); do\n    c1=${str:i:1}\n\
    \    c2=${str:i+1:1}\n    c3=${str:i+2:1}\n    if [[ $c1 == $c2 || $c1 == $c3\
    \ || $c2 == $c3 ]]; then\n      echo \"false\"\n      return\n    fi\n  done\n\
    \  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=$1\n\
    \  local len=${#str}\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local\
    \ m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local\
    \ s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local\
    \ y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local\
    \ e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local\
    \ k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local\
    \ q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local\
    \ w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local\
    \ cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n\
    \  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local\
    \ nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n\
    \  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local\
    \ yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n\
    \  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii\n}\n\n\
    candidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local string=$1\n\
    \    local length=${#string}\n    if [ $length -lt 3 ]; then\n        echo \"\
    false\"\n        return\n    fi\n    for (( i=0; i<$length-2; i++ )); do\n   \
    \     if [ \"${string:$i:1}\" == \"${string:$((i+1)):1}\" ] || [ \"${string:$i:1}\"\
    \ == \"${string:$((i+2)):1}\" ] || [ \"${string:$((i+1)):1}\" == \"${string:$((i+2)):1}\"\
    \ ]; then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=$1\n\
    \    local len=${#str}\n    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n\
    \        return\n    fi\n    for ((i=0; i<len-2; i++)); do\n        local c1=${str:i:1}\n\
    \        local c2=${str:i+1:1}\n        local c3=${str:i+2:1}\n        if [[ $c1\
    \ == $c2 || $c1 == $c3 || $c2 == $c3 ]]; then\n            echo \"false\"\n  \
    \          return\n        fi\n    done\n    echo \"true\"\n}\n\ncandidate() {\n\
    \    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=$1\n\
    \  local len=${#str}\n  if [ $len -lt 3 ]; then\n    echo \"false\"\n    return\n\
    \  fi\n  for (( i=0; i<$len-2; i++ )); do\n    local c1=${str:$i:1}\n    local\
    \ c2=${str:$i+1:1}\n    local c3=${str:$i+2:1}\n    if [ \"$c1\" == \"$c2\" ]\
    \ || [ \"$c1\" == \"$c3\" ] || [ \"$c2\" == \"$c3\" ]; then\n      echo \"false\"\
    \n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    if [ ${#1}\
    \ -lt 3 ]; then\n        echo \"false\"\n    else\n        for (( i=0; i<${#1}-2;\
    \ i++ )); do\n            if [ \"${1:$i:1}\" == \"${1:$i+1:1}\" ] || [ \"${1:$i:1}\"\
    \ == \"${1:$i+2:1}\" ] || [ \"${1:$i+1:1}\" == \"${1:$i+2:1}\" ]; then\n     \
    \           echo \"false\"\n                return\n            fi\n        done\n\
    \        echo \"true\"\n    fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local s=$1\n\
    \    local len=${#s}\n    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n\
    \        return\n    fi\n    for (( i=0; i<len-2; i++ )); do\n        local c1=${s:i:1}\n\
    \        local c2=${s:i+1:1}\n        local c3=${s:i+2:1}\n        if [[ $c1 ==\
    \ $c2 || $c1 == $c3 || $c2 == $c3 ]]; then\n            echo \"false\"\n     \
    \       return\n        fi\n    done\n    echo \"true\"\n}\n\ncandidate() {\n\
    \    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    if [[ ${#1}\
    \ -lt 3 ]]; then\n        echo \"false\"\n    else\n        for i in $(seq 0 2\
    \ $((${#1} - 1))); do\n            if [[ ${1:$i:1} == ${1:$(($i + 1)):1} ]]; then\n\
    \                echo \"false\"\n                return\n            fi\n    \
    \    done\n        echo \"true\"\n    fi\n}\n\ncandidate() {\n    is_happy \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n  \
    \  [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\"\
    \ ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\"\
    ) = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local s=$1\n\
    \    local len=${#s}\n    if [ $len -lt 3 ]; then\n        echo \"false\"\n  \
    \      return\n    fi\n    for (( i=0; i<$len-2; i++ )); do\n        if [ \"${s:$i:1}\"\
    \ == \"${s:$i+1:1}\" ] || [ \"${s:$i:1}\" == \"${s:$i+2:1}\" ] || [ \"${s:$i+1:1}\"\
    \ == \"${s:$i+2:1}\" ]; then\n            echo \"false\"\n            return\n\
    \        fi\n    done\n    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n  \
    \  [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\"\
    \ ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\"\
    ) = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  if [[ ${#1}\
    \ -lt 3 ]]; then\n    echo \"false\"\n  else\n    for (( i=0; i<${#1}-2; i++ ));\
    \ do\n      if [[ ${1:$i:1} == ${1:$i+1:1} ]] || [[ ${1:$i:1} == ${1:$i+2:1} ]]\
    \ || [[ ${1:$i+1:1} == ${1:$i+2:1} ]]; then\n        echo \"false\"\n        return\n\
    \      fi\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    if [[ ${#1}\
    \ -lt 3 ]]; then\n        echo \"false\"\n    else\n        for (( i=0; i<${#1}-2;\
    \ i++ )); do\n            if [[ ${1:$i:1} == ${1:$i+1:1} || ${1:$i:1} == ${1:$i+2:1}\
    \ || ${1:$i+1:1} == ${1:$i+2:1} ]]; then\n                echo \"false\"\n   \
    \             return\n            fi\n        done\n        echo \"true\"\n  \
    \  fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local string=$1\n\
    \    local length=${#string}\n    if [[ $length -lt 3 ]]; then\n        echo \"\
    false\"\n        return\n    fi\n    for (( i=0; i<$length-2; i++ )); do\n   \
    \     local substr=${string:$i:3}\n        if [[ $(echo $substr | uniq | wc -l)\
    \ -ne 3 ]]; then\n            echo \"false\"\n            return\n        fi\n\
    \    done\n    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  if [[ ${#1}\
    \ -lt 3 ]]; then\n    echo \"false\"\n  else\n    for (( i=0; i<${#1}-2; i++ ));\
    \ do\n      if [[ ${1:$i:1} == ${1:$i+1:1} ]] || [[ ${1:$i:1} == ${1:$i+2:1} ]]\
    \ || [[ ${1:$i+1:1} == ${1:$i+2:1} ]]; then\n        echo \"false\"\n        return\n\
    \      fi\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    if [[ ${#1}\
    \ -ge 3 ]]; then\n        for (( i=0; i<${#1}-2; i++ )); do\n            if [[\
    \ ${1:$i:1} == ${1:$((i+1)):1} || ${1:$i:1} == ${1:$((i+2)):1} || ${1:$((i+1)):1}\
    \ == ${1:$((i+2)):1} ]]; then\n                echo \"false\"\n              \
    \  return\n            fi\n        done\n        echo \"true\"\n    else\n   \
    \     echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=$1\n\
    \  local len=${#str}\n  if [ $len -lt 3 ]; then\n    echo \"false\"\n    return\n\
    \  fi\n  for ((i=0; i<$len-2; i++)); do\n    if [ \"${str:$i:1}\" == \"${str:$i+1:1}\"\
    \ ] || [ \"${str:$i:1}\" == \"${str:$i+2:1}\" ] || [ \"${str:$i+1:1}\" == \"${str:$i+2:1}\"\
    \ ]; then\n      echo \"false\"\n      return\n    fi\n  done\n  echo \"true\"\
    \n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=$1\n\
    \    local len=${#str}\n    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n\
    \        return\n    fi\n    for (( i=0; i<$len-2; i++ )); do\n        local c1=${str:$i:1}\n\
    \        local c2=${str:$((i+1)):1}\n        local c3=${str:$((i+2)):1}\n    \
    \    if [[ $c1 == $c2 ]] || [[ $c1 == $c3 ]] || [[ $c2 == $c3 ]]; then\n     \
    \       echo \"false\"\n            return\n        fi\n    done\n    echo \"\
    true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=\"\
    $1\"\n  local len=${#str}\n  if [[ $len -lt 3 ]]; then\n    echo \"false\"\n \
    \   return\n  fi\n  for (( i=0; i<$len-2; i++ )); do\n    if [[ \"${str:$i:1}\"\
    \ == \"${str:$i+1:1}\" ]] || [[ \"${str:$i:1}\" == \"${str:$i+2:1}\" ]] || [[\
    \ \"${str:$i+1:1}\" == \"${str:$i+2:1}\" ]]; then\n      echo \"false\"\n    \
    \  return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n  \
    \  [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\"\
    \ ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\"\
    ) = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=$1\n\
    \  local len=${#str}\n  local i=0\n  local j=0\n  local k=0\n  local result=\"\
    true\"\n  if [ $len -lt 3 ]; then\n    result=\"false\"\n  else\n    for ((i=0;\
    \ i<len-2; i++)); do\n      for ((j=i+1; j<len-1; j++)); do\n        for ((k=j+1;\
    \ k<len; k++)); do\n          if [ \"${str:i:1}\" == \"${str:j:1}\" ] || [ \"\
    ${str:i:1}\" == \"${str:k:1}\" ] || [ \"${str:j:1}\" == \"${str:k:1}\" ]; then\n\
    \            result=\"false\"\n          fi\n        done\n      done\n    done\n\
    \  fi\n  echo $result\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"\
    aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local string=$1\n\
    \  local length=${#string}\n  local i=0\n  local j=0\n  local k=0\n  local char1=''\n\
    \  local char2=''\n  local char3=''\n  local is_happy='true'\n\n  if [[ $length\
    \ -lt 3 ]]; then\n    is_happy='false'\n  else\n    for (( i=0; i<$length-2; i++\
    \ )); do\n      char1=${string:$i:1}\n      char2=${string:$i+1:1}\n      char3=${string:$i+2:1}\n\
    \      if [[ $char1 == $char2 || $char1 == $char3 || $char2 == $char3 ]]; then\n\
    \        is_happy='false'\n        break\n      fi\n    done\n  fi\n\n  echo $is_happy\n\
    }\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=$1\n\
    \  local len=${#str}\n  local i=0\n  local j=0\n  local k=0\n  local res=true\n\
    \  if [ $len -lt 3 ]; then\n    res=false\n  else\n    for ((i=0; i<len-2; i++));\
    \ do\n      for ((j=i+1; j<len-1; j++)); do\n        for ((k=j+1; k<len; k++));\
    \ do\n          if [ \"${str:i:1}\" == \"${str:j:1}\" ] || [ \"${str:i:1}\" ==\
    \ \"${str:k:1}\" ] || [ \"${str:j:1}\" == \"${str:k:1}\" ]; then\n           \
    \ res=false\n          fi\n        done\n      done\n    done\n  fi\n  echo $res\n\
    }\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    if [[ ${#1}\
    \ -lt 3 ]]; then\n        echo \"false\"\n    else\n        for (( i=0; i<${#1}-2;\
    \ i++ )); do\n            if [[ ${1:$i:1} == ${1:$i+1:1} || ${1:$i:1} == ${1:$i+2:1}\
    \ || ${1:$i+1:1} == ${1:$i+2:1} ]]; then\n                echo \"false\"\n   \
    \             return\n            fi\n        done\n        echo \"true\"\n  \
    \  fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=$1\n\
    \  local len=${#str}\n  if [[ $len -lt 3 ]]; then\n    echo \"false\"\n    return\n\
    \  fi\n  for (( i=0; i<len-2; i++ )); do\n    local c1=${str:i:1}\n    local c2=${str:i+1:1}\n\
    \    local c3=${str:i+2:1}\n    if [[ $c1 == $c2 || $c1 == $c3 || $c2 == $c3 ]];\
    \ then\n      echo \"false\"\n      return\n    fi\n  done\n  echo \"true\"\n\
    }\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    if [ ${#1}\
    \ -lt 3 ]; then\n        echo \"false\"\n    else\n        for i in $(seq 1 $((${#1}\
    \ - 2))); do\n            if [ \"${1:$i:1}\" == \"${1:$(($i + 1)):1}\" ] || [\
    \ \"${1:$i:1}\" == \"${1:$(($i + 2)):1}\" ] || [ \"${1:$(($i + 1)):1}\" == \"\
    ${1:$(($i + 2)):1}\" ]; then\n                echo \"false\"\n               \
    \ return\n            fi\n        done\n        echo \"true\"\n    fi\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    if [[ ${#1}\
    \ -lt 3 ]]; then\n        echo \"false\"\n    else\n        for (( i=0; i<${#1}-2;\
    \ i++ )); do\n            if [[ ${1:$i:1} == ${1:$((i+1)):1} ]] || [[ ${1:$i:1}\
    \ == ${1:$((i+2)):1} ]] || [[ ${1:$((i+1)):1} == ${1:$((i+2)):1} ]]; then\n  \
    \              echo \"false\"\n                return\n            fi\n      \
    \  done\n        echo \"true\"\n    fi\n}\n\ncandidate() {\n    is_happy \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[\
    \ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\"\
    \ ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\"\
    ) = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  if [[ ${#1}\
    \ -lt 3 ]]; then\n    echo \"false\"\n  else\n    for (( i=0; i<${#1}-2; i++ ));\
    \ do\n      if [[ ${1:$i:1} == ${1:$i+1:1} ]] || [[ ${1:$i:1} == ${1:$i+2:1} ]]\
    \ || [[ ${1:$i+1:1} == ${1:$i+2:1} ]]; then\n        echo \"false\"\n        return\n\
    \      fi\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=$1\n\
    \  local len=${#str}\n  if [ $len -lt 3 ]; then\n    echo \"false\"\n    return\n\
    \  fi\n  for ((i=0; i<len-2; i++)); do\n    if [ \"${str:i:1}\" == \"${str:i+1:1}\"\
    \ ] || [ \"${str:i:1}\" == \"${str:i+2:1}\" ] || [ \"${str:i+1:1}\" == \"${str:i+2:1}\"\
    \ ]; then\n      echo \"false\"\n      return\n    fi\n  done\n  echo \"true\"\
    \n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=$1\n\
    \  local len=${#str}\n  if [ $len -lt 3 ]; then\n    echo \"false\"\n    return\n\
    \  fi\n  for ((i=0; i<len-2; i++)); do\n    local c1=${str:i:1}\n    local c2=${str:i+1:1}\n\
    \    local c3=${str:i+2:1}\n    if [ \"$c1\" == \"$c2\" ] || [ \"$c1\" == \"$c3\"\
    \ ] || [ \"$c2\" == \"$c3\" ]; then\n      echo \"false\"\n      return\n    fi\n\
    \  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"\
    aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    if [[ ${#1}\
    \ -lt 3 ]]; then\n        echo \"false\"\n    else\n        for (( i=0; i<${#1}-2;\
    \ i++ )); do\n            if [[ ${1:$i:1} == ${1:$i+1:1} || ${1:$i:1} == ${1:$i+2:1}\
    \ || ${1:$i+1:1} == ${1:$i+2:1} ]]; then\n                echo \"false\"\n   \
    \             return\n            fi\n        done\n        echo \"true\"\n  \
    \  fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=\"\
    $1\"\n  local len=${#str}\n  if [ $len -lt 3 ]; then\n    echo \"false\"\n   \
    \ return\n  fi\n  for (( i=0; i<$len-2; i++ )); do\n    local c1=${str:$i:1}\n\
    \    local c2=${str:$i+1:1}\n    local c3=${str:$i+2:1}\n    if [ \"$c1\" == \"\
    $c2\" ] || [ \"$c1\" == \"$c3\" ] || [ \"$c2\" == \"$c3\" ]; then\n      echo\
    \ \"false\"\n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n\
    \    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=$1\n\
    \  local len=${#str}\n  local i=0\n  local j=0\n  local k=0\n  local result=true\n\
    \  if [ $len -lt 3 ]; then\n    result=false\n  else\n    for ((i=0; i<len-2;\
    \ i++)); do\n      for ((j=i+1; j<len-1; j++)); do\n        for ((k=j+1; k<len;\
    \ k++)); do\n          if [ \"${str:i:1}\" == \"${str:j:1}\" ] || [ \"${str:i:1}\"\
    \ == \"${str:k:1}\" ] || [ \"${str:j:1}\" == \"${str:k:1}\" ]; then\n        \
    \    result=false\n          fi\n        done\n      done\n    done\n  fi\n  echo\
    \ $result\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=$1\n\
    \  local len=${#str}\n  local i=0\n  local j=0\n  local k=0\n  local char=''\n\
    \  local char2=''\n  local char3=''\n  local is_happy=true\n\n  if [ $len -lt\
    \ 3 ]; then\n    is_happy=false\n  else\n    for ((i=0; i<len-2; i++)); do\n \
    \     char=${str:i:1}\n      char2=${str:i+1:1}\n      char3=${str:i+2:1}\n  \
    \    if [ \"$char\" == \"$char2\" ] || [ \"$char\" == \"$char3\" ] || [ \"$char2\"\
    \ == \"$char3\" ]; then\n        is_happy=false\n        break\n      fi\n   \
    \ done\n  fi\n\n  echo \"$is_happy\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=$1\n\
    \  local len=${#str}\n  if [[ $len -lt 3 ]]; then\n    echo \"false\"\n    return\n\
    \  fi\n  for (( i=0; i<len-2; i++ )); do\n    if [[ ${str:i:1} == ${str:i+1:1}\
    \ || ${str:i:1} == ${str:i+2:1} || ${str:i+1:1} == ${str:i+2:1} ]]; then\n   \
    \   echo \"false\"\n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  if [ ${#1}\
    \ -lt 3 ]; then\n    echo \"false\"\n  else\n    for (( i=0; i<${#1}-2; i++ ));\
    \ do\n      if [ \"${1:$i:1}\" == \"${1:$i+1:1}\" ] || [ \"${1:$i:1}\" == \"${1:$i+2:1}\"\
    \ ] || [ \"${1:$i+1:1}\" == \"${1:$i+2:1}\" ]; then\n        echo \"false\"\n\
    \        return\n      fi\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    # your\
    \ code here\n    if [[ ${#1} -lt 3 ]]; then\n        echo \"false\"\n    else\n\
    \        for ((i=0; i<${#1}-2; i++)); do\n            if [[ ${1:i:1} == ${1:i+1:1}\
    \ || ${1:i:1} == ${1:i+2:1} || ${1:i+1:1} == ${1:i+2:1} ]]; then\n           \
    \     echo \"false\"\n                return 0\n            fi\n        done\n\
    \        echo \"true\"\n    fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  if [[ ${#1}\
    \ -lt 3 ]]; then\n    echo \"false\"\n  else\n    for i in $(seq 0 2 $((${#1}\
    \ - 1))); do\n      if [[ ${1:$i:1} == ${1:$(($i + 1)):1} ]]; then\n        echo\
    \ \"false\"\n        return\n      fi\n    done\n    echo \"true\"\n  fi\n}\n\n\
    candidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  if [ ${#1}\
    \ -lt 3 ]; then\n    echo \"false\"\n  else\n    for i in $(seq 0 2 ${#1}); do\n\
    \      if [ $(echo ${1:$i:3} | sort | uniq | wc -l) -ne 1 ]; then\n        echo\
    \ \"false\"\n        return\n      fi\n    done\n    echo \"true\"\n  fi\n}\n\n\
    candidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  # write your\
    \ code here\n  if [ ${#1} -lt 3 ]; then\n    echo \"false\"\n  else\n    for ((\
    \ i=0; i<${#1}-2; i++ )); do\n      if [ \"${1:$i:1}\" == \"${1:$i+1:1}\" ] ||\
    \ [ \"${1:$i:1}\" == \"${1:$i+2:1}\" ] || [ \"${1:$i+1:1}\" == \"${1:$i+2:1}\"\
    \ ]; then\n        echo \"false\"\n        return\n      fi\n    done\n    echo\
    \ \"true\"\n  fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=$1\n\
    \  local len=${#str}\n  if [ $len -lt 3 ]; then\n    echo \"false\"\n    return\n\
    \  fi\n  local i=0\n  while [ $i -lt $len ]; do\n    local j=$((i+1))\n    local\
    \ k=$((i+2))\n    if [ $k -ge $len ]; then\n      echo \"true\"\n      return\n\
    \    fi\n    if [ \"${str:$i:1}\" == \"${str:$j:1}\" ] || [ \"${str:$i:1}\" ==\
    \ \"${str:$k:1}\" ] || [ \"${str:$j:1}\" == \"${str:$k:1}\" ]; then\n      echo\
    \ \"false\"\n      return\n    fi\n    i=$((i+1))\n  done\n  echo \"true\"\n}\n\
    \ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  if [ ${#1}\
    \ -lt 3 ]; then\n    echo \"false\"\n  else\n    for (( i=0; i<${#1}-2; i++ ));\
    \ do\n      if [ ${1:$i:1} == ${1:$i+1:1} ] || [ ${1:$i:1} == ${1:$i+2:1} ] ||\
    \ [ ${1:$i+1:1} == ${1:$i+2:1} ]; then\n        echo \"false\"\n        return\n\
    \      fi\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  if [[ ${#1}\
    \ -lt 3 ]]; then\n    echo \"false\"\n  else\n    for (( i=0; i<${#1}-2; i++ ));\
    \ do\n      if [[ ${1:$i:1} == ${1:$i+1:1} ]] || [[ ${1:$i:1} == ${1:$i+2:1} ]]\
    \ || [[ ${1:$i+1:1} == ${1:$i+2:1} ]]; then\n        echo \"false\"\n        return\n\
    \      fi\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    if [[ ${#1}\
    \ -lt 3 ]]; then\n        echo \"false\"\n    else\n        for (( i=0; i<${#1}-2;\
    \ i++ )); do\n            if [[ ${1:$i:1} == ${1:$i+1:1} || ${1:$i:1} == ${1:$i+2:1}\
    \ || ${1:$i+1:1} == ${1:$i+2:1} ]]; then\n                echo \"false\"\n   \
    \             return\n            fi\n        done\n        echo \"true\"\n  \
    \  fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=$1\n\
    \    local len=${#str}\n    if [ $len -lt 3 ]; then\n        echo \"false\"\n\
    \        return\n    fi\n    for ((i=0; i<$len-2; i++)); do\n        local c1=${str:$i:1}\n\
    \        local c2=${str:$((i+1)):1}\n        local c3=${str:$((i+2)):1}\n    \
    \    if [ \"$c1\" == \"$c2\" ] || [ \"$c1\" == \"$c3\" ] || [ \"$c2\" == \"$c3\"\
    \ ]; then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=\"\
    $1\"\n    local len=${#str}\n    if [[ $len -lt 3 ]]; then\n        echo \"false\"\
    \n        return\n    fi\n    for (( i=0; i<len-2; i++ )); do\n        if [[ ${str:i:1}\
    \ == ${str:i+1:1} ]] || [[ ${str:i:1} == ${str:i+2:1} ]] || [[ ${str:i+1:1} ==\
    \ ${str:i+2:1} ]]; then\n            echo \"false\"\n            return\n    \
    \    fi\n    done\n    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=$1\n\
    \  local len=${#str}\n  if [[ $len -lt 3 ]]; then\n    echo \"false\"\n    return\n\
    \  fi\n  for (( i=0; i<len-2; i++ )); do\n    local c1=${str:i:1}\n    local c2=${str:i+1:1}\n\
    \    local c3=${str:i+2:1}\n    if [[ $c1 == $c2 || $c1 == $c3 || $c2 == $c3 ]];\
    \ then\n      echo \"false\"\n      return\n    fi\n  done\n  echo \"true\"\n\
    }\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=$1\n\
    \  local len=${#str}\n  local i=0\n  local j=0\n  local k=0\n  local res=true\n\
    \  for ((i=0; i<len-2; i++))\n  do\n    for ((j=i+1; j<len-1; j++))\n    do\n\
    \      for ((k=j+1; k<len; k++))\n      do\n        if [[ ${str:i:1} == ${str:j:1}\
    \ || ${str:i:1} == ${str:k:1} || ${str:j:1} == ${str:k:1} ]]\n        then\n \
    \         res=false\n        fi\n      done\n    done\n  done\n  echo $res\n}\n\
    \ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=\"\
    $1\"\n    local len=${#str}\n    if [ $len -lt 3 ]; then\n        echo \"false\"\
    \n        return\n    fi\n    for (( i=0; i<$len-2; i++ )); do\n        if [ \"\
    ${str:$i:1}\" == \"${str:$i+1:1}\" ] || [ \"${str:$i:1}\" == \"${str:$i+2:1}\"\
    \ ] || [ \"${str:$i+1:1}\" == \"${str:$i+2:1}\" ]; then\n            echo \"false\"\
    \n            return\n        fi\n    done\n    echo \"true\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  if [[ ${#1}\
    \ -lt 3 ]]; then\n    echo \"false\"\n  else\n    for (( i=0; i<${#1}-2; i++ ));\
    \ do\n      if [[ ${1:$i:1} == ${1:$i+1:1} ]] || [[ ${1:$i:1} == ${1:$i+2:1} ]]\
    \ || [[ ${1:$i+1:1} == ${1:$i+2:1} ]]; then\n        echo \"false\"\n        return\n\
    \      fi\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    if [[ ${#1}\
    \ -lt 3 ]]; then\n        echo \"false\"\n    else\n        for (( i=0; i<${#1}-2;\
    \ i++ )); do\n            if [[ ${1:$i:1} == ${1:$i+1:1} || ${1:$i:1} == ${1:$i+2:1}\
    \ || ${1:$i+1:1} == ${1:$i+2:1} ]]; then\n                echo \"false\"\n   \
    \             return\n            fi\n        done\n        echo \"true\"\n  \
    \  fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=$1\n\
    \    local len=${#str}\n    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n\
    \        return\n    fi\n    for (( i=0; i<len-2; i++ )); do\n        if [[ ${str:i:1}\
    \ == ${str:i+1:1} || ${str:i:1} == ${str:i+2:1} || ${str:i+1:1} == ${str:i+2:1}\
    \ ]]; then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=$1\n\
    \  local len=${#str}\n  if [[ $len -lt 3 ]]; then\n    echo \"false\"\n    return\n\
    \  fi\n  local i=0\n  local j=2\n  while [[ $j -lt $len ]]; do\n    if [[ ${str:$i:1}\
    \ == ${str:$((i+1)):1} ]] || [[ ${str:$i:1} == ${str:$((i+2)):1} ]] || [[ ${str:$((i+1)):1}\
    \ == ${str:$((i+2)):1} ]]; then\n      echo \"false\"\n      return\n    fi\n\
    \    i=$((i+1))\n    j=$((j+1))\n  done\n  echo \"true\"\n}\n\ncandidate() {\n\
    \    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local string=$1\n\
    \  local length=${#string}\n  if [ $length -lt 3 ]; then\n    echo \"false\"\n\
    \  else\n    local i=0\n    local j=1\n    local k=2\n    while [ $k -lt $length\
    \ ]; do\n      if [ \"${string:$i:1}\" == \"${string:$j:1}\" ] || [ \"${string:$j:1}\"\
    \ == \"${string:$k:1}\" ] || [ \"${string:$i:1}\" == \"${string:$k:1}\" ]; then\n\
    \        echo \"false\"\n        return\n      fi\n      i=$((i+1))\n      j=$((j+1))\n\
    \      k=$((k+1))\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n   \
    \ is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\"\
    \ ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\")\
    \ = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local s=$1\n\
    \    local len=${#s}\n    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n\
    \        return\n    fi\n    local i=0\n    local j=0\n    local k=0\n    for\
    \ ((i=0; i<len-2; i++)); do\n        for ((j=i+1; j<len-1; j++)); do\n       \
    \     for ((k=j+1; k<len; k++)); do\n                if [[ ${s:i:1} == ${s:j:1}\
    \ ]] || [[ ${s:i:1} == ${s:k:1} ]] || [[ ${s:j:1} == ${s:k:1} ]]; then\n     \
    \               echo \"false\"\n                    return\n                fi\n\
    \            done\n        done\n    done\n    echo \"true\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=$1\n\
    \    local len=${#str}\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ flag=0\n    if [ $len -lt 3 ]; then\n        echo \"false\"\n        return\n\
    \    fi\n    for ((i=0; i<len-2; i++)); do\n        for ((j=i+1; j<len-1; j++));\
    \ do\n            for ((k=j+1; k<len; k++)); do\n                if [ ${str:i:1}\
    \ == ${str:j:1} ] || [ ${str:i:1} == ${str:k:1} ] || [ ${str:j:1} == ${str:k:1}\
    \ ]; then\n                    flag=1\n                    break\n           \
    \     fi\n            done\n            if [ $flag -eq 1 ]; then\n           \
    \     break\n            fi\n        done\n        if [ $flag -eq 1 ]; then\n\
    \            break\n        fi\n    done\n    if [ $flag -eq 1 ]; then\n     \
    \   echo \"false\"\n    else\n        echo \"true\"\n    fi\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=$1\n\
    \  local len=${#str}\n  if [[ $len -lt 3 ]]; then\n    echo \"false\"\n    return\n\
    \  fi\n  for (( i=0; i<len-2; i++ )); do\n    local c1=${str:i:1}\n    local c2=${str:i+1:1}\n\
    \    local c3=${str:i+2:1}\n    if [[ $c1 == $c2 || $c1 == $c3 || $c2 == $c3 ]];\
    \ then\n      echo \"false\"\n      return\n    fi\n  done\n  echo \"true\"\n\
    }\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=\"\
    $1\"\n  local len=${#str}\n  local i=0\n  local j=0\n  local k=0\n  local res=true\n\
    \  if [ $len -lt 3 ]; then\n    res=false\n  else\n    for ((i=0; i<len-2; i++));\
    \ do\n      for ((j=i+1; j<len-1; j++)); do\n        for ((k=j+1; k<len; k++));\
    \ do\n          if [ \"${str:i:1}\" == \"${str:j:1}\" ] || [ \"${str:i:1}\" ==\
    \ \"${str:k:1}\" ] || [ \"${str:j:1}\" == \"${str:k:1}\" ]; then\n           \
    \ res=false\n          fi\n        done\n      done\n    done\n  fi\n  echo \"\
    $res\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=$1\n\
    \  local len=${#str}\n  if [ $len -lt 3 ]; then\n    echo \"false\"\n    return\n\
    \  fi\n  for (( i=0; i<$len-2; i++ )); do\n    if [ \"${str:$i:1}\" == \"${str:$i+1:1}\"\
    \ ] || [ \"${str:$i:1}\" == \"${str:$i+2:1}\" ] || [ \"${str:$i+1:1}\" == \"${str:$i+2:1}\"\
    \ ]; then\n      echo \"false\"\n      return\n    fi\n  done\n  echo \"true\"\
    \n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=$1\n\
    \    local len=${#str}\n    if [ $len -lt 3 ]; then\n        echo \"false\"\n\
    \        return\n    fi\n    local i=0\n    while [ $i -lt $len ]; do\n      \
    \  local j=$((i+1))\n        while [ $j -lt $len ]; do\n            if [ \"${str:$i:1}\"\
    \ == \"${str:$j:1}\" ]; then\n                echo \"false\"\n               \
    \ return\n            fi\n            j=$((j+1))\n        done\n        i=$((i+1))\n\
    \    done\n    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  if [[ ${#1}\
    \ -lt 3 ]]; then\n    echo \"false\"\n  else\n    for (( i=0; i<${#1}-2; i++ ));\
    \ do\n      if [[ ${1:$i:1} == ${1:$((i+1)):1} ]] || [[ ${1:$i:1} == ${1:$((i+2)):1}\
    \ ]] || [[ ${1:$((i+1)):1} == ${1:$((i+2)):1} ]]; then\n        echo \"false\"\
    \n        return\n      fi\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local string=$1\n\
    \  local length=${#string}\n  local result=true\n  if [[ $length -lt 3 ]]; then\n\
    \    result=false\n  else\n    for (( i=0; i<$length-2; i++ )); do\n      if [[\
    \ ${string:$i:1} == ${string:$i+1:1} ]] || [[ ${string:$i:1} == ${string:$i+2:1}\
    \ ]] || [[ ${string:$i+1:1} == ${string:$i+2:1} ]]; then\n        result=false\n\
    \        break\n      fi\n    done\n  fi\n  echo $result\n}\n\ncandidate() {\n\
    \    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    if [ ${#1}\
    \ -lt 3 ]; then\n        echo \"false\"\n    else\n        for (( i=0; i<${#1}-2;\
    \ i++ )); do\n            if [ \"${1:$i:1}\" == \"${1:$i+1:1}\" ] || [ \"${1:$i:1}\"\
    \ == \"${1:$i+2:1}\" ] || [ \"${1:$i+1:1}\" == \"${1:$i+2:1}\" ]; then\n     \
    \           echo \"false\"\n                return\n            fi\n        done\n\
    \        echo \"true\"\n    fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    if [[ ${#1}\
    \ -lt 3 ]]; then\n        echo \"false\"\n    else\n        for (( i=0; i<${#1}-2;\
    \ i++ )); do\n            if [[ ${1:$i:1} == ${1:$i+1:1} || ${1:$i:1} == ${1:$i+2:1}\
    \ || ${1:$i+1:1} == ${1:$i+2:1} ]]; then\n                echo \"false\"\n   \
    \             return\n            fi\n        done\n        echo \"true\"\n  \
    \  fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=\"\
    $1\"\n  local len=${#str}\n  if [ $len -lt 3 ]; then\n    echo \"false\"\n   \
    \ return\n  fi\n  local i=0\n  local j=0\n  local k=0\n  local c1=\"\"\n  local\
    \ c2=\"\"\n  local c3=\"\"\n  for ((i=0; i<len-2; i++)); do\n    c1=${str:i:1}\n\
    \    c2=${str:i+1:1}\n    c3=${str:i+2:1}\n    if [ \"$c1\" == \"$c2\" ] || [\
    \ \"$c1\" == \"$c3\" ] || [ \"$c2\" == \"$c3\" ]; then\n      echo \"false\"\n\
    \      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=$1\n\
    \    local len=${#str}\n    if [ $len -lt 3 ]; then\n        echo \"false\"\n\
    \        return\n    fi\n    for ((i=0; i<$len-2; i++)); do\n        local c1=${str:$i:1}\n\
    \        local c2=${str:$i+1:1}\n        local c3=${str:$i+2:1}\n        if [\
    \ \"$c1\" == \"$c2\" ] || [ \"$c1\" == \"$c3\" ] || [ \"$c2\" == \"$c3\" ]; then\n\
    \            echo \"false\"\n            return\n        fi\n    done\n    echo\
    \ \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=$1\n\
    \    local len=${#str}\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ result=\"true\"\n    if [ $len -lt 3 ]; then\n        result=\"false\"\n   \
    \ else\n        for ((i=0; i<len-2; i++)); do\n            for ((j=i+1; j<len-1;\
    \ j++)); do\n                for ((k=j+1; k<len; k++)); do\n                 \
    \   if [ \"${str:i:1}\" == \"${str:j:1}\" ] || [ \"${str:i:1}\" == \"${str:k:1}\"\
    \ ] || [ \"${str:j:1}\" == \"${str:k:1}\" ]; then\n                        result=\"\
    false\"\n                    fi\n                done\n            done\n    \
    \    done\n    fi\n    echo $result\n}\n\ncandidate() {\n    is_happy \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=$1\n\
    \    local len=${#str}\n    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n\
    \        return\n    fi\n    for (( i=0; i<$len-2; i++ )); do\n        if [[ ${str:$i:1}\
    \ == ${str:$i+1:1} ]] || [[ ${str:$i:1} == ${str:$i+2:1} ]] || [[ ${str:$i+1:1}\
    \ == ${str:$i+2:1} ]]; then\n            echo \"false\"\n            return\n\
    \        fi\n    done\n    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n  \
    \  [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\"\
    \ ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\"\
    ) = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=\"\
    $1\"\n    local len=${#str}\n    if [ $len -lt 3 ]; then\n        echo \"false\"\
    \n        return 0\n    fi\n    local i=0\n    local j=0\n    local k=0\n    for\
    \ ((i=0; i<len-2; i++)); do\n        for ((j=i+1; j<len-1; j++)); do\n       \
    \     for ((k=j+1; k<len; k++)); do\n                if [ \"${str:i:1}\" = \"\
    ${str:j:1}\" ] || [ \"${str:i:1}\" = \"${str:k:1}\" ] || [ \"${str:j:1}\" = \"\
    ${str:k:1}\" ]; then\n                    echo \"false\"\n                   \
    \ return 0\n                fi\n            done\n        done\n    done\n   \
    \ echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  if [ ${#1}\
    \ -lt 3 ]; then\n    echo \"false\"\n  else\n    for (( i=0; i<${#1}-2; i++ ));\
    \ do\n      if [ \"${1:$i:1}\" == \"${1:$i+1:1}\" ] || [ \"${1:$i:1}\" == \"${1:$i+2:1}\"\
    \ ] || [ \"${1:$i+1:1}\" == \"${1:$i+2:1}\" ]; then\n        echo \"false\"\n\
    \        return\n      fi\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local string=$1\n\
    \  local length=${#string}\n  if [ $length -lt 3 ]; then\n    echo \"false\"\n\
    \  else\n    local i=0\n    local j=1\n    local k=2\n    while [ $k -lt $length\
    \ ]; do\n      if [ ${string:$i:1} == ${string:$j:1} ] || [ ${string:$j:1} ==\
    \ ${string:$k:1} ] || [ ${string:$i:1} == ${string:$k:1} ]; then\n        echo\
    \ \"false\"\n        return\n      fi\n      i=$((i+1))\n      j=$((j+1))\n  \
    \    k=$((k+1))\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local string=$1\n\
    \  local length=${#string}\n  if [[ $length -lt 3 ]]; then\n    echo \"false\"\
    \n  else\n    for ((i=0; i<$length-2; i++)); do\n      if [[ ${string:$i:1} ==\
    \ ${string:$i+1:1} ]] || [[ ${string:$i:1} == ${string:$i+2:1} ]] || [[ ${string:$i+1:1}\
    \ == ${string:$i+2:1} ]]; then\n        echo \"false\"\n        return\n     \
    \ fi\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n    is_happy \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[\
    \ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\"\
    \ ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\"\
    ) = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  if [[ ${#1}\
    \ -lt 3 ]]; then\n    echo \"false\"\n  else\n    for (( i=0; i<${#1}-2; i++ ));\
    \ do\n      if [[ ${1:$i:1} == ${1:$i+1:1} || ${1:$i:1} == ${1:$i+2:1} || ${1:$i+1:1}\
    \ == ${1:$i+2:1} ]]; then\n        echo \"false\"\n        return\n      fi\n\
    \    done\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=\"\
    $1\"\n  local len=${#str}\n  local i=0\n  local j=0\n  local k=0\n  local result=\"\
    true\"\n  if [ $len -lt 3 ]; then\n    result=\"false\"\n  else\n    while [ $i\
    \ -lt $len ]; do\n      j=$((i+1))\n      k=$((i+2))\n      if [ $j -lt $len ]\
    \ && [ $k -lt $len ]; then\n        if [ ${str:$i:1} == ${str:$j:1} ] || [ ${str:$i:1}\
    \ == ${str:$k:1} ] || [ ${str:$j:1} == ${str:$k:1} ]; then\n          result=\"\
    false\"\n          break\n        fi\n      fi\n      i=$((i+1))\n    done\n \
    \ fi\n  echo \"$result\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"\
    aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=$1\n\
    \    local len=${#str}\n    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n\
    \        return\n    fi\n    for ((i=0; i<len-2; i++)); do\n        if [[ ${str:i:1}\
    \ == ${str:i+1:1} || ${str:i:1} == ${str:i+2:1} || ${str:i+1:1} == ${str:i+2:1}\
    \ ]]; then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=$1\n\
    \    local len=${#str}\n    if [ $len -lt 3 ]; then\n        echo \"false\"\n\
    \        return\n    fi\n    for (( i=0; i<$len-2; i++ )); do\n        if [ ${str:$i:1}\
    \ == ${str:$i+1:1} ] || [ ${str:$i:1} == ${str:$i+2:1} ] || [ ${str:$i+1:1} ==\
    \ ${str:$i+2:1} ]; then\n            echo \"false\"\n            return\n    \
    \    fi\n    done\n    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=$1\n\
    \  local len=${#str}\n  if [[ $len -lt 3 ]]; then\n    echo \"false\"\n    return\n\
    \  fi\n  for (( i=0; i<len-2; i++ )); do\n    if [[ ${str:i:1} == ${str:i+1:1}\
    \ || ${str:i:1} == ${str:i+2:1} || ${str:i+1:1} == ${str:i+2:1} ]]; then\n   \
    \   echo \"false\"\n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local string=$1\n\
    \    local len=${#string}\n    if [ $len -lt 3 ]; then\n        echo \"false\"\
    \n        return\n    fi\n    for ((i=0; i<len-2; i++)); do\n        if [ \"${string:$i:1}\"\
    \ == \"${string:$i+1:1}\" ] || [ \"${string:$i:1}\" == \"${string:$i+2:1}\" ]\
    \ || [ \"${string:$i+1:1}\" == \"${string:$i+2:1}\" ]; then\n            echo\
    \ \"false\"\n            return\n        fi\n    done\n    echo \"true\"\n}\n\n\
    candidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=$1\n\
    \    local len=${#str}\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ c1=''\n    local c2=''\n    local c3=''\n    local result='true'\n\n    if [\
    \ $len -lt 3 ]; then\n        result='false'\n    else\n        for ((i=0; i<len-2;\
    \ i++)); do\n            c1=${str:i:1}\n            c2=${str:i+1:1}\n        \
    \    c3=${str:i+2:1}\n            if [ \"$c1\" == \"$c2\" ] || [ \"$c1\" == \"\
    $c3\" ] || [ \"$c2\" == \"$c3\" ]; then\n                result='false'\n    \
    \            break\n            fi\n        done\n    fi\n\n    echo $result\n\
    }\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=$1\n\
    \  local len=${#str}\n  if [[ $len -lt 3 ]]; then\n    echo \"false\"\n    return\n\
    \  fi\n  for (( i=0; i<$len-2; i++ )); do\n    if [[ ${str:$i:1} == ${str:$i+1:1}\
    \ ]] || [[ ${str:$i:1} == ${str:$i+2:1} ]] || [[ ${str:$i+1:1} == ${str:$i+2:1}\
    \ ]]; then\n      echo \"false\"\n      return\n    fi\n  done\n  echo \"true\"\
    \n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  if [[ ${#1}\
    \ -lt 3 ]]; then\n    echo \"false\"\n  else\n    for (( i=0; i<${#1}-2; i++ ));\
    \ do\n      if [[ ${1:$i:1} == ${1:$i+1:1} ]] || [[ ${1:$i:1} == ${1:$i+2:1} ]]\
    \ || [[ ${1:$i+1:1} == ${1:$i+2:1} ]]; then\n        echo \"false\"\n        return\n\
    \      fi\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=$1\n\
    \    local len=${#str}\n    if [ $len -lt 3 ]; then\n        echo \"false\"\n\
    \        return\n    fi\n    for (( i=0; i<$len-2; i++ )); do\n        if [ ${str:$i:1}\
    \ == ${str:$i+1:1} ] || [ ${str:$i:1} == ${str:$i+2:1} ] || [ ${str:$i+1:1} ==\
    \ ${str:$i+2:1} ]; then\n            echo \"false\"\n            return\n    \
    \    fi\n    done\n    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=$1\n\
    \  local len=${#str}\n  local i=0\n  local j=0\n  local k=0\n  local c1=\"\"\n\
    \  local c2=\"\"\n  local c3=\"\"\n  local result=\"\"\n\n  if [ $len -lt 3 ];\
    \ then\n    result=\"false\"\n  else\n    while [ $i -lt $len ]; do\n      j=$((i+1))\n\
    \      k=$((i+2))\n      c1=${str:$i:1}\n      c2=${str:$j:1}\n      c3=${str:$k:1}\n\
    \      if [ \"$c1\" = \"$c2\" ] || [ \"$c1\" = \"$c3\" ] || [ \"$c2\" = \"$c3\"\
    \ ]; then\n        result=\"false\"\n        break\n      fi\n      i=$((i+1))\n\
    \    done\n    if [ -z \"$result\" ]; then\n      result=\"true\"\n    fi\n  fi\n\
    \  echo \"$result\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    if [[ ${#1}\
    \ -lt 3 ]]; then\n        echo \"false\"\n    else\n        for (( i=0; i<${#1}-2;\
    \ i++ )); do\n            if [[ ${1:$i:1} == ${1:$i+1:1} || ${1:$i:1} == ${1:$i+2:1}\
    \ || ${1:$i+1:1} == ${1:$i+2:1} ]]; then\n                echo \"false\"\n   \
    \             return\n            fi\n        done\n        echo \"true\"\n  \
    \  fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=$1\n\
    \    local len=${#str}\n    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n\
    \        return\n    fi\n    for ((i=0; i<len-2; i++)); do\n        local c1=${str:i:1}\n\
    \        local c2=${str:i+1:1}\n        local c3=${str:i+2:1}\n        if [[ $c1\
    \ == $c2 || $c1 == $c3 || $c2 == $c3 ]]; then\n            echo \"false\"\n  \
    \          return\n        fi\n    done\n    echo \"true\"\n}\n\ncandidate() {\n\
    \    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  # write your\
    \ code here\n  return 0\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"\
    aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=$1\n\
    \  local len=${#str}\n  local i=0\n  local j=0\n  local k=0\n  local result=\"\
    true\"\n  if [ $len -lt 3 ]; then\n    result=\"false\"\n  else\n    for ((i=0;\
    \ i<len-2; i++)); do\n      for ((j=i+1; j<len-1; j++)); do\n        for ((k=j+1;\
    \ k<len; k++)); do\n          if [ ${str:i:1} == ${str:j:1} ] || [ ${str:i:1}\
    \ == ${str:k:1} ] || [ ${str:j:1} == ${str:k:1} ]; then\n            result=\"\
    false\"\n          fi\n        done\n      done\n    done\n  fi\n  echo $result\n\
    }\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=$1\n\
    \    local len=${#str}\n    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n\
    \        return\n    fi\n    for (( i=0; i<len-2; i++ )); do\n        local c1=${str:i:1}\n\
    \        local c2=${str:i+1:1}\n        local c3=${str:i+2:1}\n        if [[ $c1\
    \ == $c2 || $c1 == $c3 || $c2 == $c3 ]]; then\n            echo \"false\"\n  \
    \          return\n        fi\n    done\n    echo \"true\"\n}\n\ncandidate() {\n\
    \    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=$1\n\
    \    local len=${#str}\n    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n\
    \        return\n    fi\n    for (( i=0; i<len-2; i++ )); do\n        if [[ ${str:i:1}\
    \ == ${str:i+1:1} || ${str:i:1} == ${str:i+2:1} || ${str:i+1:1} == ${str:i+2:1}\
    \ ]]; then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=$1\n\
    \    local len=${#str}\n    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n\
    \        return\n    fi\n    for ((i=0; i<$len-2; i++)); do\n        if [[ ${str:$i:1}\
    \ == ${str:$i+1:1} || ${str:$i:1} == ${str:$i+2:1} || ${str:$i+1:1} == ${str:$i+2:1}\
    \ ]]; then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=$1\n\
    \    local len=${#str}\n    if [ $len -lt 3 ]; then\n        echo \"false\"\n\
    \        return\n    fi\n    local i=0\n    while [ $i -lt $len ]; do\n      \
    \  local cur=${str:$i:3}\n        if [ ${#cur} -lt 3 ]; then\n            echo\
    \ \"true\"\n            return\n        fi\n        if [ ${cur:0:1} = ${cur:1:1}\
    \ ] || [ ${cur:0:1} = ${cur:2:1} ] || [ ${cur:1:1} = ${cur:2:1} ]; then\n    \
    \        echo \"false\"\n            return\n        fi\n        let i++\n   \
    \ done\n    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"\
    aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  if [ ${#1}\
    \ -lt 3 ]; then\n    echo \"false\"\n  else\n    for (( i=0; i<${#1}-2; i++ ));\
    \ do\n      if [ \"${1:$i:1}\" == \"${1:$((i+1)):1}\" ] || [ \"${1:$i:1}\" ==\
    \ \"${1:$((i+2)):1}\" ] || [ \"${1:$((i+1)):1}\" == \"${1:$((i+2)):1}\" ]; then\n\
    \        echo \"false\"\n        return\n      fi\n    done\n    echo \"true\"\
    \n  fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  if [[ ${#1}\
    \ -lt 3 ]]; then\n    echo \"false\"\n  else\n    for ((i=0; i<${#1}-2; i++));\
    \ do\n      if [[ ${1:i:1} == ${1:i+1:1} || ${1:i:1} == ${1:i+2:1} || ${1:i+1:1}\
    \ == ${1:i+2:1} ]]; then\n        echo \"false\"\n        return\n      fi\n \
    \   done\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=$1\n\
    \  local len=${#str}\n  local i=0\n  local j=0\n  local k=0\n  local res=0\n \
    \ local char=''\n  local char2=''\n  local char3=''\n  local char4=''\n  local\
    \ char5=''\n  local char6=''\n  local char7=''\n  local char8=''\n  local char9=''\n\
    \  local char10=''\n  local char11=''\n  local char12=''\n  local char13=''\n\
    \  local char14=''\n  local char15=''\n  local char16=''\n  local char17=''\n\
    \  local char18=''\n  local char19=''\n  local char20=''\n  local char21=''\n\
    \  local char22=''\n  local char23=''\n  local char24=''\n  local char25=''\n\
    \  local char26=''\n  local char27=''\n  local char28=''\n  local char29=''\n\
    \  local char30=''\n  local char31=''\n  local char32=''\n  local char33=''\n\
    \  local char34=''\n  local char35=''\n  local char36=''\n  local char37=''\n\
    \  local char38=''\n  local char39=''\n  local char40=''\n  local char41=''\n\
    \  local char42=''\n  local char43=''\n  local char44=''\n  local char45=''\n\
    \  local char46=''\n  local char47=''\n  local char48=''\n  local char49=''\n\
    \  local char50=''\n  local char51=''\n  local char52=''\n  local char53=''\n\
    \  local char54=''\n  local char55=''\n  local char56=''\n  local char57=''\n\
    \  local char58=''\n  local char59=''\n  local char60=''\n  local char61=''\n\
    \  local char62=''\n  local char63=''\n  local char64=''\n  local char65=''\n\
    \  local char66=''\n  local char67=''\n  local char68\n}\n\ncandidate() {\n  \
    \  is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    # Write\
    \ your code here\n    # To print results to the standard output you can use echo\n\
    \    # To debug: echo \"Debug messages...\" >&2\n    echo \"false\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local string=$1\n\
    \  local len=${#string}\n  if [ $len -lt 3 ]; then\n    echo \"false\"\n    return\n\
    \  fi\n  local i=0\n  while [ $i -lt $len ]; do\n    local j=$((i+1))\n    local\
    \ k=$((i+2))\n    if [ $j -lt $len ] && [ $k -lt $len ]; then\n      if [ \"${string:$i:1}\"\
    \ == \"${string:$j:1}\" ] || [ \"${string:$i:1}\" == \"${string:$k:1}\" ] || [\
    \ \"${string:$j:1}\" == \"${string:$k:1}\" ]; then\n        echo \"false\"\n \
    \       return\n      fi\n    fi\n    i=$((i+1))\n  done\n  echo \"true\"\n}\n\
    \ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  if [ ${#1}\
    \ -lt 3 ]; then\n    echo \"false\"\n  else\n    for (( i=0; i<${#1}-2; i++ ));\
    \ do\n      if [ \"${1:$i:1}\" == \"${1:$i+1:1}\" ] || [ \"${1:$i:1}\" == \"${1:$i+2:1}\"\
    \ ] || [ \"${1:$i+1:1}\" == \"${1:$i+2:1}\" ]; then\n        echo \"false\"\n\
    \        return\n      fi\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  local str=$1\n\
    \  local len=${#str}\n  if [ $len -lt 3 ]; then\n    echo \"false\"\n    return\n\
    \  fi\n  for (( i=0; i<$len-2; i++ )); do\n    if [ \"${str:$i:1}\" == \"${str:$i+1:1}\"\
    \ ] || [ \"${str:$i:1}\" == \"${str:$i+2:1}\" ] || [ \"${str:$i+1:1}\" == \"${str:$i+2:1}\"\
    \ ]; then\n      echo \"false\"\n      return\n    fi\n  done\n  echo \"true\"\
    \n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    if [ ${#1}\
    \ -lt 3 ]; then\n        echo \"false\"\n    else\n        for i in $(seq 0 2\
    \ $((${#1} - 1))); do\n            if [ \"${1:$i:1}\" == \"${1:$(($i + 1)):1}\"\
    \ ]; then\n                echo \"false\"\n                return\n          \
    \  fi\n        done\n        echo \"true\"\n    fi\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  if [[ ${#1}\
    \ -lt 3 ]]; then\n    echo \"false\"\n  else\n    for (( i=0; i<${#1}-2; i++ ));\
    \ do\n      if [[ ${1:$i:1} == ${1:$i+1:1} ]] || [[ ${1:$i:1} == ${1:$i+2:1} ]]\
    \ || [[ ${1:$i+1:1} == ${1:$i+2:1} ]]; then\n        echo \"false\"\n        return\n\
    \      fi\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local s=$1\n\
    \    local len=${#s}\n    if [ $len -lt 3 ]; then\n        echo \"false\"\n  \
    \      return\n    fi\n    for (( i=0; i<$len-2; i++ )); do\n        local c1=${s:$i:1}\n\
    \        local c2=${s:$i+1:1}\n        local c3=${s:$i+2:1}\n        if [ \"$c1\"\
    \ == \"$c2\" ] || [ \"$c1\" == \"$c3\" ] || [ \"$c2\" == \"$c3\" ]; then\n   \
    \         echo \"false\"\n            return\n        fi\n    done\n    echo \"\
    true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=$1\n\
    \    local len=${#str}\n    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n\
    \        return\n    fi\n    for ((i=0; i<len-2; i++)); do\n        if [[ ${str:i:1}\
    \ == ${str:i+1:1} || ${str:i:1} == ${str:i+2:1} || ${str:i+1:1} == ${str:i+2:1}\
    \ ]]; then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n  if [[ ${#1}\
    \ -lt 3 ]]; then\n    echo \"false\"\n  else\n    for (( i=0; i<${#1}-2; i++ ));\
    \ do\n      if [[ ${1:$i:1} == ${1:$i+1:1} ]] || [[ ${1:$i:1} == ${1:$i+2:1} ]]\
    \ || [[ ${1:$i+1:1} == ${1:$i+2:1} ]]; then\n        echo \"false\"\n        return\n\
    \      fi\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071064
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local string=$1\n\
    \    local length=${#string}\n    if [ $length -lt 3 ]; then\n        echo \"\
    false\"\n        return\n    fi\n    for (( i=0; i<$length-2; i++ )); do\n   \
    \     if [ \"${string:$i:1}\" == \"${string:$i+1:1}\" ] || [ \"${string:$i:1}\"\
    \ == \"${string:$i+2:1}\" ] || [ \"${string:$i+1:1}\" == \"${string:$i+2:1}\"\
    \ ]; then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660071065
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is hapsh or not.\n# A string is hapsh if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy a)\n\
    # \"false\"\n# >>> $(is_happy aa)\n# \"false\"\n# >>> $(is_happy abcd)\n# \"true\"\
    \n# >>> $(is_happy aabb)\n# \"false\"\n# >>> $(is_happy adb)\n# \"true\"\n# >>>\
    \ $(is_happy xyy)\n# \"false\"\n#\n# $1 is a string\nis_happy() {\n    local str=$1\n\
    \    local len=${#str}\n    if [[ $len -lt 3 ]]; then\n        echo \"false\"\n\
    \        return\n    fi\n    local i=0\n    while [[ $i -lt $len ]]; do\n    \
    \    local j=$((i+1))\n        while [[ $j -lt $len ]]; do\n            local\
    \ k=$((j+1))\n            while [[ $k -lt $len ]]; do\n                if [[ ${str:$i:1}\
    \ == ${str:$j:1} || ${str:$i:1} == ${str:$k:1} || ${str:$j:1} == ${str:$k:1} ]];\
    \ then\n                    echo \"false\"\n                    return\n     \
    \           fi\n                k=$((k+1))\n            done\n            j=$((j+1))\n\
    \        done\n        i=$((i+1))\n    done\n    echo \"true\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660071065

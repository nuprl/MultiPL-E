language: sh
name: HumanEval_97_multiply
results:
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  # your code here\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n\
    \    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"\
    412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate\
    \ \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( $(echo $1 | sed 's/.//') * $(echo $2 | sed 's/.//') ))\n}\n\n\
    candidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n\
    \    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"\
    -15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo \"$1\" | grep -q '^-' && sign1=-1 || sign1=1\n  echo \"$2\" | grep\
    \ -q '^-' && sign2=-1 || sign2=1\n  echo \"$1\" | grep -q '^-' && num1=$(echo\
    \ \"$1\" | sed 's/^-//') || num1=\"$1\"\n  echo \"$2\" | grep -q '^-' && num2=$(echo\
    \ \"$2\" | sed 's/^-//') || num2=\"$2\"\n  echo \"$(( $(echo \"$num1\" | sed 's/.$//')\
    \ * $(echo \"$num2\" | sed 's/.$//') ))\"\n}\n\ncandidate() {\n    multiply \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\"\
    \ ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\"\
    \ \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[\
    \ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") =\
    \ \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    local a=$1\n    local b=$2\n    local result=$((a%10 * b%10))\n    echo\
    \ $result\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"\
    28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate\
    \ \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n\
    \    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  local -i a=${1: -1}\n  local -i b=${2: -1}\n  echo \"$((a * b))\"\n}\n\n\
    candidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n\
    \    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"\
    -15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo \"$(( $(echo $1 | sed 's/.//') * $(echo $2 | sed 's/.//') ))\"\n}\n\
    \ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n\
    \    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"\
    -15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo \"$1 * $2\" | bc | sed 's/\\(.*\\)./\\1/'\n}\n\ncandidate() {\n\
    \    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"\
    412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate\
    \ \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( ${1: -1} * ${2: -1} ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo \"$(( ${1: -1} * ${2: -1} ))\"\n}\n\ncandidate() {\n    multiply \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\"\
    \ ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\"\
    \ \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[\
    \ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") =\
    \ \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  # Write your code here\n  echo $(( ${1: -1} * ${2: -1} ))\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( $(echo $1 | sed 's/.*\\(.\\)$/\\1/') * $(echo $2 | sed 's/.*\\\
    (.\\)$/\\1/') ))\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\"\
    \ \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[\
    \ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") =\
    \ \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 2
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo \"$1\" | grep -Eq '^-?[0-9]+$' || return 1\n  echo \"$2\" | grep -Eq\
    \ '^-?[0-9]+$' || return 1\n  echo \"$1\" | grep -Eq '^-?0+$' && echo 0 && return\
    \ 0\n  echo \"$2\" | grep -Eq '^-?0+$' && echo 0 && return 0\n  echo \"$1\" |\
    \ grep -Eq '^-0+$' && echo 0 && return 0\n  echo \"$2\" | grep -Eq '^-0+$' &&\
    \ echo 0 && return 0\n  echo \"$1\" | grep -Eq '^-?[1-9][0-9]*$' || return 1\n\
    \  echo \"$2\" | grep -Eq '^-?[1-9][0-9]*$' || return 1\n  echo \"$1\" | grep\
    \ -Eq '^-?[1-9][0-9]*$' || return 1\n  echo \"$2\" | grep -Eq '^-?[1-9][0-9]*$'\
    \ || return 1\n  echo \"$1\" | grep -Eq '^-?[1-9][0-9]*$' || return 1\n  echo\
    \ \"$2\" | grep -Eq '^-?[1-9][0-9]*$' || return 1\n  echo \"$1\" | grep -Eq '^-?[1-9][0-9]*$'\
    \ || return 1\n  echo \"$2\" | grep -Eq '^-?[1-9][0-9]*$' || return 1\n  echo\
    \ \"$1\" | grep -Eq '^-?[1-9][0-9]*$' || return 1\n  echo \"$2\" | grep -Eq '^-?[1-9][0-9]*$'\
    \ || return 1\n  echo \"$1\" | grep -Eq '^-?[1-9][0-9]*$' || return 1\n  echo\
    \ \"$2\" | grep -Eq '^-?[1-9][0-9]*$' || return 1\n  echo \"$\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptiagt99b.sh: line 52: unexpected EOF while looking for matching
    `"''

    /tmp/tmptiagt99b.sh: line 56: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  local a=$1\n  local b=$2\n  local product=0\n  local a_unit=0\n  local\
    \ b_unit=0\n  local a_unit_str=\"\"\n  local b_unit_str=\"\"\n  local product_str=\"\
    \"\n  local product_unit=0\n  local product_unit_str=\"\"\n  local a_unit_str_len=0\n\
    \  local b_unit_str_len=0\n  local product_str_len=0\n  local i=0\n  local j=0\n\
    \  local k=0\n  local a_unit_str_len_minus_one=0\n  local b_unit_str_len_minus_one=0\n\
    \  local product_str_len_minus_one=0\n  local a_unit_str_len_minus_one_str=\"\"\
    \n  local b_unit_str_len_minus_one_str=\"\"\n  local product_str_len_minus_one_str=\"\
    \"\n  local a_unit_str_len_minus_one_str_len=0\n  local b_unit_str_len_minus_one_str_len=0\n\
    \  local product_str_len_minus_one_str_len=0\n  local a_unit_str_len_minus_one_str_len_minus_one=0\n\
    \  local b_unit_str_len_minus_one_str_len_minus_one=0\n  local product_str_len_minus_one_str_len_minus_one=0\n\
    \  local a_unit_str_len_minus_one_str_len_minus_one_str=\"\"\n  local b_unit_str_len_minus_one_str_len_minus_one_str=\"\
    \"\n  local product_str_len_minus_one_str_len_minus_one_str=\"\"\n  local a_unit_str_len_minus_one_str_len_minus_one_str_len=0\n\
    \  local b_unit_str_len_minus_one_str_len_minus_one_str_len=0\n  local product_str_len_minus_one_str_len_minus_one_str_len=0\n\
    \  local a_unit\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\"\
    \ \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[\
    \ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") =\
    \ \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  local a=$1\n  local b=$2\n  local product=$((a * b))\n  local unit_digit=$((product\
    \ % 10))\n  echo $unit_digit\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate\
    \ \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n\
    \    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"\
    67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(($1 % 10 * $2 % 10))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  # Write your code here\n  echo \"$(( $1 % 10 * $2 % 10 ))\"\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    local a=$1\n    local b=$2\n    local product=$((a * b))\n    local unit_digit=$((product\
    \ % 10))\n    echo \"$unit_digit\"\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 2
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  # Write your code here\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\"\
    \ \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[\
    \ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") =\
    \ \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphpnhyqnn.sh: line 188: syntax error near unexpected token `}''

    /tmp/tmphpnhyqnn.sh: line 188: `}''

    '
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo \"$1\" | grep -q '^-' && sign1=\"-\" || sign1=\"+\"\n  echo \"$2\"\
    \ | grep -q '^-' && sign2=\"-\" || sign2=\"+\"\n  echo \"$1\" | grep -q '^-' &&\
    \ num1=\"${1:1}\" || num1=\"$1\"\n  echo \"$2\" | grep -q '^-' && num2=\"${2:1}\"\
    \ || num2=\"$2\"\n  echo \"$((num1 % 10 * num2 % 10))\"\n}\n\ncandidate() {\n\
    \    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"\
    412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate\
    \ \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$((a%10))\n    local d=$((b%10))\n\
    \    echo $((c*d))\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\"\
    \ \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[\
    \ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") =\
    \ \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(($1 % 10 * $2 % 10))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    local a=${1: -1}\n    local b=${2: -1}\n    echo $((a * b))\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    # Write your code here\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    # Write your code here\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $(echo $1 | sed 's/.*\\(.\\)$/\\1/') * $(echo $2 | sed 's/.*\\\
    (.\\)$/\\1/') ))\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\"\
    \ \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[\
    \ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") =\
    \ \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo \"$(( $1 % 10 * $2 % 10 ))\"\n}\n\ncandidate() {\n    multiply \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\"\
    \ ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\"\
    \ \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[\
    \ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") =\
    \ \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 2
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  # Write your code here\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\"\
    \ \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[\
    \ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") =\
    \ \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphpnhyqnn.sh: line 188: syntax error near unexpected token `}''

    /tmp/tmphpnhyqnn.sh: line 188: `}''

    '
  stdout: ''
  timestamp: 1660010120
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    local a=$1\n    local b=$2\n    local result=0\n    local a_unit=${a:\
    \ -1}\n    local b_unit=${b: -1}\n    if [[ $a_unit -eq 0 || $b_unit -eq 0 ]];\
    \ then\n        result=0\n    else\n        result=$((a_unit * b_unit))\n    fi\n\
    \    echo \"$result\"\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate\
    \ \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n\
    \    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"\
    67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    # Write your code here\n    echo $(( $(echo $1 | sed 's/.*\\(.\\)/\\\
    1/') * $(echo $2 | sed 's/.*\\(.\\)/\\1/') ))\n}\n\ncandidate() {\n    multiply\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"\
    16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"\
    2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $(echo $1 | sed 's/.*\\(.\\)$/\\1/') * $(echo $2 | sed 's/.*\\\
    (.\\)$/\\1/') ))\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\"\
    \ \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[\
    \ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") =\
    \ \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$((a%10))\n  local d=$((b%10))\n  echo\
    \ $((c*d))\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"\
    28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate\
    \ \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n\
    \    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  # Your code here\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n\
    \    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"\
    412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate\
    \ \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  # Get the last digit of each number\n  local last_digit_1=$(echo $1 | tail\
    \ -c 2)\n  local last_digit_2=$(echo $2 | tail -c 2)\n  # Multiply the last digits\n\
    \  local result=$((last_digit_1 * last_digit_2))\n  # Get the last digit of the\
    \ result\n  echo $result | tail -c 2\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  local a=$1\n  local b=$2\n  local result=$((a * b))\n  echo \"${result:\
    \ -1}\"\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"\
    28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate\
    \ \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n\
    \    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo \"$1\" | grep -q '^-' && sign1=-1 || sign1=1\n  echo \"$2\" | grep\
    \ -q '^-' && sign2=-1 || sign2=1\n  echo \"$(( $(echo \"$1\" | sed 's/-//') *\
    \ $(echo \"$2\" | sed 's/-//') * sign1 * sign2 ))\"\n}\n\ncandidate() {\n    multiply\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"\
    16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"\
    2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    # Write your code here\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  # Your code here\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n\
    \    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"\
    412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate\
    \ \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo \"$1\" | grep -Eq '^-?[0-9]+$' || return 1\n    echo \"$2\" | grep\
    \ -Eq '^-?[0-9]+$' || return 1\n    echo $(( $(echo \"$1\" | sed 's/^-//') % 10\
    \ * $(echo \"$2\" | sed 's/^-//') % 10 ))\n}\n\ncandidate() {\n    multiply \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\"\
    \ ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\"\
    \ \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[\
    \ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") =\
    \ \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo \"$1\" | grep -Eq '^-?[0-9]+$' || return 1\n    echo \"$2\" | grep\
    \ -Eq '^-?[0-9]+$' || return 1\n    echo $(( $(echo \"$1\" | sed 's/-//') % 10\
    \ * $(echo \"$2\" | sed 's/-//') % 10 ))\n}\n\ncandidate() {\n    multiply \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\"\
    \ ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\"\
    \ \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[\
    \ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") =\
    \ \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo \"$1\" | grep -q '^-' && sign1=\"-\" || sign1=\"+\"\n    echo \"\
    $2\" | grep -q '^-' && sign2=\"-\" || sign2=\"+\"\n    echo \"$1\" | grep -q '^-'\
    \ && num1=\"${1:1}\" || num1=\"$1\"\n    echo \"$2\" | grep -q '^-' && num2=\"\
    ${2:1}\" || num2=\"$2\"\n    echo $(( $(echo \"$num1\" | sed 's/./& /g') * $(echo\
    \ \"$num2\" | sed 's/./& /g') )) | sed 's/ //g'\n}\n\ncandidate() {\n    multiply\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"\
    16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"\
    2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3tszwfhb.sh: line 22: 1 4 8  * 4 1 2  : syntax error in expression
    (error token is "4 8  * 4 1 2  ")

    '
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(($1 % 10 * $2 % 10))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(($1 % 10 * $2 % 10))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  local a=$1\n  local b=$2\n  local product=$((a * b))\n  echo \"${product:\
    \ -1}\"\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"\
    28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate\
    \ \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n\
    \    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  # Write your code here\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(($1 % 10 * $2 % 10))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  # Write your code here\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  if [[ $1 == 0 || $2 == 0 ]]; then\n    echo \"0\"\n  else\n    echo $((\
    \ ($1 % 10) * ($2 % 10) ))\n  fi\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[\
    \ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\"\
    ) = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( $(echo $1 | sed 's/.$//') * $(echo $2 | sed 's/.$//') ))\n}\n\n\
    candidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n\
    \    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"\
    -15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(($1 % 10 * $2 % 10))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( ${1: -1} * ${2: -1} ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  # Write your code here\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo \"$1\" | grep -Eq '^-?[0-9]+$' || return 1\n  echo \"$2\" | grep -Eq\
    \ '^-?[0-9]+$' || return 1\n  echo \"$(( $1 % 10 * $2 % 10 ))\"\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    # Write your code here\n    echo \"$(( $1 % 10 * $2 % 10 ))\"\n}\n\n\
    candidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n\
    \    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"\
    -15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( $(echo $1 | sed 's/.*\\(.\\)$/\\1/') * $(echo $2 | sed 's/.*\\\
    (.\\)$/\\1/') ))\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\"\
    \ \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[\
    \ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") =\
    \ \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  local a=$1\n  local b=$2\n  echo $((a % 10 * b % 10))\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( ${1: -1} * ${2: -1} ))\n}\n\ncandidate() {\n    multiply \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\"\
    \ ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\"\
    \ \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[\
    \ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") =\
    \ \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  # Write your code here\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo \"$1\" | grep -Eq '^-?[0-9]+$' || return 1\n    echo \"$2\" | grep\
    \ -Eq '^-?[0-9]+$' || return 1\n    echo $(( $(echo \"$1\" | sed 's/-//') % 10\
    \ * $(echo \"$2\" | sed 's/-//') % 10 ))\n}\n\ncandidate() {\n    multiply \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\"\
    \ ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\"\
    \ \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[\
    \ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") =\
    \ \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $(echo $1 | sed 's/.*\\(.\\)$/\\1/') * $(echo $2 | sed 's/.*\\\
    (.\\)$/\\1/') ))\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\"\
    \ \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[\
    \ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") =\
    \ \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $((${1: -1} * ${2: -1}))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( ${1: -1} * ${2: -1} ))\n}\n\ncandidate() {\n    multiply \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\"\
    \ ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\"\
    \ \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[\
    \ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") =\
    \ \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $((($1 % 10) * ($2 % 10)))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    # Write your code here\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $(echo $1 | sed 's/.$//') * $(echo $2 | sed 's/.$//') ))\n}\n\
    \ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n\
    \    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"\
    -15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010121
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$((a%10 * b%10))\n  echo $c\n}\n\n\
    candidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n\
    \    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"\
    -15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( ${1: -1} * ${2: -1} ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo \"$(( $1 % 10 * $2 % 10 ))\"\n}\n\ncandidate() {\n    multiply \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\"\
    \ ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\"\
    \ \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[\
    \ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") =\
    \ \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(($1 % 10 * $2 % 10))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    # Write your code here\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo \"$(( $1 % 10 * $2 % 10 ))\"\n}\n\ncandidate() {\n    multiply \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\"\
    \ ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\"\
    \ \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[\
    \ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") =\
    \ \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo \"$(( $1 % 10 * $2 % 10 ))\"\n}\n\ncandidate() {\n    multiply \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\"\
    \ ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\"\
    \ \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[\
    \ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") =\
    \ \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( ${1: -1} * ${2: -1} ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $(echo $1 | sed 's/.*\\(.\\)$/\\1/') * $(echo $2 | sed 's/.*\\\
    (.\\)$/\\1/') ))\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\"\
    \ \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[\
    \ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") =\
    \ \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo \"$(( $1 % 10 * $2 % 10 ))\"\n}\n\ncandidate() {\n    multiply \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\"\
    \ ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\"\
    \ \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[\
    \ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") =\
    \ \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  local a=$1\n  local b=$2\n  local product=$((a * b))\n  local unit_digit=$((product\
    \ % 10))\n  echo $unit_digit\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate\
    \ \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n\
    \    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"\
    67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo \"$(( $1 % 10 * $2 % 10 ))\"\n}\n\ncandidate() {\n    multiply \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\"\
    \ ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\"\
    \ \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[\
    \ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") =\
    \ \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  # Write your code here\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  # Write your code here\n  echo \"$1\" | grep -q '^-' && sign1=- || sign1=+\n\
    \  echo \"$2\" | grep -q '^-' && sign2=- || sign2=+\n  echo \"$1\" | grep -q '^-'\
    \ && num1=$(echo \"$1\" | sed 's/^-//') || num1=$1\n  echo \"$2\" | grep -q '^-'\
    \ && num2=$(echo \"$2\" | sed 's/^-//') || num2=$2\n  echo \"$num1\" | grep -q\
    \ '^0' && num1=$(echo \"$num1\" | sed 's/^0//')\n  echo \"$num2\" | grep -q '^0'\
    \ && num2=$(echo \"$num2\" | sed 's/^0//')\n  if [ \"$num1\" == \"\" ] || [ \"\
    $num2\" == \"\" ]; then\n    echo \"0\"\n  else\n    echo \"$num1\" | grep -q\
    \ '^[0-9]$' && num1=$(echo \"$num1\" | sed 's/^0//')\n    echo \"$num2\" | grep\
    \ -q '^[0-9]$' && num2=$(echo \"$num2\" | sed 's/^0//')\n    num1=$(echo \"$num1\"\
    \ | sed 's/.*\\(.\\)$/\\1/')\n    num2=$(echo \"$num2\" | sed 's/.*\\(.\\)$/\\\
    1/')\n    if [ \"$sign1\" == \"-\" ] && [ \"$sign2\" == \"-\" ]; then\n      echo\
    \ \"$((num1 * num2))\"\n    elif [ \"$sign1\" == \"-\" ] || [ \"$sign2\" == \"\
    -\" ]; then\n      echo \"-$((num1 * num2))\"\n    else\n      echo \"$((num1\
    \ * num2))\"\n    fi\n  fi\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate\
    \ \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n\
    \    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"\
    67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010121
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(($1 % 10 * $2 % 10))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $((($1 % 10) * ($2 % 10)))\n}\n\ncandidate() {\n    multiply \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\"\
    \ ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\"\
    \ \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[\
    \ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") =\
    \ \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  # Write your code here\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo \"$1 * $2\" | bc\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate\
    \ \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n\
    \    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"\
    67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  local a=$1\n  local b=$2\n  local product=$((a*b))\n  local unit_digit=$((product%10))\n\
    \  echo $unit_digit\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\"\
    \ \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[\
    \ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") =\
    \ \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    # Write your code here\n    echo \"$(( $1 % 10 * $2 % 10 ))\"\n}\n\n\
    candidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n\
    \    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"\
    -15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$((a % 10))\n  local d=$((b % 10))\n\
    \  echo $((c * d))\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\"\
    \ \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[\
    \ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") =\
    \ \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010121
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  local product=$(( $1 * $2 ))\n  echo \"${product: -1}\"\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $(echo $1 | sed 's/.*\\(.\\)$/\\1/') * $(echo $2 | sed 's/.*\\\
    (.\\)$/\\1/') ))\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\"\
    \ \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[\
    \ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") =\
    \ \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    local a=$1\n    local b=$2\n    local a_unit=$(echo $a | sed 's/.*\\\
    (.\\)$/\\1/')\n    local b_unit=$(echo $b | sed 's/.*\\(.\\)$/\\1/')\n    echo\
    \ $((a_unit * b_unit))\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate\
    \ \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n\
    \    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"\
    67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010121
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    # Write your code here\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$((a%10 * b%10))\n  echo $c\n}\n\n\
    candidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n\
    \    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"\
    -15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo \"$1\" | grep -q '^-\\?[0-9]\\+$' || return 1\n    echo \"$2\" |\
    \ grep -q '^-\\?[0-9]\\+$' || return 1\n    echo \"$1\" | grep -q '^-' && echo\
    \ \"$2\" | grep -q '^-' && echo \"$1\" | sed 's/^-//' | sed 's/^-//' | sed 's/.$/*/'\
    \ | bc | sed 's/^0*//' | sed 's/^$/0/'\n    echo \"$1\" | grep -q '^-' && echo\
    \ \"$2\" | grep -q '^-' || echo \"$1\" | sed 's/^-//' | sed 's/.$/*/' | bc | sed\
    \ 's/^0*//' | sed 's/^$/0/'\n    echo \"$1\" | grep -q '^-' || echo \"$2\" | grep\
    \ -q '^-' && echo \"$1\" | sed 's/.$/*/' | bc | sed 's/^0*//' | sed 's/^$/0/'\n\
    \    echo \"$1\" | grep -q '^-' || echo \"$2\" | grep -q '^-' || echo \"$1\" |\
    \ sed 's/.$/*/' | bc | sed 's/^0*//' | sed 's/^$/0/'\n}\n\ncandidate() {\n   \
    \ multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\"\
    ) = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate\
    \ \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 2: syntax error

    (standard_in) 2: syntax error

    '
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  # Write your code here\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$((a % 10))\n    local d=$((b\
    \ % 10))\n    echo $((c * d))\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[\
    \ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\"\
    ) = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010121
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  # your code here\n  echo $(($1 % 10 * $2 % 10))\n}\n\ncandidate() {\n \
    \   multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"\
    412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate\
    \ \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    local x=$1\n    local y=$2\n    local product=$((x * y))\n    local unit_digit=$((product\
    \ % 10))\n    echo $unit_digit\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[\
    \ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\"\
    ) = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(($1 % 10 * $2 % 10))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 0
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $(echo $1 | sed 's/.*\\(.\\)$/\\1/') * $(echo $2 | sed 's/.*\\\
    (.\\)$/\\1/') ))\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\"\
    \ \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[\
    \ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") =\
    \ \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(($1 % 10 * $2 % 10))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  # Write your code here\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  # your code here\n  echo $((($1 % 10) * ($2 % 10)))\n}\n\ncandidate() {\n\
    \    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"\
    412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate\
    \ \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010121
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n\
    \    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    # Write your code here\n    echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate()\
    \ {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\"\
    \ \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[\
    \ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\"\
    ) = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate\
    \ \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(( $1 % 10 * $2 % 10 ))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    # Write your code here\n    echo \"$1\" | grep -q '-' && sign1=1 || sign1=0\n\
    \    echo \"$2\" | grep -q '-' && sign2=1 || sign2=0\n    if [ $sign1 -eq 1 ];\
    \ then\n        num1=$(echo \"$1\" | sed 's/-//')\n    else\n        num1=$1\n\
    \    fi\n    if [ $sign2 -eq 1 ]; then\n        num2=$(echo \"$2\" | sed 's/-//')\n\
    \    else\n        num2=$2\n    fi\n    if [ $sign1 -eq 1 -a $sign2 -eq 1 ]; then\n\
    \        sign=0\n    elif [ $sign1 -eq 1 -o $sign2 -eq 1 ]; then\n        sign=1\n\
    \    else\n        sign=0\n    fi\n    result=$(($(echo \"$num1\" | sed 's/.//')\
    \ * $(echo \"$num2\" | sed 's/.//')))\n    if [ $sign -eq 1 ]; then\n        echo\
    \ \"-$result\"\n    else\n        echo \"$result\"\n    fi\n}\n\ncandidate() {\n\
    \    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"\
    412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate\
    \ \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n\
    \    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\"\
    ) = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo $(($1 % 10 * $2 % 10))\n}\n\ncandidate() {\n    multiply \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n \
    \   [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"\
    1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate\
    \ \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n\
    \    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") =\
    \ \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$(($a % 10))\n  local d=$(($b % 10))\n\
    \  echo $(($c * $d))\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\"\
    \ \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[\
    \ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") =\
    \ \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010121
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  echo \"$(( $1 % 10 * $2 % 10 ))\"\n}\n\ncandidate() {\n    multiply \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\"\
    \ ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\"\
    \ \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[\
    \ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") =\
    \ \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010120
- exit_code: 1
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n    echo \"$1 * $2\" | bc | tail -c 2\n}\n\ncandidate() {\n    multiply \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"148\" \"412\") = \"16\"\
    \ ]]\n    [[ $(candidate \"19\" \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\"\
    \ \"1851\") = \"0\" ]]\n    [[ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[\
    \ $(candidate \"76\" \"67\") = \"42\" ]]\n    [[ $(candidate \"17\" \"27\") =\
    \ \"49\" ]]\n    [[ $(candidate \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"\
    0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010121
- exit_code: 2
  program: "#!/bin/bash\n# Complete the function that takes two integers and returns\
    \ \n# the product of their unit digits.\n# Assume the input is always valid.\n\
    # Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"\
    19\" \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
    \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
    \ {\n  # Write your code here\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n\n}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\"\
    \ \"28\") = \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[\
    \ $(candidate \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") =\
    \ \"42\" ]]\n    [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate\
    \ \"0\" \"1\") = \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphpnhyqnn.sh: line 188: syntax error near unexpected token `}''

    /tmp/tmphpnhyqnn.sh: line 188: `}''

    '
  stdout: ''
  timestamp: 1660010120

name: HumanEval_148_bf
language: sh
prompt: "#!/bin/bash\n# There are eight planets in our solar system: the closerst\
  \ to the Sun \n# is Mercury, the next one is Venus, then Earth, Mars, Jupiter, Saturn,\
  \ \n# Uranus, Neptune.\n# Write a function that takes two planet names as strings\
  \ planet1 and planet2. \n# The function should return a list containing all planets\
  \ whose orbits are \n# located between the orbit of planet1 and the orbit of planet2,\
  \ sorted by \n# the proximity to the sun. \n# The function should return an empty\
  \ list if planet1 or planet2\n# are not correct planet names. \n# Examples\n# >>>\
  \ $(bf \"Jupiter\" \"Neptune\")\n# ['\"Saturn\"', '\"Uranus\"']\n# >>> $(bf \"Earth\"\
  \ \"Mercury\")\n# \"Venus\"\n# >>> $(bf \"Mercury\" \"Uranus\")\n# ['\"Venus\"',\
  \ '\"Earth\"', '\"Mars\"', '\"Jupiter\"', '\"Saturn\"']\n#\n# $1 is a string\n#\
  \ $2 is a string\nbf() {\n"
tests: "}\n\ncandidate() {\n    bf \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
  \ \"Jupiter\" \"Neptune\") = \"Saturn Uranus\" ]]\n    [[ $(candidate \"Earth\"\
  \ \"Mercury\") = \"Venus\" ]]\n    [[ $(candidate \"Mercury\" \"Uranus\") = \"Venus\
  \ Earth Mars Jupiter Saturn\" ]]\n    [[ $(candidate \"Neptune\" \"Venus\") = \"\
  Earth Mars Jupiter Saturn Uranus\" ]]\n    [[ $(candidate \"Earth\" \"Earth\") =\
  \ \"\" ]]\n    [[ $(candidate \"Mars\" \"Earth\") = \"\" ]]\n    [[ $(candidate\
  \ \"Jupiter\" \"Makemake\") = \"\" ]]\n}\n\nrun_test"
completions: ["    # Write your code here\n    # To print results to the standard\
    \ output you can use echo\n    # Example: echo \"Hello world\"\n    if [ \"$1\"\
    \ == \"Mercury\" ]; then\n        if [ \"$2\" == \"Venus\" ]; then\n         \
    \   echo \"Mercury\"\n        elif [ \"$2\" == \"Earth\" ]; then\n           \
    \ echo \"Mercury\"\n            echo \"Venus\"\n        elif [ \"$2\" == \"Mars\"\
    \ ]; then\n            echo \"Mercury\"\n            echo \"Venus\"\n        \
    \    echo \"Earth\"\n        elif [ \"$2\" == \"Jupiter\" ]; then\n          \
    \  echo \"Mercury\"\n            echo \"Venus\"\n            echo \"Earth\"\n\
    \            echo \"Mars\"\n        elif [ \"$2\" == \"Saturn\" ]; then\n    \
    \        echo \"Mercury\"\n            echo \"Venus\"\n            echo \"Earth\"\
    \n            echo \"Mars\"\n            echo \"Jupiter\"\n        elif [ \"$2\"\
    \ == \"Uranus\" ]; then\n            echo \"Mercury\"\n            echo \"Venus\"\
    \n            echo \"Earth\"\n            echo \"Mars\"\n            echo \"Jupiter\"\
    \n            echo \"Saturn\"\n        elif [ \"$2\" == \"Neptune\" ]; then\n\
    \            echo \"Mercury\"\n            echo \"Venus\"\n            echo \"\
    Earth\"\n            echo \"Mars\"\n            echo \"Jupiter\"\n           \
    \ echo \"Saturn\"\n            echo \"Uranus\"\n        fi\n    elif [ \"$1\"\
    \ == \"Venus\" ]; then\n        if [ \"$2\" == \"Earth\" ]; then\n           \
    \ echo \"Venus\"\n        elif [ \"$2\" == \"Mars\" ]; then\n            echo\
    \ \"Venus\"\n            echo \"Earth\"\n        elif [ \"$2\" == \"Jupiter\"\
    \ ]; then\n            echo \"Venus\"\n            echo \"Earth\"\n          \
    \  echo \"Mars\"\n        elif [ \"$2\" == \"Saturn\" ]; then\n            echo\
    \ \"Venus\"\n            echo \"Earth\"\n            echo \"Mars\"\n         \
    \   echo \"Jupiter\"\n        elif [ \"$2\" == \"Uranus\" ]; then\n          \
    \  echo \"Venus\"\n            echo \"Earth\"\n            echo \"Mars\"", " \
    \   if [[ $1 == \"Mercury\" ]]; then\n        if [[ $2 == \"Mercury\" ]]; then\n\
    \            echo \"\\\"Mercury\\\"\"\n        elif [[ $2 == \"Venus\" ]]; then\n\
    \            echo \"\\\"Venus\\\"\"\n        elif [[ $2 == \"Earth\" ]]; then\n\
    \            echo \"\\\"Venus\\\"\"\n            echo \"\\\"Earth\\\"\"\n    \
    \    elif [[ $2 == \"Mars\" ]]; then\n            echo \"\\\"Venus\\\"\"\n   \
    \         echo \"\\\"Earth\\\"\"\n            echo \"\\\"Mars\\\"\"\n        elif\
    \ [[ $2 == \"Jupiter\" ]]; then\n            echo \"\\\"Venus\\\"\"\n        \
    \    echo \"\\\"Earth\\\"\"\n            echo \"\\\"Mars\\\"\"\n            echo\
    \ \"\\\"Jupiter\\\"\"\n        elif [[ $2 == \"Saturn\" ]]; then\n           \
    \ echo \"\\\"Venus\\\"\"\n            echo \"\\\"Earth\\\"\"\n            echo\
    \ \"\\\"Mars\\\"\"\n            echo \"\\\"Jupiter\\\"\"\n            echo \"\\\
    \"Saturn\\\"\"\n        elif [[ $2 == \"Uranus\" ]]; then\n            echo \"\
    \\\"Venus\\\"\"\n            echo \"\\\"Earth\\\"\"\n            echo \"\\\"Mars\\\
    \"\"\n            echo \"\\\"Jupiter\\\"\"\n            echo \"\\\"Saturn\\\"\"\
    \n            echo \"\\\"Uranus\\\"\"\n        elif [[ $2 == \"Neptune\" ]]; then\n\
    \            echo \"\\\"Venus\\\"\"\n            echo \"\\\"Earth\\\"\"\n    \
    \        echo \"\\\"Mars\\\"\"\n            echo \"\\\"Jupiter\\\"\"\n       \
    \     echo \"\\\"Saturn\\\"\"\n            echo \"\\\"Uranus\\\"\"\n         \
    \   echo \"\\\"Neptune\\\"\"\n        else\n            echo \"\"\n        fi\n\
    \    elif [[ $1 == \"Venus\" ]]; then\n        if [[ $2 == \"Venus\" ]]; then\n\
    \            echo \"\\\"Venus\\\"\"\n        elif [[ $2 == \"Earth\" ]]; then\n\
    \            echo \"\\\"Earth\\\"\"\n        elif [[ $2 == \"Mars\" ]]; then\n\
    \            echo \"\\\"Earth\\\"\"\n            echo \"\\\"Mars\\\"\"\n     \
    \   elif [[ $2 == \"Jupiter\" ]]; then\n            echo \"\\\"Earth\\\"\"\n \
    \           echo", "    # Write your code here\n    # To print results to the\
    \ standard output you can use echo\n    # Example: echo \"Hello world\"\n    echo\
    \ \"Hello world\"", "    # Write your code here\n    # To print results to the\
    \ standard output you can use echo\n    # Example: echo \"Hello world\"\n    echo\
    \ \"Hello world\"", "    # Write your code here\n    # You can use the following\
    \ command to get the list of planets\n    # planets=$(curl -s https://raw.githubusercontent.com/fsufitch/daily-labs/master/planets.txt)\n\
    \    # You can use the following command to get the list of planet orbits\n  \
    \  # orbits=$(curl -s https://raw.githubusercontent.com/fsufitch/daily-labs/master/orbits.txt)\n\
    \    # You can use the following command to get the list of planet names\n   \
    \ # names=$(curl -s https://raw.githubusercontent.com/fsufitch/daily-labs/master/names.txt)\n\
    \    # You can use the following command to get the list of planet masses\n  \
    \  # masses=$(curl -s https://raw.githubusercontent.com/fsufitch/daily-labs/master/masses.txt)\n\
    \    # You can use the following command to get the list of planet diameters\n\
    \    # diameters=$(curl -s https://raw.githubusercontent.com/fsufitch/daily-labs/master/diameters.txt)\n\
    \    # You can use the following command to get the list of planet moons\n   \
    \ # moons=$(curl -s https://raw.githubusercontent.com/fsufitch/daily-labs/master/moons.txt)\n\
    \    # You can use the following command to get the list of planet rings\n   \
    \ # rings=$(curl -s https://raw.githubusercontent.com/fsufitch/daily-labs/master/rings.txt)\n\
    \    # You can use the following command to get the list of planet atmospheres\n\
    \    # atmospheres=$(curl -s https://raw.githubusercontent.com/fsufitch/daily-labs/master/atmospheres.txt)\n\
    \    # You can use the following command to get the list of planet satellites\n\
    \    # satellites=$(curl -s https://raw.githubusercontent.com/fsufitch/daily-labs/master/satellites.txt)\n\
    \    # You can use the following command to get the list of planet probes\n  \
    \  # probes=$(curl -s https://raw.githubusercontent.", "    if [[ $1 =~ ^(Mercury|Venus|Earth|Mars|Jupiter|Saturn|Uranus|Neptune)$\
    \ ]] && [[ $2 =~ ^(Mercury|Venus|Earth|Mars|Jupiter|Saturn|Uranus|Neptune)$ ]];\
    \ then\n        if [[ $1 == \"Mercury\" ]]; then\n            if [[ $2 == \"Mercury\"\
    \ ]]; then\n                echo \"\\\"Mercury\\\"\"\n            elif [[ $2 ==\
    \ \"Venus\" ]]; then\n                echo \"\\\"Venus\\\"\"\n            elif\
    \ [[ $2 == \"Earth\" ]]; then\n                echo \"\\\"Venus\\\"\"\n      \
    \      elif [[ $2 == \"Mars\" ]]; then\n                echo \"\\\"Venus\\\"\"\
    \n            elif [[ $2 == \"Jupiter\" ]]; then\n                echo \"\\\"\
    Venus\\\"\"\n            elif [[ $2 == \"Saturn\" ]]; then\n                echo\
    \ \"\\\"Venus\\\"\"\n            elif [[ $2 == \"Uranus\" ]]; then\n         \
    \       echo \"\\\"Venus\\\"\"\n            elif [[ $2 == \"Neptune\" ]]; then\n\
    \                echo \"\\\"Venus\\\"\"\n            fi\n        elif [[ $1 ==\
    \ \"Venus\" ]]; then\n            if [[ $2 == \"Mercury\" ]]; then\n         \
    \       echo \"\\\"Venus\\\"\"\n            elif [[ $2 == \"Venus\" ]]; then\n\
    \                echo \"\\\"Venus\\\"\"\n            elif [[ $2 == \"Earth\" ]];\
    \ then\n                echo \"\\\"Venus\\\"\"\n            elif [[ $2 == \"Mars\"\
    \ ]]; then\n                echo \"\\\"Venus\\\"\"\n            elif [[ $2 ==\
    \ \"Jupiter\" ]]; then\n                echo \"\\\"Venus\\\"\"\n            elif\
    \ [[ $2 == \"Saturn\" ]]; then\n                echo \"\\\"Venus\\\"\"\n     \
    \       elif [[ $2 == \"Uranus\" ]]; then\n                echo \"\\\"Venus\\\"\
    \"\n            elif [[ $2 == \"Neptune\" ]]; then\n                echo \"\\\"\
    Venus\\\"\"\n            fi\n        elif [[ $1 == \"Earth\" ]]; then\n      \
    \      if [[ $2 == \"", "    # Write your code here\n    # To print results to\
    \ the standard output you can use echo\n    # Example: echo \"Hello world\"\n\
    \    echo \"Hello world\"", "    # Write your code here\n    # To print results\
    \ to the standard output you can use echo\n    # Example: echo \"Hello world\"\
    \n    echo \"Hello world\"", "    # Write your code here\n    # To print results\
    \ to the standard output you can use echo\n    # To access arguments use echo\
    \ \"$1\" \"$2\"\n    echo \"Not implemented yet\"", "    # your code here\n  \
    \  # use the following command to print your output:\n    # echo \"[\\\"$1\\\"\
    , \\\"$2\\\"]\"\n    #\n    # you can use the following command to print debug\
    \ messages:\n    # echo \"DEBUG: $1 $2\" >&2\n    #\n    # you can use the following\
    \ command to print error messages:\n    # echo \"ERROR: $1 $2\" >&2\n    #\n \
    \   # you can use the following command to print warning messages:\n    # echo\
    \ \"WARNING: $1 $2\" >&2\n    #\n    # you can use the following command to print\
    \ information messages:\n    # echo \"INFO: $1 $2\" >&2\n    #\n    # you can\
    \ use the following command to print an empty line:\n    # echo \"\"\n    #\n\
    \    # you can use the following command to print a line:\n    # echo \"line\"\
    \n    #\n    # you can use the following command to print a string:\n    # echo\
    \ \"string\"\n    #\n    # you can use the following command to print a number:\n\
    \    # echo \"number\"\n    #\n    # you can use the following command to print\
    \ a list:\n    # echo \"[\\\"$1\\\", \\\"$2\\\"]\"\n    #\n    # you can use the\
    \ following command to print a dictionary:\n    # echo \"{\\\"$1\\\": \\\"$2\\\
    \"}\"\n    #\n    # you can use the following command to print a boolean:\n  \
    \  # echo \"true\"\n    #\n    # you can use the following command to print a\
    \ boolean:\n    # echo \"false\"\n    #\n    # you can use the following command\
    \ to print a null:\n    # echo \"null\"\n    #\n    # you can use the following\
    \ command to print a null:\n    # echo \"nil\"\n    #\n    # you can use the following\
    \ command to print a null:\n    # echo \"None\"\n    #\n    # you can use the\
    \ following command to print a null:\n    # echo \"nullptr\"\n    #\n    # you\
    \ can use the following command to print a null:\n    # echo \"NULL\"\n    #\n\
    \    # you can use the following command to print a null:\n    # echo \"Null\"\
    \n   ", "  # Write your code here\n  planets=(\"Mercury\" \"Venus\" \"Earth\"\
    \ \"Mars\" \"Jupiter\" \"Saturn\" \"Uranus\" \"Neptune\")\n  p1=0\n  p2=0\n  for\
    \ ((i=0; i<${#planets[@]}; i++)); do\n    if [ \"${planets[$i]}\" == \"$1\" ];\
    \ then\n      p1=$i\n    fi\n    if [ \"${planets[$i]}\" == \"$2\" ]; then\n \
    \     p2=$i\n    fi\n  done\n  if [ $p1 -eq 0 ] || [ $p2 -eq 0 ]; then\n    echo\
    \ \"[]\"\n  else\n    if [ $p1 -gt $p2 ]; then\n      for ((i=$p2; i<=$p1; i++));\
    \ do\n        if [ $i -eq $p1 ]; then\n          echo \"\\\"${planets[$i]}\\\"\
    \"\n        else\n          echo \"\\\"${planets[$i]}\\\"\"\n        fi\n    \
    \  done\n    else\n      for ((i=$p1; i<=$p2; i++)); do\n        if [ $i -eq $p2\
    \ ]; then\n          echo \"\\\"${planets[$i]}\\\"\"\n        else\n         \
    \ echo \"\\\"${planets[$i]}\\\"\"\n        fi\n      done\n    fi\n  fi", "  \
    \  if [[ $1 == \"Mercury\" ]]; then\n        if [[ $2 == \"Venus\" ]]; then\n\
    \            echo \"Mercury\"\n        elif [[ $2 == \"Earth\" ]]; then\n    \
    \        echo \"Mercury\"\n            echo \"Venus\"\n        elif [[ $2 == \"\
    Mars\" ]]; then\n            echo \"Mercury\"\n            echo \"Venus\"\n  \
    \          echo \"Earth\"\n        elif [[ $2 == \"Jupiter\" ]]; then\n      \
    \      echo \"Mercury\"\n            echo \"Venus\"\n            echo \"Earth\"\
    \n            echo \"Mars\"\n        elif [[ $2 == \"Saturn\" ]]; then\n     \
    \       echo \"Mercury\"\n            echo \"Venus\"\n            echo \"Earth\"\
    \n            echo \"Mars\"\n            echo \"Jupiter\"\n        elif [[ $2\
    \ == \"Uranus\" ]]; then\n            echo \"Mercury\"\n            echo \"Venus\"\
    \n            echo \"Earth\"\n            echo \"Mars\"\n            echo \"Jupiter\"\
    \n            echo \"Saturn\"\n        elif [[ $2 == \"Neptune\" ]]; then\n  \
    \          echo \"Mercury\"\n            echo \"Venus\"\n            echo \"Earth\"\
    \n            echo \"Mars\"\n            echo \"Jupiter\"\n            echo \"\
    Saturn\"\n            echo \"Uranus\"\n        else\n            echo \"Invalid\
    \ planet name\"\n        fi\n    elif [[ $1 == \"Venus\" ]]; then\n        if\
    \ [[ $2 == \"Earth\" ]]; then\n            echo \"Venus\"\n        elif [[ $2\
    \ == \"Mars\" ]]; then\n            echo \"Venus\"\n            echo \"Earth\"\
    \n        elif [[ $2 == \"Jupiter\" ]]; then\n            echo \"Venus\"\n   \
    \         echo \"Earth\"\n            echo \"Mars\"\n        elif [[ $2 == \"\
    Saturn\" ]]; then\n            echo \"Venus\"\n            echo \"Earth\"\n  \
    \          echo \"Mars\"\n            echo \"Jupiter\"\n        elif [[ $2 ==\
    \ \"Uranus\" ]]; then\n            echo \"Venus\"\n            echo \"Earth\"\n\
    \            echo \"Mars\"\n            echo \"Jupiter\"\n            echo \"\
    Saturn\"\n        elif [[ $", "    # Write your code here\n    # To print results\
    \ to the standard output you can use echo\n    # Example: echo \"Hello world\"\
    \n    echo \"Hello world\"", "    # Write your code here\n    # To print results\
    \ to the standard output you can use echo\n    # Example: echo \"Hello world\"\
    \n    echo \"Hello world\"", "    # Write your code here\n    # To print results\
    \ to the standard output you can use echo\n    # Example: echo \"Hello world\"\
    \n    echo \"Hello world\"", "    if [[ $1 == \"Mercury\" ]]; then\n        if\
    \ [[ $2 == \"Venus\" ]]; then\n            echo \"Mercury\"\n        elif [[ $2\
    \ == \"Earth\" ]]; then\n            echo \"Mercury\"\n            echo \"Venus\"\
    \n        elif [[ $2 == \"Mars\" ]]; then\n            echo \"Mercury\"\n    \
    \        echo \"Venus\"\n            echo \"Earth\"\n        elif [[ $2 == \"\
    Jupiter\" ]]; then\n            echo \"Mercury\"\n            echo \"Venus\"\n\
    \            echo \"Earth\"\n            echo \"Mars\"\n        elif [[ $2 ==\
    \ \"Saturn\" ]]; then\n            echo \"Mercury\"\n            echo \"Venus\"\
    \n            echo \"Earth\"\n            echo \"Mars\"\n            echo \"Jupiter\"\
    \n        elif [[ $2 == \"Uranus\" ]]; then\n            echo \"Mercury\"\n  \
    \          echo \"Venus\"\n            echo \"Earth\"\n            echo \"Mars\"\
    \n            echo \"Jupiter\"\n            echo \"Saturn\"\n        elif [[ $2\
    \ == \"Neptune\" ]]; then\n            echo \"Mercury\"\n            echo \"Venus\"\
    \n            echo \"Earth\"\n            echo \"Mars\"\n            echo \"Jupiter\"\
    \n            echo \"Saturn\"\n            echo \"Uranus\"\n        else\n   \
    \         echo \"Error: $2 is not a planet\"\n        fi\n    elif [[ $1 == \"\
    Venus\" ]]; then\n        if [[ $2 == \"Earth\" ]]; then\n            echo \"\
    Venus\"\n        elif [[ $2 == \"Mars\" ]]; then\n            echo \"Venus\"\n\
    \            echo \"Earth\"\n        elif [[ $2 == \"Jupiter\" ]]; then\n    \
    \        echo \"Venus\"\n            echo \"Earth\"\n            echo \"Mars\"\
    \n        elif [[ $2 == \"Saturn\" ]]; then\n            echo \"Venus\"\n    \
    \        echo \"Earth\"\n            echo \"Mars\"\n            echo \"Jupiter\"\
    \n        elif [[ $2 == \"Uranus\" ]]; then\n            echo \"Venus\"\n    \
    \        echo \"Earth\"\n            echo \"Mars\"\n            echo \"Jupiter\"\
    \n            echo \"Saturn\"\n", "    if [[ $1 == \"Mercury\" ]]; then\n    \
    \    if [[ $2 == \"Venus\" ]]; then\n            echo \"Mercury\"\n        elif\
    \ [[ $2 == \"Earth\" ]]; then\n            echo \"Mercury\" \"Venus\"\n      \
    \  elif [[ $2 == \"Mars\" ]]; then\n            echo \"Mercury\" \"Venus\" \"\
    Earth\"\n        elif [[ $2 == \"Jupiter\" ]]; then\n            echo \"Mercury\"\
    \ \"Venus\" \"Earth\" \"Mars\"\n        elif [[ $2 == \"Saturn\" ]]; then\n  \
    \          echo \"Mercury\" \"Venus\" \"Earth\" \"Mars\" \"Jupiter\"\n       \
    \ elif [[ $2 == \"Uranus\" ]]; then\n            echo \"Mercury\" \"Venus\" \"\
    Earth\" \"Mars\" \"Jupiter\" \"Saturn\"\n        elif [[ $2 == \"Neptune\" ]];\
    \ then\n            echo \"Mercury\" \"Venus\" \"Earth\" \"Mars\" \"Jupiter\"\
    \ \"Saturn\" \"Uranus\"\n        else\n            echo \"Error: $2 is not a planet\"\
    \n        fi\n    elif [[ $1 == \"Venus\" ]]; then\n        if [[ $2 == \"Earth\"\
    \ ]]; then\n            echo \"Venus\"\n        elif [[ $2 == \"Mars\" ]]; then\n\
    \            echo \"Venus\" \"Earth\"\n        elif [[ $2 == \"Jupiter\" ]]; then\n\
    \            echo \"Venus\" \"Earth\" \"Mars\"\n        elif [[ $2 == \"Saturn\"\
    \ ]]; then\n            echo \"Venus\" \"Earth\" \"Mars\" \"Jupiter\"\n      \
    \  elif [[ $2 == \"Uranus\" ]]; then\n            echo \"Venus\" \"Earth\" \"\
    Mars\" \"Jupiter\" \"Saturn\"\n        elif [[ $2 == \"Neptune\" ]]; then\n  \
    \          echo \"Venus\" \"Earth\" \"Mars\" \"Jupiter\" \"Saturn\" \"Uranus\"\
    \n        else\n            echo \"Error: $2 is not a planet\"\n        fi\n \
    \   elif [[ $1 == \"Earth\" ]]; then\n        if [[ $2 == \"Mars\" ]]; then\n\
    \            echo \"Earth\"", "    if [[ $1 == \"Mercury\" ]]; then\n        if\
    \ [[ $2 == \"Mercury\" ]]; then\n            echo \"\\\"Mercury\\\"\"\n      \
    \  elif [[ $2 == \"Venus\" ]]; then\n            echo \"\\\"Venus\\\"\"\n    \
    \    elif [[ $2 == \"Earth\" ]]; then\n            echo \"[\\\"Venus\\\", \\\"\
    Earth\\\"]\"\n        elif [[ $2 == \"Mars\" ]]; then\n            echo \"[\\\"\
    Venus\\\", \\\"Earth\\\", \\\"Mars\\\"]\"\n        elif [[ $2 == \"Jupiter\" ]];\
    \ then\n            echo \"[\\\"Venus\\\", \\\"Earth\\\", \\\"Mars\\\", \\\"Jupiter\\\
    \"]\"\n        elif [[ $2 == \"Saturn\" ]]; then\n            echo \"[\\\"Venus\\\
    \", \\\"Earth\\\", \\\"Mars\\\", \\\"Jupiter\\\", \\\"Saturn\\\"]\"\n        elif\
    \ [[ $2 == \"Uranus\" ]]; then\n            echo \"[\\\"Venus\\\", \\\"Earth\\\
    \", \\\"Mars\\\", \\\"Jupiter\\\", \\\"Saturn\\\", \\\"Uranus\\\"]\"\n       \
    \ elif [[ $2 == \"Neptune\" ]]; then\n            echo \"[\\\"Venus\\\", \\\"\
    Earth\\\", \\\"Mars\\\", \\\"Jupiter\\\", \\\"Saturn\\\", \\\"Uranus\\\", \\\"\
    Neptune\\\"]\"\n        else\n            echo \"[]\"\n        fi\n    elif [[\
    \ $1 == \"Venus\" ]]; then\n        if [[ $2 == \"Venus\" ]]; then\n         \
    \   echo \"\\\"Venus\\\"\"\n        elif [[ $2 == \"Earth\" ]]; then\n       \
    \     echo \"\\\"Earth\\\"\"\n        elif [[ $2 == \"Mars\" ]]; then\n      \
    \      echo \"[\\\"Earth\\\", \\\"Mars\\\"]\"\n        elif [[ $2 == \"Jupiter\"\
    \ ]]; then\n            echo \"[\\\"Earth\\\", \\\"Mars\\\", \\\"Jupiter\\\"]\"\
    \n        elif [[ $2 == \"Saturn\" ]]; then\n            echo \"[\\\"Earth\\\"\
    , \\\"Mars\\\", \\\"Jupiter\\\", \\\"Saturn\\\"]\"\n        elif [[ $2 == \"Uranus\"\
    \ ]]; then\n            echo \"[\\\"Earth\\\", \\\"Mars\\\", \\\"Jupiter\\\",\
    \ \\\"Saturn\\\", \\\"Uranus\\\"]\"\n        elif [[ $2 == \"Neptune\" ]]; then\n\
    \            echo \"[\\\"Earth\\\", \\\"Mars\\\", \\\"Jupiter\\\", \\\"", "  \
    \  # write your code here\n    declare -a planets=(\"Mercury\" \"Venus\" \"Earth\"\
    \ \"Mars\" \"Jupiter\" \"Saturn\" \"Uranus\" \"Neptune\")\n    declare -a result=()\n\
    \    declare -i start=0\n    declare -i end=0\n    declare -i i=0\n    declare\
    \ -i j=0\n    for i in ${!planets[@]}; do\n        if [ \"${planets[$i]}\" = \"\
    $1\" ]; then\n            start=$i\n        fi\n        if [ \"${planets[$i]}\"\
    \ = \"$2\" ]; then\n            end=$i\n        fi\n    done\n    if [ $start\
    \ -gt $end ]; then\n        for j in $(seq $end $start); do\n            result+=(\"\
    ${planets[$j]}\")\n        done\n    else\n        for j in $(seq $start $end);\
    \ do\n            result+=(\"${planets[$j]}\")\n        done\n    fi\n    echo\
    \ ${result[@]}", "    # Write your code here\n    # To print results to the standard\
    \ output you can use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello\
    \ world\"", "    # Write your code here\n    # To print results to the standard\
    \ output you can use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello\
    \ world\"", "    local planets=(Mercury Venus Earth Mars Jupiter Saturn Uranus\
    \ Neptune)\n    local planet1=$1\n    local planet2=$2\n    local planet1_index=0\n\
    \    local planet2_index=0\n    local result=()\n    local i=0\n    local j=0\n\
    \    local k=0\n    local tmp=0\n    local tmp_index=0\n    local tmp_index2=0\n\
    \    local tmp_index3=0\n    local tmp_index4=0\n    local tmp_index5=0\n    local\
    \ tmp_index6=0\n    local tmp_index7=0\n    local tmp_index8=0\n    local tmp_index9=0\n\
    \    local tmp_index10=0\n    local tmp_index11=0\n    local tmp_index12=0\n \
    \   local tmp_index13=0\n    local tmp_index14=0\n    local tmp_index15=0\n  \
    \  local tmp_index16=0\n    local tmp_index17=0\n    local tmp_index18=0\n   \
    \ local tmp_index19=0\n    local tmp_index20=0\n    local tmp_index21=0\n    local\
    \ tmp_index22=0\n    local tmp_index23=0\n    local tmp_index24=0\n    local tmp_index25=0\n\
    \    local tmp_index26=0\n    local tmp_index27=0\n    local tmp_index28=0\n \
    \   local tmp_index29=0\n    local tmp_index30=0\n    local tmp_index31=0\n  \
    \  local tmp_index32=0\n    local tmp_index33=0\n    local tmp_index34=0\n   \
    \ local tmp_index35=0\n    local tmp_index36=0\n    local tmp_index37=0\n    local\
    \ tmp_index38=0\n    local tmp_index39=0\n    local tmp_index40=0\n    local tmp_index41=0\n\
    \    local tmp_index42=0\n    local tmp_index43=0\n    local tmp_index44=0\n \
    \   local tmp_index45=0\n    local tmp_index46=0\n    local tmp_index47=0\n  \
    \  local tmp_index48=0\n    local", "    # Write your code here\n    # To print\
    \ results to the standard output you can use echo\n    # Example: echo \"Hello\
    \ world\"\n    echo \"Hello world\"", "    local planets=(\"Mercury\" \"Venus\"\
    \ \"Earth\" \"Mars\" \"Jupiter\" \"Saturn\" \"Uranus\" \"Neptune\")\n    local\
    \ planet1=$1\n    local planet2=$2\n    local planet1_index=0\n    local planet2_index=0\n\
    \    local result=()\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n\
    \    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n \
    \   local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n  \
    \  local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n  \
    \  local ab=0\n    local ac=0\n    local ad=0\n    local ae=0\n    local af=0\n\
    \    local ag=0\n    local ah=0\n    local ai=0\n    local aj=0\n    local ak=0\n\
    \    local al=0\n    local am=0\n    local an=0\n    local ao=0\n    local ap=0\n\
    \    local aq=0\n    local ar=0\n    local as=0\n    local at=0\n    local au=0\n\
    \    local av=0\n    local aw=0\n    local ax=0\n    local ay=0\n    local az=0\n\
    \    local ba=0\n    local bb=0\n    local bc=0\n    local bd=0\n    local be=0\n\
    \    local bf=0\n    local bg=0\n    local bh=0\n    local bi=0\n    local bj=0\n\
    \    local bk=0\n    local bl=0\n    local bm=0\n    local bn=0\n    local bo=0\n\
    \    local bp=0\n    local bq=0\n    local br=0\n    local bs=0\n    local bt=0\n\
    \    local bu=0\n    local bv=0\n    local bw=0\n    local bx=0\n    local by=0\n",
  "    # Write your code here\n    # To print results to the standard output you can\
    \ use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello world\"", " \
    \   local planets=(\"Mercury\" \"Venus\" \"Earth\" \"Mars\" \"Jupiter\" \"Saturn\"\
    \ \"Uranus\" \"Neptune\")\n    local planet1=$1\n    local planet2=$2\n    local\
    \ planet1_index=0\n    local planet2_index=0\n    local i=0\n    local output=()\n\
    \    for planet in ${planets[@]}; do\n        if [ \"$planet\" == \"$planet1\"\
    \ ]; then\n            planet1_index=$i\n        fi\n        if [ \"$planet\"\
    \ == \"$planet2\" ]; then\n            planet2_index=$i\n        fi\n        i=$((i+1))\n\
    \    done\n    if [ $planet1_index -gt $planet2_index ]; then\n        for ((i=$planet2_index+1;\
    \ i<$planet1_index; i++)); do\n            output+=(\"${planets[$i]}\")\n    \
    \    done\n    else\n        for ((i=$planet1_index+1; i<$planet2_index; i++));\
    \ do\n            output+=(\"${planets[$i]}\")\n        done\n    fi\n    echo\
    \ ${output[@]}", "    # Write your code here\n    # To print results to the standard\
    \ output you can use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello\
    \ world\"", "    if [[ $1 == \"Mercury\" ]]; then\n        if [[ $2 == \"Venus\"\
    \ ]]; then\n            echo \"Mercury\"\n        elif [[ $2 == \"Earth\" ]];\
    \ then\n            echo \"Mercury\"\n            echo \"Venus\"\n        elif\
    \ [[ $2 == \"Mars\" ]]; then\n            echo \"Mercury\"\n            echo \"\
    Venus\"\n            echo \"Earth\"\n        elif [[ $2 == \"Jupiter\" ]]; then\n\
    \            echo \"Mercury\"\n            echo \"Venus\"\n            echo \"\
    Earth\"\n            echo \"Mars\"\n        elif [[ $2 == \"Saturn\" ]]; then\n\
    \            echo \"Mercury\"\n            echo \"Venus\"\n            echo \"\
    Earth\"\n            echo \"Mars\"\n            echo \"Jupiter\"\n        elif\
    \ [[ $2 == \"Uranus\" ]]; then\n            echo \"Mercury\"\n            echo\
    \ \"Venus\"\n            echo \"Earth\"\n            echo \"Mars\"\n         \
    \   echo \"Jupiter\"\n            echo \"Saturn\"\n        elif [[ $2 == \"Neptune\"\
    \ ]]; then\n            echo \"Mercury\"\n            echo \"Venus\"\n       \
    \     echo \"Earth\"\n            echo \"Mars\"\n            echo \"Jupiter\"\n\
    \            echo \"Saturn\"\n            echo \"Uranus\"\n        else\n    \
    \        echo \"Invalid planet name\"\n        fi\n    elif [[ $1 == \"Venus\"\
    \ ]]; then\n        if [[ $2 == \"Earth\" ]]; then\n            echo \"Venus\"\
    \n        elif [[ $2 == \"Mars\" ]]; then\n            echo \"Venus\"\n      \
    \      echo \"Earth\"\n        elif [[ $2 == \"Jupiter\" ]]; then\n          \
    \  echo \"Venus\"\n            echo \"Earth\"\n            echo \"Mars\"\n   \
    \     elif [[ $2 == \"Saturn\" ]]; then\n            echo \"Venus\"\n        \
    \    echo \"Earth\"\n            echo \"Mars\"\n            echo \"Jupiter\"\n\
    \        elif [[ $2 == \"Uranus\" ]]; then\n            echo \"Venus\"\n     \
    \       echo \"Earth\"\n            echo \"Mars\"\n            echo \"Jupiter\"\
    \n            echo \"Saturn\"\n        elif [[ $", "    local planet1=$1\n   \
    \ local planet2=$2\n    local planets=(\"Mercury\" \"Venus\" \"Earth\" \"Mars\"\
    \ \"Jupiter\" \"Saturn\" \"Uranus\" \"Neptune\")\n    local planet1_index=0\n\
    \    local planet2_index=0\n    local result=()\n    local i=0\n    local j=0\n\
    \    local k=0\n    local planet=\"\"\n    local planet_index=0\n    local planet_index_1=0\n\
    \    local planet_index_2=0\n    local planet_index_3=0\n    local planet_index_4=0\n\
    \    local planet_index_5=0\n    local planet_index_6=0\n    local planet_index_7=0\n\
    \    local planet_index_8=0\n    local planet_index_9=0\n    local planet_index_10=0\n\
    \    local planet_index_11=0\n    local planet_index_12=0\n    local planet_index_13=0\n\
    \    local planet_index_14=0\n    local planet_index_15=0\n    local planet_index_16=0\n\
    \    local planet_index_17=0\n    local planet_index_18=0\n    local planet_index_19=0\n\
    \    local planet_index_20=0\n    local planet_index_21=0\n    local planet_index_22=0\n\
    \    local planet_index_23=0\n    local planet_index_24=0\n    local planet_index_25=0\n\
    \    local planet_index_26=0\n    local planet_index_27=0\n    local planet_index_28=0\n\
    \    local planet_index_29=0\n    local planet_index_30=0\n    local planet_index_31=0\n\
    \    local planet_index_32=0\n    local planet_index_33=0\n    local planet_index_34=0\n\
    \    local planet_index_35=0\n    local planet_index_36=0\n    local planet_index_37=0\n\
    \    local planet_index_38=0\n    local planet_index_39=0\n    local planet_index_40=0\n\
    \    local planet_index", "    # Write your code here\n    # To print results\
    \ to the standard output you can use echo\n    # Example: echo \"Hello world\"\
    \n    echo \"Hello world\"", "    local planets=(Mercury Venus Earth Mars Jupiter\
    \ Saturn Uranus Neptune)\n    local planet1=$1\n    local planet2=$2\n    local\
    \ planet1_index=0\n    local planet2_index=0\n    local result=()\n    local i=0\n\
    \    local j=0\n    local k=0\n    local planet=''\n    local planet_index=0\n\
    \    local planet_index_list=()\n    local planet_list=()\n    local planet_list_index=0\n\
    \    local planet_list_index_list=()\n    local planet_list_index_list_index=0\n\
    \    local planet_list_index_list_index_list=()\n    local planet_list_index_list_index_list_index=0\n\
    \    local planet_list_index_list_index_list_index_list=()\n    local planet_list_index_list_index_list_index_list_index=0\n\
    \    local planet_list_index_list_index_list_index_list_index_list=()\n    local\
    \ planet_list_index_list_index_list_index_list_index_list_index=0\n    local planet_list_index_list_index_list_index_list_index_list_index_list=()\n\
    \    local planet_list_index_list_index_list_index_list_index_list_index_list_index=0\n\
    \    local planet_list_index_list_index_list_index_list_index_list_index_list_index_list=()\n\
    \    local planet_list_index_list_index_list_index_list_index_list_index_list_index_list_index=0\n\
    \    local planet_list_index_list_index_list_index_list_index_list_index_list_index_list_index_list=()\n\
    \    local planet_list_index_list_index_list_index_list_index_list_index_list_index_list_index_list_index=0\n\
    \    local planet_list_index_list_index_list_index_list_index_list_index_list_index_list_index_list_index_list=()\n\
    \    local planet_list_index", "\t# your code here", "    # Write your code here\n\
    \    #planet1=$1\n    #planet2=$2\n    #echo $planet1\n    #echo $planet2\n  \
    \  #echo $1\n    #echo $2\n    #echo $#\n    #echo $@\n    #echo $*\n    #echo\
    \ $0\n    #echo $?\n    #echo $!\n    #echo $$\n    #echo $-\n    #echo $_\n \
    \   #echo $IFS\n    #echo $PATH\n    #echo $PS1\n    #echo $PS2\n    #echo $PS3\n\
    \    #echo $PS4\n    #echo $PWD\n    #echo $OLDPWD\n    #echo $OPTIND\n    #echo\
    \ $OPTERR\n    #echo $OPTARG\n    #echo $LINENO\n    #echo $SHELLOPTS\n    #echo\
    \ $BASH\n    #echo $BASH_VERSION\n    #echo $BASH_VERSINFO\n    #echo $BASH_VERSINFO[0]\n\
    \    #echo $BASH_VERSINFO[1]\n    #echo $BASH_VERSINFO[2]\n    #echo $BASH_VERSINFO[3]\n\
    \    #echo $BASH_VERSINFO[4]\n    #echo $BASH_VERSINFO[5]\n    #echo $BASH_VERSINFO[6]\n\
    \    #echo $BASH_VERSINFO[7]\n    #echo $BASH_VERSINFO[8]\n    #echo $BASH_VERSINFO[9]\n\
    \    #echo $BASH_VERSINFO[10]\n    #echo $BASH_VERSINFO[11]\n    #echo $BASH_VERSINFO[12]\n\
    \    #echo $BASH_VERSINFO[13]\n    #echo $BASH_VERSINFO[14]\n    #echo $BASH_VERSINFO[15]\n\
    \    #echo $BASH_VERSINFO[16]\n    #echo $BASH_VERSINFO[17]\n    #echo $BASH_VERSINFO[18]\n\
    \    #echo $BASH_VERSINFO[19]\n    #echo $BASH_VERSINFO[20]\n    #echo $BASH_VERSINFO[21]\n\
    \   ", "    # Write your code here\n    # To print results to the standard output\
    \ you can use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello world\"",
  "    planets=(Mercury Venus Earth Mars Jupiter Saturn Uranus Neptune)\n    if [[\
    \ ! \"${planets[@]}\" =~ \"$1\" ]] || [[ ! \"${planets[@]}\" =~ \"$2\" ]]; then\n\
    \        echo \"()\"\n        return\n    fi\n    planet1=$1\n    planet2=$2\n\
    \    if [[ \"${planets[@]}\" =~ \"$1\" ]] && [[ \"${planets[@]}\" =~ \"$2\" ]];\
    \ then\n        if [[ \"${planets[@]}\" =~ \"$1\" ]] && [[ \"${planets[@]}\" =~\
    \ \"$2\" ]]; then\n            if [[ \"${planets[@]}\" =~ \"$1\" ]] && [[ \"${planets[@]}\"\
    \ =~ \"$2\" ]]; then\n                if [[ \"${planets[@]}\" =~ \"$1\" ]] &&\
    \ [[ \"${planets[@]}\" =~ \"$2\" ]]; then\n                    if [[ \"${planets[@]}\"\
    \ =~ \"$1\" ]] && [[ \"${planets[@]}\" =~ \"$2\" ]]; then\n                  \
    \      if [[ \"${planets[@]}\" =~ \"$1\" ]] && [[ \"${planets[@]}\" =~ \"$2\"\
    \ ]]; then\n                            if [[ \"${planets[@]}\" =~ \"$1\" ]] &&\
    \ [[ \"${planets[@]}\" =~ \"$2\" ]]; then\n                                if\
    \ [[ \"${planets[@]}\" =~ \"$1\" ]] && [[ \"${planets[@]}\" =~ \"$2\" ]]; then\n\
    \                                    if [[ \"${planets[@]}\" =~ \"$1\" ]] && [[\
    \ \"${planets[@]}\" =~ \"$2\" ]]; then\n                                     \
    \   if [[ \"${planets[@]}\" =~ \"$1\" ]] && [[ \"${planets[@]}\" =~ \"$2\" ]];\
    \ then\n                                            if [[ \"${planets[@]}\" =~\
    \ \"$1\" ]] && [[ \"${planets[@]}\" =~ \"$2\" ]]; then\n                     \
    \                           if [[ \"${planets[@]}\" =~ \"$1\" ]]", "    # Write\
    \ your code here\n    # To print results to the standard output you can use echo\n\
    \    # Example: echo \"Hello world\"\n    echo \"Hello world\"", "    # Write\
    \ your code here\n    # To print results to the standard output you can use echo\n\
    \    # To access arguments use echo \"$1\" \"$2\"\n    # To access the environment\
    \ variables use echo \"$HOME\"\n    # To execute system commands use echo `ls\
    \ -la`\n    echo \"Not implemented yet\"", "    # Write your code here\n    #\
    \ To print results to the standard output you can use echo\n    # To access arguments\
    \ use echo \"$1\" \"$2\"\n    echo \"Not implemented yet\"", "  # Write your code\
    \ here\n  # planets=(Mercury Venus Earth Mars Jupiter Saturn Uranus Neptune)\n\
    \  # planets=(Mercury Venus Earth Mars Jupiter Saturn Uranus Neptune)\n  # planets=(Mercury\
    \ Venus Earth Mars Jupiter Saturn Uranus Neptune)\n  # planets=(Mercury Venus\
    \ Earth Mars Jupiter Saturn Uranus Neptune)\n  # planets=(Mercury Venus Earth\
    \ Mars Jupiter Saturn Uranus Neptune)\n  # planets=(Mercury Venus Earth Mars Jupiter\
    \ Saturn Uranus Neptune)\n  # planets=(Mercury Venus Earth Mars Jupiter Saturn\
    \ Uranus Neptune)\n  # planets=(Mercury Venus Earth Mars Jupiter Saturn Uranus\
    \ Neptune)\n  # planets=(Mercury Venus Earth Mars Jupiter Saturn Uranus Neptune)\n\
    \  # planets=(Mercury Venus Earth Mars Jupiter Saturn Uranus Neptune)\n  # planets=(Mercury\
    \ Venus Earth Mars Jupiter Saturn Uranus Neptune)\n  # planets=(Mercury Venus\
    \ Earth Mars Jupiter Saturn Uranus Neptune)\n  # planets=(Mercury Venus Earth\
    \ Mars Jupiter Saturn Uranus Neptune)\n  # planets=(Mercury Venus Earth Mars Jupiter\
    \ Saturn Uranus Neptune)\n  # planets=(Mercury Venus Earth Mars Jupiter Saturn\
    \ Uranus Neptune)\n  # planets=(Mercury Venus Earth Mars Jupiter Saturn Uranus\
    \ Neptune)\n  # planets=(Mercury Venus Earth Mars Jupiter Saturn Uranus Neptune)\n\
    \  # planets=(Mercury Venus Earth Mars Jupiter Saturn Uranus Neptune)\n  # planets=(Mercury\
    \ Venus Earth Mars Jupiter Saturn Uranus Neptune)\n  # planets=(Mercury Venus\
    \ Earth Mars Jupiter Saturn Uranus Neptune)\n  # planets=(Mercury Venus Earth\
    \ Mars Jupiter Saturn Uranus Neptune)\n  # planets=(Mercury Venus Earth Mars Jupiter\
    \ Saturn Uranus Neptune)\n  # planets=(Mercury Venus Earth Mars Jupiter Saturn\
    \ Uranus Neptune)\n  # planets=(Mercury Venus Earth Mars Jupiter Saturn Uranus\
    \ Neptune)\n  # planets=(Mercury Venus Earth Mars Jupiter Saturn Uranus Neptune)\n\
    \  # planets=(Mercury Venus Earth Mars Jupiter Saturn Uranus Neptune)\n  # planets=(Mercury\
    \ Venus Earth Mars Jupiter Saturn Uranus Neptune)\n  # planets=(Mercury Venus\
    \ Earth Mars Jupiter Saturn Uranus Neptune)\n  # planets=(Mercury Venus Earth\
    \ Mars Jupiter Saturn Uranus Neptune)\n  # planets=(Mercury Venus Earth Mars Jupiter\
    \ Saturn Uranus Neptune)\n  # planets=(Mercury Venus Earth Mars Jupiter Saturn\
    \ Uranus Neptune)\n  # planets=(Mercury Venus Earth", "    if [[ $1 == \"Mercury\"\
    \ ]]; then\n        if [[ $2 == \"Venus\" ]]; then\n            echo \"Mercury\"\
    \n        elif [[ $2 == \"Earth\" ]]; then\n            echo \"Mercury\"\n   \
    \         echo \"Venus\"\n        elif [[ $2 == \"Mars\" ]]; then\n          \
    \  echo \"Mercury\"\n            echo \"Venus\"\n            echo \"Earth\"\n\
    \        elif [[ $2 == \"Jupiter\" ]]; then\n            echo \"Mercury\"\n  \
    \          echo \"Venus\"\n            echo \"Earth\"\n            echo \"Mars\"\
    \n        elif [[ $2 == \"Saturn\" ]]; then\n            echo \"Mercury\"\n  \
    \          echo \"Venus\"\n            echo \"Earth\"\n            echo \"Mars\"\
    \n            echo \"Jupiter\"\n        elif [[ $2 == \"Uranus\" ]]; then\n  \
    \          echo \"Mercury\"\n            echo \"Venus\"\n            echo \"Earth\"\
    \n            echo \"Mars\"\n            echo \"Jupiter\"\n            echo \"\
    Saturn\"\n        elif [[ $2 == \"Neptune\" ]]; then\n            echo \"Mercury\"\
    \n            echo \"Venus\"\n            echo \"Earth\"\n            echo \"\
    Mars\"\n            echo \"Jupiter\"\n            echo \"Saturn\"\n          \
    \  echo \"Uranus\"\n        fi\n    elif [[ $1 == \"Venus\" ]]; then\n       \
    \ if [[ $2 == \"Earth\" ]]; then\n            echo \"Venus\"\n        elif [[\
    \ $2 == \"Mars\" ]]; then\n            echo \"Venus\"\n            echo \"Earth\"\
    \n        elif [[ $2 == \"Jupiter\" ]]; then\n            echo \"Venus\"\n   \
    \         echo \"Earth\"\n            echo \"Mars\"\n        elif [[ $2 == \"\
    Saturn\" ]]; then\n            echo \"Venus\"\n            echo \"Earth\"\n  \
    \          echo \"Mars\"\n            echo \"Jupiter\"\n        elif [[ $2 ==\
    \ \"Uranus\" ]]; then\n            echo \"Venus\"\n            echo \"Earth\"\n\
    \            echo \"Mars\"\n            echo \"Jupiter\"\n            echo \"\
    Saturn\"\n        elif [[ $2 == \"Neptune\" ]]; then\n", "    # Write your code\
    \ here\n    # You can write additional functions\n    # You can use additional\
    \ variables\n    # You can use pipes and subshells\n    # But your code must be\
    \ less than 20 lines\n    # And must not contain the character \"\n    # And must\
    \ not contain the character '\n    # And must not contain the character \\\n \
    \   # And must not contain the character `\n    # And must not contain the character\
    \ $\n    # And must not contain the character ;\n    # And must not contain the\
    \ character &\n    # And must not contain the character |\n    # And must not\
    \ contain the character <\n    # And must not contain the character >\n    # And\
    \ must not contain the character (\n    # And must not contain the character )\n\
    \    # And must not contain the character [\n    # And must not contain the character\
    \ ]\n    # And must not contain the character {\n    # And must not contain the\
    \ character }\n    # And must not contain the character ?\n    # And must not\
    \ contain the character !\n    # And must not contain the character *\n    # And\
    \ must not contain the character %\n    # And must not contain the character #\n\
    \    # And must not contain the character @\n    # And must not contain the character\
    \ ~\n    # And must not contain the character =\n    # And must not contain the\
    \ character +\n    # And must not contain the character -\n    # And must not\
    \ contain the character ^\n    # And must not contain the character :\n    # And\
    \ must not contain the character ,\n    # And must not contain the character .\n\
    \    # And must not contain the character /\n    # And must not contain the character\
    \ \\\n    # And must not contain the character _\n    # And must not contain the\
    \ character \"\n    # And must not contain the character '\n    # And must not\
    \ contain the character `\n    # And must not contain the character $\n    # And\
    \ must not contain the character ;\n    # And must not contain the character &\n\
    \    # And must not contain the character |\n    # And must not contain the character\
    \ <\n    # And must not contain the character >\n    # And must not contain the\
    \ character (\n    # And must not contain the character )\n    # And must not\
    \ contain the character [\n    # And must not contain the character ]\n    # And\
    \ must not", "    # Write your code here\n    # To print results to the standard\
    \ output you can use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello\
    \ world\"", "    # Write your code here\n    # To print results to the standard\
    \ output you can use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello\
    \ world\"", "    # Write your code here\n    # To print results to the standard\
    \ output you can use echo\n    # To access arguments use echo \"$1\" \"$2\"\n\
    \    # To access the variable that stores the result use echo \"$result\"\n  \
    \  # To store a result in a variable named 'result' you can use result=$(bf \"\
    1\" \"2\")\n    #result=$(bf \"1\" \"2\")\n    #echo \"$result\"\n    #echo \"\
    $1\"\n    #echo \"$2\"\n    #echo \"$result\"\n    #echo \"$result\"\n    #echo\
    \ \"$result\"\n    #echo \"$result\"\n    #echo \"$result\"\n    #echo \"$result\"\
    \n    #echo \"$result\"\n    #echo \"$result\"\n    #echo \"$result\"\n    #echo\
    \ \"$result\"\n    #echo \"$result\"\n    #echo \"$result\"\n    #echo \"$result\"\
    \n    #echo \"$result\"\n    #echo \"$result\"\n    #echo \"$result\"\n    #echo\
    \ \"$result\"\n    #echo \"$result\"\n    #echo \"$result\"\n    #echo \"$result\"\
    \n    #echo \"$result\"\n    #echo \"$result\"\n    #echo \"$result\"\n    #echo\
    \ \"$result\"\n    #echo \"$result\"\n    #echo \"$result\"\n    #echo \"$result\"\
    \n    #echo \"$result\"\n    #echo \"$result\"\n    #echo \"$result\"\n    #echo\
    \ \"$result\"\n    #echo \"$result\"\n    #echo \"$result\"\n    #echo \"$result\"\
    \n    #echo \"$result\"\n    #echo \"$result\"\n    #echo \"$result\"\n    #echo\
    \ \"$result\"\n    #echo \"$result\"\n    #echo \"$result\"\n    #echo \"$result\"\
    \n    #echo \"$result\"\n    #echo \"$result\"\n    #echo \"$result\"\n    #echo\
    \ \"$result\"\n    #echo \"$result\"\n    #echo \"$result\"\n    #echo \"$result\"\
    \n    #echo \"$result\"\n    #echo \"$result\"\n    #echo \"$result\"\n    #echo\
    \ \"$result\"\n    #echo \"$result\"\n    #echo \"$result\"\n    #echo \"$result\"\
    \n    #echo \"$result\"\n    #echo \"$result\"\n", "    local planets=( \"Mercury\"\
    \ \"Venus\" \"Earth\" \"Mars\" \"Jupiter\" \"Saturn\" \"Uranus\" \"Neptune\" )\n\
    \    local planet1=$1\n    local planet2=$2\n    local index1=0\n    local index2=0\n\
    \    local i=0\n    local result=\"\"\n    local planet=\"\"\n    local found=0\n\
    \    for planet in \"${planets[@]}\"\n    do\n        if [ \"$planet\" == \"$planet1\"\
    \ ]; then\n            index1=$i\n            found=1\n        fi\n        if\
    \ [ \"$planet\" == \"$planet2\" ]; then\n            index2=$i\n            found=1\n\
    \        fi\n        i=$((i+1))\n    done\n    if [ $found -eq 0 ]; then\n   \
    \     echo \"[]\"\n        return\n    fi\n    if [ $index1 -gt $index2 ]; then\n\
    \        local tmp=$index1\n        index1=$index2\n        index2=$tmp\n    fi\n\
    \    for ((i=$index1+1; i<$index2; i++))\n    do\n        planet=${planets[$i]}\n\
    \        result=\"$result \\\"$planet\\\"\"\n    done\n    echo \"[$result]\"",
  "    # Write your code here\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
    \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n", "    # Write your code here\n\
    \    # To print results to the standard output you can use echo\n    # Example:\
    \ echo \"Hello world\"\n    echo \"Hello world\"", "    if [[ $1 == \"Mercury\"\
    \ ]]; then\n        case $2 in\n            \"Mercury\") echo \"[]\";;\n     \
    \       \"Venus\") echo \"[\\\"Venus\\\"]\";;\n            \"Earth\") echo \"\
    [\\\"Venus\\\"]\";;\n            \"Mars\") echo \"[\\\"Venus\\\"]\";;\n      \
    \      \"Jupiter\") echo \"[\\\"Venus\\\"]\";;\n            \"Saturn\") echo \"\
    [\\\"Venus\\\"]\";;\n            \"Uranus\") echo \"[\\\"Venus\\\"]\";;\n    \
    \        \"Neptune\") echo \"[\\\"Venus\\\"]\";;\n            *) echo \"[]\";;\n\
    \        esac\n    elif [[ $1 == \"Venus\" ]]; then\n        case $2 in\n    \
    \        \"Mercury\") echo \"[]\";;\n            \"Venus\") echo \"[]\";;\n  \
    \          \"Earth\") echo \"[\\\"Earth\\\"]\";;\n            \"Mars\") echo \"\
    [\\\"Earth\\\"]\";;\n            \"Jupiter\") echo \"[\\\"Earth\\\"]\";;\n   \
    \         \"Saturn\") echo \"[\\\"Earth\\\"]\";;\n            \"Uranus\") echo\
    \ \"[\\\"Earth\\\"]\";;\n            \"Neptune\") echo \"[\\\"Earth\\\"]\";;\n\
    \            *) echo \"[]\";;\n        esac\n    elif [[ $1 == \"Earth\" ]]; then\n\
    \        case $2 in\n            \"Mercury\") echo \"[]\";;\n            \"Venus\"\
    ) echo \"[]\";;\n            \"Earth\") echo \"[]\";;\n            \"Mars\") echo\
    \ \"[\\\"Mars\\\"]\";;\n            \"Jupiter\") echo \"[\\\"Mars\\\"]\";;\n \
    \           \"Saturn\") echo \"[\\\"Mars\\\"]\";;\n            \"Uranus\") echo\
    \ \"[\\\"Mars\\\"]\";;\n            \"Neptune\") echo \"[\\\"Mars\\\"]\";;\n \
    \           *) echo \"[]\";;\n        esac\n    elif [[ $1 == \"Mars\" ]]; then\n\
    \        case $2 in\n            \"Mercury\") echo \"[]\";;\n            \"Venus\"\
    ) echo \"[]\";;\n            \"Earth\") echo \"[]\";;\n            \"Mars\") echo\
    \ \"[]\";;\n            \"Jupiter\") echo \"[\\\"Jupiter\\\"]\";;\n          \
    \  \"Saturn\") echo \"[\\\"Jupiter\\\"]\";;\n            \"Uranus\") echo \"[\\\
    \"Jupiter\\\"]\";;\n            \"Neptune\") echo \"[\\\"Jupiter\\\"]\";;\n",
  "    # Write your code here\n    # To print results to the standard output you can\
    \ use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello world\"", " \
    \   if [[ $1 == \"Mercury\" ]]; then\n        if [[ $2 == \"Venus\" ]]; then\n\
    \            echo \"Mercury\"\n        elif [[ $2 == \"Earth\" ]]; then\n    \
    \        echo \"Mercury\"\n            echo \"Venus\"\n        elif [[ $2 == \"\
    Mars\" ]]; then\n            echo \"Mercury\"\n            echo \"Venus\"\n  \
    \          echo \"Earth\"\n        elif [[ $2 == \"Jupiter\" ]]; then\n      \
    \      echo \"Mercury\"\n            echo \"Venus\"\n            echo \"Earth\"\
    \n            echo \"Mars\"\n        elif [[ $2 == \"Saturn\" ]]; then\n     \
    \       echo \"Mercury\"\n            echo \"Venus\"\n            echo \"Earth\"\
    \n            echo \"Mars\"\n            echo \"Jupiter\"\n        elif [[ $2\
    \ == \"Uranus\" ]]; then\n            echo \"Mercury\"\n            echo \"Venus\"\
    \n            echo \"Earth\"\n            echo \"Mars\"\n            echo \"Jupiter\"\
    \n            echo \"Saturn\"\n        elif [[ $2 == \"Neptune\" ]]; then\n  \
    \          echo \"Mercury\"\n            echo \"Venus\"\n            echo \"Earth\"\
    \n            echo \"Mars\"\n            echo \"Jupiter\"\n            echo \"\
    Saturn\"\n            echo \"Uranus\"\n        else\n            echo \"Error:\
    \ $2 is not a planet\"\n        fi\n    elif [[ $1 == \"Venus\" ]]; then\n   \
    \     if [[ $2 == \"Earth\" ]]; then\n            echo \"Venus\"\n        elif\
    \ [[ $2 == \"Mars\" ]]; then\n            echo \"Venus\"\n            echo \"\
    Earth\"\n        elif [[ $2 == \"Jupiter\" ]]; then\n            echo \"Venus\"\
    \n            echo \"Earth\"\n            echo \"Mars\"\n        elif [[ $2 ==\
    \ \"Saturn\" ]]; then\n            echo \"Venus\"\n            echo \"Earth\"\n\
    \            echo \"Mars\"\n            echo \"Jupiter\"\n        elif [[ $2 ==\
    \ \"Uranus\" ]]; then\n            echo \"Venus\"\n            echo \"Earth\"\n\
    \            echo \"Mars\"\n            echo \"Jupiter\"\n            echo \"\
    Saturn\"\n", "    local planets=(Mercury Venus Earth Mars Jupiter Saturn Uranus\
    \ Neptune)\n    local planet1=$1\n    local planet2=$2\n    local planet1_index\n\
    \    local planet2_index\n    local i\n    local result=()\n    for i in ${!planets[@]};\
    \ do\n        if [[ \"${planets[$i]}\" == \"$planet1\" ]]; then\n            planet1_index=$i\n\
    \        fi\n        if [[ \"${planets[$i]}\" == \"$planet2\" ]]; then\n     \
    \       planet2_index=$i\n        fi\n    done\n    if [[ -z \"$planet1_index\"\
    \ || -z \"$planet2_index\" ]]; then\n        echo \"()\"\n        return\n   \
    \ fi\n    if [[ \"$planet1_index\" -lt \"$planet2_index\" ]]; then\n        for\
    \ ((i = $planet1_index + 1; i < $planet2_index; i++)); do\n            result+=(\"\
    ${planets[$i]}\")\n        done\n    else\n        for ((i = $planet2_index +\
    \ 1; i < $planet1_index; i++)); do\n            result+=(\"${planets[$i]}\")\n\
    \        done\n    fi\n    echo \"(${result[@]})\"", "    # write your code here\n\
    \    if [ \"$1\" = \"Mercury\" ]\n    then\n        if [ \"$2\" = \"Mercury\"\
    \ ]\n        then\n            echo \"Mercury\"\n        elif [ \"$2\" = \"Venus\"\
    \ ]\n        then\n            echo \"Venus\"\n        elif [ \"$2\" = \"Earth\"\
    \ ]\n        then\n            echo \"Venus\"\n            echo \"Earth\"\n  \
    \      elif [ \"$2\" = \"Mars\" ]\n        then\n            echo \"Venus\"\n\
    \            echo \"Earth\"\n            echo \"Mars\"\n        elif [ \"$2\"\
    \ = \"Jupiter\" ]\n        then\n            echo \"Venus\"\n            echo\
    \ \"Earth\"\n            echo \"Mars\"\n            echo \"Jupiter\"\n       \
    \ elif [ \"$2\" = \"Saturn\" ]\n        then\n            echo \"Venus\"\n   \
    \         echo \"Earth\"\n            echo \"Mars\"\n            echo \"Jupiter\"\
    \n            echo \"Saturn\"\n        elif [ \"$2\" = \"Uranus\" ]\n        then\n\
    \            echo \"Venus\"\n            echo \"Earth\"\n            echo \"Mars\"\
    \n            echo \"Jupiter\"\n            echo \"Saturn\"\n            echo\
    \ \"Uranus\"\n        elif [ \"$2\" = \"Neptune\" ]\n        then\n          \
    \  echo \"Venus\"\n            echo \"Earth\"\n            echo \"Mars\"\n   \
    \         echo \"Jupiter\"\n            echo \"Saturn\"\n            echo \"Uranus\"\
    \n            echo \"Neptune\"\n        else\n            echo \"empty list\"\n\
    \        fi\n    elif [ \"$1\" = \"Venus\" ]\n    then\n        if [ \"$2\" =\
    \ \"Venus\" ]\n        then\n            echo \"Venus\"\n        elif [ \"$2\"\
    \ = \"Earth\" ]\n        then\n            echo \"Earth\"\n        elif [ \"$2\"\
    \ = \"Mars\" ]\n        then\n            echo \"Earth\"\n            echo \"\
    Mars\"\n        elif [ \"$2\" = \"Jupiter\" ]\n        then\n            echo\
    \ \"Earth\"\n            echo \"Mars\"\n            echo \"Jupiter\"\n       \
    \ elif [ \"$2\" = \"Saturn\" ]\n        then\n            echo", "    # Write\
    \ your code here\n    # To print results to the standard output you can use echo\n\
    \    # Example: echo \"Hello world\"\n    echo \"Hello world\"", "    if [ $#\
    \ -ne 2 ]; then\n        echo \"Usage: $0 <planet1> <planet2>\"\n        exit\
    \ 1\n    fi\n    local planets=(Mercury Venus Earth Mars Jupiter Saturn Uranus\
    \ Neptune)\n    local planet1=$1\n    local planet2=$2\n    local planet1_index=0\n\
    \    local planet2_index=0\n    local i=0\n    local j=0\n    local result=()\n\
    \    for planet in ${planets[@]}; do\n        if [ $planet1 == $planet ]; then\n\
    \            planet1_index=$i\n        fi\n        if [ $planet2 == $planet ];\
    \ then\n            planet2_index=$i\n        fi\n        i=$((i+1))\n    done\n\
    \    if [ $planet1_index -eq 0 ] || [ $planet2_index -eq 0 ]; then\n        echo\
    \ \"[]\"\n        exit 0\n    fi\n    if [ $planet1_index -lt $planet2_index ];\
    \ then\n        for ((i=$planet1_index+1; i<$planet2_index; i++)); do\n      \
    \      result[$j]=${planets[$i]}\n            j=$((j+1))\n        done\n    else\n\
    \        for ((i=$planet2_index+1; i<$planet1_index; i++)); do\n            result[$j]=${planets[$i]}\n\
    \            j=$((j+1))\n        done\n    fi\n    echo ${result[@]}", "    #\
    \ Write your code here\n    # To print results to the standard output you can\
    \ use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello world\"", "\t\
    local planets=(Mercury Venus Earth Mars Jupiter Saturn Uranus Neptune)\n\tlocal\
    \ planet1=$1\n\tlocal planet2=$2\n\tlocal planet1_index=0\n\tlocal planet2_index=0\n\
    \tlocal i=0\n\tlocal result=()\n\tlocal result_index=0\n\t\n\t# find the index\
    \ of planet1 and planet2 in the planets array\n\tfor i in \"${planets[@]}\"\n\t\
    do\n\t\tif [ \"$i\" == \"$planet1\" ]; then\n\t\t\tplanet1_index=$i\n\t\tfi\n\t\
    \tif [ \"$i\" == \"$planet2\" ]; then\n\t\t\tplanet2_index=$i\n\t\tfi\n\tdone\n\
    \t\n\t# if planet1 or planet2 is not in the planets array, return empty list\n\
    \tif [ $planet1_index -eq 0 -o $planet2_index -eq 0 ]; then\n\t\techo \"[]\"\n\
    \t\treturn\n\tfi\n\t\n\t# if planet1 is after planet2, swap them\n\tif [ $planet1_index\
    \ -gt $planet2_index ]; then\n\t\tlocal tmp=$planet1\n\t\tplanet1=$planet2\n\t\
    \tplanet2=$tmp\n\t\tplanet1_index=$planet2_index\n\t\tplanet2_index=$tmp\n\tfi\n\
    \t\n\t# find the planets between planet1 and planet2\n\tfor i in \"${planets[@]}\"\
    \n\tdo\n\t\tif [ $i -gt $planet1_index -a $i -lt $planet2_index ]; then\n\t\t\t\
    result[$result_index]=$i\n\t\t\tresult_index=$((result_index+1))\n\t\tfi\n\tdone\n\
    \t\n\t# print the result\n\techo \"[\"\n\tfor i in \"${result[@]}\"\n\tdo\n\t\t\
    echo '\"'$i'\"'\n\tdone\n\techo \"]\"", "    planets=(\"Mercury\" \"Venus\" \"\
    Earth\" \"Mars\" \"Jupiter\" \"Saturn\" \"Uranus\" \"Neptune\")\n    planet1=$1\n\
    \    planet2=$2\n    planet1_index=0\n    planet2_index=0\n    for i in ${!planets[@]};\
    \ do\n        if [ \"${planets[$i]}\" == \"$planet1\" ]; then\n            planet1_index=$i\n\
    \        fi\n        if [ \"${planets[$i]}\" == \"$planet2\" ]; then\n       \
    \     planet2_index=$i\n        fi\n    done\n    if [ $planet1_index -gt $planet2_index\
    \ ]; then\n        planet1_index=$((planet1_index+1))\n        planet2_index=$((planet2_index-1))\n\
    \    else\n        planet1_index=$((planet1_index+1))\n        planet2_index=$((planet2_index-1))\n\
    \    fi\n    for i in $(seq $planet1_index $planet2_index); do\n        echo -n\
    \ \"\\\"${planets[$i]}\\\" \"\n    done", "    # Write your code here\n    # Use\
    \ echo to output the result, e.g.\n    # echo \"Venus\"\n    # echo \"Venus\"\
    \ \"Earth\"\n    # echo \"Venus\" \"Earth\" \"Mars\"\n    # echo \"Venus\" \"\
    Earth\" \"Mars\" \"Jupiter\"\n    # echo \"Venus\" \"Earth\" \"Mars\" \"Jupiter\"\
    \ \"Saturn\"\n    # echo \"Venus\" \"Earth\" \"Mars\" \"Jupiter\" \"Saturn\" \"\
    Uranus\"\n    # echo \"Venus\" \"Earth\" \"Mars\" \"Jupiter\" \"Saturn\" \"Uranus\"\
    \ \"Neptune\"\n    # echo \"Venus\" \"Earth\" \"Mars\" \"Jupiter\" \"Saturn\"\
    \ \"Uranus\" \"Neptune\" \"Mercury\"\n    # echo \"Venus\" \"Earth\" \"Mars\"\
    \ \"Jupiter\" \"Saturn\" \"Uranus\" \"Neptune\" \"Mercury\" \"Jupiter\"\n    #\
    \ echo \"Venus\" \"Earth\" \"Mars\" \"Jupiter\" \"Saturn\" \"Uranus\" \"Neptune\"\
    \ \"Mercury\" \"Jupiter\" \"Saturn\"\n    # echo \"Venus\" \"Earth\" \"Mars\"\
    \ \"Jupiter\" \"Saturn\" \"Uranus\" \"Neptune\" \"Mercury\" \"Jupiter\" \"Saturn\"\
    \ \"Uranus\"\n    # echo \"Venus\" \"Earth\" \"Mars\" \"Jupiter\" \"Saturn\" \"\
    Uranus\" \"Neptune\" \"Mercury\" \"Jupiter\" \"Saturn\" \"Uranus\" \"Neptune\"\
    \n    # echo \"Venus\" \"Earth\" \"Mars\" \"Jupiter\" \"Saturn\" \"Uranus\" \"\
    Neptune\" \"Mercury\" \"Jupiter\" \"Saturn\" \"Uranus\" \"Neptune\" \"Mercury\"\
    \n    # echo \"Venus\" \"Earth\" \"Mars\" \"Jupiter\" \"Saturn\" \"Uranus\" \"\
    Neptune\" \"Mercury\" \"Jupiter\" \"Saturn\" \"Uranus\" \"Neptune\" \"Mercury\"\
    \ \"Jupiter\"\n    # echo \"Venus\" \"Earth\" \"Mars\" \"J", "    # Write your\
    \ code here\n    # To print results to the standard output you can use echo\n\
    \    # Example: echo \"Hello world\"\n    echo \"Hello world\"", "  local planets=(Mercury\
    \ Venus Earth Mars Jupiter Saturn Uranus Neptune)\n  local planet1=$1\n  local\
    \ planet2=$2\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n\
    \  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n\
    \  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n\
    \  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local\
    \ ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n\
    \  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local\
    \ pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n\
    \  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local\
    \ aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n\
    \  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n \
    \ local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local\
    \ qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n\
    \  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n  local aaaa=0\n\
    \  local bbbb=0\n  local cccc", "  # your code here\n  local planets=(Mercury\
    \ Venus Earth Mars Jupiter Saturn Uranus Neptune)\n  local planet1=$1\n  local\
    \ planet2=$2\n  local planet1_index=0\n  local planet2_index=0\n  local result=()\n\
    \  local i=0\n  for planet in ${planets[@]}; do\n    if [ \"$planet\" == \"$planet1\"\
    \ ]; then\n      planet1_index=$i\n    fi\n    if [ \"$planet\" == \"$planet2\"\
    \ ]; then\n      planet2_index=$i\n    fi\n    i=$((i+1))\n  done\n  if [ $planet1_index\
    \ -eq 0 -o $planet2_index -eq 0 ]; then\n    echo \"[]\"\n    return\n  fi\n \
    \ if [ $planet1_index -lt $planet2_index ]; then\n    for ((i=$planet1_index+1;\
    \ i<$planet2_index; i++)); do\n      result+=(${planets[$i]})\n    done\n  else\n\
    \    for ((i=$planet2_index+1; i<$planet1_index; i++)); do\n      result+=(${planets[$i]})\n\
    \    done\n  fi\n  echo \"[\\\"${result[@]}\\\"]\"", "    if [[ $1 == \"Mercury\"\
    \ ]]; then\n        if [[ $2 == \"Venus\" ]]; then\n            echo \"Mercury\"\
    \n        elif [[ $2 == \"Earth\" ]]; then\n            echo \"Mercury Venus\"\
    \n        elif [[ $2 == \"Mars\" ]]; then\n            echo \"Mercury Venus Earth\"\
    \n        elif [[ $2 == \"Jupiter\" ]]; then\n            echo \"Mercury Venus\
    \ Earth Mars\"\n        elif [[ $2 == \"Saturn\" ]]; then\n            echo \"\
    Mercury Venus Earth Mars Jupiter\"\n        elif [[ $2 == \"Uranus\" ]]; then\n\
    \            echo \"Mercury Venus Earth Mars Jupiter Saturn\"\n        elif [[\
    \ $2 == \"Neptune\" ]]; then\n            echo \"Mercury Venus Earth Mars Jupiter\
    \ Saturn Uranus\"\n        else\n            echo \"Mercury Venus Earth Mars Jupiter\
    \ Saturn Uranus Neptune\"\n        fi\n    elif [[ $1 == \"Venus\" ]]; then\n\
    \        if [[ $2 == \"Earth\" ]]; then\n            echo \"Venus\"\n        elif\
    \ [[ $2 == \"Mars\" ]]; then\n            echo \"Venus Earth\"\n        elif [[\
    \ $2 == \"Jupiter\" ]]; then\n            echo \"Venus Earth Mars\"\n        elif\
    \ [[ $2 == \"Saturn\" ]]; then\n            echo \"Venus Earth Mars Jupiter\"\n\
    \        elif [[ $2 == \"Uranus\" ]]; then\n            echo \"Venus Earth Mars\
    \ Jupiter Saturn\"\n        elif [[ $2 == \"Neptune\" ]]; then\n            echo\
    \ \"Venus Earth Mars Jupiter Saturn Uranus\"\n        else\n            echo \"\
    Venus Earth Mars Jupiter Saturn Uranus Neptune\"\n        fi\n    elif [[ $1 ==\
    \ \"Earth\" ]]; then\n        if [[ $2 == \"Mars\" ]]; then\n            echo\
    \ \"Earth\"\n        elif [[ $2 == \"Jupiter\" ]]; then\n            echo \"Earth\
    \ Mars\"\n        elif [[ $2 == \"Saturn\" ]]; then\n            echo \"Earth\
    \ Mars Jupiter\"\n        elif [[ $2 == \"Uranus\" ]]; then\n            echo\
    \ \"Earth Mars Jupiter Saturn\"\n        elif [[ $2 == \"Neptune\" ]]; then\n",
  "    # write your code here\n    # you can use the following command to get the\
    \ list of planets\n    # planets=$(curl -s https://raw.githubusercontent.com/fsufitch/daily-bash-problems/master/planets.txt)\n\
    \    # you can use the following command to get the list of planets\n    planets=$(curl\
    \ -s https://raw.githubusercontent.com/fsufitch/daily-bash-problems/master/planets.txt)\n\
    \    planet1=$1\n    planet2=$2\n    planet1_index=$(echo $planets | tr ' ' '\\\
    n' | grep -n $planet1 | cut -d ':' -f 1)\n    planet2_index=$(echo $planets |\
    \ tr ' ' '\\n' | grep -n $planet2 | cut -d ':' -f 1)\n    if [ -z $planet1_index\
    \ ] || [ -z $planet2_index ]; then\n        echo \"[]\"\n    elif [ $planet1_index\
    \ -gt $planet2_index ]; then\n        echo $planets | tr ' ' '\\n' | head -n $planet1_index\
    \ | tail -n +$planet2_index | tr '\\n' ' '\n    else\n        echo $planets |\
    \ tr ' ' '\\n' | head -n $planet2_index | tail -n +$planet1_index | tr '\\n' '\
    \ '\n    fi", "    # Write your code here\n    # To print results to the standard\
    \ output you can use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello\
    \ world\"", "    local planets=( \"Mercury\" \"Venus\" \"Earth\" \"Mars\" \"Jupiter\"\
    \ \"Saturn\" \"Uranus\" \"Neptune\" )\n    local planet1=$1\n    local planet2=$2\n\
    \    local planet1_index=0\n    local planet2_index=0\n    local i=0\n    local\
    \ result=()\n    for planet in ${planets[@]}; do\n        if [ \"$planet\" ==\
    \ \"$planet1\" ]; then\n            planet1_index=$i\n        fi\n        if [\
    \ \"$planet\" == \"$planet2\" ]; then\n            planet2_index=$i\n        fi\n\
    \        i=$((i+1))\n    done\n    if [ $planet1_index -gt $planet2_index ]; then\n\
    \        for i in $(seq $planet2_index $planet1_index); do\n            result+=(${planets[$i]})\n\
    \        done\n    else\n        for i in $(seq $planet1_index $planet2_index);\
    \ do\n            result+=(${planets[$i]})\n        done\n    fi\n    echo ${result[@]}",
  "    # Write your code here\n    # To print results to the standard output you can\
    \ use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello world\"", " \
    \ local planets=(Mercury Venus Earth Mars Jupiter Saturn Uranus Neptune)\n  local\
    \ planet1=$1\n  local planet2=$2\n  local planet1_index=0\n  local planet2_index=0\n\
    \  local result=\"\"\n  local i=0\n  local planet=\"\"\n  local planet_index=0\n\
    \  local planet_name=\"\"\n  local planet_index_1=0\n  local planet_index_2=0\n\
    \  local planet_name_1=\"\"\n  local planet_name_2=\"\"\n  local planet_index_1_found=false\n\
    \  local planet_index_2_found=false\n  local planet_index_1_found_first=false\n\
    \  local planet_index_2_found_first=false\n  local planet_index_1_found_second=false\n\
    \  local planet_index_2_found_second=false\n  local planet_index_1_found_second_first=false\n\
    \  local planet_index_2_found_second_first=false\n  local planet_index_1_found_second_second=false\n\
    \  local planet_index_2_found_second_second=false\n  local planet_index_1_found_second_second_first=false\n\
    \  local planet_index_2_found_second_second_first=false\n  local planet_index_1_found_second_second_second=false\n\
    \  local planet_index_2_found_second_second_second=false\n  local planet_index_1_found_second_second_second_first=false\n\
    \  local planet_index_2_found_second_second_second_first=false\n  local planet_index_1_found_second_second_second_second=false\n\
    \  local planet_index_2_found_second_second_second_second=false\n  local planet_index_1_found_second_second_second_second_first=false\n\
    \  local planet_index_2_found_second_second_second_second_first=false\n  local\
    \ planet_index_1_found_second_second_second_second_second=false\n  local planet_index_2_found_second_second_second_second_second=false\n\
    \  local planet_index_1_found_", "    # Write your code here\n    # You can add\
    \ functions if you want\n    # You can use global variables if you want\n    #\
    \ You can use the $1 and $2 variables if you want\n    # You can use the echo\
    \ command if you want\n    # You can use the return command if you want\n    #\
    \ You can use the exit command if you want\n    # You can use the read command\
    \ if you want\n    # You can use the cat command if you want\n    # You can use\
    \ the grep command if you want\n    # You can use the sed command if you want\n\
    \    # You can use the tr command if you want\n    # You can use the sort command\
    \ if you want\n    # You can use the uniq command if you want\n    # You can use\
    \ the wc command if you want\n    # You can use the head command if you want\n\
    \    # You can use the tail command if you want\n    # You can use the cut command\
    \ if you want\n    # You can use the tr command if you want\n    # You can use\
    \ the tr command if you want\n    # You can use the tr command if you want\n \
    \   # You can use the tr command if you want\n    # You can use the tr command\
    \ if you want\n    # You can use the tr command if you want\n    # You can use\
    \ the tr command if you want\n    # You can use the tr command if you want\n \
    \   # You can use the tr command if you want\n    # You can use the tr command\
    \ if you want\n    # You can use the tr command if you want\n    # You can use\
    \ the tr command if you want\n    # You can use the tr command if you want\n \
    \   # You can use the tr command if you want\n    # You can use the tr command\
    \ if you want\n    # You can use the tr command if you want\n    # You can use\
    \ the tr command if you want\n    # You can use the tr command if you want\n \
    \   # You can use the tr command if you want\n    # You can use the tr command\
    \ if you want\n    # You can use the tr command if you want\n    # You can use\
    \ the tr command if you want\n    # You can use the tr command if you want\n \
    \   # You can use the tr command if you want\n    # You can use the tr command\
    \ if", "    # Write your code here\n    # To print results to the standard output\
    \ you can use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello world\"",
  "    # Write your code here\n    # To print results to the standard output you can\
    \ use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello world\"", " \
    \ # Write your code here\n  #planet1=$1\n  #planet2=$2\n  #echo $planet1\n  #echo\
    \ $planet2\n  #echo $1\n  #echo $2\n  #echo $@\n  #echo $#\n  #echo $*\n  #echo\
    \ $0\n  #echo $1\n  #echo $2\n  #echo $3\n  #echo $4\n  #echo $5\n  #echo $6\n\
    \  #echo $7\n  #echo $8\n  #echo $9\n  #echo ${10}\n  #echo ${11}\n  #echo ${12}\n\
    \  #echo ${13}\n  #echo ${14}\n  #echo ${15}\n  #echo ${16}\n  #echo ${17}\n \
    \ #echo ${18}\n  #echo ${19}\n  #echo ${20}\n  #echo ${21}\n  #echo ${22}\n  #echo\
    \ ${23}\n  #echo ${24}\n  #echo ${25}\n  #echo ${26}\n  #echo ${27}\n  #echo ${28}\n\
    \  #echo ${29}\n  #echo ${30}\n  #echo ${31}\n  #echo ${32}\n  #echo ${33}\n \
    \ #echo ${34}\n  #echo ${35}\n  #echo ${36}\n  #echo ${37}\n  #echo ${38}\n  #echo\
    \ ${39}\n  #echo ${40}\n  #echo ${41}\n  #echo ${42}\n  #echo ${43}\n  #echo ${44}\n\
    \  #echo ${45}\n  #echo ${46}\n  #echo ${47}\n  #echo ${48}\n  #echo ${49}\n \
    \ #echo ${50}\n  #echo ${51}\n  #echo ${52}\n  #echo ${53}\n  #echo ${54}\n  #echo\
    \ ${55}\n  #echo ${56}\n  #echo ${57}\n  #echo ${58}\n  #echo ${59}\n  #echo ${60}\n\
    \  #echo ${61}\n  #echo ${62}\n  #echo ${63}\n  #echo ${64}\n ", "    # Write\
    \ your code here\n    # To print results to the standard output you can use echo\n\
    \    # To access arguments use echo \"$1\" \"$2\"\n    echo \"Not implemented\
    \ yet\"", "    if [ $# -ne 2 ]; then\n        echo \"Usage: $0 planet1 planet2\"\
    \n        exit 1\n    fi\n    local planet1=\"$1\"\n    local planet2=\"$2\"\n\
    \    local planets=(Mercury Venus Earth Mars Jupiter Saturn Uranus Neptune)\n\
    \    local planet1_index=0\n    local planet2_index=0\n    local planet_index=0\n\
    \    local result=()\n    for planet in ${planets[@]}; do\n        if [ \"$planet\"\
    \ == \"$planet1\" ]; then\n            planet1_index=$planet_index\n        fi\n\
    \        if [ \"$planet\" == \"$planet2\" ]; then\n            planet2_index=$planet_index\n\
    \        fi\n        planet_index=$((planet_index+1))\n    done\n    if [ $planet1_index\
    \ -eq 0 -o $planet2_index -eq 0 ]; then\n        echo \"Usage: $0 planet1 planet2\"\
    \n        exit 1\n    fi\n    if [ $planet1_index -gt $planet2_index ]; then\n\
    \        planet1_index=$((planet1_index+planet2_index))\n        planet2_index=$((planet1_index-planet2_index))\n\
    \        planet1_index=$((planet1_index-planet2_index))\n    fi\n    planet_index=$planet1_index\n\
    \    while [ $planet_index -lt $planet2_index ]; do\n        result+=(${planets[$planet_index]})\n\
    \        planet_index=$((planet_index+1))\n    done\n    echo ${result[@]}", " \
    \   # Write your code here\n    # To print results to the standard output you\
    \ can use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello world\"",
  "    # Write your code here\n    # To print results to the standard output you can\
    \ use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello world\"", " \
    \   # Write your solution here\n    # The following line is a placeholder for\
    \ the solution\n    echo \"Not implemented\"", "    # write your code here\n \
    \   echo \"Not implemented\"", "    # write your code here\n    echo \"Not implemented\"",
  "    # Write your code here\n    # To print results to the standard output you can\
    \ use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello world\"", " \
    \   local planets=(Mercury Venus Earth Mars Jupiter Saturn Uranus Neptune)\n \
    \   local planet1=$1\n    local planet2=$2\n    local planet1_index\n    local\
    \ planet2_index\n    local planet_index\n    local planet_name\n    local result=()\n\
    \    for planet_index in ${!planets[@]}; do\n        planet_name=${planets[$planet_index]}\n\
    \        if [ \"$planet_name\" == \"$planet1\" ]; then\n            planet1_index=$planet_index\n\
    \        fi\n        if [ \"$planet_name\" == \"$planet2\" ]; then\n         \
    \   planet2_index=$planet_index\n        fi\n    done\n    if [ -z \"$planet1_index\"\
    \ ] || [ -z \"$planet2_index\" ]; then\n        echo \"()\"\n        return\n\
    \    fi\n    if [ $planet1_index -lt $planet2_index ]; then\n        for planet_index\
    \ in $(seq $planet1_index $planet2_index); do\n            planet_name=${planets[$planet_index]}\n\
    \            result+=(\"$planet_name\")\n        done\n    else\n        for planet_index\
    \ in $(seq $planet2_index $planet1_index); do\n            planet_name=${planets[$planet_index]}\n\
    \            result+=(\"$planet_name\")\n        done\n    fi\n    echo \"(${result[@]})\"",
  "    local planets=(Mercury Venus Earth Mars Jupiter Saturn Uranus Neptune)\n  \
    \  local planet1=$1\n    local planet2=$2\n    local planet1_index=0\n    local\
    \ planet2_index=0\n    local planet_index=0\n    local planet_list=()\n    local\
    \ planet_list_index=0\n    local planet_list_size=0\n    local planet_list_string=\"\
    \"\n    local planet_list_string_size=0\n    local planet_list_string_index=0\n\
    \    local planet_list_string_char=\"\"\n    local planet_list_string_char_index=0\n\
    \    local planet_list_string_char_size=0\n    local planet_list_string_char_list=()\n\
    \    local planet_list_string_char_list_index=0\n    local planet_list_string_char_list_size=0\n\
    \    local planet_list_string_char_list_string=\"\"\n    local planet_list_string_char_list_string_size=0\n\
    \    local planet_list_string_char_list_string_index=0\n    local planet_list_string_char_list_string_char=\"\
    \"\n    local planet_list_string_char_list_string_char_index=0\n    local planet_list_string_char_list_string_char_size=0\n\
    \    local planet_list_string_char_list_string_char_list=()\n    local planet_list_string_char_list_string_char_list_index=0\n\
    \    local planet_list_string_char_list_string_char_list_size=0\n    local planet_list_string_char_list_string_char_list_string=\"\
    \"\n    local planet_list_string_char_list_string_char_list_string_size=0\n  \
    \  local planet_list_string_char_list_string_char_list_string_index=0\n    local\
    \ planet_list_string_char_list_string_char_list_string_char=\"\"\n    local planet_list_string_char_list_string_char_list_string_char_index=0\n\
    \    local planet_list_string_char_list_string_char_list_string", "    # Write\
    \ your code here\n    # You can use the following command to get the path of the\
    \ planets.txt file:\n    # planets_file=$(bf-path planets.txt)\n    # You can\
    \ use the following command to get the path of the bf binary:\n    # bf_path=$(bf-path\
    \ bf)\n    # You can use the following command to get the path of the bf-lib.sh\
    \ file:\n    # bf_lib=$(bf-path bf-lib.sh)\n    # You can use the following command\
    \ to get the path of the bf-lib.c file:\n    # bf_lib_c=$(bf-path bf-lib.c)\n\
    \    # You can use the following command to get the path of the bf-lib.h file:\n\
    \    # bf_lib_h=$(bf-path bf-lib.h)\n    # You can use the following command to\
    \ get the path of the bf-lib-test.sh file:\n    # bf_lib_test=$(bf-path bf-lib-test.sh)\n\
    \    # You can use the following command to get the path of the bf-lib-test.c\
    \ file:\n    # bf_lib_test_c=$(bf-path bf-lib-test.c)\n    # You can use the following\
    \ command to get the path of the bf-lib-test.h file:\n    # bf_lib_test_h=$(bf-path\
    \ bf-lib-test.h)\n    # You can use the following command to get the path of the\
    \ bf-lib-test-main.c file:\n    # bf_lib_test_main_c=$(bf-path bf-lib-test-main.c)\n\
    \    # You can use the following command to get the path of the bf-lib-test-main.h\
    \ file:\n    # bf_lib_test_main_h=$(bf-path bf-lib-test-main.h)\n    # You can\
    \ use the following command to get the path of the bf-lib-test-main.o file:\n\
    \    # bf_lib_test_main_o=$(bf-path b", "    planets=(\"Mercury\" \"Venus\" \"\
    Earth\" \"Mars\" \"Jupiter\" \"Saturn\" \"Uranus\" \"Neptune\")\n    planet1=$1\n\
    \    planet2=$2\n    planet1_index=0\n    planet2_index=0\n    for ((i=0; i<${#planets[@]};\
    \ i++)); do\n        if [ \"${planets[$i]}\" == \"$planet1\" ]; then\n       \
    \     planet1_index=$i\n        fi\n        if [ \"${planets[$i]}\" == \"$planet2\"\
    \ ]; then\n            planet2_index=$i\n        fi\n    done\n    if [ $planet1_index\
    \ -gt $planet2_index ]; then\n        for ((i=$planet2_index+1; i<$planet1_index;\
    \ i++)); do\n            echo -n \"\\\"${planets[$i]}\\\" \"\n        done\n \
    \   else\n        for ((i=$planet1_index+1; i<$planet2_index; i++)); do\n    \
    \        echo -n \"\\\"${planets[$i]}\\\" \"\n        done\n    fi", "    # Write\
    \ your code here\n    # To print results to the standard output you can use echo\n\
    \    # Example: echo \"Hello world\"\n    echo \"Hello world\"", "    # Write\
    \ your code here\n    # To print results to the standard output you can use echo\n\
    \    # Example: echo \"Hello world\"\n    echo \"Hello world\"", "    # Write\
    \ your code here\n    # To print results to the standard output you can use echo\n\
    \    # Example: echo \"Hello world\"\n    echo \"Hello world\"", "    local planet1=$1\n\
    \    local planet2=$2\n    local planets=(\"Mercury\" \"Venus\" \"Earth\" \"Mars\"\
    \ \"Jupiter\" \"Saturn\" \"Uranus\" \"Neptune\")\n    local planets_str=$(printf\
    \ '\"%s\" ' \"${planets[@]}\")\n    local planets_str=${planets_str% }\n    local\
    \ planets_str=${planets_str# }\n    local planets_str=\"[$planets_str]\"\n   \
    \ local planets_str=$(echo $planets_str | sed \"s/\\\"$planet1\\\"/\\\"$planet1\\\
    \" \\\"$planet2\\\"/g\")\n    local planets_str=$(echo $planets_str | sed \"s/\\\
    \"$planet2\\\"/\\\"$planet1\\\" \\\"$planet2\\\"/g\")\n    local planets_str=$(echo\
    \ $planets_str | sed \"s/\\\"$planet1\\\"/\\\"$planet2\\\" \\\"$planet1\\\"/g\"\
    )\n    local planets_str=$(echo $planets_str | sed \"s/\\\"$planet2\\\"/\\\"$planet2\\\
    \" \\\"$planet1\\\"/g\")\n    local planets_str=$(echo $planets_str | sed \"s/\\\
    \"$planet1\\\"/\\\"$planet1\\\"/g\")\n    local planets_str=$(echo $planets_str\
    \ | sed \"s/\\\"$planet2\\\"/\\\"$planet2\\\"/g\")\n    local planets_str=$(echo\
    \ $planets_str | sed \"s/\\\"$planet1\\\" \\\"$planet2\\\"/\\\"$planet2\\\" \\\
    \"$planet1\\\"/g\")\n    local planets_str=$(echo $planets_str | sed \"s/\\\"\
    $planet2\\\" \\\"$planet1\\\"/\\\"$planet2\\\" \\\"$planet1\\\"/g\")\n    local\
    \ planets_str=$(echo $planets_str | sed \"s/\\\"$planet1\\\" \\\"$planet2\\\"\
    /\\\"$planet2\\\" \\\"$planet1\\\"/g\")\n    local planets_str=$(echo $planets_str\
    \ | sed \"s/\\\"$planet2\\\" \\\"$planet1\\\"/\\\"$planet2\\\" \\\"$planet1\\\"\
    /g\")\n    local planets_str", "    # Write your code here\n    # To print results\
    \ to the standard output you can use echo\n    # Example: echo \"Hello world\"\
    \n    echo \"Hello world\"", "    # Write your code here\n    # To print results\
    \ to the standard output you can use echo\n    # To access arguments use echo\
    \ \"$1\" \"$2\"\n    echo \"Not implemented yet\"", "    if [ \"$1\" = \"Mercury\"\
    \ ]; then\n        if [ \"$2\" = \"Mercury\" ]; then\n            echo \"Mercury\"\
    \n        elif [ \"$2\" = \"Venus\" ]; then\n            echo \"Venus\"\n    \
    \    elif [ \"$2\" = \"Earth\" ]; then\n            echo \"Venus\"\n        elif\
    \ [ \"$2\" = \"Mars\" ]; then\n            echo \"Venus\"\n        elif [ \"$2\"\
    \ = \"Jupiter\" ]; then\n            echo \"Venus\"\n        elif [ \"$2\" = \"\
    Saturn\" ]; then\n            echo \"Venus\"\n        elif [ \"$2\" = \"Uranus\"\
    \ ]; then\n            echo \"Venus\"\n        elif [ \"$2\" = \"Neptune\" ];\
    \ then\n            echo \"Venus\"\n        else\n            echo \"Invalid planet\
    \ name\"\n        fi\n    elif [ \"$1\" = \"Venus\" ]; then\n        if [ \"$2\"\
    \ = \"Mercury\" ]; then\n            echo \"Mercury\"\n        elif [ \"$2\" =\
    \ \"Venus\" ]; then\n            echo \"Venus\"\n        elif [ \"$2\" = \"Earth\"\
    \ ]; then\n            echo \"Earth\"\n        elif [ \"$2\" = \"Mars\" ]; then\n\
    \            echo \"Earth\"\n        elif [ \"$2\" = \"Jupiter\" ]; then\n   \
    \         echo \"Earth\"\n        elif [ \"$2\" = \"Saturn\" ]; then\n       \
    \     echo \"Earth\"\n        elif [ \"$2\" = \"Uranus\" ]; then\n           \
    \ echo \"Earth\"\n        elif [ \"$2\" = \"Neptune\" ]; then\n            echo\
    \ \"Earth\"\n        else\n            echo \"Invalid planet name\"\n        fi\n\
    \    elif [ \"$1\" = \"Earth\" ]; then\n        if [ \"$2\" = \"Mercury\" ]; then\n\
    \            echo \"Mercury\"\n        elif [ \"$2\" = \"Venus\" ]; then\n   \
    \         echo \"Venus\"\n        elif [ \"$2\" = \"Earth\" ]; then\n        \
    \    echo \"Earth\"\n        elif [ \"$2\" = \"Mars\" ]; then\n            echo\
    \ \"Mars\"\n        elif [ \"$2\" = \"Jupiter\" ];", "    # Write your code here\n\
    \    # To print results to the standard output you can use echo\n    # Example:\
    \ echo \"Hello world\"\n    echo \"Hello world\"", "  # your code here\n  # use\
    \ the following command to get the list of planets\n  # planets=$(echo \"Mercury\
    \ Venus Earth Mars Jupiter Saturn Uranus Neptune\")\n  # use the following command\
    \ to get the index of a planet\n  # index=$(echo $planets | grep -o -n $1 | cut\
    \ -d: -f1)\n  # use the following command to get the planet at a given index\n\
    \  # planet=$(echo $planets | cut -d' ' -f$index)\n  # use the following command\
    \ to get the number of planets\n  # nb_planets=$(echo $planets | wc -w)\n  # use\
    \ the following command to get the list of planets between two indexes\n  # planets_between=$(echo\
    \ $planets | cut -d' ' -f$index1-$index2)\n  # use the following command to get\
    \ the list of planets between two indexes\n  # planets_between=$(echo $planets\
    \ | cut -d' ' -f$index1-$index2)\n  # use the following command to get the list\
    \ of planets between two indexes\n  # planets_between=$(echo $planets | cut -d'\
    \ ' -f$index1-$index2)\n  # use the following command to get the list of planets\
    \ between two indexes\n  # planets_between=$(echo $planets | cut -d' ' -f$index1-$index2)\n\
    \  # use the following command to get the list of planets between two indexes\n\
    \  # planets_between=$(echo $planets | cut -d' ' -f$index1-$index2)\n  # use the\
    \ following command to get the list of planets between two indexes\n  # planets_between=$(echo\
    \ $planets | cut -d' ' -f$index1-$index2)\n  # use the following command to get\
    \ the list of planets between two indexes\n  # planets_between=$(echo $planets\
    \ | cut -d' ' -f$index1-$index2)\n  # use the following command to get the list\
    \ of planets between two indexes\n  # planets_between=$(echo $planets | cut -d'\
    \ ' -f$index1-$index2)\n  # use the following command to get the list of planets\
    \ between two indexes\n  # planets", "    # Write your code here\n    # To print\
    \ results to the standard output you can use echo\n    # Example: echo \"Hello\
    \ world\"\n    echo \"Hello world\"", "    # Write your code here\n    # To print\
    \ results to the standard output you can use echo\n    # To access arguments use\
    \ echo \"$1\" \"$2\"\n    # To access the arguments use echo \"$1\" \"$2\"\n \
    \   # To print the result of the test use echo \"$result\"\n    if [ \"$1\" =\
    \ \"Mercury\" ] && [ \"$2\" = \"Mercury\" ]; then\n        echo \"Mercury\"\n\
    \    elif [ \"$1\" = \"Mercury\" ] && [ \"$2\" = \"Venus\" ]; then\n        echo\
    \ \"Venus\"\n    elif [ \"$1\" = \"Mercury\" ] && [ \"$2\" = \"Earth\" ]; then\n\
    \        echo \"Venus\"\n        echo \"Earth\"\n    elif [ \"$1\" = \"Mercury\"\
    \ ] && [ \"$2\" = \"Mars\" ]; then\n        echo \"Venus\"\n        echo \"Earth\"\
    \n        echo \"Mars\"\n    elif [ \"$1\" = \"Mercury\" ] && [ \"$2\" = \"Jupiter\"\
    \ ]; then\n        echo \"Venus\"\n        echo \"Earth\"\n        echo \"Mars\"\
    \n        echo \"Jupiter\"\n    elif [ \"$1\" = \"Mercury\" ] && [ \"$2\" = \"\
    Saturn\" ]; then\n        echo \"Venus\"\n        echo \"Earth\"\n        echo\
    \ \"Mars\"\n        echo \"Jupiter\"\n        echo \"Saturn\"\n    elif [ \"$1\"\
    \ = \"Mercury\" ] && [ \"$2\" = \"Uranus\" ]; then\n        echo \"Venus\"\n \
    \       echo \"Earth\"\n        echo \"Mars\"\n        echo \"Jupiter\"\n    \
    \    echo \"Saturn\"\n        echo \"Uranus\"\n    elif [ \"$1\" = \"Mercury\"\
    \ ] && [ \"$2\" = \"Neptune\" ]; then\n        echo \"Venus\"\n        echo \"\
    Earth\"\n        echo \"Mars\"\n        echo \"Jupiter\"\n        echo \"Saturn\"\
    \n        echo \"Uranus\"\n        echo \"Neptune\"\n    elif [ \"$1\" = \"Venus\"\
    \ ] && [ \"$2\" = \"Venus\" ]; then\n        echo \"Venus\"\n    elif [ \"$1\"\
    \ = \"Venus", "    local -a planets=(\"Mercury\" \"Venus\" \"Earth\" \"Mars\"\
    \ \"Jupiter\" \"Saturn\" \"Uranus\" \"Neptune\")\n    local -a result=()\n   \
    \ local -i start=0\n    local -i end=0\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0", "    # Write your code here\n    # To print results\
    \ to the standard output you can use echo\n    # To access arguments use echo\
    \ \"$1\" \"$2\"\n    # To access the array planets use echo \"${planets[@]}\"\n\
    \    # To access the array planets use echo \"${planets[@]}\"\n    # To access\
    \ the array planets use echo \"${planets[@]}\"\n    # To access the array planets\
    \ use echo \"${planets[@]}\"\n    # To access the array planets use echo \"${planets[@]}\"\
    \n    # To access the array planets use echo \"${planets[@]}\"\n    # To access\
    \ the array planets use echo \"${planets[@]}\"\n    # To access the array planets\
    \ use echo \"${planets[@]}\"\n    # To access the array planets use echo \"${planets[@]}\"\
    \n    # To access the array planets use echo \"${planets[@]}\"\n    # To access\
    \ the array planets use echo \"${planets[@]}\"\n    # To access the array planets\
    \ use echo \"${planets[@]}\"\n    # To access the array planets use echo \"${planets[@]}\"\
    \n    # To access the array planets use echo \"${planets[@]}\"\n    # To access\
    \ the array planets use echo \"${planets[@]}\"\n    # To access the array planets\
    \ use echo \"${planets[@]}\"\n    # To access the array planets use echo \"${planets[@]}\"\
    \n    # To access the array planets use echo \"${planets[@]}\"\n    # To access\
    \ the array planets use echo \"${planets[@]}\"\n    # To access the array planets\
    \ use echo \"${planets[@]}\"\n    # To access the array planets use echo \"${planets[@]}\"\
    \n    # To access the array planets use echo \"${planets[@]}\"\n    # To access\
    \ the array planets use echo \"${planets[@]}\"\n    # To access the array planets\
    \ use echo \"${planets[@]}\"\n    # To access the array planets use echo \"${planets[@]}\"\
    \n    # To access the array planets use echo \"${planets[@]}\"\n    # To access\
    \ the array planets use", "    # Write your code here\n    # To print results\
    \ to the standard output you can use echo\n    # Example: echo \"Hello world\"\
    \n    echo \"Hello world\"", "    # Write your code here\n    echo \"Not implemented\
    \ yet\"", "    # Write your code here\n    # To print results to the standard\
    \ output you can use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello\
    \ world\"", "    # Write your code here\n    # To print results to the standard\
    \ output you can use echo\n    # To access arguments use echo \"$1\" \"$2\"\n\
    \    echo \"Not implemented yet\"", "    # Write your code here\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n", "    if [[ $1 == \"Mercury\" ]]; then\n        if [[ $2 == \"Venus\"\
    \ ]]; then\n            echo \"Mercury\"\n        elif [[ $2 == \"Earth\" ]];\
    \ then\n            echo \"Mercury Venus\"\n        elif [[ $2 == \"Mars\" ]];\
    \ then\n            echo \"Mercury Venus Earth\"\n        elif [[ $2 == \"Jupiter\"\
    \ ]]; then\n            echo \"Mercury Venus Earth Mars\"\n        elif [[ $2\
    \ == \"Saturn\" ]]; then\n            echo \"Mercury Venus Earth Mars Jupiter\"\
    \n        elif [[ $2 == \"Uranus\" ]]; then\n            echo \"Mercury Venus\
    \ Earth Mars Jupiter Saturn\"\n        elif [[ $2 == \"Neptune\" ]]; then\n  \
    \          echo \"Mercury Venus Earth Mars Jupiter Saturn Uranus\"\n        else\n\
    \            echo \"Error: $2 is not a planet\"\n        fi\n    elif [[ $1 ==\
    \ \"Venus\" ]]; then\n        if [[ $2 == \"Earth\" ]]; then\n            echo\
    \ \"Venus\"\n        elif [[ $2 == \"Mars\" ]]; then\n            echo \"Venus\
    \ Earth\"\n        elif [[ $2 == \"Jupiter\" ]]; then\n            echo \"Venus\
    \ Earth Mars\"\n        elif [[ $2 == \"Saturn\" ]]; then\n            echo \"\
    Venus Earth Mars Jupiter\"\n        elif [[ $2 == \"Uranus\" ]]; then\n      \
    \      echo \"Venus Earth Mars Jupiter Saturn\"\n        elif [[ $2 == \"Neptune\"\
    \ ]]; then\n            echo \"Venus Earth Mars Jupiter Saturn Uranus\"\n    \
    \    else\n            echo \"Error: $2 is not a planet\"\n        fi\n    elif\
    \ [[ $1 == \"Earth\" ]]; then\n        if [[ $2 == \"Mars\" ]]; then\n       \
    \     echo \"Earth\"\n        elif [[ $2 == \"Jupiter\" ]]; then\n           \
    \ echo \"Earth Mars\"\n        elif [[ $2 == \"Saturn\" ]]; then\n           \
    \ echo \"Earth Mars Jupiter\"\n        elif [[ $2 == \"Uranus\" ]]; then\n   \
    \         echo \"Earth Mars Jupiter Saturn\"\n        elif [[ $2 == \"Neptune\"\
    \ ]]; then\n            echo \"", "    # Write your code here\n    # To print\
    \ results to the standard output you can use echo\n    # Example: echo \"Hello\
    \ world\"\n    echo \"Hello world\"", "    if [ \"$1\" == \"Mercury\" ] && [ \"\
    $2\" == \"Mercury\" ]; then\n        echo '\"Mercury\"'\n    elif [ \"$1\" ==\
    \ \"Mercury\" ] && [ \"$2\" == \"Venus\" ]; then\n        echo '\"Mercury\"'\n\
    \    elif [ \"$1\" == \"Mercury\" ] && [ \"$2\" == \"Earth\" ]; then\n       \
    \ echo '[\"Mercury\", \"Venus\"]'\n    elif [ \"$1\" == \"Mercury\" ] && [ \"\
    $2\" == \"Mars\" ]; then\n        echo '[\"Mercury\", \"Venus\", \"Earth\"]'\n\
    \    elif [ \"$1\" == \"Mercury\" ] && [ \"$2\" == \"Jupiter\" ]; then\n     \
    \   echo '[\"Mercury\", \"Venus\", \"Earth\", \"Mars\"]'\n    elif [ \"$1\" ==\
    \ \"Mercury\" ] && [ \"$2\" == \"Saturn\" ]; then\n        echo '[\"Mercury\"\
    , \"Venus\", \"Earth\", \"Mars\", \"Jupiter\"]'\n    elif [ \"$1\" == \"Mercury\"\
    \ ] && [ \"$2\" == \"Uranus\" ]; then\n        echo '[\"Mercury\", \"Venus\",\
    \ \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\"]'\n    elif [ \"$1\" == \"Mercury\"\
    \ ] && [ \"$2\" == \"Neptune\" ]; then\n        echo '[\"Mercury\", \"Venus\"\
    , \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\"]'\n    elif [ \"$1\"\
    \ == \"Venus\" ] && [ \"$2\" == \"Venus\" ]; then\n        echo '\"Venus\"'\n\
    \    elif [ \"$1\" == \"Venus\" ] && [ \"$2\" == \"Earth\" ]; then\n        echo\
    \ '\"Venus\"'\n    elif [ \"$1\" == \"Venus\" ] && [ \"$2\" == \"Mars\" ]; then\n\
    \        echo '[\"Venus\", \"Earth\"]'\n    elif [ \"$1\" == \"Venus\" ] && [\
    \ \"$2\" == \"Jupiter\" ]; then\n        echo '[\"Venus\", \"Earth\", \"Mars\"\
    ]'\n    elif [ \"$1\" == \"Venus\" ]", "    # Write your code here\n    # To print\
    \ results to the standard output you can use echo\n    # To access arguments use\
    \ echo \"$1\" \"$2\"\n    #echo \"Hello world!\"\n    if [ $1 = \"Mercury\" ]\n\
    \    then\n        if [ $2 = \"Mercury\" ]\n        then\n            echo '[]'\n\
    \        elif [ $2 = \"Venus\" ]\n        then\n            echo '[\"Mercury\"\
    ]'\n        elif [ $2 = \"Earth\" ]\n        then\n            echo '[\"Mercury\"\
    , \"Venus\"]'\n        elif [ $2 = \"Mars\" ]\n        then\n            echo\
    \ '[\"Mercury\", \"Venus\", \"Earth\"]'\n        elif [ $2 = \"Jupiter\" ]\n \
    \       then\n            echo '[\"Mercury\", \"Venus\", \"Earth\", \"Mars\"]'\n\
    \        elif [ $2 = \"Saturn\" ]\n        then\n            echo '[\"Mercury\"\
    , \"Venus\", \"Earth\", \"Mars\", \"Jupiter\"]'\n        elif [ $2 = \"Uranus\"\
    \ ]\n        then\n            echo '[\"Mercury\", \"Venus\", \"Earth\", \"Mars\"\
    , \"Jupiter\", \"Saturn\"]'\n        elif [ $2 = \"Neptune\" ]\n        then\n\
    \            echo '[\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\",\
    \ \"Saturn\", \"Uranus\"]'\n        else\n            echo '[]'\n        fi\n\
    \    elif [ $1 = \"Venus\" ]\n    then\n        if [ $2 = \"Mercury\" ]\n    \
    \    then\n            echo '[]'\n        elif [ $2 = \"Venus\" ]\n        then\n\
    \            echo '[]'\n        elif [ $2 = \"Earth\" ]\n        then\n      \
    \      echo '[\"Venus\"]'\n        elif [ $2 = \"Mars\" ]\n        then\n    \
    \        echo '[\"Venus\", \"Earth\"]'\n        elif [ $2 = \"Jupiter\" ]\n  \
    \      then\n            echo '[\"Venus\", \"Earth\", \"Mars\"]'\n        elif\
    \ [ $2 = \"Saturn\" ]\n        then\n            echo '[\"Venus\", \"Earth\",\
    \ \"Mars", "    # Write your code here\n    # To print results to the standard\
    \ output you can use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello\
    \ world\"", "    # Write your code here\n    # Planet names are case sensitive\n\
    \    # The function should return an empty list if planet1 or planet2\n    # are\
    \ not correct planet names. \n    #\n    # Do not modify these lines\n    echo\
    \ $(echo $1 $2 | ./bf)", "  # Write your code here\n  # You can use the following\
    \ variables:\n  # $1 is a string\n  # $2 is a string\n  # $planets is an array\n\
    \  # $planets_sorted is an array\n  # $planets_sorted_by_distance is an array\n\
    \  # $planets_sorted_by_distance_and_name is an array\n  # $planets_sorted_by_distance_and_name_and_size\
    \ is an array\n  # $planets_sorted_by_distance_and_name_and_size_and_mass is an\
    \ array\n  # $planets_sorted_by_distance_and_name_and_size_and_mass_and_density\
    \ is an array\n  # $planets_sorted_by_distance_and_name_and_size_and_mass_and_density_and_gravity\
    \ is an array\n  # $planets_sorted_by_distance_and_name_and_size_and_mass_and_density_and_gravity_and_moons\
    \ is an array\n  # $planets_sorted_by_distance_and_name_and_size_and_mass_and_density_and_gravity_and_moons_and_rings\
    \ is an array\n  # $planets_sorted_by_distance_and_name_and_size_and_mass_and_density_and_gravity_and_moons_and_rings_and_atmosphere\
    \ is an array\n  # $planets_sorted_by_distance_and_name_and_size_and_mass_and_density_and_gravity_and_moons_and_rings_and_atmosphere_and_temperature\
    \ is an array\n  # $planets_sorted_by_distance_and_name_and_size_and_mass_and_density_and_gravity_and_moons_and_rings_and_atmosphere_and_temperature_and_day\
    \ is an array\n  # $planets_sorted_by_distance_and_name_and_size_and_mass_and_density_and_gravity_and_moons_and_rings_and_atmosphere_",
  "  local planets=(\"Mercury\" \"Venus\" \"Earth\" \"Mars\" \"Jupiter\" \"Saturn\"\
    \ \"Uranus\" \"Neptune\")\n  local planet1=$1\n  local planet2=$2\n  local planet1_index=0\n\
    \  local planet2_index=0\n  local planet_index=0\n  local planet_list=()\n  local\
    \ planet_list_index=0\n  local planet_list_size=0\n  local planet_list_str=\"\"\
    \n  local planet_str=\"\"\n  local planet_str_len=0\n  local planet_str_len_str=\"\
    \"\n  local planet_str_len_str_len=0\n  local planet_str_len_str_len_str=\"\"\n\
    \  local planet_str_len_str_len_str_len=0\n  local planet_str_len_str_len_str_len_str=\"\
    \"\n  local planet_str_len_str_len_str_len_str_len=0\n  local planet_str_len_str_len_str_len_str_len_str=\"\
    \"\n  local planet_str_len_str_len_str_len_str_len_str_len=0\n  local planet_str_len_str_len_str_len_str_len_str_len_str=\"\
    \"\n  local planet_str_len_str_len_str_len_str_len_str_len_str_len=0\n  local\
    \ planet_str_len_str_len_str_len_str_len_str_len_str_len_str=\"\"\n  local planet_str_len_str_len_str_len_str_len_str_len_str_len_str_len=0\n\
    \  local planet_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str=\"\
    \"\n  local planet_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str_len=0\n\
    \  local planet_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str",
  "    # Write your code here\n    # To print results to the standard output you can\
    \ use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello world\"", "\t\
    local planet1=$1\n\tlocal planet2=$2\n\tlocal planets=(\"Mercury\" \"Venus\" \"\
    Earth\" \"Mars\" \"Jupiter\" \"Saturn\" \"Uranus\" \"Neptune\")\n\tlocal planet1_index=0\n\
    \tlocal planet2_index=0\n\tlocal result=()\n\t\n\tfor i in \"${!planets[@]}\"\
    ; do\n\t\tif [ \"${planets[$i]}\" == \"$planet1\" ]; then\n\t\t\tplanet1_index=$i\n\
    \t\tfi\n\t\tif [ \"${planets[$i]}\" == \"$planet2\" ]; then\n\t\t\tplanet2_index=$i\n\
    \t\tfi\n\tdone\n\t\n\tif [ $planet1_index -gt $planet2_index ]; then\n\t\tfor\
    \ i in $(seq $planet2_index $planet1_index); do\n\t\t\tresult+=(\"${planets[$i]}\"\
    )\n\t\tdone\n\telse\n\t\tfor i in $(seq $planet1_index $planet2_index); do\n\t\
    \t\tresult+=(\"${planets[$i]}\")\n\t\tdone\n\tfi\n\t\n\techo ${result[@]}", " \
    \   # Write your code here\n    # To print results to the standard output you\
    \ can use echo\n    # To access arguments use echo \"$1\" \"$2\"\n    echo \"\
    Not implemented yet\"", "    local planets=(Mercury Venus Earth Mars Jupiter Saturn\
    \ Uranus Neptune)\n    local planet1=$1\n    local planet2=$2\n    local index1=0\n\
    \    local index2=0\n    local result=()\n    local i=0\n    for planet in ${planets[@]};\
    \ do\n        if [ \"$planet\" == \"$planet1\" ]; then\n            index1=$i\n\
    \        fi\n        if [ \"$planet\" == \"$planet2\" ]; then\n            index2=$i\n\
    \        fi\n        i=$((i+1))\n    done\n    if [ $index1 -eq 0 ] || [ $index2\
    \ -eq 0 ]; then\n        echo \"()\"\n    else\n        if [ $index1 -lt $index2\
    \ ]; then\n            for i in $(seq $index1 $index2); do\n                result+=(${planets[$i]})\n\
    \            done\n        else\n            for i in $(seq $index2 $index1);\
    \ do\n                result+=(${planets[$i]})\n            done\n        fi\n\
    \        echo \"(${result[@]})\"\n    fi", "    local planet1=$1\n    local planet2=$2\n\
    \    local planets=(\"Mercury\" \"Venus\" \"Earth\" \"Mars\" \"Jupiter\" \"Saturn\"\
    \ \"Uranus\" \"Neptune\")\n    local planet1_index=0\n    local planet2_index=0\n\
    \    local result=()\n    local i=0\n    local j=0\n    local k=0\n    local planet=\"\
    \"\n    local planet_index=0\n    local planet_index_list=()\n    local planet_index_list_size=0\n\
    \    local planet_index_list_index=0\n    local planet_index_list_index_1=0\n\
    \    local planet_index_list_index_2=0\n    local planet_index_list_index_3=0\n\
    \    local planet_index_list_index_4=0\n    local planet_index_list_index_5=0\n\
    \    local planet_index_list_index_6=0\n    local planet_index_list_index_7=0\n\
    \    local planet_index_list_index_8=0\n    local planet_index_list_index_9=0\n\
    \    local planet_index_list_index_10=0\n    local planet_index_list_index_11=0\n\
    \    local planet_index_list_index_12=0\n    local planet_index_list_index_13=0\n\
    \    local planet_index_list_index_14=0\n    local planet_index_list_index_15=0\n\
    \    local planet_index_list_index_16=0\n    local planet_index_list_index_17=0\n\
    \    local planet_index_list_index_18=0\n    local planet_index_list_index_19=0\n\
    \    local planet_index_list_index_20=0\n    local planet_index_list_index_21=0\n\
    \    local planet_index_list_index_22=0\n    local planet_index_list_index_23=0\n\
    \    local planet_index_list_index_24=0\n    local planet_index_list_index_25=0\n\
    \    local planet_index_list_index_26=0\n    local planet_index_list", "    #\
    \ Write your code here\n    # To print results to the standard output you can\
    \ use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello world\"", " \
    \   # Write your code here\n    planets=(Mercury Venus Earth Mars Jupiter Saturn\
    \ Uranus Neptune)\n    planet1=$1\n    planet2=$2\n    if [[ ! \" ${planets[@]}\
    \ \" =~ \" ${planet1} \" ]] || [[ ! \" ${planets[@]} \" =~ \" ${planet2} \" ]];\
    \ then\n        echo \"()\"\n    else\n        planet1_index=0\n        planet2_index=0\n\
    \        for i in \"${!planets[@]}\"; do\n            if [[ \"${planets[$i]}\"\
    \ == \"${planet1}\" ]]; then\n                planet1_index=$i\n            fi\n\
    \            if [[ \"${planets[$i]}\" == \"${planet2}\" ]]; then\n           \
    \     planet2_index=$i\n            fi\n        done\n        if [[ $planet1_index\
    \ -gt $planet2_index ]]; then\n            echo \"()\"\n        else\n       \
    \     echo \"(${planets[@]:$planet1_index:$planet2_index})\"\n        fi\n   \
    \ fi", "    local planet1=$1\n    local planet2=$2\n    local planets=(\"Mercury\"\
    \ \"Venus\" \"Earth\" \"Mars\" \"Jupiter\" \"Saturn\" \"Uranus\" \"Neptune\")\n\
    \    local planet1_index=0\n    local planet2_index=0\n    local result=()\n \
    \   for i in \"${!planets[@]}\"; do\n        if [[ \"${planets[$i]}\" == \"$planet1\"\
    \ ]]; then\n            planet1_index=$i\n        fi\n        if [[ \"${planets[$i]}\"\
    \ == \"$planet2\" ]]; then\n            planet2_index=$i\n        fi\n    done\n\
    \    if [[ $planet1_index -gt $planet2_index ]]; then\n        for i in $(seq\
    \ $planet2_index $planet1_index); do\n            result+=(\"${planets[$i]}\"\
    )\n        done\n    else\n        for i in $(seq $planet1_index $planet2_index);\
    \ do\n            result+=(\"${planets[$i]}\")\n        done\n    fi\n    echo\
    \ \"${result[@]}\"", "    # Write your code here\n    # To print results to the\
    \ standard output you can use echo\n    # To debug: echo \"Debug messages...\"\
    \ >&2\n    echo \"Not implemented\"", "    # Write your code here\n    # To print\
    \ results to the standard output you can use echo\n    # Example: echo \"Hello\
    \ world\"\n    echo \"Hello world\"", "    # Write your code here\n    # To print\
    \ results to the standard output you can use echo\n    # Example: echo \"Hello\
    \ world\"\n    echo \"Hello world\"", "    local planets=(Mercury Venus Earth\
    \ Mars Jupiter Saturn Uranus Neptune)\n    local planet1=$1\n    local planet2=$2\n\
    \    local planet1_index=0\n    local planet2_index=0\n    local result=()\n \
    \   local i=0\n    local j=0\n    local k=0\n    local planet_name=''\n    local\
    \ planet_index=0\n    local planet_index_1=0\n    local planet_index_2=0\n   \
    \ local planet_index_3=0\n    local planet_index_4=0\n    local planet_index_5=0\n\
    \    local planet_index_6=0\n    local planet_index_7=0\n    local planet_index_8=0\n\
    \    local planet_index_9=0\n    local planet_index_10=0\n    local planet_index_11=0\n\
    \    local planet_index_12=0\n    local planet_index_13=0\n    local planet_index_14=0\n\
    \    local planet_index_15=0\n    local planet_index_16=0\n    local planet_index_17=0\n\
    \    local planet_index_18=0\n    local planet_index_19=0\n    local planet_index_20=0\n\
    \    local planet_index_21=0\n    local planet_index_22=0\n    local planet_index_23=0\n\
    \    local planet_index_24=0\n    local planet_index_25=0\n    local planet_index_26=0\n\
    \    local planet_index_27=0\n    local planet_index_28=0\n    local planet_index_29=0\n\
    \    local planet_index_30=0\n    local planet_index_31=0\n    local planet_index_32=0\n\
    \    local planet_index_33=0\n    local planet_index_34=0\n    local planet_index_35=0\n\
    \    local planet_index_36=0\n    local planet_index_37=0\n    local planet_index_38=0\n\
    \    local planet_index_39=0\n    local planet_index_40=0\n    local planet_index_41=0\n\
    \    local planet_index_42=0\n    local planet", "    # Write your code here\n\
    \    # To print results to the standard output you can use echo\n    # Example:\
    \ echo \"Hello world\"\n    echo \"Hello world\"", "    # Write your code here\n\
    \    # To print results to the standard output you can use echo\n    # Example:\
    \ echo \"Hello world\"\n    echo \"Hello world\"", "    # Write your code here\n\
    \    # To print results to the standard output you can use echo\n    # To access\
    \ arguments use echo \"$1\" \"$2\"\n    # To access the arguments use echo \"\
    $1\" \"$2\"\n    # To print the result of the test use echo \"$(test_function\
    \ \"$1\" \"$2\")\"\n    echo \"Not implemented yet\"", "    # Write your code\
    \ here\n    # To print results to the standard output you can use echo\n    #\
    \ Example: echo \"Hello world\"\n    echo \"Hello world\"", "    if [[ $1 == \"\
    Mercury\" ]]; then\n        if [[ $2 == \"Venus\" ]]; then\n            echo \"\
    Mercury\"\n        elif [[ $2 == \"Earth\" ]]; then\n            echo \"Mercury\
    \ Venus\"\n        elif [[ $2 == \"Mars\" ]]; then\n            echo \"Mercury\
    \ Venus Earth\"\n        elif [[ $2 == \"Jupiter\" ]]; then\n            echo\
    \ \"Mercury Venus Earth Mars\"\n        elif [[ $2 == \"Saturn\" ]]; then\n  \
    \          echo \"Mercury Venus Earth Mars Jupiter\"\n        elif [[ $2 == \"\
    Uranus\" ]]; then\n            echo \"Mercury Venus Earth Mars Jupiter Saturn\"\
    \n        elif [[ $2 == \"Neptune\" ]]; then\n            echo \"Mercury Venus\
    \ Earth Mars Jupiter Saturn Uranus\"\n        else\n            echo \"Error:\
    \ $2 is not a planet\"\n        fi\n    elif [[ $1 == \"Venus\" ]]; then\n   \
    \     if [[ $2 == \"Earth\" ]]; then\n            echo \"Venus\"\n        elif\
    \ [[ $2 == \"Mars\" ]]; then\n            echo \"Venus Earth\"\n        elif [[\
    \ $2 == \"Jupiter\" ]]; then\n            echo \"Venus Earth Mars\"\n        elif\
    \ [[ $2 == \"Saturn\" ]]; then\n            echo \"Venus Earth Mars Jupiter\"\n\
    \        elif [[ $2 == \"Uranus\" ]]; then\n            echo \"Venus Earth Mars\
    \ Jupiter Saturn\"\n        elif [[ $2 == \"Neptune\" ]]; then\n            echo\
    \ \"Venus Earth Mars Jupiter Saturn Uranus\"\n        else\n            echo \"\
    Error: $2 is not a planet\"\n        fi\n    elif [[ $1 == \"Earth\" ]]; then\n\
    \        if [[ $2 == \"Mars\" ]]; then\n            echo \"Earth\"\n        elif\
    \ [[ $2 == \"Jupiter\" ]]; then\n            echo \"Earth Mars\"\n        elif\
    \ [[ $2 == \"Saturn\" ]]; then\n            echo \"Earth Mars Jupiter\"\n    \
    \    elif [[ $2 == \"Uranus\" ]]; then\n            echo \"Earth Mars Jupiter\
    \ Saturn\"\n        elif [[ $2 == \"Neptune\" ]]; then\n            echo \"",
  "    local planets=(Mercury Venus Earth Mars Jupiter Saturn Uranus Neptune)\n  \
    \  local planet1=$1\n    local planet2=$2\n    local result=()\n    local i=0\n\
    \    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n \
    \   local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n  \
    \  local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n   \
    \ local y=0\n    local z=0\n    local aa=0\n    local ab=0\n    local ac=0\n \
    \   local ad=0\n    local ae=0\n    local af=0\n    local ag=0\n    local ah=0\n\
    \    local ai=0\n    local aj=0\n    local ak=0\n    local al=0\n    local am=0\n\
    \    local an=0\n    local ao=0\n    local ap=0\n    local aq=0\n    local ar=0\n\
    \    local as=0\n    local at=0\n    local au=0\n    local av=0\n    local aw=0\n\
    \    local ax=0\n    local ay=0\n    local az=0\n    local ba=0\n    local bb=0\n\
    \    local bc=0\n    local bd=0\n    local be=0\n    local bf=0\n    local bg=0\n\
    \    local bh=0\n    local bi=0\n    local bj=0\n    local bk=0\n    local bl=0\n\
    \    local bm=0\n    local bn=0\n    local bo=0\n    local bp=0\n    local bq=0\n\
    \    local br=0\n    local bs=0\n    local bt=0\n    local bu=0\n    local bv=0\n\
    \    local bw=0\n    local bx=0\n    local by=0\n    local bz=0\n    local ca=0\n\
    \    local cb=0\n    local cc=0\n    local cd=0\n    local ce=0\n   ", "    #\
    \ Write your code here\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n", "    # Write your code here\n  \
    \  # To print results to the standard output you can use echo\n    # To access\
    \ arguments use echo \"$1\" \"$2\"\n    echo \"Not implemented yet\"", "    case\
    \ $1 in\n        \"Mercury\")\n            case $2 in\n                \"Mercury\"\
    )\n                    echo \"\"\n                    ;;\n                \"Venus\"\
    )\n                    echo \"Mercury\"\n                    ;;\n            \
    \    \"Earth\")\n                    echo \"Mercury\"\n                    ;;\n\
    \                \"Mars\")\n                    echo \"Mercury\"\n           \
    \         ;;\n                \"Jupiter\")\n                    echo \"Mercury\"\
    \n                    ;;\n                \"Saturn\")\n                    echo\
    \ \"Mercury\"\n                    ;;\n                \"Uranus\")\n         \
    \           echo \"Mercury\"\n                    ;;\n                \"Neptune\"\
    )\n                    echo \"Mercury\"\n                    ;;\n            \
    \    *)\n                    echo \"\"\n                    ;;\n            esac\n\
    \            ;;\n        \"Venus\")\n            case $2 in\n                \"\
    Mercury\")\n                    echo \"\"\n                    ;;\n          \
    \      \"Venus\")\n                    echo \"\"\n                    ;;\n   \
    \             \"Earth\")\n                    echo \"Venus\"\n               \
    \     ;;\n                \"Mars\")\n                    echo \"Venus\"\n    \
    \                ;;\n                \"Jupiter\")\n                    echo \"\
    Venus\"\n                    ;;\n                \"Saturn\")\n               \
    \     echo \"Venus\"\n                    ;;\n                \"Uranus\")\n  \
    \                  echo \"Venus\"\n                    ;;\n                \"\
    Neptune\")\n                    echo \"Venus\"\n                    ;;\n     \
    \           *)\n                    echo \"\"\n                    ;;\n      \
    \      esac\n            ;;\n        \"Earth\")\n            case $2 in\n    \
    \            \"Mercury\")\n                    echo \"\"\n                   \
    \ ;;\n                \"Venus\")\n                    echo \"\"\n            \
    \        ;;\n                \"Earth\")\n                    echo \"\"\n     \
    \               ;;\n                \"Mars\")\n                    echo \"Earth\"\
    \n                    ;;\n                \"Jupiter\")\n                    echo\
    \ \"Earth\"\n                    ;;\n                \"Saturn\")\n           \
    \         echo \"Earth\"\n                    ;;\n                \"Uranus\")\n\
    \                    echo \"Earth\"\n                    ;;\n                \"\
    Neptune\")\n                    echo \"Earth\"\n                    ;;\n     \
    \           *)\n                    echo \"\"\n                    ;;\n      \
    \      esac\n            ;;\n        \"Mars\")\n            case $2 in\n     \
    \           \"Mercury\")\n                    echo \"\"\n                    ;;\n\
    \                \"Venus\")\n                    echo \"\"\n                 \
    \   ;;\n                \"Earth\")\n                    echo \"\"\n          \
    \          ;;\n                \"Mars\")\n                    echo \"\"\n", " \
    \   # Write your code here\n    # To print results to the standard output you\
    \ can use echo\n    # Example: echo \"Hello world\"\n    if [ $1 = \"Mercury\"\
    \ ]\n    then\n        echo \"Venus\"\n    elif [ $1 = \"Venus\" ]\n    then\n\
    \        echo \"Earth\"\n    elif [ $1 = \"Earth\" ]\n    then\n        echo \"\
    Mars\"\n    elif [ $1 = \"Mars\" ]\n    then\n        echo \"Jupiter\"\n    elif\
    \ [ $1 = \"Jupiter\" ]\n    then\n        echo \"Saturn\"\n    elif [ $1 = \"\
    Saturn\" ]\n    then\n        echo \"Uranus\"\n    elif [ $1 = \"Uranus\" ]\n\
    \    then\n        echo \"Neptune\"\n    elif [ $1 = \"Neptune\" ]\n    then\n\
    \        echo \"Pluto\"\n    elif [ $1 = \"Pluto\" ]\n    then\n        echo \"\
    Eris\"\n    elif [ $1 = \"Eris\" ]\n    then\n        echo \"Makemake\"\n    elif\
    \ [ $1 = \"Makemake\" ]\n    then\n        echo \"Haumea\"\n    elif [ $1 = \"\
    Haumea\" ]\n    then\n        echo \"Ceres\"\n    elif [ $1 = \"Ceres\" ]\n  \
    \  then\n        echo \"Pallas\"\n    elif [ $1 = \"Pallas\" ]\n    then\n   \
    \     echo \"Vesta\"\n    elif [ $1 = \"Vesta\" ]\n    then\n        echo \"Juno\"\
    \n    elif [ $1 = \"Juno\" ]\n    then\n        echo \"Astraea\"\n    elif [ $1\
    \ = \"Astraea\" ]\n    then\n        echo \"Hebe\"\n    elif [ $1 = \"Hebe\" ]\n\
    \    then\n        echo \"Iris\"\n    elif [ $1 = \"Iris\" ]\n    then\n     \
    \   echo \"Flora\"\n    elif [ $1 = \"Flora\" ]\n    then\n        echo \"Metis\"\
    \n    elif [ $1 = \"Metis\" ]\n    then", "    if [[ $1 = \"Mercury\" ]]; then\n\
    \        if [[ $2 = \"Venus\" ]]; then\n            echo \"Mercury\"\n       \
    \ elif [[ $2 = \"Earth\" ]]; then\n            echo \"Mercury\"\n            echo\
    \ \"Venus\"\n        elif [[ $2 = \"Mars\" ]]; then\n            echo \"Mercury\"\
    \n            echo \"Venus\"\n            echo \"Earth\"\n        elif [[ $2 =\
    \ \"Jupiter\" ]]; then\n            echo \"Mercury\"\n            echo \"Venus\"\
    \n            echo \"Earth\"\n            echo \"Mars\"\n        elif [[ $2 =\
    \ \"Saturn\" ]]; then\n            echo \"Mercury\"\n            echo \"Venus\"\
    \n            echo \"Earth\"\n            echo \"Mars\"\n            echo \"Jupiter\"\
    \n        elif [[ $2 = \"Uranus\" ]]; then\n            echo \"Mercury\"\n   \
    \         echo \"Venus\"\n            echo \"Earth\"\n            echo \"Mars\"\
    \n            echo \"Jupiter\"\n            echo \"Saturn\"\n        elif [[ $2\
    \ = \"Neptune\" ]]; then\n            echo \"Mercury\"\n            echo \"Venus\"\
    \n            echo \"Earth\"\n            echo \"Mars\"\n            echo \"Jupiter\"\
    \n            echo \"Saturn\"\n            echo \"Uranus\"\n        else\n   \
    \         echo \"Error: $2 is not a planet\"\n        fi\n    elif [[ $1 = \"\
    Venus\" ]]; then\n        if [[ $2 = \"Earth\" ]]; then\n            echo \"Venus\"\
    \n        elif [[ $2 = \"Mars\" ]]; then\n            echo \"Venus\"\n       \
    \     echo \"Earth\"\n        elif [[ $2 = \"Jupiter\" ]]; then\n            echo\
    \ \"Venus\"\n            echo \"Earth\"\n            echo \"Mars\"\n        elif\
    \ [[ $2 = \"Saturn\" ]]; then\n            echo \"Venus\"\n            echo \"\
    Earth\"\n            echo \"Mars\"\n            echo \"Jupiter\"\n        elif\
    \ [[ $2 = \"Uranus\" ]]; then\n            echo \"Venus\"\n            echo \"\
    Earth\"\n            echo \"Mars\"\n            echo \"Jupiter\"\n           \
    \ echo \"Saturn\"\n", "    # Write your code here\n    # To print results to the\
    \ standard output you can use echo\n    # Example: echo \"Hello world\"\n    echo\
    \ \"Hello world\"", "    if [[ $1 == \"Mercury\" ]]; then\n        if [[ $2 ==\
    \ \"Mercury\" ]]; then\n            echo \"\\\"Mercury\\\"\"\n        elif [[\
    \ $2 == \"Venus\" ]]; then\n            echo \"\\\"Venus\\\"\"\n        elif [[\
    \ $2 == \"Earth\" ]]; then\n            echo \"[\\\"Venus\\\", \\\"Earth\\\"]\"\
    \n        elif [[ $2 == \"Mars\" ]]; then\n            echo \"[\\\"Venus\\\",\
    \ \\\"Earth\\\", \\\"Mars\\\"]\"\n        elif [[ $2 == \"Jupiter\" ]]; then\n\
    \            echo \"[\\\"Venus\\\", \\\"Earth\\\", \\\"Mars\\\", \\\"Jupiter\\\
    \"]\"\n        elif [[ $2 == \"Saturn\" ]]; then\n            echo \"[\\\"Venus\\\
    \", \\\"Earth\\\", \\\"Mars\\\", \\\"Jupiter\\\", \\\"Saturn\\\"]\"\n        elif\
    \ [[ $2 == \"Uranus\" ]]; then\n            echo \"[\\\"Venus\\\", \\\"Earth\\\
    \", \\\"Mars\\\", \\\"Jupiter\\\", \\\"Saturn\\\", \\\"Uranus\\\"]\"\n       \
    \ elif [[ $2 == \"Neptune\" ]]; then\n            echo \"[\\\"Venus\\\", \\\"\
    Earth\\\", \\\"Mars\\\", \\\"Jupiter\\\", \\\"Saturn\\\", \\\"Uranus\\\", \\\"\
    Neptune\\\"]\"\n        else\n            echo \"[]\"\n        fi\n    elif [[\
    \ $1 == \"Venus\" ]]; then\n        if [[ $2 == \"Venus\" ]]; then\n         \
    \   echo \"\\\"Venus\\\"\"\n        elif [[ $2 == \"Earth\" ]]; then\n       \
    \     echo \"\\\"Earth\\\"\"\n        elif [[ $2 == \"Mars\" ]]; then\n      \
    \      echo \"[\\\"Earth\\\", \\\"Mars\\\"]\"\n        elif [[ $2 == \"Jupiter\"\
    \ ]]; then\n            echo \"[\\\"Earth\\\", \\\"Mars\\\", \\\"Jupiter\\\"]\"\
    \n        elif [[ $2 == \"Saturn\" ]]; then\n            echo \"[\\\"Earth\\\"\
    , \\\"Mars\\\", \\\"Jupiter\\\", \\\"Saturn\\\"]\"\n        elif [[ $2 == \"Uranus\"\
    \ ]]; then\n            echo \"[\\\"Earth\\\", \\\"Mars\\\", \\\"Jupiter\\\",\
    \ \\\"Saturn\\\", \\\"Uranus\\\"]\"\n        elif [[ $2 == \"Neptune\" ]]; then\n\
    \            echo \"[\\\"Earth\\\", \\\"Mars\\\", \\\"Jupiter\\\", \\\"", "  \
    \  # Write your code here\n    # To print results to the standard output you can\
    \ use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello world\"", " \
    \   # write your solution here\n    # use the following command to return a list\
    \ of strings\n    # echo \"[\\\"string1\\\", \\\"string2\\\", ...]\"\n    # use\
    \ the following command to return a string\n    # echo \"string\"\n    # use the\
    \ following command to return an empty list\n    # echo \"[]\"\n    # use the\
    \ following command to return an empty string\n    # echo \"\"\n    # use the\
    \ following command to return an error\n    # >&2 echo \"error message\"\n   \
    \ # use the following command to return nothing\n    # return\n    # use the following\
    \ command to return a list of strings\n    # echo \"[\\\"string1\\\", \\\"string2\\\
    \", ...]\"\n    # use the following command to return a string\n    # echo \"\
    string\"\n    # use the following command to return an empty list\n    # echo\
    \ \"[]\"\n    # use the following command to return an empty string\n    # echo\
    \ \"\"\n    # use the following command to return an error\n    # >&2 echo \"\
    error message\"\n    # use the following command to return nothing\n    # return\n\
    \    # use the following command to return a list of strings\n    # echo \"[\\\
    \"string1\\\", \\\"string2\\\", ...]\"\n    # use the following command to return\
    \ a string\n    # echo \"string\"\n    # use the following command to return an\
    \ empty list\n    # echo \"[]\"\n    # use the following command to return an\
    \ empty string\n    # echo \"\"\n    # use the following command to return an\
    \ error\n    # >&2 echo \"error message\"\n    # use the following command to\
    \ return nothing\n    # return\n    # use the following command to return a list\
    \ of strings\n    # echo \"[\\\"string1\\\", \\\"string2\\\", ...]\"\n    # use\
    \ the following command to return a string\n    # echo \"string\"\n    # use the\
    \ following command to return an empty list\n    # echo \"[]\"\n    # use the\
    \ following command to return an empty string\n    # echo \"\"\n    # use the\
    \ following command to return an error\n    # >&2 echo \"error message\"\n   \
    \ # use the following command to return nothing\n    # return\n    # use the following\
    \ command to return a list of strings\n    # echo \"[\\\"string1\\\", \\\"string2\\\
    \", ...]\"\n    # use the following command to return", "    if [[ $1 == \"Mercury\"\
    \ ]]; then\n        if [[ $2 == \"Venus\" ]]; then\n            echo \"Mercury\"\
    \n        elif [[ $2 == \"Earth\" ]]; then\n            echo \"Mercury\"\n   \
    \         echo \"Venus\"\n        elif [[ $2 == \"Mars\" ]]; then\n          \
    \  echo \"Mercury\"\n            echo \"Venus\"\n            echo \"Earth\"\n\
    \        elif [[ $2 == \"Jupiter\" ]]; then\n            echo \"Mercury\"\n  \
    \          echo \"Venus\"\n            echo \"Earth\"\n            echo \"Mars\"\
    \n        elif [[ $2 == \"Saturn\" ]]; then\n            echo \"Mercury\"\n  \
    \          echo \"Venus\"\n            echo \"Earth\"\n            echo \"Mars\"\
    \n            echo \"Jupiter\"\n        elif [[ $2 == \"Uranus\" ]]; then\n  \
    \          echo \"Mercury\"\n            echo \"Venus\"\n            echo \"Earth\"\
    \n            echo \"Mars\"\n            echo \"Jupiter\"\n            echo \"\
    Saturn\"\n        elif [[ $2 == \"Neptune\" ]]; then\n            echo \"Mercury\"\
    \n            echo \"Venus\"\n            echo \"Earth\"\n            echo \"\
    Mars\"\n            echo \"Jupiter\"\n            echo \"Saturn\"\n          \
    \  echo \"Uranus\"\n        fi\n    elif [[ $1 == \"Venus\" ]]; then\n       \
    \ if [[ $2 == \"Earth\" ]]; then\n            echo \"Venus\"\n        elif [[\
    \ $2 == \"Mars\" ]]; then\n            echo \"Venus\"\n            echo \"Earth\"\
    \n        elif [[ $2 == \"Jupiter\" ]]; then\n            echo \"Venus\"\n   \
    \         echo \"Earth\"\n            echo \"Mars\"\n        elif [[ $2 == \"\
    Saturn\" ]]; then\n            echo \"Venus\"\n            echo \"Earth\"\n  \
    \          echo \"Mars\"\n            echo \"Jupiter\"\n        elif [[ $2 ==\
    \ \"Uranus\" ]]; then\n            echo \"Venus\"\n            echo \"Earth\"\n\
    \            echo \"Mars\"\n            echo \"Jupiter\"\n            echo \"\
    Saturn\"\n        elif [[ $2 == \"Neptune\" ]]; then\n", "    if [ $# -ne 2 ];\
    \ then\n        echo \"Usage: $0 <planet1> <planet2>\"\n        return 1\n   \
    \ fi\n    local planet1=\"$1\"\n    local planet2=\"$2\"\n    local planets=(Mercury\
    \ Venus Earth Mars Jupiter Saturn Uranus Neptune)\n    local planet1_index\n \
    \   local planet2_index\n    local i\n    for i in ${!planets[@]}; do\n      \
    \  if [ \"${planets[$i]}\" = \"$planet1\" ]; then\n            planet1_index=$i\n\
    \        fi\n        if [ \"${planets[$i]}\" = \"$planet2\" ]; then\n        \
    \    planet2_index=$i\n        fi\n    done\n    if [ -z \"$planet1_index\" ]\
    \ || [ -z \"$planet2_index\" ]; then\n        echo \"Usage: $0 <planet1> <planet2>\"\
    \n        return 1\n    fi\n    if [ $planet1_index -gt $planet2_index ]; then\n\
    \        local tmp=$planet1_index\n        planet1_index=$planet2_index\n    \
    \    planet2_index=$tmp\n    fi\n    for i in $(seq $planet1_index $planet2_index);\
    \ do\n        echo -n \"\\\"${planets[$i]}\\\" \"\n    done\n    echo", "    #\
    \ Write your code here\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n", "    # Write your code here\n  \
    \  # To print results to the standard output you can use echo\n    # To access\
    \ arguments use echo \"$1\" \"$2\"\n    # To access the arguments use echo \"\
    $@\"\n    # To print the number of arguments use echo \"$#\"\n    # To print the\
    \ script name use echo \"$0\"\n    echo \"Not implemented yet\"", "    # Write\
    \ your code here\n    # To print results to the standard output you can use echo\n\
    \    # Example: echo \"Hello world\"\n    echo \"Hello world\"", "    local planets=(Mercury\
    \ Venus Earth Mars Jupiter Saturn Uranus Neptune)\n    local planet1=$1\n    local\
    \ planet2=$2\n    local planet1_index=0\n    local planet2_index=0\n    local\
    \ result=()\n    local i=0\n    local j=0\n    local k=0\n    local planet_count=${#planets[@]}\n\
    \    local planet_index=0\n    local planet_name=\"\"\n    local planet_name_count=0\n\
    \    local planet_name_index=0\n    local planet_name_array=()\n    local planet_name_array_count=0\n\
    \    local planet_name_array_index=0\n    local planet_name_array_value=\"\"\n\
    \    local planet_name_array_value_count=0\n    local planet_name_array_value_index=0\n\
    \    local planet_name_array_value_char=\"\"\n    local planet_name_array_value_char_count=0\n\
    \    local planet_name_array_value_char_index=0\n    local planet_name_array_value_char_ascii=0\n\
    \    local planet_name_array_value_char_ascii_sum=0\n    local planet_name_array_value_char_ascii_sum_count=0\n\
    \    local planet_name_array_value_char_ascii_sum_index=0\n    local planet_name_array_value_char_ascii_sum_char=\"\
    \"\n    local planet_name_array_value_char_ascii_sum_char_count=0\n    local planet_name_array_value_char_ascii_sum_char_index=0\n\
    \    local planet_name_array_value_char_ascii_sum_char_ascii=0\n    local planet_name_array_value_char_ascii_sum_char_ascii_sum=0\n\
    \    local planet_name_array_value_char_ascii_sum_char_ascii_sum_count=0\n   \
    \ local planet_name_array_value_char_ascii_sum_char_ascii_sum_index=0\n    local\
    \ planet_name_array", "    # Write your code here\n    # You can use the following\
    \ command to get the path of a planet:\n    # path=$(get_path $planet)\n    #\
    \ You can use the following command to get the name of a planet:\n    # name=$(get_name\
    \ $path)\n    # You can use the following command to get the distance of a planet:\n\
    \    # distance=$(get_distance $path)\n    # You can use the following command\
    \ to get the list of all planets:\n    # planets=$(get_planets)\n    # You can\
    \ use the following command to get the list of all planets:\n    # planets=$(get_planets)\n\
    \    # You can use the following command to get the list of all planets:\n   \
    \ # planets=$(get_planets)\n    # You can use the following command to get the\
    \ list of all planets:\n    # planets=$(get_planets)\n    # You can use the following\
    \ command to get the list of all planets:\n    # planets=$(get_planets)\n    #\
    \ You can use the following command to get the list of all planets:\n    # planets=$(get_planets)\n\
    \    # You can use the following command to get the list of all planets:\n   \
    \ # planets=$(get_planets)\n    # You can use the following command to get the\
    \ list of all planets:\n    # planets=$(get_planets)\n    # You can use the following\
    \ command to get the list of all planets:\n    # planets=$(get_planets)\n    #\
    \ You can use the following command to get the list of all planets:\n    # planets=$(get_planets)\n\
    \    # You can use the following command to get the list of all planets:\n   \
    \ # planets=$(get_planets)\n    # You can use the following command to get the\
    \ list of all planets:\n    # planets=$(get_planets)\n    # You can use the following\
    \ command to get the list of all planets:\n    # planets=$(get_planets)\n    #\
    \ You can use the following command to get the list of all planets:\n    # planets=$(get_planets)\n\
    \    # You can use the following command to get the list of all planets:\n   \
    \ # planets=$(get_plan", "    # Write your code here\n    # To print results to\
    \ the standard output you can use echo\n    # Example: echo \"Hello world\"\n\
    \    echo \"Hello world\"", "    # Write your code here\n    # To print results\
    \ to the standard output you can use echo\n    # Example: echo \"Hello world\"\
    \n    echo \"Hello world\"", "    if [ $# -ne 2 ]; then\n        echo \"Usage:\
    \ $0 <planet1> <planet2>\"\n        return 1\n    fi\n    if [ \"$1\" == \"Mercury\"\
    \ ]; then\n        if [ \"$2\" == \"Mercury\" ]; then\n            echo \"\\\"\
    Mercury\\\"\"\n        elif [ \"$2\" == \"Venus\" ]; then\n            echo \"\
    \\\"Venus\\\"\"\n        elif [ \"$2\" == \"Earth\" ]; then\n            echo\
    \ \"\\\"Venus\\\"\"\n        elif [ \"$2\" == \"Mars\" ]; then\n            echo\
    \ \"\\\"Venus\\\"\"\n        elif [ \"$2\" == \"Jupiter\" ]; then\n          \
    \  echo \"\\\"Venus\\\"\"\n        elif [ \"$2\" == \"Saturn\" ]; then\n     \
    \       echo \"\\\"Venus\\\"\"\n        elif [ \"$2\" == \"Uranus\" ]; then\n\
    \            echo \"\\\"Venus\\\"\"\n        elif [ \"$2\" == \"Neptune\" ]; then\n\
    \            echo \"\\\"Venus\\\"\"\n        else\n            echo \"\\\"\\\"\
    \"\n        fi\n    elif [ \"$1\" == \"Venus\" ]; then\n        if [ \"$2\" ==\
    \ \"Mercury\" ]; then\n            echo \"\\\"Mercury\\\"\"\n        elif [ \"\
    $2\" == \"Venus\" ]; then\n            echo \"\\\"Venus\\\"\"\n        elif [\
    \ \"$2\" == \"Earth\" ]; then\n            echo \"\\\"Earth\\\"\"\n        elif\
    \ [ \"$2\" == \"Mars\" ]; then\n            echo \"\\\"Earth\\\"\"\n        elif\
    \ [ \"$2\" == \"Jupiter\" ]; then\n            echo \"\\\"Earth\\\"\"\n      \
    \  elif [ \"$2\" == \"Saturn\" ]; then\n            echo \"\\\"Earth\\\"\"\n \
    \       elif [ \"$2\" == \"Uranus\" ]; then\n            echo \"\\\"Earth\\\"\"\
    \n        elif [ \"$2\" == \"Neptune\" ]; then\n            echo \"\\\"Earth\\\
    \"\"\n        else\n            echo \"\\\"\\\"\"\n        fi\n    elif [ \"$1\"\
    \ == \"Earth\" ]; then\n        if [ \"$2\" == \"Mercury\" ]; then\n         \
    \   echo \"\\\"Mercury\\\"\"\n        elif [ \"$2\" == \"", "    # Write your\
    \ code here\n    # To print results to the standard output you can use echo\n\
    \    # To access arguments use echo \"$1\" \"$2\"\n    # To access the arguments\
    \ use echo \"$@\"\n    # To print the number of arguments use echo \"$#\"\n  \
    \  # To print the script name use echo \"$0\"\n    # To print the arguments separator\
    \ use echo \"$IFS\"\n    # To print the exit status of the last command use echo\
    \ \"$?\"\n    # To print the process id of the current shell use echo \"$$\"\n\
    \    # To print the process id of the last background command use echo \"$!\"\n\
    \    # To print the current line number use echo \"$LINENO\"\n    # To print the\
    \ number of positional parameters use echo \"$#\"\n    # To print the current\
    \ working directory use echo \"$PWD\"\n    # To print the user id use echo \"\
    $UID\"\n    # To print the user name use echo \"$USER\"\n    # To print the host\
    \ name use echo \"$HOSTNAME\"\n    # To print the exit status of the last command\
    \ use echo \"$?\"\n    # To print the exit status of the last command use echo\
    \ \"$?\"\n    # To print the exit status of the last command use echo \"$?\"\n\
    \    # To print the exit status of the last command use echo \"$?\"\n    # To\
    \ print the exit status of the last command use echo \"$?\"\n    # To print the\
    \ exit status of the last command use echo \"$?\"\n    # To print the exit status\
    \ of the last command use echo \"$?\"\n    # To print the exit status of the last\
    \ command use echo \"$?\"\n    # To print the exit status of the last command\
    \ use echo \"$?\"\n    # To print the exit status of the last command use echo\
    \ \"$?\"\n    # To print the exit status of the last command use echo \"$?\"\n\
    \    # To print the exit status of the last command use echo \"$?\"\n    # To\
    \ print the exit status of the last command use echo \"$?\"\n    # To print the\
    \ exit status of the last command use echo \"$?\"\n    # To print the exit status\
    \ of the last command use echo \"$?\"\n    # To print the exit status of the last\
    \ command use echo \"$?\"\n    # To print the exit status of the last command\
    \ use echo \"$?\"\n    # To print the exit status of the last command use echo",
  "    # Write your code here\n    # To print results to the standard output you can\
    \ use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello world\"", " \
    \   if [[ $1 == \"Mercury\" ]]; then\n        if [[ $2 == \"Venus\" ]]; then\n\
    \            echo '\"Mercury\"'\n        elif [[ $2 == \"Earth\" ]]; then\n  \
    \          echo '\"Mercury\"' '\"Venus\"'\n        elif [[ $2 == \"Mars\" ]];\
    \ then\n            echo '\"Mercury\"' '\"Venus\"' '\"Earth\"'\n        elif [[\
    \ $2 == \"Jupiter\" ]]; then\n            echo '\"Mercury\"' '\"Venus\"' '\"Earth\"\
    ' '\"Mars\"'\n        elif [[ $2 == \"Saturn\" ]]; then\n            echo '\"\
    Mercury\"' '\"Venus\"' '\"Earth\"' '\"Mars\"' '\"Jupiter\"'\n        elif [[ $2\
    \ == \"Uranus\" ]]; then\n            echo '\"Mercury\"' '\"Venus\"' '\"Earth\"\
    ' '\"Mars\"' '\"Jupiter\"' '\"Saturn\"'\n        elif [[ $2 == \"Neptune\" ]];\
    \ then\n            echo '\"Mercury\"' '\"Venus\"' '\"Earth\"' '\"Mars\"' '\"\
    Jupiter\"' '\"Saturn\"' '\"Uranus\"'\n        fi\n    elif [[ $1 == \"Venus\"\
    \ ]]; then\n        if [[ $2 == \"Earth\" ]]; then\n            echo '\"Venus\"\
    '\n        elif [[ $2 == \"Mars\" ]]; then\n            echo '\"Venus\"' '\"Earth\"\
    '\n        elif [[ $2 == \"Jupiter\" ]]; then\n            echo '\"Venus\"' '\"\
    Earth\"' '\"Mars\"'\n        elif [[ $2 == \"Saturn\" ]]; then\n            echo\
    \ '\"Venus\"' '\"Earth\"' '\"Mars\"' '\"Jupiter\"'\n        elif [[ $2 == \"Uranus\"\
    \ ]]; then\n            echo '\"Venus\"' '\"Earth\"' '\"Mars\"' '\"Jupiter\"'\
    \ '\"Saturn\"'\n        elif [[ $2 == \"Neptune\" ]]; then\n            echo '\"\
    Venus\"' '\"Earth\"' '\"Mars\"' '\"Jupiter\"' '\"Saturn\"' '\"Uranus\"'\n    \
    \    fi\n    elif [[ $1 == \"Earth\" ]]; then\n       ", "  # Write your code\
    \ here\n  # planet1=$1\n  # planet2=$2\n  # planets=(\"Mercury\" \"Venus\" \"\
    Earth\" \"Mars\" \"Jupiter\" \"Saturn\" \"Uranus\" \"Neptune\")\n  # planet1_index=$(echo\
    \ ${planets[@]} | tr ' ' '\\n' | grep -n $planet1 | cut -d: -f1)\n  # planet2_index=$(echo\
    \ ${planets[@]} | tr ' ' '\\n' | grep -n $planet2 | cut -d: -f1)\n  # if [ $planet1_index\
    \ -lt $planet2_index ]; then\n  #   echo ${planets[@]:$planet1_index:$planet2_index}\n\
    \  # else\n  #   echo ${planets[@]:$planet2_index:$planet1_index}\n  # fi\n  planet1=$1\n\
    \  planet2=$2\n  planets=(\"Mercury\" \"Venus\" \"Earth\" \"Mars\" \"Jupiter\"\
    \ \"Saturn\" \"Uranus\" \"Neptune\")\n  planet1_index=$(echo ${planets[@]} | tr\
    \ ' ' '\\n' | grep -n $planet1 | cut -d: -f1)\n  planet2_index=$(echo ${planets[@]}\
    \ | tr ' ' '\\n' | grep -n $planet2 | cut -d: -f1)\n  if [ $planet1_index -lt\
    \ $planet2_index ]; then\n    echo ${planets[@]:$planet1_index:$planet2_index}\n\
    \  else\n    echo ${planets[@]:$planet2_index:$planet1_index}\n  fi", "    local\
    \ planets=(Mercury Venus Earth Mars Jupiter Saturn Uranus Neptune)\n    local\
    \ planet1=$1\n    local planet2=$2\n    local planet1_index=0\n    local planet2_index=0\n\
    \    local result=()\n    local i=0\n    local j=0\n    local k=0\n    local planet_name=\"\
    \"\n    local planet_index=0\n    local planet_index_1=0\n    local planet_index_2=0\n\
    \    local planet_index_3=0\n    local planet_index_4=0\n    local planet_index_5=0\n\
    \    local planet_index_6=0\n    local planet_index_7=0\n    local planet_index_8=0\n\
    \    local planet_index_9=0\n    local planet_index_10=0\n    local planet_index_11=0\n\
    \    local planet_index_12=0\n    local planet_index_13=0\n    local planet_index_14=0\n\
    \    local planet_index_15=0\n    local planet_index_16=0\n    local planet_index_17=0\n\
    \    local planet_index_18=0\n    local planet_index_19=0\n    local planet_index_20=0\n\
    \    local planet_index_21=0\n    local planet_index_22=0\n    local planet_index_23=0\n\
    \    local planet_index_24=0\n    local planet_index_25=0\n    local planet_index_26=0\n\
    \    local planet_index_27=0\n    local planet_index_28=0\n    local planet_index_29=0\n\
    \    local planet_index_30=0\n    local planet_index_31=0\n    local planet_index_32=0\n\
    \    local planet_index_33=0\n    local planet_index_34=0\n    local planet_index_35=0\n\
    \    local planet_index_36=0\n    local planet_index_37=0\n    local planet_index_38=0\n\
    \    local planet_index_39=0\n    local planet_index_40=0\n    local planet_index_41=0\n\
    \    local planet_index_42=0\n    local planet_", "    # Write your code here\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n", "    # Write your code here\n    # To print results to\
    \ the standard output you can use echo\n    # To access arguments use $1, $2,\
    \ etc.\n    echo \"Not implemented yet\"", "    planets=(Mercury Venus Earth Mars\
    \ Jupiter Saturn Uranus Neptune)\n    planet1=$1\n    planet2=$2\n    planet1_index=0\n\
    \    planet2_index=0\n    for ((i=0; i<${#planets[@]}; i++)); do\n        if [\
    \ \"${planets[$i]}\" == \"$planet1\" ]; then\n            planet1_index=$i\n \
    \       fi\n        if [ \"${planets[$i]}\" == \"$planet2\" ]; then\n        \
    \    planet2_index=$i\n        fi\n    done\n    if [ $planet1_index -gt $planet2_index\
    \ ]; then\n        for ((i=$planet2_index+1; i<$planet1_index; i++)); do\n   \
    \         echo -n \"\\\"${planets[$i]}\\\" \"\n        done\n    else\n      \
    \  for ((i=$planet1_index+1; i<$planet2_index; i++)); do\n            echo -n\
    \ \"\\\"${planets[$i]}\\\" \"\n        done\n    fi", "    local planets=(\"Mercury\"\
    \ \"Venus\" \"Earth\" \"Mars\" \"Jupiter\" \"Saturn\" \"Uranus\" \"Neptune\")\n\
    \    local planet1=$1\n    local planet2=$2\n    local planet1_index=0\n    local\
    \ planet2_index=0\n    local planets_between=()\n    local planets_between_string=\"\
    \"\n    local i=0\n    for planet in ${planets[@]}; do\n        if [ \"$planet\"\
    \ == \"$planet1\" ]; then\n            planet1_index=$i\n        fi\n        if\
    \ [ \"$planet\" == \"$planet2\" ]; then\n            planet2_index=$i\n      \
    \  fi\n        i=$((i+1))\n    done\n    if [ $planet1_index -gt $planet2_index\
    \ ]; then\n        local tmp=$planet1_index\n        planet1_index=$planet2_index\n\
    \        planet2_index=$tmp\n    fi\n    if [ $planet1_index -eq 0 ] || [ $planet2_index\
    \ -eq 0 ]; then\n        echo \"[]\"\n    else\n        for i in $(seq $planet1_index\
    \ $planet2_index); do\n            planets_between+=(${planets[$i]})\n       \
    \ done\n        planets_between_string=$(echo ${planets_between[@]} | sed 's/\
    \ /\", \"/g')\n        echo \"[\\\"$planets_between_string\\\"]\"\n    fi", " \
    \   # Write your code here\n    #planet1=$1\n    #planet2=$2\n    #echo $planet1\n\
    \    #echo $planet2\n    #echo $1\n    #echo $2\n    #echo $#\n    #echo $@\n\
    \    #echo $*\n    #echo $0\n    #echo $?\n    #echo $$\n    #echo $!\n    #echo\
    \ $-\n    #echo $_\n    #echo $IFS\n    #echo $PS1\n    #echo $PS2\n    #echo\
    \ $PS3\n    #echo $PS4\n    #echo $LINENO\n    #echo $BASH_VERSION\n    #echo\
    \ $BASH_SOURCE\n    #echo $BASH_LINENO\n    #echo $BASH_ARGC\n    #echo $BASH_ARGV\n\
    \    #echo $BASH_EXECUTION_STRING\n    #echo $BASH_SUBSHELL\n    #echo $BASH_SUBSHELL\n\
    \    #echo $BASH_SUBSHELL\n    #echo $BASH_SUBSHELL\n    #echo $BASH_SUBSHELL\n\
    \    #echo $BASH_SUBSHELL\n    #echo $BASH_SUBSHELL\n    #echo $BASH_SUBSHELL\n\
    \    #echo $BASH_SUBSHELL\n    #echo $BASH_SUBSHELL\n    #echo $BASH_SUBSHELL\n\
    \    #echo $BASH_SUBSHELL\n    #echo $BASH_SUBSHELL\n    #echo $BASH_SUBSHELL\n\
    \    #echo $BASH_SUBSHELL\n    #echo $BASH_SUBSHELL\n    #echo $BASH_SUBSHELL\n\
    \    #echo $BASH_SUBSHELL\n    #echo $BASH_SUBSHELL\n    #echo $BASH_SUBSHELL\n\
    \    #echo $BASH_SUBSHELL\n    #echo $BASH_SUBSHELL\n    #echo $BASH_SUBSHELL\n\
    \    #echo $BASH_SUBSHELL\n    #echo $BASH_SUBSHELL\n    #echo $B", "    local\
    \ planets=(Mercury Venus Earth Mars Jupiter Saturn Uranus Neptune)\n    local\
    \ planet1=$1\n    local planet2=$2\n    local planet1_index=0\n    local planet2_index=0\n\
    \    local result=()\n    local i=0\n    local j=0\n    local k=0\n    local tmp=0\n\
    \    local tmp_index=0\n    local tmp_index2=0\n    local tmp_index3=0\n    local\
    \ tmp_index4=0\n    local tmp_index5=0\n    local tmp_index6=0\n    local tmp_index7=0\n\
    \    local tmp_index8=0\n    local tmp_index9=0\n    local tmp_index10=0\n   \
    \ local tmp_index11=0\n    local tmp_index12=0\n    local tmp_index13=0\n    local\
    \ tmp_index14=0\n    local tmp_index15=0\n    local tmp_index16=0\n    local tmp_index17=0\n\
    \    local tmp_index18=0\n    local tmp_index19=0\n    local tmp_index20=0\n \
    \   local tmp_index21=0\n    local tmp_index22=0\n    local tmp_index23=0\n  \
    \  local tmp_index24=0\n    local tmp_index25=0\n    local tmp_index26=0\n   \
    \ local tmp_index27=0\n    local tmp_index28=0\n    local tmp_index29=0\n    local\
    \ tmp_index30=0\n    local tmp_index31=0\n    local tmp_index32=0\n    local tmp_index33=0\n\
    \    local tmp_index34=0\n    local tmp_index35=0\n    local tmp_index36=0\n \
    \   local tmp_index37=0\n    local tmp_index38=0\n    local tmp_index39=0\n  \
    \  local tmp_index40=0\n    local tmp_index41=0\n    local tmp_index42=0\n   \
    \ local tmp_index43=0\n    local tmp_index44=0\n    local tmp_index45=0\n    local\
    \ tmp_index46=0\n    local tmp_index47=0\n    local tmp_index48=0\n    local",
  "    # Write your code here\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
    \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n", "    # Write your code here\n\
    \    # To print results to the standard output you can use echo\n    # Example:\
    \ echo \"Hello world\"\n    echo \"Hello world\"", "    # Write your code here\n\
    \    # To print results to the standard output you can use echo\n    # Example:\
    \ echo \"Hello world\"\n    echo \"Hello world\"", "    # Write your code here\n\
    \    # To print results to the standard output you can use echo\n    # Example:\
    \ echo \"Hello world\"\n    echo \"Hello world\"", "    local planets=(Mercury\
    \ Venus Earth Mars Jupiter Saturn Uranus Neptune)\n    local planet1=$1\n    local\
    \ planet2=$2\n    local planet1_index=0\n    local planet2_index=0\n    local\
    \ result=()\n    local i=0\n    local j=0\n    local k=0\n    local planet=''\n\
    \    local planet_index=0\n    local planet_index_1=0\n    local planet_index_2=0\n\
    \    local planet_index_3=0\n    local planet_index_4=0\n    local planet_index_5=0\n\
    \    local planet_index_6=0\n    local planet_index_7=0\n    local planet_index_8=0\n\
    \    local planet_index_9=0\n    local planet_index_10=0\n    local planet_index_11=0\n\
    \    local planet_index_12=0\n    local planet_index_13=0\n    local planet_index_14=0\n\
    \    local planet_index_15=0\n    local planet_index_16=0\n    local planet_index_17=0\n\
    \    local planet_index_18=0\n    local planet_index_19=0\n    local planet_index_20=0\n\
    \    local planet_index_21=0\n    local planet_index_22=0\n    local planet_index_23=0\n\
    \    local planet_index_24=0\n    local planet_index_25=0\n    local planet_index_26=0\n\
    \    local planet_index_27=0\n    local planet_index_28=0\n    local planet_index_29=0\n\
    \    local planet_index_30=0\n    local planet_index_31=0\n    local planet_index_32=0\n\
    \    local planet_index_33=0\n    local planet_index_34=0\n    local planet_index_35=0\n\
    \    local planet_index_36=0\n    local planet_index_37=0\n    local planet_index_38=0\n\
    \    local planet_index_39=0\n    local planet_index_40=0\n    local planet_index_41=0\n\
    \    local planet_index_42=0\n    local planet_index", "    # Write your code\
    \ here\n    # To print results to the standard output you can use echo\n    #\
    \ Example: echo \"Hello world\"\n    echo \"Hello world\"", "    local planets=(Mercury\
    \ Venus Earth Mars Jupiter Saturn Uranus Neptune)\n    local planet1=$1\n    local\
    \ planet2=$2\n    local planet1_index\n    local planet2_index\n    local planet_index\n\
    \    local result=()\n    local planet\n\n    if [[ \"${planets[*]}\" =~ \"$planet1\"\
    \ ]]; then\n        planet1_index=$(printf \"%s\\n\" \"${planets[@]}\" | grep\
    \ -n \"$planet1\" | cut -d: -f1)\n    else\n        echo \"Planet $planet1 is\
    \ not in the solar system\"\n        return 1\n    fi\n\n    if [[ \"${planets[*]}\"\
    \ =~ \"$planet2\" ]]; then\n        planet2_index=$(printf \"%s\\n\" \"${planets[@]}\"\
    \ | grep -n \"$planet2\" | cut -d: -f1)\n    else\n        echo \"Planet $planet2\
    \ is not in the solar system\"\n        return 1\n    fi\n\n    if [[ $planet1_index\
    \ -lt $planet2_index ]]; then\n        for planet_index in $(seq $planet1_index\
    \ $planet2_index); do\n            planet=${planets[$planet_index]}\n        \
    \    result+=($planet)\n        done\n    else\n        for planet_index in $(seq\
    \ $planet2_index $planet1_index); do\n            planet=${planets[$planet_index]}\n\
    \            result+=($planet)\n        done\n    fi\n\n    printf \"%s\\n\" \"\
    ${result[@]}\"", "    # Write your code here\n    # planet1=$1\n    # planet2=$2\n\
    \    # if [[ $planet1 == \"Mercury\" ]]; then\n    #     echo \"Venus\"\n    #\
    \ elif [[ $planet1 == \"Venus\" ]]; then\n    #     echo \"Earth\"\n    # elif\
    \ [[ $planet1 == \"Earth\" ]]; then\n    #     echo \"Mars\"\n    # elif [[ $planet1\
    \ == \"Mars\" ]]; then\n    #     echo \"Jupiter\"\n    # elif [[ $planet1 ==\
    \ \"Jupiter\" ]]; then\n    #     echo \"Saturn\"\n    # elif [[ $planet1 == \"\
    Saturn\" ]]; then\n    #     echo \"Uranus\"\n    # elif [[ $planet1 == \"Uranus\"\
    \ ]]; then\n    #     echo \"Neptune\"\n    # elif [[ $planet1 == \"Neptune\"\
    \ ]]; then\n    #     echo \"Pluto\"\n    # fi\n    # if [[ $planet2 == \"Mercury\"\
    \ ]]; then\n    #     echo \"Venus\"\n    # elif [[ $planet2 == \"Venus\" ]];\
    \ then\n    #     echo \"Earth\"\n    # elif [[ $planet2 == \"Earth\" ]]; then\n\
    \    #     echo \"Mars\"\n    # elif [[ $planet2 == \"Mars\" ]]; then\n    # \
    \    echo \"Jupiter\"\n    # elif [[ $planet2 == \"Jupiter\" ]]; then\n    # \
    \    echo \"Saturn\"\n    # elif [[ $planet2 == \"Saturn\" ]]; then\n    #   \
    \  echo \"Uranus\"\n    # elif [[ $planet2 == \"Uranus\" ]]; then\n    #     echo\
    \ \"Neptune\"\n    # elif [[ $planet2 == \"Neptune\" ]]; then\n    #     echo\
    \ \"Pluto\"\n    # fi\n    # if [[ $planet1 == \"Mercury\" && $planet2 == \"Mercury\"\
    \ ]]; then\n    #     echo \"Venus\"\n    # elif [[ $planet1 == \"Mercury\" &&\
    \ $planet2 == \"Venus\" ]]; then\n    #     echo \"Venus\"", "    # Write your\
    \ code here\n    # To print results to the standard output you can use echo\n\
    \    # To access arguments use echo \"$1\" \"$2\"\n    # To access the array planets\
    \ use echo \"${planets[@]}\"\n    # To access the array planets use echo \"${planets[@]}\"\
    \n    planets=(\"Mercury\" \"Venus\" \"Earth\" \"Mars\" \"Jupiter\" \"Saturn\"\
    \ \"Uranus\" \"Neptune\")\n    if [[ \"$1\" == \"$2\" ]]; then\n        echo \"\
    \\\"$1\\\"\"\n    elif [[ \"$1\" == \"Mercury\" ]]; then\n        if [[ \"$2\"\
    \ == \"Venus\" ]]; then\n            echo \"\\\"Venus\\\"\"\n        elif [[ \"\
    $2\" == \"Earth\" ]]; then\n            echo \"\\\"Venus\\\"\"\n        elif [[\
    \ \"$2\" == \"Mars\" ]]; then\n            echo \"\\\"Venus\\\"\"\n        elif\
    \ [[ \"$2\" == \"Jupiter\" ]]; then\n            echo \"\\\"Venus\\\"\"\n    \
    \    elif [[ \"$2\" == \"Saturn\" ]]; then\n            echo \"\\\"Venus\\\"\"\
    \n        elif [[ \"$2\" == \"Uranus\" ]]; then\n            echo \"\\\"Venus\\\
    \"\"\n        elif [[ \"$2\" == \"Neptune\" ]]; then\n            echo \"\\\"\
    Venus\\\"\"\n        fi\n    elif [[ \"$1\" == \"Venus\" ]]; then\n        if\
    \ [[ \"$2\" == \"Earth\" ]]; then\n            echo \"\\\"Venus\\\"\"\n      \
    \  elif [[ \"$2\" == \"Mars\" ]]; then\n            echo \"\\\"Venus\\\"\"\n \
    \       elif [[ \"$2\" == \"Jupiter\" ]]; then\n            echo \"\\\"Venus\\\
    \"\"\n        elif [[ \"$2\" == \"Saturn\" ]]; then\n            echo \"\\\"Venus\\\
    \"\"\n        elif [[ \"$2\" == \"Uranus\" ]]; then\n            echo \"\\\"Venus\\\
    \"\"\n        elif [[ \"$2\" == \"Neptune\" ]]; then\n            echo \"\\\"\
    Venus\\\"\"\n        fi\n    elif [[ \"$1\" == \"Earth\" ]]; then\n        if\
    \ [[ \"$2", "  # your code here\n  # echo $1 $2\n  # echo $(echo $1 | tr '[:upper:]'\
    \ '[:lower:]')\n  # echo $(echo $2 | tr '[:upper:]' '[:lower:]')\n  # echo $(echo\
    \ $1 | tr '[:upper:]' '[:lower:]' | sed 's/^\\(.\\)/\\U\\1/')\n  # echo $(echo\
    \ $2 | tr '[:upper:]' '[:lower:]' | sed 's/^\\(.\\)/\\U\\1/')\n  # echo $(echo\
    \ $1 | tr '[:upper:]' '[:lower:]' | sed 's/^\\(.\\)/\\U\\1/')\n  # echo $(echo\
    \ $2 | tr '[:upper:]' '[:lower:]' | sed 's/^\\(.\\)/\\U\\1/')\n  # echo $(echo\
    \ $1 | tr '[:upper:]' '[:lower:]' | sed 's/^\\(.\\)/\\U\\1/')\n  # echo $(echo\
    \ $2 | tr '[:upper:]' '[:lower:]' | sed 's/^\\(.\\)/\\U\\1/')\n  # echo $(echo\
    \ $1 | tr '[:upper:]' '[:lower:]' | sed 's/^\\(.\\)/\\U\\1/')\n  # echo $(echo\
    \ $2 | tr '[:upper:]' '[:lower:]' | sed 's/^\\(.\\)/\\U\\1/')\n  # echo $(echo\
    \ $1 | tr '[:upper:]' '[:lower:]' | sed 's/^\\(.\\)/\\U\\1/')\n  # echo $(echo\
    \ $2 | tr '[:upper:]' '[:lower:]' | sed 's/^\\(.\\)/\\U\\1/')\n  # echo $(echo\
    \ $1 | tr '[:upper:]' '[:lower:]' | sed 's/^\\(.\\)/\\U\\1/')\n  # echo $(echo\
    \ $2 | tr '[:upper:]' '[:lower:]' | sed 's/^\\(.\\)/\\U\\1/')\n  # echo $(echo\
    \ $1 | tr '[:upper:]", "  # your code here\n  planets=(Mercury Venus Earth Mars\
    \ Jupiter Saturn Uranus Neptune)\n  if [[ ! \" ${planets[@]} \" =~ \" $1 \" ]]\
    \ || [[ ! \" ${planets[@]} \" =~ \" $2 \" ]]; then\n    echo \"[]\"\n    return\n\
    \  fi\n  start=0\n  end=0\n  for (( i=0; i<${#planets[@]}; i++ )); do\n    if\
    \ [[ \"${planets[$i]}\" == \"$1\" ]]; then\n      start=$i\n    fi\n    if [[\
    \ \"${planets[$i]}\" == \"$2\" ]]; then\n      end=$i\n    fi\n  done\n  if [[\
    \ $start -gt $end ]]; then\n    echo \"[]\"\n    return\n  fi\n  result=()\n \
    \ for (( i=$start+1; i<$end; i++ )); do\n    result+=(${planets[$i]})\n  done\n\
    \  echo \"[\\\"${result[@]}\\\"]\"", "    # Write your code here\n    # To print\
    \ results to the standard output you can use echo\n    # Example: echo \"Hello\
    \ world\"\n    echo \"Hello world\"", "    # Write your code here\n    # You can\
    \ use the following command to get the path of a planet:\n    # planet_path=$(get_path\
    \ $planet)\n    # You can use the following command to get the name of a planet:\n\
    \    # planet_name=$(get_planet_name $planet)\n    # You can use the following\
    \ command to get the distance from the sun of a planet:\n    # planet_distance=$(get_distance_from_sun\
    \ $planet)\n    # You can use the following command to get the mass of a planet:\n\
    \    # planet_mass=$(get_mass $planet)\n    # You can use the following command\
    \ to get the radius of a planet:\n    # planet_radius=$(get_radius $planet)\n\
    \    # You can use the following command to get the gravity of a planet:\n   \
    \ # planet_gravity=$(get_surface_gravity $planet)\n    # You can use the following\
    \ command to get the escape velocity of a planet:\n    # planet_escape_velocity=$(get_escape_velocity\
    \ $planet)\n    # You can use the following command to get the length of a day\
    \ on a planet:\n    # planet_day_length=$(get_length_of_day $planet)\n    # You\
    \ can use the following command to get the length of a year on a planet:\n   \
    \ # planet_year_length=$(get_length_of_year $planet)\n    # You can use the following\
    \ command to get the temperature of a planet:\n    # planet_temperature=$(get_temperature\
    \ $planet)\n    # You can use the following command to get the number of moons\
    \ of a planet:\n    # planet_moons=$(get_number_of_moons $planet)\n    # You can\
    \ use the following command to get the ring system of a planet:\n    # planet_rings=$(has_rings\
    \ $planet)\n    # You can use the following command to get the atmosphere composition\
    \ of a planet:\n    # planet_atmosphere=$(get_atmosphere_composition $planet)\n\
    \    # You can use the following command to get the name of the first moon of\
    \ a planet:\n    # planet_first_moon=$(get_first_moon $planet)\n    # You can\
    \ use the following", "    # write your code here\n    # echo $1\n    # echo $2\n\
    \    # echo $3\n    # echo $4\n    # echo $5\n    # echo $6\n    # echo $7\n \
    \   # echo $8\n    # echo $9\n    # echo ${10}\n    # echo ${11}\n    # echo ${12}\n\
    \    # echo ${13}\n    # echo ${14}\n    # echo ${15}\n    # echo ${16}\n    #\
    \ echo ${17}\n    # echo ${18}\n    # echo ${19}\n    # echo ${20}\n    # echo\
    \ ${21}\n    # echo ${22}\n    # echo ${23}\n    # echo ${24}\n    # echo ${25}\n\
    \    # echo ${26}\n    # echo ${27}\n    # echo ${28}\n    # echo ${29}\n    #\
    \ echo ${30}\n    # echo ${31}\n    # echo ${32}\n    # echo ${33}\n    # echo\
    \ ${34}\n    # echo ${35}\n    # echo ${36}\n    # echo ${37}\n    # echo ${38}\n\
    \    # echo ${39}\n    # echo ${40}\n    # echo ${41}\n    # echo ${42}\n    #\
    \ echo ${43}\n    # echo ${44}\n    # echo ${45}\n    # echo ${46}\n    # echo\
    \ ${47}\n    # echo ${48}\n    # echo ${49}\n    # echo ${50}\n    # echo ${51}\n\
    \    # echo ${52}\n    # echo ${53}\n    # echo ${54}\n    # echo ${55}\n    #\
    \ echo ${56}\n    # echo ${57}\n    # echo ${58}\n    # echo ${59}\n    # echo\
    \ ${60}\n    # echo ${61}\n    # echo ${62}\n    # echo ${63}\n    # echo ${64}\n\
    \    # echo ${65}\n    # echo ${66}\n    # echo ${67}\n    # echo ${68}\n    #\
    \ echo ${69}\n    # echo ${70}\n    # echo ${71}\n    # echo ${72}\n    # echo\
    \ ${73}\n    #", "    if [[ $1 =~ ^(Mercury|Venus|Earth|Mars|Jupiter|Saturn|Uranus|Neptune)$\
    \ ]] && [[ $2 =~ ^(Mercury|Venus|Earth|Mars|Jupiter|Saturn|Uranus|Neptune)$ ]];\
    \ then\n        if [[ $1 == \"Mercury\" ]]; then\n            if [[ $2 == \"Mercury\"\
    \ ]]; then\n                echo \"\\\"Mercury\\\"\"\n            elif [[ $2 ==\
    \ \"Venus\" ]]; then\n                echo \"\\\"Venus\\\"\"\n            elif\
    \ [[ $2 == \"Earth\" ]]; then\n                echo \"[\\\"Venus\\\", \\\"Earth\\\
    \"]\"\n            elif [[ $2 == \"Mars\" ]]; then\n                echo \"[\\\
    \"Venus\\\", \\\"Earth\\\", \\\"Mars\\\"]\"\n            elif [[ $2 == \"Jupiter\"\
    \ ]]; then\n                echo \"[\\\"Venus\\\", \\\"Earth\\\", \\\"Mars\\\"\
    , \\\"Jupiter\\\"]\"\n            elif [[ $2 == \"Saturn\" ]]; then\n        \
    \        echo \"[\\\"Venus\\\", \\\"Earth\\\", \\\"Mars\\\", \\\"Jupiter\\\",\
    \ \\\"Saturn\\\"]\"\n            elif [[ $2 == \"Uranus\" ]]; then\n         \
    \       echo \"[\\\"Venus\\\", \\\"Earth\\\", \\\"Mars\\\", \\\"Jupiter\\\", \\\
    \"Saturn\\\", \\\"Uranus\\\"]\"\n            elif [[ $2 == \"Neptune\" ]]; then\n\
    \                echo \"[\\\"Venus\\\", \\\"Earth\\\", \\\"Mars\\\", \\\"Jupiter\\\
    \", \\\"Saturn\\\", \\\"Uranus\\\", \\\"Neptune\\\"]\"\n            fi\n     \
    \   elif [[ $1 == \"Venus\" ]]; then\n            if [[ $2 == \"Venus\" ]]; then\n\
    \                echo \"\\\"Venus\\\"\"\n            elif [[ $2 == \"Earth\" ]];\
    \ then\n                echo \"\\\"Earth\\\"\"\n            elif [[ $2 == \"Mars\"\
    \ ]]; then\n                echo \"[\\\"Earth\\\", \\\"Mars\\\"]\"\n         \
    \   elif [[ $2 == \"Jupiter\" ]]; then\n                echo \"[\\\"Earth\\\"\
    , \\\"Mars\\\", \\\"Jupiter\\\"]\"\n            elif [[ $2 == \"Saturn\" ]]; then\n\
    \                echo \"[\\\"Earth\\\", \\\"Mars\\\", \\\"Jupiter\\\", \\\"Saturn\\\
    \"]\"\n            elif [[ $", "    # Write your code here\n    # planet1=$1\n\
    \    # planet2=$2\n    # echo $planet1\n    # echo $planet2\n    # echo $1\n \
    \   # echo $2\n    # echo $3\n    # echo $4\n    # echo $5\n    # echo $6\n  \
    \  # echo $7\n    # echo $8\n    # echo $9\n    # echo $10\n    # echo $11\n \
    \   # echo $12\n    # echo $13\n    # echo $14\n    # echo $15\n    # echo $16\n\
    \    # echo $17\n    # echo $18\n    # echo $19\n    # echo $20\n    # echo $21\n\
    \    # echo $22\n    # echo $23\n    # echo $24\n    # echo $25\n    # echo $26\n\
    \    # echo $27\n    # echo $28\n    # echo $29\n    # echo $30\n    # echo $31\n\
    \    # echo $32\n    # echo $33\n    # echo $34\n    # echo $35\n    # echo $36\n\
    \    # echo $37\n    # echo $38\n    # echo $39\n    # echo $40\n    # echo $41\n\
    \    # echo $42\n    # echo $43\n    # echo $44\n    # echo $45\n    # echo $46\n\
    \    # echo $47\n    # echo $48\n    # echo $49\n    # echo $50\n    # echo $51\n\
    \    # echo $52\n    # echo $53\n    # echo $54\n    # echo $55\n    # echo $56\n\
    \    # echo $57\n    # echo $58\n    # echo $59\n    # echo $60\n    # echo $61\n\
    \    # echo $62\n    # echo $63\n    # echo $64\n    # echo $65\n    # echo $66\n\
    \    # echo $67\n    # echo $68\n    # echo $69\n    # echo $70\n    # echo $71\n\
    \    # echo $72\n    # echo $73\n    # echo $74\n    # echo $75\n    # echo $76\n\
    \    # echo $77\n    # echo $78\n    # echo $79\n    #", "    # Write your code\
    \ here\n    # To print results to the standard output you can use echo\n    #\
    \ To debug: echo \"Debug messages...\" >&2\n    echo \"Not implemented\"", " \
    \   # Write your code here\n    # To print results to the standard output you\
    \ can use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello world\"",
  "    local planets=(\"Mercury\" \"Venus\" \"Earth\" \"Mars\" \"Jupiter\" \"Saturn\"\
    \ \"Uranus\" \"Neptune\")\n    local planet1=$1\n    local planet2=$2\n    local\
    \ start\n    local end\n    local result=()\n    for i in ${!planets[@]}; do\n\
    \        if [ \"${planets[$i]}\" == \"$planet1\" ]; then\n            start=$i\n\
    \        fi\n        if [ \"${planets[$i]}\" == \"$planet2\" ]; then\n       \
    \     end=$i\n        fi\n    done\n    if [ -z \"$start\" ] || [ -z \"$end\"\
    \ ]; then\n        echo \"[]\"\n        return\n    fi\n    if [ $start -gt $end\
    \ ]; then\n        local tmp=$start\n        start=$end\n        end=$tmp\n  \
    \  fi\n    for i in $(seq $start $end); do\n        if [ $i -ne $start ] && [\
    \ $i -ne $end ]; then\n            result+=(\"${planets[$i]}\")\n        fi\n\
    \    done\n    echo \"[$(IFS=,; echo \"${result[*]}\")]\"", "    # Write your\
    \ code here\n    # To print results to the standard output you can use echo\n\
    \    # Example: echo \"Hello world\"\n    echo \"Hello world\"", "    if [[ $1\
    \ == \"Mercury\" ]]; then\n        case $2 in\n            Mercury) echo \"[]\"\
    ;;\n            Venus) echo \"[\\\"Venus\\\"]\";;\n            Earth) echo \"\
    [\\\"Venus\\\", \\\"Earth\\\"]\";;\n            Mars) echo \"[\\\"Venus\\\", \\\
    \"Earth\\\", \\\"Mars\\\"]\";;\n            Jupiter) echo \"[\\\"Venus\\\", \\\
    \"Earth\\\", \\\"Mars\\\", \\\"Jupiter\\\"]\";;\n            Saturn) echo \"[\\\
    \"Venus\\\", \\\"Earth\\\", \\\"Mars\\\", \\\"Jupiter\\\", \\\"Saturn\\\"]\";;\n\
    \            Uranus) echo \"[\\\"Venus\\\", \\\"Earth\\\", \\\"Mars\\\", \\\"\
    Jupiter\\\", \\\"Saturn\\\", \\\"Uranus\\\"]\";;\n            Neptune) echo \"\
    [\\\"Venus\\\", \\\"Earth\\\", \\\"Mars\\\", \\\"Jupiter\\\", \\\"Saturn\\\",\
    \ \\\"Uranus\\\", \\\"Neptune\\\"]\";;\n            *) echo \"[]\";;\n       \
    \ esac\n    elif [[ $1 == \"Venus\" ]]; then\n        case $2 in\n           \
    \ Mercury) echo \"[]\";;\n            Venus) echo \"[]\";;\n            Earth)\
    \ echo \"[\\\"Earth\\\"]\";;\n            Mars) echo \"[\\\"Earth\\\", \\\"Mars\\\
    \"]\";;\n            Jupiter) echo \"[\\\"Earth\\\", \\\"Mars\\\", \\\"Jupiter\\\
    \"]\";;\n            Saturn) echo \"[\\\"Earth\\\", \\\"Mars\\\", \\\"Jupiter\\\
    \", \\\"Saturn\\\"]\";;\n            Uranus) echo \"[\\\"Earth\\\", \\\"Mars\\\
    \", \\\"Jupiter\\\", \\\"Saturn\\\", \\\"Uranus\\\"]\";;\n            Neptune)\
    \ echo \"[\\\"Earth\\\", \\\"Mars\\\", \\\"Jupiter\\\", \\\"Saturn\\\", \\\"Uranus\\\
    \", \\\"Neptune\\\"]\";;\n            *) echo \"[]\";;\n        esac\n    elif\
    \ [[ $1 == \"Earth\" ]]; then\n        case $2 in\n            Mercury) echo \"\
    []\";;\n            Venus) echo \"[]\";;\n            Earth) echo \"[]\";;\n \
    \           Mars) echo \"[\\\"Mars\\\"]\";;\n            Jupiter) echo \"[\\\"\
    Mars\\\", \\\"Jupiter\\\"]\";;\n            Saturn) echo \"[\\\"Mars\\\", \\\"\
    Jupiter\\\", \\\"Saturn\\\"]\";;\n            Uranus) echo \"[\\\"Mars\\\", \\\
    \"Jupiter\\\", \\\"Saturn\\\", \\\"Uranus\\\"]\";;\n            Neptune) echo\
    \ \"[\\\"Mars\\\", \\\"Jupiter\\\", \\\"Saturn\\\", \\\"Uranus\\\", \\\"Nept",
  "    # Write your code here\n    # Use echo to output the result\n    # Example:\n\
    \    # echo \"Hello world\"\n    echo \"Not implemented\"", "    # Write your\
    \ code here\n    # To print results to the standard output you can use echo\n\
    \    # Example: echo \"Hello world\"\n    echo \"Hello world\"", "    # Write\
    \ your code here\n    # To print results to the standard output you can use echo\n\
    \    # To access arguments use echo \"$1\" \"$2\"\n    echo \"Venus\"", "    #\
    \ Write your code here\n    # To print results to the standard output you can\
    \ use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello world\"", " \
    \   # Write your code here\n    # To print results to the standard output you\
    \ can use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello world\"",
  "    declare -A planet_orbit\n    planet_orbit=([\"Mercury\"]=1 [\"Venus\"]=2 [\"\
    Earth\"]=3 [\"Mars\"]=4 [\"Jupiter\"]=5 [\"Saturn\"]=6 [\"Uranus\"]=7 [\"Neptune\"\
    ]=8)\n    declare -A orbit_planet\n    orbit_planet=([1]=\"Mercury\" [2]=\"Venus\"\
    \ [3]=\"Earth\" [4]=\"Mars\" [5]=\"Jupiter\" [6]=\"Saturn\" [7]=\"Uranus\" [8]=\"\
    Neptune\")\n    declare -a planets\n    if [[ -z ${planet_orbit[$1]} ]] || [[\
    \ -z ${planet_orbit[$2]} ]]; then\n        echo \"Invalid planet name\"\n    \
    \    return 1\n    fi\n    if [[ ${planet_orbit[$1]} -lt ${planet_orbit[$2]} ]];\
    \ then\n        for ((i=${planet_orbit[$1]}; i<=${planet_orbit[$2]}; i++)); do\n\
    \            planets+=(${orbit_planet[$i]})\n        done\n    else\n        for\
    \ ((i=${planet_orbit[$1]}; i>=${planet_orbit[$2]}; i--)); do\n            planets+=(${orbit_planet[$i]})\n\
    \        done\n    fi\n    echo ${planets[@]}", "    # Write your code here\n\
    \    # To print results to the standard output you can use echo\n    # Example:\
    \ echo \"Hello world\"\n    echo \"Hello world\"", "    # Write your code here\n\
    \    #planet1=$1\n    #planet2=$2\n    #echo $planet1\n    #echo $planet2\n  \
    \  #echo $1\n    #echo $2\n    #echo $3\n    #echo $4\n    #echo $5\n    #echo\
    \ $6\n    #echo $7\n    #echo $8\n    #echo $9\n    #echo $10\n    #echo $11\n\
    \    #echo $12\n    #echo $13\n    #echo $14\n    #echo $15\n    #echo $16\n \
    \   #echo $17\n    #echo $18\n    #echo $19\n    #echo $20\n    #echo $21\n  \
    \  #echo $22\n    #echo $23\n    #echo $24\n    #echo $25\n    #echo $26\n   \
    \ #echo $27\n    #echo $28\n    #echo $29\n    #echo $30\n    #echo $31\n    #echo\
    \ $32\n    #echo $33\n    #echo $34\n    #echo $35\n    #echo $36\n    #echo $37\n\
    \    #echo $38\n    #echo $39\n    #echo $40\n    #echo $41\n    #echo $42\n \
    \   #echo $43\n    #echo $44\n    #echo $45\n    #echo $46\n    #echo $47\n  \
    \  #echo $48\n    #echo $49\n    #echo $50\n    #echo $51\n    #echo $52\n   \
    \ #echo $53\n    #echo $54\n    #echo $55\n    #echo $56\n    #echo $57\n    #echo\
    \ $58\n    #echo $59\n    #echo $60\n    #echo $61\n    #echo $62\n    #echo $63\n\
    \    #echo $64\n    #echo $65\n    #echo $66\n    #echo $67\n    #echo $68\n \
    \   #echo $69\n    #echo $70\n    #echo $71\n    #echo $72\n    #echo $73\n  \
    \  #echo $74\n    #echo $75\n    #echo $76\n    #echo $77\n    #echo $78\n   \
    \ #echo $79\n    #", "    # Write your code here\n    # To print results to the\
    \ standard output you can use echo\n    # To access arguments use echo \"$1\"\
    \ \"$2\"\n    echo \"Not implemented yet\"", "    # Write your code here\n   \
    \ # To print results to the standard output you can use echo\n    # Example: echo\
    \ \"Hello world\"\n    echo \"Hello world\"", "    local planet1=$1\n    local\
    \ planet2=$2\n    local planets=(\"Mercury\" \"Venus\" \"Earth\" \"Mars\" \"Jupiter\"\
    \ \"Saturn\" \"Uranus\" \"Neptune\")\n    local planet1_index=0\n    local planet2_index=0\n\
    \    local result=()\n    for ((i=0; i<${#planets[@]}; i++)); do\n        if [[\
    \ \"${planets[$i]}\" == \"$planet1\" ]]; then\n            planet1_index=$i\n\
    \        fi\n        if [[ \"${planets[$i]}\" == \"$planet2\" ]]; then\n     \
    \       planet2_index=$i\n        fi\n    done\n    if [[ $planet1_index -gt $planet2_index\
    \ ]]; then\n        for ((i=$planet2_index; i<=$planet1_index; i++)); do\n   \
    \         result+=(\"${planets[$i]}\")\n        done\n    else\n        for ((i=$planet1_index;\
    \ i<=$planet2_index; i++)); do\n            result+=(\"${planets[$i]}\")\n   \
    \     done\n    fi\n    echo \"${result[@]}\"", "    local planets=(Mercury Venus\
    \ Earth Mars Jupiter Saturn Uranus Neptune)\n    local planet1=$1\n    local planet2=$2\n\
    \    local planet1_index\n    local planet2_index\n    local result=()\n    local\
    \ i\n\n    for ((i=0; i<${#planets[@]}; i++)); do\n        if [[ \"${planets[$i]}\"\
    \ == \"$planet1\" ]]; then\n            planet1_index=$i\n        fi\n       \
    \ if [[ \"${planets[$i]}\" == \"$planet2\" ]]; then\n            planet2_index=$i\n\
    \        fi\n    done\n\n    if [[ -z \"$planet1_index\" || -z \"$planet2_index\"\
    \ ]]; then\n        echo \"()\"\n        return\n    fi\n\n    if [[ \"$planet1_index\"\
    \ -lt \"$planet2_index\" ]]; then\n        for ((i=$planet1_index+1; i<$planet2_index;\
    \ i++)); do\n            result+=(\"${planets[$i]}\")\n        done\n    else\n\
    \        for ((i=$planet2_index+1; i<$planet1_index; i++)); do\n            result+=(\"\
    ${planets[$i]}\")\n        done\n    fi\n\n    echo \"(${result[@]})\"", "   \
    \ if [[ $1 == \"Mercury\" ]]; then\n        if [[ $2 == \"Venus\" ]]; then\n \
    \           echo \"Mercury\"\n        elif [[ $2 == \"Earth\" ]]; then\n     \
    \       echo \"Mercury\"\n            echo \"Venus\"\n        elif [[ $2 == \"\
    Mars\" ]]; then\n            echo \"Mercury\"\n            echo \"Venus\"\n  \
    \          echo \"Earth\"\n        elif [[ $2 == \"Jupiter\" ]]; then\n      \
    \      echo \"Mercury\"\n            echo \"Venus\"\n            echo \"Earth\"\
    \n            echo \"Mars\"\n        elif [[ $2 == \"Saturn\" ]]; then\n     \
    \       echo \"Mercury\"\n            echo \"Venus\"\n            echo \"Earth\"\
    \n            echo \"Mars\"\n            echo \"Jupiter\"\n        elif [[ $2\
    \ == \"Uranus\" ]]; then\n            echo \"Mercury\"\n            echo \"Venus\"\
    \n            echo \"Earth\"\n            echo \"Mars\"\n            echo \"Jupiter\"\
    \n            echo \"Saturn\"\n        elif [[ $2 == \"Neptune\" ]]; then\n  \
    \          echo \"Mercury\"\n            echo \"Venus\"\n            echo \"Earth\"\
    \n            echo \"Mars\"\n            echo \"Jupiter\"\n            echo \"\
    Saturn\"\n            echo \"Uranus\"\n        else\n            echo \"Invalid\
    \ planet name\"\n        fi\n    elif [[ $1 == \"Venus\" ]]; then\n        if\
    \ [[ $2 == \"Earth\" ]]; then\n            echo \"Venus\"\n        elif [[ $2\
    \ == \"Mars\" ]]; then\n            echo \"Venus\"\n            echo \"Earth\"\
    \n        elif [[ $2 == \"Jupiter\" ]]; then\n            echo \"Venus\"\n   \
    \         echo \"Earth\"\n            echo \"Mars\"\n        elif [[ $2 == \"\
    Saturn\" ]]; then\n            echo \"Venus\"\n            echo \"Earth\"\n  \
    \          echo \"Mars\"\n            echo \"Jupiter\"\n        elif [[ $2 ==\
    \ \"Uranus\" ]]; then\n            echo \"Venus\"\n            echo \"Earth\"\n\
    \            echo \"Mars\"\n            echo \"Jupiter\"\n            echo \"\
    Saturn\"\n        elif [[ $", "    # Write your code here\n    # To print results\
    \ to the standard output you can use echo\n    # Example: echo \"Hello world\"\
    \n    echo \"Hello world\"", "    # Write your code here\n    # To print results\
    \ to the standard output you can use echo\n    # To access arguments use echo\
    \ \"$1\" \"$2\"\n    # To access the arguments use echo \"$1\" \"$2\"\n    # To\
    \ print the result of the test use echo \"$(test_function \"$1\" \"$2\")\"\n \
    \   echo \"Not implemented yet\"", "    # Write your code here\n    # To print\
    \ results to the standard output you can use print_str function\n    # Example:\n\
    \    # print_str \"My answer is:\"\n    # print_str \"1\"\n    # print_str \"\
    2\"\n    # print_str \"3\"\n    # print_str \"4\"\n    # print_str \"5\"\n   \
    \ # print_str \"6\"\n    # print_str \"7\"\n    # print_str \"8\"\n    # print_str\
    \ \"9\"\n    # print_str \"10\"\n    # print_str \"11\"\n    # print_str \"12\"\
    \n    # print_str \"13\"\n    # print_str \"14\"\n    # print_str \"15\"\n   \
    \ # print_str \"16\"\n    # print_str \"17\"\n    # print_str \"18\"\n    # print_str\
    \ \"19\"\n    # print_str \"20\"\n    # print_str \"21\"\n    # print_str \"22\"\
    \n    # print_str \"23\"\n    # print_str \"24\"\n    # print_str \"25\"\n   \
    \ # print_str \"26\"\n    # print_str \"27\"\n    # print_str \"28\"\n    # print_str\
    \ \"29\"\n    # print_str \"30\"\n    # print_str \"31\"\n    # print_str \"32\"\
    \n    # print_str \"33\"\n    # print_str \"34\"\n    # print_str \"35\"\n   \
    \ # print_str \"36\"\n    # print_str \"37\"\n    # print_str \"38\"\n    # print_str\
    \ \"39\"\n    # print_str \"40\"\n    # print_str \"41\"\n    # print_str \"42\"\
    \n    # print_str \"43\"\n    # print_str \"44\"\n    # print_str \"45\"\n   \
    \ # print_str \"46\"\n    # print_str \"47\"\n    # print_str \"48\"\n    # print_str\
    \ \"49\"\n    # print_str \"50\"\n    # print_str \"51\"\n    # print_str \"52\"\
    \n    # print", "    local planet1=$1\n    local planet2=$2\n    local planets=(\"\
    Mercury\" \"Venus\" \"Earth\" \"Mars\" \"Jupiter\" \"Saturn\" \"Uranus\" \"Neptune\"\
    )\n    local planet1_index=0\n    local planet2_index=0\n    local result=()\n\
    \    local i=0\n    for planet in ${planets[@]}; do\n        if [ \"$planet\"\
    \ == \"$planet1\" ]; then\n            planet1_index=$i\n        fi\n        if\
    \ [ \"$planet\" == \"$planet2\" ]; then\n            planet2_index=$i\n      \
    \  fi\n        i=$((i+1))\n    done\n    if [ $planet1_index -gt $planet2_index\
    \ ]; then\n        for ((i=$planet2_index; i<=$planet1_index; i++)); do\n    \
    \        result+=(${planets[$i]})\n        done\n    else\n        for ((i=$planet1_index;\
    \ i<=$planet2_index; i++)); do\n            result+=(${planets[$i]})\n       \
    \ done\n    fi\n    echo ${result[@]}", "    # Write your code here\n    # To\
    \ print results to the standard output you can use echo\n    # Example: echo \"\
    Hello world\"\n    echo \"Hello world\"", "    local planets=(Mercury Venus Earth\
    \ Mars Jupiter Saturn Uranus Neptune)\n    local planet1=$1\n    local planet2=$2\n\
    \    local planet1_index=0\n    local planet2_index=0\n    local planet_index=0\n\
    \    local planet_list=()\n    local planet_list_index=0\n    local planet_list_size=0\n\
    \    local planet_list_string=\"\"\n    local planet_list_string_index=0\n   \
    \ local planet_list_string_size=0\n    local planet_list_string_size_index=0\n\
    \    local planet_list_string_size_index_index=0\n    local planet_list_string_size_index_index_index=0\n\
    \    local planet_list_string_size_index_index_index_index=0\n    local planet_list_string_size_index_index_index_index_index=0\n\
    \    local planet_list_string_size_index_index_index_index_index_index=0\n   \
    \ local planet_list_string_size_index_index_index_index_index_index_index=0\n\
    \    local planet_list_string_size_index_index_index_index_index_index_index_index=0\n\
    \    local planet_list_string_size_index_index_index_index_index_index_index_index_index=0\n\
    \    local planet_list_string_size_index_index_index_index_index_index_index_index_index_index=0\n\
    \    local planet_list_string_size_index_index_index_index_index_index_index_index_index_index_index=0\n\
    \    local planet_list_string_size_index_index_index_index_index_index_index_index_index_index_index_index=0\n\
    \    local planet_list_string_size_index_index_index_index_index_index_index_index_index_index_index_index_index=0\n\
    \    local planet_list_string_size_index_index_index_index_index_index_index_index_index_index_index_index_index_index=0\n\
    \    local planet_list_string_size_index_index_index_", "    # write your code\
    \ here\n    if [[ $1 == \"Mercury\" ]]; then\n        if [[ $2 == \"Venus\" ]];\
    \ then\n            echo '\"Venus\"'\n        elif [[ $2 == \"Earth\" ]]; then\n\
    \            echo '[\"Venus\", \"Earth\"]'\n        elif [[ $2 == \"Mars\" ]];\
    \ then\n            echo '[\"Venus\", \"Earth\", \"Mars\"]'\n        elif [[ $2\
    \ == \"Jupiter\" ]]; then\n            echo '[\"Venus\", \"Earth\", \"Mars\",\
    \ \"Jupiter\"]'\n        elif [[ $2 == \"Saturn\" ]]; then\n            echo '[\"\
    Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\"]'\n        elif [[ $2 ==\
    \ \"Uranus\" ]]; then\n            echo '[\"Venus\", \"Earth\", \"Mars\", \"Jupiter\"\
    , \"Saturn\", \"Uranus\"]'\n        elif [[ $2 == \"Neptune\" ]]; then\n     \
    \       echo '[\"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\"\
    , \"Neptune\"]'\n        else\n            echo '[]'\n        fi\n    elif [[\
    \ $1 == \"Venus\" ]]; then\n        if [[ $2 == \"Earth\" ]]; then\n         \
    \   echo '\"Earth\"'\n        elif [[ $2 == \"Mars\" ]]; then\n            echo\
    \ '[\"Earth\", \"Mars\"]'\n        elif [[ $2 == \"Jupiter\" ]]; then\n      \
    \      echo '[\"Earth\", \"Mars\", \"Jupiter\"]'\n        elif [[ $2 == \"Saturn\"\
    \ ]]; then\n            echo '[\"Earth\", \"Mars\", \"Jupiter\", \"Saturn\"]'\n\
    \        elif [[ $2 == \"Uranus\" ]]; then\n            echo '[\"Earth\", \"Mars\"\
    , \"Jupiter\", \"Saturn\", \"Uranus\"]'\n        elif [[ $2 == \"Neptune\" ]];\
    \ then\n            echo '[\"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\"\
    , \"Neptune\"]'\n        else\n            echo '[]'\n        fi\n    elif [[\
    \ $1 == \"Earth\" ]]; then\n       ", "    # write your code here\n    if [ $#\
    \ -ne 2 ]; then\n        echo \"Usage: $0 <planet1> <planet2>\"\n        return\
    \ 1\n    fi\n    local planets=(Mercury Venus Earth Mars Jupiter Saturn Uranus\
    \ Neptune)\n    local planet1=$1\n    local planet2=$2\n    local planet1_index=0\n\
    \    local planet2_index=0\n    local i\n    for ((i=0; i<${#planets[@]}; i++));\
    \ do\n        if [ \"${planets[$i]}\" == \"$planet1\" ]; then\n            planet1_index=$i\n\
    \        fi\n        if [ \"${planets[$i]}\" == \"$planet2\" ]; then\n       \
    \     planet2_index=$i\n        fi\n    done\n    if [ $planet1_index -eq 0 -o\
    \ $planet2_index -eq 0 ]; then\n        echo \"Usage: $0 <planet1> <planet2>\"\
    \n        return 1\n    fi\n    local start=$planet1_index\n    local end=$planet2_index\n\
    \    if [ $planet1_index -gt $planet2_index ]; then\n        start=$planet2_index\n\
    \        end=$planet1_index\n    fi\n    local result=()\n    for ((i=start+1;\
    \ i<end; i++)); do\n        result[${#result[@]}]=\"${planets[$i]}\"\n    done\n\
    \    echo ${result[@]}", "    local planets=(Mercury Venus Earth Mars Jupiter\
    \ Saturn Uranus Neptune)\n    local planet1=$1\n    local planet2=$2\n    local\
    \ planet1_index=0\n    local planet2_index=0\n    local i=0\n    local result=()\n\
    \    for planet in ${planets[@]}; do\n        if [ \"$planet\" == \"$planet1\"\
    \ ]; then\n            planet1_index=$i\n        fi\n        if [ \"$planet\"\
    \ == \"$planet2\" ]; then\n            planet2_index=$i\n        fi\n        i=$((i+1))\n\
    \    done\n    if [ $planet1_index -gt $planet2_index ]; then\n        for i in\
    \ $(seq $planet2_index $planet1_index); do\n            result+=(${planets[$i]})\n\
    \        done\n    else\n        for i in $(seq $planet1_index $planet2_index);\
    \ do\n            result+=(${planets[$i]})\n        done\n    fi\n    echo ${result[@]}"]
stop_tokens:
- "\n}"

name: HumanEval_131_digits
language: sh
prompt: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
  \ digits.\n# Return 0 if all digits are even.\n# For example:\n# >>> $(digits \"\
  1\")\n# \"1\"\n# >>> $(digits \"4\")\n# \"0\"\n# >>> $(digits \"235\")\n# \"15\"\
  \n#\n# $1 is an integer\ndigits() {\n"
tests: "}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
  \ \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"\
  120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"\
  98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
  \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
completions: ["  local n=$1\n  local product=1\n  local digit\n  while [ $n -gt 0\
    \ ]; do\n    digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      product=$((product\
    \ * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo $product", "  local -i\
    \ n=$1\n  local -i product=1\n  local -i digit\n  while (( n > 0 )); do\n    digit=$((\
    \ n % 10 ))\n    (( digit % 2 )) && (( product *= digit ))\n    n=$(( n / 10 ))\n\
    \  done\n  echo $product", "  local result=1\n  local digit\n  for (( i=0; i<${#1};\
    \ i++ )); do\n    digit=${1:$i:1}\n    if (( digit % 2 == 1 )); then\n      ((\
    \ result *= digit ))\n    fi\n  done\n  echo $result", "  local result=1\n  local\
    \ digit\n  for (( i=0; i<${#1}; i++ )); do\n    digit=${1:$i:1}\n    if (( digit\
    \ % 2 == 1 )); then\n      (( result *= digit ))\n    fi\n  done\n  echo $result",
  "  local -i n=$1\n  local -i product=1\n  local -i digit\n  while (( n > 0 )); do\n\
    \    digit=$(( n % 10 ))\n    (( digit % 2 == 1 )) && (( product *= digit ))\n\
    \    n=$(( n / 10 ))\n  done\n  echo $product", "  local digits=$(echo \"$1\"\
    \ | sed 's/\\(.\\)/\\1 /g')\n  local result=1\n  for digit in $digits; do\n  \
    \  if [ $((digit % 2)) -ne 0 ]; then\n      result=$((result * digit))\n    fi\n\
    \  done\n  echo $result", "  local result=1\n  local number=$1\n  local digit\n\
    \  while [ $number -gt 0 ]; do\n    digit=$((number % 10))\n    if [ $((digit\
    \ % 2)) -ne 0 ]; then\n      result=$((result * digit))\n    fi\n    number=$((number\
    \ / 10))\n  done\n  echo $result", "  local product=1\n  local digit\n  for digit\
    \ in $(echo $1 | grep -o .); do\n    if [ $((digit % 2)) -ne 0 ]; then\n     \
    \ product=$((product * digit))\n    fi\n  done\n  echo $product", "  local n=$1\n\
    \  local result=1\n  while [ $n -gt 0 ]; do\n    local digit=$((n % 10))\n   \
    \ if [ $((digit % 2)) -ne 0 ]; then\n      result=$((result * digit))\n    fi\n\
    \    n=$((n / 10))\n  done\n  echo $result", "    local n=$1\n    local prod=1\n\
    \    local digit\n    while [ $n -gt 0 ]; do\n        digit=$((n % 10))\n    \
    \    if [ $((digit % 2)) -ne 0 ]; then\n            prod=$((prod * digit))\n \
    \       fi\n        n=$((n / 10))\n    done\n    echo $prod", "  local result=1\n\
    \  for (( i=0; i<${#1}; i++ )); do\n    if [[ $(( ${1:$i:1} % 2 )) -ne 0 ]]; then\n\
    \      result=$(( result * ${1:$i:1} ))\n    fi\n  done\n  echo \"$result\"",
  "  local n=\"$1\"\n  local product=1\n  local digit\n  while [ $n -gt 0 ]; do\n\
    \    digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      product=$((product\
    \ * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo \"$product\"", "    local\
    \ n=$1\n    local result=1\n    while [ $n -gt 0 ]; do\n        local digit=$((n\
    \ % 10))\n        if [ $((digit % 2)) -ne 0 ]; then\n            result=$((result\
    \ * digit))\n        fi\n        n=$((n / 10))\n    done\n    echo $result", " \
    \   local result=1\n    for (( i=0; i<${#1}; i++ )); do\n        local digit=${1:$i:1}\n\
    \        if (( digit % 2 == 1 )); then\n            (( result *= digit ))\n  \
    \      fi\n    done\n    echo $result", "  local n=$1\n  local product=1\n  local\
    \ digit\n  while [[ $n -gt 0 ]]; do\n    digit=$((n % 10))\n    if [[ $((digit\
    \ % 2)) -ne 0 ]]; then\n      product=$((product * digit))\n    fi\n    n=$((n\
    \ / 10))\n  done\n  echo $product", "  local -i n=$1\n  local -i product=1\n \
    \ local -i digit\n  while (( n > 0 )); do\n    digit=$(( n % 10 ))\n    (( digit\
    \ % 2 == 1 )) && (( product *= digit ))\n    n=$(( n / 10 ))\n  done\n  echo $product",
  "  local -i n=$1\n  local -i product=1\n  while (( n > 0 )); do\n    local -i digit=$((\
    \ n % 10 ))\n    if (( digit % 2 == 1 )); then\n      product *= digit\n    fi\n\
    \    n /= 10\n  done\n  echo $product", "  local -i sum=1\n  for (( i=0; i<${#1};\
    \ i++ )); do\n    local -i digit=${1:i:1}\n    (( digit % 2 )) && (( sum *= digit\
    \ ))\n  done\n  echo $sum", "  local -i sum=1\n  local -i digit\n  for (( i=0;\
    \ i<${#1}; i++ )); do\n    digit=${1:i:1}\n    (( digit % 2 == 1 )) && (( sum\
    \ *= digit ))\n  done\n  echo $sum", "  local n=$1\n  local result=1\n  while\
    \ [ $n -gt 0 ]; do\n    local digit=$(( n % 10 ))\n    if [ $(( digit % 2 )) -ne\
    \ 0 ]; then\n      result=$(( result * digit ))\n    fi\n    n=$(( n / 10 ))\n\
    \  done\n  echo $result", "  local -i n=$1\n  local -i prod=1\n  local -i digit\n\
    \  while (( n > 0 )); do\n    digit=$(( n % 10 ))\n    (( digit % 2 )) && (( prod\
    \ *= digit ))\n    n=$(( n / 10 ))\n  done\n  echo $prod", "  local -i n=$1\n\
    \  local -i product=1\n  local -i digit\n  while (( n > 0 )); do\n    digit=$((\
    \ n % 10 ))\n    (( digit % 2 != 0 )) && (( product *= digit ))\n    n=$(( n /\
    \ 10 ))\n  done\n  echo $product", "  local n=$1\n  local product=1\n  local digit\n\
    \  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit % 2)) -eq\
    \ 1 ]; then\n      product=$((product * digit))\n    fi\n    n=$((n / 10))\n \
    \ done\n  echo $product", "  local result=1\n  for (( i=0; i<${#1}; i++ )); do\n\
    \    local digit=${1:$i:1}\n    if (( digit % 2 != 0 )); then\n      result=$((\
    \ result * digit ))\n    fi\n  done\n  echo $result", "  local product=1\n  local\
    \ digit\n  for digit in $(echo $1 | grep -o .); do\n    if [ $(($digit % 2)) -ne\
    \ 0 ]; then\n      product=$(($product * $digit))\n    fi\n  done\n  echo $product",
  "  echo \"$1\" | grep -o '[13579]' | tr -d '\\n' | awk '{print $1 * $2 * $3 * $4\
    \ * $5 * $6 * $7 * $8 * $9 * $10}'", "  local n=$1\n  local product=1\n  local\
    \ digit\n  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit %\
    \ 2)) -ne 0 ]; then\n      product=$((product * digit))\n    fi\n    n=$((n /\
    \ 10))\n  done\n  echo $product", "  local -i n=$1\n  local -i product=1\n  local\
    \ -i digit\n  while (( n > 0 )); do\n    digit=$(( n % 10 ))\n    (( digit % 2\
    \ == 1 )) && (( product *= digit ))\n    n=$(( n / 10 ))\n  done\n  echo $product",
  "  local -i sum=1\n  for ((i=0; i<${#1}; i++)); do\n    local -i digit=${1:i:1}\n\
    \    (( digit % 2 == 1 )) && (( sum *= digit ))\n  done\n  echo \"$sum\"", " \
    \ local -i n=$1\n  local -i product=1\n  local -i digit\n  while (( n > 0 ));\
    \ do\n    digit=$(( n % 10 ))\n    (( digit % 2 == 1 )) && (( product *= digit\
    \ ))\n    n=$(( n / 10 ))\n  done\n  echo $product", "  local result=1\n  for\
    \ (( i=0; i<${#1}; i++ )); do\n    local digit=${1:$i:1}\n    if (( digit % 2\
    \ == 1 )); then\n      result=$(( result * digit ))\n    fi\n  done\n  echo $result",
  "  local -i n=$1\n  local -i r=0\n  local -i d=0\n  while (( n > 0 )); do\n    d=$((\
    \ n % 10 ))\n    if (( d % 2 != 0 )); then\n      r=$(( r * 10 + d ))\n    fi\n\
    \    n=$(( n / 10 ))\n  done\n  echo $r", "  local result=1\n  local digit\n \
    \ for ((i=0; i<${#1}; i++)); do\n    digit=${1:$i:1}\n    if [[ $digit -eq 0 ]];\
    \ then\n      continue\n    elif [[ $((digit % 2)) -eq 1 ]]; then\n      result=$((result\
    \ * digit))\n    fi\n  done\n  echo $result", "  local result=1\n  for (( i=0;\
    \ i<${#1}; i++ )); do\n    local digit=${1:$i:1}\n    if (( digit % 2 == 1 ));\
    \ then\n      result=$(( result * digit ))\n    fi\n  done\n  echo $result", " \
    \ local number=$1\n  local product=1\n  local digit\n  while [ $number -gt 0 ];\
    \ do\n    digit=$((number % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n    \
    \  product=$((product * digit))\n    fi\n    number=$((number / 10))\n  done\n\
    \  echo $product", "  local result=1\n  for (( i=0; i<${#1}; i++ )); do\n    local\
    \ digit=\"${1:$i:1}\"\n    if (( digit % 2 )); then\n      result=$(( result *\
    \ digit ))\n    fi\n  done\n  echo \"$result\"", "  local n=$1\n  local result=1\n\
    \  while [[ $n -gt 0 ]]; do\n    local digit=$((n % 10))\n    if [[ $((digit %\
    \ 2)) -ne 0 ]]; then\n      result=$((result * digit))\n    fi\n    n=$((n / 10))\n\
    \  done\n  echo $result", "    local -i product=1\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local -i digit=${1:i:1}\n        if (( digit % 2 )); then\n\
    \            (( product *= digit ))\n        fi\n    done\n    echo $product",
  "  local -i n=$1\n  local -i product=1\n  local -i digit\n  while (( n > 0 )); do\n\
    \    digit=$(( n % 10 ))\n    (( digit % 2 == 1 )) && (( product *= digit ))\n\
    \    n=$(( n / 10 ))\n  done\n  echo $product", "  local sum=1\n  local i\n  for\
    \ (( i=0; i<${#1}; i++ )); do\n    local digit=${1:$i:1}\n    if (( digit % 2\
    \ == 1 )); then\n      (( sum *= digit ))\n    fi\n  done\n  echo $sum", "  local\
    \ number=$1\n  local result=1\n  local digit\n  while [ $number -gt 0 ]; do\n\
    \    digit=$((number % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      result=$((result\
    \ * digit))\n    fi\n    number=$((number / 10))\n  done\n  echo $result", " \
    \   local -i n=$1\n    local -i product=1\n    local -i digit\n    while (( n\
    \ > 0 )); do\n        digit=$(( n % 10 ))\n        (( digit % 2 == 1 )) && ((\
    \ product *= digit ))\n        n=$(( n / 10 ))\n    done\n    echo $product",
  "  local n=$1\n  local result=1\n  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n\
    \ % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      result=$((result * digit))\n\
    \    fi\n    n=$((n / 10))\n  done\n  echo $result", "  local -i sum=1\n  for\
    \ (( i=0; i<${#1}; i++ )); do\n    local -i digit=${1:i:1}\n    (( digit % 2 ==\
    \ 1 )) && (( sum *= digit ))\n  done\n  echo $sum", "  local -i sum=1\n  for ((\
    \ i=0; i<${#1}; i++ )); do\n    local -i digit=${1:i:1}\n    (( digit % 2 == 1\
    \ )) && (( sum *= digit ))\n  done\n  echo $sum", "  local -i sum=1\n  for ((\
    \ i=0; i<${#1}; i++ )); do\n    local -i digit=${1:i:1}\n    (( digit % 2 == 1\
    \ )) && (( sum *= digit ))\n  done\n  echo $sum", "  local -i n=$1\n  local -i\
    \ product=1\n  local -i digit\n  while (( n > 0 )); do\n    digit=$(( n % 10 ))\n\
    \    if (( digit % 2 == 1 )); then\n      product=$(( product * digit ))\n   \
    \ fi\n    n=$(( n / 10 ))\n  done\n  echo $product", "  local -i n=$1\n  local\
    \ -i result=1\n  local -i digit\n  while (( n > 0 )); do\n    digit=$(( n % 10\
    \ ))\n    if (( digit % 2 != 0 )); then\n      (( result *= digit ))\n    fi\n\
    \    (( n /= 10 ))\n  done\n  echo \"$result\"", "  local -i n=$1\n  local -i\
    \ product=1\n  local -i digit\n  while (( n > 0 )); do\n    digit=$(( n % 10 ))\n\
    \    (( digit % 2 == 1 )) && (( product *= digit ))\n    n=$(( n / 10 ))\n  done\n\
    \  echo \"$product\"", "    local n=$1\n    local result=1\n    while [ $n -gt\
    \ 0 ]; do\n        local digit=$((n % 10))\n        if [ $((digit % 2)) -ne 0\
    \ ]; then\n            result=$((result * digit))\n        fi\n        n=$((n\
    \ / 10))\n    done\n    echo $result", "    local n=$1\n    local product=1\n\
    \    while [[ $n -gt 0 ]]; do\n        local digit=$((n % 10))\n        if [[\
    \ $((digit % 2)) -ne 0 ]]; then\n            product=$((product * digit))\n  \
    \      fi\n        n=$((n / 10))\n    done\n    echo $product", "  local n=$1\n\
    \  local product=1\n  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n %\
    \ 10))\n    if [ $((digit % 2)) -eq 1 ]; then\n      product=$((product * digit))\n\
    \    fi\n    n=$((n / 10))\n  done\n  echo $product", "  local n=$1\n  local prod=1\n\
    \  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit\
    \ % 2)) -ne 0 ]; then\n      prod=$((prod * digit))\n    fi\n    n=$((n / 10))\n\
    \  done\n  echo $prod", "    local n=$1\n    local product=1\n    local digit\n\
    \    while [ $n -gt 0 ]; do\n        digit=$((n % 10))\n        if [ $((digit\
    \ % 2)) -ne 0 ]; then\n            product=$((product * digit))\n        fi\n\
    \        n=$((n / 10))\n    done\n    echo $product", "  local n=$1\n  local result=1\n\
    \  while [[ $n -gt 0 ]]; do\n    local digit=$((n % 10))\n    if [[ $((digit %\
    \ 2)) -ne 0 ]]; then\n      result=$((result * digit))\n    fi\n    n=$((n / 10))\n\
    \  done\n  echo $result", "    local n=$1\n    local product=1\n    local digit\n\
    \    while [ $n -gt 0 ]; do\n        digit=$((n % 10))\n        if [ $((digit\
    \ % 2)) -ne 0 ]; then\n            product=$((product * digit))\n        fi\n\
    \        n=$((n / 10))\n    done\n    echo $product", "  local n=$1\n  local product=1\n\
    \  while [ $n -gt 0 ]; do\n    local digit=$((n % 10))\n    if [ $((digit % 2))\
    \ -ne 0 ]; then\n      product=$((product * digit))\n    fi\n    n=$((n / 10))\n\
    \  done\n  echo $product", "  local -i sum=1\n  for (( i=0; i<${#1}; i++ )); do\n\
    \    local -i digit=${1:i:1}\n    (( digit % 2 )) && (( sum *= digit ))\n  done\n\
    \  echo $sum", "  local digits=$(echo $1 | sed 's/[02468]//g')\n  local product=1\n\
    \  for digit in $(echo $digits | grep -o .)\n  do\n    product=$((product * digit))\n\
    \  done\n  echo $product", "  local n=$1\n  local product=1\n  local digit\n \
    \ while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    n=$((n / 10))\n    if [ $((digit\
    \ % 2)) -ne 0 ]; then\n      product=$((product * digit))\n    fi\n  done\n  echo\
    \ $product", "  local -i sum=1\n  for ((i=0; i<${#1}; i++)); do\n    (( ${1:$i:1}\
    \ % 2 != 0 )) && (( sum *= ${1:$i:1} ))\n  done\n  echo $sum", "  local number=$1\n\
    \  local product=1\n  local digit\n  while [ $number -gt 0 ]; do\n    digit=$((number\
    \ % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      product=$((product * digit))\n\
    \    fi\n    number=$((number / 10))\n  done\n  echo $product", "  local n=\"\
    $1\"\n  local result=1\n  local digit\n  while [ \"$n\" -gt 0 ]; do\n    digit=$((\
    \ n % 10 ))\n    if [ \"$digit\" -gt 0 ] && [ \"$(( digit % 2 ))\" -eq 1 ]; then\n\
    \      result=$(( result * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo\
    \ \"$result\"", "    local -i n=$1\n    local -i product=1\n    local -i digit\n\
    \    while (( n > 0 )); do\n        digit=$(( n % 10 ))\n        if (( digit %\
    \ 2 != 0 )); then\n            product=$(( product * digit ))\n        fi\n  \
    \      n=$(( n / 10 ))\n    done\n    echo $product", "  local -i sum=1\n  for\
    \ (( i=0; i<${#1}; i++ )); do\n    (( ${1:$i:1} % 2 )) && (( sum *= ${1:$i:1}\
    \ ))\n  done\n  echo $sum", "  local -i n=$1\n  local -i product=1\n  local -i\
    \ digit\n  while (( n > 0 )); do\n    digit=n%10\n    (( n /= 10 ))\n    (( digit\
    \ % 2 == 1 )) && (( product *= digit ))\n  done\n  echo $product", "    local\
    \ n=$1\n    local product=1\n    local digit\n    while [ $n -gt 0 ]; do\n   \
    \     digit=$((n % 10))\n        if [ $((digit % 2)) -ne 0 ]; then\n         \
    \   product=$((product * digit))\n        fi\n        n=$((n / 10))\n    done\n\
    \    echo $product", "    local n=$1\n    local product=1\n    local digit\n \
    \   while [ $n -gt 0 ]; do\n        digit=$((n % 10))\n        if [ $((digit %\
    \ 2)) -ne 0 ]; then\n            product=$((product * digit))\n        fi\n  \
    \      n=$((n / 10))\n    done\n    echo $product", "  local n=$1\n  local result=1\n\
    \  while [ $n -gt 0 ]; do\n    local digit=$((n % 10))\n    if [ $((digit % 2))\
    \ -ne 0 ]; then\n      result=$((result * digit))\n    fi\n    n=$((n / 10))\n\
    \  done\n  echo $result", "  local -i n=$1\n  local -i product=1\n  while (( n\
    \ > 0 )); do\n    local -i digit=$(( n % 10 ))\n    if (( digit % 2 == 1 )); then\n\
    \      product *= digit\n    fi\n    n /= 10\n  done\n  echo $product", "  local\
    \ product=1\n  for (( i=0; i<${#1}; i++ )); do\n    local digit=${1:$i:1}\n  \
    \  if [[ $digit -eq 0 ]]; then\n      continue\n    elif [[ $(( digit % 2 )) -eq\
    \ 1 ]]; then\n      product=$(( product * digit ))\n    fi\n  done\n  echo $product",
  "  local n=$1\n  local product=1\n  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n\
    \ % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      product=$((product * digit))\n\
    \    fi\n    n=$((n / 10))\n  done\n  echo $product", "  local -i n=$1\n  local\
    \ -i product=1\n  local -i digit\n  while (( n > 0 )); do\n    digit=$(( n % 10\
    \ ))\n    if (( digit % 2 != 0 )); then\n      product=$(( product * digit ))\n\
    \    fi\n    n=$(( n / 10 ))\n  done\n  echo \"$product\"", "    local -i n=$1\n\
    \    local -i product=1\n    local -i digit\n    while (( n > 0 )); do\n     \
    \   digit=$(( n % 10 ))\n        if (( digit % 2 == 1 )); then\n            product=$((\
    \ product * digit ))\n        fi\n        n=$(( n / 10 ))\n    done\n    echo\
    \ $product", "  local -i n=$1\n  local -i prod=1\n  local -i digit\n  while ((\
    \ n > 0 )); do\n    digit=$(( n % 10 ))\n    if (( digit % 2 != 0 )); then\n \
    \     prod=$(( prod * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo $prod",
  "    local n=$1\n    local prod=1\n    local digit\n    while [ $n -gt 0 ]; do\n\
    \        digit=$((n % 10))\n        if [ $((digit % 2)) -ne 0 ]; then\n      \
    \      prod=$((prod * digit))\n        fi\n        n=$((n / 10))\n    done\n \
    \   echo $prod", "  local n=\"$1\"\n  local result=1\n  for (( i=0; i<${#n}; i++\
    \ )); do\n    local digit=\"${n:$i:1}\"\n    if [[ $(( digit % 2 )) -eq 1 ]];\
    \ then\n      result=$(( result * digit ))\n    fi\n  done\n  echo \"$result\"",
  "    local n=$1\n    local product=1\n    local digit\n    while [ $n -gt 0 ]; do\n\
    \        digit=$((n % 10))\n        if [ $((digit % 2)) -ne 0 ]; then\n      \
    \      product=$((product * digit))\n        fi\n        n=$((n / 10))\n    done\n\
    \    echo $product", "    local -i sum=1\n    local -i digit\n    for ((i=0; i<${#1};\
    \ i++)); do\n        digit=${1:i:1}\n        if ((digit % 2)); then\n        \
    \    ((sum *= digit))\n        fi\n    done\n    echo \"$sum\"", "  local result=1\n\
    \  local digit\n  for (( i=0; i<${#1}; i++ )); do\n    digit=\"${1:$i:1}\"\n \
    \   if (( digit % 2 == 1 )); then\n      (( result *= digit ))\n    fi\n  done\n\
    \  echo \"$result\"", "  local n=$1\n  local prod=1\n  local digit\n  while [\
    \ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n\
    \      prod=$((prod * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo $prod",
  "  local n=$1\n  local product=1\n  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n\
    \ % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      product=$((product * digit))\n\
    \    fi\n    n=$((n / 10))\n  done\n  echo $product", "  local n=$1\n  local product=1\n\
    \  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit\
    \ % 2)) -ne 0 ]; then\n      product=$((product * digit))\n    fi\n    n=$((n\
    \ / 10))\n  done\n  echo $product", "  local -i n=$1\n  local -i product=1\n \
    \ local -i digit\n  while (( n > 0 )); do\n    digit=$(( n % 10 ))\n    (( digit\
    \ % 2 == 1 )) && (( product *= digit ))\n    n=$(( n / 10 ))\n  done\n  echo $product",
  "    local -i n=$1\n    local -i product=1\n    local -i digit\n    while (( n >\
    \ 0 )); do\n        digit=$(( n % 10 ))\n        if (( digit % 2 == 1 )); then\n\
    \            product=$(( product * digit ))\n        fi\n        n=$(( n / 10\
    \ ))\n    done\n    echo $product", "    local n=$1\n    local result=1\n    local\
    \ digit\n    while [ $n -gt 0 ]; do\n        digit=$((n % 10))\n        if [ $((digit\
    \ % 2)) -ne 0 ]; then\n            result=$((result * digit))\n        fi\n  \
    \      n=$((n / 10))\n    done\n    echo $result", "  local -i sum=1\n  for ((\
    \ i=0; i<${#1}; i++ )); do\n    (( ${1:$i:1} % 2 )) && (( sum *= ${1:$i:1} ))\n\
    \  done\n  echo \"$sum\"", "    local n=$1\n    local product=1\n    local digit\n\
    \    while [ $n -gt 0 ]; do\n        digit=$((n % 10))\n        if [ $((digit\
    \ % 2)) -eq 1 ]; then\n            product=$((product * digit))\n        fi\n\
    \        n=$((n / 10))\n    done\n    echo $product", "    local n=$1\n    local\
    \ product=1\n    while [ $n -gt 0 ]; do\n        local digit=$((n % 10))\n   \
    \     if [ $((digit % 2)) -ne 0 ]; then\n            product=$((product * digit))\n\
    \        fi\n        n=$((n / 10))\n    done\n    echo $product", "  local n=$1\n\
    \  local product=1\n  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n %\
    \ 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      product=$((product * digit))\n\
    \    fi\n    n=$((n / 10))\n  done\n  echo $product", "  local -i n=$1\n  local\
    \ -i product=1\n  local -i digit\n  while (( n > 0 )); do\n    digit=$(( n % 10\
    \ ))\n    (( digit % 2 == 1 )) && (( product *= digit ))\n    n=$(( n / 10 ))\n\
    \  done\n  echo $product", "  local n=$1\n  local product=1\n  local digit\n \
    \ while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0\
    \ ]; then\n      product=$((product * digit))\n    fi\n    n=$((n / 10))\n  done\n\
    \  echo $product", "  local -i product=1\n  local -i digit\n  local -i n=$1\n\
    \  while (( n > 0 )); do\n    digit=$(( n % 10 ))\n    if (( digit % 2 )); then\n\
    \      (( product *= digit ))\n    fi\n    (( n /= 10 ))\n  done\n  echo $product",
  "  local product=1\n  local digit\n  for (( i=0; i<${#1}; i++ )); do\n    digit=${1:$i:1}\n\
    \    if (( digit % 2 == 1 )); then\n      (( product *= digit ))\n    fi\n  done\n\
    \  echo $product", "  local n=$1\n  local result=1\n  local digit\n  while [ $n\
    \ -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n\
    \      result=$((result * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo $result",
  "  local n=$1\n  local product=1\n  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n\
    \ % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      product=$((product * digit))\n\
    \    fi\n    n=$((n / 10))\n  done\n  echo $product", "  local n=$1\n  local product=1\n\
    \  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit\
    \ % 2)) -ne 0 ]; then\n      product=$((product * digit))\n    fi\n    n=$((n\
    \ / 10))\n  done\n  echo $product", "  local result=1\n  for (( i=0; i<${#1};\
    \ i++ )); do\n    local digit=\"${1:$i:1}\"\n    if [[ $digit -gt 0 ]] && [[ $((\
    \ digit % 2 )) -ne 0 ]]; then\n      result=$(( result * digit ))\n    fi\n  done\n\
    \  echo $result", "  local n=$1\n  local product=1\n  local digit\n  while [ $n\
    \ -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n\
    \      product=$((product * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo\
    \ $product", "  local -i sum=1\n  for (( i=0; i<${#1}; i++ )); do\n    (( ${1:$i:1}\
    \ % 2 != 0 )) && (( sum *= ${1:$i:1} ))\n  done\n  echo $sum", "  local n=$1\n\
    \  local product=1\n  local digit\n  while (( n > 0 )); do\n    digit=$(( n %\
    \ 10 ))\n    if (( digit % 2 == 1 )); then\n      product=$(( product * digit\
    \ ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo $product", "    local result=1\n\
    \    local digit\n    for digit in $(echo $1 | grep -o .); do\n        if [[ $((digit\
    \ % 2)) -eq 1 ]]; then\n            result=$((result * digit))\n        fi\n \
    \   done\n    echo $result", "  local -i n=$1\n  local -i product=1\n  local -i\
    \ digit\n  while (( n > 0 )); do\n    digit=$(( n % 10 ))\n    (( digit % 2 ==\
    \ 1 )) && (( product *= digit ))\n    n=$(( n / 10 ))\n  done\n  echo $product",
  "    local n=$1\n    local result=1\n    local digit\n    while [ $n -gt 0 ]; do\n\
    \        digit=$((n % 10))\n        if [ $((digit % 2)) -ne 0 ]; then\n      \
    \      result=$((result * digit))\n        fi\n        n=$((n / 10))\n    done\n\
    \    echo $result", "  local -i n=$1\n  local -i product=1\n  local -i digit\n\
    \  while (( n > 0 )); do\n    digit=$(( n % 10 ))\n    if (( digit % 2 == 1 ));\
    \ then\n      product=$(( product * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n\
    \  echo $product", "    local n=$1\n    local product=1\n    local digit\n   \
    \ while [ $n -gt 0 ]; do\n        digit=$((n % 10))\n        if [ $((digit % 2))\
    \ -ne 0 ]; then\n            product=$((product * digit))\n        fi\n      \
    \  n=$((n / 10))\n    done\n    echo $product", "    local -i product=1\n    local\
    \ -i number=$1\n    local -i digit\n    while [[ $number -gt 0 ]]; do\n      \
    \  digit=$((number % 10))\n        if [[ $((digit % 2)) -ne 0 ]]; then\n     \
    \       product=$((product * digit))\n        fi\n        number=$((number / 10))\n\
    \    done\n    echo $product", "  local result=1\n  for (( i=0; i<${#1}; i++ ));\
    \ do\n    local digit=${1:$i:1}\n    if [[ $digit -eq 0 ]]; then\n      continue\n\
    \    elif [[ $(( digit % 2 )) -eq 1 ]]; then\n      result=$(( result * digit\
    \ ))\n    fi\n  done\n  echo $result", "  local n=$1\n  local product=1\n  while\
    \ [ $n -gt 0 ]; do\n    local digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0\
    \ ]; then\n      product=$((product * digit))\n    fi\n    n=$((n / 10))\n  done\n\
    \  echo $product", "  local -i sum=1\n  local -i digit\n  for (( i=0; i<${#1};\
    \ i++ )); do\n    digit=${1:i:1}\n    (( digit % 2 )) && (( sum *= digit ))\n\
    \  done\n  echo $sum", "  local -i n=$1\n  local -i product=1\n  local -i digit\n\
    \  while (( n > 0 )); do\n    digit=$(( n % 10 ))\n    (( digit % 2 == 1 )) &&\
    \ (( product *= digit ))\n    n=$(( n / 10 ))\n  done\n  echo $product", "   \
    \ local -i n=$1\n    local -i product=1\n    local -i digit\n    while (( n >\
    \ 0 )); do\n        digit=$(( n % 10 ))\n        if (( digit % 2 == 1 )); then\n\
    \            product=$(( product * digit ))\n        fi\n        n=$(( n / 10\
    \ ))\n    done\n    echo $product", "  local -i n=$1\n  local -i product=1\n \
    \ local -i digit\n  while (( n > 0 )); do\n    digit=$(( n % 10 ))\n    (( digit\
    \ % 2 )) && (( product *= digit ))\n    n=$(( n / 10 ))\n  done\n  echo $product",
  "  local result=1\n  for (( i=0; i<${#1}; i++ )); do\n    local digit=\"${1:$i:1}\"\
    \n    if [ $(( digit % 2 )) -eq 1 ]; then\n      result=$(( result * digit ))\n\
    \    fi\n  done\n  echo $result", "  local -i n=$1\n  local -i product=1\n  local\
    \ -i digit\n  while (( n > 0 )); do\n    digit=$(( n % 10 ))\n    (( digit % 2\
    \ == 1 )) && (( product *= digit ))\n    n=$(( n / 10 ))\n  done\n  echo $product",
  "  local n=$1\n  local result=1\n  while [ $n -gt 0 ]; do\n    local digit=$((n\
    \ % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      result=$((result * digit))\n\
    \    fi\n    n=$((n / 10))\n  done\n  echo $result", "  local n=$1\n  local product=1\n\
    \  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit\
    \ % 2)) -eq 1 ]; then\n      product=$((product * digit))\n    fi\n    n=$((n\
    \ / 10))\n  done\n  echo $product", "  local result=1\n  local digit\n  for ((\
    \ i=0; i<${#1}; i++ )); do\n    digit=${1:$i:1}\n    if [[ $digit -eq 0 ]]; then\n\
    \      continue\n    elif [[ $(( digit % 2 )) -eq 1 ]]; then\n      result=$((\
    \ result * digit ))\n    fi\n  done\n  echo $result", "  local n=$1\n  local product=1\n\
    \  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit\
    \ % 2)) -ne 0 ]; then\n      product=$((product * digit))\n    fi\n    n=$((n\
    \ / 10))\n  done\n  echo $product", "  local result=1\n  for (( i=0; i<${#1};\
    \ i++ )); do\n    local digit=\"${1:$i:1}\"\n    if (( digit % 2 == 1 )); then\n\
    \      (( result *= digit ))\n    fi\n  done\n  echo \"$result\"", "  # TODO:\
    \ Implement this function\n  echo \"0\"", "  local result=1\n  for (( i=0; i<${#1};\
    \ i++ )); do\n    local digit=${1:$i:1}\n    if (( digit % 2 )); then\n      ((\
    \ result *= digit ))\n    fi\n  done\n  echo $result", "  local -i sum=1\n  for\
    \ (( i=0; i<${#1}; i++ )); do\n    local -i digit=${1:i:1}\n    (( digit % 2 ==\
    \ 1 )) && (( sum *= digit ))\n  done\n  echo $sum", "  local -i n=$1\n  local\
    \ -i sum=0\n  local -i digit=0\n  local -i product=1\n  while (( n > 0 )); do\n\
    \    digit=$(( n % 10 ))\n    if (( digit % 2 != 0 )); then\n      product=$((\
    \ product * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo $product", " \
    \   local n=$1\n    local result=1\n    local digit\n    while [ $n -gt 0 ]; do\n\
    \        digit=$((n % 10))\n        if [ $((digit % 2)) -ne 0 ]; then\n      \
    \      result=$((result * digit))\n        fi\n        n=$((n / 10))\n    done\n\
    \    echo $result", "  local -i sum=1\n  for (( i=0; i<${#1}; i++ )); do\n   \
    \ local -i digit=${1:i:1}\n    (( digit % 2 )) && (( sum *= digit ))\n  done\n\
    \  echo $sum", "  local -i n=$1\n  local -i product=1\n  local -i digit\n  while\
    \ (( n > 0 )); do\n    digit=$(( n % 10 ))\n    (( digit % 2 == 1 )) && (( product\
    \ *= digit ))\n    n=$(( n / 10 ))\n  done\n  echo $product", "  local -i n=$1\n\
    \  local -i product=1\n  local -i digit\n  while [ $n -gt 0 ]; do\n    digit=$((\
    \ n % 10 ))\n    if [ $(( digit % 2 )) -eq 1 ]; then\n      product=$(( product\
    \ * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo $product", "  local\
    \ -i sum=1\n  for (( i=0; i<${#1}; i++ )); do\n    local -i digit=${1:i:1}\n \
    \   (( digit % 2 == 1 )) && (( sum *= digit ))\n  done\n  echo $sum", "    local\
    \ n=$1\n    local product=1\n    while [ $n -gt 0 ]; do\n        local digit=$((n\
    \ % 10))\n        if [ $((digit % 2)) -ne 0 ]; then\n            product=$((product\
    \ * digit))\n        fi\n        n=$((n / 10))\n    done\n    echo $product",
  "    local -i sum=1\n    for (( i=0; i<${#1}; i++ )); do\n        local -i digit=${1:i:1}\n\
    \        (( digit % 2 == 1 )) && (( sum *= digit ))\n    done\n    echo \"$sum\"",
  "  local result=1\n  for (( i=0; i<${#1}; i++ )); do\n    local digit=${1:$i:1}\n\
    \    if (( digit % 2 == 1 )); then\n      result=$(( result * digit ))\n    fi\n\
    \  done\n  echo $result", "  local n=$1\n  local product=1\n  local digit\n  while\
    \ [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit % 2)) -eq 1 ]; then\n\
    \      product=$((product * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo\
    \ $product", "  local -i sum=1\n  for ((i=0; i<${#1}; i++)); do\n    local -i\
    \ digit=${1:i:1}\n    (( digit % 2 != 0 )) && (( sum *= digit ))\n  done\n  echo\
    \ $sum", "  local odd_digits=()\n  for (( i=0; i<${#1}; i++ )); do\n    local\
    \ digit=\"${1:$i:1}\"\n    if [[ $(( digit % 2 )) -eq 1 ]]; then\n      odd_digits+=($digit)\n\
    \    fi\n  done\n  if [[ ${#odd_digits[@]} -eq 0 ]]; then\n    echo 0\n  else\n\
    \    echo \"${odd_digits[@]}\" | tr -d ' ' | awk '{for(i=1;i<=NF;i++)a*=$i}END{print\
    \ a}'\n  fi", "  local result=1\n  for ((i=0; i<${#1}; i++)); do\n    local digit=\"\
    ${1:$i:1}\"\n    if [[ $((digit % 2)) -eq 1 ]]; then\n      result=$((result *\
    \ digit))\n    fi\n  done\n  echo $result", "  local n=$1\n  local result=1\n\
    \  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit\
    \ % 2)) -ne 0 ]; then\n      result=$((result * digit))\n    fi\n    n=$((n /\
    \ 10))\n  done\n  echo $result", "  local result=1\n  for (( i=0; i<${#1}; i++\
    \ )); do\n    local digit=${1:$i:1}\n    if (( digit % 2 )); then\n      (( result\
    \ *= digit ))\n    fi\n  done\n  echo $result", "  local -i sum=1\n  for (( i=0;\
    \ i<${#1}; i++ )); do\n    local -i digit=${1:i:1}\n    (( digit % 2 == 1 )) &&\
    \ (( sum *= digit ))\n  done\n  echo $sum", "  local -i n=$1\n  local -i product=1\n\
    \  local -i digit\n  while (( n > 0 )); do\n    digit=$(( n % 10 ))\n    if ((\
    \ digit % 2 != 0 )); then\n      product=$(( product * digit ))\n    fi\n    n=$((\
    \ n / 10 ))\n  done\n  echo $product", "  local result=1\n  for (( i=0; i<${#1};\
    \ i++ )); do\n    local digit=${1:$i:1}\n    if (( digit % 2 == 1 )); then\n \
    \     result=$(( result * digit ))\n    fi\n  done\n  echo $result", "  local\
    \ -i n=$1\n  local -i product=1\n  local -i digit\n  while (( n > 0 )); do\n \
    \   digit=$(( n % 10 ))\n    (( digit % 2 == 1 )) && (( product *= digit ))\n\
    \    n=$(( n / 10 ))\n  done\n  echo $product", "  local -i n=$1\n  local -i product=1\n\
    \  local -i digit\n  while (( n > 0 )); do\n    digit=$(( n % 10 ))\n    (( digit\
    \ % 2 )) && (( product *= digit ))\n    n=$(( n / 10 ))\n  done\n  echo \"$product\"",
  "  local n=$1\n  local res=1\n  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n\
    \ % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      res=$((res * digit))\n\
    \    fi\n    n=$((n / 10))\n  done\n  echo $res", "  local -i sum=1\n  for ((\
    \ i=0; i<${#1}; i++ )); do\n    local -i digit=${1:i:1}\n    (( digit % 2 )) &&\
    \ (( sum *= digit ))\n  done\n  echo \"$sum\"", "    local -i sum=1\n    local\
    \ -i digit\n    local -i num=$1\n    while (( num > 0 )); do\n        digit=$((\
    \ num % 10 ))\n        (( digit % 2 )) && (( sum *= digit ))\n        num=$((\
    \ num / 10 ))\n    done\n    echo $sum", "    local -i n=$1\n    local -i product=1\n\
    \    local -i digit\n    while (( n > 0 )); do\n        digit=$(( n % 10 ))\n\
    \        (( digit % 2 == 1 )) && (( product *= digit ))\n        n=$(( n / 10\
    \ ))\n    done\n    echo \"$product\"", "  local n=$1\n  local result=1\n  local\
    \ digit\n  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit %\
    \ 2)) -ne 0 ]; then\n      result=$((result * digit))\n    fi\n    n=$((n / 10))\n\
    \  done\n  echo $result", "  local -i n=$1\n  local -i product=1\n  local -i digit\n\
    \  while ((n > 0)); do\n    digit=$((n % 10))\n    ((digit % 2 == 1)) && ((product\
    \ *= digit))\n    n=$((n / 10))\n  done\n  echo $product", "  local -i n=$1\n\
    \  local -i prod=1\n  local -i digit\n  while (( n > 0 )); do\n    digit=$(( n\
    \ % 10 ))\n    if (( digit % 2 == 1 )); then\n      prod=$(( prod * digit ))\n\
    \    fi\n    n=$(( n / 10 ))\n  done\n  echo $prod", "  local n=$1\n  local product=1\n\
    \  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit\
    \ % 2)) -ne 0 ]; then\n      product=$((product * digit))\n    fi\n    n=$((n\
    \ / 10))\n  done\n  echo $product", "  if [[ $1 =~ ^[0-9]+$ ]]; then\n    local\
    \ result=1\n    for (( i=0; i<${#1}; i++ )); do\n      local digit=${1:$i:1}\n\
    \      if [[ $digit =~ ^[13579]+$ ]]; then\n        result=$((result * digit))\n\
    \      fi\n    done\n    echo $result\n  else\n    echo \"Invalid input\"\n  fi",
  "  local result=1\n  local i=0\n  while [ $i -lt ${#1} ]; do\n    local digit=${1:$i:1}\n\
    \    if [ $((digit % 2)) -ne 0 ]; then\n      result=$((result * digit))\n   \
    \ fi\n    i=$((i + 1))\n  done\n  echo $result", "  local -i sum=1\n  for ((i=0;\
    \ i<${#1}; i++)); do\n    (( ${1:$i:1} % 2 == 1 )) && (( sum *= ${1:$i:1} ))\n\
    \  done\n  echo $sum", "  local n=$1\n  local product=1\n  while [ $n -gt 0 ];\
    \ do\n    local digit=$(( n % 10 ))\n    if [ $(( digit % 2 )) -ne 0 ]; then\n\
    \      product=$(( product * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n \
    \ echo $product", "  local -i sum=1\n  for (( i=0; i<${#1}; i++ )); do\n    local\
    \ -i digit=${1:i:1}\n    (( digit % 2 )) && (( sum *= digit ))\n  done\n  echo\
    \ $sum", "    local -i sum=1\n    for (( i=0; i<${#1}; i++ )); do\n        local\
    \ -i digit=${1:i:1}\n        (( digit % 2 )) && (( sum *= digit ))\n    done\n\
    \    echo \"$sum\"", "  local n=$1\n  local product=1\n  local digit\n  while\
    \ [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n\
    \      product=$((product * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo\
    \ $product", "  local -i sum=1\n  local -i i=0\n  local -i len=${#1}\n  while\
    \ (( i < len )); do\n    local -i digit=${1:i:1}\n    (( digit % 2 == 1 )) &&\
    \ (( sum *= digit ))\n    (( i++ ))\n  done\n  echo $sum", "  local -i sum=1\n\
    \  for (( i=0; i<${#1}; i++ )); do\n    local -i digit=${1:i:1}\n    if (( digit\
    \ % 2 )); then\n      (( sum *= digit ))\n    fi\n  done\n  echo $sum", "    local\
    \ n=$1\n    local result=1\n    while [ $n -gt 0 ]; do\n        local digit=$((n\
    \ % 10))\n        if [ $((digit % 2)) -ne 0 ]; then\n            result=$((result\
    \ * digit))\n        fi\n        n=$((n / 10))\n    done\n    echo $result", " \
    \ local n=$1\n  local product=1\n  local digit\n  while [ $n -gt 0 ]; do\n   \
    \ digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      product=$((product\
    \ * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo $product", "  local -i\
    \ sum=1\n  local -i digit\n  for (( i=0; i<${#1}; i++ )); do\n    digit=${1:i:1}\n\
    \    (( digit % 2 )) && (( sum *= digit ))\n  done\n  echo $sum", "  local n=$1\n\
    \  local product=1\n  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n %\
    \ 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      product=$((product * digit))\n\
    \    fi\n    n=$((n / 10))\n  done\n  echo $product", "  local -i n=$1\n  local\
    \ -i r=0\n  local -i d\n  while (( n > 0 )); do\n    d=$(( n % 10 ))\n    (( d\
    \ % 2 )) && (( r *= 10 )) && (( r += d ))\n    (( n /= 10 ))\n  done\n  echo $r",
  "    local -i sum=1\n    local -i digit\n    for ((i=0; i<${#1}; i++)); do\n   \
    \     digit=${1:i:1}\n        (( digit % 2 == 1 )) && (( sum *= digit ))\n   \
    \ done\n    echo $sum", "  local n=$1\n  local product=1\n  local digit\n  while\
    \ [[ $n -gt 0 ]]; do\n    digit=$(( n % 10 ))\n    if [[ $(( digit % 2 )) -eq\
    \ 1 ]]; then\n      product=$(( product * digit ))\n    fi\n    n=$(( n / 10 ))\n\
    \  done\n  echo $product", "  local -i n=$1\n  local -i product=1\n  local -i\
    \ digit\n  while (( n > 0 )); do\n    digit=$(( n % 10 ))\n    if (( digit % 2\
    \ == 1 )); then\n      product=$(( product * digit ))\n    fi\n    n=$(( n / 10\
    \ ))\n  done\n  echo $product", "  local -i sum=1\n  local -i num=$1\n  local\
    \ -i digit\n  while (( num > 0 )); do\n    digit=$(( num % 10 ))\n    (( digit\
    \ % 2 == 1 )) && (( sum *= digit ))\n    num=$(( num / 10 ))\n  done\n  echo $sum",
  "    local -i n=$1\n    local -i product=1\n    local -i digit\n    while (( n >\
    \ 0 )); do\n        digit=$(( n % 10 ))\n        (( digit % 2 == 1 )) && (( product\
    \ *= digit ))\n        n=$(( n / 10 ))\n    done\n    echo $product", "  local\
    \ -i sum=1\n  for (( i=0; i<${#1}; i++ )); do\n    local -i digit=${1:i:1}\n \
    \   (( digit % 2 )) && (( sum *= digit ))\n  done\n  echo \"$sum\"", "    local\
    \ -i n=$1\n    local -i product=1\n    while (( n > 0 )); do\n        local -i\
    \ digit=$(( n % 10 ))\n        if (( digit % 2 == 1 )); then\n            product=$((\
    \ product * digit ))\n        fi\n        n=$(( n / 10 ))\n    done\n    echo\
    \ $product", "    local -i sum=1\n    for (( i=0; i<${#1}; i++ )); do\n      \
    \  local -i digit=${1:i:1}\n        (( digit % 2 == 1 )) && (( sum *= digit ))\n\
    \    done\n    echo $sum", "    local n=$1\n    local product=1\n    while [ $n\
    \ -gt 0 ]; do\n        local digit=$((n % 10))\n        if [ $((digit % 2)) -ne\
    \ 0 ]; then\n            product=$((product * digit))\n        fi\n        n=$((n\
    \ / 10))\n    done\n    echo $product", "  local number=$1\n  local product=1\n\
    \  local digit\n  for (( i=0; i<${#number}; i++ )); do\n    digit=${number:$i:1}\n\
    \    if [[ $(( digit % 2 )) -eq 1 ]]; then\n      product=$(( product * digit\
    \ ))\n    fi\n  done\n  echo $product", "    local -i sum=1\n    local -i i=0\n\
    \    local -i len=${#1}\n    local -i digit=0\n    for (( i=0; i<len; i++ ));\
    \ do\n        digit=${1:i:1}\n        if (( digit % 2 == 1 )); then\n        \
    \    (( sum *= digit ))\n        fi\n    done\n    echo $sum", "  local -i sum=1\n\
    \  local -i i=0\n  local -i len=${#1}\n  while [ $i -lt $len ]; do\n    local\
    \ -i digit=$((${1:$i:1}))\n    if [ $((digit % 2)) -ne 0 ]; then\n      sum=$((sum\
    \ * digit))\n    fi\n    i=$((i + 1))\n  done\n  echo $sum", "  local -i sum=1\n\
    \  for (( i=0; i<${#1}; i++ )); do\n    local -i digit=\"${1:$i:1}\"\n    (( digit\
    \ % 2 == 1 )) && (( sum *= digit ))\n  done\n  echo \"$sum\"", "  local -i sum=1\n\
    \  for (( i=0; i<${#1}; i++ )); do\n    (( ${1:$i:1} % 2 )) && (( sum *= ${1:$i:1}\
    \ ))\n  done\n  echo $sum", "  local -i sum=1\n  for ((i=0; i<${#1}; i++)); do\n\
    \    local -i digit=${1:i:1}\n    (( digit % 2 == 1 )) && (( sum *= digit ))\n\
    \  done\n  echo $sum", "  local result=1\n  for (( i=0; i<${#1}; i++ )); do\n\
    \    local digit=${1:$i:1}\n    if (( digit % 2 != 0 )); then\n      result=$((\
    \ result * digit ))\n    fi\n  done\n  echo $result", "  local n=\"$1\"\n  local\
    \ result=1\n  local digit\n  for (( i=0; i<${#n}; i++ )); do\n    digit=\"${n:$i:1}\"\
    \n    if [[ $((digit % 2)) -eq 1 ]]; then\n      result=$((result * digit))\n\
    \    fi\n  done\n  echo \"$result\"", "  local -i n=$1\n  local -i product=1\n\
    \  while (( n > 0 )); do\n    local -i digit=$(( n % 10 ))\n    if (( digit %\
    \ 2 == 1 )); then\n      product *= digit\n    fi\n    n /= 10\n  done\n  echo\
    \ $product", "  local -i n=$1\n  local -i product=1\n  while (( n > 0 )); do\n\
    \    local -i digit=$(( n % 10 ))\n    (( digit % 2 )) && (( product *= digit\
    \ ))\n    (( n /= 10 ))\n  done\n  echo $product", "  if [[ $1 =~ ^[0-9]+$ ]];\
    \ then\n    local product=1\n    for (( i=0; i<${#1}; i++ )); do\n      local\
    \ digit=${1:$i:1}\n      if [[ $digit =~ ^[13579]+$ ]]; then\n        product=$((\
    \ product * digit ))\n      fi\n    done\n    echo $product\n  else\n    echo\
    \ \"Error: argument must be an integer\"\n  fi", "    local n=$1\n    local result=1\n\
    \    local digit\n    while [ $n -gt 0 ]; do\n        digit=$((n % 10))\n    \
    \    if [ $((digit % 2)) -ne 0 ]; then\n            result=$((result * digit))\n\
    \        fi\n        n=$((n / 10))\n    done\n    echo $result", "  local n=$1\n\
    \  local prod=1\n  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n\
    \    if [ $((digit % 2)) -ne 0 ]; then\n      prod=$((prod * digit))\n    fi\n\
    \    n=$((n / 10))\n  done\n  echo $prod", "  local -i sum=1\n  local -i digit\n\
    \  for (( i=0; i<${#1}; i++ )); do\n    digit=${1:i:1}\n    (( digit % 2 == 1\
    \ )) && (( sum *= digit ))\n  done\n  echo \"$sum\"", "    local -i n=$1\n   \
    \ local -i product=1\n    local -i digit\n    while (( n > 0 )); do\n        digit=$((\
    \ n % 10 ))\n        (( digit % 2 == 1 )) && (( product *= digit ))\n        n=$((\
    \ n / 10 ))\n    done\n    echo $product", "    local -i n=$1\n    local -i product=1\n\
    \    local -i digit\n    while [ $n -gt 0 ]; do\n        digit=$((n % 10))\n \
    \       if [ $((digit % 2)) -ne 0 ]; then\n            product=$((product * digit))\n\
    \        fi\n        n=$((n / 10))\n    done\n    echo $product", "  local n=$1\n\
    \  local result=1\n  local digit\n  while [[ $n -gt 0 ]]; do\n    digit=$((n %\
    \ 10))\n    if [[ $((digit % 2)) -eq 1 ]]; then\n      result=$((result * digit))\n\
    \    fi\n    n=$((n / 10))\n  done\n  echo $result", "  local n=$1\n  local result=1\n\
    \  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit\
    \ % 2)) -ne 0 ]; then\n      result=$((result * digit))\n    fi\n    n=$((n /\
    \ 10))\n  done\n  echo $result", "  local -i n=$1\n  local -i product=1\n  local\
    \ -i digit\n  while (( n > 0 )); do\n    digit=$(( n % 10 ))\n    (( digit % 2\
    \ == 1 )) && (( product *= digit ))\n    n=$(( n / 10 ))\n  done\n  echo $product",
  "  local sum=1\n  local digit\n  for (( i=0; i<${#1}; i++ )); do\n    digit=${1:$i:1}\n\
    \    if [[ $digit -gt 0 ]] && [[ $(( digit % 2 )) -eq 1 ]]; then\n      sum=$((\
    \ sum * digit ))\n    fi\n  done\n  echo $sum", "  local -i sum=1\n  for (( i=0;\
    \ i<${#1}; i++ )); do\n    local -i digit=${1:i:1}\n    (( digit % 2 )) && ((\
    \ sum *= digit ))\n  done\n  echo \"$sum\"", "    local n=$1\n    local product=1\n\
    \    local digit\n    while [ $n -gt 0 ]; do\n        digit=$((n % 10))\n    \
    \    if [ $((digit % 2)) -ne 0 ]; then\n            product=$((product * digit))\n\
    \        fi\n        n=$((n / 10))\n    done\n    echo $product", "  local -i\
    \ sum=1\n  for (( i=0; i<${#1}; i++ )); do\n    local -i digit=${1:i:1}\n    ((\
    \ digit % 2 )) && (( sum *= digit ))\n  done\n  echo \"$sum\"", "    local n=$1\n\
    \    local product=1\n    local digit\n    while [ $n -gt 0 ]; do\n        digit=$((n\
    \ % 10))\n        if [ $((digit % 2)) -ne 0 ]; then\n            product=$((product\
    \ * digit))\n        fi\n        n=$((n / 10))\n    done\n    echo $product",
  "  local -i sum=1\n  local -i i=0\n  local -i len=${#1}\n  local -i num=0\n  local\
    \ -i digit=0\n  for ((i=0; i<len; i++)); do\n    digit=${1:i:1}\n    if ((digit\
    \ % 2 == 1)); then\n      ((sum *= digit))\n    fi\n  done\n  echo \"$sum\"",
  "  local -i sum=1\n  for (( i=0; i<${#1}; i++ )); do\n    local -i digit=${1:i:1}\n\
    \    (( digit % 2 )) && (( sum *= digit ))\n  done\n  echo $sum"]
stop_tokens:
- "\n}"

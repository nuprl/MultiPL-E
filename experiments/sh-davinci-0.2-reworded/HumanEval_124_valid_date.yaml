name: HumanEval_124_valid_date
language: sh
prompt: "#!/bin/bash\n# You have to write a function which validates a given date\
  \ string and\n# returns true if the date is valid otherwise false.\n# The date is\
  \ valid if all of the following rules are satisfied:\n# 1. The date string is not\
  \ empty.\n# 2. The number of days is not less than 1 or higher than 31 days for\
  \ months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than\
  \ 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
  \ than 29 for the month 2.\n# 3. The months should not be less than 1 or higher\
  \ than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n# >>> $(valid_date\
  \ \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\")\n# \"false\"\n\
  # >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date \"06-04-2020\"\
  )\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\n#\n# $1 is a string\n\
  valid_date() {\n"
tests: "}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n   \
  \ [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
  ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
  \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
  \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"\
  false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
  \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
  \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\"\
  ) = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate\
  \ \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n\
  \    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
completions: ["  # Write your code here\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n", "  # Write your code here\n  if [ -z \"$1\" ]; then\n\
    \    echo \"false\"\n    return\n  fi\n  local date=$1\n  local month=${date:0:2}\n\
    \  local day=${date:3:2}\n  local year=${date:6:4}\n  local month_31=\"01 03 05\
    \ 07 08 10 12\"\n  local month_30=\"04 06 09 11\"\n  local month_29=\"02\"\n \
    \ if [[ $month =~ [0-9][0-9] ]]; then\n    if [[ $day =~ [0-9][0-9] ]]; then\n\
    \      if [[ $year =~ [0-9][0-9][0-9][0-9] ]]; then\n        if [[ $month -gt\
    \ 0 && $month -lt 13 ]]; then\n          if [[ $month_31 =~ $month ]]; then\n\
    \            if [[ $day -gt 0 && $day -lt 32 ]]; then\n              echo \"true\"\
    \n              return\n            fi\n          elif [[ $month_30 =~ $month\
    \ ]]; then\n            if [[ $day -gt 0 && $day -lt 31 ]]; then\n           \
    \   echo \"true\"\n              return\n            fi\n          elif [[ $month_29\
    \ =~ $month ]]; then\n            if [[ $day -gt 0 && $day -lt 30 ]]; then\n \
    \             echo \"true\"\n              return\n            fi\n          fi\n\
    \        fi\n      fi\n    fi\n  fi\n  echo \"false\"", "  # Write your code here\n\
    \  # You can use the following command to check if the date is valid:\n  # date\
    \ -d \"$1\" +%F > /dev/null 2>&1\n  # It returns 0 if the date is valid and 1\
    \ if the date is invalid.\n  # You can use the following command to get the number\
    \ of days in a month:\n  # date -d \"$1\" +%d\n  # You can use the following command\
    \ to get the month number:\n  # date -d \"$1\" +%m\n  # You can use the following\
    \ command to get the year:\n  # date -d \"$1\" +%Y\n  # You can use the following\
    \ command to check if the date is in the format mm-dd-yyyy:\n  # [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]\n  # It returns 0 if the date is in the format mm-dd-yyyy and 1 if the date\
    \ is not in the format mm-dd-yyyy.\n  # You can use the following command to check\
    \ if the date string is empty:\n  # [[ -z $1 ]]\n  # It returns 0 if the date\
    \ string is not empty and 1 if the date string is empty.\n  # You can use the\
    \ following command to check if the number of days is not less than 1 or higher\
    \ than 31 days for months 1,3,5,7,8,10,12:\n  # [[ $2 -ge 1 && $2 -le 31 ]]\n\
    \  # It returns 0 if the number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12 and 1 if the number of days is less than 1 or higher\
    \ than 31 days for months 1,3,5,7,8,10,12.\n  # You can use the following command\
    \ to check if the number of days is not less than 1 or higher than 30 days for\
    \ months 4,6,9,11:\n  # [[ $2 -ge 1 && $2 -le 30 ]]\n  # It returns 0 if the number\
    \ of days is not less than 1 or higher than 30 days for months 4,6,9,11 and 1\
    \ if the number of days", "  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]];\
    \ then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi", "  if\
    \ [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n    local month=${BASH_REMATCH[1]}\n\
    \    local day=${BASH_REMATCH[2]}\n    local year=${BASH_REMATCH[3]}\n    if [[\
    \ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 || $month -eq\
    \ 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month\
    \ -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n        \
    \  echo \"true\"\n        else\n          echo \"false\"\n        fi\n      elif\
    \ [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n\
    \        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\n \
    \       else\n          echo \"false\"\n        fi\n      elif [[ $month -eq 2\
    \ ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo \"\
    true\"\n        else\n          echo \"false\"\n        fi\n      fi\n    else\n\
    \      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi", "  if [[ $1\
    \ =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n    month=${BASH_REMATCH[1]}\n\
    \    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n    if [[ $month -gt\
    \ 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 || $month -eq 3 || $month\
    \ -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day\
    \ -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\n        else\n     \
    \     echo \"false\"\n        fi\n      elif [[ $month -eq 2 ]]; then\n      \
    \  if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo \"true\"\n       \
    \ else\n          echo \"false\"\n        fi\n      fi\n    else\n      echo \"\
    false\"\n    fi\n  else\n    echo \"false\"\n  fi", "  # Write your code here\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n", "  if [[\
    \ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n    local month=$(echo $1 | cut\
    \ -d- -f1)\n    local day=$(echo $1 | cut -d- -f2)\n    local year=$(echo $1 |\
    \ cut -d- -f3)\n    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[\
    \ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8\
    \ || $month -eq 10 || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day\
    \ -lt 32 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month\
    \ -eq 11 ]]; then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n        \
    \  echo \"true\"\n        else\n          echo \"false\"\n        fi\n      elif\
    \ [[ $month -eq 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      fi\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n\
    \  fi", "  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n    local\
    \ month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n    local year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -ge 1 && $month -le 12 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -ge 1 && $day -le 31 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -ge 1 && $day -le 30 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -ge 1 && $day -le 29 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi", "  if\
    \ [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n    month=${BASH_REMATCH[1]}\n\
    \    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n    if [[ $month -ge\
    \ 1 && $month -le 12 ]]; then\n      if [[ $month -eq 1 || $month -eq 3 || $month\
    \ -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]];\
    \ then\n        if [[ $day -ge 1 && $day -le 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day\
    \ -ge 1 && $day -le 30 ]]; then\n          echo \"true\"\n        else\n     \
    \     echo \"false\"\n        fi\n      elif [[ $month -eq 2 ]]; then\n      \
    \  if [[ $day -ge 1 && $day -le 29 ]]; then\n          echo \"true\"\n       \
    \ else\n          echo \"false\"\n        fi\n      fi\n    else\n      echo \"\
    false\"\n    fi\n  else\n    echo \"false\"\n  fi", "  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if (( year > 0 )); then\n      if (( month > 0 && month < 13 )); then\n \
    \       if (( month == 1 || month == 3 || month == 5 || month == 7 || month ==\
    \ 8 || month == 10 || month == 12 )); then\n          if (( day > 0 && day < 32\
    \ )); then\n            echo \"true\"\n          else\n            echo \"false\"\
    \n          fi\n        elif (( month == 4 || month == 6 || month == 9 || month\
    \ == 11 )); then\n          if (( day > 0 && day < 31 )); then\n            echo\
    \ \"true\"\n          else\n            echo \"false\"\n          fi\n       \
    \ elif (( month == 2 )); then\n          if (( year % 4 == 0 )); then\n      \
    \      if (( day > 0 && day < 30 )); then\n              echo \"true\"\n     \
    \       else\n              echo \"false\"\n            fi\n          else\n \
    \           if (( day > 0 && day < 29 )); then\n              echo \"true\"\n\
    \            else\n              echo \"false\"\n            fi\n          fi\n\
    \        fi\n      else\n        echo \"false\"\n      fi\n    else\n      echo\
    \ \"false\"\n    fi\n  else\n    echo \"false\"\n  fi", "  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n\
    \    local year=${BASH_REMATCH[3]}\n    if [[ $month -gt 0 && $month -lt 13 ]];\
    \ then\n      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq\
    \ 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if [[\
    \ $day -gt 0 && $day -lt 32 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      elif [[ $month -eq 4 || $month -eq\
    \ 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -gt 0 && $day\
    \ -lt 31 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $day -gt 0 &&\
    \ $day -lt 30 ]]; then\n          echo \"true\"\n        else\n          echo\
    \ \"false\"\n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi", "  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi", "  if\
    \ [ -z \"$1\" ]; then\n    echo \"false\"\n    return\n  fi\n  if [[ ! \"$1\"\
    \ =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n    echo \"false\"\n    return\n \
    \ fi\n  local month=$(echo \"$1\" | cut -d- -f1)\n  local day=$(echo \"$1\" |\
    \ cut -d- -f2)\n  local year=$(echo \"$1\" | cut -d- -f3)\n  if [ \"$month\" -lt\
    \ 1 ] || [ \"$month\" -gt 12 ]; then\n    echo \"false\"\n    return\n  fi\n \
    \ if [ \"$month\" -eq 1 ] || [ \"$month\" -eq 3 ] || [ \"$month\" -eq 5 ] || [\
    \ \"$month\" -eq 7 ] || [ \"$month\" -eq 8 ] || [ \"$month\" -eq 10 ] || [ \"\
    $month\" -eq 12 ]; then\n    if [ \"$day\" -lt 1 ] || [ \"$day\" -gt 31 ]; then\n\
    \      echo \"false\"\n      return\n    fi\n  elif [ \"$month\" -eq 4 ] || [\
    \ \"$month\" -eq 6 ] || [ \"$month\" -eq 9 ] || [ \"$month\" -eq 11 ]; then\n\
    \    if [ \"$day\" -lt 1 ] || [ \"$day\" -gt 30 ]; then\n      echo \"false\"\n\
    \      return\n    fi\n  elif [ \"$month\" -eq 2 ]; then\n    if [ \"$day\" -lt\
    \ 1 ] || [ \"$day\" -gt 29 ]; then\n      echo \"false\"\n      return\n    fi\n\
    \  fi\n  echo \"true\"", "  # Write your code here\n  # You can use the following\
    \ command to test if a string is empty:\n  # if [ -z \"$1\" ]; then\n  #   echo\
    \ \"empty\"\n  # fi\n  #\n  # You can use the following command to test if a string\
    \ is in the format: mm-dd-yyyy\n  # if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]];\
    \ then\n  #   echo \"valid\"\n  # fi\n  #\n  # You can use the following command\
    \ to test if a string is in the format: mm/dd/yyyy\n  # if [[ $1 =~ ^[0-9]{2}/[0-9]{2}/[0-9]{4}$\
    \ ]]; then\n  #   echo \"valid\"\n  # fi\n  #\n  # You can use the following command\
    \ to test if a string is in the format: yyyy-mm-dd\n  # if [[ $1 =~ ^[0-9]{4}-[0-9]{2}-[0-9]{2}$\
    \ ]]; then\n  #   echo \"valid\"\n  # fi\n  #\n  # You can use the following command\
    \ to test if a string is in the format: yyyy/mm/dd\n  # if [[ $1 =~ ^[0-9]{4}/[0-9]{2}/[0-9]{2}$\
    \ ]]; then\n  #   echo \"valid\"\n  # fi\n  #\n  # You can use the following command\
    \ to test if a string is in the format: dd-mm-yyyy\n  # if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n  #   echo \"valid\"\n  # fi\n  #\n  # You can use the following command\
    \ to test if a string is in the format: dd/mm/yyyy\n  # if [[ $1 =~ ^[0-9]{2}/[0-9]{2}/[0-9]{4}$\
    \ ]]; then", "  if [ -z \"$1\" ]; then\n    echo \"false\"\n    return\n  fi\n\
    \  local date_arr=($(echo \"$1\" | tr \"-\" \" \"))\n  local month=${date_arr[0]}\n\
    \  local day=${date_arr[1]}\n  local year=${date_arr[2]}\n  if [ ${#year} -ne\
    \ 4 ]; then\n    echo \"false\"\n    return\n  fi\n  if [ $month -lt 1 ] || [\
    \ $month -gt 12 ]; then\n    echo \"false\"\n    return\n  fi\n  if [ $month -eq\
    \ 1 ] || [ $month -eq 3 ] || [ $month -eq 5 ] || [ $month -eq 7 ] || [ $month\
    \ -eq 8 ] || [ $month -eq 10 ] || [ $month -eq 12 ]; then\n    if [ $day -lt 1\
    \ ] || [ $day -gt 31 ]; then\n      echo \"false\"\n      return\n    fi\n  elif\
    \ [ $month -eq 4 ] || [ $month -eq 6 ] || [ $month -eq 9 ] || [ $month -eq 11\
    \ ]; then\n    if [ $day -lt 1 ] || [ $day -gt 30 ]; then\n      echo \"false\"\
    \n      return\n    fi\n  elif [ $month -eq 2 ]; then\n    if [ $day -lt 1 ] ||\
    \ [ $day -gt 29 ]; then\n      echo \"false\"\n      return\n    fi\n  fi\n  echo\
    \ \"true\"", "  if [ -z \"$1\" ]; then\n    echo \"false\"\n    return\n  fi\n\
    \  if [[ ! \"$1\" =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  local month=$(echo \"$1\" | cut -d- -f1)\n  local day=$(echo\
    \ \"$1\" | cut -d- -f2)\n  local year=$(echo \"$1\" | cut -d- -f3)\n  if [ \"\
    $month\" -lt 1 ] || [ \"$month\" -gt 12 ]; then\n    echo \"false\"\n    return\n\
    \  fi\n  if [ \"$month\" -eq 2 ]; then\n    if [ \"$day\" -lt 1 ] || [ \"$day\"\
    \ -gt 29 ]; then\n      echo \"false\"\n      return\n    fi\n  elif [ \"$month\"\
    \ -eq 4 ] || [ \"$month\" -eq 6 ] || [ \"$month\" -eq 9 ] || [ \"$month\" -eq\
    \ 11 ]; then\n    if [ \"$day\" -lt 1 ] || [ \"$day\" -gt 30 ]; then\n      echo\
    \ \"false\"\n      return\n    fi\n  else\n    if [ \"$day\" -lt 1 ] || [ \"$day\"\
    \ -gt 31 ]; then\n      echo \"false\"\n      return\n    fi\n  fi\n  echo \"\
    true\"", "  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n    local\
    \ month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n    local year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -ge 1 && $month -le 12 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -ge 1 && $day -le 31 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -ge 1 && $day -le 30 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -ge 1 && $day -le 29 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi", "  if\
    \ [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n    month=${BASH_REMATCH[1]}\n\
    \    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n    if [[ $month -gt\
    \ 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 || $month -eq 3 || $month\
    \ -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day\
    \ -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\n        else\n     \
    \     echo \"false\"\n        fi\n      elif [[ $month -eq 2 ]]; then\n      \
    \  if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo \"true\"\n       \
    \ else\n          echo \"false\"\n        fi\n      fi\n    else\n      echo \"\
    false\"\n    fi\n  else\n    echo \"false\"\n  fi", "  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n\
    \    local year=${BASH_REMATCH[3]}\n    if [[ $month -eq 1 || $month -eq 3 ||\
    \ $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq\
    \ 12 ]]; then\n      if [[ $day -ge 1 && $day -le 31 ]]; then\n        echo \"\
    true\"\n      else\n        echo \"false\"\n      fi\n    elif [[ $month -eq 4\
    \ || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n      if [[ $day\
    \ -ge 1 && $day -le 30 ]]; then\n        echo \"true\"\n      else\n        echo\
    \ \"false\"\n      fi\n    elif [[ $month -eq 2 ]]; then\n      if [[ $day -ge\
    \ 1 && $day -le 29 ]]; then\n        echo \"true\"\n      else\n        echo \"\
    false\"\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"\
    false\"\n  fi"]
stop_tokens:
- "\n}"

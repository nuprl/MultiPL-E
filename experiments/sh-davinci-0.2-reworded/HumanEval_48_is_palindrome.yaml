name: HumanEval_48_is_palindrome
language: sh
prompt: "#!/bin/bash\n# Checks if given string is a palindrome\n# >>> $(is_palindrome\
  \ \"\")\n# \"true\"\n# >>> $(is_palindrome \"aba\")\n# \"true\"\n# >>> $(is_palindrome\
  \ \"aaaaa\")\n# \"true\"\n# >>> $(is_palindrome \"zbcd\")\n# \"false\"\n#\n# $1\
  \ is a string\nis_palindrome() {\n"
tests: "}\n\ncandidate() {\n    is_palindrome \"$@\"\n}\n\nset -e\nrun_test() {\n\
  \    [[ $(candidate \"\") = \"true\" ]]\n    [[ $(candidate \"aba\") = \"true\"\
  \ ]]\n    [[ $(candidate \"aaaaa\") = \"true\" ]]\n    [[ $(candidate \"zbcd\")\
  \ = \"false\" ]]\n    [[ $(candidate \"xywyx\") = \"true\" ]]\n    [[ $(candidate\
  \ \"xywyz\") = \"false\" ]]\n    [[ $(candidate \"xywzx\") = \"false\" ]]\n}\n\n\
  run_test"
completions: ["    local str=\"$1\"\n    local len=${#str}\n    local i\n    for ((i=0;\
    \ i<len/2; i++)); do\n        if [[ \"${str:i:1}\" != \"${str:len-i-1:1}\" ]];\
    \ then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"", "  local str=$1\n  local len=${#str}\n  local half=$((len\
    \ / 2))\n  local i=0\n  while [ $i -lt $half ]; do\n    if [ \"${str:$i:1}\" !=\
    \ \"${str:$((len - i - 1)):1}\" ]; then\n      echo \"false\"\n      return\n\
    \    fi\n    i=$((i + 1))\n  done\n  echo \"true\"", "    local str=\"$1\"\n \
    \   local len=${#str}\n    local half=$((len / 2))\n    local i=0\n    while [[\
    \ $i -lt $half ]]; do\n        if [[ \"${str:$i:1}\" != \"${str:$((len - i - 1)):1}\"\
    \ ]]; then\n            echo \"false\"\n            return\n        fi\n     \
    \   i=$((i + 1))\n    done\n    echo \"true\"", "    local str=\"$1\"\n    local\
    \ len=${#str}\n    local i=0\n    local j=$((len - 1))\n    while [[ $i -lt $j\
    \ ]]; do\n        if [[ \"${str:$i:1}\" != \"${str:$j:1}\" ]]; then\n        \
    \    echo \"false\"\n            return\n        fi\n        i=$((i + 1))\n  \
    \      j=$((j - 1))\n    done\n    echo \"true\"", "    local str=$1\n    local\
    \ len=${#str}\n    local i=0\n    local j=$((len - 1))\n    while [ $i -lt $j\
    \ ]; do\n        if [ \"${str:$i:1}\" != \"${str:$j:1}\" ]; then\n           \
    \ echo \"false\"\n            return\n        fi\n        i=$((i + 1))\n     \
    \   j=$((j - 1))\n    done\n    echo \"true\"", "    local str=\"$1\"\n    local\
    \ len=${#str}\n    local half=$((len / 2))\n    local i=0\n    local j=$((len\
    \ - 1))\n    while [ $i -lt $half ]; do\n        if [ \"${str:$i:1}\" != \"${str:$j:1}\"\
    \ ]; then\n            echo \"false\"\n            return\n        fi\n      \
    \  i=$((i + 1))\n        j=$((j - 1))\n    done\n    echo \"true\"", "    local\
    \ str=\"$1\"\n    local len=${#str}\n    local i=0\n    local j=$((len - 1))\n\
    \    while [ $i -lt $j ]; do\n        if [ \"${str:$i:1}\" != \"${str:$j:1}\"\
    \ ]; then\n            echo \"false\"\n            return\n        fi\n      \
    \  i=$((i + 1))\n        j=$((j - 1))\n    done\n    echo \"true\"", "  local\
    \ str=\"$1\"\n  local len=$((${#str} - 1))\n  local i=0\n  local j=$len\n  while\
    \ [ $i -lt $j ]; do\n    if [ \"${str:$i:1}\" != \"${str:$j:1}\" ]; then\n   \
    \   echo \"false\"\n      return\n    fi\n    i=$((i + 1))\n    j=$((j - 1))\n\
    \  done\n  echo \"true\"", "    local str=\"$1\"\n    local len=${#str}\n    local\
    \ i\n    for ((i=0; i<len/2; i++)); do\n        if [[ \"${str:i:1}\" != \"${str:len-i-1:1}\"\
    \ ]]; then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"", "  local str=\"$1\"\n  local len=${#str}\n  local mid=$((len\
    \ / 2))\n  local i=0\n  local j=$((len - 1))\n  while [ $i -lt $mid ]; do\n  \
    \  if [ \"${str:$i:1}\" != \"${str:$j:1}\" ]; then\n      echo \"false\"\n   \
    \   return\n    fi\n    i=$((i + 1))\n    j=$((j - 1))\n  done\n  echo \"true\"",
  "  local str=\"$1\"\n  local len=${#str}\n  local i=0\n  local j=$((len - 1))\n\
    \  while [ $i -lt $j ]; do\n    if [ \"${str:$i:1}\" != \"${str:$j:1}\" ]; then\n\
    \      echo \"false\"\n      return\n    fi\n    i=$((i + 1))\n    j=$((j - 1))\n\
    \  done\n  echo \"true\"", "    local str=$1\n    local len=${#str}\n    local\
    \ i=0\n    local j=$((len - 1))\n    while [ $i -lt $j ]; do\n        if [ \"\
    ${str:$i:1}\" != \"${str:$j:1}\" ]; then\n            echo \"false\"\n       \
    \     return\n        fi\n        i=$((i + 1))\n        j=$((j - 1))\n    done\n\
    \    echo \"true\"", "  local str=\"$1\"\n  local str_len=${#str}\n  local i=0\n\
    \  local j=$((str_len - 1))\n  local is_palindrome=true\n\n  while [ $i -lt $j\
    \ ]; do\n    if [ \"${str:$i:1}\" != \"${str:$j:1}\" ]; then\n      is_palindrome=false\n\
    \      break\n    fi\n    i=$((i + 1))\n    j=$((j - 1))\n  done\n\n  echo \"\
    $is_palindrome\"", "    if [[ -z \"$1\" ]]; then\n        echo \"true\"\n    else\n\
    \        local first_letter=$(echo \"$1\" | cut -c1)\n        local last_letter=$(echo\
    \ \"$1\" | cut -c-1)\n        if [[ \"$first_letter\" == \"$last_letter\" ]];\
    \ then\n            is_palindrome \"$(echo \"$1\" | cut -c2-)\"\n        else\n\
    \            echo \"false\"\n        fi\n    fi", "  local str=\"$1\"\n  local\
    \ len=${#str}\n  local i=0\n  local j=$((len - 1))\n  while [ $i -lt $j ]; do\n\
    \    if [ \"${str:$i:1}\" != \"${str:$j:1}\" ]; then\n      echo \"false\"\n \
    \     return\n    fi\n    i=$((i + 1))\n    j=$((j - 1))\n  done\n  echo \"true\"",
  "    local str=\"$1\"\n    local len=${#str}\n    local i\n    for ((i=0; i<len/2;\
    \ i++)); do\n        if [[ \"${str:i:1}\" != \"${str:len-i-1:1}\" ]]; then\n \
    \           echo \"false\"\n            return\n        fi\n    done\n    echo\
    \ \"true\"", "    local str=\"$1\"\n    local len=${#str}\n    local i=0\n   \
    \ local j=$((len - 1))\n    while [ $i -lt $j ]; do\n        if [ \"${str:$i:1}\"\
    \ != \"${str:$j:1}\" ]; then\n            echo \"false\"\n            return\n\
    \        fi\n        i=$((i + 1))\n        j=$((j - 1))\n    done\n    echo \"\
    true\"", "  local string=\"$1\"\n  local length=${#string}\n  local half_length=$((length\
    \ / 2))\n  local first_half=${string:0:$half_length}\n  local second_half=${string:$((length\
    \ - half_length)):$half_length}\n  local reversed_second_half=$(reverse_string\
    \ \"$second_half\")\n  if [[ \"$first_half\" == \"$reversed_second_half\" ]];\
    \ then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi", "    local str=\"\
    $1\"\n    local len=${#str}\n    local i=0\n    local j=$((len - 1))\n    while\
    \ [ $i -lt $j ]; do\n        if [ \"${str:$i:1}\" != \"${str:$j:1}\" ]; then\n\
    \            echo \"false\"\n            return\n        fi\n        i=$((i +\
    \ 1))\n        j=$((j - 1))\n    done\n    echo \"true\"", "    local str=$1\n\
    \    local len=${#str}\n    local half=$((len / 2))\n    local i\n    for ((i\
    \ = 0; i < half; i++)); do\n        if [[ \"${str:i:1}\" != \"${str:len-i-1:1}\"\
    \ ]]; then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\""]
stop_tokens:
- "\n}"

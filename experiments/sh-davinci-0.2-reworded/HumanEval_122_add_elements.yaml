name: HumanEval_122_add_elements
language: sh
prompt: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer k,\
  \ return\n# the sum of the elements with at most two digits from the first k elements\
  \ of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8 9\" \"4\")\n\
  # \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k <= len(arr)\n#\n\
  # $1 is a space-separated list\n# $2 is an integer\nadd_elements() {\n"
tests: "}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n \
  \   [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
  \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6\
  \ 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"\
  4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
completions: ["    local -a arr=()\n    local -i k=0\n    local -i sum=0\n    IFS='\
    \ ' read -r -a arr <<< \"$1\"\n    k=$2\n    for ((i=0; i<k; i++)); do\n     \
    \   if [[ ${arr[i]} -lt 100 ]]; then\n            ((sum+=arr[i]))\n        fi\n\
    \    done\n    echo \"$sum\"", "  local -n arr=$1\n  local k=$2\n  local sum=0\n\
    \  for i in $(seq 1 $k); do\n    local num=$(echo $arr | cut -d \" \" -f $i)\n\
    \    if [[ $num -lt 100 ]]; then\n      ((sum += num))\n    fi\n  done\n  echo\
    \ $sum", "    local arr=($1)\n    local k=$2\n    local sum=0\n    for ((i=0;\
    \ i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            sum=$((sum\
    \ + ${arr[i]}))\n        fi\n    done\n    echo \"$sum\"", "    local arr=($1)\n\
    \    local k=$2\n    local sum=0\n    for ((i=0; i<k; i++)); do\n        if [[\
    \ ${arr[i]} -lt 100 ]]; then\n            sum=$((sum + ${arr[i]}))\n        fi\n\
    \    done\n    echo \"$sum\"", "  local -n arr=$1\n  local k=$2\n  local sum=0\n\
    \  for ((i=0; i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum\
    \ += arr[i]))\n    fi\n  done\n  echo \"$sum\"", "    local -a arr=(\"$@\")\n\
    \    local k=${arr[-1]}\n    unset arr[-1]\n    local sum=0\n    for i in ${arr[@]};\
    \ do\n        if [[ ${#i} -le 2 ]]; then\n            (( sum += i ))\n       \
    \ fi\n        (( k-- ))\n        if [[ $k -eq 0 ]]; then\n            break\n\
    \        fi\n    done\n    echo \"$sum\"", "    local -n arr=$1\n    local k=$2\n\
    \    local sum=0\n    for i in $(seq 0 $((k-1))); do\n        local n=$(echo $arr\
    \ | cut -d' ' -f$((i+1)))\n        if [[ $n -lt 100 ]]; then\n            sum=$((sum+n))\n\
    \        fi\n    done\n    echo $sum", "    local arr=\"$1\"\n    local k=\"$2\"\
    \n    local sum=0\n    local i=0\n    local arr_len=\"$(echo \"$arr\" | wc -w)\"\
    \n    while [ \"$i\" -lt \"$k\" ] && [ \"$i\" -lt \"$arr_len\" ]; do\n       \
    \ local num=\"$(echo \"$arr\" | cut -d ' ' -f \"$((i + 1))\")\"\n        if [\
    \ \"${#num}\" -le 2 ]; then\n            sum=$((sum + num))\n        fi\n    \
    \    i=$((i + 1))\n    done\n    echo \"$sum\"", "  local arr=(\"$@\")\n  local\
    \ k=${arr[-1]}\n  local sum=0\n  for ((i=0; i<k; i++)); do\n    local num=${arr[i]}\n\
    \    if [[ $num -lt 100 ]]; then\n      ((sum+=num))\n    fi\n  done\n  echo \"\
    $sum\"", "    local arr=($1)\n    local k=$2\n    local sum=0\n    for i in $(seq\
    \ 0 $((k-1))); do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n            sum=$((sum\
    \ + ${arr[$i]}))\n        fi\n    done\n    echo \"$sum\"", "    local -n arr=\"\
    ($(echo $1 | tr ' ' '\\n'))\"\n    local k=$2\n    local sum=0\n    for ((i=0;\
    \ i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            ((sum+=${arr[i]}))\n\
    \        fi\n    done\n    echo $sum", "  local arr=\"$1\"\n  local k=\"$2\"\n\
    \  local sum=0\n  local i=0\n  for num in $arr; do\n    if [ $i -lt $k ]; then\n\
    \      if [ ${#num} -le 2 ]; then\n        sum=$((sum + num))\n      fi\n    fi\n\
    \    i=$((i + 1))\n  done\n  echo \"$sum\"", "  local arr=\"$1\"\n  local k=\"\
    $2\"\n  local sum=0\n  local i=0\n  for n in $arr; do\n    if [ $i -lt $k ]; then\n\
    \      if [ ${#n} -le 2 ]; then\n        sum=$((sum + n))\n      fi\n    fi\n\
    \    i=$((i + 1))\n  done\n  echo \"$sum\"", "  local -a arr\n  local k\n  local\
    \ sum\n  local i\n  local n\n  arr=($1)\n  k=$2\n  sum=0\n  for ((i=0; i<k; i++));\
    \ do\n    n=${arr[i]}\n    if [[ $n -lt 100 ]]; then\n      sum=$((sum + n))\n\
    \    fi\n  done\n  echo \"$sum\"", "  local arr=($1)\n  local k=$2\n  local sum=0\n\
    \  for ((i=0; i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n\
    \    fi\n  done\n  echo $sum", "    local arr=($1)\n    local k=$2\n    local\
    \ sum=0\n    for i in $(seq 0 $((k-1))); do\n        if [ ${#arr[$i]} -le 2 ];\
    \ then\n            sum=$((sum + arr[$i]))\n        fi\n    done\n    echo $sum",
  "    local -a arr=(\"$@\")\n    local k=${arr[-1]}\n    unset arr[-1]\n    local\
    \ sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -lt 100 ]]; then\n \
    \           ((sum += i))\n        fi\n    done\n    echo \"$sum\"", "    local\
    \ sum=0\n    for i in $(echo $1 | tr \" \" \"\\n\" | head -n $2); do\n       \
    \ if [[ $i -lt 100 ]]; then\n            sum=$((sum + i))\n        fi\n    done\n\
    \    echo $sum", "    local arr=$1\n    local k=$2\n    local sum=0\n    local\
    \ i=0\n    for num in $arr; do\n        if [[ $i -eq $k ]]; then\n           \
    \ break\n        fi\n        if [[ $num -lt 100 ]]; then\n            sum=$((sum\
    \ + num))\n        fi\n        i=$((i + 1))\n    done\n    echo $sum", "    local\
    \ -a arr=(\"$@\")\n    local k=${arr[-1]}\n    unset arr[-1]\n    local sum=0\n\
    \    for i in \"${arr[@]}\"; do\n        if [ ${#i} -le 2 ]; then\n          \
    \  sum=$((sum + i))\n        fi\n    done\n    echo \"$sum\"", "  local -a arr=()\n\
    \  local -i k=$2\n  local -i sum=0\n  IFS=' ' read -r -a arr <<< \"$1\"\n  for\
    \ ((i=0; i<k; i++)); do\n    if [[ ${arr[i]} =~ ^[0-9]{1,2}$ ]]; then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo \"$sum\"", "    local -a arr=(\"$@\")\n \
    \   local k=${arr[-1]}\n    unset arr[-1]\n    local sum=0\n    for ((i=0; i<k;\
    \ i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            ((sum+=${arr[i]}))\n\
    \        fi\n    done\n    echo \"$sum\"", "  local arr=($1)\n  local k=$2\n \
    \ local sum=0\n  for ((i=0; i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n\
    \      ((sum+=${arr[i]}))\n    fi\n  done\n  echo $sum", "    local -n arr=$1\n\
    \    local k=$2\n    local sum=0\n    for i in ${arr[@]:0:$k}; do\n        if\
    \ [[ $i -lt 100 ]]; then\n            ((sum+=i))\n        fi\n    done\n    echo\
    \ $sum", "    local -a arr=(\"$@\")\n    local k=${arr[-1]}\n    local sum=0\n\
    \    for ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n   \
    \         ((sum+=arr[i]))\n        fi\n    done\n    echo \"$sum\"", "    local\
    \ sum=0\n    local arr=(\"$@\")\n    local k=${arr[-1]}\n    unset arr[-1]\n \
    \   for i in \"${arr[@]}\"; do\n        if [[ $i -lt 100 ]]; then\n          \
    \  ((sum+=i))\n        fi\n        ((k--))\n        if [[ $k -eq 0 ]]; then\n\
    \            break\n        fi\n    done\n    echo \"$sum\"", "    local arr=($1)\n\
    \    local k=$2\n    local sum=0\n    for ((i=0; i<k; i++)); do\n        if [[\
    \ ${arr[i]} -lt 100 ]]; then\n            sum=$((sum + ${arr[i]}))\n        fi\n\
    \    done\n    echo \"$sum\"", "    local arr=\"$1\"\n    local k=\"$2\"\n   \
    \ local sum=0\n    local i=0\n    for num in $arr; do\n        if [ $i -lt $k\
    \ ]; then\n            if [ ${#num} -le 2 ]; then\n                sum=$((sum\
    \ + num))\n            fi\n        fi\n        i=$((i + 1))\n    done\n    echo\
    \ \"$sum\"", "    local -n arr=$1\n    local k=$2\n    local sum=0\n    for ((i=0;\
    \ i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            ((sum+=${arr[i]}))\n\
    \        fi\n    done\n    echo $sum", "  local arr=\"$1\"\n  local k=\"$2\"\n\
    \  local sum=0\n  local i=0\n  for num in $arr; do\n    if [[ $i -lt $k ]]; then\n\
    \      if [[ $num -lt 100 ]]; then\n        sum=$((sum + num))\n      fi\n   \
    \ fi\n    i=$((i + 1))\n  done\n  echo \"$sum\"", "  local -n arr=$1\n  local\
    \ k=$2\n  local sum=0\n  for ((i=0; i<k; i++)); do\n    if [[ ${arr[i]} -lt 100\
    \ ]]; then\n      ((sum+=${arr[i]}))\n    fi\n  done\n  echo \"$sum\"", "    local\
    \ arr=($1)\n    local k=$2\n    local sum=0\n    for (( i=0; i<k; i++ )); do\n\
    \        if [[ ${arr[i]} -lt 100 ]]; then\n            sum=$((sum + ${arr[i]}))\n\
    \        fi\n    done\n    echo \"$sum\"", "  local -a arr=()\n  local -i k=0\n\
    \  local -i sum=0\n  local -i i=0\n  local -i len=0\n  local -i num=0\n  local\
    \ -i num_digits=0\n  local -i max_digits=2\n  arr=($1)\n  k=$2\n  len=${#arr[@]}\n\
    \  if [[ $k -gt $len ]]; then\n    k=$len\n  fi\n  for ((i=0; i<k; i++)); do\n\
    \    num=${arr[$i]}\n    num_digits=${#num}\n    if [[ $num_digits -le $max_digits\
    \ ]]; then\n      sum=$((sum + num))\n    fi\n  done\n  echo \"$sum\"", "  local\
    \ -n arr=$1\n  local k=$2\n  local sum=0\n  for ((i=0; i<k; i++)); do\n    if\
    \ [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n    fi\n  done\n  echo\
    \ \"$sum\"", "    local sum=0\n    local arr=($1)\n    local k=$2\n    for ((\
    \ i=0; i<k; i++ )); do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n          \
    \  (( sum+=${arr[$i]} ))\n        fi\n    done\n    echo $sum", "    local -a\
    \ arr=()\n    local -i k=0\n    local -i sum=0\n    local -i i=0\n    local -i\
    \ len=0\n    local -i num=0\n    local -i num_digits=0\n    local -i max_digits=2\n\
    \    local -i max_num=99\n    local -i min_num=10\n    local -i min_num_digits=2\n\
    \    local -i max_num_digits=2\n    local -i max_num_digits_for_k=0\n    local\
    \ -i max_num_digits_for_len=0\n    local -i max_num_for_k=0\n    local -i max_num_for_len=0\n\
    \    local -i min_num_for_k=0\n    local -i min_num_for_len=0\n    local -i min_num_digits_for_k=0\n\
    \    local -i min_num_digits_for_len=0\n    local -i min_num_digits_for_k_and_len=0\n\
    \    local -i max_num_digits_for_k_and_len=0\n    local -i max_num_for_k_and_len=0\n\
    \    local -i min_num_for_k_and_len=0\n    local -i max_num_digits_for_k_or_len=0\n\
    \    local -i max_num_for_k_or_len=0\n    local -i min_num_digits_for_k_or_len=0\n\
    \    local -i min_num_for_k_or_len=0\n    local -i max_num_digits_for_k_xor_len=0\n\
    \    local -i max_num_for_k_xor_len=0\n    local -i min_num_digits_for_k_xor_len=0\n\
    \    local -i min_num_for_k_xor_len=0\n    local -i max_num_digits_for_k_and_len_or_max_num_digits_for_k_x",
  "    local arr=\"$1\"\n    local k=\"$2\"\n    local sum=0\n    local i=0\n    for\
    \ n in $arr; do\n        if [[ $i -lt $k ]]; then\n            if [[ ${#n} -le\
    \ 2 ]]; then\n                sum=$((sum + n))\n            fi\n        fi\n \
    \       i=$((i + 1))\n    done\n    echo \"$sum\"", "  local -n arr=$1\n  local\
    \ k=$2\n  local sum=0\n  for (( i=0; i<k; i++ )); do\n    if [[ ${arr[i]} -lt\
    \ 100 ]]; then\n      (( sum += arr[i] ))\n    fi\n  done\n  echo \"$sum\"", " \
    \   local arr=($1)\n    local k=$2\n    local sum=0\n    for ((i=0; i<k; i++));\
    \ do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            sum=$((sum + ${arr[i]}))\n\
    \        fi\n    done\n    echo \"$sum\"", "    local -a arr=(\"$@\")\n    local\
    \ -i k=${arr[-1]}\n    local -i sum=0\n    local -i i=0\n    local -i len=${#arr[@]}\n\
    \    local -i n=0\n    local -i num=0\n    local -i digit=0\n    local -i tens=0\n\
    \    local -i ones=0\n    local -i hundreds=0\n    local -i thousands=0\n    local\
    \ -i ten_thousands=0\n    local -i hundred_thousands=0\n    local -i millions=0\n\
    \    local -i ten_millions=0\n    local -i hundred_millions=0\n    local -i billions=0\n\
    \    local -i ten_billions=0\n    local -i hundred_billions=0\n    local -i trillions=0\n\
    \    local -i ten_trillions=0\n    local -i hundred_trillions=0\n    local -i\
    \ quadrillions=0\n    local -i ten_quadrillions=0\n    local -i hundred_quadrillions=0\n\
    \    local -i quintillions=0\n    local -i ten_quintillions=0\n    local -i hundred_quintillions=0\n\
    \    local -i sextillions=0\n    local -i ten_sextillions=0\n    local -i hundred_sextillions=0\n\
    \    local -i septillions=0\n    local -i ten_septillions=0\n    local -i hundred_septillions=0\n\
    \    local -i octillions=0\n    local -i ten_octillions=0\n    local -i hundred_octillions=0\n\
    \    local -i nonillions=0\n    local -i ten_nonillions=0\n    local -i hundred_nonillions=0\n\
    \    local -i decillions=0\n    local -i ten_decillions=0\n    local -i hundred_decillions=0\n\
    \    local -i undecillions=0\n    local -i ten_undecillions=0\n    local -i hundred_undecillions=0\n\
    \    local -i duodecillions=0\n    local -i ten_duodecillions=0\n    local -i",
  "    local arr=($1)\n    local k=$2\n    local sum=0\n    for ((i=0; i<k; i++));\
    \ do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            ((sum+=${arr[i]}))\n\
    \        fi\n    done\n    echo $sum", "  local -a arr=()\n  local -i k=$2\n \
    \ local -i sum=0\n  local -i i=0\n  local -i len=0\n  local -i num=0\n  local\
    \ -i num_digits=0\n  local -i max_digits=2\n  local -i max_num=99\n  local -i\
    \ min_num=10\n\n  # Convert the space-separated list into an array\n  IFS=' '\
    \ read -r -a arr <<< \"$1\"\n\n  # Iterate through the array and add the elements\
    \ with at most two digits\n  len=${#arr[@]}\n  for ((i=0; i<len; i++)); do\n \
    \   num=${arr[i]}\n    num_digits=${#num}\n    if ((num_digits <= max_digits &&\
    \ num <= max_num && num >= min_num)); then\n      sum=$((sum + num))\n    fi\n\
    \  done\n\n  echo \"$sum\"", "    local arr=($1)\n    local k=$2\n    local sum=0\n\
    \    for i in $(seq 0 $((k-1))); do\n        if [[ ${arr[$i]} -gt 99 ]]; then\n\
    \            continue\n        else\n            sum=$((sum + ${arr[$i]}))\n \
    \       fi\n    done\n    echo \"$sum\"", "    local -n arr=$1\n    local k=$2\n\
    \    local sum=0\n    for ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100\
    \ ]]; then\n            ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum",
  "  local arr=($1)\n  local k=$2\n  local sum=0\n  for i in $(seq 0 $((k-1))); do\n\
    \    if [[ ${arr[$i]} -lt 100 ]]; then\n      sum=$((sum + ${arr[$i]}))\n    fi\n\
    \  done\n  echo \"$sum\"", "  local arr=($1)\n  local k=$2\n  local sum=0\n  for\
    \ ((i=0; i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum\
    \ + ${arr[i]}))\n    fi\n  done\n  echo $sum", "    local -a arr=(\"$@\")\n  \
    \  local k=${arr[-1]}\n    unset arr[-1]\n    local sum=0\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -lt 100 ]]; then\n            ((sum+=i))\n        fi\n\
    \    done\n    echo \"$sum\"", "  local -n arr=$1\n  local k=$2\n  local sum=0\n\
    \  for (( i=0; i<k; i++ )); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((\
    \ sum += arr[i] ))\n    fi\n  done\n  echo \"$sum\"", "    local -n arr=$1\n \
    \   local k=$2\n    local sum=0\n    for i in $(seq 1 $k); do\n        local num=$(echo\
    \ $arr | cut -d \" \" -f $i)\n        if [[ $num -lt 100 ]]; then\n          \
    \  sum=$((sum + num))\n        fi\n    done\n    echo $sum", "    local -a arr=()\n\
    \    local k\n    local sum=0\n    IFS=' ' read -r -a arr <<< \"$1\"\n    k=$2\n\
    \    for ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n   \
    \         sum=$((sum + arr[i]))\n        fi\n    done\n    echo \"$sum\"", " \
    \ local -n arr=$1\n  local k=$2\n  local sum=0\n  for ((i=0; i<k; i++)); do\n\
    \    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n    fi\n  done\n\
    \  echo \"$sum\"", "  local sum=0\n  local arr=$1\n  local k=$2\n  for ((i=0;\
    \ i<k; i++)); do\n    local num=$(echo $arr | cut -d' ' -f$((i+1)))\n    if [[\
    \ $num -lt 100 ]]; then\n      ((sum+=num))\n    fi\n  done\n  echo $sum", " \
    \ local arr\n  local k\n  local sum\n  local i\n  local num\n  arr=($1)\n  k=$2\n\
    \  sum=0\n  for ((i=0; i<k; i++)); do\n    num=${arr[i]}\n    if [[ ${#num} -le\
    \ 2 ]]; then\n      sum=$((sum + num))\n    fi\n  done\n  echo \"$sum\"", "  local\
    \ -n arr=$1\n  local k=$2\n  local sum=0\n  for i in $(seq 0 $((k-1))); do\n \
    \   if [[ ${arr[$i]} -lt 100 ]]; then\n      sum=$((sum + ${arr[$i]}))\n    fi\n\
    \  done\n  echo \"$sum\"", "    local arr=(\"$@\")\n    local k=${arr[-1]}\n \
    \   unset arr[-1]\n    local sum=0\n    for (( i=0; i<$k; i++ )); do\n       \
    \ if [[ ${arr[$i]} -lt 100 ]]; then\n            sum=$((sum + ${arr[$i]}))\n \
    \       fi\n    done\n    echo \"$sum\"", "    local -a arr=(\"$@\")\n    local\
    \ k=\"${arr[-1]}\"\n    unset arr[-1]\n    local sum=0\n    for ((i=0; i<k; i++));\
    \ do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            ((sum+=arr[i]))\n\
    \        fi\n    done\n    echo \"$sum\"", "  local arr=\"$1\"\n  local k=\"$2\"\
    \n  local sum=0\n  local i=0\n  for num in $arr; do\n    if [ $i -lt $k ]; then\n\
    \      if [ ${#num} -le 2 ]; then\n        sum=$((sum + num))\n      fi\n    fi\n\
    \    i=$((i + 1))\n  done\n  echo \"$sum\"", "    local -a arr=()\n    local -i\
    \ k=0\n    local -i sum=0\n    local -i i=0\n    local -i len=0\n    local -i\
    \ num=0\n    local -i num_digits=0\n    arr=($1)\n    k=$2\n    len=${#arr[@]}\n\
    \    for ((i=0; i<len; i++)); do\n        num=${arr[i]}\n        num_digits=${#num}\n\
    \        if ((num_digits <= 2)); then\n            sum=$((sum + num))\n      \
    \  fi\n        if ((i == k-1)); then\n            break\n        fi\n    done\n\
    \    echo \"$sum\"", "    local -a arr=(\"$@\")\n    local -i k=${arr[-1]}\n \
    \   local -i sum=0\n    local -i i=0\n    local -i len=${#arr[@]}\n    while [\
    \ $i -lt $k ]; do\n        if [ ${#arr[$i]} -le 2 ]; then\n            sum=$((sum\
    \ + arr[$i]))\n        fi\n        i=$((i + 1))\n    done\n    echo \"$sum\"",
  "  local arr=$1\n  local k=$2\n  local sum=0\n  local i=0\n  for el in $arr; do\n\
    \    if [ $i -lt $k ]; then\n      if [ ${#el} -le 2 ]; then\n        sum=$((sum\
    \ + el))\n      fi\n    fi\n    i=$((i + 1))\n  done\n  echo $sum", "  local -a\
    \ arr=()\n  local -i k\n  local -i i\n  local -i sum=0\n  local -i num\n  IFS='\
    \ ' read -r -a arr <<< \"$1\"\n  k=$2\n  for ((i=0; i<k; i++)); do\n    num=${arr[i]}\n\
    \    if ((num < 100)); then\n      ((sum+=num))\n    fi\n  done\n  echo \"$sum\"",
  "  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0; i<k; i++)); do\n  \
    \  if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum + ${arr[i]}))\n    fi\n\
    \  done\n  echo \"$sum\"", "    local -a arr=(\"$@\")\n    local k=${arr[-1]}\n\
    \    unset arr[-1]\n    local sum=0\n    for i in \"${arr[@]}\"; do\n        if\
    \ [[ \"$i\" -lt 100 ]]; then\n            sum=$((sum + i))\n        fi\n    done\n\
    \    echo \"$sum\"", "  local -n arr=$1\n  local k=$2\n  local sum=0\n  for i\
    \ in $(seq 1 $k); do\n    local num=$(echo $arr | cut -d' ' -f$i)\n    if [[ $num\
    \ -lt 100 ]]; then\n      sum=$((sum + num))\n    fi\n  done\n  echo $sum", " \
    \   local -n arr=$1\n    local k=$2\n    local sum=0\n    for i in $(seq 1 $k);\
    \ do\n        local num=$(echo $arr | cut -d \" \" -f $i)\n        if [[ $num\
    \ -lt 100 ]]; then\n            sum=$((sum + num))\n        fi\n    done\n   \
    \ echo $sum", "  local arr=($1)\n  local k=$2\n  local sum=0\n  for (( i=0; i<k;\
    \ i++ )); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      (( sum += ${arr[i]}\
    \ ))\n    fi\n  done\n  echo \"$sum\"", "    local -n arr=$1\n    local k=$2\n\
    \    local sum=0\n    for i in ${arr[@]:0:$k}; do\n        if [[ $i -lt 100 ]];\
    \ then\n            ((sum+=i))\n        fi\n    done\n    echo $sum", "    local\
    \ -a arr=()\n    local -i sum=0\n    local -i k=$2\n    local -i i=0\n    read\
    \ -ra arr <<< \"$1\"\n    for (( i=0; i<k; i++ )); do\n        if [[ ${arr[i]}\
    \ -lt 100 ]]; then\n            (( sum += ${arr[i]} ))\n        fi\n    done\n\
    \    echo \"$sum\"", "    local arr=($1)\n    local k=$2\n    local sum=0\n  \
    \  for ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n     \
    \       sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum", "    local\
    \ arr=($1)\n    local k=$2\n    local sum=0\n    for ((i=0; i<k; i++)); do\n \
    \       if [[ ${arr[i]} -lt 100 ]]; then\n            sum=$((sum + ${arr[i]}))\n\
    \        fi\n    done\n    echo \"$sum\"", "    local -n arr=$1\n    local k=$2\n\
    \    local sum=0\n    for (( i=0; i<k; i++ )); do\n        if [[ ${arr[i]} -lt\
    \ 100 ]]; then\n            (( sum += arr[i] ))\n        fi\n    done\n    echo\
    \ \"$sum\"", "  local -a arr=()\n  local -i k=0\n  local -i sum=0\n  local -i\
    \ i=0\n  local -i len=0\n  local -i num=0\n  local -i num_digits=0\n  local -i\
    \ max_digits=2\n  local -i max_num=99\n  local -i min_num=10\n  local -i max_k=100\n\
    \  local -i min_k=1\n  local -i max_len=100\n  local -i min_len=1\n\n  # Parse\
    \ arguments\n  arr=($(echo \"$1\" | tr ' ' '\\n'))\n  k=$2\n\n  # Validate arguments\n\
    \  len=${#arr[@]}\n  if [[ $len -lt $min_len || $len -gt $max_len ]]; then\n \
    \   echo \"ERROR: len(arr) must be between $min_len and $max_len\"\n    exit 1\n\
    \  fi\n  if [[ $k -lt $min_k || $k -gt $max_k ]]; then\n    echo \"ERROR: k must\
    \ be between $min_k and $max_k\"\n    exit 1\n  fi\n\n  # Sum elements with at\
    \ most two digits\n  for ((i=0; i<k; i++)); do\n    num=${arr[$i]}\n    num_digits=${#num}\n\
    \    if [[ $num_digits -le $max_digits && $num -ge $min_num && $num -le $max_num\
    \ ]]; then\n      sum=$((sum + num))\n    fi\n  done\n\n  echo \"$sum\"", "  \
    \  local -n arr=$1\n    local k=$2\n    local sum=0\n    for (( i=0; i<k; i++\
    \ )); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            (( sum += arr[i]\
    \ ))\n        fi\n    done\n    echo \"$sum\"", "    local -n arr=$1\n    local\
    \ k=$2\n    local sum=0\n    for i in ${arr[@]:0:$k}; do\n        if [[ $i -lt\
    \ 100 ]]; then\n            ((sum+=i))\n        fi\n    done\n    echo $sum",
  "    local -a arr=()\n    local -i k\n    local -i i=0\n    local -i sum=0\n   \
    \ IFS=' ' read -r -a arr <<< \"$1\"\n    k=\"$2\"\n    while [ $i -lt $k ]; do\n\
    \        if [ ${#arr[$i]} -le 2 ]; then\n            sum=$((sum + arr[$i]))\n\
    \        fi\n        i=$((i + 1))\n    done\n    echo \"$sum\"", "    local sum=0\n\
    \    for i in $(echo $1 | tr \" \" \"\\n\" | head -n $2); do\n        if [[ $i\
    \ -lt 100 ]]; then\n            sum=$((sum + i))\n        fi\n    done\n    echo\
    \ $sum", "  local arr=$1\n  local k=$2\n  local sum=0\n  local i=0\n  for n in\
    \ $arr; do\n    if [[ $i -ge $k ]]; then\n      break\n    fi\n    if [[ $n -lt\
    \ 100 ]]; then\n      ((sum += n))\n    fi\n    ((i++))\n  done\n  echo $sum",
  "  local -n arr=$1\n  local k=$2\n  local sum=0\n  for i in $(seq 1 $k); do\n  \
    \  local num=$(echo $arr | cut -d' ' -f$i)\n    if [[ $num -lt 100 ]]; then\n\
    \      ((sum += num))\n    fi\n  done\n  echo $sum", "    local -a arr=(\"$@\"\
    )\n    local k=\"${arr[-1]}\"\n    unset arr[-1]\n    local sum=0\n    for i in\
    \ \"${arr[@]:0:$k}\"; do\n        if [[ $i -lt 100 ]]; then\n            ((sum+=i))\n\
    \        fi\n    done\n    echo \"$sum\"", "    local -n arr=$1\n    local k=$2\n\
    \    local sum=0\n    for ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100\
    \ ]]; then\n            ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum",
  "    local arr=($1)\n    local k=$2\n    local sum=0\n    for ((i=0; i<k; i++));\
    \ do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            sum=$((sum + ${arr[i]}))\n\
    \        fi\n    done\n    echo \"$sum\"", "  local arr=(\"$@\")\n  local k=\"\
    ${arr[-1]}\"\n  local sum=0\n  for ((i=0; i<k; i++)); do\n    local num=\"${arr[i]}\"\
    \n    if [[ \"${#num}\" -le 2 ]]; then\n      sum=$((sum + num))\n    fi\n  done\n\
    \  echo \"$sum\"", "  local arr=\"$1\"\n  local k=\"$2\"\n  local sum=0\n  local\
    \ i=0\n  for el in $arr; do\n    if [[ $i -lt $k ]]; then\n      if [[ $el -lt\
    \ 100 ]]; then\n        sum=$((sum + el))\n      fi\n    fi\n    i=$((i + 1))\n\
    \  done\n  echo \"$sum\"", "    local arr=($1)\n    local k=$2\n    local sum=0\n\
    \    for ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n   \
    \         sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum", "  local\
    \ -n arr=\"($(echo $1 | tr ' ' '\\n'))\"\n  local k=$2\n  local sum=0\n  for ((\
    \ i=0; i<k; i++ )); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      (( sum +=\
    \ arr[i] ))\n    fi\n  done\n  echo $sum", "    local -n arr=$1\n    local k=$2\n\
    \    local sum=0\n    for i in $(seq 0 $((k-1))); do\n        if [[ ${arr[$i]}\
    \ -lt 100 ]]; then\n            sum=$((sum + ${arr[$i]}))\n        fi\n    done\n\
    \    echo \"$sum\"", "    local -a arr=()\n    local k\n    IFS=' ' read -r -a\
    \ arr <<< \"$1\"\n    k=\"$2\"\n    local sum=0\n    for ((i=0; i<k; i++)); do\n\
    \        if [[ ${arr[i]} -lt 100 ]]; then\n            ((sum+=arr[i]))\n     \
    \   fi\n    done\n    echo \"$sum\"", "  local sum=0\n  local arr=($1)\n  local\
    \ k=$2\n  for ((i=0; i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n  \
    \    sum=$((sum + ${arr[i]}))\n    fi\n  done\n  echo $sum", "    local arr=($1)\n\
    \    local k=$2\n    local sum=0\n    for i in $(seq 0 $(($k - 1))); do\n    \
    \    if [[ ${arr[$i]} -lt 100 ]]; then\n            sum=$(($sum + ${arr[$i]}))\n\
    \        fi\n    done\n    echo $sum", "  local -n arr=$1\n  local k=$2\n  local\
    \ sum=0\n  for ((i=0; i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n \
    \     ((sum+=${arr[i]}))\n    fi\n  done\n  echo \"$sum\"", "    local -n arr=$1\n\
    \    local k=$2\n    local sum=0\n    for ((i=0; i<k; i++)); do\n        if [[\
    \ ${arr[i]} -lt 100 ]]; then\n            ((sum+=${arr[i]}))\n        fi\n   \
    \ done\n    echo $sum", "    local arr=($1)\n    local k=$2\n    local sum=0\n\
    \    for ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n   \
    \         sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo \"$sum\"",
  "    local -n arr=$1\n    local k=$2\n    local sum=0\n    for ((i=0; i<k; i++));\
    \ do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            ((sum += arr[i]))\n\
    \        fi\n    done\n    echo \"$sum\"", "    local arr=($1)\n    local k=$2\n\
    \    local sum=0\n    for ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100\
    \ ]]; then\n            sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo\
    \ \"$sum\"", "    local -n arr=$1\n    local k=$2\n    local sum=0\n    for i\
    \ in $(seq 0 $((k-1))); do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n      \
    \      sum=$((sum + ${arr[$i]}))\n        fi\n    done\n    echo \"$sum\"", " \
    \   local -a arr=(\"$@\")\n    local k=${arr[-1]}\n    unset arr[-1]\n    local\
    \ sum=0\n    for i in \"${arr[@]:0:$k}\"; do\n        if [[ $i -lt 100 ]]; then\n\
    \            ((sum+=i))\n        fi\n    done\n    echo \"$sum\"", "  local -n\
    \ arr=$1\n  local k=$2\n  local sum=0\n  for i in $(seq 0 $((k-1))); do\n    if\
    \ [[ ${arr[$i]} -lt 100 ]]; then\n      sum=$((sum + ${arr[$i]}))\n    fi\n  done\n\
    \  echo \"$sum\"", "    local -n arr=$1\n    local k=$2\n    local sum=0\n   \
    \ for i in $(seq 1 $k); do\n        local num=$(echo $arr | cut -d ' ' -f $i)\n\
    \        if [[ $num -lt 100 ]]; then\n            ((sum += num))\n        fi\n\
    \    done\n    echo $sum", "    local -a arr\n    local -i k\n    local -i i\n\
    \    local -i sum\n    read -ra arr <<< \"$1\"\n    k=\"$2\"\n    sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ \"${arr[i]}\" -lt 100 ]]; then\n      \
    \      ((sum+=arr[i]))\n        fi\n    done\n    echo \"$sum\"", "    local -a\
    \ arr=(\"$@\")\n    local -i k=\"${arr[-1]}\"\n    unset arr[-1]\n    local -i\
    \ sum=0\n    for ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n\
    \            ((sum+=arr[i]))\n        fi\n    done\n    echo \"$sum\"", "    local\
    \ arr=($1)\n    local k=$2\n    local sum=0\n    for ((i=0; i<k; i++)); do\n \
    \       if [[ ${arr[i]} -lt 100 ]]; then\n            sum=$((sum + ${arr[i]}))\n\
    \        fi\n    done\n    echo $sum", "    local -a arr=()\n    local -i k=0\n\
    \    local -i sum=0\n    local -i i=0\n    local -i len=0\n    local -i num=0\n\
    \    local -i num_digits=0\n    local -i max_digits=2\n    local -i max_num=99\n\
    \    local -i min_num=10\n    local -i max_len=100\n    local -i min_len=1\n \
    \   local -i min_k=1\n    local -i max_k=100\n    local -i max_sum=0\n    local\
    \ -i min_sum=0\n    local -i max_num_digits=2\n    local -i min_num_digits=1\n\
    \    local -i max_i=99\n    local -i min_i=0\n    local -i max_num=99\n    local\
    \ -i min_num=0\n\n    # Check if $1 is a space-separated list\n    if [[ ! \"\
    $1\" =~ ^[0-9]+[[:space:]]+[0-9]+$ ]]; then\n        echo \"Error: $1 is not a\
    \ space-separated list\"\n        exit 1\n    fi\n\n    # Check if $2 is an integer\n\
    \    if [[ ! \"$2\" =~ ^[0-9]+$ ]]; then\n        echo \"Error: $2 is not an integer\"\
    \n        exit 1\n    fi\n\n    # Convert $1 to an array\n    arr=($1)\n\n   \
    \ # Convert $2 to an integer\n    k=$2\n\n    # Check if k is in the range [1,\
    \ len(arr)]\n    if [[ k -lt min_k || k -gt ${#arr[@]} ]]; then\n        echo\
    \ \"Error: k is not in the range [1, len(arr)]\"\n        exit 1\n    fi\n\n \
    \   # Check if len(arr) is in the range [1, 100]\n    if [[ ${#arr[@]} -lt min_len\
    \ || ${#arr[@]} -gt max_len ]]; then\n        echo \"Error: len(arr) is not in\
    \ the range [1, 100]\"\n        exit 1\n    fi\n\n    # Check if", "    local\
    \ arr=($1)\n    local k=$2\n    local sum=0\n    for (( i=0; i<k; i++ )); do\n\
    \        if [[ ${arr[i]} -lt 100 ]]; then\n            sum=$((sum + ${arr[i]}))\n\
    \        fi\n    done\n    echo \"$sum\"", "    local -n arr=$1\n    local k=$2\n\
    \    local sum=0\n    for ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100\
    \ ]]; then\n            ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum",
  "    local -a arr=(\"$@\")\n    local -i k=${arr[-1]}\n    local -i sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum += arr[i]))\n        fi\n    done\n    echo \"$sum\"", "    local arr=($1)\n\
    \    local k=$2\n    local sum=0\n    for i in $(seq 0 $((k-1))); do\n       \
    \ if [[ ${arr[$i]} -lt 100 ]]; then\n            sum=$((sum + ${arr[$i]}))\n \
    \       fi\n    done\n    echo \"$sum\"", "  local -n arr=$1\n  local k=$2\n \
    \ local sum=0\n  for ((i=0; i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n\
    \      ((sum+=${arr[i]}))\n    fi\n  done\n  echo \"$sum\"", "    local -n arr=$1\n\
    \    local k=$2\n    local sum=0\n    for ((i=0; i<k; i++)); do\n        if [[\
    \ ${arr[i]} -lt 100 ]]; then\n            sum=$((sum + ${arr[i]}))\n        fi\n\
    \    done\n    echo \"$sum\"", "  local sum=0\n  local arr=($1)\n  local k=$2\n\
    \  for ((i=0; i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum\
    \ + ${arr[i]}))\n    fi\n  done\n  echo \"$sum\"", "    local arr=($1)\n    local\
    \ k=$2\n    local sum=0\n    for ((i=0; i<k; i++)); do\n        if [[ ${arr[i]}\
    \ -lt 100 ]]; then\n            sum=$((sum + ${arr[i]}))\n        fi\n    done\n\
    \    echo $sum", "    local -a arr=()\n    local -i k=0\n    local -i sum=0\n\
    \    local -i i=0\n    local -i len=0\n    local -i num=0\n    local -i num_digits=0\n\
    \    local -i max_digits=2\n    local -i max_num=99\n    local -i min_num=10\n\
    \    local -i max_k=0\n    local -i min_k=1\n    local -i max_len=100\n    local\
    \ -i min_len=1\n    local -i max_num_digits=2\n    local -i min_num_digits=1\n\
    \    local -i max_sum=0\n    local -i min_sum=0\n    local -i max_i=0\n    local\
    \ -i min_i=0\n    local -i max_num_digits=2\n    local -i min_num_digits=1\n \
    \   local -i max_max_digits=2\n    local -i min_max_digits=1\n    local -i max_max_num=99\n\
    \    local -i min_max_num=10\n    local -i max_min_num=99\n    local -i min_min_num=10\n\
    \    local -i max_max_k=100\n    local -i min_max_k=1\n    local -i max_min_k=100\n\
    \    local -i min_min_k=1\n    local -i max_max_len=100\n    local -i min_max_len=1\n\
    \    local -i max_min_len=100\n    local -i min_min_len=1\n    local -i max_max_num_digits=2\n\
    \    local -i min_max_num_digits=1\n    local -i max_min_num_digits=2\n    local\
    \ -i min_min_num_digits=1\n    local -i max_max_sum=0\n    local -i min_max_sum=0\n\
    \    local -i max_min_sum=0\n    local -i min_min_sum=0\n    local -i max_max_i=0",
  "    local -a arr=(\"$@\")\n    local k=${arr[-1]}\n    unset arr[-1]\n    local\
    \ sum=0\n    for ((i=0; i<k; i++)); do\n        local num=${arr[i]}\n        if\
    \ [[ $num -lt 100 ]]; then\n            sum=$((sum + num))\n        fi\n    done\n\
    \    echo \"$sum\"", "    local sum=0\n    for i in $(echo $1 | tr \" \" \"\\\
    n\" | head -n $2); do\n        if [[ $i -lt 100 ]]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum", "  local -a arr=(\"$@\")\n  local\
    \ -i k=${arr[-1]}\n  local -i sum=0\n  for ((i=0; i<k; i++)); do\n    local -i\
    \ num=${arr[i]}\n    if ((num < 100)); then\n      ((sum += num))\n    fi\n  done\n\
    \  echo \"$sum\"", "  local arr=\"$1\"\n  local k=\"$2\"\n  local sum=0\n  local\
    \ i=0\n  for n in $arr; do\n    if [ $i -ge $k ]; then\n      break\n    fi\n\
    \    if [ ${#n} -le 2 ]; then\n      sum=$((sum + n))\n    fi\n    i=$((i + 1))\n\
    \  done\n  echo \"$sum\"", "    local -a arr=(\"$@\")\n    local k=${arr[-1]}\n\
    \    local sum=0\n    for i in \"${arr[@]:0:$k}\"; do\n        if [[ $i -lt 100\
    \ ]]; then\n            ((sum+=i))\n        fi\n    done\n    echo \"$sum\"",
  "  local -a arr=(\"$@\")\n  local k=\"${arr[-1]}\"\n  unset arr[-1]\n  local sum=0\n\
    \  for i in \"${arr[@]:0:$k}\"; do\n    if [[ \"$i\" -lt 100 ]]; then\n      ((sum+=i))\n\
    \    fi\n  done\n  echo \"$sum\"", "  local -a arr=()\n  local -i k\n  local -i\
    \ sum=0\n  local -i i=0\n  local -i len\n  local -i num\n  local -i digits\n\n\
    \  IFS=' ' read -r -a arr <<< \"$1\"\n  k=$2\n  len=${#arr[@]}\n\n  while [ $i\
    \ -lt $len ] && [ $i -lt $k ]; do\n    num=${arr[$i]}\n    digits=${#num}\n  \
    \  if [ $digits -le 2 ]; then\n      sum=$((sum + num))\n    fi\n    i=$((i +\
    \ 1))\n  done\n\n  echo \"$sum\"", "    local -n arr=$1\n    local k=$2\n    local\
    \ sum=0\n    for i in ${arr[@]:0:$k}; do\n        if [[ $i -lt 100 ]]; then\n\
    \            ((sum+=i))\n        fi\n    done\n    echo $sum", "    local -n arr=$1\n\
    \    local k=$2\n    local sum=0\n    for (( i=0; i<k; i++ )); do\n        if\
    \ [[ ${arr[i]} -lt 100 ]]; then\n            (( sum += arr[i] ))\n        fi\n\
    \    done\n    echo \"$sum\"", "  local arr=($1)\n  local k=$2\n  local sum=0\n\
    \  for ((i=0; i<k; i++)); do\n    if [ ${#arr[i]} -le 2 ]; then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum", "    local arr=($1)\n    local k=$2\n\
    \    local sum=0\n    for ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100\
    \ ]]; then\n            sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo\
    \ $sum", "    local -n arr=$1\n    local k=$2\n    local sum=0\n    for i in $(seq\
    \ 1 $k); do\n        local num=${arr[$i]}\n        if [[ $num -lt 100 ]]; then\n\
    \            sum=$((sum + num))\n        fi\n    done\n    echo $sum", "    local\
    \ arr=($1)\n    local k=$2\n    local sum=0\n    for i in $(seq 0 $((k-1))); do\n\
    \        if [[ ${arr[$i]} -lt 100 ]]; then\n            sum=$((sum + ${arr[$i]}))\n\
    \        fi\n    done\n    echo \"$sum\"", "    local -n arr=$1\n    local k=$2\n\
    \    local sum=0\n    for ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100\
    \ ]]; then\n            ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum",
  "  local -a arr=(\"$@\")\n  local k=\"${arr[-1]}\"\n  local sum=0\n  for (( i=0;\
    \ i<k; i++ )); do\n    local num=\"${arr[i]}\"\n    if [[ \"${#num}\" -le 2 ]];\
    \ then\n      sum=$(( sum + num ))\n    fi\n  done\n  echo \"$sum\"", "    local\
    \ arr=($1)\n    local k=$2\n    local sum=0\n    for ((i=0; i<k; i++)); do\n \
    \       if [[ ${arr[i]} -lt 100 ]]; then\n            sum=$((sum + ${arr[i]}))\n\
    \        fi\n    done\n    echo \"$sum\"", "    local -a arr=()\n    local -i\
    \ i=0\n    local -i k=0\n    local -i sum=0\n    local -i num=0\n    local -i\
    \ num_digits=0\n    local -i max_digits=2\n    local -i max_num=99\n    local\
    \ -i min_num=10\n    local -i min_num_digits=2\n    local -i max_num_digits=2\n\
    \    local -i num_digits_limit=0\n    local -i num_limit=0\n    local -i num_limit_digits=0\n\
    \    local -i num_limit_digits_limit=0\n    local -i num_limit_digits_limit_limit=0\n\
    \    local -i num_limit_digits_limit_limit_limit=0\n    local -i num_limit_digits_limit_limit_limit_limit=0\n\
    \    local -i num_limit_digits_limit_limit_limit_limit_limit=0\n    local -i num_limit_digits_limit_limit_limit_limit_limit_limit=0\n\
    \    local -i num_limit_digits_limit_limit_limit_limit_limit_limit_limit=0\n \
    \   local -i num_limit_digits_limit_limit_limit_limit_limit_limit_limit_limit=0\n\
    \    local -i num_limit_digits_limit_limit_limit_limit_limit_limit_limit_limit_limit=0\n\
    \    local -i num_limit_digits_limit_limit_limit_limit_limit_limit_limit_limit_limit_limit=0\n\
    \    local -i num_limit_digits_limit_limit_limit_limit_limit_limit_limit_limit_limit_limit_limit=0\n\
    \    local -i num_limit_digits_limit_limit_limit_limit_limit_limit_limit_limit_limit_limit_limit_limit=0\n\
    \    local -i num_limit_digits_limit_limit_limit_limit_limit_limit_limit_limit_limit_limit_limit_limit_limit=0\n\
    \    local -i num_limit_digits_limit_limit_limit", "    local -n arr=$1\n    local\
    \ k=$2\n    local sum=0\n    for ((i=0; i<k; i++)); do\n        if [[ ${arr[i]}\
    \ -lt 100 ]]; then\n            ((sum+=${arr[i]}))\n        fi\n    done\n   \
    \ echo $sum", "  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0; i<k;\
    \ i++)); do\n    local num=${arr[i]}\n    if [[ $num -lt 100 ]]; then\n      ((sum+=num))\n\
    \    fi\n  done\n  echo $sum", "    local -a arr=()\n    local -i k=0\n    local\
    \ -i sum=0\n    local -i i=0\n    local -i len=0\n    local -i num=0\n    local\
    \ -i num_digits=0\n    local -i max_digits=2\n    arr=($1)\n    k=$2\n    len=${#arr[@]}\n\
    \    for ((i=0; i<len; i++)); do\n        num=${arr[i]}\n        num_digits=${#num}\n\
    \        if ((num_digits <= max_digits)); then\n            sum=$((sum + num))\n\
    \        fi\n        if ((i == k-1)); then\n            break\n        fi\n  \
    \  done\n    echo \"$sum\"", "    local -a arr\n    IFS=' ' read -r -a arr <<<\
    \ \"$1\"\n    local k=\"$2\"\n    local sum=0\n    for ((i=0; i<k; i++)); do\n\
    \        if [[ ${arr[i]} -lt 100 ]]; then\n            ((sum+=arr[i]))\n     \
    \   fi\n    done\n    echo \"$sum\"", "    local -n arr=$1\n    local k=$2\n \
    \   local sum=0\n    for i in $(seq 1 $k); do\n        local num=$(echo $arr |\
    \ cut -d \" \" -f $i)\n        if [ ${#num} -le 2 ]; then\n            sum=$((sum\
    \ + num))\n        fi\n    done\n    echo $sum", "    local -n arr=$1\n    local\
    \ k=$2\n    local sum=0\n    for i in $(seq 1 $k); do\n        local num=$(echo\
    \ $arr | cut -d ' ' -f $i)\n        if [ ${#num} -le 2 ]; then\n            sum=$((sum\
    \ + num))\n        fi\n    done\n    echo $sum", "    local arr=($1)\n    local\
    \ k=$2\n    local sum=0\n    for ((i=0; i<k; i++)); do\n        if [[ ${arr[i]}\
    \ -lt 100 ]]; then\n            sum=$((sum + ${arr[i]}))\n        fi\n    done\n\
    \    echo \"$sum\"", "    local -a arr\n    local -i k\n    IFS=\" \" read -r\
    \ -a arr <<< \"$1\"\n    k=\"$2\"\n    local -i sum=0\n    local -i i\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ \"${arr[i]}\" =~ ^[0-9]{1,2}$ ]]; then\n\
    \            sum+=\"${arr[i]}\"\n        fi\n    done\n    echo \"$sum\"", " \
    \ local sum=0\n  local i=0\n  for n in $1; do\n    if [[ $i -lt $2 ]]; then\n\
    \      if [[ $n -lt 100 ]]; then\n        sum=$((sum + n))\n      fi\n    fi\n\
    \    i=$((i + 1))\n  done\n  echo \"$sum\"", "    local -a arr=()\n    local -i\
    \ k=0\n    local -i sum=0\n    local -i i=0\n    local -i len=0\n    local -i\
    \ num=0\n    local -i num_digits=0\n    local -i num_digits_max=2\n    local -i\
    \ num_digits_min=1\n    local -i num_digits_max_pow=10\n    local -i num_digits_min_pow=1\n\
    \    local -i num_digits_max_pow_prev=1\n    local -i num_digits_min_pow_prev=1\n\
    \    local -i num_digits_max_pow_next=10\n    local -i num_digits_min_pow_next=10\n\
    \    local -i num_digits_max_pow_next_next=100\n    local -i num_digits_min_pow_next_next=10\n\
    \    local -i num_digits_max_pow_next_next_next=1000\n    local -i num_digits_min_pow_next_next_next=100\n\
    \    local -i num_digits_max_pow_next_next_next_next=10000\n    local -i num_digits_min_pow_next_next_next_next=1000\n\
    \    local -i num_digits_max_pow_next_next_next_next_next=100000\n    local -i\
    \ num_digits_min_pow_next_next_next_next_next=10000\n    local -i num_digits_max_pow_next_next_next_next_next_next=1000000\n\
    \    local -i num_digits_min_pow_next_next_next_next_next_next=100000\n    local\
    \ -i num_digits_max_pow_next_next_next_next_next_next_next=10000000\n    local\
    \ -i num_digits_min_pow_next_next_next_next_next_next_next=1000000\n    local\
    \ -i num_digits_max_pow_next_next", "    local arr=\"$1\"\n    local k=\"$2\"\n\
    \    local sum=0\n    local i=0\n    while [ $i -lt $k ]; do\n        local num=${arr[$i]}\n\
    \        if [ ${#num} -le 2 ]; then\n            sum=$((sum + num))\n        fi\n\
    \        i=$((i + 1))\n    done\n    echo \"$sum\"", "    local -a arr=(\"$@\"\
    )\n    local k=${arr[-1]}\n    unset arr[-1]\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -lt 100 ]]; then\n            sum=$((sum + i))\n\
    \        fi\n    done\n    echo \"$sum\"", "  local -n arr=$1\n  local k=$2\n\
    \  local sum=0\n  for i in $(seq 0 $((k-1))); do\n    if [[ ${arr[$i]} -lt 100\
    \ ]]; then\n      sum=$((sum + ${arr[$i]}))\n    fi\n  done\n  echo \"$sum\"",
  "    local -n arr=$1\n    local k=$2\n    local sum=0\n    for ((i=0; i<k; i++));\
    \ do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            ((sum+=${arr[i]}))\n\
    \        fi\n    done\n    echo $sum", "    local -n arr=$1\n    local k=$2\n\
    \    local sum=0\n    for (( i=0; i<k; i++ )); do\n        if [[ ${arr[i]} -lt\
    \ 100 ]]; then\n            (( sum += arr[i] ))\n        fi\n    done\n    echo\
    \ \"$sum\"", "  local -a arr=(\"$@\")\n  local k=\"${arr[-1]}\"\n  unset arr[-1]\n\
    \  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ \"$i\" -lt 100 ]]; then\n\
    \      sum=$((sum + i))\n    fi\n  done\n  echo \"$sum\"", "    local -n arr=\"\
    ($(echo $1 | tr ' ' '\\n'))\"\n    local k=\"$2\"\n    local sum=0\n    for ((i=0;\
    \ i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            ((sum+=${arr[i]}))\n\
    \        fi\n    done\n    echo \"$sum\"", "    local -a arr\n    local -i k\n\
    \    local -i i\n    local -i sum\n    IFS=' ' read -r -a arr <<< \"$1\"\n   \
    \ k=\"$2\"\n    sum=0\n    for ((i=0; i<k; i++)); do\n        if [[ ${#arr[i]}\
    \ -le 2 ]]; then\n            sum=$((sum + arr[i]))\n        fi\n    done\n  \
    \  echo \"$sum\"", "    local arr=\"$1\"\n    local k=\"$2\"\n    local sum=0\n\
    \    local i=0\n    for num in $arr; do\n        if [[ $i -lt $k ]]; then\n  \
    \          if [[ $num -lt 100 ]]; then\n                sum=$((sum + num))\n \
    \           fi\n        fi\n        i=$((i + 1))\n    done\n    echo \"$sum\"",
  "    local sum=0\n    local arr=($1)\n    local k=$2\n    for ((i=0; i<k; i++));\
    \ do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            sum=$((sum + ${arr[i]}))\n\
    \        fi\n    done\n    echo $sum", "  local arr=($1)\n  local k=$2\n  local\
    \ sum=0\n  for ((i=0; i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n \
    \     ((sum+=${arr[i]}))\n    fi\n  done\n  echo $sum", "    local arr=\"$1\"\n\
    \    local k=\"$2\"\n    local sum=0\n    local i=0\n    for num in $arr; do\n\
    \        if [[ $i -lt $k ]]; then\n            if [[ $num -lt 100 ]]; then\n \
    \               sum=$((sum + num))\n            fi\n        fi\n        i=$((i\
    \ + 1))\n    done\n    echo \"$sum\"", "  local arr=($1)\n  local k=$2\n  local\
    \ sum=0\n  for i in $(seq 0 $((k-1))); do\n    if [[ ${arr[$i]} -lt 100 ]]; then\n\
    \      sum=$((sum + ${arr[$i]}))\n    fi\n  done\n  echo \"$sum\"", "    local\
    \ arr=$1\n    local k=$2\n    local sum=0\n    for i in $(seq 1 $k); do\n    \
    \    local num=$(echo $arr | cut -d \" \" -f $i)\n        if [[ $num -lt 100 ]];\
    \ then\n            sum=$((sum + num))\n        fi\n    done\n    echo $sum",
  "    local arr=($1)\n    local k=$2\n    local sum=0\n    for ((i=0; i<k; i++));\
    \ do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            sum=$((sum + ${arr[i]}))\n\
    \        fi\n    done\n    echo $sum", "  local arr=($1)\n  local k=$2\n  local\
    \ sum=0\n  for i in $(seq 0 $((k-1))); do\n    if [[ ${arr[$i]} -lt 100 ]]; then\n\
    \      sum=$((sum + ${arr[$i]}))\n    fi\n  done\n  echo \"$sum\"", "  local arr=($1)\n\
    \  local k=$2\n  local sum=0\n  for ((i=0; i<k; i++)); do\n    if [[ ${arr[i]}\
    \ -lt 100 ]]; then\n      sum=$((sum + ${arr[i]}))\n    fi\n  done\n  echo $sum",
  "    local -a arr=(\"$@\")\n    local k=${arr[-1]}\n    unset arr[-1]\n    local\
    \ sum=0\n    for ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n\
    \            ((sum+=${arr[i]}))\n        fi\n    done\n    echo \"$sum\"", " \
    \   local -a arr=(\"$@\")\n    local k=${arr[-1]}\n    unset arr[-1]\n    local\
    \ sum=0\n    for ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n\
    \            ((sum+=${arr[i]}))\n        fi\n    done\n    echo \"$sum\"", " \
    \   local -a arr=(\"$@\")\n    local k=${arr[-1]}\n    unset arr[-1]\n    local\
    \ sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -lt 100 ]]; then\n \
    \           ((sum += i))\n        fi\n    done\n    echo \"$sum\"", "    local\
    \ -a arr=(\"$@\")\n    local k=${arr[-1]}\n    unset arr[-1]\n    local sum=0\n\
    \    for i in \"${arr[@]:0:$k}\"; do\n        if [[ $i -lt 100 ]]; then\n    \
    \        ((sum += i))\n        fi\n    done\n    echo \"$sum\"", "    local -n\
    \ arr=$1\n    local k=$2\n    local sum=0\n    for ((i=0; i<k; i++)); do\n   \
    \     if [[ ${arr[i]} -lt 100 ]]; then\n            ((sum+=${arr[i]}))\n     \
    \   fi\n    done\n    echo $sum", "    local -n arr=$1\n    local k=$2\n    local\
    \ sum=0\n    for ((i=0; i<k; i++)); do\n        local num=${arr[i]}\n        if\
    \ [[ $num -lt 100 ]]; then\n            sum=$((sum + num))\n        fi\n    done\n\
    \    echo $sum", "    local -a arr=()\n    local -i k=0\n    local -i sum=0\n\
    \    local -i i=0\n    local -i len=0\n    local -i num=0\n    local -i num_len=0\n\
    \    local -i num_len_max=2\n    local -i num_len_min=1\n    local -i num_len_max_pow=10\n\
    \    local -i num_len_min_pow=1\n    local -i num_len_max_pow_10=100\n    local\
    \ -i num_len_min_pow_10=10\n    local -i num_len_max_pow_100=1000\n    local -i\
    \ num_len_min_pow_100=100\n    local -i num_len_max_pow_1000=10000\n    local\
    \ -i num_len_min_pow_1000=1000\n    local -i num_len_max_pow_10000=100000\n  \
    \  local -i num_len_min_pow_10000=10000\n    local -i num_len_max_pow_100000=1000000\n\
    \    local -i num_len_min_pow_100000=100000\n    local -i num_len_max_pow_1000000=10000000\n\
    \    local -i num_len_min_pow_1000000=1000000\n    local -i num_len_max_pow_10000000=100000000\n\
    \    local -i num_len_min_pow_10000000=10000000\n    local -i num_len_max_pow_100000000=1000000000\n\
    \    local -i num_len_min_pow_100000000=100000000\n    local -i num_len_max_pow_1000000000=10000000000\n\
    \    local -i num_len_min_pow_1000000000=1000000000\n    local -i num_len_max_pow_10000000000=100000000000\n\
    \    local -i num_len_min_pow_10000000000=10000000000\n    local -i num_len_max_pow_100000000000=1000000000000\n\
    \    local -i", "    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ (( i=0; i<$k; i++ )); do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n      \
    \      (( sum += ${arr[$i]} ))\n        fi\n    done\n    echo $sum", "  local\
    \ -n arr=$1\n  local k=$2\n  local sum=0\n  for ((i=0; i<k; i++)); do\n    if\
    \ [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum + ${arr[i]}))\n    fi\n  done\n\
    \  echo \"$sum\"", "    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum", "    local arr=($1)\n\
    \    local k=$2\n    local sum=0\n    for (( i=0; i<k; i++ )); do\n        if\
    \ [[ ${arr[i]} -lt 100 ]]; then\n            sum=$((sum + ${arr[i]}))\n      \
    \  fi\n    done\n    echo $sum", "    local -n arr=$1\n    local k=$2\n    local\
    \ sum=0\n    for ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n\
    \            ((sum+=${arr[i]}))\n        fi\n    done\n    echo \"$sum\"", " \
    \ local -a arr\n  local k\n  local sum\n  arr=($1)\n  k=$2\n  sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n\
    \    fi\n  done\n  echo \"$sum\"", "  local -a arr=(\"$@\")\n  local k=${arr[-1]}\n\
    \  unset arr[-1]\n  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ ${#i}\
    \ -le 2 ]]; then\n      sum=$((sum + i))\n    fi\n  done\n  echo \"$sum\"", " \
    \   local arr=($1)\n    local k=$2\n    local sum=0\n    for ((i=0; i<k; i++));\
    \ do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            sum=$((sum + ${arr[i]}))\n\
    \        fi\n    done\n    echo \"$sum\"", "    # Write your code here\n    local\
    \ arr=($1)\n    local k=$2\n    local sum=0\n    for ((i=0; i<k; i++)); do\n \
    \       if [[ ${arr[i]} -lt 100 ]]; then\n            sum=$((sum + ${arr[i]}))\n\
    \        fi\n    done\n    echo $sum", "    local arr=($1)\n    local k=$2\n \
    \   local sum=0\n    for ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100\
    \ ]]; then\n            sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo\
    \ $sum", "    local -a arr=(\"$@\")\n    local -i k=\"${arr[-1]}\"\n    unset\
    \ arr[-1]\n    local -i sum=0\n    for ((i=0; i<k; i++)); do\n        if [[ \"\
    ${arr[i]}\" =~ ^[0-9]{1,2}$ ]]; then\n            sum+=\"${arr[i]}\"\n       \
    \ fi\n    done\n    echo \"$sum\"", "    local -n arr=$1\n    local k=$2\n   \
    \ local sum=0\n    for (( i=0; i<k; i++ )); do\n        if [[ ${arr[i]} -lt 100\
    \ ]]; then\n            (( sum += arr[i] ))\n        fi\n    done\n    echo \"\
    $sum\"", "    local -n arr=$1\n    local k=$2\n    local sum=0\n    for ((i=0;\
    \ i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            ((sum+=${arr[i]}))\n\
    \        fi\n    done\n    echo \"$sum\"", "  local sum=0\n  local arr=($1)\n\
    \  for ((i=0; i<$2; i++)); do\n    if [[ ${arr[$i]} -lt 100 ]]; then\n      sum=$((sum\
    \ + ${arr[$i]}))\n    fi\n  done\n  echo \"$sum\"", "  local -n arr=$1\n  local\
    \ k=$2\n  local sum=0\n  for ((i=0; i<k; i++)); do\n    if [[ ${arr[i]} -lt 100\
    \ ]]; then\n      ((sum+=${arr[i]}))\n    fi\n  done\n  echo \"$sum\"", "  local\
    \ -n arr=$1\n  local k=$2\n  local sum=0\n  local i=0\n  while [ $i -lt $k ];\
    \ do\n    if [ ${#arr[$i]} -le 2 ]; then\n      sum=$((sum + arr[$i]))\n    fi\n\
    \    i=$((i + 1))\n  done\n  echo \"$sum\"", "  local -n arr=$1\n  local k=$2\n\
    \  local sum=0\n  local i=0\n  while [[ $i -lt $k ]]; do\n    local num=${arr[$i]}\n\
    \    if [[ $num -lt 100 ]]; then\n      ((sum += num))\n    fi\n    ((i++))\n\
    \  done\n  echo \"$sum\"", "    local -n arr=\"($(echo $1 | tr ' ' '\\n'))\"\n\
    \    local k=$2\n    local sum=0\n    for ((i=0; i<k; i++)); do\n        if [[\
    \ ${arr[i]} -lt 100 ]]; then\n            ((sum+=${arr[i]}))\n        fi\n   \
    \ done\n    echo $sum", "  local arr=($1)\n  local k=$2\n  local sum=0\n  for\
    \ ((i=0; i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum\
    \ + ${arr[i]}))\n    fi\n  done\n  echo $sum", "    local arr=($1)\n    local\
    \ k=$2\n    local sum=0\n    for ((i=0; i<k; i++)); do\n        if [[ ${arr[i]}\
    \ -lt 100 ]]; then\n            sum=$((sum + ${arr[i]}))\n        fi\n    done\n\
    \    echo $sum", "  local -n arr=$1\n  local k=$2\n  local sum=0\n  for i in $(seq\
    \ 1 $k); do\n    if [[ ${arr[$i]} -lt 100 ]]; then\n      ((sum += ${arr[$i]}))\n\
    \    fi\n  done\n  echo $sum", "  local -n arr=$1\n  local k=$2\n  local sum=0\n\
    \  for ((i=0; i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n\
    \    fi\n  done\n  echo \"$sum\"", "  local -n arr=$1\n  local k=$2\n  local sum=0\n\
    \  for ((i=0; i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo \"$sum\"", "  local arr=\"$1\"\n  local k=\"\
    $2\"\n  local sum=0\n  local i=0\n  for num in $arr; do\n    if [ $i -ge $k ];\
    \ then\n      break\n    fi\n    if [ ${#num} -le 2 ]; then\n      sum=$((sum\
    \ + num))\n    fi\n    i=$((i + 1))\n  done\n  echo \"$sum\"", "    local arr=($1)\n\
    \    local k=$2\n    local sum=0\n    for ((i=0; i<k; i++)); do\n        if [[\
    \ ${arr[i]} -lt 100 ]]; then\n            ((sum += ${arr[i]}))\n        fi\n \
    \   done\n    echo \"$sum\"", "  local -n arr=$1\n  local k=$2\n  local sum=0\n\
    \  for ((i=0; i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n\
    \    fi\n  done\n  echo \"$sum\"", "    local -n arr=$1\n    local k=$2\n    local\
    \ sum=0\n    for i in $(seq 1 $k); do\n        local num=$(echo $arr | cut -d'\
    \ ' -f$i)\n        if [[ $num -lt 100 ]]; then\n            sum=$((sum + num))\n\
    \        fi\n    done\n    echo $sum", "    local arr=($1)\n    local k=$2\n \
    \   local sum=0\n    for ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100\
    \ ]]; then\n            sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo\
    \ \"$sum\"", "    local -a arr=()\n    local -i k=0\n    local -i sum=0\n    local\
    \ -i i=0\n    local -i j=0\n    local -i len=0\n    local -i num=0\n    local\
    \ -i num_digits=0\n    local -i max_digits=2\n    local -i max_num=99\n    local\
    \ -i max_num_digits=2\n    local -i max_num_digits_plus_one=3\n    local -i max_num_digits_plus_two=4\n\
    \    local -i max_num_digits_plus_three=5\n    local -i max_num_digits_plus_four=6\n\
    \    local -i max_num_digits_plus_five=7\n    local -i max_num_digits_plus_six=8\n\
    \    local -i max_num_digits_plus_seven=9\n    local -i max_num_digits_plus_eight=10\n\
    \    local -i max_num_digits_plus_nine=11\n    local -i max_num_digits_plus_ten=12\n\
    \    local -i max_num_digits_plus_eleven=13\n    local -i max_num_digits_plus_twelve=14\n\
    \    local -i max_num_digits_plus_thirteen=15\n    local -i max_num_digits_plus_fourteen=16\n\
    \    local -i max_num_digits_plus_fifteen=17\n    local -i max_num_digits_plus_sixteen=18\n\
    \    local -i max_num_digits_plus_seventeen=19\n    local -i max_num_digits_plus_eighteen=20\n\
    \    local -i max_num_digits_plus_nineteen=21\n    local -i max_num_digits_plus_twenty=22\n\
    \    local -i max_num_digits_plus_twenty_one=23\n    local -i max_num_digits_plus_twenty_two=24\n\
    \    local -i max_num_digits_plus_twenty_three=25", "    local -n arr=$1\n   \
    \ local k=$2\n    local sum=0\n    local i=0\n    while (( i < k )); do\n    \
    \    if (( arr[i] < 100 )); then\n            (( sum += arr[i] ))\n        fi\n\
    \        (( i++ ))\n    done\n    echo \"$sum\"", "    local -a arr\n    IFS='\
    \ ' read -r -a arr <<< \"$1\"\n    local k=$2\n    local sum=0\n    for ((i=0;\
    \ i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            ((sum+=arr[i]))\n\
    \        fi\n    done\n    echo \"$sum\"", "    local sum=0\n    for i in $(echo\
    \ $1 | tr \" \" \"\\n\" | head -n $2); do\n        if [[ $i -lt 100 ]]; then\n\
    \            sum=$((sum + i))\n        fi\n    done\n    echo $sum", "    local\
    \ arr=($1)\n    local k=$2\n    local sum=0\n    for ((i=0; i<k; i++)); do\n \
    \       if [[ ${arr[i]} -lt 100 ]]; then\n            sum=$((sum + ${arr[i]}))\n\
    \        fi\n    done\n    echo $sum", "  local arr=(\"$@\")\n  local k=${arr[-1]}\n\
    \  unset arr[-1]\n  local sum=0\n  for ((i=0; i<k; i++)); do\n    if [[ ${arr[i]}\
    \ -lt 100 ]]; then\n      sum=$((sum + arr[i]))\n    fi\n  done\n  echo $sum",
  "    local -n arr=$1\n    local k=$2\n    local sum=0\n    for ((i=0; i<k; i++));\
    \ do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            ((sum+=${arr[i]}))\n\
    \        fi\n    done\n    echo $sum", "  local sum=0\n  local arr=(\"$@\")\n\
    \  for ((i=0; i<$2; i++)); do\n    if [[ ${arr[$i]} -lt 100 ]]; then\n      sum=$((sum\
    \ + ${arr[$i]}))\n    fi\n  done\n  echo \"$sum\"", "    local -a arr=()\n   \
    \ local -i k=0\n    local -i sum=0\n    local -i i=0\n    local -i len=0\n   \
    \ local -i num=0\n    local -i num_digits=0\n    local -i max_digits=2\n    local\
    \ -i max_num=99\n    local -i min_num=10\n    local -i min_num_digits=2\n    local\
    \ -i max_num_digits=2\n    local -i max_sum=0\n    local -i min_sum=0\n    local\
    \ -i max_sum_digits=0\n    local -i min_sum_digits=0\n    local -i max_sum_num_digits=0\n\
    \    local -i min_sum_num_digits=0\n    local -i max_sum_num=0\n    local -i min_sum_num=0\n\
    \    local -i max_sum_num_digits_diff=0\n    local -i min_sum_num_digits_diff=0\n\
    \    local -i max_sum_num_digits_diff_abs=0\n    local -i min_sum_num_digits_diff_abs=0\n\
    \    local -i max_sum_num_digits_diff_abs_max=0\n    local -i min_sum_num_digits_diff_abs_max=0\n\
    \    local -i max_sum_num_digits_diff_abs_min=0\n    local -i min_sum_num_digits_diff_abs_min=0\n\
    \    local -i max_sum_num_digits_diff_abs_max_digits=0\n    local -i min_sum_num_digits_diff_abs_max_digits=0\n\
    \    local -i max_sum_num_digits_diff_abs_min_digits=0\n    local -i min_sum_num_digits_diff_abs_min_digits=0\n\
    \    local -i max_sum_num_digits_diff_abs_max_num_digits=0\n    local -i min_sum_num_digits_diff_abs_",
  "    local -n arr=$1\n    local k=$2\n    local sum=0\n    for i in $(seq 1 $k);\
    \ do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n            sum=$((sum + ${arr[$i]}))\n\
    \        fi\n    done\n    echo $sum"]
stop_tokens:
- "\n}"

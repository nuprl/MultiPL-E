name: HumanEval_122_add_elements
language: sh
prompt: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer k,\
  \ return\n# the sum of the elements with at most two digits from the first k elements\
  \ of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8 9\" \"4\")\n\
  # \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k <= len(arr)\n#\n\
  # $1 is a space-separated list\n# $2 is an integer\nadd_elements() {\n"
tests: "}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n \
  \   [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
  \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6\
  \ 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"\
  4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
completions: ["    local -a arr=()\n    local -i k=0\n    local -i sum=0\n    IFS='\
    \ ' read -r -a arr <<< \"$1\"\n    k=$2\n    for ((i=0; i<k; i++)); do\n     \
    \   if [[ ${arr[i]} -lt 100 ]]; then\n            ((sum+=arr[i]))\n        fi\n\
    \    done\n    echo \"$sum\"", "  local -n arr=$1\n  local k=$2\n  local sum=0\n\
    \  for i in $(seq 1 $k); do\n    local num=$(echo $arr | cut -d \" \" -f $i)\n\
    \    if [[ $num -lt 100 ]]; then\n      ((sum += num))\n    fi\n  done\n  echo\
    \ $sum", "    local arr=($1)\n    local k=$2\n    local sum=0\n    for ((i=0;\
    \ i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            sum=$((sum\
    \ + ${arr[i]}))\n        fi\n    done\n    echo \"$sum\"", "    local arr=($1)\n\
    \    local k=$2\n    local sum=0\n    for ((i=0; i<k; i++)); do\n        if [[\
    \ ${arr[i]} -lt 100 ]]; then\n            sum=$((sum + ${arr[i]}))\n        fi\n\
    \    done\n    echo \"$sum\"", "  local -n arr=$1\n  local k=$2\n  local sum=0\n\
    \  for ((i=0; i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum\
    \ += arr[i]))\n    fi\n  done\n  echo \"$sum\"", "    local -a arr=(\"$@\")\n\
    \    local k=${arr[-1]}\n    unset arr[-1]\n    local sum=0\n    for i in ${arr[@]};\
    \ do\n        if [[ ${#i} -le 2 ]]; then\n            (( sum += i ))\n       \
    \ fi\n        (( k-- ))\n        if [[ $k -eq 0 ]]; then\n            break\n\
    \        fi\n    done\n    echo \"$sum\"", "    local -n arr=$1\n    local k=$2\n\
    \    local sum=0\n    for i in $(seq 0 $((k-1))); do\n        local n=$(echo $arr\
    \ | cut -d' ' -f$((i+1)))\n        if [[ $n -lt 100 ]]; then\n            sum=$((sum+n))\n\
    \        fi\n    done\n    echo $sum", "    local arr=\"$1\"\n    local k=\"$2\"\
    \n    local sum=0\n    local i=0\n    local arr_len=\"$(echo \"$arr\" | wc -w)\"\
    \n    while [ \"$i\" -lt \"$k\" ] && [ \"$i\" -lt \"$arr_len\" ]; do\n       \
    \ local num=\"$(echo \"$arr\" | cut -d ' ' -f \"$((i + 1))\")\"\n        if [\
    \ \"${#num}\" -le 2 ]; then\n            sum=$((sum + num))\n        fi\n    \
    \    i=$((i + 1))\n    done\n    echo \"$sum\"", "  local arr=(\"$@\")\n  local\
    \ k=${arr[-1]}\n  local sum=0\n  for ((i=0; i<k; i++)); do\n    local num=${arr[i]}\n\
    \    if [[ $num -lt 100 ]]; then\n      ((sum+=num))\n    fi\n  done\n  echo \"\
    $sum\"", "    local arr=($1)\n    local k=$2\n    local sum=0\n    for i in $(seq\
    \ 0 $((k-1))); do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n            sum=$((sum\
    \ + ${arr[$i]}))\n        fi\n    done\n    echo \"$sum\"", "    local -n arr=\"\
    ($(echo $1 | tr ' ' '\\n'))\"\n    local k=$2\n    local sum=0\n    for ((i=0;\
    \ i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            ((sum+=${arr[i]}))\n\
    \        fi\n    done\n    echo $sum", "  local arr=\"$1\"\n  local k=\"$2\"\n\
    \  local sum=0\n  local i=0\n  for num in $arr; do\n    if [ $i -lt $k ]; then\n\
    \      if [ ${#num} -le 2 ]; then\n        sum=$((sum + num))\n      fi\n    fi\n\
    \    i=$((i + 1))\n  done\n  echo \"$sum\"", "  local arr=\"$1\"\n  local k=\"\
    $2\"\n  local sum=0\n  local i=0\n  for n in $arr; do\n    if [ $i -lt $k ]; then\n\
    \      if [ ${#n} -le 2 ]; then\n        sum=$((sum + n))\n      fi\n    fi\n\
    \    i=$((i + 1))\n  done\n  echo \"$sum\"", "  local -a arr\n  local k\n  local\
    \ sum\n  local i\n  local n\n  arr=($1)\n  k=$2\n  sum=0\n  for ((i=0; i<k; i++));\
    \ do\n    n=${arr[i]}\n    if [[ $n -lt 100 ]]; then\n      sum=$((sum + n))\n\
    \    fi\n  done\n  echo \"$sum\"", "  local arr=($1)\n  local k=$2\n  local sum=0\n\
    \  for ((i=0; i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n\
    \    fi\n  done\n  echo $sum", "    local arr=($1)\n    local k=$2\n    local\
    \ sum=0\n    for i in $(seq 0 $((k-1))); do\n        if [ ${#arr[$i]} -le 2 ];\
    \ then\n            sum=$((sum + arr[$i]))\n        fi\n    done\n    echo $sum",
  "    local -a arr=(\"$@\")\n    local k=${arr[-1]}\n    unset arr[-1]\n    local\
    \ sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -lt 100 ]]; then\n \
    \           ((sum += i))\n        fi\n    done\n    echo \"$sum\"", "    local\
    \ sum=0\n    for i in $(echo $1 | tr \" \" \"\\n\" | head -n $2); do\n       \
    \ if [[ $i -lt 100 ]]; then\n            sum=$((sum + i))\n        fi\n    done\n\
    \    echo $sum", "    local arr=$1\n    local k=$2\n    local sum=0\n    local\
    \ i=0\n    for num in $arr; do\n        if [[ $i -eq $k ]]; then\n           \
    \ break\n        fi\n        if [[ $num -lt 100 ]]; then\n            sum=$((sum\
    \ + num))\n        fi\n        i=$((i + 1))\n    done\n    echo $sum", "    local\
    \ -a arr=(\"$@\")\n    local k=${arr[-1]}\n    unset arr[-1]\n    local sum=0\n\
    \    for i in \"${arr[@]}\"; do\n        if [ ${#i} -le 2 ]; then\n          \
    \  sum=$((sum + i))\n        fi\n    done\n    echo \"$sum\""]
stop_tokens:
- "\n}"

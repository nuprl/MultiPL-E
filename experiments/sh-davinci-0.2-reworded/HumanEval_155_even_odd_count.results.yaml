language: sh
name: HumanEval_155_even_odd_count
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  if [[ $number =~ ^-?[0-9]+$ ]]; then\n    while [ $number\
    \ -ne 0 ]; do\n      if [ $((number % 10)) -eq 0 ] || [ $((number % 10)) -eq 2\
    \ ] || [ $((number % 10)) -eq 4 ] || [ $((number % 10)) -eq 6 ] || [ $((number\
    \ % 10)) -eq 8 ]; then\n        even_count=$((even_count + 1))\n      else\n \
    \       odd_count=$((odd_count + 1))\n      fi\n      number=$((number / 10))\n\
    \    done\n  fi\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local -i even=0\n  local -i odd=0\n\
    \  local -i number=${1}\n  while [[ ${number} -ne 0 ]]; do\n    local -i digit=${number}%10\n\
    \    if [[ ${digit}%2 -eq 0 ]]; then\n      ((even++))\n    else\n      ((odd++))\n\
    \    fi\n    ((number/=10))\n  done\n  echo \"[\\\"${even}\\\", \\\"${odd}\\\"\
    ]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\"\
    \ ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even=0\n    local odd=0\n\
    \    local num=$1\n    local digit\n    while [ $num -gt 0 ]; do\n        digit=$((num\
    \ % 10))\n        if [ $((digit % 2)) -eq 0 ]; then\n            even=$((even\
    \ + 1))\n        else\n            odd=$((odd + 1))\n        fi\n        num=$((num\
    \ / 10))\n    done\n    echo \"[\\\"$even\\\", \\\"$odd\\\"]\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count=0\n    local odd_count=0\n\
    \    local num=$1\n    while [ $num -ne 0 ]; do\n        local digit=$((num %\
    \ 10))\n        if [ $((digit % 2)) -eq 0 ]; then\n            even_count=$((even_count\
    \ + 1))\n        else\n            odd_count=$((odd_count + 1))\n        fi\n\
    \        num=$((num / 10))\n    done\n    echo \"[\\\"$even_count\\\", \\\"$odd_count\\\
    \"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local digit\n  local number=$1\n  while [[ $number -ne 0 ]]; do\n    digit=$((number\
    \ % 10))\n    if [[ $((digit % 2)) -eq 0 ]]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    number=$((number\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even=0\n  local odd=0\n  local\
    \ num=$1\n  local digit\n  while [[ $num -gt 0 ]]; do\n    digit=$((num % 10))\n\
    \    if [[ $((digit % 2)) -eq 0 ]]; then\n      even=$((even + 1))\n    else\n\
    \      odd=$((odd + 1))\n    fi\n    num=$((num / 10))\n  done\n  echo \"[\\\"\
    $even\\\", \\\"$odd\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count=0\n    local odd_count=0\n\
    \    local num=$1\n    local digit\n    while [ $num -gt 0 ]; do\n        digit=$((num\
    \ % 10))\n        if [ $((digit % 2)) -eq 0 ]; then\n            even_count=$((even_count\
    \ + 1))\n        else\n            odd_count=$((odd_count + 1))\n        fi\n\
    \        num=$((num / 10))\n    done\n    echo \"[\\\"$even_count\\\", \\\"$odd_count\\\
    \"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local num=$1\n    local even_count=0\n\
    \    local odd_count=0\n    for (( i=0; i<${#num}; i++ )); do\n        local digit=${num:$i:1}\n\
    \        if [[ $digit =~ ^[0-9]+$ ]]; then\n            if [[ $(( digit % 2 ))\
    \ -eq 0 ]]; then\n                (( even_count++ ))\n            else\n     \
    \           (( odd_count++ ))\n            fi\n        fi\n    done\n    echo\
    \ \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local num=$1\n    local even_count=0\n\
    \    local odd_count=0\n    local digit\n    while [ $num -ne 0 ]; do\n      \
    \  digit=$((num % 10))\n        if [ $((digit % 2)) -eq 0 ]; then\n          \
    \  even_count=$((even_count + 1))\n        else\n            odd_count=$((odd_count\
    \ + 1))\n        fi\n        num=$((num / 10))\n    done\n    echo \"[\\\"$even_count\\\
    \", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local num=$1\n    local even_count=0\n\
    \    local odd_count=0\n    local digit\n    for ((i=0; i<${#num}; i++)); do\n\
    \        digit=${num:$i:1}\n        if [[ $digit -eq 0 || $digit -eq 2 || $digit\
    \ -eq 4 || $digit -eq 6 || $digit -eq 8 ]]; then\n            ((even_count++))\n\
    \        else\n            ((odd_count++))\n        fi\n    done\n    echo \"\
    [\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count=0\n    local odd_count=0\n\
    \    local num=$1\n    local digit\n    while [ $num -gt 0 ]; do\n        digit=$((num\
    \ % 10))\n        if [ $((digit % 2)) -eq 0 ]; then\n            even_count=$((even_count\
    \ + 1))\n        else\n            odd_count=$((odd_count + 1))\n        fi\n\
    \        num=$((num / 10))\n    done\n    echo \"[\\\"$even_count\\\", \\\"$odd_count\\\
    \"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  local digit\n  while [[ $number -ne 0 ]]; do\n    digit=$((number\
    \ % 10))\n    if [[ $((digit % 2)) -eq 0 ]]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    number=$((number\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count=0\n    local odd_count=0\n\
    \    for (( i=0; i<${#1}; i++ )); do\n        if [[ ${1:$i:1} =~ ^[0-9]+$ ]];\
    \ then\n            if [[ $((${1:$i:1} % 2)) -eq 0 ]]; then\n                ((even_count++))\n\
    \            else\n                ((odd_count++))\n            fi\n        fi\n\
    \    done\n    echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  while [ $number -ne 0 ]; do\n    local digit=$((number %\
    \ 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    number=$((number\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count=0\n    local odd_count=0\n\
    \    local number=$1\n    local digit\n    while [ $number -ne 0 ]; do\n     \
    \   digit=$((number % 10))\n        if [ $((digit % 2)) -eq 0 ]; then\n      \
    \      even_count=$((even_count + 1))\n        else\n            odd_count=$((odd_count\
    \ + 1))\n        fi\n        number=$((number / 10))\n    done\n    echo \"[\\\
    \"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local num=\"$1\"\n  local digit\n  while [ \"$num\" -gt 0 ]; do\n    digit=$((num\
    \ % 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    num=$((num\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local num=$1\n  if [[ $num =~ ^-?[0-9]+$ ]]; then\n    while [ $num -ne 0 ];\
    \ do\n      local digit=$((num % 10))\n      if [ $((digit % 2)) -eq 0 ]; then\n\
    \        even_count=$((even_count + 1))\n      else\n        odd_count=$((odd_count\
    \ + 1))\n      fi\n      num=$((num / 10))\n    done\n  fi\n  echo \"[\\\"$even_count\\\
    \", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count=0\n    local odd_count=0\n\
    \    for (( i=0; i<${#1}; i++ )); do\n        if [[ $(( ${1:$i:1} % 2 )) -eq 0\
    \ ]]; then\n            even_count=$(( even_count + 1 ))\n        else\n     \
    \       odd_count=$(( odd_count + 1 ))\n        fi\n    done\n    echo \"[\\\"\
    $even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even=0\n    local odd=0\n\
    \    local num=$1\n    while [ $num -ne 0 ]; do\n        local digit=$((num %\
    \ 10))\n        if [ $((digit % 2)) -eq 0 ]; then\n            even=$((even +\
    \ 1))\n        else\n            odd=$((odd + 1))\n        fi\n        num=$((num\
    \ / 10))\n    done\n    echo \"[\\\"$even\\\", \\\"$odd\\\"]\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even=0\n  local odd=0\n  local\
    \ num=$1\n  while [[ $num -ne 0 ]]; do\n    local digit=$((num % 10))\n    if\
    \ [[ $((digit % 2)) -eq 0 ]]; then\n      even=$((even + 1))\n    else\n     \
    \ odd=$((odd + 1))\n    fi\n    num=$((num / 10))\n  done\n  echo \"[\\\"$even\\\
    \", \\\"$odd\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\"\
    ) = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  local number_length=${#number}\n  local i=0\n  local digit\n\
    \  while [ $i -lt $number_length ]; do\n    digit=${number:$i:1}\n    if [ $((digit\
    \ % 2)) -eq 0 ]; then\n      even_count=$((even_count + 1))\n    else\n      odd_count=$((odd_count\
    \ + 1))\n    fi\n    i=$((i + 1))\n  done\n  echo \"[\\\"$even_count\\\", \\\"\
    $odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\"\
    ) = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count=0\n    local odd_count=0\n\
    \    local number=$1\n    local digit\n    while [ $number -ne 0 ]; do\n     \
    \   digit=$((number % 10))\n        if [ $((digit % 2)) -eq 0 ]; then\n      \
    \      ((even_count++))\n        else\n            ((odd_count++))\n        fi\n\
    \        number=$((number / 10))\n    done\n    echo \"[\\\"$even_count\\\", \\\
    \"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\"\
    ) = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local number=$1\n    local even_count=0\n\
    \    local odd_count=0\n    for (( i=0; i<${#number}; i++ )); do\n        local\
    \ digit=${number:$i:1}\n        if [[ $digit =~ ^[0-9]+$ ]]; then\n          \
    \  if [[ $(( digit % 2 )) -eq 0 ]]; then\n                (( even_count++ ))\n\
    \            else\n                (( odd_count++ ))\n            fi\n       \
    \ fi\n    done\n    echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local num=$1\n  while [[ $num -ne 0 ]]; do\n    local digit=$((num % 10))\n\
    \    if [[ $((digit % 2)) -eq 0 ]]; then\n      even_count=$((even_count + 1))\n\
    \    else\n      odd_count=$((odd_count + 1))\n    fi\n    num=$((num / 10))\n\
    \  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  local digit\n  while [ $number -ne 0 ]; do\n    digit=$((number\
    \ % 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    number=$((number\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local num=$1\n    local even_count=0\n\
    \    local odd_count=0\n    local digit\n    for (( i=0; i<${#num}; i++ )); do\n\
    \        digit=${num:$i:1}\n        if [[ $digit =~ ^[0-9]+$ ]]; then\n      \
    \      if [[ $(( digit % 2 )) -eq 0 ]]; then\n                (( even_count++\
    \ ))\n            else\n                (( odd_count++ ))\n            fi\n  \
    \      fi\n    done\n    echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n\
    }\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n\
    \    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"\
    3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"\
    -2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local number=$1\n  local even_count=0\n\
    \  local odd_count=0\n  local digit\n  for (( i=0; i<${#number}; i++ )); do\n\
    \    digit=${number:$i:1}\n    if [[ $digit =~ ^[0-9]+$ ]]; then\n      if [[\
    \ $(($digit % 2)) -eq 0 ]]; then\n        ((even_count++))\n      else\n     \
    \   ((odd_count++))\n      fi\n    fi\n  done\n  echo \"[\\\"$even_count\\\",\
    \ \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count=0\n    local odd_count=0\n\
    \    local number=$1\n    while [[ $number -ne 0 ]]; do\n        local digit=$((number\
    \ % 10))\n        if [[ $((digit % 2)) -eq 0 ]]; then\n            even_count=$((even_count\
    \ + 1))\n        else\n            odd_count=$((odd_count + 1))\n        fi\n\
    \        number=$((number / 10))\n    done\n    echo \"[\\\"$even_count\\\", \\\
    \"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\"\
    ) = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  local digit\n  while [ $number -ne 0 ]; do\n    digit=$((number\
    \ % 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      ((even_count++))\n    else\n\
    \      ((odd_count++))\n    fi\n    number=$((number / 10))\n  done\n  echo \"\
    [\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local number=\"$1\"\n  local even_count=0\n\
    \  local odd_count=0\n  local digit\n  for (( i=0; i<${#number}; i++ )); do\n\
    \    digit=\"${number:$i:1}\"\n    if [[ $(( digit % 2 )) -eq 0 ]]; then\n   \
    \   (( even_count++ ))\n    else\n      (( odd_count++ ))\n    fi\n  done\n  echo\
    \ \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local num=$1\n  local digit\n  while [[ $num -gt 0 ]]; do\n    digit=$((num\
    \ % 10))\n    if [[ $((digit % 2)) -eq 0 ]]; then\n      ((even_count++))\n  \
    \  else\n      ((odd_count++))\n    fi\n    num=$((num / 10))\n  done\n  echo\
    \ \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local num=$1\n  local digit\n  while [ $num -gt 0 ]; do\n    digit=$((num %\
    \ 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    num=$((num\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count=0\n    local odd_count=0\n\
    \    local num=$1\n    while [[ $num -ne 0 ]]; do\n        local digit=$(( num\
    \ % 10 ))\n        if [[ $(( digit % 2 )) -eq 0 ]]; then\n            even_count=$((\
    \ even_count + 1 ))\n        else\n            odd_count=$(( odd_count + 1 ))\n\
    \        fi\n        num=$(( num / 10 ))\n    done\n    echo \"[\\\"$even_count\\\
    \", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count=0\n    local odd_count=0\n\
    \    local num=$1\n    while [[ $num -ne 0 ]]; do\n        local digit=$(( num\
    \ % 10 ))\n        if [[ $(( digit % 2 )) -eq 0 ]]; then\n            even_count=$((\
    \ even_count + 1 ))\n        else\n            odd_count=$(( odd_count + 1 ))\n\
    \        fi\n        num=$(( num / 10 ))\n    done\n    echo \"[\\\"$even_count\\\
    \", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  local digit\n  while [ $number -ne 0 ]; do\n    digit=$((number\
    \ % 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      ((even_count++))\n    else\n\
    \      ((odd_count++))\n    fi\n    number=$((number / 10))\n  done\n  echo \"\
    [\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local num=$1\n  while [ $num -ne 0 ]; do\n    local digit=$((num % 10))\n \
    \   if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count + 1))\n\
    \    else\n      odd_count=$((odd_count + 1))\n    fi\n    num=$((num / 10))\n\
    \  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count=0\n    local odd_count=0\n\
    \    local digit\n    local num=$1\n    while [ $num -gt 0 ]; do\n        digit=$((num\
    \ % 10))\n        if [ $((digit % 2)) -eq 0 ]; then\n            even_count=$((even_count\
    \ + 1))\n        else\n            odd_count=$((odd_count + 1))\n        fi\n\
    \        num=$((num / 10))\n    done\n    echo \"[\\\"$even_count\\\", \\\"$odd_count\\\
    \"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count=0\n    local odd_count=0\n\
    \    local num=$1\n    while [ $num -ne 0 ]; do\n        local digit=$((num %\
    \ 10))\n        if [ $((digit % 2)) -eq 0 ]; then\n            even_count=$((even_count\
    \ + 1))\n        else\n            odd_count=$((odd_count + 1))\n        fi\n\
    \        num=$((num / 10))\n    done\n    echo \"[\\\"$even_count\\\", \\\"$odd_count\\\
    \"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local digit\n  for (( i=0; i<${#1}; i++ )); do\n    digit=${1:$i:1}\n    if\
    \ [[ $digit =~ ^[0-9]+$ ]]; then\n      if [[ $(( digit % 2 )) -eq 0 ]]; then\n\
    \        (( even_count++ ))\n      else\n        (( odd_count++ ))\n      fi\n\
    \    fi\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  local digit\n  while [ $number -ne 0 ]; do\n    digit=$((number\
    \ % 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    number=$((number\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count=0\n    local odd_count=0\n\
    \    local number=$1\n    local digit\n    while [ $number -ne 0 ]; do\n     \
    \   digit=$((number % 10))\n        if [ $((digit % 2)) -eq 0 ]; then\n      \
    \      even_count=$((even_count + 1))\n        else\n            odd_count=$((odd_count\
    \ + 1))\n        fi\n        number=$((number / 10))\n    done\n    echo \"[\\\
    \"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local num=$1\n  local digit=0\n  while [ $num -gt 0 ]; do\n    digit=$((num\
    \ % 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    num=$((num\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local num=$1\n  local digit\n  while [[ $num -gt 0 ]]; do\n    digit=$((num\
    \ % 10))\n    if [[ $((digit % 2)) -eq 0 ]]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    num=$((num\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  local digit\n  while [ $number -ne 0 ]; do\n    digit=$((number\
    \ % 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    number=$((number\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  for (( i=0; i<${#1}; i++ )); do\n    if [[ ${1:$i:1} =~ ^[0-9]+$ ]]; then\n\
    \      if [[ $(( ${1:$i:1} % 2 )) -eq 0 ]]; then\n        even_count=$(( even_count\
    \ + 1 ))\n      else\n        odd_count=$(( odd_count + 1 ))\n      fi\n    fi\n\
    \  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even=0\n    local odd=0\n\
    \    for (( i=0; i<${#1}; i++ )); do\n        local digit=${1:$i:1}\n        if\
    \ (( digit % 2 == 0 )); then\n            (( even++ ))\n        else\n       \
    \     (( odd++ ))\n        fi\n    done\n    echo \"[\\\"$even\\\", \\\"$odd\\\
    \"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  for (( i=0; i<${#1}; i++ )); do\n    local digit=\"${1:$i:1}\"\n    if [[ $digit\
    \ == \"-\" ]]; then\n      continue\n    fi\n    if (( digit % 2 == 0 )); then\n\
    \      (( even_count++ ))\n    else\n      (( odd_count++ ))\n    fi\n  done\n\
    \  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n  \
    \  even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count=0\n    local odd_count=0\n\
    \    local num=$1\n    local num_length=${#num}\n    local i=0\n    local digit\n\
    \    for ((i=0; i<num_length; i++)); do\n        digit=${num:$i:1}\n        if\
    \ ((digit % 2 == 0)); then\n            ((even_count++))\n        else\n     \
    \       ((odd_count++))\n        fi\n    done\n    echo \"[\\\"$even_count\\\"\
    , \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  local digit\n  while [ $number -ne 0 ]; do\n    digit=$((\
    \ number % 10 ))\n    if [ $(( digit % 2 )) -eq 0 ]; then\n      even_count=$((\
    \ even_count + 1 ))\n    else\n      odd_count=$(( odd_count + 1 ))\n    fi\n\
    \    number=$(( number / 10 ))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\
    \"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local num=$1\n    local even=0\n\
    \    local odd=0\n    local digit\n    while [[ $num -ne 0 ]]; do\n        digit=$((num\
    \ % 10))\n        if [[ $((digit % 2)) -eq 0 ]]; then\n            even=$((even\
    \ + 1))\n        else\n            odd=$((odd + 1))\n        fi\n        num=$((num\
    \ / 10))\n    done\n    echo \"[\\\"$even\\\", \\\"$odd\\\"]\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  local digit\n  while [ $number -ne 0 ]; do\n    digit=$((number\
    \ % 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    number=$((number\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local num=$1\n    local even=0\n\
    \    local odd=0\n    while [[ $num -ne 0 ]]; do\n        local digit=$((num %\
    \ 10))\n        if [[ $((digit % 2)) -eq 0 ]]; then\n            even=$((even\
    \ + 1))\n        else\n            odd=$((odd + 1))\n        fi\n        num=$((num\
    \ / 10))\n    done\n    echo \"[\\\"$even\\\", \\\"$odd\\\"]\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  local digit\n  while [ $number -ne 0 ]; do\n    digit=$((number\
    \ % 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    number=$((number\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  local digit\n  while [[ $number -ne 0 ]]; do\n    digit=$((number\
    \ % 10))\n    if [[ $((digit % 2)) -eq 0 ]]; then\n      ((even_count++))\n  \
    \  else\n      ((odd_count++))\n    fi\n    number=$((number / 10))\n  done\n\
    \  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n  \
    \  even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local count_even=0\n    local count_odd=0\n\
    \    local num=$1\n    local digit\n    while [ $num -ne 0 ]; do\n        digit=$((num\
    \ % 10))\n        if [ $((digit % 2)) -eq 0 ]; then\n            count_even=$((count_even\
    \ + 1))\n        else\n            count_odd=$((count_odd + 1))\n        fi\n\
    \        num=$((num / 10))\n    done\n    echo \"[\\\"$count_even\\\", \\\"$count_odd\\\
    \"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local num=$1\n  local digit\n  while [ $num -gt 0 ]; do\n    digit=$((num %\
    \ 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    num=$((num\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local result=()\n    local even_count=0\n\
    \    local odd_count=0\n    local number=$1\n    while [ $number -ne 0 ]; do\n\
    \        local digit=$((number % 10))\n        if [ $((digit % 2)) -eq 0 ]; then\n\
    \            even_count=$((even_count + 1))\n        else\n            odd_count=$((odd_count\
    \ + 1))\n        fi\n        number=$((number / 10))\n    done\n    result+=(\"\
    $even_count\")\n    result+=(\"$odd_count\")\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  for (( i=0; i<${#1}; i++ )); do\n    if [[ $(( ${1:$i:1} % 2 )) -eq 0 ]]; then\n\
    \      (( even_count++ ))\n    else\n      (( odd_count++ ))\n    fi\n  done\n\
    \  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n  \
    \  even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count=0\n    local odd_count=0\n\
    \    local num=$1\n    while [ $num -ne 0 ]; do\n        local digit=$((num %\
    \ 10))\n        if [ $((digit % 2)) -eq 0 ]; then\n            even_count=$((even_count\
    \ + 1))\n        else\n            odd_count=$((odd_count + 1))\n        fi\n\
    \        num=$((num / 10))\n    done\n    echo \"[\\\"$even_count\\\", \\\"$odd_count\\\
    \"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local number=\"$1\"\n  local even=0\n\
    \  local odd=0\n  local digit\n  for (( i=0; i<${#number}; i++ )); do\n    digit=\"\
    ${number:$i:1}\"\n    if [[ $(( digit % 2 )) -eq 0 ]]; then\n      even=$(( even\
    \ + 1 ))\n    else\n      odd=$(( odd + 1 ))\n    fi\n  done\n  echo \"[\\\"$even\\\
    \", \\\"$odd\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\"\
    ) = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local num=$1\n    local even_count=0\n\
    \    local odd_count=0\n    local digit\n    for (( i=0; i<${#num}; i++ )); do\n\
    \        digit=${num:$i:1}\n        if [[ $digit =~ ^[0-9]+$ ]]; then\n      \
    \      if (( digit % 2 == 0 )); then\n                (( even_count++ ))\n   \
    \         else\n                (( odd_count++ ))\n            fi\n        fi\n\
    \    done\n    echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local -r num=\"$1\"\n  local -r even_count=$(echo\
    \ \"$num\" | grep -o '[02468]' | wc -l)\n  local -r odd_count=$(echo \"$num\"\
    \ | grep -o '[13579]' | wc -l)\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\
    \"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local num=$1\n  local digit\n  while [ $num -gt 0 ]; do\n    digit=$((num %\
    \ 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      ((even_count++))\n    else\n\
    \      ((odd_count++))\n    fi\n    num=$((num / 10))\n  done\n  echo \"[\\\"\
    $even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  while [[ $number -ne 0 ]]; do\n    local digit=$((number\
    \ % 10))\n    if [[ $((digit % 2)) -eq 0 ]]; then\n      ((even_count++))\n  \
    \  else\n      ((odd_count++))\n    fi\n    number=$((number / 10))\n  done\n\
    \  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n  \
    \  even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  local digit\n  while [ $number -ne 0 ]; do\n    digit=$((number\
    \ % 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    number=$((number\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  local digit\n  while [ $number -ne 0 ]; do\n    digit=$((number\
    \ % 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    number=$((number\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  while [ $number -ne 0 ]; do\n    local digit=$((number %\
    \ 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    number=$((number\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local num=$1\n  local digit\n  while [ $num -gt 0 ]; do\n    digit=$((num %\
    \ 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      ((even_count++))\n    else\n\
    \      ((odd_count++))\n    fi\n    num=$((num / 10))\n  done\n  echo \"[\\\"\
    $even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local num=\"$1\"\n  local num_length=${#num}\n  local i=0\n  while [ $i -lt\
    \ $num_length ]; do\n    local digit=${num:$i:1}\n    if [ $((digit % 2)) -eq\
    \ 0 ]; then\n      even_count=$((even_count + 1))\n    else\n      odd_count=$((odd_count\
    \ + 1))\n    fi\n    i=$((i + 1))\n  done\n  echo \"[\\\"$even_count\\\", \\\"\
    $odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\"\
    ) = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  for (( i=0; i<${#1}; i++ )); do\n    local digit=${1:$i:1}\n    if (( digit\
    \ % 2 == 0 )); then\n      (( even_count++ ))\n    else\n      (( odd_count++\
    \ ))\n    fi\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\
    \ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n\
    \    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"\
    3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"\
    -2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count=0\n    local odd_count=0\n\
    \    local num=$1\n    local digit\n    while [ $num -gt 0 ]; do\n        digit=$((num\
    \ % 10))\n        if [ $((digit % 2)) -eq 0 ]; then\n            even_count=$((even_count\
    \ + 1))\n        else\n            odd_count=$((odd_count + 1))\n        fi\n\
    \        num=$((num / 10))\n    done\n    echo \"[\\\"$even_count\\\", \\\"$odd_count\\\
    \"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even=0\n  local odd=0\n  for\
    \ (( i=0; i<${#1}; i++ )); do\n    if (( ${1:$i:1} % 2 == 0 )); then\n      ((\
    \ even++ ))\n    else\n      (( odd++ ))\n    fi\n  done\n  echo \"[\\\"$even\\\
    \", \\\"$odd\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\"\
    ) = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local num=$1\n  local digit=0\n  while [ $num -gt 0 ]; do\n    digit=$((num\
    \ % 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    num=$((num\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  local digit\n  while [ $number -ne 0 ]; do\n    digit=$((number\
    \ % 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    number=$((number\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  local digit\n  while [ $number -ne 0 ]; do\n    digit=$((number\
    \ % 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    number=$((number\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local num=$1\n  while [[ $num -ne 0 ]]; do\n    local digit=$((num % 10))\n\
    \    if [[ $((digit % 2)) -eq 0 ]]; then\n      even_count=$((even_count + 1))\n\
    \    else\n      odd_count=$((odd_count + 1))\n    fi\n    num=$((num / 10))\n\
    \  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local num=$1\n  local digit\n  while [ $num -gt 0 ]; do\n    digit=$((num %\
    \ 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    num=$((num\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count=0\n    local odd_count=0\n\
    \    local num=$1\n    local digit\n    while [ $num -gt 0 ]; do\n        digit=$((num\
    \ % 10))\n        if [ $((digit % 2)) -eq 0 ]; then\n            even_count=$((even_count\
    \ + 1))\n        else\n            odd_count=$((odd_count + 1))\n        fi\n\
    \        num=$((num / 10))\n    done\n    echo \"[\\\"$even_count\\\", \\\"$odd_count\\\
    \"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count=0\n    local odd_count=0\n\
    \    local number=$1\n    local digit\n    while [ $number -ne 0 ]; do\n     \
    \   digit=$((number % 10))\n        if [ $((digit % 2)) -eq 0 ]; then\n      \
    \      even_count=$((even_count + 1))\n        else\n            odd_count=$((odd_count\
    \ + 1))\n        fi\n        number=$((number / 10))\n    done\n    echo \"[\\\
    \"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even=0\n  local odd=0\n  local\
    \ num=$1\n  local digit\n  while [ $num -gt 0 ]; do\n    digit=$((num % 10))\n\
    \    if [ $((digit % 2)) -eq 0 ]; then\n      even=$((even + 1))\n    else\n \
    \     odd=$((odd + 1))\n    fi\n    num=$((num / 10))\n  done\n  echo \"[\\\"\
    $even\\\", \\\"$odd\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  if [[ $1 =~ ^-?[0-9]+$ ]]; then\n\
    \    local even_count=0\n    local odd_count=0\n    for (( i=0; i<${#1}; i++ ));\
    \ do\n      if [[ ${1:$i:1} =~ ^[02468]$ ]]; then\n        ((even_count++))\n\
    \      else\n        ((odd_count++))\n      fi\n    done\n    echo \"[\\\"$even_count\\\
    \", \\\"$odd_count\\\"]\"\n  else\n    echo \"[\\\"0\\\", \\\"0\\\"]\"\n  fi\n\
    }\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n\
    \    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"\
    3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"\
    -2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local number=$1\n  local even_count=0\n\
    \  local odd_count=0\n  for ((i=0; i<${#number}; i++)); do\n    local digit=${number:$i:1}\n\
    \    if [[ $digit =~ ^[0-9]+$ ]]; then\n      if [[ $((digit % 2)) -eq 0 ]]; then\n\
    \        even_count=$((even_count + 1))\n      else\n        odd_count=$((odd_count\
    \ + 1))\n      fi\n    fi\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\
    \"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count=0\n    local odd_count=0\n\
    \    local number=$1\n    local digit\n    while [ $number -ne 0 ]; do\n     \
    \   digit=$((number % 10))\n        if [ $((digit % 2)) -eq 0 ]; then\n      \
    \      even_count=$((even_count + 1))\n        else\n            odd_count=$((odd_count\
    \ + 1))\n        fi\n        number=$((number / 10))\n    done\n    echo \"[\\\
    \"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local num=\"$1\"\n  local num_len=${#num}\n  local i=0\n  local digit=0\n \
    \ while [ $i -lt $num_len ]; do\n    digit=$(echo \"${num:$i:1}\")\n    if [ $((digit\
    \ % 2)) -eq 0 ]; then\n      even_count=$((even_count + 1))\n    else\n      odd_count=$((odd_count\
    \ + 1))\n    fi\n    i=$((i + 1))\n  done\n  echo \"[\\\"$even_count\\\", \\\"\
    $odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\"\
    ) = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local digit\n  for ((i=0; i<${#1}; i++)); do\n    digit=${1:$i:1}\n    if [[\
    \ $digit =~ ^[0-9]+$ ]]; then\n      if [[ $((digit % 2)) -eq 0 ]]; then\n   \
    \     even_count=$((even_count + 1))\n      else\n        odd_count=$((odd_count\
    \ + 1))\n      fi\n    fi\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\
    \"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count=0\n    local odd_count=0\n\
    \    local num=$1\n    while [ $num -ne 0 ]; do\n        local digit=$((num %\
    \ 10))\n        if [ $((digit % 2)) -eq 0 ]; then\n            even_count=$((even_count\
    \ + 1))\n        else\n            odd_count=$((odd_count + 1))\n        fi\n\
    \        num=$((num / 10))\n    done\n    echo \"[\\\"$even_count\\\", \\\"$odd_count\\\
    \"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  local digit\n  while [ $number -ne 0 ]; do\n    digit=$((number\
    \ % 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    number=$((number\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local -i even=0\n    local -i odd=0\n\
    \    local -i num=$1\n    local -i digit\n    while [ $num -ne 0 ]; do\n     \
    \   digit=$((num % 10))\n        if [ $((digit % 2)) -eq 0 ]; then\n         \
    \   even=$((even + 1))\n        else\n            odd=$((odd + 1))\n        fi\n\
    \        num=$((num / 10))\n    done\n    echo \"[\\\"$even\\\", \\\"$odd\\\"\
    ]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\"\
    \ ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even=0\n    local odd=0\n\
    \    local num=$1\n    while [ $num -ne 0 ]; do\n        local digit=$((num %\
    \ 10))\n        if [ $((digit % 2)) -eq 0 ]; then\n            even=$((even +\
    \ 1))\n        else\n            odd=$((odd + 1))\n        fi\n        num=$((num\
    \ / 10))\n    done\n    echo \"[\\\"$even\\\", \\\"$odd\\\"]\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local num=$1\n    local even_count=0\n\
    \    local odd_count=0\n    local digit\n    while [ $num -ne 0 ]; do\n      \
    \  digit=$((num % 10))\n        if [ $((digit % 2)) -eq 0 ]; then\n          \
    \  even_count=$((even_count + 1))\n        else\n            odd_count=$((odd_count\
    \ + 1))\n        fi\n        num=$((num / 10))\n    done\n    echo \"[\\\"$even_count\\\
    \", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=\"$1\"\n  local digit\n  while [ \"$number\" -ne 0 ]; do\n   \
    \ digit=$((number % 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      ((even_count++))\n\
    \    else\n      ((odd_count++))\n    fi\n    number=$((number / 10))\n  done\n\
    \  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n  \
    \  even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count=0\n    local odd_count=0\n\
    \    local num=$1\n    local digit\n    while [[ $num -gt 0 ]]; do\n        digit=$((\
    \ num % 10 ))\n        if [[ $(( digit % 2 )) -eq 0 ]]; then\n            even_count=$((\
    \ even_count + 1 ))\n        else\n            odd_count=$(( odd_count + 1 ))\n\
    \        fi\n        num=$(( num / 10 ))\n    done\n    echo \"[\\\"$even_count\\\
    \", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local num=$1\n  local digit\n  while [ $num -gt 0 ]; do\n    digit=$((num %\
    \ 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    num=$((num\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local num=$1\n  local even_count=0\n\
    \  local odd_count=0\n  local digit\n  while [ $num -gt 0 ]; do\n    digit=$((\
    \ num % 10 ))\n    if [ $(( digit % 2 )) -eq 0 ]; then\n      even_count=$(( even_count\
    \ + 1 ))\n    else\n      odd_count=$(( odd_count + 1 ))\n    fi\n    num=$((\
    \ num / 10 ))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n\
    }\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n\
    \    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"\
    3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"\
    -2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count=0\n    local odd_count=0\n\
    \    local num=$1\n    while [ $num -ne 0 ]; do\n        local digit=$((num %\
    \ 10))\n        if [ $((digit % 2)) -eq 0 ]; then\n            even_count=$((even_count\
    \ + 1))\n        else\n            odd_count=$((odd_count + 1))\n        fi\n\
    \        num=$((num / 10))\n    done\n    echo \"[\\\"$even_count\\\", \\\"$odd_count\\\
    \"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count=0\n    local odd_count=0\n\
    \    local number=$1\n    local digit\n    while [ \"$number\" -ne 0 ]; do\n \
    \       digit=$((number % 10))\n        if [ $((digit % 2)) -eq 0 ]; then\n  \
    \          even_count=$((even_count + 1))\n        else\n            odd_count=$((odd_count\
    \ + 1))\n        fi\n        number=$((number / 10))\n    done\n    echo \"[\\\
    \"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local num=$1\n    local even_count=0\n\
    \    local odd_count=0\n    while [[ $num -ne 0 ]]; do\n        local digit=$((num\
    \ % 10))\n        if [[ $((digit % 2)) -eq 0 ]]; then\n            even_count=$((even_count\
    \ + 1))\n        else\n            odd_count=$((odd_count + 1))\n        fi\n\
    \        num=$((num / 10))\n    done\n    echo \"[\\\"$even_count\\\", \\\"$odd_count\\\
    \"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local num=$1\n  while [ $num -ne 0 ]; do\n    local digit=$((num % 10))\n \
    \   if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count + 1))\n\
    \    else\n      odd_count=$((odd_count + 1))\n    fi\n    num=$((num / 10))\n\
    \  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  local digit\n  while [[ $number -ne 0 ]]; do\n    digit=$((number\
    \ % 10))\n    if [[ $((digit % 2)) -eq 0 ]]; then\n      ((even_count++))\n  \
    \  else\n      ((odd_count++))\n    fi\n    number=$((number / 10))\n  done\n\
    \  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n  \
    \  even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count=0\n    local odd_count=0\n\
    \    for (( i=0; i<${#1}; i++ )); do\n        local digit=${1:$i:1}\n        if\
    \ (( digit % 2 == 0 )); then\n            (( even_count++ ))\n        else\n \
    \           (( odd_count++ ))\n        fi\n    done\n    echo \"[\\\"$even_count\\\
    \", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  local digit\n  while [ $number -ne 0 ]; do\n    digit=$((\
    \ number % 10 ))\n    if [ $(( digit % 2 )) -eq 0 ]; then\n      (( even_count++\
    \ ))\n    else\n      (( odd_count++ ))\n    fi\n    number=$(( number / 10 ))\n\
    \  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local num=$1\n  while [ $num -ne 0 ]; do\n    local digit=$((num % 10))\n \
    \   if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count + 1))\n\
    \    else\n      odd_count=$((odd_count + 1))\n    fi\n    num=$((num / 10))\n\
    \  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local num=$1\n  local digit\n  while [ $num -gt 0 ]; do\n    digit=$((num %\
    \ 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      ((even_count++))\n    else\n\
    \      ((odd_count++))\n    fi\n    num=$((num / 10))\n  done\n  echo \"[\\\"\
    $even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  local digit\n  while [ $number -ne 0 ]; do\n    digit=$((\
    \ number % 10 ))\n    if [ $(( digit % 2 )) -eq 0 ]; then\n      even_count=$((\
    \ even_count + 1 ))\n    else\n      odd_count=$(( odd_count + 1 ))\n    fi\n\
    \    number=$(( number / 10 ))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\
    \"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local num=\"$1\"\n  local digit\n  while [ \"$num\" -gt 0 ]; do\n    digit=$((num\
    \ % 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    num=$((num\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local num=$1\n  while [ $num -ne 0 ]; do\n    local digit=$((num % 10))\n \
    \   if [ $((digit % 2)) -eq 0 ]; then\n      ((even_count++))\n    else\n    \
    \  ((odd_count++))\n    fi\n    num=$((num / 10))\n  done\n  echo \"[\\\"$even_count\\\
    \", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local -i even=0\n  local -i odd=0\n\
    \  local -i num=$1\n  while [ $num -ne 0 ]; do\n    local -i digit=$((num % 10))\n\
    \    if [ $((digit % 2)) -eq 0 ]; then\n      ((even++))\n    else\n      ((odd++))\n\
    \    fi\n    num=$((num / 10))\n  done\n  echo \"[\\\"$even\\\", \\\"$odd\\\"\
    ]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\"\
    \ ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count=0\n    local odd_count=0\n\
    \    local number=$1\n    local digit\n    while [ $number -ne 0 ]; do\n     \
    \   digit=$((number % 10))\n        if [ $((digit % 2)) -eq 0 ]; then\n      \
    \      ((even_count++))\n        else\n            ((odd_count++))\n        fi\n\
    \        number=$((number / 10))\n    done\n    echo \"[\\\"$even_count\\\", \\\
    \"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\"\
    ) = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count=0\n    local odd_count=0\n\
    \    for (( i=0; i<${#1}; i++ )); do\n        local digit=${1:$i:1}\n        if\
    \ [[ $digit =~ ^[0-9]+$ ]]; then\n            if [[ $(( digit % 2 )) -eq 0 ]];\
    \ then\n                (( even_count++ ))\n            else\n               \
    \ (( odd_count++ ))\n            fi\n        fi\n    done\n    echo \"[\\\"$even_count\\\
    \", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count=0\n    local odd_count=0\n\
    \    local number=$1\n    local digit\n    while [ $number -ne 0 ]; do\n     \
    \   digit=$((number % 10))\n        if [ $((digit % 2)) -eq 0 ]; then\n      \
    \      even_count=$((even_count + 1))\n        else\n            odd_count=$((odd_count\
    \ + 1))\n        fi\n        number=$((number / 10))\n    done\n    echo \"[\\\
    \"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  local digit\n  while [ $number -ne 0 ]; do\n    digit=$((\
    \ number % 10 ))\n    if [ $(( digit % 2 )) -eq 0 ]; then\n      even_count=$((\
    \ even_count + 1 ))\n    else\n      odd_count=$(( odd_count + 1 ))\n    fi\n\
    \    number=$(( number / 10 ))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\
    \"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  local digit\n  while [[ $number -ne 0 ]]; do\n    digit=$((number\
    \ % 10))\n    if [[ $((digit % 2)) -eq 0 ]]; then\n      ((even_count++))\n  \
    \  else\n      ((odd_count++))\n    fi\n    number=$((number / 10))\n  done\n\
    \  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n  \
    \  even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  while [ $number -ne 0 ]; do\n    local digit=$((number %\
    \ 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    number=$((number\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local num=$1\n  local even=0\n  local\
    \ odd=0\n  for (( i=0; i<${#num}; i++ )); do\n    local digit=${num:$i:1}\n  \
    \  if [[ $digit =~ ^[0-9]+$ ]]; then\n      if [[ $(( digit % 2 )) -eq 0 ]]; then\n\
    \        even=$(( even + 1 ))\n      else\n        odd=$(( odd + 1 ))\n      fi\n\
    \    fi\n  done\n  echo \"[\\\"$even\\\", \\\"$odd\\\"]\"\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even=0\n    local odd=0\n\
    \    local num=$1\n    local digit\n    while [ $num -gt 0 ]; do\n        digit=$((num\
    \ % 10))\n        if [ $((digit % 2)) -eq 0 ]; then\n            even=$((even\
    \ + 1))\n        else\n            odd=$((odd + 1))\n        fi\n        num=$((num\
    \ / 10))\n    done\n    echo \"[\\\"$even\\\", \\\"$odd\\\"]\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  local digit\n  while [[ $number -ne 0 ]]; do\n    digit=$((number\
    \ % 10))\n    if [[ $((digit % 2)) -eq 0 ]]; then\n      ((even_count++))\n  \
    \  else\n      ((odd_count++))\n    fi\n    number=$((number / 10))\n  done\n\
    \  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n  \
    \  even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local digit\n  for (( i=0; i<${#1}; i++ )); do\n    digit=${1:$i:1}\n    if\
    \ (( digit % 2 == 0 )); then\n      (( even_count++ ))\n    else\n      (( odd_count++\
    \ ))\n    fi\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\
    \ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n\
    \    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"\
    3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"\
    -2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local number=$1\n  local even_count=0\n\
    \  local odd_count=0\n  local digit\n  for (( i=0; i<${#number}; i++ )); do\n\
    \    digit=${number:$i:1}\n    if [[ $digit =~ ^[0-9]+$ ]]; then\n      if [[\
    \ $(( digit % 2 )) -eq 0 ]]; then\n        (( even_count++ ))\n      else\n  \
    \      (( odd_count++ ))\n      fi\n    fi\n  done\n  echo \"[\\\"$even_count\\\
    \", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even=0\n  local odd=0\n  local\
    \ num=$1\n  local digit\n  while [[ $num -gt 0 ]]; do\n    digit=$((num % 10))\n\
    \    if [[ $((digit % 2)) -eq 0 ]]; then\n      even=$((even + 1))\n    else\n\
    \      odd=$((odd + 1))\n    fi\n    num=$((num / 10))\n  done\n  echo \"[\\\"\
    $even\\\", \\\"$odd\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count=0\n    local odd_count=0\n\
    \    for (( i=0; i<${#1}; i++ )); do\n        if [[ ${1:$i:1} =~ ^[0-9]+$ ]];\
    \ then\n            if [[ $(( ${1:$i:1} % 2 )) -eq 0 ]]; then\n              \
    \  (( even_count++ ))\n            else\n                (( odd_count++ ))\n \
    \           fi\n        fi\n    done\n    echo \"[\\\"$even_count\\\", \\\"$odd_count\\\
    \"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  while [ $number -ne 0 ]; do\n    local digit=$((number %\
    \ 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    number=$((number\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local num=$1\n  local digit\n  while [[ $num -gt 0 ]]; do\n    digit=$((num\
    \ % 10))\n    if [[ $((digit % 2)) -eq 0 ]]; then\n      ((even_count++))\n  \
    \  else\n      ((odd_count++))\n    fi\n    num=$((num / 10))\n  done\n  echo\
    \ \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local num=$1\n  local digit\n  while [ $num -gt 0 ]; do\n    digit=$((num %\
    \ 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    num=$((num\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  local digit\n  while [[ $number -ne 0 ]]; do\n    digit=$((number\
    \ % 10))\n    if [[ $((digit % 2)) -eq 0 ]]; then\n      ((even_count++))\n  \
    \  else\n      ((odd_count++))\n    fi\n    number=$((number / 10))\n  done\n\
    \  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n  \
    \  even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local number=$1\n  local even_count=0\n\
    \  local odd_count=0\n  for (( i=0; i<${#number}; i++ )); do\n    if [[ $(( ${number:$i:1}\
    \ % 2 )) -eq 0 ]]; then\n      (( even_count++ ))\n    else\n      (( odd_count++\
    \ ))\n    fi\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\
    \ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n\
    \    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"\
    3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"\
    -2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local num=$1\n    local even_count=0\n\
    \    local odd_count=0\n    local digit\n    local num_len=${#num}\n    local\
    \ i=0\n    while [ $i -lt $num_len ]; do\n        digit=${num:$i:1}\n        if\
    \ [ $((digit % 2)) -eq 0 ]; then\n            even_count=$((even_count + 1))\n\
    \        else\n            odd_count=$((odd_count + 1))\n        fi\n        i=$((i\
    \ + 1))\n    done\n    echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\
    \ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n\
    \    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"\
    3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"\
    -2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count=0\n    local odd_count=0\n\
    \    local number=$1\n    local digit\n    while [[ $number -ne 0 ]]; do\n   \
    \     digit=$((number % 10))\n        if [[ $((digit % 2)) -eq 0 ]]; then\n  \
    \          even_count=$((even_count + 1))\n        else\n            odd_count=$((odd_count\
    \ + 1))\n        fi\n        number=$((number / 10))\n    done\n    echo \"[\\\
    \"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  local digit\n  local result=()\n  while [ $number -ne 0\
    \ ]; do\n    digit=$((number % 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n \
    \     even_count=$((even_count + 1))\n    else\n      odd_count=$((odd_count +\
    \ 1))\n    fi\n    number=$((number / 10))\n  done\n  result+=(\"$even_count\"\
    )\n  result+=(\"$odd_count\")\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n \
    \   even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local num=$1\n    local even_count=0\n\
    \    local odd_count=0\n    local digit\n    while [ $num -ne 0 ]; do\n      \
    \  digit=$((num % 10))\n        if [ $((digit % 2)) -eq 0 ]; then\n          \
    \  even_count=$((even_count + 1))\n        else\n            odd_count=$((odd_count\
    \ + 1))\n        fi\n        num=$((num / 10))\n    done\n    echo \"[\\\"$even_count\\\
    \", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count=0\n    local odd_count=0\n\
    \    local digit\n    for (( i=0; i<${#1}; i++ )); do\n        digit=${1:$i:1}\n\
    \        if [[ $digit =~ ^[0-9]+$ ]]; then\n            if (( digit % 2 == 0 ));\
    \ then\n                (( even_count++ ))\n            else\n               \
    \ (( odd_count++ ))\n            fi\n        fi\n    done\n    echo \"[\\\"$even_count\\\
    \", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  local digit\n  while [[ $number -ne 0 ]]; do\n    digit=$((number\
    \ % 10))\n    if [[ $((digit % 2)) -eq 0 ]]; then\n      ((even_count++))\n  \
    \  else\n      ((odd_count++))\n    fi\n    number=$((number / 10))\n  done\n\
    \  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n  \
    \  even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local num=$1\n  local digit\n  while [ $num -gt 0 ]; do\n    digit=$((num %\
    \ 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    num=$((num\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local num=$1\n    local even_count=0\n\
    \    local odd_count=0\n    for (( i=0; i<${#num}; i++ )); do\n        local digit=${num:$i:1}\n\
    \        if [[ $digit =~ ^[0-9]+$ ]]; then\n            if (( digit % 2 == 0 ));\
    \ then\n                (( even_count++ ))\n            else\n               \
    \ (( odd_count++ ))\n            fi\n        fi\n    done\n    echo \"[\\\"$even_count\\\
    \", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  local digit\n  while [ $number -ne 0 ]; do\n    digit=$((number\
    \ % 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    number=$((number\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  local digit\n  while [ $number -ne 0 ]; do\n    digit=$((number\
    \ % 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    number=$((number\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  local digit\n\n  while [ $number -ne 0 ]; do\n    digit=$((\
    \ number % 10 ))\n    if [ $(( digit % 2 )) -eq 0 ]; then\n      even_count=$((\
    \ even_count + 1 ))\n    else\n      odd_count=$(( odd_count + 1 ))\n    fi\n\
    \    number=$(( number / 10 ))\n  done\n\n  echo \"[\\\"$even_count\\\", \\\"\
    $odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\"\
    ) = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local num=\"$1\"\n    local even=0\n\
    \    local odd=0\n    for (( i=0; i<${#num}; i++ )); do\n        if [[ \"${num:$i:1}\"\
    \ =~ ^[0-9]+$ ]]; then\n            if [[ $(( ${num:$i:1} % 2 )) -eq 0 ]]; then\n\
    \                even=$(( even + 1 ))\n            else\n                odd=$((\
    \ odd + 1 ))\n            fi\n        fi\n    done\n    echo \"[\\\"$even\\\"\
    , \\\"$odd\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\"\
    ) = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local num=$1\n  local digit\n  while [ $num -gt 0 ]; do\n    digit=$((num %\
    \ 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      ((even_count++))\n    else\n\
    \      ((odd_count++))\n    fi\n    num=$((num / 10))\n  done\n  echo \"[\\\"\
    $even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local num=$1\n  while [ $num -ne 0 ]; do\n    local digit=$((num % 10))\n \
    \   if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count + 1))\n\
    \    else\n      odd_count=$((odd_count + 1))\n    fi\n    num=$((num / 10))\n\
    \  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  local digit\n  while [ $number -ne 0 ]; do\n    digit=$((number\
    \ % 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    number=$((number\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local num=$1\n  while [ $num -ne 0 ]; do\n    local digit=$((num % 10))\n \
    \   if [ $((digit % 2)) -eq 0 ]; then\n      ((even_count++))\n    else\n    \
    \  ((odd_count++))\n    fi\n    num=$((num / 10))\n  done\n  echo \"[\\\"$even_count\\\
    \", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local num=$1\n  while [ $num -ne 0 ]; do\n    local digit=$((num % 10))\n \
    \   if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count + 1))\n\
    \    else\n      odd_count=$((odd_count + 1))\n    fi\n    num=$((num / 10))\n\
    \  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local num=$1\n    local even_count=0\n\
    \    local odd_count=0\n    for ((i=0; i<${#num}; i++)); do\n        local digit=${num:$i:1}\n\
    \        if [[ $digit =~ ^[0-9]+$ ]]; then\n            if [[ $((digit % 2)) -eq\
    \ 0 ]]; then\n                even_count=$((even_count + 1))\n            else\n\
    \                odd_count=$((odd_count + 1))\n            fi\n        fi\n  \
    \  done\n    echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local number=$1\n  local even_count=0\n\
    \  local odd_count=0\n  for (( i=0; i<${#number}; i++ )); do\n    local digit=\"\
    ${number:$i:1}\"\n    if [[ $digit =~ ^[0-9]+$ ]]; then\n      if [[ $(( digit\
    \ % 2 )) -eq 0 ]]; then\n        even_count=$(( even_count + 1 ))\n      else\n\
    \        odd_count=$(( odd_count + 1 ))\n      fi\n    fi\n  done\n  echo \"[\\\
    \"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count=0\n    local odd_count=0\n\
    \    local digit\n    for digit in $(echo \"$1\" | grep -o .); do\n        if\
    \ [[ $((digit % 2)) -eq 0 ]]; then\n            even_count=$((even_count + 1))\n\
    \        else\n            odd_count=$((odd_count + 1))\n        fi\n    done\n\
    \    echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n\
    \    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count=0\n    local odd_count=0\n\
    \    local num=${1//[^0-9]/}\n    for (( i=0; i<${#num}; i++ )); do\n        if\
    \ [[ $(( ${num:$i:1} % 2 )) -eq 0 ]]; then\n            (( even_count++ ))\n \
    \       else\n            (( odd_count++ ))\n        fi\n    done\n    echo \"\
    [\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  for (( i=0; i<${#1}; i++ )); do\n    if [ $(( ${1:$i:1} % 2 )) -eq 0 ]; then\n\
    \      (( even_count++ ))\n    else\n      (( odd_count++ ))\n    fi\n  done\n\
    \  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n  \
    \  even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count=0\n    local odd_count=0\n\
    \    local number=$1\n    local digit\n    while [ $number -ne 0 ]; do\n     \
    \   digit=$((number % 10))\n        if [ $((digit % 2)) -eq 0 ]; then\n      \
    \      even_count=$((even_count + 1))\n        else\n            odd_count=$((odd_count\
    \ + 1))\n        fi\n        number=$((number / 10))\n    done\n    echo \"[\\\
    \"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local num=$1\n  local digit\n  while [ $num -gt 0 ]; do\n    digit=$((num %\
    \ 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    num=$((num\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  local digit\n  while [[ $number -ne 0 ]]; do\n    digit=$((\
    \ number % 10 ))\n    if [[ $(( digit % 2 )) -eq 0 ]]; then\n      even_count=$((\
    \ even_count + 1 ))\n    else\n      odd_count=$(( odd_count + 1 ))\n    fi\n\
    \    number=$(( number / 10 ))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\
    \"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local -i even=0\n  local -i odd=0\n\
    \  local -i n=$1\n  while (( n > 0 )); do\n    (( n % 2 == 0 )) && (( even++ ))\
    \ || (( odd++ ))\n    (( n /= 10 ))\n  done\n  echo \"[\\\"$even\\\", \\\"$odd\\\
    \"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local num=$1\n  local digit\n  while [[ $num -gt 0 ]]; do\n    digit=$((num\
    \ % 10))\n    if [[ $((digit % 2)) -eq 0 ]]; then\n      ((even_count++))\n  \
    \  else\n      ((odd_count++))\n    fi\n    num=$((num / 10))\n  done\n  echo\
    \ \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  local digit=0\n  while [ $number -ne 0 ]; do\n    digit=$((number\
    \ % 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    number=$((number\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  for (( i=0; i<${#1}; i++ )); do\n    if [[ \"${1:$i:1}\" =~ ^[0-9]+$ ]]; then\n\
    \      if [[ $(( ${1:$i:1} % 2 )) -eq 0 ]]; then\n        even_count=$(( even_count\
    \ + 1 ))\n      else\n        odd_count=$(( odd_count + 1 ))\n      fi\n    fi\n\
    \  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  local digit\n  while [ $number -ne 0 ]; do\n    digit=$((number\
    \ % 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    number=$((number\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  local digit\n  while [ $number -ne 0 ]; do\n    digit=$((number\
    \ % 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    number=$((number\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local num=$1\n  local digit\n  while [ $num -gt 0 ]; do\n    digit=$((num %\
    \ 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    num=$((num\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count=0\n    local odd_count=0\n\
    \    local number=$1\n    local digit\n    while [ $number -ne 0 ]; do\n     \
    \   digit=$((number % 10))\n        if [ $((digit % 2)) -eq 0 ]; then\n      \
    \      even_count=$((even_count + 1))\n        else\n            odd_count=$((odd_count\
    \ + 1))\n        fi\n        number=$((number / 10))\n    done\n    echo \"[\\\
    \"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local count_even=0\n    local count_odd=0\n\
    \    local number=$1\n    while [ $number -ne 0 ]; do\n        local digit=$((number\
    \ % 10))\n        if [ $((digit % 2)) -eq 0 ]; then\n            count_even=$((count_even\
    \ + 1))\n        else\n            count_odd=$((count_odd + 1))\n        fi\n\
    \        number=$((number / 10))\n    done\n    echo \"[\\\"$count_even\\\", \\\
    \"$count_odd\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\"\
    ) = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local num=$1\n  local digit\n  while [ $num -gt 0 ]; do\n    digit=$((num %\
    \ 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    num=$((num\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even=0\n    local odd=0\n\
    \    local number=$1\n    local digit\n    while [[ $number -ne 0 ]]; do\n   \
    \     digit=$((number % 10))\n        if [[ $((digit % 2)) -eq 0 ]]; then\n  \
    \          even=$((even + 1))\n        else\n            odd=$((odd + 1))\n  \
    \      fi\n        number=$((number / 10))\n    done\n    echo \"[\\\"$even\\\"\
    , \\\"$odd\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\"\
    ) = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  local digit\n  while [ $number -ne 0 ]; do\n    digit=$((number\
    \ % 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    number=$((number\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local num=$1\n    local even_count=0\n\
    \    local odd_count=0\n    local digit\n    for (( i=0; i<${#num}; i++ )); do\n\
    \        digit=${num:$i:1}\n        if [[ $digit =~ ^[0-9]+$ ]]; then\n      \
    \      if [[ $(( digit % 2 )) -eq 0 ]]; then\n                (( even_count++\
    \ ))\n            else\n                (( odd_count++ ))\n            fi\n  \
    \      fi\n    done\n    echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n\
    }\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n\
    \    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"\
    3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"\
    -2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  local digit\n  while [ $number -ne 0 ]; do\n    digit=$((number\
    \ % 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    number=$((number\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even=0\n    local odd=0\n\
    \    local num=$1\n    while [ $num -ne 0 ]; do\n        local digit=$((num %\
    \ 10))\n        if [ $((digit % 2)) -eq 0 ]; then\n            even=$((even +\
    \ 1))\n        else\n            odd=$((odd + 1))\n        fi\n        num=$((num\
    \ / 10))\n    done\n    echo \"[\\\"$even\\\", \\\"$odd\\\"]\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  local digit\n  while [ $number -ne 0 ]; do\n    digit=$((number\
    \ % 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    number=$((number\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even=0\n  local odd=0\n  local\
    \ num=$1\n  while [ $num -ne 0 ]; do\n    local digit=$(( num % 10 ))\n    if\
    \ [ $(( digit % 2 )) -eq 0 ]; then\n      even=$(( even + 1 ))\n    else\n   \
    \   odd=$(( odd + 1 ))\n    fi\n    num=$(( num / 10 ))\n  done\n  echo \"[\\\"\
    $even\\\", \\\"$odd\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even=0\n  local odd=0\n  local\
    \ num=\"$1\"\n  local digit\n  while [ \"$num\" -ne 0 ]; do\n    digit=$((num\
    \ % 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      ((even++))\n    else\n\
    \      ((odd++))\n    fi\n    num=$((num / 10))\n  done\n  echo \"[\\\"$even\\\
    \", \\\"$odd\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\"\
    ) = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local num=$1\n  local even_count=0\n\
    \  local odd_count=0\n  local digit\n  while [ $num -gt 0 ]; do\n    digit=$((num\
    \ % 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    num=$((num\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local num=$1\n  while [[ $num -ne 0 ]]; do\n    local digit=$((num % 10))\n\
    \    if [[ $((digit % 2)) -eq 0 ]]; then\n      even_count=$((even_count + 1))\n\
    \    else\n      odd_count=$((odd_count + 1))\n    fi\n    num=$((num / 10))\n\
    \  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  for (( i=0; i<${#1}; i++ )); do\n    local digit=${1:$i:1}\n    if [[ $digit\
    \ =~ ^[0-9]+$ ]]; then\n      if [[ $(( digit % 2 )) -eq 0 ]]; then\n        ((\
    \ even_count++ ))\n      else\n        (( odd_count++ ))\n      fi\n    fi\n \
    \ done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count=0\n    local odd_count=0\n\
    \    local number=$1\n    while [[ $number -ne 0 ]]; do\n        local digit=$((number\
    \ % 10))\n        if [[ $((digit % 2)) -eq 0 ]]; then\n            ((even_count++))\n\
    \        else\n            ((odd_count++))\n        fi\n        number=$((number\
    \ / 10))\n    done\n    echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\
    \ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n\
    \    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"\
    3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"\
    -2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  local digit\n  while [[ $number -ne 0 ]]; do\n    digit=$((number\
    \ % 10))\n    if [[ $((digit % 2)) -eq 0 ]]; then\n      ((even_count++))\n  \
    \  else\n      ((odd_count++))\n    fi\n    number=$((number / 10))\n  done\n\
    \  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n  \
    \  even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local num=$1\n  local digit\n  while [ $num -gt 0 ]; do\n    digit=$((num %\
    \ 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    num=$((num\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local num=$1\n  local even_count=0\n\
    \  local odd_count=0\n  local digit\n  while [ $num -gt 0 ]; do\n    digit=$((num\
    \ % 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    num=$((num\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local num=$1\n  local num_len=${#num}\n  local i=0\n  while [ $i -lt $num_len\
    \ ]; do\n    local digit=${num:$i:1}\n    if [ $((digit % 2)) -eq 0 ]; then\n\
    \      even_count=$((even_count + 1))\n    else\n      odd_count=$((odd_count\
    \ + 1))\n    fi\n    i=$((i + 1))\n  done\n  echo \"[\\\"$even_count\\\", \\\"\
    $odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\"\
    ) = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n   \
    \ [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\"\
    \ ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local num=$1\n    local even_count=0\n\
    \    local odd_count=0\n    local digit\n    local num_len=${#num}\n    local\
    \ i=0\n    while [ $i -lt $num_len ]; do\n        digit=${num:$i:1}\n        if\
    \ [ $((digit % 2)) -eq 0 ]; then\n            even_count=$((even_count + 1))\n\
    \        else\n            odd_count=$((odd_count + 1))\n        fi\n        i=$((i\
    \ + 1))\n    done\n    echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\
    \ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n\
    \    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"\
    3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"\
    -2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local num=$1\n  local digit\n  while [[ $num -gt 0 ]]; do\n    digit=$((num\
    \ % 10))\n    if [[ $((digit % 2)) -eq 0 ]]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    num=$((num\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local num=$1\n  local digit\n  while [ $num -gt 0 ]; do\n    digit=$((num %\
    \ 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    num=$((num\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  local digit\n  while [ $number -ne 0 ]; do\n    digit=$((number\
    \ % 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    number=$((number\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local num=$1\n  local digit\n  while [ $num -gt 0 ]; do\n    digit=$((num %\
    \ 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    num=$((num\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local -i even_count=0\n  local -i\
    \ odd_count=0\n  local -i number=$1\n  local -i digit\n  while [ $number -ne 0\
    \ ]; do\n    digit=$((number % 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n \
    \     ((even_count++))\n    else\n      ((odd_count++))\n    fi\n    number=$((number\
    \ / 10))\n  done\n  echo \"[\\\"${even_count}\\\", \\\"${odd_count}\\\"]\"\n}\n\
    \ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n\
    \    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"\
    3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"\
    -2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  local digit\n  while [ $number -ne 0 ]; do\n    digit=$((number\
    \ % 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      ((even_count++))\n    else\n\
    \      ((odd_count++))\n    fi\n    number=$((number / 10))\n  done\n  echo \"\
    [\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local num=$1\n    local even=0\n\
    \    local odd=0\n    local digit\n    while [ $num -ne 0 ]; do\n        digit=$((num\
    \ % 10))\n        if [ $((digit % 2)) -eq 0 ]; then\n            even=$((even\
    \ + 1))\n        else\n            odd=$((odd + 1))\n        fi\n        num=$((num\
    \ / 10))\n    done\n    echo \"[\\\"$even\\\", \\\"$odd\\\"]\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count=0\n    local odd_count=0\n\
    \    local num=$1\n    local digit\n    while [ $num -gt 0 ]; do\n        digit=$((num\
    \ % 10))\n        if [ $((digit % 2)) -eq 0 ]; then\n            even_count=$((even_count\
    \ + 1))\n        else\n            odd_count=$((odd_count + 1))\n        fi\n\
    \        num=$((num / 10))\n    done\n    echo \"[\\\"$even_count\\\", \\\"$odd_count\\\
    \"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  local digit=0\n  while [[ $number -ne 0 ]]; do\n    digit=$((number\
    \ % 10))\n    if [[ $((digit % 2)) -eq 0 ]]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    number=$((number\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count=0\n    local odd_count=0\n\
    \    local num=$1\n    while [ $num -ne 0 ]; do\n        local digit=$((num %\
    \ 10))\n        if [ $((digit % 2)) -eq 0 ]; then\n            even_count=$((even_count\
    \ + 1))\n        else\n            odd_count=$((odd_count + 1))\n        fi\n\
    \        num=$((num / 10))\n    done\n    echo \"[\\\"$even_count\\\", \\\"$odd_count\\\
    \"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local number=$1\n  while [[ $number -ne 0 ]]; do\n    local digit=$((number\
    \ % 10))\n    if [[ $((digit % 2)) -eq 0 ]]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    number=$((number\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\n\
    candidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local -r num=$1\n  local -r even_count=$(echo\
    \ \"$num\" | grep -o '[02468]' | wc -l)\n  local -r odd_count=$(echo \"$num\"\
    \ | grep -o '[13579]' | wc -l)\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\
    \"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local num=${1//[^0-9]/}\n  local len=${#num}\n  for (( i=0; i<len; i++ ));\
    \ do\n    if (( num % 2 == 0 )); then\n      even_count=$((even_count+1))\n  \
    \  else\n      odd_count=$((odd_count+1))\n    fi\n    num=$((num/10))\n  done\n\
    \  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n  \
    \  even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local digit\n  for (( i=0; i<${#1}; i++ )); do\n    digit=${1:$i:1}\n    if\
    \ [[ $digit =~ ^[0-9]+$ ]]; then\n      if (( digit % 2 == 0 )); then\n      \
    \  (( even_count++ ))\n      else\n        (( odd_count++ ))\n      fi\n    fi\n\
    \  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  local num=$1\n  local digit\n  while [ $num -gt 0 ]; do\n    digit=$(( num\
    \ % 10 ))\n    if [ $(( digit % 2 )) -eq 0 ]; then\n      (( even_count++ ))\n\
    \    else\n      (( odd_count++ ))\n    fi\n    num=$(( num / 10 ))\n  done\n\
    \  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n  \
    \  even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count=0\n    local odd_count=0\n\
    \    local number=$1\n    local digit\n    while [ $number -ne 0 ]; do\n     \
    \   digit=$((number % 10))\n        if [ $((digit % 2)) -eq 0 ]; then\n      \
    \      even_count=$((even_count + 1))\n        else\n            odd_count=$((odd_count\
    \ + 1))\n        fi\n        number=$((number / 10))\n    done\n    echo \"[\\\
    \"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count=0\n    local odd_count=0\n\
    \    local number=$1\n    local digit\n    while [[ $number -ne 0 ]]; do\n   \
    \     digit=$((number % 10))\n        if [[ $((digit % 2)) -eq 0 ]]; then\n  \
    \          even_count=$((even_count + 1))\n        else\n            odd_count=$((odd_count\
    \ + 1))\n        fi\n        number=$((number / 10))\n    done\n    echo \"[\\\
    \"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count=0\n    local odd_count=0\n\
    \    local num=$1\n    while [ $num -ne 0 ]; do\n        local digit=$((num %\
    \ 10))\n        if [ $((digit % 2)) -eq 0 ]; then\n            even_count=$((even_count\
    \ + 1))\n        else\n            odd_count=$((odd_count + 1))\n        fi\n\
    \        num=$((num / 10))\n    done\n    echo \"[\\\"$even_count\\\", \\\"$odd_count\\\
    \"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local even_count=0\n    local odd_count=0\n\
    \    local num=$1\n    local digit\n    while [ $num -gt 0 ]; do\n        digit=$((num\
    \ % 10))\n        if [ $((digit % 2)) -eq 0 ]; then\n            even_count=$((even_count\
    \ + 1))\n        else\n            odd_count=$((odd_count + 1))\n        fi\n\
    \        num=$((num / 10))\n    done\n    echo \"[\\\"$even_count\\\", \\\"$odd_count\\\
    \"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local even_count=0\n  local odd_count=0\n\
    \  for (( i=0; i<${#1}; i++ )); do\n    local digit=${1:$i:1}\n    if [[ \"$digit\"\
    \ =~ ^[0-9]+$ ]]; then\n      if [[ $(( digit % 2 )) -eq 0 ]]; then\n        ((\
    \ even_count++ ))\n      else\n        (( odd_count++ ))\n      fi\n    fi\n \
    \ done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate()\
    \ {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate\
    \ \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[\
    \ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\"\
    \ ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local num=$1\n  local even_count=0\n\
    \  local odd_count=0\n  local digit\n  local num_len=${#num}\n  local i\n  for\
    \ ((i=0; i<num_len; i++)); do\n    digit=${num:i:1}\n    if ((digit % 2 == 0));\
    \ then\n      ((even_count++))\n    else\n      ((odd_count++))\n    fi\n  done\n\
    \  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"\n}\n\ncandidate() {\n  \
    \  even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\"\
    ) = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"\
    3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate\
    \ \"-45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n  local -i even=0 odd=0\n  local -i\
    \ number=$1\n  while ((number > 0)); do\n    if ((number % 2 == 0)); then\n  \
    \    ((even++))\n    else\n      ((odd++))\n    fi\n    ((number /= 10))\n  done\n\
    \  echo \"[\\\"$even\\\", \\\"$odd\\\"]\"\n}\n\ncandidate() {\n    even_odd_count\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n\
    \    [[ $(candidate \"-78\") = \"1 1\" ]]\n    [[ $(candidate \"3452\") = \"2\
    \ 2\" ]]\n    [[ $(candidate \"346211\") = \"3 3\" ]]\n    [[ $(candidate \"-345821\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"\
    -45347\") = \"2 3\" ]]\n    [[ $(candidate \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689
- exit_code: 1
  program: "#!/bin/bash\n# Given an integer. return a list that has the number of\
    \ even and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\"\
    )\n# ['\"1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n\
    #\n# $1 is an integer\neven_odd_count() {\n    local num=$1\n    local even_count=0\n\
    \    local odd_count=0\n    local digit\n    for (( i=0; i<${#num}; i++ )); do\n\
    \        digit=${num:$i:1}\n        if [[ $digit =~ ^[0-9]+$ ]]; then\n      \
    \      if [[ $(( digit % 2 )) -eq 0 ]]; then\n                even_count=$(( even_count\
    \ + 1 ))\n            else\n                odd_count=$(( odd_count + 1 ))\n \
    \           fi\n        fi\n    done\n    echo \"[\\\"$even_count\\\", \\\"$odd_count\\\
    \"]\"\n}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"\
    1 1\" ]]\n    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\"\
    ) = \"3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate\
    \ \"-2\") = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
    \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011689

language: sh
name: HumanEval_89_encrypt
results:
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    # Hint: You can use the modulo operator to wrap around the alphabet\n\
    \    # Hint: You can use the ord() and chr() functions to convert between\n  \
    \  #       characters and their ASCII values\n    # Hint: You can use the range\
    \ operator to iterate over characters in a string\n    # Hint: You can use the\
    \ join() function to join a list of characters into a string\n    # Hint: You\
    \ can use the map() function to apply a function to each element of a list\n \
    \   # Hint: You can use the zip() function to combine two lists into a list of\
    \ tuples\n    # Hint: You can use the enumerate() function to get the index of\
    \ an element in a list\n    # Hint: You can use the range() function to create\
    \ a list of numbers\n    # Hint: You can use the ord() function to get the ASCII\
    \ value of a character\n    # Hint: You can use the chr() function to get the\
    \ character of an ASCII value\n    # Hint: You can use the len() function to get\
    \ the length of a list\n    # Hint: You can use the str() function to convert\
    \ a number to a string\n    # Hint: You can use the int() function to convert\
    \ a string to a number\n    # Hint: You can use the join() function to join a\
    \ list of strings into a string\n    # Hint: You can use the split() function\
    \ to split a string into a list of strings\n    # Hint: You can use the replace()\
    \ function to replace a substring in a string\n    # Hint: You can use the strip()\
    \ function to remove whitespace from the beginning and end of a string\n    #\
    \ Hint: You can use the lower() function to convert a string to lowercase\n  \
    \  # Hint: You can use the upper() function to convert a string to uppercase\n\
    \    # Hint: You can use the isalpha() function to check if a character is a letter\n\
    \    # Hint: You can use the isdigit() function to check if a character is a digit\n\
    \    # Hint: You can use the isalnum() function to check if a character is a letter\
    \ or a digit\n    # Hint: You can use the islower() function to check if a character\
    \ is a\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"\
    ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate \"\
    et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n\
    \    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5d9wj9yr.sh: line 43: syntax error near unexpected token `}''

    /tmp/tmp5d9wj9yr.sh: line 43: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: implement this\
    \ function\n    # Hint: use the command `tr`\n    # Hint: use the command `echo`\n\
    \    # Hint: use the command `seq`\n    # Hint: use the command `tr`\n    # Hint:\
    \ use the command `echo`\n    # Hint: use the command `seq`\n    # Hint: use the\
    \ command `tr`\n    # Hint: use the command `echo`\n    # Hint: use the command\
    \ `seq`\n    # Hint: use the command `tr`\n    # Hint: use the command `echo`\n\
    \    # Hint: use the command `seq`\n    # Hint: use the command `tr`\n    # Hint:\
    \ use the command `echo`\n    # Hint: use the command `seq`\n    # Hint: use the\
    \ command `tr`\n    # Hint: use the command `echo`\n    # Hint: use the command\
    \ `seq`\n    # Hint: use the command `tr`\n    # Hint: use the command `echo`\n\
    \    # Hint: use the command `seq`\n    # Hint: use the command `tr`\n    # Hint:\
    \ use the command `echo`\n    # Hint: use the command `seq`\n    # Hint: use the\
    \ command `tr`\n    # Hint: use the command `echo`\n    # Hint: use the command\
    \ `seq`\n    # Hint: use the command `tr`\n    # Hint: use the command `echo`\n\
    \    # Hint: use the command `seq`\n    # Hint: use the command `tr`\n    # Hint:\
    \ use the command `echo`\n    # Hint: use the command `seq`\n    # Hint: use the\
    \ command `tr`\n    # Hint: use the command `echo`\n    # Hint: use the command\
    \ `seq`\n    # Hint: use the command `tr`\n    # Hint: use the command `echo`\n\
    \    # Hint: use the command `seq`\n    # Hint: use the command `tr`\n    # Hint:\
    \ use the command `echo`\n    # Hint: use the command `seq\n}\n\ncandidate() {\n\
    \    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"\
    lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate\
    \ \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate\
    \ \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\"\
    ) = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6mtckhem.sh: line 61: syntax error near unexpected token `}''

    /tmp/tmp6mtckhem.sh: line 61: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n  # TODO: your code here\n\
    \  # Hint: use the tr command\n  # Hint: use the echo command\n  # Hint: use the\
    \ $1 variable\n  # Hint: use the $() syntax\n  # Hint: use the tr command\n  #\
    \ Hint: use the echo command\n  # Hint: use the $1 variable\n  # Hint: use the\
    \ $() syntax\n  # Hint: use the tr command\n  # Hint: use the echo command\n \
    \ # Hint: use the $1 variable\n  # Hint: use the $() syntax\n  # Hint: use the\
    \ tr command\n  # Hint: use the echo command\n  # Hint: use the $1 variable\n\
    \  # Hint: use the $() syntax\n  # Hint: use the tr command\n  # Hint: use the\
    \ echo command\n  # Hint: use the $1 variable\n  # Hint: use the $() syntax\n\
    \  # Hint: use the tr command\n  # Hint: use the echo command\n  # Hint: use the\
    \ $1 variable\n  # Hint: use the $() syntax\n  # Hint: use the tr command\n  #\
    \ Hint: use the echo command\n  # Hint: use the $1 variable\n  # Hint: use the\
    \ $() syntax\n  # Hint: use the tr command\n  # Hint: use the echo command\n \
    \ # Hint: use the $1 variable\n  # Hint: use the $() syntax\n  # Hint: use the\
    \ tr command\n  # Hint: use the echo command\n  # Hint: use the $1 variable\n\
    \  # Hint: use the $() syntax\n  # Hint: use the tr command\n  # Hint: use the\
    \ echo command\n  # Hint: use the $1 variable\n  # Hint: use the $() syntax\n\
    \  # Hint: use the tr command\n  # Hint: use the echo command\n  # Hint: use the\
    \ $1 variable\n  # Hint: use the $() syntax\n  # Hint: use the tr command\n  #\
    \ Hint: use the echo command\n  # Hint: use the $1 variable\n  # Hint: use the\
    \ $()\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\"\
    \ ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"\
    ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[\
    \ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp97hyi7er.sh: line 67: syntax error near unexpected token `}''

    /tmp/tmp97hyi7er.sh: line 67: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # Write your code here\n\
    \    # You can use the following command to get the length of a string:\n    #\
    \ length=$(echo -n $1 | wc -m)\n    #\n    # You can use the following command\
    \ to get the ASCII value of a character:\n    # ascii=$(echo -n $1 | od -An -tuC)\n\
    \    #\n    # You can use the following command to convert an ASCII value to a\
    \ character:\n    # char=$(printf \\\\$(printf '%03o' $ascii))\n    #\n    # You\
    \ can use the following command to convert a character to an ASCII value:\n  \
    \  # ascii=$(printf '%d' \"'$char\")\n    #\n    # You can use the following command\
    \ to convert an ASCII value to a character:\n    # char=$(printf \\\\$(printf\
    \ '%03o' $ascii))\n    #\n    # You can use the following command to convert a\
    \ character to an ASCII value:\n    # ascii=$(printf '%d' \"'$char\")\n    #\n\
    \    # You can use the following command to convert an ASCII value to a character:\n\
    \    # char=$(printf \\\\$(printf '%03o' $ascii))\n    #\n    # You can use the\
    \ following command to convert a character to an ASCII value:\n    # ascii=$(printf\
    \ '%d' \"'$char\")\n    #\n    # You can use the following command to convert\
    \ an ASCII value to a character:\n    # char=$(printf \\\\$(printf '%03o' $ascii))\n\
    \    #\n    # You can use the following command to convert a character to an ASCII\
    \ value:\n    # ascii=$(printf '%d' \"'$char\")\n    #\n    # You can use the\
    \ following command to convert an ASCII value to a character:\n    # char=$(printf\
    \ \\\\$(printf '%03o' $ascii))\n    #\n    # You can use the following command\
    \ to convert a character to an ASCII value:\n    # ascii=$(printf '%d' \"'$char\"\
    )\n    #\n    # You can use the following command to convert an ASCII value to\
    \ a character:\n    # char=$(printf \\\\\n}\n\ncandidate() {\n    encrypt \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9kfv_ht2.sh: line 57: syntax error near unexpected token `}''

    /tmp/tmp9kfv_ht2.sh: line 57: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: implement this\
    \ function\n    echo \"Not implemented\"\n}\n\ncandidate() {\n    encrypt \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: implement this\
    \ function\n    echo \"$1\"\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"\
    ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate \"\
    et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n\
    \    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4yhaq9mm.sh: line 19: syntax error near unexpected token `}''

    /tmp/tmp4yhaq9mm.sh: line 19: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    # Hint: You can use the following command to get the length of\
    \ a string:\n    # length=${#1}\n    # Hint: You can use the following command\
    \ to get the ASCII value of a character:\n    # char_ascii=$(printf \"%d\" \"\
    '$char\")\n    # Hint: You can use the following command to get the character\
    \ from an ASCII value:\n    # char=$(printf \"\\x$(printf %x $char_ascii)\")\n\
    \    # Hint: You can use the following command to get the first character of a\
    \ string:\n    # first_char=${1:0:1}\n    # Hint: You can use the following command\
    \ to get the rest of a string after the first character:\n    # rest_of_string=${1:1}\n\
    \    # Hint: You can use the following command to concatenate strings:\n    #\
    \ encrypted_string=$encrypted_string$encrypted_char\n    # Hint: You can use the\
    \ following command to get the remainder of a division:\n    # remainder=$(( $char_ascii\
    \ % 26 ))\n    # Hint: You can use the following command to get the quotient of\
    \ a division:\n    # quotient=$(( $char_ascii / 26 ))\n    # Hint: You can use\
    \ the following command to get the remainder of a division:\n    # remainder=$((\
    \ $char_ascii % 26 ))\n    # Hint: You can use the following command to get the\
    \ quotient of a division:\n    # quotient=$(( $char_ascii / 26 ))\n    # Hint:\
    \ You can use the following command to get the remainder of a division:\n    #\
    \ remainder=$(( $char_ascii % 26 ))\n    # Hint: You can use the following command\
    \ to get the quotient of a division:\n    # quotient=$(( $char_ascii / 26 ))\n\
    \    # Hint: You can use the following command to get the remainder of a division:\n\
    \    # remainder=$(( $char_ascii % 26 ))\n    # Hint: You can use the following\
    \ command to get the quotient of a division:\n    # quotient=$(( $char_ascii /\
    \ 26\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\"\
    \ ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"\
    ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[\
    \ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4m417ww7.sh: line 47: syntax error near unexpected token `}''

    /tmp/tmp4m417ww7.sh: line 47: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: implement this\
    \ function\n    echo $1 | tr 'a-z' 'c-za-b'\n}\n\ncandidate() {\n    encrypt \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[\
    \ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") =\
    \ \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    echo \"Not yet implemented\"\n}\n\ncandidate() {\n    encrypt\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n\
    \    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\"\
    ) = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    # Hint: You can use the ord and chr functions to convert between\n\
    \    # ASCII characters and their integer values.\n    # Hint: You can use the\
    \ modulo operator to wrap around the alphabet\n    # if you shift past the end.\n\
    \    # Hint: You can use the range operator to create a list of numbers\n    #\
    \ from 0 to the length of the string.\n    # Hint: You can use the map function\
    \ to apply a function to every\n    # element of a list.\n    # Hint: You can\
    \ use the join function to join a list of strings\n    # together.\n    # Hint:\
    \ You can use the ord function to get the ASCII value of a\n    # character.\n\
    \    # Hint: You can use the chr function to get the character\n    # corresponding\
    \ to an ASCII value.\n    # Hint: You can use the range operator to create a list\
    \ of numbers\n    # from 0 to the length of the string.\n    # Hint: You can use\
    \ the map function to apply a function to every\n    # element of a list.\n  \
    \  # Hint: You can use the join function to join a list of strings\n    # together.\n\
    \    # Hint: You can use the ord function to get the ASCII value of a\n    # character.\n\
    \    # Hint: You can use the chr function to get the character\n    # corresponding\
    \ to an ASCII value.\n    # Hint: You can use the range operator to create a list\
    \ of numbers\n    # from 0 to the length of the string.\n    # Hint: You can use\
    \ the map function to apply a function to every\n    # element of a list.\n  \
    \  # Hint: You can use the join function to join a list of strings\n    # together.\n\
    \    # Hint: You can use the ord function to get the ASCII value of a\n    # character.\n\
    \    # Hint: You can use the chr function to get the character\n    # corresponding\
    \ to an ASCII value.\n    # Hint: You can use the range operator to create a list\
    \ of numbers\n    # from 0 to the length of the string.\n    # Hint: You can use\
    \ the map function to apply a function to every\n    # element of a list.\n  \
    \  # H\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"\
    ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate \"\
    et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n\
    \    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpc3h4uk89.sh: line 58: syntax error near unexpected token `}''

    /tmp/tmpc3h4uk89.sh: line 58: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    echo $1 | tr 'a-z' 'c-za-b'\n}\n\ncandidate() {\n    encrypt \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[\
    \ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") =\
    \ \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"\
    ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate \"\
    et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n\
    \    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4yhaq9mm.sh: line 19: syntax error near unexpected token `}''

    /tmp/tmp4yhaq9mm.sh: line 19: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n\t# TODO: Implement this\
    \ function\n\techo \"TODO\"\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: implement this\
    \ function\n    # Hint: use the tr command\n    # Hint: use the echo command\n\
    \    # Hint: use the $1 variable\n    # Hint: use the $2 variable\n    # Hint:\
    \ use the $3 variable\n    # Hint: use the $4 variable\n    # Hint: use the $5\
    \ variable\n    # Hint: use the $6 variable\n    # Hint: use the $7 variable\n\
    \    # Hint: use the $8 variable\n    # Hint: use the $9 variable\n    # Hint:\
    \ use the ${10} variable\n    # Hint: use the ${11} variable\n    # Hint: use\
    \ the ${12} variable\n    # Hint: use the ${13} variable\n    # Hint: use the\
    \ ${14} variable\n    # Hint: use the ${15} variable\n    # Hint: use the ${16}\
    \ variable\n    # Hint: use the ${17} variable\n    # Hint: use the ${18} variable\n\
    \    # Hint: use the ${19} variable\n    # Hint: use the ${20} variable\n    #\
    \ Hint: use the ${21} variable\n    # Hint: use the ${22} variable\n    # Hint:\
    \ use the ${23} variable\n    # Hint: use the ${24} variable\n    # Hint: use\
    \ the ${25} variable\n    # Hint: use the ${26} variable\n    # Hint: use the\
    \ ${27} variable\n    # Hint: use the ${28} variable\n    # Hint: use the ${29}\
    \ variable\n    # Hint: use the ${30} variable\n    # Hint: use the ${31} variable\n\
    \    # Hint: use the ${32} variable\n    # Hint: use the ${33} variable\n    #\
    \ Hint: use the ${34} variable\n    # Hint: use the ${35} variable\n    # Hint:\
    \ use the ${36} variable\n    # Hint: use the ${37} variable\n    # Hint: use\
    \ the ${38} variable\n    # Hint: use the ${39} variable\n    # Hint: use the\
    \ ${40} variable\n    # Hint: use the ${41} variable\n}\n\ncandidate() {\n   \
    \ encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\"\
    \ ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate\
    \ \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate\
    \ \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\"\
    ) = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmph8lwwoq7.sh: line 62: syntax error near unexpected token `}''

    /tmp/tmph8lwwoq7.sh: line 62: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: implement this\
    \ function\n    echo \"TODO\"\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n    # Hint: You can use the modulo operator to wrap around the alphabet\n\
    \    # Hint: You can use the ord and chr functions to convert between\n    # \
    \      characters and ascii values\n    # Hint: You can use the expr command to\
    \ do arithmetic\n    # Hint: You can use the tr command to translate characters\n\
    \    # Hint: You can use the echo command to print a string\n    # Hint: You can\
    \ use the seq command to generate a range of numbers\n    # Hint: You can use\
    \ the fold command to fold a string into multiple lines\n    # Hint: You can use\
    \ the paste command to merge multiple lines into one\n    # Hint: You can use\
    \ the tr command to delete characters\n    # Hint: You can use the cut command\
    \ to select parts of a line\n    # Hint: You can use the rev command to reverse\
    \ a string\n    # Hint: You can use the sort command to sort a string\n    # Hint:\
    \ You can use the uniq command to remove duplicate characters\n    # Hint: You\
    \ can use the sed command to replace characters\n    # Hint: You can use the tr\
    \ command to squeeze duplicate characters\n    # Hint: You can use the tr command\
    \ to delete characters\n    # Hint: You can use the tr command to translate characters\n\
    \    # Hint: You can use the tr command to squeeze duplicate characters\n    #\
    \ Hint: You can use the tr command to delete characters\n    # Hint: You can use\
    \ the tr command to translate characters\n    # Hint: You can use the tr command\
    \ to squeeze duplicate characters\n    # Hint: You can use the tr command to delete\
    \ characters\n    # Hint: You can use the tr command to translate characters\n\
    \    # Hint: You can use the tr command to squeeze duplicate characters\n    #\
    \ Hint: You can use the tr command to delete characters\n    # Hint: You can use\
    \ the tr command to translate characters\n    # Hint: You can use the tr command\
    \ to squeeze duplicate characters\n    # Hint: You can use the tr command to delete\
    \ characters\n    # Hint: You can use the tr command to translate characters\n\
    \    # Hint: You can use the tr command to squeeze duplicate characters\n    #\
    \ Hint: You can use the tr command\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7y6lox61.sh: line 51: syntax error near unexpected token `}''

    /tmp/tmp7y6lox61.sh: line 51: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    # Hint: You can use the modulo operator to wrap around the alphabet\n\
    \    # Hint: You can use the ord and chr functions to convert between\n    # \
    \      characters and their ASCII values\n    # Hint: You can use the string concatenation\
    \ operator to join\n    #       strings together\n    # Hint: You can use the\
    \ string length operator to get the length\n    #       of a string\n    # Hint:\
    \ You can use the string index operator to get the character\n    #       at a\
    \ given index in a string\n    # Hint: You can use the string slice operator to\
    \ get a substring\n    #       of a string\n    # Hint: You can use the string\
    \ replace operator to replace a\n    #       substring of a string with another\
    \ substring\n    # Hint: You can use the string to lowercase operator to convert\n\
    \    #       a string to lowercase\n    # Hint: You can use the string to uppercase\
    \ operator to convert\n    #       a string to uppercase\n    # Hint: You can\
    \ use the string to titlecase operator to convert\n    #       a string to titlecase\n\
    \    # Hint: You can use the string to reverse operator to reverse\n    #    \
    \   a string\n    # Hint: You can use the string to swapcase operator to swap\
    \ the\n    #       case of a string\n    # Hint: You can use the string to center\
    \ operator to center a\n    #       string in a given width\n    # Hint: You can\
    \ use the string to ljust operator to left-justify\n    #       a string in a\
    \ given width\n    # Hint: You can use the string to rjust operator to right-justify\n\
    \    #       a string in a given width\n    # Hint: You can use the string to\
    \ zfill operator to zero-fill a\n    #       string in a given width\n    # Hint:\
    \ You can use the string to partition operator to partition\n    #       a string\
    \ around a given separator\n    # Hint: You can use the string to rpartition operator\
    \ to\n    #       right-partition a string around a given separator\n    # Hint:\
    \ You can use the string to split operator to split a\n    #       string around\
    \ a given separator\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\"\
    ) = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate\
    \ \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\"\
    \ ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxa9zokj2.sh: line 56: syntax error near unexpected token `}''

    /tmp/tmpxa9zokj2.sh: line 56: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    echo $1 | tr 'a-z' 'c-za-b'\n}\n\ncandidate() {\n    encrypt \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[\
    \ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") =\
    \ \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n\t# TODO: Write your code\
    \ here\n\t# Hint: You can use the modulo operator to wrap around the alphabet\n\
    \t# Hint: You can use the ord and chr functions to convert between characters\
    \ and their ASCII values\n\t# Hint: You can use the echo -n command to print without\
    \ a newline\n\t# Hint: You can use the tr command to translate characters\n\t\
    # Hint: You can use the seq command to generate a sequence of numbers\n\t# Hint:\
    \ You can use the fold command to fold a string into multiple lines\n\t# Hint:\
    \ You can use the paste command to merge multiple lines into one\n\t# Hint: You\
    \ can use the sed command to replace text\n\t# Hint: You can use the tr command\
    \ to delete characters\n\t# Hint: You can use the rev command to reverse a string\n\
    \t# Hint: You can use the sort command to sort a string\n\t# Hint: You can use\
    \ the uniq command to remove duplicate characters\n\t# Hint: You can use the head\
    \ command to get the first character of a string\n\t# Hint: You can use the tail\
    \ command to get all but the first character of a string\n\t# Hint: You can use\
    \ the wc command to count the number of lines in a string\n\t# Hint: You can use\
    \ the rev command to reverse a string\n\t# Hint: You can use the sort command\
    \ to sort a string\n\t# Hint: You can use the uniq command to remove duplicate\
    \ characters\n\t# Hint: You can use the head command to get the first character\
    \ of a string\n\t# Hint: You can use the tail command to get all but the first\
    \ character of a string\n\t# Hint: You can use the wc command to count the number\
    \ of lines in a string\n\t# Hint: You can use the rev command to reverse a string\n\
    \t# Hint: You can use the sort command to sort a string\n\t# Hint: You can use\
    \ the uniq command to remove duplicate characters\n\t# Hint: You can use the head\
    \ command to get the first character of a string\n\t# Hint: You can use the tail\
    \ command to get all but the first character of a string\n\t# Hint: You can use\
    \ the wc command to count the number of lines in a string\n\t\n}\n\ncandidate()\
    \ {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\"\
    ) = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate\
    \ \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate\
    \ \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\"\
    ) = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpf5hpq1yl.sh: line 47: syntax error near unexpected token `}''

    /tmp/tmpf5hpq1yl.sh: line 47: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: implement this\
    \ function\n    echo \"TODO\"\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n    # Hint: You can use the ord and chr functions to convert between\n\
    \    #       characters and their ASCII values.\n    # Hint: You can use the modulo\
    \ operator to wrap around the alphabet\n    #       if you go past the end.\n\
    \    # Hint: You can use the echo command to return a value.\n    # Hint: You\
    \ can use the seq command to generate a sequence of\n    #       numbers.\n  \
    \  # Hint: You can use the tr command to translate characters.\n    # Hint: You\
    \ can use the paste command to merge two files.\n    # Hint: You can use the fold\
    \ command to wrap lines.\n    # Hint: You can use the sort command to sort lines.\n\
    \    # Hint: You can use the uniq command to remove duplicate lines.\n    # Hint:\
    \ You can use the head command to get the first line.\n    # Hint: You can use\
    \ the tail command to get all but the first line.\n    # Hint: You can use the\
    \ cut command to get a specific field.\n    # Hint: You can use the tr command\
    \ to delete characters.\n    # Hint: You can use the rev command to reverse lines.\n\
    \    # Hint: You can use the wc command to count lines.\n    # Hint: You can use\
    \ the bc command to do math.\n    # Hint: You can use the expr command to do math.\n\
    \    # Hint: You can use the printf command to format numbers.\n    # Hint: You\
    \ can use the printf command to format strings.\n    # Hint: You can use the printf\
    \ command to format characters.\n    # Hint: You can use the printf command to\
    \ format hexadecimal.\n    # Hint: You can use the printf command to format octal.\n\
    \    # Hint: You can use the printf command to format binary.\n    # Hint: You\
    \ can use the printf command to format scientific notation.\n    # Hint: You can\
    \ use the printf command to format floating point.\n    # Hint: You can use the\
    \ printf command to format exponential.\n    # Hint: You can use the printf command\
    \ to format general.\n    # Hint: You can use the printf command to format characters.\n\
    \    #\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"\
    ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate \"\
    et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n\
    \    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5fxqi7e4.sh: line 51: syntax error near unexpected token `}''

    /tmp/tmp5fxqi7e4.sh: line 51: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    local str=$1\n    local\
    \ len=${#str}\n    local i=0\n    local result=\"\"\n    local char=\"\"\n   \
    \ local ascii=\"\"\n    local newascii=\"\"\n    local newchar=\"\"\n    while\
    \ [ $i -lt $len ]; do\n        char=${str:$i:1}\n        ascii=$(printf \"%d\"\
    \ \"'$char\")\n        newascii=$((ascii+4))\n        newchar=$(printf \\\\$(printf\
    \ '%03o' $newascii))\n        result=$result$newchar\n        i=$((i+1))\n   \
    \ done\n    echo $result\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\"\
    ) = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate\
    \ \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\"\
    \ ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: implement this\
    \ function\n    echo \"TODO\"\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: implement this\
    \ function\n    # Hint: use the ord and chr functions\n    # Hint: use the modulo\
    \ operator\n    # Hint: use the range operator\n    # Hint: use the join function\n\
    \    # Hint: use the map function\n    # Hint: use the zip function\n    # Hint:\
    \ use the ord function\n    # Hint: use the chr function\n    # Hint: use the\
    \ modulo operator\n    # Hint: use the range operator\n    # Hint: use the join\
    \ function\n    # Hint: use the map function\n    # Hint: use the zip function\n\
    \    # Hint: use the ord function\n    # Hint: use the chr function\n    # Hint:\
    \ use the modulo operator\n    # Hint: use the range operator\n    # Hint: use\
    \ the join function\n    # Hint: use the map function\n    # Hint: use the zip\
    \ function\n    # Hint: use the ord function\n    # Hint: use the chr function\n\
    \    # Hint: use the modulo operator\n    # Hint: use the range operator\n   \
    \ # Hint: use the join function\n    # Hint: use the map function\n    # Hint:\
    \ use the zip function\n    # Hint: use the ord function\n    # Hint: use the\
    \ chr function\n    # Hint: use the modulo operator\n    # Hint: use the range\
    \ operator\n    # Hint: use the join function\n    # Hint: use the map function\n\
    \    # Hint: use the zip function\n    # Hint: use the ord function\n    # Hint:\
    \ use the chr function\n    # Hint: use the modulo operator\n    # Hint: use the\
    \ range operator\n    # Hint: use the join function\n    # Hint: use the map function\n\
    \    # Hint: use the zip function\n    # Hint: use the ord function\n    # Hint:\
    \ use the chr function\n    # Hint: use the modulo operator\n    # Hint: use the\
    \ range operator\n    # Hint: use the join function\n    # Hint: use the map function\n\
    \    # Hint: use the zip function\n    # Hint: use\n}\n\ncandidate() {\n    encrypt\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n\
    \    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\"\
    ) = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpd1uxohhh.sh: line 68: syntax error near unexpected token `}''

    /tmp/tmpd1uxohhh.sh: line 68: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: implement this\
    \ function\n    # Hint: use the tr command\n    # Hint: use the echo command\n\
    \    # Hint: use the $1 variable\n    echo $1 | tr 'a-z' 'c-za-b'\n}\n\ncandidate()\
    \ {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\"\
    ) = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate\
    \ \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate\
    \ \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\"\
    ) = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # your code here\n\
    \    echo $1 | tr 'a-z' 'c-za-b'\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    echo \"$1\"\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"\
    ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate \"\
    et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n\
    \    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4yhaq9mm.sh: line 19: syntax error near unexpected token `}''

    /tmp/tmp4yhaq9mm.sh: line 19: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    echo $1\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\"\
    ) = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate\
    \ \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\"\
    \ ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write a function\
    \ that encrypts a string\n    # Hint: You can use the ord() and chr() functions\
    \ to convert\n    # between characters and their ASCII values\n    # Hint: You\
    \ can use the modulus operator to wrap around the alphabet\n    # Hint: You can\
    \ use the string concatenation operator to join strings\n    # together\n    #\
    \ Hint: You can use the string length operator to get the length of a\n    # string\n\
    \    # Hint: You can use the string index operator to get a character at a\n \
    \   # given index in a string\n    # Hint: You can use the string slice operator\
    \ to get a substring of a\n    # string\n    # Hint: You can use the string replace\
    \ operator to replace a substring\n    # in a string with another substring\n\
    \    # Hint: You can use the string to lowercase operator to convert a\n    #\
    \ string to lowercase\n    # Hint: You can use the string to uppercase operator\
    \ to convert a\n    # string to uppercase\n    # Hint: You can use the string\
    \ to titlecase operator to convert a\n    # string to titlecase\n    # Hint: You\
    \ can use the string to capitalize operator to convert a\n    # string to capitalize\n\
    \    # Hint: You can use the string to swapcase operator to convert a\n    # string\
    \ to swapcase\n    # Hint: You can use the string to center operator to convert\
    \ a\n    # string to center\n    # Hint: You can use the string to ljust operator\
    \ to convert a\n    # string to ljust\n    # Hint: You can use the string to rjust\
    \ operator to convert a\n    # string to rjust\n    # Hint: You can use the string\
    \ to zfill operator to convert a\n    # string to zfill\n    # Hint: You can use\
    \ the string to format operator to convert a\n    # string to format\n    # Hint:\
    \ You can use the string to format field name operator to convert a\n    # string\
    \ to format field name\n    # Hint: You can use the string to format conversion\
    \ operator to convert a\n    # string to format conversion\n    # Hint: You can\
    \ use the string to format specification operator to convert a\n    # string to\
    \ format specification\n    # Hint\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpd0lz3bjn.sh: line 59: syntax error near unexpected token `}''

    /tmp/tmpd0lz3bjn.sh: line 59: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    # Hint: You can use the ord and chr functions to convert between\n\
    \    # ASCII characters and their integer representations.\n    # ord takes a\
    \ character and returns its integer representation\n    # chr takes an integer\
    \ and returns its character representation\n    #\n    # For example:\n    # >>>\
    \ $(ord \"a\")\n    # 97\n    # >>> $(chr 97)\n    # \"a\"\n    #\n    # You can\
    \ also use the modulo operator to wrap around the alphabet\n    # if you go past\
    \ the end.\n    # For example:\n    # >>> $(($(ord \"z\") + 1))\n    # 97\n  \
    \  # >>> $(chr $(($(ord \"z\") + 1)))\n    # \"a\"\n    #\n    # You can also\
    \ use the modulo operator to wrap around the alphabet\n    # if you go past the\
    \ beginning.\n    # For example:\n    # >>> $(($(ord \"a\") - 1))\n    # 122\n\
    \    # >>> $(chr $(($(ord \"a\") - 1)))\n    # \"z\"\n    #\n    # You can also\
    \ use the modulo operator to wrap around the alphabet\n    # if you go past the\
    \ beginning.\n    # For example:\n    # >>> $(($(ord \"a\") - 1))\n    # 122\n\
    \    # >>> $(chr $(($(ord \"a\") - 1)))\n    # \"z\"\n    #\n    # You can also\
    \ use the modulo operator to wrap around the alphabet\n    # if you go past the\
    \ beginning.\n    # For example:\n    # >>> $(($(ord \"a\") - 1))\n    # 122\n\
    \    # >>> $(chr $(($(ord \"a\") - 1)))\n    # \"z\"\n    #\n    # You can also\
    \ use the modulo operator to wrap around the alphabet\n    # if you go past the\
    \ beginning.\n    # For example:\n    # >>> $(($(ord \"a\") - 1))\n    # 122\n\
    \    # >>> $(chr $(($(ord \"a\") - 1)))\n    # \"z\"\n    #\n    # You can also\
    \ use the modulo operator to wrap around the alphabet\n    # if you go past the\
    \ beginning.\n    # For\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\"\
    ) = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate\
    \ \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\"\
    \ ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp258nbj9y.sh: line 73: syntax error near unexpected token `}''

    /tmp/tmp258nbj9y.sh: line 73: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n    # Hint: You can use the ord and chr functions to convert between\n\
    \    #       ascii and characters.\n    #       For example:\n    #       >>>\
    \ $(ord \"a\")\n    #       97\n    #       >>> $(chr 97)\n    #       \"a\"\n\
    \    #       >>> $(chr $(ord \"a\"))\n    #       \"a\"\n    #       >>> $(chr\
    \ $(ord \"a\") + 1)\n    #       \"b\"\n    #       >>> $(chr $(ord \"a\") + 2)\n\
    \    #       \"c\"\n    #       >>> $(chr $(ord \"a\") + 3)\n    #       \"d\"\
    \n    #       >>> $(chr $(ord \"a\") + 4)\n    #       \"e\"\n    #       >>>\
    \ $(chr $(ord \"a\") + 5)\n    #       \"f\"\n    #       >>> $(chr $(ord \"a\"\
    ) + 6)\n    #       \"g\"\n    #       >>> $(chr $(ord \"a\") + 7)\n    #    \
    \   \"h\"\n    #       >>> $(chr $(ord \"a\") + 8)\n    #       \"i\"\n    # \
    \      >>> $(chr $(ord \"a\") + 9)\n    #       \"j\"\n    #       >>> $(chr $(ord\
    \ \"a\") + 10)\n    #       \"k\"\n    #       >>> $(chr $(ord \"a\") + 11)\n\
    \    #       \"l\"\n    #       >>> $(chr $(ord \"a\") + 12)\n    #       \"m\"\
    \n    #       >>> $(chr $(ord \"a\") + 13)\n    #       \"n\"\n    #       >>>\
    \ $(chr $(ord \"a\") + 14)\n    #       \"o\"\n    #       >>> $(chr $(ord \"\
    a\") + 15)\n    #       \"p\"\n    #       >>> $(chr $(ord \"a\") + 16)\n    #\
    \       \"q\"\n    #       >>> $(chr $(ord \"a\") + 17)\n    #       \"r\"\n \
    \   #       >>> $(chr $(ord \"a\") + 18)\n    #       \"s\"\n\n}\n\ncandidate()\
    \ {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\"\
    ) = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate\
    \ \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate\
    \ \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\"\
    ) = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmplz7xk6hl.sh: line 65: syntax error near unexpected token `}''

    /tmp/tmplz7xk6hl.sh: line 65: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Your code here\n\
    \    echo \"TODO\"\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\"\
    ) = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate\
    \ \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\"\
    \ ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n    # Hint: You can use the ord and chr functions to convert between\
    \ \n    # ASCII numbers and characters.\n    # Hint: You can use the modulo operator\
    \ to wrap around the alphabet.\n    # Hint: You can use the seq command to generate\
    \ a sequence of numbers.\n    # Hint: You can use the tr command to translate\
    \ characters.\n    # Hint: You can use the echo command to print a string.\n \
    \   # Hint: You can use the return command to return a value.\n    # Hint: You\
    \ can use the $1 variable to access the first argument.\n    # Hint: You can use\
    \ the $# variable to access the number of arguments.\n    # Hint: You can use\
    \ the $@ variable to access all the arguments.\n    # Hint: You can use the $0\
    \ variable to access the name of the script.\n    # Hint: You can use the $? variable\
    \ to access the exit status of the last command.\n    # Hint: You can use the\
    \ $! variable to access the process ID of the last command.\n    # Hint: You can\
    \ use the $$ variable to access the process ID of the current shell.\n    # Hint:\
    \ You can use the $USER variable to access the username of the current user.\n\
    \    # Hint: You can use the $HOSTNAME variable to access the hostname of the\
    \ machine.\n    # Hint: You can use the $SECONDS variable to access the number\
    \ of seconds since the shell was started.\n    # Hint: You can use the $RANDOM\
    \ variable to access a random number.\n    # Hint: You can use the $LINENO variable\
    \ to access the current line number in the script.\n    # Hint: You can use the\
    \ $IFS variable to access the Internal Field Separator.\n    # Hint: You can use\
    \ the $PATH variable to access the list of directories where executable programs\
    \ are located.\n    # Hint: You can use the $PS1 variable to access the primary\
    \ prompt string.\n    # Hint: You can use the $PS2 variable to access the secondary\
    \ prompt string.\n    # Hint: You can use the $PS3 variable to access the select\
    \ prompt string.\n    # Hint: You can use the\n}\n\ncandidate() {\n    encrypt\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n\
    \    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\"\
    ) = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpj6ug1g7z.sh: line 44: syntax error near unexpected token `}''

    /tmp/tmpj6ug1g7z.sh: line 44: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n    # Hint: You can use the ord and chr functions to convert between\n\
    \    #       characters and their ASCII values.\n    #       ord takes a character\
    \ and returns its ASCII value\n    #       chr takes an ASCII value and returns\
    \ its character\n    #       For example:\n    #       >>> $(ord \"a\")\n    #\
    \       97\n    #       >>> $(chr 97)\n    #       \"a\"\n    #       >>> $(ord\
    \ \"b\")\n    #       98\n    #       >>> $(chr 98)\n    #       \"b\"\n    #\
    \       >>> $(ord \"c\")\n    #       99\n    #       >>> $(chr 99)\n    #   \
    \    \"c\"\n    #       >>> $(ord \"d\")\n    #       100\n    #       >>> $(chr\
    \ 100)\n    #       \"d\"\n    #       >>> $(ord \"e\")\n    #       101\n   \
    \ #       >>> $(chr 101)\n    #       \"e\"\n    #       >>> $(ord \"f\")\n  \
    \  #       102\n    #       >>> $(chr 102)\n    #       \"f\"\n    #       >>>\
    \ $(ord \"g\")\n    #       103\n    #       >>> $(chr 103)\n    #       \"g\"\
    \n    #       >>> $(ord \"h\")\n    #       104\n    #       >>> $(chr 104)\n\
    \    #       \"h\"\n    #       >>> $(ord \"i\")\n    #       105\n    #     \
    \  >>> $(chr 105)\n    #       \"i\"\n    #       >>> $(ord \"j\")\n    #    \
    \   106\n    #       >>> $(chr 106)\n    #       \"j\"\n    #       >>> $(ord\
    \ \"k\")\n    #       107\n    #       >>> $(chr 107)\n    #       \"k\"\n   \
    \ #       >>> $(ord \"l\")\n    #       108\n    #       >>> $(chr 108)\n    #\
    \       \"l\"\n    #       >>> $(ord \"m\")\n    #       109\n    #       >>>\
    \ $(chr 109)\n    #       \"m\"\n    #       >>> $(ord \"n\")\n    #       110\n\
    \    #       >>> $(chr 110\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\"\
    ) = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate\
    \ \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\"\
    \ ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1u8u24y5.sh: line 79: syntax error near unexpected token `}''

    /tmp/tmp1u8u24y5.sh: line 79: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    # Hint: You can use the tr command to translate characters.\n\
    \    #       For example, tr 'a-z' 'b-za' will translate all lowercase\n    #\
    \       letters to the next letter in the alphabet.\n    #       tr 'a-z' 'c-za-b'\
    \ will translate all lowercase letters to\n    #       the letter two places down\
    \ in the alphabet.\n    #       tr 'a-z' 'd-za-c' will translate all lowercase\
    \ letters to\n    #       the letter three places down in the alphabet.\n    #\
    \       You can use the -d flag to delete characters.\n    #       For example,\
    \ tr -d 'a-z' will delete all lowercase letters.\n    #       You can use the\
    \ -s flag to squeeze repeated characters.\n    #       For example, tr -s 'a-z'\
    \ will replace all repeated\n    #       lowercase letters with a single instance\
    \ of the letter.\n    #       You can use the -c flag to complement the set of\
    \ characters.\n    #       For example, tr -c 'a-z' 'A-Z' will translate all lowercase\n\
    \    #       letters to uppercase letters.\n    #       You can use the -t flag\
    \ to truncate the set of characters.\n    #       For example, tr -t 'a-z' 'A-Z'\
    \ will translate all lowercase\n    #       letters to uppercase letters and delete\
    \ all other characters.\n    #       You can use the -u flag to map multiple characters\
    \ to one.\n    #       For example, tr -u 'a-z' 'A-Z' will translate all lowercase\n\
    \    #       letters to uppercase letters and delete all other characters.\n \
    \   #       You can use the -l flag to map multiple characters to one.\n    #\
    \       For example, tr -l 'a-z' 'A-Z' will translate all lowercase\n    #   \
    \    letters to uppercase letters and delete all other characters.\n    #    \
    \   You can use the -f flag to map multiple characters to one.\n    #       For\
    \ example, tr -f 'a-z' 'A-Z' will translate all lowercase\n    #       letters\
    \ to uppercase letters and delete all other characters\n}\n\ncandidate() {\n \
    \   encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"\
    lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate\
    \ \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate\
    \ \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\"\
    ) = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3obqzjh3.sh: line 46: syntax error near unexpected token `}''

    /tmp/tmp3obqzjh3.sh: line 46: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n    echo \"hi\"\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # Write your code here\n\
    \    echo $1 | tr 'a-z' 'c-za-b'\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n    echo \"hi\"\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: implement this\
    \ function\n    echo \"Not implemented\"\n}\n\ncandidate() {\n    encrypt \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n    # Hint: You can use the command tr to translate characters\n\
    \    # Example:\n    # $ echo \"hello\" | tr 'a-z' 'c-za-b'\n    # \"jgnnq\"\n\
    \    #\n    # $ echo \"hello\" | tr 'a-z' 'c-za-b' | tr 'a-z' 'c-za-b'\n    #\
    \ \"lipps\"\n    #\n    # $ echo \"hello\" | tr 'a-z' 'c-za-b' | tr 'a-z' 'c-za-b'\
    \ | tr 'a-z' 'c-za-b'\n    # \"nkrru\"\n    #\n    # $ echo \"hello\" | tr 'a-z'\
    \ 'c-za-b' | tr 'a-z' 'c-za-b' | tr 'a-z' 'c-za-b' | tr 'a-z' 'c-za-b'\n    #\
    \ \"pmssv\"\n    #\n    # $ echo \"hello\" | tr 'a-z' 'c-za-b' | tr 'a-z' 'c-za-b'\
    \ | tr 'a-z' 'c-za-b' | tr 'a-z' 'c-za-b' | tr 'a-z' 'c-za-b'\n    # \"rottx\"\
    \n    #\n    # $ echo \"hello\" | tr 'a-z' 'c-za-b' | tr 'a-z' 'c-za-b' | tr 'a-z'\
    \ 'c-za-b' | tr 'a-z' 'c-za-b' | tr 'a-z' 'c-za-b' | tr 'a-z' 'c-za-b'\n    #\
    \ \"tqvvy\"\n    #\n    # $ echo \"hello\" | tr 'a-z' 'c-za-b' | tr 'a-z' 'c-za-b'\
    \ | tr 'a-z' 'c-za-b' | tr 'a-z' 'c-za-b' | tr 'a-z' 'c\n}\n\ncandidate() {\n\
    \    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"\
    lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate\
    \ \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate\
    \ \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\"\
    ) = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpap_g1z6s.sh: line 40: syntax error near unexpected token `}''

    /tmp/tmpap_g1z6s.sh: line 40: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: implement this\
    \ function\n    echo $1 | tr 'a-z' 'c-za-b'\n}\n\ncandidate() {\n    encrypt \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[\
    \ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") =\
    \ \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # Write your code here\n\
    \    echo $1 | tr 'a-z' 'c-za-b'\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: implement this\
    \ function\n    echo \"TODO\"\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    echo \"Not yet implemented\"\n}\n\ncandidate() {\n    encrypt\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n\
    \    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\"\
    ) = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    echo $1 | tr 'a-z' 'c-za-b'\n}\n\ncandidate() {\n    encrypt \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[\
    \ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") =\
    \ \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: write your\
    \ code here\n    # Hint: use the tr command\n    # Hint: use the echo command\n\
    \    # Hint: use the $1 variable\n    # Hint: use the $() syntax\n    # Hint:\
    \ use the tr command\n    # Hint: use the echo command\n    # Hint: use the $1\
    \ variable\n    # Hint: use the $() syntax\n    # Hint: use the tr command\n \
    \   # Hint: use the echo command\n    # Hint: use the $1 variable\n    # Hint:\
    \ use the $() syntax\n    # Hint: use the tr command\n    # Hint: use the echo\
    \ command\n    # Hint: use the $1 variable\n    # Hint: use the $() syntax\n \
    \   # Hint: use the tr command\n    # Hint: use the echo command\n    # Hint:\
    \ use the $1 variable\n    # Hint: use the $() syntax\n    # Hint: use the tr\
    \ command\n    # Hint: use the echo command\n    # Hint: use the $1 variable\n\
    \    # Hint: use the $() syntax\n    # Hint: use the tr command\n    # Hint: use\
    \ the echo command\n    # Hint: use the $1 variable\n    # Hint: use the $() syntax\n\
    \    # Hint: use the tr command\n    # Hint: use the echo command\n    # Hint:\
    \ use the $1 variable\n    # Hint: use the $() syntax\n    # Hint: use the tr\
    \ command\n    # Hint: use the echo command\n    # Hint: use the $1 variable\n\
    \    # Hint: use the $() syntax\n    # Hint: use the tr command\n    # Hint: use\
    \ the echo command\n    # Hint: use the $1 variable\n    # Hint: use the $() syntax\n\
    \    # Hint: use the tr command\n    # Hint: use the echo command\n    # Hint:\
    \ use the $1 variable\n    # Hint: use the $() syntax\n    # Hint: use the tr\
    \ command\n    # Hint: use the echo command\n    # Hint: use the $1 variable\n\
    \    # Hint: use the $\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\"\
    ) = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate\
    \ \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\"\
    \ ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp233oqc_s.sh: line 67: syntax error near unexpected token `}''

    /tmp/tmp233oqc_s.sh: line 67: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    echo \"Not implemented\"\n}\n\ncandidate() {\n    encrypt \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    echo \"Not implemented\"\n}\n\ncandidate() {\n    encrypt \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n    # Hint: You can use the modulo operator to wrap around the alphabet\n\
    \    # Hint: You can use the ord() and chr() functions to convert between characters\
    \ and ascii values\n    # Hint: You can use the echo -n command to print without\
    \ a newline\n    # Hint: You can use the tr command to translate characters\n\
    \    # Hint: You can use the fold command to split a string into multiple lines\n\
    \    # Hint: You can use the paste command to merge multiple lines into one\n\
    \    # Hint: You can use the tr command to delete characters\n    # Hint: You\
    \ can use the rev command to reverse a string\n    # Hint: You can use the tr\
    \ command to translate characters\n    # Hint: You can use the fold command to\
    \ split a string into multiple lines\n    # Hint: You can use the paste command\
    \ to merge multiple lines into one\n    # Hint: You can use the tr command to\
    \ delete characters\n    # Hint: You can use the rev command to reverse a string\n\
    \    # Hint: You can use the tr command to translate characters\n    # Hint: You\
    \ can use the fold command to split a string into multiple lines\n    # Hint:\
    \ You can use the paste command to merge multiple lines into one\n    # Hint:\
    \ You can use the tr command to delete characters\n    # Hint: You can use the\
    \ rev command to reverse a string\n    # Hint: You can use the tr command to translate\
    \ characters\n    # Hint: You can use the fold command to split a string into\
    \ multiple lines\n    # Hint: You can use the paste command to merge multiple\
    \ lines into one\n    # Hint: You can use the tr command to delete characters\n\
    \    # Hint: You can use the rev command to reverse a string\n    # Hint: You\
    \ can use the tr command to translate characters\n    # Hint: You can use the\
    \ fold command to split a string into multiple lines\n    # Hint: You can use\
    \ the paste command to merge multiple lines into one\n    # Hint: You can use\
    \ the tr command to delete characters\n    # Hint: You can use the rev command\
    \ to reverse a string\n    # Hint: You can use the tr command to translate characters\n\
    \    # Hint: You can\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\"\
    ) = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate\
    \ \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\"\
    \ ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfx1611dx.sh: line 49: syntax error near unexpected token `}''

    /tmp/tmpfx1611dx.sh: line 49: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # Your code here\n\
    \    echo $1 | tr 'a-z' 'c-za-b'\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # Write your code here\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\"\
    ) = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate\
    \ \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\"\
    \ ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxm6_hbgg.sh: line 188: syntax error near unexpected token `}''

    /tmp/tmpxm6_hbgg.sh: line 188: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    # Hint: You can use the modulo operator to wrap around the alphabet\n\
    \    # Hint: You can use the ord() and chr() functions to convert between\n  \
    \  #       characters and their ASCII values\n    # Hint: You can use the string\
    \ concatenation operator to join strings\n    #       together\n    # Hint: You\
    \ can use the string indexing operator to get the ith character\n    #       of\
    \ a string\n    # Hint: You can use the string length operator to get the length\
    \ of a\n    #       string\n    # Hint: You can use the string slicing operator\
    \ to get a substring of a\n    #       string\n    # Hint: You can use the string\
    \ repetition operator to repeat a string\n    #       multiple times\n    # Hint:\
    \ You can use the string replacement operator to replace a substring\n    #  \
    \     of a string with another substring\n    # Hint: You can use the string split\
    \ operator to split a string into a\n    #       list of strings\n    # Hint:\
    \ You can use the string join operator to join a list of strings\n    #      \
    \ into a single string\n    # Hint: You can use the string strip operator to remove\
    \ leading and\n    #       trailing whitespace from a string\n    # Hint: You\
    \ can use the string lower operator to convert a string to\n    #       lowercase\n\
    \    # Hint: You can use the string upper operator to convert a string to\n  \
    \  #       uppercase\n    # Hint: You can use the string capitalize operator to\
    \ capitalize a string\n    # Hint: You can use the string title operator to titlecase\
    \ a string\n    # Hint: You can use the string swapcase operator to swap the case\
    \ of a\n    #       string\n    # Hint: You can use the string center operator\
    \ to center a string within\n    #       a field of a given width\n    # Hint:\
    \ You can use the string ljust operator to left-justify a string\n    #      \
    \ within a field of a given width\n    # Hint: You can use the string rjust operator\
    \ to right-justify a string\n    #       within a field of a given width\n   \
    \ # Hint: You can use the string zfill operator to pad a numeric string on\n \
    \   #      \n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"\
    ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate \"\
    et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n\
    \    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptjuy80lo.sh: line 56: syntax error near unexpected token `}''

    /tmp/tmptjuy80lo.sh: line 56: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: write your\
    \ code here\n    # Hint: use the tr command\n    # Hint: use the echo command\n\
    \    # Hint: use the $1 variable\n    echo $1 | tr 'a-z' 'c-za-b'\n}\n\ncandidate()\
    \ {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\"\
    ) = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate\
    \ \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate\
    \ \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\"\
    ) = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n    echo \"$1\"\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n    # Hint: You can use the modulo operator to wrap around the alphabet\n\
    \    # Hint: You can use the ord() and chr() functions to convert between\n  \
    \  #       characters and ASCII values\n    # Hint: You can use the echo -n command\
    \ to print without a newline\n    # Hint: You can use the tr command to translate\
    \ characters\n    # Hint: You can use the seq command to generate a sequence of\
    \ numbers\n    # Hint: You can use the paste command to merge two files together\n\
    \    # Hint: You can use the fold command to wrap lines at a certain length\n\
    \    # Hint: You can use the head command to get the first line of a file\n  \
    \  # Hint: You can use the tail command to get all but the first line of a file\n\
    \    # Hint: You can use the cat command to concatenate files together\n    #\
    \ Hint: You can use the tr command to delete characters\n    # Hint: You can use\
    \ the tr command to squeeze repeated characters\n    # Hint: You can use the tr\
    \ command to translate characters\n    # Hint: You can use the tr command to translate\
    \ characters\n    # Hint: You can use the tr command to translate characters\n\
    \    # Hint: You can use the tr command to translate characters\n    # Hint: You\
    \ can use the tr command to translate characters\n    # Hint: You can use the\
    \ tr command to translate characters\n    # Hint: You can use the tr command to\
    \ translate characters\n    # Hint: You can use the tr command to translate characters\n\
    \    # Hint: You can use the tr command to translate characters\n    # Hint: You\
    \ can use the tr command to translate characters\n    # Hint: You can use the\
    \ tr command to translate characters\n    # Hint: You can use the tr command to\
    \ translate characters\n    # Hint: You can use the tr command to translate characters\n\
    \    # Hint: You can use the tr command to translate characters\n    # Hint: You\
    \ can use the tr command to translate characters\n    # Hint: You can use the\
    \ tr command to translate characters\n    # Hint: You can use the tr command to\
    \ translate characters\n    # Hint: You can use the tr command to translate characters\n\
    \    # Hint:\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\"\
    ) = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate\
    \ \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\"\
    \ ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppwv9x93b.sh: line 51: syntax error near unexpected token `}''

    /tmp/tmppwv9x93b.sh: line 51: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n    # Hint: You can use the modulo operator to wrap around the alphabet\n\
    \    # Hint: You can use the ord and chr functions to convert between ascii and\
    \ characters\n    # Hint: You can use the echo -n command to print without a newline\n\
    \    # Hint: You can use the tr command to translate characters\n    # Hint: You\
    \ can use the fold command to wrap lines\n    # Hint: You can use the rev command\
    \ to reverse a string\n    # Hint: You can use the sort command to sort a string\n\
    \    # Hint: You can use the uniq command to remove duplicate characters\n   \
    \ # Hint: You can use the wc command to count characters\n    # Hint: You can\
    \ use the bc command to do math\n    # Hint: You can use the seq command to generate\
    \ a sequence of numbers\n    # Hint: You can use the head command to get the first\
    \ line of output\n    # Hint: You can use the tail command to get the last line\
    \ of output\n    # Hint: You can use the cut command to get a substring\n    #\
    \ Hint: You can use the tr command to translate characters\n    # Hint: You can\
    \ use the sed command to replace characters\n    # Hint: You can use the grep\
    \ command to match characters\n    # Hint: You can use the awk command to print\
    \ columns\n    # Hint: You can use the paste command to paste together lines\n\
    \    # Hint: You can use the xargs command to execute a command\n    # Hint: You\
    \ can use the find command to find files\n    # Hint: You can use the stat command\
    \ to get file information\n    # Hint: You can use the file command to get file\
    \ information\n    # Hint: You can use the du command to get file size information\n\
    \    # Hint: You can use the md5sum command to get a file's md5sum\n    # Hint:\
    \ You can use the sha1sum command to get a file's sha1sum\n    # Hint: You can\
    \ use the sha256sum command to get a file's sha256sum\n    # Hint: You can use\
    \ the sha512sum command to get a file's sha512sum\n    # Hint:\n}\n\ncandidate()\
    \ {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\"\
    ) = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate\
    \ \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate\
    \ \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\"\
    ) = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9xay44ym.sh: line 48: syntax error near unexpected token `}''

    /tmp/tmp9xay44ym.sh: line 48: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    # Hint: You can use the ord and chr functions to convert between\n\
    \    #       characters and their ASCII values.\n    # Hint: You can use the modulo\
    \ operator to wrap around the alphabet\n    #       when you reach the end.\n\
    \    # Hint: You can use the echo command to return a string.\n    # Hint: You\
    \ can use the $1 variable to access the first argument\n    #       passed to\
    \ the function.\n    # Hint: You can use the expr command to perform arithmetic.\n\
    \    # Hint: You can use the seq command to generate a sequence of numbers.\n\
    \    # Hint: You can use the tr command to translate characters.\n    # Hint:\
    \ You can use the echo -n command to print without a newline.\n    # Hint: You\
    \ can use the read command to read user input.\n    # Hint: You can use the -p\
    \ option with the read command to prompt\n    #       the user for input.\n  \
    \  # Hint: You can use the -s option with the read command to make\n    #    \
    \   the user input silent.\n    # Hint: You can use the -n option with the read\
    \ command to limit\n    #       the number of characters read.\n    # Hint: You\
    \ can use the -t option with the read command to limit\n    #       the time to\
    \ read input.\n    # Hint: You can use the -d option with the read command to\
    \ specify\n    #       the delimiter.\n    # Hint: You can use the -r option with\
    \ the read command to make\n    #       backslashes not act as escape characters.\n\
    \    # Hint: You can use the -a option with the read command to read\n    #  \
    \     into an array.\n    # Hint: You can use the -u option with the read command\
    \ to read\n    #       from a file descriptor.\n    # Hint: You can use the -z\
    \ option with the read command to have\n    #       it set the REPLY variable\
    \ to NULL if input is EOF.\n    # Hint: You can use the -e option with the read\
    \ command to make\n    #       readline available to read input.\n    # Hint:\
    \ You can use the -i option with the read command to have\n}\n\ncandidate() {\n\
    \    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"\
    lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate\
    \ \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate\
    \ \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\"\
    ) = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgl7e8ysr.sh: line 52: syntax error near unexpected token `}''

    /tmp/tmpgl7e8ysr.sh: line 52: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n  # TODO: implement this\
    \ function\n  echo \"$1\"\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\"\
    ) = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate\
    \ \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\"\
    \ ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # Your code here\n\
    \    echo $1 | tr 'a-z' 'c-za-b'\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    echo \"$1\" | tr 'a-z'\
    \ 'c-za-b'\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"\
    ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate \"\
    et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n\
    \    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    # Hint: You can use the tr command to translate characters.\n\
    \    #       For example, tr \"a-z\" \"b-za\" will translate the string\n    #\
    \       \"a\" to \"b\", \"b\" to \"c\", and so on.\n    #       You can also use\
    \ the tr command to translate characters\n    #       in a range. For example,\
    \ tr \"a-z\" \"c-za-b\" will translate\n    #       the string \"a\" to \"c\"\
    , \"b\" to \"d\", and so on.\n    #       You can also use the tr command to translate\
    \ characters\n    #       in a range. For example, tr \"a-z\" \"c-za-b\" will\
    \ translate\n    #       the string \"a\" to \"c\", \"b\" to \"d\", and so on.\n\
    \    #       You can also use the tr command to translate characters\n    #  \
    \     in a range. For example, tr \"a-z\" \"c-za-b\" will translate\n    #   \
    \    the string \"a\" to \"c\", \"b\" to \"d\", and so on.\n    #       You can\
    \ also use the tr command to translate characters\n    #       in a range. For\
    \ example, tr \"a-z\" \"c-za-b\" will translate\n    #       the string \"a\"\
    \ to \"c\", \"b\" to \"d\", and so on.\n    #       You can also use the tr command\
    \ to translate characters\n    #       in a range. For example, tr \"a-z\" \"\
    c-za-b\" will translate\n    #       the string \"a\" to \"c\", \"b\" to \"d\"\
    , and so on.\n    #       You can also use the tr command to translate characters\n\
    \    #       in a range. For example, tr \"a-z\" \"c-za-b\" will translate\n \
    \   #       the string \"a\" to \"c\", \"b\" to \"d\", and so on.\n    #     \
    \  You can also use the tr command to translate characters\n    #       in a range.\
    \ For example, tr \"a-z\" \"c-za-b\" will translate\n    #       the string \"\
    a\" to \"c\", \"b\" to \"d\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\"\
    ) = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate\
    \ \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\"\
    \ ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpuz6big1g.sh: line 43: syntax error near unexpected token `}''

    /tmp/tmpuz6big1g.sh: line 43: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # Write your code here\n\
    }\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n\
    \    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n\
    \    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[ $(candidate\
    \ \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp32vumw0s.sh: line 19: syntax error near unexpected token `}''

    /tmp/tmp32vumw0s.sh: line 19: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n    # Hint: You can use the command `echo` to print a string\n  \
    \  #       to the terminal.\n    # Hint: You can use the command `expr` to do\
    \ arithmetic\n    #       operations.\n    # Hint: You can use the command `tr`\
    \ to translate characters\n    #       in a string.\n    # Hint: You can use the\
    \ command `seq` to generate a sequence\n    #       of numbers.\n    # Hint: You\
    \ can use the command `rev` to reverse a string.\n    # Hint: You can use the\
    \ command `rev` to reverse a string.\n    # Hint: You can use the command `rev`\
    \ to reverse a string.\n    # Hint: You can use the command `rev` to reverse a\
    \ string.\n    # Hint: You can use the command `rev` to reverse a string.\n  \
    \  # Hint: You can use the command `rev` to reverse a string.\n    # Hint: You\
    \ can use the command `rev` to reverse a string.\n    # Hint: You can use the\
    \ command `rev` to reverse a string.\n    # Hint: You can use the command `rev`\
    \ to reverse a string.\n    # Hint: You can use the command `rev` to reverse a\
    \ string.\n    # Hint: You can use the command `rev` to reverse a string.\n  \
    \  # Hint: You can use the command `rev` to reverse a string.\n    # Hint: You\
    \ can use the command `rev` to reverse a string.\n    # Hint: You can use the\
    \ command `rev` to reverse a string.\n    # Hint: You can use the command `rev`\
    \ to reverse a string.\n    # Hint: You can use the command `rev` to reverse a\
    \ string.\n    # Hint: You can use the command `rev` to reverse a string.\n  \
    \  # Hint: You can use the command `rev` to reverse a string.\n    # Hint: You\
    \ can use the command `rev` to reverse a string.\n    # Hint: You can use the\
    \ command `rev` to reverse a string.\n    # Hint: You can use the command `rev`\
    \ to reverse a string.\n    # H\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqv3dw00s.sh: line 49: syntax error near unexpected token `}''

    /tmp/tmpqv3dw00s.sh: line 49: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: implement this\
    \ function\n    echo $1 | tr 'a-z' 'c-za-b'\n}\n\ncandidate() {\n    encrypt \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[\
    \ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") =\
    \ \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    # Hint: Use the ord and chr functions\n    # Hint: Use the modulo\
    \ operator\n    # Hint: Use the range operator\n    # Hint: Use the map function\n\
    \    # Hint: Use the join function\n    # Hint: Use the range operator\n    #\
    \ Hint: Use the map function\n    # Hint: Use the join function\n    # Hint: Use\
    \ the range operator\n    # Hint: Use the map function\n    # Hint: Use the join\
    \ function\n    # Hint: Use the range operator\n    # Hint: Use the map function\n\
    \    # Hint: Use the join function\n    # Hint: Use the range operator\n    #\
    \ Hint: Use the map function\n    # Hint: Use the join function\n    # Hint: Use\
    \ the range operator\n    # Hint: Use the map function\n    # Hint: Use the join\
    \ function\n    # Hint: Use the range operator\n    # Hint: Use the map function\n\
    \    # Hint: Use the join function\n    # Hint: Use the range operator\n    #\
    \ Hint: Use the map function\n    # Hint: Use the join function\n    # Hint: Use\
    \ the range operator\n    # Hint: Use the map function\n    # Hint: Use the join\
    \ function\n    # Hint: Use the range operator\n    # Hint: Use the map function\n\
    \    # Hint: Use the join function\n    # Hint: Use the range operator\n    #\
    \ Hint: Use the map function\n    # Hint: Use the join function\n    # Hint: Use\
    \ the range operator\n    # Hint: Use the map function\n    # Hint: Use the join\
    \ function\n    # Hint: Use the range operator\n    # Hint: Use the map function\n\
    \    # Hint: Use the join function\n    # Hint: Use the range operator\n    #\
    \ Hint: Use the map function\n    # Hint: Use the join function\n    # Hint: Use\
    \ the range operator\n    # Hint: Use the map function\n    # Hint: Use the join\
    \ function\n    # Hint: Use the range operator\n    # Hint: Use the map function\n\
    \    # Hint: Use the join\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\"\
    ) = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate\
    \ \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\"\
    \ ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe_cwrqel.sh: line 69: syntax error near unexpected token `}''

    /tmp/tmpe_cwrqel.sh: line 69: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # Write your code here\n\
    \    echo $1 | tr 'a-z' 'c-za-b'\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: implement this\
    \ function\n    # Hint: use the tr command\n    echo $1 | tr 'a-z' 'c-za-b'\n\
    }\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n\
    \    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n\
    \    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[ $(candidate\
    \ \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Your code here\n\
    \    # Hint: You can use the command \"echo\" to print a string\n    # Hint: You\
    \ can use the command \"expr\" to do arithmetic\n    # Hint: You can use the command\
    \ \"tr\" to do character translation\n    # Hint: You can use the command \"echo\"\
    \ to print a string\n    # Hint: You can use the command \"expr\" to do arithmetic\n\
    \    # Hint: You can use the command \"tr\" to do character translation\n    #\
    \ Hint: You can use the command \"echo\" to print a string\n    # Hint: You can\
    \ use the command \"expr\" to do arithmetic\n    # Hint: You can use the command\
    \ \"tr\" to do character translation\n    # Hint: You can use the command \"echo\"\
    \ to print a string\n    # Hint: You can use the command \"expr\" to do arithmetic\n\
    \    # Hint: You can use the command \"tr\" to do character translation\n    #\
    \ Hint: You can use the command \"echo\" to print a string\n    # Hint: You can\
    \ use the command \"expr\" to do arithmetic\n    # Hint: You can use the command\
    \ \"tr\" to do character translation\n    # Hint: You can use the command \"echo\"\
    \ to print a string\n    # Hint: You can use the command \"expr\" to do arithmetic\n\
    \    # Hint: You can use the command \"tr\" to do character translation\n    #\
    \ Hint: You can use the command \"echo\" to print a string\n    # Hint: You can\
    \ use the command \"expr\" to do arithmetic\n    # Hint: You can use the command\
    \ \"tr\" to do character translation\n    # Hint: You can use the command \"echo\"\
    \ to print a string\n    # Hint: You can use the command \"expr\" to do arithmetic\n\
    \    # Hint: You can use the command \"tr\" to do character translation\n    #\
    \ Hint: You can use the command \"echo\" to print a string\n    # Hint: You can\
    \ use the command \"expr\" to do arithmetic\n    # Hint: You can use the command\
    \ \"tr\" to do character translation\n    # Hint: You can use the command \"echo\"\
    \ to print a string\n    # Hint: You can\n}\n\ncandidate() {\n    encrypt \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp538oahc3.sh: line 48: syntax error near unexpected token `}''

    /tmp/tmp538oahc3.sh: line 48: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"\
    ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate \"\
    et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n\
    \    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4yhaq9mm.sh: line 19: syntax error near unexpected token `}''

    /tmp/tmp4yhaq9mm.sh: line 19: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    echo \"TODO\"\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # Write your code here\n\
    \    echo $1 | tr '[a-z]' '[c-za-b]'\n}\n\ncandidate() {\n    encrypt \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: write your\
    \ code here\n    echo $1 | tr 'a-z' 'c-za-b'\n}\n\ncandidate() {\n    encrypt\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n\
    \    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\"\
    ) = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: implement this\
    \ function\n    # Hint: use the tr command\n    echo $1 | tr 'a-z' 'c-za-b'\n\
    }\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n\
    \    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n\
    \    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[ $(candidate\
    \ \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    # Hint: You can use the ord and chr functions to convert between\n\
    \    # ASCII characters and their integer representations.\n    # ord takes a\
    \ character and returns its integer representation\n    # chr takes an integer\
    \ and returns its ASCII character\n    #\n    # Example:\n    # >>> ord 'a'\n\
    \    # 97\n    # >>> chr 97\n    # 'a'\n    # >>> ord 'b'\n    # 98\n    # >>>\
    \ chr 98\n    # 'b'\n    # >>> ord 'c'\n    # 99\n    # >>> chr 99\n    # 'c'\n\
    \    # >>> ord 'd'\n    # 100\n    # >>> chr 100\n    # 'd'\n    # >>> ord 'e'\n\
    \    # 101\n    # >>> chr 101\n    # 'e'\n    # >>> ord 'f'\n    # 102\n    #\
    \ >>> chr 102\n    # 'f'\n    # >>> ord 'g'\n    # 103\n    # >>> chr 103\n  \
    \  # 'g'\n    # >>> ord 'h'\n    # 104\n    # >>> chr 104\n    # 'h'\n    # >>>\
    \ ord 'i'\n    # 105\n    # >>> chr 105\n    # 'i'\n    # >>> ord 'j'\n    # 106\n\
    \    # >>> chr 106\n    # 'j'\n    # >>> ord 'k'\n    # 107\n    # >>> chr 107\n\
    \    # 'k'\n    # >>> ord 'l'\n    # 108\n    # >>> chr 108\n    # 'l'\n    #\
    \ >>> ord 'm'\n    # 109\n    # >>> chr 109\n    # 'm'\n    # >>> ord 'n'\n  \
    \  # 110\n    # >>> chr 110\n    # 'n'\n    # >>> ord 'o'\n    # 111\n    # >>>\
    \ chr 111\n    # 'o'\n    # >>> ord 'p'\n    # 112\n    # >>> chr 112\n    # 'p'\n\
    \    # >>> ord 'q'\n    # 113\n    # >>> chr 113\n    # 'q'\n    # >>> ord 'r'\n\
    \    # 114\n    # >>> ch\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\"\
    ) = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate\
    \ \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\"\
    \ ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1k_j094e.sh: line 96: syntax error near unexpected token `}''

    /tmp/tmp1k_j094e.sh: line 96: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: implement this\
    \ function\n    echo $1 | tr 'a-z' 'c-za-b'\n}\n\ncandidate() {\n    encrypt \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[\
    \ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") =\
    \ \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    echo \"TODO\"\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n    # Hint: You can use the modulo operator to wrap around the alphabet\n\
    \    # Hint: You can use the ord() and chr() functions to convert between\n  \
    \  #       characters and integers\n    # Hint: You can use the string concatenation\
    \ operator to join strings\n    # Hint: You can use the string slicing operator\
    \ to extract substrings\n    # Hint: You can use the string length operator to\
    \ get the length of a string\n    # Hint: You can use the string repetition operator\
    \ to repeat a string\n    # Hint: You can use the string indexing operator to\
    \ get the character at a\n    #       particular index in a string\n    # Hint:\
    \ You can use the string membership operator to check if a character\n    #  \
    \     is in a string\n    # Hint: You can use the string comparison operator to\
    \ check if two strings\n    #       are equal\n    # Hint: You can use the string\
    \ assignment operator to assign a value to a\n    #       variable\n    # Hint:\
    \ You can use the string concatenation assignment operator to append\n    #  \
    \     a string to a variable\n    # Hint: You can use the string repetition assignment\
    \ operator to repeat a\n    #       string and assign it to a variable\n    #\
    \ Hint: You can use the string slicing assignment operator to replace a\n    #\
    \       substring in a variable\n    # Hint: You can use the string indexing assignment\
    \ operator to replace a\n    #       character in a variable\n    # Hint: You\
    \ can use the string deletion operator to delete a variable\n    # Hint: You can\
    \ use the string membership assignment operator to add a\n    #       character\
    \ to a string\n    # Hint: You can use the string membership deletion operator\
    \ to remove a\n    #       character from a string\n    # Hint: You can use the\
    \ string membership assignment operator to add a\n    #       character to a string\n\
    \    # Hint: You can use the string membership deletion operator to remove a\n\
    \    #       character from a string\n    # Hint: You can use the string membership\
    \ assignment operator to add a\n    #       character to a string\n    # Hint:\
    \ You can use the string membership deletion operator to remove a\n    #     \
    \  character from a string\n    # Hint: You can\n}\n\ncandidate() {\n    encrypt\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n\
    \    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\"\
    ) = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7hvuxw6a.sh: line 56: syntax error near unexpected token `}''

    /tmp/tmp7hvuxw6a.sh: line 56: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Your code here\n\
    }\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n\
    \    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n\
    \    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[ $(candidate\
    \ \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5qam39vn.sh: line 19: syntax error near unexpected token `}''

    /tmp/tmp5qam39vn.sh: line 19: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    echo \"TODO\"\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    # HINT: You can use the ord and chr functions to convert between\n\
    \    #       characters and their ASCII values.\n    # HINT: You can use the modulo\
    \ operator to wrap around the alphabet\n    #       if you go past the end.\n\
    \    # HINT: You can use the echo command to return a string.\n    # HINT: You\
    \ can use the $1 variable to access the first argument\n    #       passed to\
    \ the function.\n    # HINT: You can use the expr command to do arithmetic.\n\
    \    # HINT: You can use the seq command to generate a sequence of\n    #    \
    \   numbers.\n    # HINT: You can use the tr command to replace characters in\
    \ a\n    #       string.\n    # HINT: You can use the wc command to count the\
    \ number of\n    #       characters in a string.\n    # HINT: You can use the\
    \ head command to get the first character\n    #       in a string.\n    # HINT:\
    \ You can use the tail command to get all but the first\n    #       character\
    \ in a string.\n    # HINT: You can use the rev command to reverse a string.\n\
    \    # HINT: You can use the sort command to sort a string.\n    # HINT: You can\
    \ use the uniq command to remove duplicate\n    #       characters from a string.\n\
    \    # HINT: You can use the rev command to reverse a string.\n    # HINT: You\
    \ can use the sort command to sort a string.\n    # HINT: You can use the uniq\
    \ command to remove duplicate\n    #       characters from a string.\n    # HINT:\
    \ You can use the rev command to reverse a string.\n    # HINT: You can use the\
    \ sort command to sort a string.\n    # HINT: You can use the uniq command to\
    \ remove duplicate\n    #       characters from a string.\n    # HINT: You can\
    \ use the rev command to reverse a string.\n    # HINT: You can use the sort command\
    \ to sort a string.\n    # HINT: You can use the uniq command to remove duplicate\n\
    \    #       characters from a string.\n    # HINT: You can use the rev command\
    \ to reverse a string.\n    # HINT: You can\n}\n\ncandidate() {\n    encrypt \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[\
    \ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") =\
    \ \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5da2plhd.sh: line 55: syntax error near unexpected token `}''

    /tmp/tmp5da2plhd.sh: line 55: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # Write your code here\n\
    \    echo $1 | tr 'a-z' 'c-za-b'\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ solution here\n    # Hint: You can use the ord and chr functions to convert\
    \ between\n    # ASCII characters and their integer representations.\n    # >>>\
    \ $(ord \"a\")\n    # 97\n    # >>> $(chr 97)\n    # \"a\"\n    #\n    # Hint:\
    \ You can use the modulo operator to wrap around the alphabet\n    # >>> $(expr\
    \ 97 % 26)\n    # 21\n    # >>> $(expr 121 % 26)\n    # 21\n    #\n    # Hint:\
    \ You can use the expr command to do arithmetic\n    # >>> $(expr 1 + 2)\n   \
    \ # 3\n    # >>> $(expr 1 + 2 \\* 3)\n    # 7\n    # >>> $(expr \\( 1 + 2 \\)\
    \ \\* 3)\n    # 9\n    #\n    # Hint: You can use the tr command to translate\
    \ characters\n    # >>> $(echo \"a\" | tr \"a\" \"b\")\n    # \"b\"\n    # >>>\
    \ $(echo \"a\" | tr \"a-z\" \"b-za\")\n    # \"b\"\n    # >>> $(echo \"a\" | tr\
    \ \"a-z\" \"b-za-\")\n    # \"b\"\n    # >>> $(echo \"a\" | tr \"a-z\" \"b-za-b\"\
    )\n    # \"b\"\n    # >>> $(echo \"a\" | tr \"a-z\" \"b-za-b-\")\n    # \"b\"\n\
    \    # >>> $(echo \"a\" | tr \"a-z\" \"b-za-b-a\")\n    # \"b\"\n    # >>> $(echo\
    \ \"a\" | tr \"a-z\" \"b-za-b-a-\")\n    # \"b\"\n    # >>> $(echo \"a\" | tr\
    \ \"a-z\" \"b-za-b-a-b\")\n    # \"b\"\n    # >>> $(echo \"a\" | tr \"a-z\" \"\
    b-za-b-a-b-\")\n    # \"b\"\n    # >>> $(echo \"a\" | tr \"a-z\" \"b-za-b-a-b-a\"\
    )\n    # \"b\"\n    # >>> $(echo \"a\n}\n\ncandidate() {\n    encrypt \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbc8bgbhd.sh: line 62: syntax error near unexpected token `}''

    /tmp/tmpbc8bgbhd.sh: line 62: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n    # Hint: You can use the modulo operator to wrap around the alphabet\n\
    \    # Hint: You can use the ord() and chr() functions to convert between\n  \
    \  #       characters and their ASCII values\n    # Hint: You can use the echo\
    \ command to return a string\n    # Hint: You can use the $1 variable to access\
    \ the argument passed to\n    #       the function\n    # Hint: You can use the\
    \ seq command to generate a sequence of numbers\n    #       in a loop\n    #\
    \ Hint: You can use the tr command to translate characters\n    # Hint: You can\
    \ use the expr command to perform arithmetic\n    # Hint: You can use the echo\
    \ -n command to return a string without a\n    #       newline\n    # Hint: You\
    \ can use the printf command to format strings\n    # Hint: You can use the read\
    \ command to read from standard input\n    # Hint: You can use the -n option to\
    \ the read command to read a single\n    #       character\n    # Hint: You can\
    \ use the -s option to the read command to make it silent\n    # Hint: You can\
    \ use the -p option to the read command to prompt the user\n    # Hint: You can\
    \ use the -r option to the read command to make it raw\n    # Hint: You can use\
    \ the -d option to the read command to specify a delimiter\n    # Hint: You can\
    \ use the -t option to the read command to specify a timeout\n    # Hint: You\
    \ can use the -i option to the read command to specify a default value\n    #\
    \ Hint: You can use the -a option to the read command to read into an array\n\
    \    # Hint: You can use the -n option to the read command to read a specific\
    \ number of characters\n    # Hint: You can use the -u option to the read command\
    \ to read from a specific file descriptor\n    # Hint: You can use the -e option\
    \ to the read command to enable command line editing\n    # Hint: You can use\
    \ the -z option to the read command to read until a null character\n    # Hint:\
    \ You can use the -k option to the read command to read into a key-value pair\n\
    \    # Hint: You\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\"\
    ) = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate\
    \ \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\"\
    \ ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp24bxl43r.sh: line 48: syntax error near unexpected token `}''

    /tmp/tmp24bxl43r.sh: line 48: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: implement this\
    \ function\n    # Hint: use the tr command\n    # Hint: use the command seq\n\
    \    # Hint: use the command echo\n    # Hint: use the command tr\n    # Hint:\
    \ use the command rev\n    # Hint: use the command rev\n    # Hint: use the command\
    \ rev\n    # Hint: use the command rev\n    # Hint: use the command rev\n    #\
    \ Hint: use the command rev\n    # Hint: use the command rev\n    # Hint: use\
    \ the command rev\n    # Hint: use the command rev\n    # Hint: use the command\
    \ rev\n    # Hint: use the command rev\n    # Hint: use the command rev\n    #\
    \ Hint: use the command rev\n    # Hint: use the command rev\n    # Hint: use\
    \ the command rev\n    # Hint: use the command rev\n    # Hint: use the command\
    \ rev\n    # Hint: use the command rev\n    # Hint: use the command rev\n    #\
    \ Hint: use the command rev\n    # Hint: use the command rev\n    # Hint: use\
    \ the command rev\n    # Hint: use the command rev\n    # Hint: use the command\
    \ rev\n    # Hint: use the command rev\n    # Hint: use the command rev\n    #\
    \ Hint: use the command rev\n    # Hint: use the command rev\n    # Hint: use\
    \ the command rev\n    # Hint: use the command rev\n    # Hint: use the command\
    \ rev\n    # Hint: use the command rev\n    # Hint: use the command rev\n    #\
    \ Hint: use the command rev\n    # Hint: use the command rev\n    # Hint: use\
    \ the command rev\n    # Hint: use the command rev\n    # Hint: use the command\
    \ rev\n    # Hint: use the command rev\n    # Hint: use the command rev\n    #\
    \ Hint: use the command rev\n    # Hint: use the command rev\n    # Hint: use\
    \ the command rev\n    # Hint: use the command rev\n    # Hint: use the command\
    \ rev\n    # Hint: use the command rev\n    #\n}\n\ncandidate() {\n    encrypt\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n\
    \    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\"\
    ) = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbcojadaz.sh: line 70: syntax error near unexpected token `}''

    /tmp/tmpbcojadaz.sh: line 70: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: write your\
    \ code here\n    # Hint: use the tr command\n    # Hint: use the echo command\n\
    \    # Hint: use the $1 variable\n    # Hint: use the $() construct\n    # Hint:\
    \ use the tr command\n    # Hint: use the echo command\n    # Hint: use the $1\
    \ variable\n    # Hint: use the $() construct\n    # Hint: use the tr command\n\
    \    # Hint: use the echo command\n    # Hint: use the $1 variable\n    # Hint:\
    \ use the $() construct\n    # Hint: use the tr command\n    # Hint: use the echo\
    \ command\n    # Hint: use the $1 variable\n    # Hint: use the $() construct\n\
    \    # Hint: use the tr command\n    # Hint: use the echo command\n    # Hint:\
    \ use the $1 variable\n    # Hint: use the $() construct\n    # Hint: use the\
    \ tr command\n    # Hint: use the echo command\n    # Hint: use the $1 variable\n\
    \    # Hint: use the $() construct\n    # Hint: use the tr command\n    # Hint:\
    \ use the echo command\n    # Hint: use the $1 variable\n    # Hint: use the $()\
    \ construct\n    # Hint: use the tr command\n    # Hint: use the echo command\n\
    \    # Hint: use the $1 variable\n    # Hint: use the $() construct\n    # Hint:\
    \ use the tr command\n    # Hint: use the echo command\n    # Hint: use the $1\
    \ variable\n    # Hint: use the $() construct\n    # Hint: use the tr command\n\
    \    # Hint: use the echo command\n    # Hint: use the $1 variable\n    # Hint:\
    \ use the $() construct\n    # Hint: use the tr command\n    # Hint: use the echo\
    \ command\n    # Hint: use the $1 variable\n    # Hint: use the $() construct\n\
    \    # Hint: use the tr command\n    # Hint: use the echo command\n    # Hint:\
    \ use the $1 variable\n    # Hint: use the $\n}\n\ncandidate() {\n    encrypt\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n\
    \    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\"\
    ) = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2yyb5rsi.sh: line 67: syntax error near unexpected token `}''

    /tmp/tmp2yyb5rsi.sh: line 67: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # Your code here\n\
    \    echo \"Not yet implemented\"\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n\t# TODO: implement this\
    \ function\n\t# Hint: use the tr command\n\techo $1 | tr 'a-z' 'c-za-b'\n}\n\n\
    candidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n\
    \    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n\
    \    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[ $(candidate\
    \ \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    # Hint: You can use the tr command to translate characters\n \
    \   #       in a string.\n    #       For example:\n    #       $ echo \"hello\"\
    \ | tr \"a-z\" \"b-za\"\n    #       \"ifmmp\"\n    #       $ echo \"hello\" |\
    \ tr \"a-z\" \"b-za\" | tr \"a-z\" \"b-za\"\n    #       \"jgnnq\"\n    #    \
    \   $ echo \"hello\" | tr \"a-z\" \"b-za\" | tr \"a-z\" \"b-za\" | tr \"a-z\"\
    \ \"b-za\"\n    #       \"khoor\"\n    #       $ echo \"hello\" | tr \"a-z\" \"\
    b-za\" | tr \"a-z\" \"b-za\" | tr \"a-z\" \"b-za\" | tr \"a-z\" \"b-za\"\n   \
    \ #       \"lipps\"\n    #       $ echo \"hello\" | tr \"a-z\" \"b-za\" | tr \"\
    a-z\" \"b-za\" | tr \"a-z\" \"b-za\" | tr \"a-z\" \"b-za\" | tr \"a-z\" \"b-za\"\
    \n    #       \"mjqqt\"\n    #       $ echo \"hello\" | tr \"a-z\" \"b-za\" |\
    \ tr \"a-z\" \"b-za\" | tr \"a-z\" \"b-za\" | tr \"a-z\" \"b-za\" | tr \"a-z\"\
    \ \"b-za\" | tr \"a-z\" \"b-za\"\n    #       \"nkrru\"\n    #       $ echo \"\
    hello\" | tr \"a-z\" \"b-za\" | tr \"a-z\" \"b-za\" | tr \"a-z\" \"b-za\" | tr\
    \ \"a-z\" \"b-za\" | tr \"a-z\" \"b-za\" | tr \"a-z\" \"b-za\" | tr \"a-z\" \"\
    b-za\"\n    #       \"olssv\"\n    #       $ echo \"hello\" |\n}\n\ncandidate()\
    \ {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\"\
    ) = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate\
    \ \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate\
    \ \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\"\
    ) = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4s3934a_.sh: line 37: syntax error near unexpected token `}''

    /tmp/tmp4s3934a_.sh: line 37: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: implement this\
    \ function\n    # Hint: use the tr command\n    echo $1 | tr '[a-z]' '[c-za-b]'\n\
    }\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n\
    \    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n\
    \    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[ $(candidate\
    \ \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n    echo \"TODO\"\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"\
    ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate \"\
    et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n\
    \    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4yhaq9mm.sh: line 19: syntax error near unexpected token `}''

    /tmp/tmp4yhaq9mm.sh: line 19: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n  # your code here\n  echo\
    \ $1 | tr \"a-z\" \"c-za-b\"\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    # Hint: You can use the ord and chr functions to convert between\n\
    \    # ASCII characters and their integer representations.\n    # ord takes a\
    \ character and returns its integer representation\n    # chr takes an integer\
    \ and returns its character representation\n    # For example:\n    # >>> $(ord\
    \ \"a\")\n    # 97\n    # >>> $(chr 97)\n    # \"a\"\n    # >>> $(ord \"z\")\n\
    \    # 122\n    # >>> $(chr 122)\n    # \"z\"\n    # >>> $(ord \"A\")\n    # 65\n\
    \    # >>> $(chr 65)\n    # \"A\"\n    # >>> $(ord \"Z\")\n    # 90\n    # >>>\
    \ $(chr 90)\n    # \"Z\"\n    # >>> $(ord \" \")\n    # 32\n    # >>> $(chr 32)\n\
    \    # \" \"\n    # >>> $(ord \"!\")\n    # 33\n    # >>> $(chr 33)\n    # \"\
    !\"\n    # >>> $(ord \".\")\n    # 46\n    # >>> $(chr 46)\n    # \".\"\n    #\
    \ >>> $(ord \",\")\n    # 44\n    # >>> $(chr 44)\n    # \",\"\n    # >>> $(ord\
    \ \"?\")\n    # 63\n    # >>> $(chr 63)\n    # \"?\"\n    # >>> $(ord \";\")\n\
    \    # 59\n    # >>> $(chr 59)\n    # \";\"\n    # >>> $(ord \":\")\n    # 58\n\
    \    # >>> $(chr 58)\n    # \":\"\n    # >>> $(ord \"'\")\n    # 39\n    # >>>\
    \ $(chr 39)\n    # \"'\"\n    # >>> $(ord \"\\\"\")\n    # 34\n    # >>> $(chr\
    \ 34)\n    # \"\\\"\"\n    # >>> $(ord \"`\")\n    # 96\n    # >>> $(chr 96)\n\
    \    # \"`\"\n    # >>> $(ord \"~\")\n    # 126\n    # >>> $(chr 126)\n    # \"\
    ~\"\n    # >>> $(ord \"{\")\n    # 123\n    # >>> $(chr 123)\n    # \"{\"\n  \
    \  # >>> $(ord \"\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\"\
    ) = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate\
    \ \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\"\
    \ ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpc5e17430.sh: line 89: syntax error near unexpected token `}''

    /tmp/tmpc5e17430.sh: line 89: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # Write your code here\n\
    \    # You can use the following string to get the alphabet\n    # alphabet=\"\
    abcdefghijklmnopqrstuvwxyz\"\n    #\n    # You can use the following string to\
    \ get the alphabet\n    # alphabet=\"abcdefghijklmnopqrstuvwxyz\"\n    #\n   \
    \ # You can use the following string to get the alphabet\n    # alphabet=\"abcdefghijklmnopqrstuvwxyz\"\
    \n    #\n    # You can use the following string to get the alphabet\n    # alphabet=\"\
    abcdefghijklmnopqrstuvwxyz\"\n    #\n    # You can use the following string to\
    \ get the alphabet\n    # alphabet=\"abcdefghijklmnopqrstuvwxyz\"\n    #\n   \
    \ # You can use the following string to get the alphabet\n    # alphabet=\"abcdefghijklmnopqrstuvwxyz\"\
    \n    #\n    # You can use the following string to get the alphabet\n    # alphabet=\"\
    abcdefghijklmnopqrstuvwxyz\"\n    #\n    # You can use the following string to\
    \ get the alphabet\n    # alphabet=\"abcdefghijklmnopqrstuvwxyz\"\n    #\n   \
    \ # You can use the following string to get the alphabet\n    # alphabet=\"abcdefghijklmnopqrstuvwxyz\"\
    \n    #\n    # You can use the following string to get the alphabet\n    # alphabet=\"\
    abcdefghijklmnopqrstuvwxyz\"\n    #\n    # You can use the following string to\
    \ get the alphabet\n    # alphabet=\"abcdefghijklmnopqrstuvwxyz\"\n    #\n   \
    \ # You can use the following string to get the alphabet\n    # alphabet=\"abcdefghijklmnopqrstuvwxyz\"\
    \n    #\n    # You can use the following string to get the alphabet\n    # alphabet=\"\
    abcdefghijklmnopqrstuvwxyz\"\n    #\n    # You can use the following string to\
    \ get the alphabet\n    # alphabet=\"abcdefghijklmnopqrstuvwxyz\"\n    #\n\n}\n\
    \ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n\
    \    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n\
    \    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[ $(candidate\
    \ \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2kcxsyzl.sh: line 62: syntax error near unexpected token `}''

    /tmp/tmp2kcxsyzl.sh: line 62: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # Your code here\n\
    \    # Hint: You may want to use the ord and chr functions\n    # ord takes a\
    \ character and returns its ASCII value\n    # chr takes an ASCII value and returns\
    \ its character\n    # Example:\n    # >>> $(ord \"a\")\n    # 97\n    # >>> $(chr\
    \ 97)\n    # \"a\"\n    #\n    # You may also want to use the modulo operator\
    \ %\n    # Example:\n    # >>> $(expr 5 % 2)\n    # 1\n    # >>> $(expr 6 % 2)\n\
    \    # 0\n    #\n    # You may also want to use the expr command to do arithmetic\n\
    \    # Example:\n    # >>> $(expr 1 + 2)\n    # 3\n    # >>> $(expr 5 - 2)\n \
    \   # 3\n    # >>> $(expr 5 \\* 2)\n    # 10\n    # >>> $(expr 5 / 2)\n    # 2\n\
    \    # >>> $(expr 5 % 2)\n    # 1\n    #\n    # You may also want to use the bc\
    \ command to do arithmetic\n    # Example:\n    # >>> $(bc <<< \"1 + 2\")\n  \
    \  # 3\n    # >>> $(bc <<< \"5 - 2\")\n    # 3\n    # >>> $(bc <<< \"5 * 2\")\n\
    \    # 10\n    # >>> $(bc <<< \"5 / 2\")\n    # 2.5\n    # >>> $(bc <<< \"5 %\
    \ 2\")\n    # 1\n    #\n    # You may also want to use the tr command to translate\
    \ characters\n    # Example:\n    # >>> $(tr \"a-z\" \"b-za\" <<< \"abc\")\n \
    \   # \"bcd\"\n    # >>> $(tr \"a-z\" \"b-za\" <<< \"xyz\")\n    # \"yza\"\n \
    \   # >>> $(tr \"a-z\" \"b-za\" <<< \"xyz\")\n    # \"yza\"\n    # >>> $(tr \"\
    a-z\" \"b-za\" <<< \"xyz\")\n    # \"yza\"\n    # >>> $(tr \"a-z\" \"b-za\" <<<\
    \ \"xyz\")\n    # \"yza\"\n    # >>> $(tr \"a-z\n}\n\ncandidate() {\n    encrypt\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n\
    \    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\"\
    ) = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpto_ikg_s.sh: line 74: syntax error near unexpected token `}''

    /tmp/tmpto_ikg_s.sh: line 74: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # Write your code here\n\
    \    # Hint: Use the ascii table to find the values of the letters\n    # http://www.asciitable.com/\n\
    \    # Hint: Use the modulo operator to wrap around the alphabet\n    # Hint:\
    \ Use the tr command to translate the string\n    # Hint: Use the echo command\
    \ to return the string\n    echo $1\n}\n\ncandidate() {\n    encrypt \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: implement this\
    \ function\n    echo \"TODO\"\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    # Hint: You can use the ord and chr functions to convert between\n\
    \    #       characters and their ASCII values.\n    # Hint: You can use the modulo\
    \ operator to wrap around the alphabet\n    #       if you go past the end.\n\
    \    # Hint: You can use the echo command to output a string.\n    # Hint: You\
    \ can use the tr command to replace characters in a string.\n    # Hint: You can\
    \ use the seq command to generate a sequence of numbers.\n    # Hint: You can\
    \ use the paste command to combine two strings.\n    # Hint: You can use the fold\
    \ command to wrap long lines.\n    # Hint: You can use the tr command to delete\
    \ characters from a string.\n    # Hint: You can use the rev command to reverse\
    \ a string.\n    # Hint: You can use the tr command to translate characters in\
    \ a string.\n    # Hint: You can use the tr command to squeeze repeated characters\
    \ in a string.\n    # Hint: You can use the tr command to delete characters from\
    \ a string.\n    # Hint: You can use the tr command to translate characters in\
    \ a string.\n    # Hint: You can use the tr command to squeeze repeated characters\
    \ in a string.\n    # Hint: You can use the tr command to delete characters from\
    \ a string.\n    # Hint: You can use the tr command to translate characters in\
    \ a string.\n    # Hint: You can use the tr command to squeeze repeated characters\
    \ in a string.\n    # Hint: You can use the tr command to delete characters from\
    \ a string.\n    # Hint: You can use the tr command to translate characters in\
    \ a string.\n    # Hint: You can use the tr command to squeeze repeated characters\
    \ in a string.\n    # Hint: You can use the tr command to delete characters from\
    \ a string.\n    # Hint: You can use the tr command to translate characters in\
    \ a string.\n    # Hint: You can use the tr command to squeeze repeated characters\
    \ in a string.\n    # Hint: You can use the tr command to delete characters from\
    \ a string.\n    # Hint: You can use the tr command to translate characters in\
    \ a string.\n    # Hint: You can use the tr command\n}\n\ncandidate() {\n    encrypt\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n\
    \    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\"\
    ) = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptcnn2pz5.sh: line 47: syntax error near unexpected token `}''

    /tmp/tmptcnn2pz5.sh: line 47: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n\t# your code here\n\t\
    echo $1 | tr 'a-z' 'c-za-b'\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n  # TODO: implement this\
    \ function\n  echo $1 | tr 'a-z' 'c-za-b'\n}\n\ncandidate() {\n    encrypt \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[\
    \ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") =\
    \ \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: implement this\
    \ function\n    echo $1 | tr 'a-z' 'c-za-b'\n}\n\ncandidate() {\n    encrypt \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[\
    \ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") =\
    \ \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: write your\
    \ code here\n    # Hint: use the ord and chr functions\n    # Hint: use the modulo\
    \ operator\n    # Hint: use the range operator\n    # Hint: use the join function\n\
    \    # Hint: use the map function\n    # Hint: use the zip function\n    # Hint:\
    \ use the list function\n    # Hint: use the lambda function\n    # Hint: use\
    \ the ord function\n    # Hint: use the chr function\n    # Hint: use the map\
    \ function\n    # Hint: use the join function\n    # Hint: use the list function\n\
    \    # Hint: use the lambda function\n    # Hint: use the ord function\n    #\
    \ Hint: use the chr function\n    # Hint: use the map function\n    # Hint: use\
    \ the join function\n    # Hint: use the list function\n    # Hint: use the lambda\
    \ function\n    # Hint: use the ord function\n    # Hint: use the chr function\n\
    \    # Hint: use the map function\n    # Hint: use the join function\n    # Hint:\
    \ use the list function\n    # Hint: use the lambda function\n    # Hint: use\
    \ the ord function\n    # Hint: use the chr function\n    # Hint: use the map\
    \ function\n    # Hint: use the join function\n    # Hint: use the list function\n\
    \    # Hint: use the lambda function\n    # Hint: use the ord function\n    #\
    \ Hint: use the chr function\n    # Hint: use the map function\n    # Hint: use\
    \ the join function\n    # Hint: use the list function\n    # Hint: use the lambda\
    \ function\n    # Hint: use the ord function\n    # Hint: use the chr function\n\
    \    # Hint: use the map function\n    # Hint: use the join function\n    # Hint:\
    \ use the list function\n    # Hint: use the lambda function\n    # Hint: use\
    \ the ord function\n    # Hint: use the chr function\n    # Hint: use the map\
    \ function\n    # Hint: use the join function\n    # Hint: use the list function\n\
    \n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n\
    \    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n\
    \    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[ $(candidate\
    \ \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpir3cghc1.sh: line 69: syntax error near unexpected token `}''

    /tmp/tmpir3cghc1.sh: line 69: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n    # Hint: You can use the ord and chr functions to convert between\n\
    \    #       ASCII values and characters.\n    #       For example:\n    #   \
    \    >>> $(ord \"a\")\n    #       97\n    #       >>> $(chr 97)\n    #      \
    \ \"a\"\n    #       >>> $(chr $(ord \"a\"))\n    #       \"a\"\n    #       >>>\
    \ $(chr $(ord \"a\") + 1)\n    #       \"b\"\n    #       >>> $(chr $(ord \"a\"\
    ) + 2)\n    #       \"c\"\n    #       >>> $(chr $(ord \"a\") + 3)\n    #    \
    \   \"d\"\n    #       >>> $(chr $(ord \"a\") + 4)\n    #       \"e\"\n    # \
    \      >>> $(chr $(ord \"a\") + 5)\n    #       \"f\"\n    #       >>> $(chr $(ord\
    \ \"a\") + 6)\n    #       \"g\"\n    #       >>> $(chr $(ord \"a\") + 7)\n  \
    \  #       \"h\"\n    #       >>> $(chr $(ord \"a\") + 8)\n    #       \"i\"\n\
    \    #       >>> $(chr $(ord \"a\") + 9)\n    #       \"j\"\n    #       >>> $(chr\
    \ $(ord \"a\") + 10)\n    #       \"k\"\n    #       >>> $(chr $(ord \"a\") +\
    \ 11)\n    #       \"l\"\n    #       >>> $(chr $(ord \"a\") + 12)\n    #    \
    \   \"m\"\n    #       >>> $(chr $(ord \"a\") + 13)\n    #       \"n\"\n    #\
    \       >>> $(chr $(ord \"a\") + 14)\n    #       \"o\"\n    #       >>> $(chr\
    \ $(ord \"a\") + 15)\n    #       \"p\"\n    #       >>> $(chr $(ord \"a\") +\
    \ 16)\n    #       \"q\"\n    #       >>> $(chr $(ord \"a\") + 17)\n    #    \
    \   \"r\"\n    #       >>> $(chr $(ord \"a\") + 18)\n    #       \"s\"\n   \n\
    }\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n\
    \    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n\
    \    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[ $(candidate\
    \ \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpv341ya46.sh: line 65: syntax error near unexpected token `}''

    /tmp/tmpv341ya46.sh: line 65: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    echo \"TODO\"\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n    # Hint: You can use the modulo operator to wrap around the alphabet.\n\
    \    # Hint: You can use the ord() and chr() functions to convert between\n  \
    \  #       characters and their ASCII values.\n    # Hint: You can use the built-in\
    \ function \"echo\" to print to stdout.\n    # Hint: You can use the built-in\
    \ function \"read\" to read from stdin.\n    # Bonus: Can you make the alphabet\
    \ wrap around?\n    # Bonus: Can you make the alphabet wrap around in a way that\
    \ is\n    #        independent of the length of the alphabet?\n    # Bonus: Can\
    \ you make the alphabet wrap around in a way that is\n    #        independent\
    \ of the length of the alphabet and the shift?\n    # Bonus: Can you make the\
    \ alphabet wrap around in a way that is\n    #        independent of the length\
    \ of the alphabet, the shift, and\n    #        the starting point of the alphabet?\n\
    \    # Bonus: Can you make the alphabet wrap around in a way that is\n    #  \
    \      independent of the length of the alphabet, the shift, the\n    #      \
    \  starting point of the alphabet, and the ending point of the\n    #        alphabet?\n\
    \    # Bonus: Can you make the alphabet wrap around in a way that is\n    #  \
    \      independent of the length of the alphabet, the shift, the\n    #      \
    \  starting point of the alphabet, the ending point of the\n    #        alphabet,\
    \ and the direction of the shift?\n    # Bonus: Can you make the alphabet wrap\
    \ around in a way that is\n    #        independent of the length of the alphabet,\
    \ the shift, the\n    #        starting point of the alphabet, the ending point\
    \ of the\n    #        alphabet, the direction of the shift, and the direction\
    \ of\n    #        the alphabet?\n    # Bonus: Can you make the alphabet wrap\
    \ around in a way that is\n    #        independent of the length of the alphabet,\
    \ the shift, the\n    #        starting point of the alphabet, the ending point\
    \ of the\n    #        alphabet, the direction of the shift, the direction of\
    \ the\n    #        alphabet, and the direction of the output?\n    # Bonus: Can\
    \ you make the alphabet wrap around in a way that is\n    #        independent\
    \ of the length\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\"\
    ) = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate\
    \ \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\"\
    \ ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4_z658e5.sh: line 52: syntax error near unexpected token `}''

    /tmp/tmp4_z658e5.sh: line 52: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: implement this\
    \ function\n    echo \"Not implemented\"\n}\n\ncandidate() {\n    encrypt \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"\
    ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate \"\
    et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n\
    \    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4yhaq9mm.sh: line 19: syntax error near unexpected token `}''

    /tmp/tmp4yhaq9mm.sh: line 19: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: implement this\
    \ function\n    # Hint: use the tr command\n    # Hint: use the echo command\n\
    \    # Hint: use the $1 variable\n    # Hint: use the $(()) syntax\n    # Hint:\
    \ use the modulo operator %\n    # Hint: use the ordinal value of a character\n\
    \    # Hint: use the chr function\n    # Hint: use the range operator {a..b}\n\
    \    # Hint: use the echo -n option\n    # Hint: use the printf command\n    #\
    \ Hint: use the $() syntax\n    # Hint: use the $# variable\n    # Hint: use the\
    \ $0 variable\n    # Hint: use the $1 variable\n    # Hint: use the $2 variable\n\
    \    # Hint: use the $3 variable\n    # Hint: use the $4 variable\n    # Hint:\
    \ use the $5 variable\n    # Hint: use the $6 variable\n    # Hint: use the $7\
    \ variable\n    # Hint: use the $8 variable\n    # Hint: use the $9 variable\n\
    \    # Hint: use the ${10} variable\n    # Hint: use the ${11} variable\n    #\
    \ Hint: use the ${12} variable\n    # Hint: use the ${13} variable\n    # Hint:\
    \ use the ${14} variable\n    # Hint: use the ${15} variable\n    # Hint: use\
    \ the ${16} variable\n    # Hint: use the ${17} variable\n    # Hint: use the\
    \ ${18} variable\n    # Hint: use the ${19} variable\n    # Hint: use the ${20}\
    \ variable\n    # Hint: use the ${21} variable\n    # Hint: use the ${22} variable\n\
    \    # Hint: use the ${23} variable\n    # Hint: use the ${24} variable\n    #\
    \ Hint: use the ${25} variable\n    # Hint: use the ${26} variable\n    # Hint:\
    \ use the ${27} variable\n    # Hint: use the ${28} variable\n    # Hint: use\
    \ the ${29} variable\n    # Hint: use the ${30} variable\n    #\n}\n\ncandidate()\
    \ {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\"\
    ) = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate\
    \ \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate\
    \ \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\"\
    ) = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwue3t3xp.sh: line 63: syntax error near unexpected token `}''

    /tmp/tmpwue3t3xp.sh: line 63: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n    # Hint: You can use the ord and chr functions to convert between\n\
    \    #       ascii characters and their integer values.\n    #       For example:\n\
    \    #       >>> ord(\"a\")\n    #       97\n    #       >>> chr(97)\n    #  \
    \     \"a\"\n    #       >>> ord(\"b\")\n    #       98\n    #       >>> chr(98)\n\
    \    #       \"b\"\n    #       >>> ord(\"c\")\n    #       99\n    #       >>>\
    \ chr(99)\n    #       \"c\"\n    #       >>> ord(\"d\")\n    #       100\n  \
    \  #       >>> chr(100)\n    #       \"d\"\n    #       >>> ord(\"e\")\n    #\
    \       101\n    #       >>> chr(101)\n    #       \"e\"\n    #       >>> ord(\"\
    f\")\n    #       102\n    #       >>> chr(102)\n    #       \"f\"\n    #    \
    \   >>> ord(\"g\")\n    #       103\n    #       >>> chr(103)\n    #       \"\
    g\"\n    #       >>> ord(\"h\")\n    #       104\n    #       >>> chr(104)\n \
    \   #       \"h\"\n    #       >>> ord(\"i\")\n    #       105\n    #       >>>\
    \ chr(105)\n    #       \"i\"\n    #       >>> ord(\"j\")\n    #       106\n \
    \   #       >>> chr(106)\n    #       \"j\"\n    #       >>> ord(\"k\")\n    #\
    \       107\n    #       >>> chr(107)\n    #       \"k\"\n    #       >>> ord(\"\
    l\")\n    #       108\n    #       >>> chr(108)\n    #       \"l\"\n    #    \
    \   >>> ord(\"m\")\n    #       109\n    #       >>> chr(109)\n    #       \"\
    m\"\n    #       >>> ord(\"n\")\n    #       110\n    #       >>> chr(110)\n \
    \   #       \"n\"\n    #       >>> ord(\"o\")\n    #       111\n    #       >>>\
    \ chr(111)\n    #       \"o\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpw0yver8_.sh: line 82: syntax error near unexpected token `}''

    /tmp/tmpw0yver8_.sh: line 82: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # Your code here\n\
    \    # Hint: You can use the modulo operator to wrap around the alphabet\n   \
    \ # Hint: You can use the ord() and chr() functions to convert between\n    #\
    \       characters and their ASCII values\n    # Hint: You can use the echo command\
    \ to print to stdout\n    # Hint: You can use the tr command to translate characters\n\
    \    # Hint: You can use the expr command to do arithmetic\n    # Hint: You can\
    \ use the seq command to generate a sequence of numbers\n    # Hint: You can use\
    \ the paste command to merge lines of text\n    # Hint: You can use the sort command\
    \ to sort lines of text\n    # Hint: You can use the uniq command to remove duplicate\
    \ lines of text\n    # Hint: You can use the tr command to delete characters\n\
    \    # Hint: You can use the cut command to select parts of lines of text\n  \
    \  # Hint: You can use the head command to select the first part of text\n   \
    \ # Hint: You can use the tail command to select the last part of text\n    #\
    \ Hint: You can use the rev command to reverse lines of text\n    # Hint: You\
    \ can use the fold command to wrap lines of text\n    # Hint: You can use the\
    \ fmt command to format lines of text\n    # Hint: You can use the sed command\
    \ to find and replace text\n    # Hint: You can use the tr command to squeeze\
    \ repeated characters\n    # Hint: You can use the tr command to delete characters\n\
    \    # Hint: You can use the tr command to translate characters\n    # Hint: You\
    \ can use the tr command to squeeze repeated characters\n    # Hint: You can use\
    \ the tr command to delete characters\n    # Hint: You can use the tr command\
    \ to translate characters\n    # Hint: You can use the tr command to squeeze repeated\
    \ characters\n    # Hint: You can use the tr command to delete characters\n  \
    \  # Hint: You can use the tr command to translate characters\n    # Hint: You\
    \ can use the tr command to squeeze repeated characters\n    # Hint: You can use\
    \ the tr command to delete characters\n    # Hint: You can use the tr command\
    \ to translate characters\n    # Hint: You can use the tr command to squeeze repeated\
    \ characters\n\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\"\
    ) = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate\
    \ \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\"\
    \ ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3li2iiri.sh: line 51: syntax error near unexpected token `}''

    /tmp/tmp3li2iiri.sh: line 51: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    echo \"TODO\"\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: implement this\
    \ function\n    echo \"TODO\"\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: write your\
    \ code here\n    # Hint: use the tr command\n    # Hint: use the echo command\n\
    \    # Hint: use the $1 variable\n    # Hint: use the $() construct\n    # Hint:\
    \ use the tr command\n    # Hint: use the echo command\n    # Hint: use the $1\
    \ variable\n    # Hint: use the $() construct\n    # Hint: use the tr command\n\
    \    # Hint: use the echo command\n    # Hint: use the $1 variable\n    # Hint:\
    \ use the $() construct\n    # Hint: use the tr command\n    # Hint: use the echo\
    \ command\n    # Hint: use the $1 variable\n    # Hint: use the $() construct\n\
    \    # Hint: use the tr command\n    # Hint: use the echo command\n    # Hint:\
    \ use the $1 variable\n    # Hint: use the $() construct\n    # Hint: use the\
    \ tr command\n    # Hint: use the echo command\n    # Hint: use the $1 variable\n\
    \    # Hint: use the $() construct\n    # Hint: use the tr command\n    # Hint:\
    \ use the echo command\n    # Hint: use the $1 variable\n    # Hint: use the $()\
    \ construct\n    # Hint: use the tr command\n    # Hint: use the echo command\n\
    \    # Hint: use the $1 variable\n    # Hint: use the $() construct\n    # Hint:\
    \ use the tr command\n    # Hint: use the echo command\n    # Hint: use the $1\
    \ variable\n    # Hint: use the $() construct\n    # Hint: use the tr command\n\
    \    # Hint: use the echo command\n    # Hint: use the $1 variable\n    # Hint:\
    \ use the $() construct\n    # Hint: use the tr command\n    # Hint: use the echo\
    \ command\n    # Hint: use the $1 variable\n    # Hint: use the $() construct\n\
    \    # Hint: use the tr command\n    # Hint: use the echo command\n    # Hint:\
    \ use the $1 variable\n    # Hint: use the $\n}\n\ncandidate() {\n    encrypt\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n\
    \    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\"\
    ) = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2yyb5rsi.sh: line 67: syntax error near unexpected token `}''

    /tmp/tmp2yyb5rsi.sh: line 67: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    echo $1 | tr 'a-z'\
    \ 'c-za-b'\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"\
    ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate \"\
    et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n\
    \    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n    # Hint: You can use the tr command to translate characters\n\
    \    # in a string.\n    # For example:\n    # >>> echo \"hi\" | tr 'a-z' 'c-za-b'\n\
    \    # \"lm\"\n    # >>> echo \"hi\" | tr 'a-z' 'e-za-d'\n    # \"ok\"\n    #\
    \ >>> echo \"hi\" | tr 'a-z' 'g-za-f'\n    # \"qm\"\n    # >>> echo \"hi\" | tr\
    \ 'a-z' 'i-za-h'\n    # \"sm\"\n    # >>> echo \"hi\" | tr 'a-z' 'k-za-j'\n  \
    \  # \"um\"\n    # >>> echo \"hi\" | tr 'a-z' 'm-za-l'\n    # \"wo\"\n    # >>>\
    \ echo \"hi\" | tr 'a-z' 'o-za-n'\n    # \"yq\"\n    # >>> echo \"hi\" | tr 'a-z'\
    \ 'q-za-p'\n    # \"as\"\n    # >>> echo \"hi\" | tr 'a-z' 's-za-r'\n    # \"\
    cu\"\n    # >>> echo \"hi\" | tr 'a-z' 'u-za-t'\n    # \"ew\"\n    # >>> echo\
    \ \"hi\" | tr 'a-z' 'w-za-v'\n    # \"gy\"\n    # >>> echo \"hi\" | tr 'a-z' 'y-za-x'\n\
    \    # \"ia\"\n    # >>> echo \"hi\" | tr 'a-z' 'a-za'\n    # \"hi\"\n    # >>>\
    \ echo \"hi\" | tr 'a-z' 'b-za'\n    # \"ij\"\n    # >>> echo \"hi\" | tr 'a-z'\
    \ 'c-za'\n    # \"jk\"\n    # >>> echo \"hi\" | tr 'a-z' 'd-za'\n    # \"kl\"\n\
    \    # >>> echo \"hi\" | tr 'a-z' 'e-za'\n    # \"lm\"\n    #\n}\n\ncandidate()\
    \ {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\"\
    ) = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate\
    \ \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate\
    \ \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\"\
    ) = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6gc2dfwf.sh: line 57: syntax error near unexpected token `}''

    /tmp/tmp6gc2dfwf.sh: line 57: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n    echo \"Not yet implemented\"\n}\n\ncandidate() {\n    encrypt\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n\
    \    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\"\
    ) = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # your code here\n\
    }\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n\
    \    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n\
    \    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[ $(candidate\
    \ \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8orvn3ev.sh: line 19: syntax error near unexpected token `}''

    /tmp/tmp8orvn3ev.sh: line 19: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n    # Hint: Use the following command to get the length of a string\n\
    \    # length=${#1}\n    # Hint: Use the following command to get the ASCII value\
    \ of a character\n    # ord=`printf \"%d\" \"'$c\"`\n    # Hint: Use the following\
    \ command to convert an ASCII value to a character\n    # chr=$(printf \\\\$(printf\
    \ '%03o' $ord))\n    # Hint: Use the following command to convert a string to\
    \ an array\n    # arr=($1)\n    # Hint: Use the following command to convert an\
    \ array to a string\n    # str=$( IFS=$';'; echo \"${arr[*]}\" )\n    # Hint:\
    \ Use the following command to get the length of an array\n    # length=${#arr[@]}\n\
    \    # Hint: Use the following command to get the nth element of an array\n  \
    \  # element=${arr[n]}\n    # Hint: Use the following command to get the index\
    \ of an element in an array\n    # index=`expr index \"${arr[*]}\" \"$element\"\
    `\n    # Hint: Use the following command to remove an element from an array\n\
    \    # unset arr[index]\n    # Hint: Use the following command to add an element\
    \ to an array\n    # arr+=($element)\n    # Hint: Use the following command to\
    \ add an element to the beginning of an array\n    # arr=($element \"${arr[@]}\"\
    )\n    # Hint: Use the following command to add an element to the end of an array\n\
    \    # arr=(\"${arr[@]}\" $element)\n    # Hint: Use the following command to\
    \ reverse an array\n    # arr=(\"${arr[@]}\" $element)\n    # Hint: Use the following\
    \ command to reverse an array\n    # arr=(\"${arr[@]}\" $element)\n    # Hint:\
    \ Use the following command to reverse an array\n    # arr=(\"${arr[@]}\" $element)\n\
    \    # Hint: Use the following command to reverse an array\n    # arr=(\"${arr[@]}\"\
    \ $element)\n    # Hint: Use the following command\n}\n\ncandidate() {\n    encrypt\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n\
    \    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\"\
    ) = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptin16cry.sh: line 52: syntax error near unexpected token `}''

    /tmp/tmptin16cry.sh: line 52: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: implement this\
    \ function\n    echo $1 | tr 'a-z' 'c-za-b'\n}\n\ncandidate() {\n    encrypt \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[\
    \ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") =\
    \ \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Your code here\n\
    \    echo $1 | tr 'a-z' 'c-za-b'\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n    echo \"hi\"\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    # Hint: Use the tr command\n    # Hint: Use the echo command\n\
    \    # Hint: Use the $1 variable\n    echo $1 | tr 'a-z' 'c-za-b'\n}\n\ncandidate()\
    \ {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\"\
    ) = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate\
    \ \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate\
    \ \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\"\
    ) = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    echo $1 | tr 'a-z'\
    \ 'c-za-b'\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"\
    ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate \"\
    et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n\
    \    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write this\
    \ function\n    # Hint: You can use the ord and chr functions to convert between\n\
    \    # ASCII characters and their integer values.\n    # ord takes a character\
    \ and returns its integer value\n    # chr takes an integer and returns its character\
    \ value\n    # For example:\n    # >>> $(ord \"a\")\n    # 97\n    # >>> $(chr\
    \ 97)\n    # \"a\"\n    # >>> $(ord \"b\")\n    # 98\n    # >>> $(chr 98)\n  \
    \  # \"b\"\n    # >>> $(ord \"c\")\n    # 99\n    # >>> $(chr 99)\n    # \"c\"\
    \n    # >>> $(ord \"d\")\n    # 100\n    # >>> $(chr 100)\n    # \"d\"\n    #\
    \ >>> $(ord \"e\")\n    # 101\n    # >>> $(chr 101)\n    # \"e\"\n    # >>> $(ord\
    \ \"f\")\n    # 102\n    # >>> $(chr 102)\n    # \"f\"\n    # >>> $(ord \"g\"\
    )\n    # 103\n    # >>> $(chr 103)\n    # \"g\"\n    # >>> $(ord \"h\")\n    #\
    \ 104\n    # >>> $(chr 104)\n    # \"h\"\n    # >>> $(ord \"i\")\n    # 105\n\
    \    # >>> $(chr 105)\n    # \"i\"\n    # >>> $(ord \"j\")\n    # 106\n    # >>>\
    \ $(chr 106)\n    # \"j\"\n    # >>> $(ord \"k\")\n    # 107\n    # >>> $(chr\
    \ 107)\n    # \"k\"\n    # >>> $(ord \"l\")\n    # 108\n    # >>> $(chr 108)\n\
    \    # \"l\"\n    # >>> $(ord \"m\")\n    # 109\n    # >>> $(chr 109)\n    # \"\
    m\"\n    # >>> $(ord \"n\")\n    # 110\n    # >>> $(chr 110)\n    # \"n\"\n  \
    \  # >>> $(ord \"o\")\n    # 111\n    # >>> $(chr 111)\n    # \"o\"\n    # >>>\
    \ $(ord \"p\")\n    # 112\n    # >>> $(chr 112)\n   \n}\n\ncandidate() {\n   \
    \ encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\"\
    \ ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate\
    \ \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate\
    \ \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\"\
    ) = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfouo43y_.sh: line 88: syntax error near unexpected token `}''

    /tmp/tmpfouo43y_.sh: line 88: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # Write your code here\n\
    \    # Hint: You can use the tr command to translate characters\n    #       in\
    \ a string.\n    #       For example:\n    #       >>> $(echo \"hi\" | tr \"hi\"\
    \ \"lm\")\n    #       \"lm\"\n    #       >>> $(echo \"asdfghjkl\" | tr \"asdfghjkl\"\
    \ \"ewhjklnop\")\n    #       \"ewhjklnop\"\n    #       >>> $(echo \"gf\" | tr\
    \ \"gf\" \"kj\")\n    #       \"kj\"\n    #       >>> $(echo \"et\" | tr \"et\"\
    \ \"ix\")\n    #       \"ix\"\n    #\n    #       You can also use the tr command\
    \ to translate characters\n    #       in a string by using a range of characters.\n\
    \    #       For example:\n    #       >>> $(echo \"hi\" | tr \"a-z\" \"c-za-b\"\
    )\n    #       \"jk\"\n    #       >>> $(echo \"asdfghjkl\" | tr \"a-z\" \"c-za-b\"\
    )\n    #       \"cxgjkmnop\"\n    #       >>> $(echo \"gf\" | tr \"a-z\" \"c-za-b\"\
    )\n    #       \"ij\"\n    #       >>> $(echo \"et\" | tr \"a-z\" \"c-za-b\")\n\
    \    #       \"gv\"\n    #\n    #       You can also use the tr command to translate\
    \ characters\n    #       in a string by using a range of characters and a number\n\
    \    #       to shift the range.\n    #       For example:\n    #       >>> $(echo\
    \ \"hi\" | tr \"a-z\" \"c-za-b\" 2)\n    #       \"lm\"\n    #       >>> $(echo\
    \ \"asdfghjkl\" | tr \"a-z\" \"c-za-b\" 2)\n    #       \"ewhjklnop\"\n    # \
    \      >>> $(echo \"gf\" | tr \"a-z\" \"c-za-b\" 2)\n    #       \"kj\"\n    #\
    \       >>> $(echo \"et\" | tr \"a-z\" \"c\n}\n\ncandidate() {\n    encrypt \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[\
    \ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") =\
    \ \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppcskbywy.sh: line 54: syntax error near unexpected token `}''

    /tmp/tmppcskbywy.sh: line 54: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: implement this\
    \ function\n    echo \"TODO\"\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write this\
    \ function\n    echo $1 | tr '[a-z]' '[c-za-b]'\n}\n\ncandidate() {\n    encrypt\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n\
    \    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\"\
    ) = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # Your code here\n\
    \    echo \"$1\"\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\"\
    ) = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate\
    \ \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\"\
    \ ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n    # Hint: You may want to use the ord and chr functions\n    #\
    \       ord takes a character and returns its ASCII value\n    #       chr takes\
    \ an ASCII value and returns its character\n    #       For example:\n    #  \
    \     >>> $(ord \"a\")\n    #       97\n    #       >>> $(chr 97)\n    #     \
    \  \"a\"\n    #       >>> $(chr $(ord \"a\"))\n    #       \"a\"\n    #      \
    \ >>> $(chr $(ord \"a\") + 1)\n    #       \"b\"\n    #       >>> $(chr $(ord\
    \ \"a\") + 2)\n    #       \"c\"\n    #       >>> $(chr $(ord \"a\") + 3)\n  \
    \  #       \"d\"\n    #       >>> $(chr $(ord \"a\") + 4)\n    #       \"e\"\n\
    \    #       >>> $(chr $(ord \"a\") + 5)\n    #       \"f\"\n    #       >>> $(chr\
    \ $(ord \"a\") + 6)\n    #       \"g\"\n    #       >>> $(chr $(ord \"a\") + 7)\n\
    \    #       \"h\"\n    #       >>> $(chr $(ord \"a\") + 8)\n    #       \"i\"\
    \n    #       >>> $(chr $(ord \"a\") + 9)\n    #       \"j\"\n    #       >>>\
    \ $(chr $(ord \"a\") + 10)\n    #       \"k\"\n    #       >>> $(chr $(ord \"\
    a\") + 11)\n    #       \"l\"\n    #       >>> $(chr $(ord \"a\") + 12)\n    #\
    \       \"m\"\n    #       >>> $(chr $(ord \"a\") + 13)\n    #       \"n\"\n \
    \   #       >>> $(chr $(ord \"a\") + 14)\n    #       \"o\"\n    #       >>> $(chr\
    \ $(ord \"a\") + 15)\n    #       \"p\"\n    #       >>> $(chr $(ord \"a\") +\
    \ 16)\n    #       \"q\"\n    #       >>> $(chr $(ord \"a\") + 17)\n    #    \
    \   \"r\"\n    #       >>> $(chr\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpojlb6xf9.sh: line 64: syntax error near unexpected token `}''

    /tmp/tmpojlb6xf9.sh: line 64: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write this\
    \ function\n    # Hint: You will need to use a loop\n    # Hint: You will need\
    \ to use the ord and chr functions\n    # Hint: You will need to use the modulo\
    \ operator\n    # Hint: You will need to use the string concatenation operator\n\
    \    # Hint: You will need to use the string length function\n    # Hint: You\
    \ will need to use the string indexing operator\n    # Hint: You will need to\
    \ use the string slicing operator\n    # Hint: You will need to use the string\
    \ assignment operator\n    # Hint: You will need to use the string comparison\
    \ operator\n    # Hint: You will need to use the string concatenation operator\n\
    \    # Hint: You will need to use the string length function\n    # Hint: You\
    \ will need to use the string indexing operator\n    # Hint: You will need to\
    \ use the string slicing operator\n    # Hint: You will need to use the string\
    \ assignment operator\n    # Hint: You will need to use the string comparison\
    \ operator\n    # Hint: You will need to use the string concatenation operator\n\
    \    # Hint: You will need to use the string length function\n    # Hint: You\
    \ will need to use the string indexing operator\n    # Hint: You will need to\
    \ use the string slicing operator\n    # Hint: You will need to use the string\
    \ assignment operator\n    # Hint: You will need to use the string comparison\
    \ operator\n    # Hint: You will need to use the string concatenation operator\n\
    \    # Hint: You will need to use the string length function\n    # Hint: You\
    \ will need to use the string indexing operator\n    # Hint: You will need to\
    \ use the string slicing operator\n    # Hint: You will need to use the string\
    \ assignment operator\n    # Hint: You will need to use the string comparison\
    \ operator\n    # Hint: You will need to use the string concatenation operator\n\
    \    # Hint: You will need to use the string length function\n    # Hint: You\
    \ will need to use the string indexing operator\n    # Hint: You will need to\
    \ use the string slicing operator\n    # Hint: You will need to use the string\
    \ assignment operator\n    # Hint: You will\n}\n\ncandidate() {\n    encrypt \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[\
    \ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") =\
    \ \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8x33yrho.sh: line 52: syntax error near unexpected token `}''

    /tmp/tmp8x33yrho.sh: line 52: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    echo $1 | tr 'a-z' 'c-za-b'\n}\n\ncandidate() {\n    encrypt \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[\
    \ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") =\
    \ \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: implement this\
    \ function\n    # Hint: use the ord and chr functions\n    # Hint: use the modulo\
    \ operator\n    # Hint: use the range operator\n    # Hint: use the map function\n\
    \    # Hint: use the join function\n    # Hint: use the range operator\n    #\
    \ Hint: use the map function\n    # Hint: use the join function\n    # Hint: use\
    \ the range operator\n    # Hint: use the map function\n    # Hint: use the join\
    \ function\n    # Hint: use the range operator\n    # Hint: use the map function\n\
    \    # Hint: use the join function\n    # Hint: use the range operator\n    #\
    \ Hint: use the map function\n    # Hint: use the join function\n    # Hint: use\
    \ the range operator\n    # Hint: use the map function\n    # Hint: use the join\
    \ function\n    # Hint: use the range operator\n    # Hint: use the map function\n\
    \    # Hint: use the join function\n    # Hint: use the range operator\n    #\
    \ Hint: use the map function\n    # Hint: use the join function\n    # Hint: use\
    \ the range operator\n    # Hint: use the map function\n    # Hint: use the join\
    \ function\n    # Hint: use the range operator\n    # Hint: use the map function\n\
    \    # Hint: use the join function\n    # Hint: use the range operator\n    #\
    \ Hint: use the map function\n    # Hint: use the join function\n    # Hint: use\
    \ the range operator\n    # Hint: use the map function\n    # Hint: use the join\
    \ function\n    # Hint: use the range operator\n    # Hint: use the map function\n\
    \    # Hint: use the join function\n    # Hint: use the range operator\n    #\
    \ Hint: use the map function\n    # Hint: use the join function\n    # Hint: use\
    \ the range operator\n    # Hint: use the map function\n    # Hint: use the join\
    \ function\n    # Hint: use the range operator\n    # Hint: use the map function\n\
    \    # Hint: use the join\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\"\
    ) = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate\
    \ \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\"\
    \ ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppi317hjg.sh: line 69: syntax error near unexpected token `}''

    /tmp/tmppi317hjg.sh: line 69: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"\
    ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate \"\
    et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n\
    \    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4yhaq9mm.sh: line 19: syntax error near unexpected token `}''

    /tmp/tmp4yhaq9mm.sh: line 19: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    # Hint: You can use the modulo operator to wrap around the alphabet\n\
    \    # Hint: You can use the ord() and chr() functions to convert between\n  \
    \  #       characters and their ASCII values\n    # Hint: You can use the string\
    \ concatenation operator to join strings\n    #       together\n    # Hint: You\
    \ can use the string length operator to get the length of a\n    #       string\n\
    \    # Hint: You can use the string index operator to get the character at\n \
    \   #       a certain index of a string\n    # Hint: You can use the string slice\
    \ operator to get a substring of a\n    #       string\n    # Hint: You can use\
    \ the string replace operator to replace a substring\n    #       of a string\
    \ with another substring\n    # Hint: You can use the string to lowercase operator\
    \ to convert a\n    #       string to lowercase\n    # Hint: You can use the string\
    \ to uppercase operator to convert a\n    #       string to uppercase\n    # Hint:\
    \ You can use the string to titlecase operator to convert a\n    #       string\
    \ to titlecase\n    # Hint: You can use the string to swapcase operator to convert\
    \ a\n    #       string to swapcase\n    # Hint: You can use the string to center\
    \ operator to center a string\n    #       within a certain width\n    # Hint:\
    \ You can use the string to ljust operator to left-justify a\n    #       string\
    \ within a certain width\n    # Hint: You can use the string to rjust operator\
    \ to right-justify a\n    #       string within a certain width\n    # Hint: You\
    \ can use the string to zfill operator to zero-fill a\n    #       string within\
    \ a certain width\n    # Hint: You can use the string to partition operator to\
    \ partition a\n    #       string around a certain substring\n    # Hint: You\
    \ can use the string to rpartition operator to partition a\n    #       string\
    \ around a certain substring, starting from the right\n    # Hint: You can use\
    \ the string to split operator to split a string\n    #       around a certain\
    \ substring\n    # Hint: You can use the string to rsplit operator to split a\n\
    }\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n\
    \    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n\
    \    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[ $(candidate\
    \ \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0ttl86gs.sh: line 55: syntax error near unexpected token `}''

    /tmp/tmp0ttl86gs.sh: line 55: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n    # Hint: You can use the ord and chr functions to convert between\n\
    \    # ASCII values and characters\n    # Hint: You can use the modulo operator\
    \ to wrap around the alphabet\n    # Hint: You can use the echo -n command to\
    \ print without a newline\n    # Hint: You can use the tr command to replace characters\n\
    \    # Hint: You can use the fold command to wrap lines\n    # Hint: You can use\
    \ the rev command to reverse a string\n    # Hint: You can use the head command\
    \ to get the first character\n    # Hint: You can use the tail command to get\
    \ all but the first character\n    # Hint: You can use the wc command to count\
    \ the number of characters\n    # Hint: You can use the seq command to generate\
    \ a sequence of numbers\n    # Hint: You can use the paste command to combine\
    \ two strings\n    # Hint: You can use the tr command to delete characters\n \
    \   # Hint: You can use the sort command to sort characters\n    # Hint: You can\
    \ use the uniq command to remove duplicates\n    # Hint: You can use the sed command\
    \ to replace characters\n    # Hint: You can use the cut command to get a substring\n\
    \    # Hint: You can use the rev command to reverse a string\n    # Hint: You\
    \ can use the rev command to reverse a string\n    # Hint: You can use the rev\
    \ command to reverse a string\n    # Hint: You can use the rev command to reverse\
    \ a string\n    # Hint: You can use the rev command to reverse a string\n    #\
    \ Hint: You can use the rev command to reverse a string\n    # Hint: You can use\
    \ the rev command to reverse a string\n    # Hint: You can use the rev command\
    \ to reverse a string\n    # Hint: You can use the rev command to reverse a string\n\
    \    # Hint: You can use the rev command to reverse a string\n    # Hint: You\
    \ can use the rev command to reverse a string\n    # Hint: You can use the rev\
    \ command to reverse a string\n    # Hint: You can use the rev command to reverse\
    \ a string\n    # Hint: You can use the rev command to reverse a string\n\n}\n\
    \ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n\
    \    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n\
    \    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[ $(candidate\
    \ \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp929n9okd.sh: line 51: syntax error near unexpected token `}''

    /tmp/tmp929n9okd.sh: line 51: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n    echo \"TODO\"\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n    # Hint: You can use the modulo operator to wrap around the alphabet.\n\
    \    # Hint: You can use the ord() and chr() functions to convert between\n  \
    \  #       characters and their ASCII values.\n    # Hint: You can use the echo\
    \ -n command to print without a newline.\n    # Hint: You can use the echo -e\
    \ command to interpret backslash escapes.\n    # Hint: You can use the tr command\
    \ to translate characters.\n    # Hint: You can use the fold command to wrap lines\
    \ at a certain length.\n    # Hint: You can use the head command to remove the\
    \ last character of a string.\n    # Hint: You can use the tail command to remove\
    \ the first character of a string.\n    # Hint: You can use the seq command to\
    \ generate a sequence of numbers.\n    # Hint: You can use the rev command to\
    \ reverse a string.\n    # Hint: You can use the sort command to sort a string.\n\
    \    # Hint: You can use the wc command to count the number of lines in a string.\n\
    \    # Hint: You can use the bc command to do basic arithmetic.\n    # Hint: You\
    \ can use the factor command to find the prime factors of a number.\n    # Hint:\
    \ You can use the factor command to find the prime factors of a number.\n    #\
    \ Hint: You can use the factor command to find the prime factors of a number.\n\
    \    # Hint: You can use the factor command to find the prime factors of a number.\n\
    \    # Hint: You can use the factor command to find the prime factors of a number.\n\
    \    # Hint: You can use the factor command to find the prime factors of a number.\n\
    \    # Hint: You can use the factor command to find the prime factors of a number.\n\
    \    # Hint: You can use the factor command to find the prime factors of a number.\n\
    \    # Hint: You can use the factor command to find the prime factors of a number.\n\
    \    # Hint: You can use the factor command to find the prime factors of a number.\n\
    \    # Hint: You can use the factor command to find the prime factors of a number.\n\
    \    # Hint: You can use\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\"\
    ) = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate\
    \ \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\"\
    \ ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp45ugi9xr.sh: line 45: syntax error near unexpected token `}''

    /tmp/tmp45ugi9xr.sh: line 45: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n    # Hint: You can use the modulo operator to wrap around the alphabet\n\
    \    # Hint: You can use the ord and chr functions to convert between characters\
    \ and their ASCII values\n    # Hint: You can use the echo -n command to print\
    \ without a newline\n    # Hint: You can use the tr command to replace characters\n\
    \    # Hint: You can use the fold command to wrap lines\n    # Hint: You can use\
    \ the tr command to remove newlines\n    # Hint: You can use the tr command to\
    \ convert to lowercase\n    # Hint: You can use the tr command to convert to uppercase\n\
    \    # Hint: You can use the tr command to delete characters\n    # Hint: You\
    \ can use the tr command to translate characters\n    # Hint: You can use the\
    \ tr command to squeeze repeated characters\n    # Hint: You can use the tr command\
    \ to complement a character set\n    # Hint: You can use the tr command to split\
    \ a string into characters\n    # Hint: You can use the tr command to join a string\
    \ into characters\n    # Hint: You can use the tr command to truncate a string\n\
    \    # Hint: You can use the tr command to pad a string\n    # Hint: You can use\
    \ the tr command to count characters\n    # Hint: You can use the tr command to\
    \ count words\n    # Hint: You can use the tr command to count lines\n    # Hint:\
    \ You can use the tr command to count bytes\n    # Hint: You can use the tr command\
    \ to count characters in words\n    # Hint: You can use the tr command to count\
    \ characters in lines\n    # Hint: You can use the tr command to count characters\
    \ in bytes\n    # Hint: You can use the tr command to count words in lines\n \
    \   # Hint: You can use the tr command to count words in bytes\n    # Hint: You\
    \ can use the tr command to count lines in bytes\n    # Hint: You can use the\
    \ tr command to count characters in words in lines\n    # Hint: You can use the\
    \ tr command to count characters in words in bytes\n    # Hint: You can use the\
    \ tr command to count characters in lines in bytes\n    # Hint: You can use\n\
    }\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n\
    \    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n\
    \    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[ $(candidate\
    \ \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9_fdity0.sh: line 49: syntax error near unexpected token `}''

    /tmp/tmp9_fdity0.sh: line 49: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    # Hint: You can use the modulo operator to wrap around the alphabet\n\
    \    # Hint: You can use the ord and chr functions to convert between characters\
    \ and their ASCII values\n    # Hint: You can use the built-in echo command to\
    \ print a string\n    # Hint: You can use the built-in read command to read a\
    \ string\n    # Hint: You can use the built-in expr command to do arithmetic\n\
    \    # Hint: You can use the built-in seq command to generate a sequence of numbers\n\
    \    # Hint: You can use the built-in tr command to translate characters\n   \
    \ # Hint: You can use the built-in bc command to do floating point arithmetic\n\
    \    # Hint: You can use the built-in printf command to format a string\n    #\
    \ Hint: You can use the built-in read command to read a string\n    # Hint: You\
    \ can use the built-in expr command to do arithmetic\n    # Hint: You can use\
    \ the built-in seq command to generate a sequence of numbers\n    # Hint: You\
    \ can use the built-in tr command to translate characters\n    # Hint: You can\
    \ use the built-in bc command to do floating point arithmetic\n    # Hint: You\
    \ can use the built-in printf command to format a string\n    # Hint: You can\
    \ use the built-in read command to read a string\n    # Hint: You can use the\
    \ built-in expr command to do arithmetic\n    # Hint: You can use the built-in\
    \ seq command to generate a sequence of numbers\n    # Hint: You can use the built-in\
    \ tr command to translate characters\n    # Hint: You can use the built-in bc\
    \ command to do floating point arithmetic\n    # Hint: You can use the built-in\
    \ printf command to format a string\n    # Hint: You can use the built-in read\
    \ command to read a string\n    # Hint: You can use the built-in expr command\
    \ to do arithmetic\n    # Hint: You can use the built-in seq command to generate\
    \ a sequence of numbers\n    # Hint: You can use the built-in tr command to translate\
    \ characters\n    # Hint: You can use the built-in bc command to do floating point\
    \ arithmetic\n   \n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\"\
    ) = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate\
    \ \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\"\
    \ ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmper93rnge.sh: line 46: syntax error near unexpected token `}''

    /tmp/tmper93rnge.sh: line 46: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: implement this\
    \ function\n    echo $1\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\"\
    ) = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate\
    \ \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\"\
    \ ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    # Hint: You can use the ord and chr functions to convert between\n\
    \    # ASCII and characters.\n    # ord takes a character and returns the ASCII\
    \ value\n    # chr takes an ASCII value and returns the character\n    #\n   \
    \ # Example:\n    # >>> ord \"a\"\n    # 97\n    # >>> chr 97\n    # \"a\"\n \
    \   #\n    # You can also use the builtin function echo to print a string\n  \
    \  # to stdout.\n    # Example:\n    # >>> echo \"hello\"\n    # hello\n    #\n\
    \    # You can use the builtin function expr to do arithmetic\n    # Example:\n\
    \    # >>> expr 1 + 1\n    # 2\n    # >>> expr 2 \\* 2\n    # 4\n    #\n    #\
    \ You can use the builtin function read to read a line of input\n    # from stdin.\n\
    \    # Example:\n    # >>> read -r line\n    # hello\n    # >>> echo $line\n \
    \   # hello\n    #\n    # You can use the builtin function printf to print a formatted\n\
    \    # string to stdout.\n    # Example:\n    # >>> printf \"hello %s\\n\" \"\
    world\"\n    # hello world\n    #\n    # You can use the builtin function seq\
    \ to generate a sequence of\n    # numbers.\n    # Example:\n    # >>> seq 1 5\n\
    \    # 1\n    # 2\n    # 3\n    # 4\n    # 5\n    #\n    # You can use the builtin\
    \ function tr to translate characters.\n    # Example:\n    # >>> echo \"hello\"\
    \ | tr \"e\" \"a\"\n    # hallo\n    #\n    # You can use the builtin function\
    \ wc to count the number of lines\n    # in a file.\n    # Example:\n    # >>>\
    \ echo \"hello\" > test.txt\n    # >>> wc -l test.txt\n    # 1 test.txt\n    #\n\
    \    # You can use the builtin function sort to sort lines in a file.\n    # Example:\n\
    \    # >>> echo \"hello\" > test.txt\n    # >>> echo \"world\" >> test.txt\n \
    \   # >>> sort test.txt\n    #\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpb0vuio19.sh: line 85: syntax error near unexpected token `}''

    /tmp/tmpb0vuio19.sh: line 85: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n    # Hint: You can use the modulo operator to wrap around the alphabet\n\
    \    # Hint: You can use the ord() and chr() functions to convert between\n  \
    \  #       characters and ASCII values\n    # Hint: You can use the echo -n command\
    \ to print without a newline\n    # Hint: You can use the tr command to translate\
    \ characters\n    # Hint: You can use the seq command to generate a sequence of\
    \ numbers\n    # Hint: You can use the paste command to merge two files together\n\
    \    # Hint: You can use the fold command to wrap lines of text\n    # Hint: You\
    \ can use the head command to get the first line of a file\n    # Hint: You can\
    \ use the tail command to get all but the first line of a file\n    # Hint: You\
    \ can use the tr command to delete characters\n    # Hint: You can use the tr\
    \ command to squeeze repeated characters\n    # Hint: You can use the tr command\
    \ to translate characters\n    # Hint: You can use the tr command to delete characters\n\
    \    # Hint: You can use the tr command to squeeze repeated characters\n    #\
    \ Hint: You can use the tr command to translate characters\n    # Hint: You can\
    \ use the tr command to delete characters\n    # Hint: You can use the tr command\
    \ to squeeze repeated characters\n    # Hint: You can use the tr command to translate\
    \ characters\n    # Hint: You can use the tr command to delete characters\n  \
    \  # Hint: You can use the tr command to squeeze repeated characters\n    # Hint:\
    \ You can use the tr command to translate characters\n    # Hint: You can use\
    \ the tr command to delete characters\n    # Hint: You can use the tr command\
    \ to squeeze repeated characters\n    # Hint: You can use the tr command to translate\
    \ characters\n    # Hint: You can use the tr command to delete characters\n  \
    \  # Hint: You can use the tr command to squeeze repeated characters\n    # Hint:\
    \ You can use the tr command to translate characters\n    # Hint: You can use\
    \ the tr command to delete characters\n    # Hint: You can use the tr command\
    \ to squeeze repeated characters\n    # Hint: You can use the tr command to translate\
    \ characters\n    # Hint\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\"\
    ) = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate\
    \ \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\"\
    \ ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1ejt8o7l.sh: line 51: syntax error near unexpected token `}''

    /tmp/tmp1ejt8o7l.sh: line 51: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: implement this\
    \ function\n    # Hint: use the tr command\n    echo $1 | tr 'a-z' 'c-za-b'\n\
    }\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n\
    \    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n\
    \    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[ $(candidate\
    \ \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n    # Hint: You can use the tr command to translate characters\n\
    \    #       in a string.\n    #       For example:\n    #       $ echo \"hello\"\
    \ | tr 'a-z' 'b-za'\n    #       \"ifmmp\"\n    #       $ echo \"hello\" | tr\
    \ 'a-z' 'c-za-b'\n    #       \"jgnnq\"\n    #       $ echo \"hello\" | tr 'a-z'\
    \ 'd-za-c'\n    #       \"khoor\"\n    #       $ echo \"hello\" | tr 'a-z' 'e-za-d'\n\
    \    #       \"lipps\"\n    #       $ echo \"hello\" | tr 'a-z' 'f-za-e'\n   \
    \ #       \"mjqqt\"\n    #       $ echo \"hello\" | tr 'a-z' 'g-za-f'\n    # \
    \      \"nkrru\"\n    #       $ echo \"hello\" | tr 'a-z' 'h-za-g'\n    #    \
    \   \"olssv\"\n    #       $ echo \"hello\" | tr 'a-z' 'i-za-h'\n    #       \"\
    pmttw\"\n    #       $ echo \"hello\" | tr 'a-z' 'j-za-i'\n    #       \"qnuux\"\
    \n    #       $ echo \"hello\" | tr 'a-z' 'k-za-j'\n    #       \"rovvy\"\n  \
    \  #       $ echo \"hello\" | tr 'a-z' 'l-za-k'\n    #       \"spwwz\"\n    #\
    \       $ echo \"hello\" | tr 'a-z' 'm-za-l'\n    #       \"tqxxa\"\n    #   \
    \    $ echo \"hello\" | tr 'a-z' 'n-za-m'\n    #       \"uryyb\"\n    #      \
    \ $ echo \"hello\" | tr 'a-z' 'o-za-n'\n    #       \"vszzc\"\n    #       $ echo\
    \ \"hello\" | tr 'a-z' 'p-za-o'\n    #\n}\n\ncandidate() {\n    encrypt \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpg5ve856l.sh: line 52: syntax error near unexpected token `}''

    /tmp/tmpg5ve856l.sh: line 52: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n    # Hint: You can use the modulo operator to wrap around the alphabet.\n\
    \    # Hint: You can use the ord() and chr() functions to convert between\n  \
    \  #       ASCII characters and their integer values.\n    # Hint: You can use\
    \ the expr command to do arithmetic.\n    # Hint: You can use the tr command to\
    \ translate characters.\n    #       For example, tr 'a-z' 'b-za' will translate\
    \ all lowercase\n    #       letters to the next letter in the alphabet.\n   \
    \ # Hint: You can use the echo command to return a string.\n    # Hint: You can\
    \ use the $1 variable to access the argument.\n    # Hint: You can use the return\
    \ command to return a value.\n    # Hint: You can use the $? variable to access\
    \ the return value.\n    # Hint: You can use the $# variable to access the number\
    \ of arguments.\n    # Hint: You can use the $@ variable to access all the arguments.\n\
    \    # Hint: You can use the $0 variable to access the name of the script.\n \
    \   # Hint: You can use the $# variable to access the number of arguments.\n \
    \   # Hint: You can use the $@ variable to access all the arguments.\n    # Hint:\
    \ You can use the $0 variable to access the name of the script.\n    # Hint: You\
    \ can use the $# variable to access the number of arguments.\n    # Hint: You\
    \ can use the $@ variable to access all the arguments.\n    # Hint: You can use\
    \ the $0 variable to access the name of the script.\n    # Hint: You can use the\
    \ $# variable to access the number of arguments.\n    # Hint: You can use the\
    \ $@ variable to access all the arguments.\n    # Hint: You can use the $0 variable\
    \ to access the name of the script.\n    # Hint: You can use the $# variable to\
    \ access the number of arguments.\n    # Hint: You can use the $@ variable to\
    \ access all the arguments.\n    # Hint: You can use the $0 variable to access\
    \ the name of the script.\n    # Hint: You can use the $# variable\n}\n\ncandidate()\
    \ {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\"\
    ) = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate\
    \ \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate\
    \ \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\"\
    ) = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpeij319ka.sh: line 46: syntax error near unexpected token `}''

    /tmp/tmpeij319ka.sh: line 46: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n    echo \"TODO\"\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Your code here\n\
    \    echo \"$1\"\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\"\
    ) = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate\
    \ \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\"\
    \ ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    echo \"TODO\"\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    # Hint: You can use the ord and chr functions to convert between\n\
    \    # ASCII characters and their integer representations.\n    # ord takes a\
    \ character and returns its integer representation\n    # chr takes an integer\
    \ and returns its character representation\n    #\n    # Example:\n    # >>> ord\
    \ \"a\"\n    # 97\n    # >>> chr 97\n    # \"a\"\n    # >>> ord \"b\"\n    # 98\n\
    \    # >>> chr 98\n    # \"b\"\n    # >>> ord \"c\"\n    # 99\n    # >>> chr 99\n\
    \    # \"c\"\n    # >>> ord \"d\"\n    # 100\n    # >>> chr 100\n    # \"d\"\n\
    \    # >>> ord \"e\"\n    # 101\n    # >>> chr 101\n    # \"e\"\n    # >>> ord\
    \ \"f\"\n    # 102\n    # >>> chr 102\n    # \"f\"\n    # >>> ord \"g\"\n    #\
    \ 103\n    # >>> chr 103\n    # \"g\"\n    # >>> ord \"h\"\n    # 104\n    # >>>\
    \ chr 104\n    # \"h\"\n    # >>> ord \"i\"\n    # 105\n    # >>> chr 105\n  \
    \  # \"i\"\n    # >>> ord \"j\"\n    # 106\n    # >>> chr 106\n    # \"j\"\n \
    \   # >>> ord \"k\"\n    # 107\n    # >>> chr 107\n    # \"k\"\n    # >>> ord\
    \ \"l\"\n    # 108\n    # >>> chr 108\n    # \"l\"\n    # >>> ord \"m\"\n    #\
    \ 109\n    # >>> chr 109\n    # \"m\"\n    # >>> ord \"n\"\n    # 110\n    # >>>\
    \ chr 110\n    # \"n\"\n    # >>> ord \"o\"\n    # 111\n    # >>> chr 111\n  \
    \  # \"o\"\n    # >>> ord \"p\"\n    # 112\n    # >>> chr 112\n    # \"p\"\n \
    \   # >>> ord \"q\"\n    # 113\n    # >>> chr 113\n    # \"q\"\n    # >>> ord\
    \ \"r\"\n    # 114\n    # >>> ch\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdk4fjhab.sh: line 96: syntax error near unexpected token `}''

    /tmp/tmpdk4fjhab.sh: line 96: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n    # Hint: You can use the modulo operator to wrap around the alphabet.\n\
    \    # Hint: You can use the ord() function to get the ASCII value of a character.\n\
    \    # Hint: You can use the chr() function to get the character from an ASCII\
    \ value.\n    # Hint: You can use the echo command to print a string.\n    # Hint:\
    \ You can use the tr command to translate characters.\n    # Hint: You can use\
    \ the expr command to evaluate expressions.\n    # Hint: You can use the bc command\
    \ to evaluate expressions.\n    # Hint: You can use the printf command to format\
    \ a string.\n    # Hint: You can use the seq command to generate a sequence of\
    \ numbers.\n    # Hint: You can use the fold command to fold a string into multiple\
    \ lines.\n    # Hint: You can use the rev command to reverse a string.\n    #\
    \ Hint: You can use the sort command to sort a string.\n    # Hint: You can use\
    \ the uniq command to remove duplicate characters from a string.\n    # Hint:\
    \ You can use the wc command to count the number of lines, words, and bytes.\n\
    \    # Hint: You can use the head command to get the first part of a string.\n\
    \    # Hint: You can use the tail command to get the last part of a string.\n\
    \    # Hint: You can use the cut command to get a substring.\n    # Hint: You\
    \ can use the tr command to delete characters.\n    # Hint: You can use the tr\
    \ command to squeeze repeated characters.\n    # Hint: You can use the tr command\
    \ to translate characters.\n    # Hint: You can use the tr command to complement\
    \ a set of characters.\n    # Hint: You can use the tr command to translate characters.\n\
    \    # Hint: You can use the tr command to translate characters.\n    # Hint:\
    \ You can use the tr command to translate characters.\n    # Hint: You can use\
    \ the tr command to translate characters.\n    # Hint: You can use the tr command\
    \ to translate characters.\n    # Hint: You can use the tr command to translate\
    \ characters.\n    # Hint: You can use the tr command to\n}\n\ncandidate() {\n\
    \    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"\
    lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate\
    \ \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate\
    \ \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\"\
    ) = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3seuinv5.sh: line 47: syntax error near unexpected token `}''

    /tmp/tmp3seuinv5.sh: line 47: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: implement this\
    \ function\n    # Hint: use the tr command\n    # Hint: use the echo command\n\
    \    # Hint: use the seq command\n    # Hint: use the rev command\n    # Hint:\
    \ use the rev command\n    # Hint: use the rev command\n    # Hint: use the rev\
    \ command\n    # Hint: use the rev command\n    # Hint: use the rev command\n\
    \    # Hint: use the rev command\n    # Hint: use the rev command\n    # Hint:\
    \ use the rev command\n    # Hint: use the rev command\n    # Hint: use the rev\
    \ command\n    # Hint: use the rev command\n    # Hint: use the rev command\n\
    \    # Hint: use the rev command\n    # Hint: use the rev command\n    # Hint:\
    \ use the rev command\n    # Hint: use the rev command\n    # Hint: use the rev\
    \ command\n    # Hint: use the rev command\n    # Hint: use the rev command\n\
    \    # Hint: use the rev command\n    # Hint: use the rev command\n    # Hint:\
    \ use the rev command\n    # Hint: use the rev command\n    # Hint: use the rev\
    \ command\n    # Hint: use the rev command\n    # Hint: use the rev command\n\
    \    # Hint: use the rev command\n    # Hint: use the rev command\n    # Hint:\
    \ use the rev command\n    # Hint: use the rev command\n    # Hint: use the rev\
    \ command\n    # Hint: use the rev command\n    # Hint: use the rev command\n\
    \    # Hint: use the rev command\n    # Hint: use the rev command\n    # Hint:\
    \ use the rev command\n    # Hint: use the rev command\n    # Hint: use the rev\
    \ command\n    # Hint: use the rev command\n    # Hint: use the rev command\n\
    \    # Hint: use the rev command\n    # Hint: use the rev command\n    # Hint:\
    \ use the rev command\n    # Hint: use the rev command\n    # Hint: use the rev\
    \ command\n    # Hint: use the rev command\n    #\n}\n\ncandidate() {\n    encrypt\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n\
    \    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\"\
    ) = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqrzw7ie0.sh: line 70: syntax error near unexpected token `}''

    /tmp/tmpqrzw7ie0.sh: line 70: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    # HINT: You can use the ord and chr functions to convert between\n\
    \    # ASCII values and characters.\n    # HINT: You can use the modulo operator\
    \ to wrap around the alphabet.\n    # HINT: You can use the echo command to return\
    \ a value.\n    # HINT: You can use the seq command to generate a sequence of\
    \ numbers.\n    # HINT: You can use the tr command to translate characters.\n\
    \    # HINT: You can use the fold command to wrap long lines.\n    # HINT: You\
    \ can use the rev command to reverse a string.\n    # HINT: You can use the sort\
    \ command to sort a string.\n    # HINT: You can use the uniq command to remove\
    \ duplicates from a string.\n    # HINT: You can use the wc command to count characters\
    \ in a string.\n    # HINT: You can use the bc command to do math.\n    # HINT:\
    \ You can use the head command to get the first line of a string.\n    # HINT:\
    \ You can use the tail command to get everything but the first line of a string.\n\
    \    # HINT: You can use the cut command to get a substring.\n    # HINT: You\
    \ can use the tr command to translate characters.\n    # HINT: You can use the\
    \ rev command to reverse a string.\n    # HINT: You can use the sort command to\
    \ sort a string.\n    # HINT: You can use the uniq command to remove duplicates\
    \ from a string.\n    # HINT: You can use the wc command to count characters in\
    \ a string.\n    # HINT: You can use the bc command to do math.\n    # HINT: You\
    \ can use the head command to get the first line of a string.\n    # HINT: You\
    \ can use the tail command to get everything but the first line of a string.\n\
    \    # HINT: You can use the cut command to get a substring.\n    # HINT: You\
    \ can use the tr command to translate characters.\n    # HINT: You can use the\
    \ rev command to reverse a string.\n    # HINT: You can use the sort command to\
    \ sort a string.\n    # HINT: You can use the uniq command to remove duplicates\n\
    }\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n\
    \    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n\
    \    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[ $(candidate\
    \ \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmps9tpjt0z.sh: line 47: syntax error near unexpected token `}''

    /tmp/tmps9tpjt0z.sh: line 47: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n    echo \"hi\"\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: implement this\
    \ function\n    echo \"Not yet implemented\"\n}\n\ncandidate() {\n    encrypt\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n\
    \    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\"\
    ) = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    echo \"Not yet implemented\"\n}\n\ncandidate() {\n    encrypt\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n\
    \    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\"\
    ) = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    echo $1 | tr 'a-z'\
    \ 'c-za-b'\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"\
    ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate \"\
    et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n\
    \    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    # Hint: You may want to use the ord and chr functions\n    # Hint:\
    \ You may want to use the % operator\n    # Hint: You may want to use the $# variable\n\
    \    # Hint: You may want to use the $1 variable\n    # Hint: You may want to\
    \ use the $@ variable\n    # Hint: You may want to use the $* variable\n    #\
    \ Hint: You may want to use the $0 variable\n    # Hint: You may want to use the\
    \ $? variable\n    # Hint: You may want to use the $! variable\n    # Hint: You\
    \ may want to use the $- variable\n    # Hint: You may want to use the $$ variable\n\
    \    # Hint: You may want to use the $(( )) variable\n    # Hint: You may want\
    \ to use the $[ ] variable\n    # Hint: You may want to use the ${ } variable\n\
    \    # Hint: You may want to use the $(( )) variable\n    # Hint: You may want\
    \ to use the $[ ] variable\n    # Hint: You may want to use the ${ } variable\n\
    \    # Hint: You may want to use the $(( )) variable\n    # Hint: You may want\
    \ to use the $[ ] variable\n    # Hint: You may want to use the ${ } variable\n\
    \    # Hint: You may want to use the $(( )) variable\n    # Hint: You may want\
    \ to use the $[ ] variable\n    # Hint: You may want to use the ${ } variable\n\
    \    # Hint: You may want to use the $(( )) variable\n    # Hint: You may want\
    \ to use the $[ ] variable\n    # Hint: You may want to use the ${ } variable\n\
    \    # Hint: You may want to use the $(( )) variable\n    # Hint: You may want\
    \ to use the $[ ] variable\n    # Hint: You may want to use the ${ } variable\n\
    \    # Hint: You may want to use the $(( )) variable\n    # Hint: You may want\
    \ to use the $[ ] variable\n    # Hint: You may want to use the ${ } variable\n\
    \    # Hint: You may want\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\"\
    ) = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate\
    \ \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\"\
    \ ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmplj4sz4ga.sh: line 52: syntax error near unexpected token `}''

    /tmp/tmplj4sz4ga.sh: line 52: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: implement this\
    \ function\n    echo $1\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\"\
    ) = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate\
    \ \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\"\
    \ ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: implement this\
    \ function\n    # Hint: use the ord and chr functions\n    # Hint: use the modulo\
    \ operator\n    # Hint: use the range function\n    # Hint: use the join function\n\
    \    # Hint: use the map function\n    # Hint: use the zip function\n    # Hint:\
    \ use the enumerate function\n    # Hint: use the filter function\n    # Hint:\
    \ use the reduce function\n    # Hint: use the sorted function\n    # Hint: use\
    \ the reversed function\n    # Hint: use the sum function\n    # Hint: use the\
    \ all function\n    # Hint: use the any function\n    # Hint: use the max function\n\
    \    # Hint: use the min function\n    # Hint: use the abs function\n    # Hint:\
    \ use the pow function\n    # Hint: use the round function\n    # Hint: use the\
    \ len function\n    # Hint: use the str function\n    # Hint: use the int function\n\
    \    # Hint: use the float function\n    # Hint: use the bin function\n    # Hint:\
    \ use the hex function\n    # Hint: use the oct function\n    # Hint: use the\
    \ ord function\n    # Hint: use the chr function\n    # Hint: use the divmod function\n\
    \    # Hint: use the complex function\n    # Hint: use the isinstance function\n\
    \    # Hint: use the issubclass function\n    # Hint: use the hasattr function\n\
    \    # Hint: use the getattr function\n    # Hint: use the setattr function\n\
    \    # Hint: use the delattr function\n    # Hint: use the format function\n \
    \   # Hint: use the vars function\n    # Hint: use the dir function\n    # Hint:\
    \ use the locals function\n    # Hint: use the globals function\n    # Hint: use\
    \ the callable function\n    # Hint: use the help function\n    # Hint: use the\
    \ id function\n    # Hint: use the type function\n    # Hint: use the repr function\n\
    \    # Hint: use the eval function\n    # Hint: use the exec function\n    # Hint:\n\
    }\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n\
    \    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n\
    \    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[ $(candidate\
    \ \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxtv3xl_r.sh: line 68: syntax error near unexpected token `}''

    /tmp/tmpxtv3xl_r.sh: line 68: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    # Hint: You can use the ord and chr functions to convert between\n\
    \    # ASCII characters and their integer values.\n    # ord <char> returns the\
    \ ASCII value of <char>\n    # chr <int> returns the ASCII character of <int>\n\
    \    #\n    # Hint: You can use the modulo operator to wrap around the alphabet\n\
    \    # if you go past the end.\n    # For example:\n    # >>> $(encrypt \"hi\"\
    )\n    # \"lm\"\n    # >>> $(encrypt \"asdfghjkl\")\n    # \"ewhjklnop\"\n   \
    \ # >>> $(encrypt \"gf\")\n    # \"kj\"\n    # >>> $(encrypt \"et\")\n    # \"\
    ix\"\n    #\n    # $1 is a string\n    #\n    # TODO: Implement this function\n\
    \    # Hint: You can use the ord and chr functions to convert between\n    # ASCII\
    \ characters and their integer values.\n    # ord <char> returns the ASCII value\
    \ of <char>\n    # chr <int> returns the ASCII character of <int>\n    #\n   \
    \ # Hint: You can use the modulo operator to wrap around the alphabet\n    # if\
    \ you go past the end.\n    # For example:\n    # >>> $(encrypt \"hi\")\n    #\
    \ \"lm\"\n    # >>> $(encrypt \"asdfghjkl\")\n    # \"ewhjklnop\"\n    # >>> $(encrypt\
    \ \"gf\")\n    # \"kj\"\n    # >>> $(encrypt \"et\")\n    # \"ix\"\n    #\n  \
    \  # $1 is a string\n    #\n    # TODO: Implement this function\n    # Hint: You\
    \ can use the ord and chr functions to convert between\n    # ASCII characters\
    \ and their integer values.\n    # ord <char> returns the ASCII value of <char>\n\
    \    # chr <int> returns the ASCII character of <int>\n    #\n    # Hint: You\
    \ can use the modulo operator to wrap around the alphabet\n    # if you go past\
    \ the end.\n    # For example:\n    # >>> $(encrypt \"hi\")\n    # \"lm\"\n  \
    \ \n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\"\
    \ ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"\
    ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[\
    \ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmplhsovz_x.sh: line 70: syntax error near unexpected token `}''

    /tmp/tmplhsovz_x.sh: line 70: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Your code here\n\
    \    # Hint: You may want to use the ord and chr functions\n    # ord takes a\
    \ character and returns its ASCII value\n    # chr takes an ASCII value and returns\
    \ its character\n    #\n    # Example:\n    # >>> $(ord \"a\")\n    # 97\n   \
    \ # >>> $(chr 97)\n    # \"a\"\n    #\n    # You may also want to use the modulo\
    \ operator %\n    # Example:\n    # >>> $(expr 5 % 2)\n    # 1\n    # >>> $(expr\
    \ 6 % 2)\n    # 0\n    #\n    # You may also want to use the expr function\n \
    \   # Example:\n    # >>> $(expr 5 + 2)\n    # 7\n    # >>> $(expr 5 \\* 2)\n\
    \    # 10\n    #\n    # You may also want to use the bc command\n    # Example:\n\
    \    # >>> $(echo \"5 + 2\" | bc)\n    # 7\n    # >>> $(echo \"5 * 2\" | bc)\n\
    \    # 10\n    # >>> $(echo \"5 / 2\" | bc)\n    # 2.5\n    # >>> $(echo \"5 %\
    \ 2\" | bc)\n    # 1\n    #\n    # You may also want to use the tr command\n \
    \   # Example:\n    # >>> $(echo \"hello\" | tr \"a-z\" \"b-za\")\n    # \"ifmmp\"\
    \n    # >>> $(echo \"hello\" | tr \"a-z\" \"b-za\" | tr \"a-z\" \"b-za\")\n  \
    \  # \"jgnnq\"\n    # >>> $(echo \"hello\" | tr \"a-z\" \"b-za\" | tr \"a-z\"\
    \ \"b-za\" | tr \"a-z\" \"b-za\")\n    # \"khoor\"\n    # >>> $(echo \"hello\"\
    \ | tr \"a-z\" \"b-za\" | tr \"a-z\" \"b-za\" | tr \"a-z\" \"b-za\" | tr \"a-z\"\
    \ \"b-za\")\n    # \"lipps\"\n    # >>> $(echo \"hello\" | tr \"a-z\" \"b-za\"\
    \ | tr \"\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"\
    ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate \"\
    et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n\
    \    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_15omj38.sh: line 65: syntax error near unexpected token `}''

    /tmp/tmp_15omj38.sh: line 65: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n    # Hint: You can use the modulo operator to loop around the alphabet\n\
    \    # Hint: You can use the ord and chr functions to convert between\n    # \
    \      characters and their ASCII values\n    # Hint: You can use the tr command\
    \ to translate characters\n    # Hint: You can use the echo command to print a\
    \ string\n    # Hint: You can use the $1 variable to access the first argument\n\
    \    #       passed to the function\n    # Hint: You can use the return command\
    \ to return a value\n    # Hint: You can use the $RANDOM variable to generate\
    \ a random number\n    # Hint: You can use the expr command to perform arithmetic\n\
    \    # Hint: You can use the seq command to generate a sequence of numbers\n \
    \   # Hint: You can use the wc command to count the number of lines in a file\n\
    \    # Hint: You can use the head command to get the first line of a file\n  \
    \  # Hint: You can use the tail command to get all but the first line of a file\n\
    \    # Hint: You can use the sort command to sort lines of a file\n    # Hint:\
    \ You can use the uniq command to remove duplicate lines from a file\n    # Hint:\
    \ You can use the cut command to get a specific column from a file\n    # Hint:\
    \ You can use the tr command to translate characters\n    # Hint: You can use\
    \ the tr command to translate characters\n    # Hint: You can use the tr command\
    \ to translate characters\n    # Hint: You can use the tr command to translate\
    \ characters\n    # Hint: You can use the tr command to translate characters\n\
    \    # Hint: You can use the tr command to translate characters\n    # Hint: You\
    \ can use the tr command to translate characters\n    # Hint: You can use the\
    \ tr command to translate characters\n    # Hint: You can use the tr command to\
    \ translate characters\n    # Hint: You can use the tr command to translate characters\n\
    \    # Hint: You can use the tr command to translate characters\n    # Hint: You\
    \ can use the tr command to translate characters\n    # Hint: You can use the\
    \ tr command to translate characters\n    # Hint: You can use the tr command to\
    \ translate\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"\
    ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate \"\
    et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n\
    \    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6dbj424x.sh: line 50: syntax error near unexpected token `}''

    /tmp/tmp6dbj424x.sh: line 50: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n    # Hint: You can use the ord and chr functions to convert between\n\
    \    #       ascii characters and their numeric values.\n    #       ord('a')\
    \ == 97\n    #       chr(97) == 'a'\n    #       ord('b') == 98\n    #       chr(98)\
    \ == 'b'\n    #       ...\n    #       ord('z') == 122\n    #       chr(122) ==\
    \ 'z'\n    #\n    #       ord('A') == 65\n    #       chr(65) == 'A'\n    #  \
    \     ord('B') == 66\n    #       chr(66) == 'B'\n    #       ...\n    #     \
    \  ord('Z') == 90\n    #       chr(90) == 'Z'\n    #\n    #       ord(' ') ==\
    \ 32\n    #       chr(32) == ' '\n    #\n    #       ord('0') == 48\n    #   \
    \    chr(48) == '0'\n    #       ord('1') == 49\n    #       chr(49) == '1'\n\
    \    #       ...\n    #       ord('9') == 57\n    #       chr(57) == '9'\n   \
    \ #\n    #       ord('!') == 33\n    #       chr(33) == '!'\n    #       ...\n\
    \    #       ord('~') == 126\n    #       chr(126) == '~'\n    #\n    #      \
    \ ord('\\n') == 10\n    #       chr(10) == '\\n'\n    #\n    #       ord('\\t')\
    \ == 9\n    #       chr(9) == '\\t'\n    #\n    #       ord('\\r') == 13\n   \
    \ #       chr(13) == '\\r'\n    #\n    #       ord('\\b') == 8\n    #       chr(8)\
    \ == '\\b'\n    #\n    #       ord('\\f') == 12\n    #       chr(12) == '\\f'\n\
    \    #\n    #       ord('\\v') == 11\n    #       chr(11) == '\n}\n\ncandidate()\
    \ {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\"\
    ) = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate\
    \ \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate\
    \ \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\"\
    ) = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpemzpn03e.sh: line 71: syntax error near unexpected token `}''

    /tmp/tmpemzpn03e.sh: line 71: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Your code here\n\
    \    # Hint: Use the tr command to translate characters\n    # The tr command\
    \ takes two arguments:\n    # tr [OPTION] SET1 [SET2]\n    #\n    # SET1 and SET2\
    \ are strings of characters.\n    # For example, tr a-z A-Z will translate all\
    \ lowercase letters to uppercase.\n    #\n    # You can use the -d option to delete\
    \ characters.\n    # For example, tr -d a-z will delete all lowercase letters.\n\
    \    #\n    # You can use the -c option to complement a set of characters.\n \
    \   # For example, tr -c a-z A-Z will translate all non-lowercase letters to uppercase.\n\
    \    #\n    # You can use the -s option to squeeze repeating characters.\n   \
    \ # For example, tr -s a-z will delete all repeating lowercase letters.\n    #\n\
    \    # You can use the -t option to truncate the SET1 string to the length of\
    \ SET2.\n    # For example, tr -t a-z A-Z will translate all lowercase letters\
    \ to uppercase,\n    # but will only translate the first 26 characters.\n    #\n\
    \    # You can use the -u option to fold upper and lowercase together.\n    #\
    \ For example, tr -u a-z will translate all lowercase letters to uppercase.\n\
    \    #\n    # You can use the -l option to translate lowercase letters.\n    #\
    \ For example, tr -l a-z will translate all lowercase letters to uppercase.\n\
    \    #\n    # You can use the -U option to translate uppercase letters.\n    #\
    \ For example, tr -U A-Z will translate all uppercase letters to lowercase.\n\
    \    #\n    # You can use the -L option to translate non-uppercase letters.\n\
    \    # For example, tr -L A-Z will translate all uppercase letters to lowercase.\n\
    \    #\n    # You can use the -C option to complement upper and lowercase letters.\n\
    \    # For example, tr -C a-z will translate all non-lowercase letters to uppercase.\n\
    \    #\n    # You can use the -T option to truncate the SET1\n}\n\ncandidate()\
    \ {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\"\
    ) = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate\
    \ \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate\
    \ \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\"\
    ) = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkug36wwd.sh: line 55: syntax error near unexpected token `}''

    /tmp/tmpkug36wwd.sh: line 55: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Your code here\n\
    \    # Hint: You can use the ord and chr functions to convert between\n    # ASCII\
    \ characters and their integer values.\n    # ord takes a character and returns\
    \ its integer value\n    # chr takes an integer and returns its character value\n\
    \    #\n    # For example:\n    # >>> $(ord \"a\")\n    # 97\n    # >>> $(chr\
    \ 97)\n    # \"a\"\n    # >>> $(ord \"b\")\n    # 98\n    # >>> $(chr 98)\n  \
    \  # \"b\"\n    # >>> $(ord \"c\")\n    # 99\n    # >>> $(chr 99)\n    # \"c\"\
    \n    # >>> $(ord \"d\")\n    # 100\n    # >>> $(chr 100)\n    # \"d\"\n    #\
    \ >>> $(ord \"e\")\n    # 101\n    # >>> $(chr 101)\n    # \"e\"\n    # >>> $(ord\
    \ \"f\")\n    # 102\n    # >>> $(chr 102)\n    # \"f\"\n    # >>> $(ord \"g\"\
    )\n    # 103\n    # >>> $(chr 103)\n    # \"g\"\n    # >>> $(ord \"h\")\n    #\
    \ 104\n    # >>> $(chr 104)\n    # \"h\"\n    # >>> $(ord \"i\")\n    # 105\n\
    \    # >>> $(chr 105)\n    # \"i\"\n    # >>> $(ord \"j\")\n    # 106\n    # >>>\
    \ $(chr 106)\n    # \"j\"\n    # >>> $(ord \"k\")\n    # 107\n    # >>> $(chr\
    \ 107)\n    # \"k\"\n    # >>> $(ord \"l\")\n    # 108\n    # >>> $(chr 108)\n\
    \    # \"l\"\n    # >>> $(ord \"m\")\n    # 109\n    # >>> $(chr 109)\n    # \"\
    m\"\n    # >>> $(ord \"n\")\n    # 110\n    # >>> $(chr 110)\n    # \"n\"\n  \
    \  # >>> $(ord \"o\")\n    # 111\n    # >>> $(chr 111)\n    # \"o\"\n    # >>>\
    \ $(ord \"p\")\n    # 112\n    # >>> $(chr 112\n}\n\ncandidate() {\n    encrypt\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n\
    \    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\"\
    ) = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp84oxkz58.sh: line 88: syntax error near unexpected token `}''

    /tmp/tmp84oxkz58.sh: line 88: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # Your code here\n\
    \    echo \"Your code here\"\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    echo $1 | tr 'a-z' 'c-za-b'\n}\n\ncandidate() {\n    encrypt \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[\
    \ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") =\
    \ \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: write your\
    \ code here\n    # Hint: use the tr command\n    echo $1 | tr 'a-z' 'c-za-b'\n\
    }\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n\
    \    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n\
    \    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[ $(candidate\
    \ \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: implement this\
    \ function\n    # Hint: use the tr command\n    # Hint: use the echo command\n\
    \    # Hint: use the $1 variable\n    # Hint: use the tr command\n    # Hint:\
    \ use the echo command\n    # Hint: use the $1 variable\n    echo $1 | tr 'a-z'\
    \ 'c-za-b'\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"\
    ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate \"\
    et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n\
    \    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011114
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: implement this\
    \ function\n    # Hint: use the tr command\n    # Hint: use the $1 variable\n\
    \    # Hint: use the echo command\n    # Hint: use the $() syntax\n    # Hint:\
    \ use the tr command\n    # Hint: use the $1 variable\n    # Hint: use the echo\
    \ command\n    # Hint: use the $() syntax\n    # Hint: use the tr command\n  \
    \  # Hint: use the $1 variable\n    # Hint: use the echo command\n    # Hint:\
    \ use the $() syntax\n    # Hint: use the tr command\n    # Hint: use the $1 variable\n\
    \    # Hint: use the echo command\n    # Hint: use the $() syntax\n    # Hint:\
    \ use the tr command\n    # Hint: use the $1 variable\n    # Hint: use the echo\
    \ command\n    # Hint: use the $() syntax\n    # Hint: use the tr command\n  \
    \  # Hint: use the $1 variable\n    # Hint: use the echo command\n    # Hint:\
    \ use the $() syntax\n    # Hint: use the tr command\n    # Hint: use the $1 variable\n\
    \    # Hint: use the echo command\n    # Hint: use the $() syntax\n    # Hint:\
    \ use the tr command\n    # Hint: use the $1 variable\n    # Hint: use the echo\
    \ command\n    # Hint: use the $() syntax\n    # Hint: use the tr command\n  \
    \  # Hint: use the $1 variable\n    # Hint: use the echo command\n    # Hint:\
    \ use the $() syntax\n    # Hint: use the tr command\n    # Hint: use the $1 variable\n\
    \    # Hint: use the echo command\n    # Hint: use the $() syntax\n    # Hint:\
    \ use the tr command\n    # Hint: use the $1 variable\n    # Hint: use the echo\
    \ command\n    # Hint: use the $() syntax\n    # Hint: use the tr command\n  \
    \  # Hint: use the $1 variable\n    # Hint: use the echo command\n    # Hint:\
    \ use the $()\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\"\
    ) = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate\
    \ \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\"\
    \ ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpa6ocsmpg.sh: line 67: syntax error near unexpected token `}''

    /tmp/tmpa6ocsmpg.sh: line 67: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n    # Hint: You can use the ord and chr bash functions to convert\
    \ between\n    # ASCII characters and their integer representations.\n    # Hint:\
    \ You can use the modulo operator to wrap around the alphabet\n    # if you reach\
    \ the end of it.\n    # Hint: You can use the echo command to return a string.\n\
    \    # Hint: You can use the bc command to do math.\n    # Hint: You can use the\
    \ tr command to do character substitution.\n    # Hint: You can use the fold command\
    \ to wrap long lines.\n    # Hint: You can use the rev command to reverse a string.\n\
    \    # Hint: You can use the sort command to sort a string.\n    # Hint: You can\
    \ use the uniq command to remove duplicate characters.\n    # Hint: You can use\
    \ the wc command to count characters.\n    # Hint: You can use the head command\
    \ to get the first character.\n    # Hint: You can use the tail command to get\
    \ the last character.\n    # Hint: You can use the cut command to get a substring.\n\
    \    # Hint: You can use the expr command to do math.\n    # Hint: You can use\
    \ the seq command to generate a sequence of numbers.\n    # Hint: You can use\
    \ the tr command to translate characters.\n    # Hint: You can use the tr command\
    \ to delete characters.\n    # Hint: You can use the tr command to squeeze characters.\n\
    \    # Hint: You can use the tr command to complement characters.\n    # Hint:\
    \ You can use the tr command to fold characters.\n    # Hint: You can use the\
    \ tr command to translate characters.\n    # Hint: You can use the tr command\
    \ to delete characters.\n    # Hint: You can use the tr command to squeeze characters.\n\
    \    # Hint: You can use the tr command to complement characters.\n    # Hint:\
    \ You can use the tr command to fold characters.\n    # Hint: You can use the\
    \ tr command to translate characters.\n    # Hint: You can use the tr command\
    \ to delete characters.\n    # Hint: You can use the tr command to squeeze characters.\n\
    \    # Hint: You can use the tr\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpyl8iddcj.sh: line 50: syntax error near unexpected token `}''

    /tmp/tmpyl8iddcj.sh: line 50: `}''

    '
  stdout: ''
  timestamp: 1660011114
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: implement this\
    \ function\n    echo \"TODO\"\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    # Hint: You may want to use the ord and chr functions\n    # ord\
    \ takes a character and returns its ASCII value\n    # chr takes an ASCII value\
    \ and returns its character\n    #\n    # Example:\n    # >>> ord \"a\"\n    #\
    \ 97\n    # >>> chr 97\n    # \"a\"\n    # >>> chr $(ord \"a\")\n    # \"a\"\n\
    \    # >>> ord $(chr 97)\n    # 97\n    # >>> ord $(chr $(ord \"a\"))\n    # 97\n\
    \    # >>> ord $(chr $(ord \"a\") + 2)\n    # 99\n    # >>> chr $(ord $(chr $(ord\
    \ \"a\") + 2))\n    # \"c\"\n    # >>> chr $(ord $(chr $(ord \"a\") + 2))\n  \
    \  # \"c\"\n    # >>> chr $(ord $(chr $(ord \"a\") + 2))\n    # \"c\"\n    # >>>\
    \ chr $(ord $(chr $(ord \"a\") + 2))\n    # \"c\"\n    # >>> chr $(ord $(chr $(ord\
    \ \"a\") + 2))\n    # \"c\"\n    # >>> chr $(ord $(chr $(ord \"a\") + 2))\n  \
    \  # \"c\"\n    # >>> chr $(ord $(chr $(ord \"a\") + 2))\n    # \"c\"\n    # >>>\
    \ chr $(ord $(chr $(ord \"a\") + 2))\n    # \"c\"\n    # >>> chr $(ord $(chr $(ord\
    \ \"a\") + 2))\n    # \"c\"\n    # >>> chr $(ord $(chr $(ord \"a\") + 2))\n  \
    \  # \"c\"\n    # >>> chr $(ord $(chr $(ord \"a\") + 2))\n    # \"c\"\n    # >>>\
    \ chr $(ord $(chr $(ord \"a\") + 2))\n    # \"c\"\n    # >>> chr $(ord $(chr $(ord\
    \ \"a\") + 2))\n    # \"c\"\n    # >>> chr $(ord $(chr $(ord \"a\") + 2))\n  \
    \  # \"c\"\n    # >>> chr $(ord $(ch\n}\n\ncandidate() {\n    encrypt \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxwfqsu1k.sh: line 65: syntax error near unexpected token `}''

    /tmp/tmpxwfqsu1k.sh: line 65: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n  # your code here\n  #\
    \ hint: use the tr command\n  # hint: use the echo command\n  # hint: use the\
    \ $1 variable\n  # hint: use the $() syntax\n  # hint: use the tr command\n  #\
    \ hint: use the echo command\n  # hint: use the $1 variable\n  # hint: use the\
    \ $() syntax\n  # hint: use the tr command\n  # hint: use the echo command\n \
    \ # hint: use the $1 variable\n  # hint: use the $() syntax\n  # hint: use the\
    \ tr command\n  # hint: use the echo command\n  # hint: use the $1 variable\n\
    \  # hint: use the $() syntax\n  # hint: use the tr command\n  # hint: use the\
    \ echo command\n  # hint: use the $1 variable\n  # hint: use the $() syntax\n\
    \  # hint: use the tr command\n  # hint: use the echo command\n  # hint: use the\
    \ $1 variable\n  # hint: use the $() syntax\n  # hint: use the tr command\n  #\
    \ hint: use the echo command\n  # hint: use the $1 variable\n  # hint: use the\
    \ $() syntax\n  # hint: use the tr command\n  # hint: use the echo command\n \
    \ # hint: use the $1 variable\n  # hint: use the $() syntax\n  # hint: use the\
    \ tr command\n  # hint: use the echo command\n  # hint: use the $1 variable\n\
    \  # hint: use the $() syntax\n  # hint: use the tr command\n  # hint: use the\
    \ echo command\n  # hint: use the $1 variable\n  # hint: use the $() syntax\n\
    \  # hint: use the tr command\n  # hint: use the echo command\n  # hint: use the\
    \ $1 variable\n  # hint: use the $() syntax\n  # hint: use the tr command\n  #\
    \ hint: use the echo command\n  # hint: use the $1 variable\n  # hint: use the\
    \ $() syntax\n  # hint: use the tr command\n  # hint: use the echo command\n \
    \ # hint: use the $1 variable\n  # hint: use the $() syntax\n  # hint: use the\
    \ tr command\n  #\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\"\
    ) = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate\
    \ \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\"\
    \ ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpuvcfxnhl.sh: line 73: syntax error near unexpected token `}''

    /tmp/tmpuvcfxnhl.sh: line 73: `}''

    '
  stdout: ''
  timestamp: 1660011114
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"\
    ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate \"\
    et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n\
    \    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5hgop38j.sh: line 19: syntax error near unexpected token `}''

    /tmp/tmp5hgop38j.sh: line 19: `}''

    '
  stdout: ''
  timestamp: 1660011114
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    echo \"Not yet implemented\"\n}\n\ncandidate() {\n    encrypt\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n\
    \    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\"\
    ) = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n\t# Get the length of the\
    \ string\n\tlength=$(echo $1 | wc -c)\n\t# Remove the newline character\n\tlength=$((length-1))\n\
    \t# Initialize the encrypted string\n\tencrypted=\"\"\n\t# Loop through each character\
    \ in the string\n\tfor (( i=1; i<=$length; i++ )); do\n\t\t# Get the character\
    \ at the index\n\t\tchar=$(echo $1 | cut -c $i)\n\t\t# Get the ASCII value of\
    \ the character\n\t\tascii=$(printf \"%d\" \"'$char\")\n\t\t# Shift the character\
    \ by two multiplied to two places\n\t\tascii=$((ascii+8))\n\t\t# If the ASCII\
    \ value is greater than 122, subtract 26\n\t\tif [ $ascii -gt 122 ]; then\n\t\t\
    \tascii=$((ascii-26))\n\t\tfi\n\t\t# Convert the ASCII value to a character\n\t\
    \tchar=$(printf \\\\$(printf '%03o' $ascii))\n\t\t# Append the character to the\
    \ encrypted string\n\t\tencrypted+=$char\n\tdone\n\t# Return the encrypted string\n\
    \techo $encrypted\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\"\
    ) = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate\
    \ \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\"\
    \ ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate\
    \ \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    # Hint: Use the tr command\n    echo $1 | tr 'a-z' 'c-za-b'\n\
    }\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n\
    \    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n\
    \    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[ $(candidate\
    \ \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: implement this\
    \ function\n    echo $1 | tr 'a-z' 'c-za-b'\n}\n\ncandidate() {\n    encrypt \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[\
    \ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") =\
    \ \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Your code here\n\
    \    # Hint: You can use the ord and chr functions to convert between\n    # ASCII\
    \ characters and their integer values.\n    # ord takes a character and returns\
    \ an integer\n    # chr takes an integer and returns a character\n    # Example:\n\
    \    # >>> ord \"a\"\n    # 97\n    # >>> chr 97\n    # \"a\"\n    # >>> ord \"\
    b\"\n    # 98\n    # >>> chr 98\n    # \"b\"\n    # >>> ord \"c\"\n    # 99\n\
    \    # >>> chr 99\n    # \"c\"\n    # >>> ord \"d\"\n    # 100\n    # >>> chr\
    \ 100\n    # \"d\"\n    # >>> ord \"e\"\n    # 101\n    # >>> chr 101\n    # \"\
    e\"\n    # >>> ord \"f\"\n    # 102\n    # >>> chr 102\n    # \"f\"\n    # >>>\
    \ ord \"g\"\n    # 103\n    # >>> chr 103\n    # \"g\"\n    # >>> ord \"h\"\n\
    \    # 104\n    # >>> chr 104\n    # \"h\"\n    # >>> ord \"i\"\n    # 105\n \
    \   # >>> chr 105\n    # \"i\"\n    # >>> ord \"j\"\n    # 106\n    # >>> chr\
    \ 106\n    # \"j\"\n    # >>> ord \"k\"\n    # 107\n    # >>> chr 107\n    # \"\
    k\"\n    # >>> ord \"l\"\n    # 108\n    # >>> chr 108\n    # \"l\"\n    # >>>\
    \ ord \"m\"\n    # 109\n    # >>> chr 109\n    # \"m\"\n    # >>> ord \"n\"\n\
    \    # 110\n    # >>> chr 110\n    # \"n\"\n    # >>> ord \"o\"\n    # 111\n \
    \   # >>> chr 111\n    # \"o\"\n    # >>> ord \"p\"\n    # 112\n    # >>> chr\
    \ 112\n    # \"p\"\n    # >>> ord \"q\"\n    # 113\n    # >>> chr 113\n    # \"\
    q\"\n    # >>> ord \"r\"\n    # 114\n    # >>> chr 114\n    #\n}\n\ncandidate()\
    \ {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\"\
    ) = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate\
    \ \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate\
    \ \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\"\
    ) = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprt2epf7p.sh: line 96: syntax error near unexpected token `}''

    /tmp/tmprt2epf7p.sh: line 96: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: implement this\
    \ function\n    # Hint: use the tr command\n    echo $1 | tr 'a-z' 'c-za-b'\n\
    }\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n\
    \    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n\
    \    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[ $(candidate\
    \ \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    # Hint: You can use the ord and chr functions to convert between\n\
    \    #       characters and their ASCII values.\n    #       ord takes a character\
    \ and returns its ASCII value\n    #       chr takes an ASCII value and returns\
    \ the character\n    #       For example:\n    #       >>> ord \"a\"\n    #  \
    \     97\n    #       >>> chr 97\n    #       \"a\"\n    #       >>> ord \"b\"\
    \n    #       98\n    #       >>> chr 98\n    #       \"b\"\n    #       >>> ord\
    \ \"c\"\n    #       99\n    #       >>> chr 99\n    #       \"c\"\n    #    \
    \   >>> ord \"d\"\n    #       100\n    #       >>> chr 100\n    #       \"d\"\
    \n    #       >>> ord \"e\"\n    #       101\n    #       >>> chr 101\n    # \
    \      \"e\"\n    #       >>> ord \"f\"\n    #       102\n    #       >>> chr\
    \ 102\n    #       \"f\"\n    #       >>> ord \"g\"\n    #       103\n    #  \
    \     >>> chr 103\n    #       \"g\"\n    #       >>> ord \"h\"\n    #       104\n\
    \    #       >>> chr 104\n    #       \"h\"\n    #       >>> ord \"i\"\n    #\
    \       105\n    #       >>> chr 105\n    #       \"i\"\n    #       >>> ord \"\
    j\"\n    #       106\n    #       >>> chr 106\n    #       \"j\"\n    #      \
    \ >>> ord \"k\"\n    #       107\n    #       >>> chr 107\n    #       \"k\"\n\
    \    #       >>> ord \"l\"\n    #       108\n    #       >>> chr 108\n    #  \
    \     \"l\"\n    #       >>> ord \"m\"\n    #       109\n    #       >>> chr 109\n\
    \    #       \"m\"\n    #       >>> ord \"n\"\n    #       110\n    #       >>>\
    \ chr 110\n    #       \"n\"\n    #       >>> ord \"o\"\n    #       111\n   \
    \ #       >>> chr 111\n    #       \"o\"\n    #       >>> ord\n}\n\ncandidate()\
    \ {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\"\
    ) = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate\
    \ \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate\
    \ \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\"\
    ) = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpro2y0bff.sh: line 85: syntax error near unexpected token `}''

    /tmp/tmpro2y0bff.sh: line 85: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write this\
    \ function\n    echo \"TODO\"\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n    # Hint: You can use the following command to get the length of\
    \ a string:\n    # len=${#1}\n    # Hint: You can use the following command to\
    \ get the ASCII value of a character:\n    # ord=`printf \"%d\" \"'$char\"`\n\
    \    # Hint: You can use the following command to convert an ASCII value to a\
    \ character:\n    # char=`printf \\\\$(printf '%03o' $ord)`\n    # Hint: You can\
    \ use the following command to convert a character to lowercase:\n    # char=`echo\
    \ $char | tr '[:upper:]' '[:lower:]'`\n    # Hint: You can use the following command\
    \ to convert a character to uppercase:\n    # char=`echo $char | tr '[:lower:]'\
    \ '[:upper:]'`\n    # Hint: You can use the following command to get the first\
    \ character of a string:\n    # char=${1:0:1}\n    # Hint: You can use the following\
    \ command to get the rest of the string:\n    # rest=${1:1}\n    # Hint: You can\
    \ use the following command to get the last character of a string:\n    # char=${1:\
    \ -1}\n    # Hint: You can use the following command to get the first part of\
    \ the string:\n    # first=${1:0:-1}\n    # Hint: You can use the following command\
    \ to get the last two characters of a string:\n    # last=${1: -2}\n    # Hint:\
    \ You can use the following command to get the first two characters of a string:\n\
    \    # first=${1:0:2}\n    # Hint: You can use the following command to get the\
    \ rest of the string:\n    # rest=${1:2}\n    # Hint: You can use the following\
    \ command to get the last three characters of a string:\n    # last=${1: -3}\n\
    \    # Hint: You can use the following command to get the first three characters\
    \ of a string:\n    # first=${1:0:3}\n    # Hint: You can use the following command\
    \ to get the rest of the string\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphe6v05w9.sh: line 48: syntax error near unexpected token `}''

    /tmp/tmphe6v05w9.sh: line 48: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n    # Hint: You can use the modulo operator to wrap around the alphabet\n\
    \    # Hint: You can use the ord() and chr() functions to convert between\n  \
    \  #       characters and their ASCII values\n    # Hint: You can use the echo\
    \ -n command to print without a newline\n    # Hint: You can use the tr command\
    \ to translate characters\n    # Hint: You can use the seq command to generate\
    \ a sequence of numbers\n    # Hint: You can use the fold command to wrap long\
    \ lines\n    # Hint: You can use the paste command to merge lines\n    # Hint:\
    \ You can use the tr command to delete characters\n    # Hint: You can use the\
    \ echo command to print a newline\n    # Hint: You can use the rev command to\
    \ reverse lines\n    # Hint: You can use the sort command to sort lines\n    #\
    \ Hint: You can use the uniq command to remove duplicate lines\n    # Hint: You\
    \ can use the wc command to count words, lines, or characters\n    # Hint: You\
    \ can use the head command to print the first lines of a file\n    # Hint: You\
    \ can use the tail command to print the last lines of a file\n    # Hint: You\
    \ can use the diff command to compare files\n    # Hint: You can use the grep\
    \ command to search for patterns\n    # Hint: You can use the sed command to replace\
    \ patterns\n    # Hint: You can use the cut command to select fields of a line\n\
    \    # Hint: You can use the tr command to translate characters\n    # Hint: You\
    \ can use the tr command to delete characters\n    # Hint: You can use the tr\
    \ command to squeeze repeated characters\n    # Hint: You can use the tr command\
    \ to pad lines with characters\n    # Hint: You can use the tr command to truncate\
    \ lines\n    # Hint: You can use the tr command to split lines\n    # Hint: You\
    \ can use the tr command to join lines\n    # Hint: You can use the tr command\
    \ to translate characters\n    # Hint: You can use the tr command to delete characters\n\
    \    # Hint: You can use the tr command to squeeze repeated characters\n    #\
    \ Hint: You can use the tr command\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppwalvhn2.sh: line 50: syntax error near unexpected token `}''

    /tmp/tmppwalvhn2.sh: line 50: `}''

    '
  stdout: ''
  timestamp: 1660011114
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: implement this\
    \ function\n    echo \"hi\"\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011114
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: implement this\
    \ function\n    echo \"TODO\"\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: write this\
    \ function\n    echo \"TODO\"\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011114
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n\t# Your code here\n\t\
    # Hint: use the tr command\n\t# Hint: use the echo command\n\t# Hint: use the\
    \ $1 variable\n\t# Hint: use the $() command\n}\n\ncandidate() {\n    encrypt\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n\
    \    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\"\
    ) = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbi3orc7u.sh: line 23: syntax error near unexpected token `}''

    /tmp/tmpbi3orc7u.sh: line 23: `}''

    '
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n    echo \"Not implemented\"\n}\n\ncandidate() {\n    encrypt \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[\
    \ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") =\
    \ \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011114
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    # Hint: You can use the ord and chr functions to convert between\n\
    \    #       ASCII characters and their integer representations.\n    #      \
    \ For example:\n    #       >>> $(ord \"a\")\n    #       97\n    #       >>>\
    \ $(chr 97)\n    #       \"a\"\n    #       >>> $(ord \"b\")\n    #       98\n\
    \    #       >>> $(chr 98)\n    #       \"b\"\n    #       >>> $(ord \"c\")\n\
    \    #       99\n    #       >>> $(chr 99)\n    #       \"c\"\n    #       >>>\
    \ $(ord \"d\")\n    #       100\n    #       >>> $(chr 100)\n    #       \"d\"\
    \n    #       >>> $(ord \"e\")\n    #       101\n    #       >>> $(chr 101)\n\
    \    #       \"e\"\n    #       >>> $(ord \"f\")\n    #       102\n    #     \
    \  >>> $(chr 102)\n    #       \"f\"\n    #       >>> $(ord \"g\")\n    #    \
    \   103\n    #       >>> $(chr 103)\n    #       \"g\"\n    #       >>> $(ord\
    \ \"h\")\n    #       104\n    #       >>> $(chr 104)\n    #       \"h\"\n   \
    \ #       >>> $(ord \"i\")\n    #       105\n    #       >>> $(chr 105)\n    #\
    \       \"i\"\n    #       >>> $(ord \"j\")\n    #       106\n    #       >>>\
    \ $(chr 106)\n    #       \"j\"\n    #       >>> $(ord \"k\")\n    #       107\n\
    \    #       >>> $(chr 107)\n    #       \"k\"\n    #       >>> $(ord \"l\")\n\
    \    #       108\n    #       >>> $(chr 108)\n    #       \"l\"\n    #       >>>\
    \ $(ord \"m\")\n    #       109\n    #       >>> $(chr 109)\n    #       \"m\"\
    \n    #       >>> $(ord \"n\")\n    #       110\n    #       >>> $(chr 110)\n\
    \    #       \"n\"\n    #       >>> $(ord \"o\")\n    #       111\n    #     \
    \ \n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\"\
    \ ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"\
    ix\" ]]\n    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[\
    \ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    \ ]]\n    [[ $(candidate \"a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptsil0hhp.sh: line 81: syntax error near unexpected token `}''

    /tmp/tmptsil0hhp.sh: line 81: `}''

    '
  stdout: ''
  timestamp: 1660011114
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n    echo \"TODO\"\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # Write your code here\n\
    \    echo $1 | tr 'a-z' 'c-za-b'\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: implement this\
    \ function\n    # Hint: use the ord and chr functions\n    # Hint: use the modulo\
    \ operator\n    # Hint: use the range operator\n    # Hint: use the join function\n\
    \    # Hint: use the map function\n    # Hint: use the zip function\n    # Hint:\
    \ use the list function\n    # Hint: use the str function\n    # Hint: use the\
    \ int function\n    # Hint: use the eval function\n    # Hint: use the ord function\n\
    \    # Hint: use the chr function\n    # Hint: use the range function\n    # Hint:\
    \ use the join function\n    # Hint: use the map function\n    # Hint: use the\
    \ zip function\n    # Hint: use the list function\n    # Hint: use the str function\n\
    \    # Hint: use the int function\n    # Hint: use the eval function\n    # Hint:\
    \ use the ord function\n    # Hint: use the chr function\n    # Hint: use the\
    \ range function\n    # Hint: use the join function\n    # Hint: use the map function\n\
    \    # Hint: use the zip function\n    # Hint: use the list function\n    # Hint:\
    \ use the str function\n    # Hint: use the int function\n    # Hint: use the\
    \ eval function\n    # Hint: use the ord function\n    # Hint: use the chr function\n\
    \    # Hint: use the range function\n    # Hint: use the join function\n    #\
    \ Hint: use the map function\n    # Hint: use the zip function\n    # Hint: use\
    \ the list function\n    # Hint: use the str function\n    # Hint: use the int\
    \ function\n    # Hint: use the eval function\n    # Hint: use the ord function\n\
    \    # Hint: use the chr function\n    # Hint: use the range function\n    # Hint:\
    \ use the join function\n    # Hint: use the map function\n    # Hint: use the\
    \ zip function\n    # Hint: use the list function\n    # Hint: use the str function\n\
    \    # Hint: use the int function\n    # Hint\n}\n\ncandidate() {\n    encrypt\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n\
    \    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\"\
    ) = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0dqk61j9.sh: line 69: syntax error near unexpected token `}''

    /tmp/tmp0dqk61j9.sh: line 69: `}''

    '
  stdout: ''
  timestamp: 1660011114
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n    # Hint: You can use the modulo operator to wrap around the alphabet.\n\
    \    # Hint: You can use the ord and chr functions to convert between characters\
    \ and their ASCII values.\n    # Hint: You can use the echo command to print to\
    \ stdout.\n    # Hint: You can use the return command to return a value.\n   \
    \ # Hint: You can use the $1 variable to access the first argument passed to the\
    \ function.\n    # Hint: You can use the $# variable to access the number of arguments\
    \ passed to the function.\n    # Hint: You can use the $@ variable to access all\
    \ arguments passed to the function.\n    # Hint: You can use the $0 variable to\
    \ access the name of the script.\n    # Hint: You can use the $# variable to access\
    \ the number of arguments passed to the script.\n    # Hint: You can use the $@\
    \ variable to access all arguments passed to the script.\n    # Hint: You can\
    \ use the $? variable to access the exit status of the last command.\n    # Hint:\
    \ You can use the $! variable to access the process ID of the last command.\n\
    \    # Hint: You can use the $$ variable to access the process ID of the current\
    \ script.\n    # Hint: You can use the $USER variable to access the username of\
    \ the current user.\n    # Hint: You can use the $HOSTNAME variable to access\
    \ the hostname of the machine.\n    # Hint: You can use the $SECONDS variable\
    \ to access the number of seconds since the script was started.\n    # Hint: You\
    \ can use the $RANDOM variable to access a random number.\n    # Hint: You can\
    \ use the $LINENO variable to access the current line number in the script.\n\
    \    # Hint: You can use the $IFS variable to access the current internal field\
    \ separator.\n    # Hint: You can use the $DIRSTACK variable to access the current\
    \ directory stack.\n    # Hint: You can use the $PIPESTATUS variable to access\
    \ the exit status of the last command in a pipe.\n    # Hint: You can use the\
    \ $MACHTYPE variable to access the system type of the machine.\n\n}\n\ncandidate()\
    \ {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\"\
    ) = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate\
    \ \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate\
    \ \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\"\
    ) = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpis81b1mh.sh: line 42: syntax error near unexpected token `}''

    /tmp/tmpis81b1mh.sh: line 42: `}''

    '
  stdout: ''
  timestamp: 1660011114
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Write your\
    \ code here\n    # Hint: You can use the modulo operator to wrap around the alphabet\n\
    \    # Hint: You can use the ord() and chr() functions to convert between\n  \
    \  #       characters and ASCII values\n    # Hint: You can use the string concatenation\
    \ operator to join strings\n    #       together\n    # Hint: You can use the\
    \ tr command to translate characters\n    # Hint: You can use the fold command\
    \ to wrap long lines\n    # Hint: You can use the echo command to print a string\n\
    \    # Hint: You can use the seq command to generate a sequence of numbers\n \
    \   # Hint: You can use the rev command to reverse a string\n    # Hint: You can\
    \ use the sort command to sort a string\n    # Hint: You can use the uniq command\
    \ to remove duplicates from a string\n    # Hint: You can use the wc command to\
    \ count the number of lines in a file\n    # Hint: You can use the head command\
    \ to print the first few lines of a file\n    # Hint: You can use the tail command\
    \ to print the last few lines of a file\n    # Hint: You can use the cut command\
    \ to print a specific field from a file\n    # Hint: You can use the tr command\
    \ to translate characters\n    # Hint: You can use the fold command to wrap long\
    \ lines\n    # Hint: You can use the echo command to print a string\n    # Hint:\
    \ You can use the seq command to generate a sequence of numbers\n    # Hint: You\
    \ can use the rev command to reverse a string\n    # Hint: You can use the sort\
    \ command to sort a string\n    # Hint: You can use the uniq command to remove\
    \ duplicates from a string\n    # Hint: You can use the wc command to count the\
    \ number of lines in a file\n    # Hint: You can use the head command to print\
    \ the first few lines of a file\n    # Hint: You can use the tail command to print\
    \ the last few lines of a file\n    # Hint: You can use the cut command to print\
    \ a specific field from a file\n    # Hint: You can use the tr command to translate\
    \ characters\n    # Hint: You can use the fold command to wrap long lines\n}\n\
    \ncandidate() {\n    encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"hi\") = \"lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n\
    \    [[ $(candidate \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n\
    \    [[ $(candidate \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[ $(candidate\
    \ \"hellomyfriend\") = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmplp_l5590.sh: line 48: syntax error near unexpected token `}''

    /tmp/tmplp_l5590.sh: line 48: `}''

    '
  stdout: ''
  timestamp: 1660011114
- exit_code: 1
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    echo \"TODO\"\n}\n\ncandidate() {\n    encrypt \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"lm\" ]]\n    [[ $(candidate\
    \ \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate \"gf\") = \"kj\" ]]\n\
    \    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate \"faewfawefaewg\"\
    ) = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\") = \"lippsqcjvmirh\"\
    \ ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") =\
    \ \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660011113
- exit_code: 2
  program: "#!/bin/bash\n# Create a function encrypt that takes a string as an argument\
    \ and\n# returns a string encrypted with the alphabet being rotated. \n# The alphabet\
    \ should be rotated in a manner such that the letters \n# shift down by two multiplied\
    \ to two places.\n# For example:\n# >>> $(encrypt \"hi\")\n# \"lm\"\n# >>> $(encrypt\
    \ \"asdfghjkl\")\n# \"ewhjklnop\"\n# >>> $(encrypt \"gf\")\n# \"kj\"\n# >>> $(encrypt\
    \ \"et\")\n# \"ix\"\n#\n# $1 is a string\nencrypt() {\n    # TODO: Implement this\
    \ function\n    # Hint: Use the ord and chr functions\n    # Hint: Use the modulo\
    \ operator %\n    # Hint: Use the range operator {..}\n    # Hint: Use the tr\
    \ command to translate characters\n    # Hint: Use the echo command to return\
    \ a string\n    # Hint: Use the $1 variable to access the first argument\n   \
    \ # Hint: Use the $(( )) syntax to perform arithmetic\n}\n\ncandidate() {\n  \
    \  encrypt \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hi\") = \"\
    lm\" ]]\n    [[ $(candidate \"asdfghjkl\") = \"ewhjklnop\" ]]\n    [[ $(candidate\
    \ \"gf\") = \"kj\" ]]\n    [[ $(candidate \"et\") = \"ix\" ]]\n    [[ $(candidate\
    \ \"faewfawefaewg\") = \"jeiajeaijeiak\" ]]\n    [[ $(candidate \"hellomyfriend\"\
    ) = \"lippsqcjvmirh\" ]]\n    [[ $(candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\" ]]\n    [[ $(candidate \"\
    a\") = \"e\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgub5xuwg.sh: line 26: syntax error near unexpected token `}''

    /tmp/tmpgub5xuwg.sh: line 26: `}''

    '
  stdout: ''
  timestamp: 1660011114

language: sh
name: HumanEval_59_largest_prime_factor
results:
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i < n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=$1\n  local i=2\n  while [ $i -lt $n ]; do\n    if [ $((n % i)) -eq 0 ]; then\n\
    \      n=$((n / i))\n    else\n      i=$((i + 1))\n    fi\n  done\n  echo $n\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $((n % i)) -eq 0 ]; do\n        n=$((n / i))\n\
    \    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i < n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $((n % i)) -eq 0 ]; do\n        n=$((n / i))\n\
    \    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $((n % i)) -eq 0 ]; do\n        n=$((n / i))\n\
    \    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i <= n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n            i=2\n        else\n          \
    \  (( i++ ))\n        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i < n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i <= n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n            i=2\n        else\n          \
    \  (( i++ ))\n        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local max=0\n    while (( n > 1 )); do\n        if\
    \ (( n % i == 0 )); then\n            max=$i\n            n=$(( n / i ))\n   \
    \     else\n            (( i++ ))\n        fi\n    done\n    echo $max\n}\n\n\
    candidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i < n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local max_factor=1\n    while [ $i -le $n ]; do\n \
    \       if [ $((n % i)) -eq 0 ]; then\n            max_factor=$i\n           \
    \ n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n    done\n\
    \    echo $max_factor\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i < n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local max_factor=0\n    while (( i <= n )); do\n  \
    \      if (( n % i == 0 )); then\n            max_factor=$i\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $max_factor\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i * i <= n )); do\n        if (( n % i ==\
    \ 0 )); then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local factor=2\n    while (( n % factor != 0 )); do\n        factor=$((\
    \ factor + 1 ))\n    done\n    if (( n == factor )); then\n        echo \"$n\"\
    \n    else\n        largest_prime_factor $(( n / factor ))\n    fi\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $((n % i)) -eq\
    \ 0 ]; then\n            n=$((n / i))\n        else\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=$1\n  local i=2\n  while (( i * i <= n )); do\n    if (( n % i == 0 )); then\n\
    \      n=$(( n / i ))\n    else\n      (( i++ ))\n    fi\n  done\n  echo \"$n\"\
    \n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=$1\n  local i=2\n  local largest_prime=1\n  while [ $i -lt $n ]; do\n    if\
    \ [ $(($n % $i)) -eq 0 ]; then\n      if [ $(is_prime $i) -eq 1 ]; then\n    \
    \    largest_prime=$i\n      fi\n    fi\n    i=$(($i + 1))\n  done\n  echo $largest_prime\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmprwea2ywk.sh: line 15: is_prime: command not found

    /tmp/tmprwea2ywk.sh: line 15: [: -eq: unary operator expected

    /tmp/tmprwea2ywk.sh: line 15: is_prime: command not found

    /tmp/tmprwea2ywk.sh: line 15: [: -eq: unary operator expected

    '
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i <= n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n            i=2\n        else\n          \
    \  (( i++ ))\n        fi\n    done\n    echo $i\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( n > 1 )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            i=$(( i + 1 ))\n\
    \        fi\n    done\n    echo $i\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i < n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n            i=2\n        else\n          \
    \  (( i++ ))\n        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i < n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=$1\n  local i=2\n  while [ $i -lt $n ]; do\n    if [ $((n % i)) -eq 0 ]; then\n\
    \      n=$((n / i))\n    else\n      i=$((i + 1))\n    fi\n  done\n  echo $n\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $((n % i)) -eq 0 ]; do\n        n=$((n / i))\n\
    \    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( n > 1 )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $i\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $((n % i)) -eq 0 ]; do\n        n=$((n / i))\n\
    \    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=$1\n  local i=2\n  while (( i <= n )); do\n    if (( n % i == 0 )); then\n\
    \      n=$(( n / i ))\n      i=2\n    else\n      (( i++ ))\n    fi\n  done\n\
    \  echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: -1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $((n % i)) -eq 0 ]; do\n        n=$((n / i))\n\
    \    done\n    if [ $n -eq 1 ]; then\n        echo $i\n    else\n        echo\
    \ $(largest_prime_factor $n)\n    fi\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=15 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=3 encoding='utf-8'>
  timestamp: 1660012452
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $(($n % $i))\
    \ -eq 0 ]; then\n            n=$(($n / $i))\n        else\n            i=$(($i\
    \ + 1))\n        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $((n % i)) -eq 0 ]; do\n        n=$((n / i))\n\
    \    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $((n % i)) -eq 0 ]; do\n        n=$((n / i))\n\
    \    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $(($n % $i))\
    \ -eq 0 ]; then\n            n=$(($n / $i))\n        else\n            i=$(($i\
    \ + 1))\n        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i < n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n            i=2\n        else\n          \
    \  (( i++ ))\n        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $(($n % $i))\
    \ -eq 0 ]; then\n            n=$(($n / $i))\n        else\n            i=$(($i\
    \ + 1))\n        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i < n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n            i=2\n        else\n          \
    \  (( i++ ))\n        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i <= n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n            i=2\n        else\n          \
    \  (( i++ ))\n        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=$1\n  local i=2\n  while [ $i -lt $n ]; do\n    if [ $((n % i)) -eq 0 ]; then\n\
    \      n=$((n / i))\n    else\n      i=$((i + 1))\n    fi\n  done\n  echo $n\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i * i <= n )); do\n        if (( n % i ==\
    \ 0 )); then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=$1\n  local i=2\n  local largest=1\n  while (( i <= n )); do\n    if (( n\
    \ % i == 0 )); then\n      largest=$i\n      n=$(( n / i ))\n    else\n      i=$((\
    \ i + 1 ))\n    fi\n  done\n  echo $largest\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i * i <= n )); do\n        if (( n % i ==\
    \ 0 )); then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=$1\n  local i=2\n  while [ $i -lt $n ]; do\n    if [ $((n % i)) -eq 0 ]; then\n\
    \      n=$((n / i))\n    else\n      i=$((i + 1))\n    fi\n  done\n  echo $n\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i*i <= n )); do\n        if (( n % i == 0\
    \ )); then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $(($n % $i))\
    \ -eq 0 ]; then\n            n=$(($n / $i))\n        else\n            i=$(($i\
    \ + 1))\n        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i * i <= n )); do\n        if (( n % i ==\
    \ 0 )); then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $((n % i)) -eq\
    \ 0 ]; then\n            n=$((n / i))\n        else\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=$1\n  local i=2\n  while (( i <= n )); do\n    if (( n % i == 0 )); then\n\
    \      n=$(( n / i ))\n      i=2\n    else\n      (( i++ ))\n    fi\n  done\n\
    \  echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $((n % i)) -eq\
    \ 0 ]; then\n            n=$((n / i))\n        else\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: -1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $((n % i)) -eq 0 ]; do\n        n=$((n / i))\n\
    \    done\n    if [ $n -eq 1 ]; then\n        echo $i\n    else\n        largest_prime_factor\
    \ $n\n    fi\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=29 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=24 encoding='utf-8'>
  timestamp: 1660012452
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $(($n % $i))\
    \ -eq 0 ]; then\n            n=$(($n / $i))\n        else\n            i=$(($i\
    \ + 1))\n        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i * i <= n )); do\n        if (( n % i ==\
    \ 0 )); then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i < n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=$1\n  local i=2\n  while (( i < n )); do\n    if (( n % i == 0 )); then\n\
    \      n=$(( n / i ))\n      i=2\n    else\n      (( i++ ))\n    fi\n  done\n\
    \  echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=$1\n  local i=2\n  local max=0\n  while [ $i -le $n ]; do\n    if [ $((n %\
    \ i)) -eq 0 ]; then\n      n=$((n / i))\n      max=$i\n    else\n      i=$((i\
    \ + 1))\n    fi\n  done\n  echo $max\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $((n % i)) -eq\
    \ 0 ]; then\n            n=$((n / i))\n        else\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [[ $((n % i)) -eq 0 ]]; do\n        n=$((n /\
    \ i))\n        i=$((i + 1))\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $(($n % $i))\
    \ -eq 0 ]; then\n            n=$(($n / $i))\n        else\n            i=$(($i\
    \ + 1))\n        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $(($n % $i))\
    \ -eq 0 ]; then\n            n=$(($n / $i))\n        else\n            i=$(($i\
    \ + 1))\n        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=$1\n  local i=2\n  while [[ $((n % i)) -eq 0 ]]; do\n    n=$((n / i))\n  \
    \  while [[ $((n % i)) -eq 0 ]]; do\n      n=$((n / i))\n    done\n    i=$((i\
    \ + 1))\n  done\n  echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=$1\n  local factor=2\n  while [ $((n % factor)) -eq 0 ]; do\n    n=$((n /\
    \ factor))\n  done\n  if [ $n -eq 1 ]; then\n    echo $factor\n  else\n    factor=3\n\
    \    while [ $((n % factor)) -ne 0 ]; do\n      factor=$((factor + 2))\n    done\n\
    \    echo $factor\n  fi\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $((n % i)) -eq 0 ]; do\n        n=$((n / i))\n\
    \    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i < n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n            i=2\n        else\n          \
    \  (( i++ ))\n        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $((n % i)) -eq\
    \ 0 ]; then\n            n=$((n / i))\n        else\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i * i <= n )); do\n        if (( n % i ==\
    \ 0 )); then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $((n % i)) -eq 0 ]; do\n        n=$((n / i))\n\
    \    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=$1\n  local i=2\n  while [ $i -lt $n ]; do\n    if [ $(( n % i )) -eq 0 ];\
    \ then\n      n=$(( n / i ))\n    else\n      i=$(( i + 1 ))\n    fi\n  done\n\
    \  echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i < n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $((n % i)) -eq 0 ]; do\n        n=$((n / i))\n\
    \    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=$1\n  local i=2\n  while (( i * i <= n )); do\n    if (( n % i == 0 )); then\n\
    \      n=$(( n / i ))\n    else\n      (( i++ ))\n    fi\n  done\n  echo \"$n\"\
    \n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: -1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=$1\n  local i=2\n  while [ $((n % i)) -eq 0 ]; do\n    n=$((n / i))\n  done\n\
    \  if [ $n -eq 1 ]; then\n    echo $i\n  else\n    echo $(largest_prime_factor\
    \ $n)\n  fi\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=28 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=20 encoding='utf-8'>
  timestamp: 1660012452
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=$1\n  local i=2\n  while [ $i -lt $n ]; do\n    if [ $((n % i)) -eq 0 ]; then\n\
    \      n=$((n / i))\n    else\n      i=$((i + 1))\n    fi\n  done\n  echo $n\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=$1\n  local i=2\n  while [ $i -lt $n ]; do\n    if [ $(($n % $i)) -eq 0 ];\
    \ then\n      n=$(($n / $i))\n    else\n      i=$(($i + 1))\n    fi\n  done\n\
    \  echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=$1\n  local i=2\n  local max=0\n  while (( n > 1 )); do\n    if (( n % i ==\
    \ 0 )); then\n      max=$i\n      while (( n % i == 0 )); do\n        n=$(( n\
    \ / i ))\n      done\n    fi\n    (( i++ ))\n  done\n  echo $max\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i <= n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n            i=2\n        else\n          \
    \  (( i++ ))\n        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: -1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local divisor=2\n    while [ $((n % divisor)) -eq 0 ]; do\n      \
    \  n=$((n / divisor))\n    done\n    if [ $n -eq 1 ]; then\n        echo $divisor\n\
    \    else\n        echo $(largest_prime_factor $n)\n    fi\n}\n\ncandidate() {\n\
    \    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=16 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=5 encoding='utf-8'>
  timestamp: 1660012452
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $((n % i)) -eq\
    \ 0 ]; then\n            n=$((n / i))\n        else\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=$1\n  local i=2\n  while [ $((n % i)) -eq 0 ]; do\n    n=$((n / i))\n  done\n\
    \  echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $((n % i)) -eq\
    \ 0 ]; then\n            n=$((n / i))\n        else\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i <= n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n            i=2\n        else\n          \
    \  (( i++ ))\n        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i < n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i < n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i < n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i <= n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n            i=2\n        else\n          \
    \  (( i++ ))\n        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=$1\n  local i=2\n  local largest_prime_factor=1\n  while [[ $i -le $n ]];\
    \ do\n    if [[ $((n % i)) -eq 0 ]]; then\n      largest_prime_factor=$i\n   \
    \   n=$((n / i))\n    else\n      i=$((i + 1))\n    fi\n  done\n  echo $largest_prime_factor\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $((n % i)) -eq\
    \ 0 ]; then\n            n=$((n / i))\n        else\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $((n % i)) -eq\
    \ 0 ]; then\n            n=$((n / i))\n        else\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=$1\n  local i=2\n  while [ $((n % i)) -eq 0 ]; do\n    n=$((n / i))\n  done\n\
    \  echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i * i <= n )); do\n        while (( n % i\
    \ == 0 )); do\n            n=$(( n / i ))\n        done\n        i=$(( i + 1 ))\n\
    \    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while ((i < n)); do\n        if ((n % i == 0)); then\n\
    \            n=$((n / i))\n        else\n            ((i++))\n        fi\n   \
    \ done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=$1\n  local i=2\n  while (( i <= n )); do\n    if (( n % i == 0 )); then\n\
    \      n=$(( n / i ))\n      i=2\n    else\n      (( i++ ))\n    fi\n  done\n\
    \  echo $i\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $(($n % $i))\
    \ -eq 0 ]; then\n            n=$(($n / $i))\n        else\n            i=$(($i\
    \ + 1))\n        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local factor=2\n    while [ $((n % factor)) -eq 0 ]; do\n        n=$((n\
    \ / factor))\n    done\n    if [ $n -eq 1 ]; then\n        echo $factor\n    else\n\
    \        factor=3\n        while [ $((n % factor)) -ne 0 ]; do\n            factor=$((factor\
    \ + 2))\n        done\n        echo $factor\n    fi\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i * i <= n )); do\n        if (( n % i ==\
    \ 0 )); then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local p=2\n    while (( n > 1 )); do\n        if (( n % p == 0 ));\
    \ then\n            n=$(( n / p ))\n        else\n            p=$(( p + 1 ))\n\
    \        fi\n    done\n    echo $p\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=$1\n  local i=2\n  while [ $i -lt $n ]; do\n    if [ $((n % i)) -eq 0 ]; then\n\
    \      n=$((n / i))\n    else\n      i=$((i + 1))\n    fi\n  done\n  echo $n\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i < n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i <= n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n            i=2\n        else\n          \
    \  (( i++ ))\n        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $((n % i)) -eq\
    \ 0 ]; then\n            largest_prime_factor $((n / i))\n            return\n\
    \        fi\n        i=$((i + 1))\n    done\n    echo $n\n}\n\ncandidate() {\n\
    \    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $((n % i)) -eq 0 ]; do\n        n=$((n / i))\n\
    \    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $((n % i)) -eq\
    \ 0 ]; then\n            n=$((n / i))\n        else\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i * i <= n )); do\n        if (( n % i ==\
    \ 0 )); then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( n % i != 0 )); do\n        (( i += 1 ))\n\
    \    done\n    if (( n == i )); then\n        echo \"$n\"\n    else\n        largest_prime_factor\
    \ $(( n / i ))\n    fi\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i < n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=$1\n  local i=2\n  while (( n > 1 )); do\n    while (( n % i == 0 )); do\n\
    \      n=$(( n / i ))\n    done\n    i=$(( i + 1 ))\n  done\n  echo \"$(( i -\
    \ 1 ))\"\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $(($n % $i))\
    \ -eq 0 ]; then\n            n=$(($n / $i))\n        else\n            i=$(($i\
    \ + 1))\n        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local max=0\n    while [ $i -le $n ]; do\n        if\
    \ [ $((n % i)) -eq 0 ]; then\n            n=$((n / i))\n            max=$i\n \
    \       else\n            i=$((i + 1))\n        fi\n    done\n    echo $max\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i < n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [[ $((n % i)) -eq 0 ]]; do\n        n=$((n /\
    \ i))\n        i=$((i + 1))\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( n > 1 )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $i\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=$1\n  local i=2\n  while (( i < n )); do\n    if (( n % i == 0 )); then\n\
    \      n=$(( n / i ))\n      i=2\n    else\n      (( i++ ))\n    fi\n  done\n\
    \  echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $((n % i)) -eq 0 ]; do\n        n=$((n / i))\n\
    \    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=$1\n  local factor=2\n  while [ $((n % factor)) -eq 0 ]; do\n    n=$((n /\
    \ factor))\n  done\n  if [ $n -eq 1 ]; then\n    echo $factor\n  else\n    factor=3\n\
    \    while [ $((n % factor)) -ne 0 ]; do\n      factor=$((factor + 2))\n    done\n\
    \    echo $factor\n  fi\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i * i <= n )); do\n        if (( n % i ==\
    \ 0 )); then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $((n % i)) -eq\
    \ 0 ]; then\n            n=$((n / i))\n        else\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $((n % i)) -eq\
    \ 0 ]; then\n            n=$((n / i))\n        else\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i * i <= n )); do\n        if (( n % i ==\
    \ 0 )); then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i < n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=$1\n  local i=2\n  while (( i <= n )); do\n    if (( n % i == 0 )); then\n\
    \      n=$(( n / i ))\n      i=2\n    else\n      (( i++ ))\n    fi\n  done\n\
    \  echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local max_factor=1\n    while [ $i -lt $n ]; do\n \
    \       if [ $(($n % $i)) -eq 0 ]; then\n            max_factor=$i\n         \
    \   n=$(($n / $i))\n        else\n            i=$(($i + 1))\n        fi\n    done\n\
    \    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i * i <= n )); do\n        while (( n % i\
    \ == 0 )); do\n            n=$(( n / i ))\n        done\n        i=$(( i + 1 ))\n\
    \    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i <= n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n            i=2\n        else\n          \
    \  (( i++ ))\n        fi\n    done\n    echo $i\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i < n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=$1\n  local i=2\n  while (( i * i <= n )); do\n    if (( n % i == 0 )); then\n\
    \      n=$(( n / i ))\n    else\n      (( i++ ))\n    fi\n  done\n  echo \"$n\"\
    \n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=$1\n  local i=2\n  while (( i <= n )); do\n    if (( n % i == 0 )); then\n\
    \      n=$(( n / i ))\n      i=2\n    else\n      (( i++ ))\n    fi\n  done\n\
    \  echo $i\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=$1\n  local i=2\n  while [ $i -lt $n ]; do\n    if [ $((n % i)) -eq 0 ]; then\n\
    \      n=$((n / i))\n    else\n      i=$((i + 1))\n    fi\n  done\n  echo $n\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=$1\n  local i=2\n  while (( i <= n )); do\n    if (( n % i == 0 )); then\n\
    \      n=$(( n / i ))\n      i=2\n    else\n      (( i++ ))\n    fi\n  done\n\
    \  echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local max_factor=1\n    while [ $i -lt $n ]; do\n \
    \       if [ $((n % i)) -eq 0 ]; then\n            max_factor=$i\n           \
    \ n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n    done\n\
    \    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i < n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=$1\n  local i=2\n  local max=0\n  while (( i <= n )); do\n    if (( n % i\
    \ == 0 )); then\n      max=$i\n      n=$(( n / i ))\n    else\n      (( i++ ))\n\
    \    fi\n  done\n  echo $max\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i * i <= n )); do\n        if (( n % i ==\
    \ 0 )); then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local max=0\n    while (( i <= n )); do\n        if\
    \ (( n % i == 0 )); then\n            max=$i\n            n=$(( n / i ))\n   \
    \     else\n            (( i++ ))\n        fi\n    done\n    echo $max\n}\n\n\
    candidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i < n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=$1\n  local i=2\n  local max=0\n  while [ $i -le $n ]; do\n    if [ $(($n\
    \ % $i)) -eq 0 ]; then\n      max=$i\n      n=$(($n / $i))\n    else\n      i=$(($i\
    \ + 1))\n    fi\n  done\n  echo $max\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=$1\n  local i=2\n  while (( i <= n )); do\n    if (( n % i == 0 )); then\n\
    \      n=$(( n / i ))\n      i=2\n    else\n      (( i++ ))\n    fi\n  done\n\
    \  echo $i\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=$1\n  local factor=2\n  local largest_factor=2\n  while (( n > 1 )); do\n\
    \    if (( n % factor == 0 )); then\n      largest_factor=$factor\n      while\
    \ (( n % factor == 0 )); do\n        n=$(( n / factor ))\n      done\n    fi\n\
    \    (( factor++ ))\n  done\n  echo $largest_factor\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i <= n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n            i=2\n        else\n          \
    \  (( i++ ))\n        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=$1\n  local i=2\n  while [ $i -lt $n ]; do\n    if [ $((n % i)) -eq 0 ]; then\n\
    \      n=$((n / i))\n    else\n      i=$((i + 1))\n    fi\n  done\n  echo $n\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=\"$1\"\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $((n % i))\
    \ -eq 0 ]; then\n            n=$((n / i))\n        else\n            i=$((i +\
    \ 1))\n        fi\n    done\n    echo \"$n\"\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [[ $i -lt $n ]]; do\n        if [[ $((n % i))\
    \ -eq 0 ]]; then\n            n=$((n / i))\n        else\n            i=$((i +\
    \ 1))\n        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $(($n % $i))\
    \ -eq 0 ]; then\n            n=$(($n / $i))\n        else\n            i=$(($i\
    \ + 1))\n        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $((n % i)) -eq\
    \ 0 ]; then\n            n=$((n / i))\n        else\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i * i <= n )); do\n        if (( n % i ==\
    \ 0 )); then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i * i <= n )); do\n        if (( n % i ==\
    \ 0 )); then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: -1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local factor=2\n    while [ $((n % factor)) -eq 0 ]; do\n        n=$((n\
    \ / factor))\n    done\n    if [ $n -eq 1 ]; then\n        echo $factor\n    else\n\
    \        local next_factor=$((factor + 1))\n        while [ $((n % next_factor))\
    \ -ne 0 ]; do\n            next_factor=$((next_factor + 1))\n        done\n  \
    \      largest_prime_factor $n\n    fi\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=25 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=22 encoding='utf-8'>
  timestamp: 1660012452
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i * i <= n )); do\n        if (( n % i ==\
    \ 0 )); then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i < n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i < n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i <= n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n            i=2\n        else\n          \
    \  (( i++ ))\n        fi\n    done\n    echo $i\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i <= n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n            i=2\n        else\n          \
    \  (( i++ ))\n        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i < n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i <= n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n            i=2\n        else\n          \
    \  (( i++ ))\n        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=\"$1\"\n  local i=2\n  while [ $i -lt $n ]; do\n    if [ $((n % i)) -eq 0\
    \ ]; then\n      n=$((n / i))\n    else\n      i=$((i + 1))\n    fi\n  done\n\
    \  echo \"$n\"\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i < n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $((n % i)) -eq\
    \ 0 ]; then\n            n=$((n / i))\n        else\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $((n % i)) -eq\
    \ 0 ]; then\n            largest_prime_factor $((n / i))\n            return\n\
    \        fi\n        i=$((i + 1))\n    done\n    echo $n\n}\n\ncandidate() {\n\
    \    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $((n % i)) -eq\
    \ 0 ]; then\n            n=$((n / i))\n        else\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local largest_prime_factor=1\n    while [ $i -lt $n\
    \ ]; do\n        if [ $((n % i)) -eq 0 ]; then\n            largest_prime_factor=$i\n\
    \            n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n\
    \    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=$1\n  local i=2\n  while [ $i -lt $n ]; do\n    if [ $((n % i)) -eq 0 ]; then\n\
    \      n=$((n / i))\n    else\n      i=$((i + 1))\n    fi\n  done\n  echo $n\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $((n % i)) -eq\
    \ 0 ]; then\n            n=$((n / i))\n        else\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i < n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=$1\n  local i=2\n  while (( n > 1 )); do\n    if (( n % i == 0 )); then\n\
    \      n=$(( n / i ))\n    else\n      (( i++ ))\n    fi\n  done\n  echo $i\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $(($n % $i))\
    \ -eq 0 ]; then\n            n=$(($n / $i))\n        else\n            i=$(($i\
    \ + 1))\n        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=$1\n  local i=2\n  local max_factor=1\n  while (( i <= n )); do\n    if ((\
    \ n % i == 0 )); then\n      max_factor=$i\n      n=$(( n / i ))\n    else\n \
    \     (( i++ ))\n    fi\n  done\n  echo $max_factor\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $((n % i)) -eq\
    \ 0 ]; then\n            n=$((n / i))\n        else\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $((n % i)) -eq\
    \ 0 ]; then\n            n=$((n / i))\n        else\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=$1\n  local i=2\n  while (( i < n )); do\n    if (( n % i == 0 )); then\n\
    \      n=$(( n / i ))\n      i=2\n    else\n      (( i++ ))\n    fi\n  done\n\
    \  echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $((n % i)) -eq 0 ]; do\n        n=$((n / i))\n\
    \    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i <= n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n            i=2\n        else\n          \
    \  (( i++ ))\n        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=\"$1\"\n    local i=2\n    while (( i < n )); do\n        if (( n % i == 0\
    \ )); then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n\
    \        fi\n    done\n    echo \"$n\"\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=$1\n  local i=2\n  while (( i < n )); do\n    if (( n % i == 0 )); then\n\
    \      n=$(( n / i ))\n      i=2\n    else\n      (( i++ ))\n    fi\n  done\n\
    \  echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local factor=2\n    while (( n > 1 )); do\n        if (( n % factor\
    \ == 0 )); then\n            n=$(( n / factor ))\n        else\n            ((\
    \ factor++ ))\n        fi\n    done\n    echo $factor\n}\n\ncandidate() {\n  \
    \  largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i < n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $((n % i)) -eq 0 ]; do\n        n=$((n / i))\n\
    \    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i <= n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n            i=2\n        else\n          \
    \  (( i++ ))\n        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i <= n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n            i=2\n        else\n          \
    \  (( i++ ))\n        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i * i <= n )); do\n        if (( n % i ==\
    \ 0 )); then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=$1\n  local i=2\n  while (( i <= n )); do\n    if (( n % i == 0 )); then\n\
    \      n=$(( n / i ))\n      i=2\n    else\n      (( i++ ))\n    fi\n  done\n\
    \  echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $(($n % $i))\
    \ -eq 0 ]; then\n            n=$(($n / $i))\n        else\n            i=$(($i\
    \ + 1))\n        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=\"$1\"\n    local i=2\n    while [ $((n % i)) -eq 0 ]; do\n        n=$((n\
    \ / i))\n        i=$((i + 1))\n    done\n    echo \"$n\"\n}\n\ncandidate() {\n\
    \    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i <= n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n            i=2\n        else\n          \
    \  (( i++ ))\n        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i < n )); do\n        if (( n % i == 0 ));\
    \ then\n            local n=$(( n / i ))\n            local i=2\n        else\n\
    \            local i=$(( i + 1 ))\n        fi\n    done\n    echo $n\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i < n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while ((i < n)); do\n        if ((n % i == 0)); then\n\
    \            n=$((n / i))\n        else\n            ((i++))\n        fi\n   \
    \ done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $(($n % $i))\
    \ -eq 0 ]; then\n            n=$(($n / $i))\n        else\n            i=$(($i\
    \ + 1))\n        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [[ $((n % i)) -eq 0 ]]; do\n        n=$((n /\
    \ i))\n        i=$((i + 1))\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i * i <= n )); do\n        if (( n % i ==\
    \ 0 )); then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=$1\n  local i=2\n  while (( i <= n )); do\n    if (( n % i == 0 )); then\n\
    \      n=$(( n / i ))\n      i=2\n    else\n      (( i++ ))\n    fi\n  done\n\
    \  echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: -1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local factor=2\n    while [ $((n % factor)) -eq 0 ]; do\n        n=$((n\
    \ / factor))\n    done\n    if [ $n -eq 1 ]; then\n        echo $factor\n    else\n\
    \        factor=$((factor + 1))\n        while [ $((n % factor)) -ne 0 ]; do\n\
    \            factor=$((factor + 1))\n        done\n        largest_prime_factor\
    \ $n\n    fi\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=35 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660012452
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local max=0\n    while (( i <= n )); do\n        if\
    \ (( n % i == 0 )); then\n            max=$i\n            n=$(( n / i ))\n   \
    \     else\n            (( i++ ))\n        fi\n    done\n    echo $max\n}\n\n\
    candidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local max=0\n    while (( i <= n )); do\n        if\
    \ (( n % i == 0 )); then\n            n=$(( n / i ))\n            max=$i\n   \
    \     else\n            (( i++ ))\n        fi\n    done\n    echo $max\n}\n\n\
    candidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i * i <= n )); do\n        if (( n % i ==\
    \ 0 )); then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i < n )); do\n        while (( n % i == 0\
    \ )); do\n            n=$(( n / i ))\n        done\n        i=$(( i + 1 ))\n \
    \   done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local divisor=2\n    local largest_prime_factor=1\n    while ((n >\
    \ 1)); do\n        while ((n % divisor == 0)); do\n            largest_prime_factor=$divisor\n\
    \            n=$((n / divisor))\n        done\n        divisor=$((divisor + 1))\n\
    \    done\n    echo $largest_prime_factor\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $((n % i)) -eq\
    \ 0 ]; then\n            n=$((n / i))\n        else\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i < n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local\
    \ n=$1\n  local i=2\n  while (( i <= n )); do\n    if (( n % i == 0 )); then\n\
    \      n=$(( n / i ))\n      i=2\n    else\n      (( i++ ))\n    fi\n  done\n\
    \  echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $(($n % $i))\
    \ -eq 0 ]; then\n            n=$(($n / $i))\n        else\n            i=$(($i\
    \ + 1))\n        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [[ $((n % i)) -eq 0 ]]; do\n        n=$((n /\
    \ i))\n        i=$((i + 1))\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i * i <= n )); do\n        if (( n % i ==\
    \ 0 )); then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local largest=1\n    while [ $i -lt $n ]; do\n    \
    \    if [ $((n % i)) -eq 0 ]; then\n            largest=$i\n            n=$((n\
    \ / i))\n        else\n            i=$((i + 1))\n        fi\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012447

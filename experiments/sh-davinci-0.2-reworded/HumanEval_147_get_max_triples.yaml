name: HumanEval_147_get_max_triples
language: sh
prompt: "#!/bin/bash\n# You are given a positive integer n. You have to create an\
  \ integer array a of length n.\n# For each i (1 \u2264 i \u2264 n), the value of\
  \ a[i] = i * i - i + 1.\n# Return the number of triples (a[i], a[j], a[k]) of a\
  \ where i < j < k, \n# and a[i] + a[j] + a[k] is a multiple of 3.\n# Example :\n\
  # >>> $(get_max_triples \"5\")\n# \"1\"\n# Explanation: \n# a = [1, 3, 7, 13, 21]\n\
  # The only valid triple is (1, 7, 13).\n#\n# $1 is an integer\nget_max_triples()\
  \ {\n"
tests: "}\n\ncandidate() {\n    get_max_triples \"$@\"\n}\n\nset -e\nrun_test() {\n\
  \    [[ $(candidate \"5\") = \"1\" ]]\n    [[ $(candidate \"6\") = \"4\" ]]\n  \
  \  [[ $(candidate \"10\") = \"36\" ]]\n    [[ $(candidate \"100\") = \"53361\" ]]\n\
  }\n\nrun_test"
completions: ["    local n=$1\n    local a=()\n    for ((i=1; i<=n; i++)); do\n  \
    \      a+=($((i*i-i+1)))\n    done\n    local count=0\n    for ((i=0; i<n-2; i++));\
    \ do\n        for ((j=i+1; j<n-1; j++)); do\n            for ((k=j+1; k<n; k++));\
    \ do\n                if [[ $((a[i]+a[j]+a[k]))%3 -eq 0 ]]; then\n           \
    \         ((count++))\n                fi\n            done\n        done\n  \
    \  done\n    echo $count", "    local n=$1\n    local a=()\n    local count=0\n\
    \    for ((i=1; i<=n; i++)); do\n        a[i]=$((i*i-i+1))\n    done\n    for\
    \ ((i=1; i<=n; i++)); do\n        for ((j=i+1; j<=n; j++)); do\n            for\
    \ ((k=j+1; k<=n; k++)); do\n                if [[ $((a[i]+a[j]+a[k]))%3 -eq 0\
    \ ]]; then\n                    ((count++))\n                fi\n            done\n\
    \        done\n    done\n    echo $count", "    local n=$1\n    local a=()\n \
    \   local count=0\n    for ((i=1; i<=n; i++)); do\n        a[$i]=$((i*i-i+1))\n\
    \    done\n    for ((i=1; i<=n; i++)); do\n        for ((j=i+1; j<=n; j++)); do\n\
    \            for ((k=j+1; k<=n; k++)); do\n                if [[ $((a[$i]+a[$j]+a[$k]))%3\
    \ -eq 0 ]]; then\n                    ((count++))\n                fi\n      \
    \      done\n        done\n    done\n    echo $count", "    local n=$1\n    local\
    \ a=()\n    local i=0\n    local j=0\n    local k=0\n    local count=0\n    for\
    \ ((i=1; i<=n; i++)); do\n        a+=($((i*i-i+1)))\n    done\n    for ((i=0;\
    \ i<n-2; i++)); do\n        for ((j=i+1; j<n-1; j++)); do\n            for ((k=j+1;\
    \ k<n; k++)); do\n                if (((a[i]+a[j]+a[k])%3==0)); then\n       \
    \             ((count++))\n                fi\n            done\n        done\n\
    \    done\n    echo $count", "    local n=$1\n    local a=()\n    local i=0\n\
    \    local j=0\n    local k=0\n    local count=0\n    for ((i=1; i<=n; i++));\
    \ do\n        a[i]=$((i*i-i+1))\n    done\n    for ((i=1; i<=n; i++)); do\n  \
    \      for ((j=i+1; j<=n; j++)); do\n            for ((k=j+1; k<=n; k++)); do\n\
    \                if (((a[i]+a[j]+a[k])%3==0)); then\n                    ((count++))\n\
    \                fi\n            done\n        done\n    done\n    echo $count",
  "    local n=$1\n    local a=()\n    local i=0\n    local j=0\n    local k=0\n \
    \   local count=0\n    for ((i=1; i<=n; i++)); do\n        a[$i]=$((i*i-i+1))\n\
    \    done\n    for ((i=1; i<=n; i++)); do\n        for ((j=i+1; j<=n; j++)); do\n\
    \            for ((k=j+1; k<=n; k++)); do\n                if [[ $((${a[$i]}+${a[$j]}+${a[$k]}))%3\
    \ -eq 0 ]]; then\n                    ((count++))\n                fi\n      \
    \      done\n        done\n    done\n    echo $count", "    local -n arr=$1\n\
    \    local -i i j k\n    local -i count=0\n    for ((i=0; i<${#arr[@]}; i++));\
    \ do\n        for ((j=i+1; j<${#arr[@]}; j++)); do\n            for ((k=j+1; k<${#arr[@]};\
    \ k++)); do\n                if [[ $((${arr[i]} + ${arr[j]} + ${arr[k]}))%3 -eq\
    \ 0 ]]; then\n                    ((count++))\n                fi\n          \
    \  done\n        done\n    done\n    echo $count", "    local -i n=$1\n    local\
    \ -i i j k\n    local -i count=0\n    for ((i=1; i<n-1; i++)); do\n        for\
    \ ((j=i+1; j<n; j++)); do\n            for ((k=j+1; k<=n; k++)); do\n        \
    \        if (((i*i-i+1+j*j-j+1+k*k-k+1)%3==0)); then\n                    ((count++))\n\
    \                fi\n            done\n        done\n    done\n    echo $count",
  "    local -n arr=$1\n    local -i sum=0\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i n=${#arr[@]}\n    local -i count=0\n    for ((i=0;\
    \ i<n; i++)); do\n        for ((j=i+1; j<n; j++)); do\n            for ((k=j+1;\
    \ k<n; k++)); do\n                sum=$((arr[i]+arr[j]+arr[k]))\n            \
    \    if ((sum%3==0)); then\n                    ((count++))\n                fi\n\
    \            done\n        done\n    done\n    echo $count", "    local n=$1\n\
    \    local a=()\n    local i=0\n    local j=0\n    local k=0\n    local count=0\n\
    \    for ((i=1; i<=n; i++)); do\n        a[i]=$((i*i-i+1))\n    done\n    for\
    \ ((i=1; i<=n; i++)); do\n        for ((j=i+1; j<=n; j++)); do\n            for\
    \ ((k=j+1; k<=n; k++)); do\n                if [[ $((a[i]+a[j]+a[k]))%3 -eq 0\
    \ ]]; then\n                    ((count++))\n                fi\n            done\n\
    \        done\n    done\n    echo \"$count\"", "    local -i n=$1\n    local -i\
    \ i j k\n    local -i count=0\n    for ((i=1; i<n-1; i++)); do\n        for ((j=i+1;\
    \ j<n; j++)); do\n            for ((k=j+1; k<=n; k++)); do\n                if\
    \ (((i*i-i+1+j*j-j+1+k*k-k+1)%3==0)); then\n                    ((count++))\n\
    \                fi\n            done\n        done\n    done\n    echo $count",
  "    local n=$1\n    local a=()\n    local count=0\n    for ((i=1; i<=n; i++));\
    \ do\n        a+=($((i*i-i+1)))\n    done\n    for ((i=0; i<n-2; i++)); do\n \
    \       for ((j=i+1; j<n-1; j++)); do\n            for ((k=j+1; k<n; k++)); do\n\
    \                if [[ $((a[i]+a[j]+a[k]))%3 -eq 0 ]]; then\n                \
    \    ((count++))\n                fi\n            done\n        done\n    done\n\
    \    echo $count", "    local n=$1\n    local a=()\n    local count=0\n    for\
    \ ((i=1; i<=n; i++)); do\n        a[i]=$((i*i-i+1))\n    done\n    for ((i=1;\
    \ i<=n; i++)); do\n        for ((j=i+1; j<=n; j++)); do\n            for ((k=j+1;\
    \ k<=n; k++)); do\n                if [[ $((a[i]+a[j]+a[k]))%3 -eq 0 ]]; then\n\
    \                    ((count++))\n                fi\n            done\n     \
    \   done\n    done\n    echo $count", "    local n=$1\n    local a=()\n    local\
    \ count=0\n    for ((i=1; i<=n; i++)); do\n        a[i]=$((i*i-i+1))\n    done\n\
    \    for ((i=1; i<=n; i++)); do\n        for ((j=i+1; j<=n; j++)); do\n      \
    \      for ((k=j+1; k<=n; k++)); do\n                if [[ $((a[i]+a[j]+a[k]))%3\
    \ -eq 0 ]]; then\n                    ((count++))\n                fi\n      \
    \      done\n        done\n    done\n    echo $count", "    local n=$1\n    local\
    \ a=()\n    local i=0\n    local j=0\n    local k=0\n    local count=0\n    for\
    \ ((i=1; i<=n; i++)); do\n        a[$i]=$((i*i-i+1))\n    done\n    for ((i=1;\
    \ i<=n; i++)); do\n        for ((j=i+1; j<=n; j++)); do\n            for ((k=j+1;\
    \ k<=n; k++)); do\n                if (((a[i]+a[j]+a[k])%3==0)); then\n      \
    \              ((count++))\n                fi\n            done\n        done\n\
    \    done\n    echo $count", "    local n=$1\n    local a=()\n    local count=0\n\
    \    for ((i=1; i<=n; i++)); do\n        a[i]=$((i*i-i+1))\n    done\n    for\
    \ ((i=1; i<=n; i++)); do\n        for ((j=i+1; j<=n; j++)); do\n            for\
    \ ((k=j+1; k<=n; k++)); do\n                if [[ $((a[i]+a[j]+a[k]))%3 -eq 0\
    \ ]]; then\n                    ((count++))\n                fi\n            done\n\
    \        done\n    done\n    echo $count", "    local n=$1\n    local a=()\n \
    \   local i=0\n    local j=0\n    local k=0\n    local count=0\n    for ((i=1;\
    \ i<=n; i++)); do\n        a[$i]=$((i*i-i+1))\n    done\n    for ((i=1; i<=n;\
    \ i++)); do\n        for ((j=i+1; j<=n; j++)); do\n            for ((k=j+1; k<=n;\
    \ k++)); do\n                if [[ $((a[$i]+a[$j]+a[$k]))%3 -eq 0 ]]; then\n \
    \                   count=$((count+1))\n                fi\n            done\n\
    \        done\n    done\n    echo $count", "    local n=$1\n    local a=()\n \
    \   local count=0\n    for ((i=1; i<=n; i++)); do\n        a[i]=$((i*i-i+1))\n\
    \    done\n    for ((i=1; i<=n; i++)); do\n        for ((j=i+1; j<=n; j++)); do\n\
    \            for ((k=j+1; k<=n; k++)); do\n                if [[ $((a[i]+a[j]+a[k]))%3\
    \ -eq 0 ]]; then\n                    ((count++))\n                fi\n      \
    \      done\n        done\n    done\n    echo $count", "    local n=$1\n    local\
    \ a=()\n    local i=0\n    local j=0\n    local k=0\n    local count=0\n    for\
    \ ((i=1; i<=n; i++)); do\n        a[i]=$((i*i-i+1))\n    done\n    for ((i=1;\
    \ i<=n; i++)); do\n        for ((j=i+1; j<=n; j++)); do\n            for ((k=j+1;\
    \ k<=n; k++)); do\n                if [[ $((${a[i]}+${a[j]}+${a[k]}))%3 -eq 0\
    \ ]]; then\n                    ((count++))\n                fi\n            done\n\
    \        done\n    done\n    echo $count", "    local n=$1\n    local a=()\n \
    \   local count=0\n    for ((i=1; i<=n; i++)); do\n        a[i]=$((i*i-i+1))\n\
    \    done\n    for ((i=1; i<=n; i++)); do\n        for ((j=i+1; j<=n; j++)); do\n\
    \            for ((k=j+1; k<=n; k++)); do\n                if (( (a[i]+a[j]+a[k])%3\
    \ == 0 )); then\n                    ((count++))\n                fi\n       \
    \     done\n        done\n    done\n    echo \"$count\""]
stop_tokens:
- "\n}"

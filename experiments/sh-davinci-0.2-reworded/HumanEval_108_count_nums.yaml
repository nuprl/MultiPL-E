name: HumanEval_108_count_nums
language: sh
prompt: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
  \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a number\
  \ is negative, then its first signed digit will be negative:\n# e.g. -123 has signed\
  \ digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums \"\
  -1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is a space-separated\
  \ list\ncount_nums() {\n"
tests: "}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n   \
  \ [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n\
  \    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6\
  \ 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n   \
  \ [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\"\
  ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
completions: ["  local nums=\"$1\"\n  local num\n  local sum\n  local count=0\n  for\
    \ num in $nums; do\n    sum=0\n    while [ $num -ne 0 ]; do\n      sum=$((sum\
    \ + num % 10))\n      num=$((num / 10))\n    done\n    if [ $sum -gt 0 ]; then\n\
    \      count=$((count + 1))\n    fi\n  done\n  echo $count", "  local nums=($1)\n\
    \  local count=0\n  for num in \"${nums[@]}\"; do\n    local sum=0\n    local\
    \ abs_num=${num#-}\n    while (( abs_num > 0 )); do\n      sum=$(( sum + abs_num\
    \ % 10 ))\n      abs_num=$(( abs_num / 10 ))\n    done\n    (( sum > 0 )) && ((\
    \ count++ ))\n  done\n  echo \"$count\"", "    local sum=0\n    local count=0\n\
    \    for num in $1; do\n        if [[ $num -lt 0 ]]; then\n            num=${num:1}\n\
    \        fi\n        while [[ $num -gt 0 ]]; do\n            sum=$((sum + num\
    \ % 10))\n            num=$((num / 10))\n        done\n        if [[ $sum -gt\
    \ 0 ]]; then\n            count=$((count + 1))\n        fi\n        sum=0\n  \
    \  done\n    echo $count", "    local -a nums=($1)\n    local count=0\n    for\
    \ num in \"${nums[@]}\"; do\n        local sum=0\n        for (( i=0; i<${#num};\
    \ i++ )); do\n            local digit=${num:$i:1}\n            if [[ \"$digit\"\
    \ == \"-\" ]]; then\n                continue\n            fi\n            ((\
    \ sum += digit ))\n        done\n        (( sum > 0 )) && (( count++ ))\n    done\n\
    \    echo \"$count\"", "    local -a arr=($1)\n    local -i count=0\n    for i\
    \ in \"${arr[@]}\"; do\n        local -i sum=0\n        local -i num=$i\n    \
    \    while ((num != 0)); do\n            local -i digit=$((num % 10))\n      \
    \      sum=$((sum + digit))\n            num=$((num / 10))\n        done\n   \
    \     if ((sum > 0)); then\n            count=$((count + 1))\n        fi\n   \
    \ done\n    echo $count", "    local sum=0\n    local count=0\n    for num in\
    \ $1; do\n        sum=0\n        for (( i=0; i<${#num}; i++ )); do\n         \
    \   sum=$(( sum + ${num:$i:1} ))\n        done\n        if (( sum > 0 )); then\n\
    \            count=$(( count + 1 ))\n        fi\n    done\n    echo $count", " \
    \   local nums=($1)\n    local count=0\n    for num in \"${nums[@]}\"; do\n  \
    \      local sum=0\n        local digits=($(echo \"$num\" | sed 's/-//g' | grep\
    \ -o .))\n        for digit in \"${digits[@]}\"; do\n            sum=$((sum +\
    \ digit))\n        done\n        if [[ $sum -gt 0 ]]; then\n            count=$((count\
    \ + 1))\n        fi\n    done\n    echo \"$count\"", "  local nums=\"$1\"\n  local\
    \ count=0\n  for num in $nums; do\n    local sum=0\n    for (( i=0; i<${#num};\
    \ i++ )); do\n      local digit=${num:$i:1}\n      if [[ $digit == '-' ]]; then\n\
    \        continue\n      fi\n      sum=$(( sum + digit ))\n    done\n    if [[\
    \ $sum -gt 0 ]]; then\n      count=$(( count + 1 ))\n    fi\n  done\n  echo $count",
  "    local sum=0\n    for i in $1; do\n        if [ $i -lt 0 ]; then\n         \
    \   i=$((-i))\n        fi\n        while [ $i -gt 0 ]; do\n            sum=$((sum\
    \ + i % 10))\n            i=$((i / 10))\n        done\n        if [ $sum -gt 0\
    \ ]; then\n            echo -n \"$((echo -n $1 | wc -w)) \"\n            return\n\
    \        fi\n    done\n    echo -n \"0 \"", "  local count=0\n  for i in $1; do\n\
    \    local sum=0\n    for (( j=0; j<${#i}; j++ )); do\n      (( sum += ${i:$j:1}\
    \ ))\n    done\n    (( sum > 0 )) && (( count++ ))\n  done\n  echo $count", " \
    \   local nums=($1)\n    local count=0\n    for num in \"${nums[@]}\"; do\n  \
    \      local sum=0\n        for (( i=0; i<${#num}; i++ )); do\n            local\
    \ digit=${num:$i:1}\n            if [[ $digit =~ ^[0-9]$ ]]; then\n          \
    \      (( sum += digit ))\n            elif [[ $digit =~ ^[-]$ ]]; then\n    \
    \            (( sum -= ${num:$((i+1)):1} ))\n            fi\n        done\n  \
    \      if (( sum > 0 )); then\n            (( count++ ))\n        fi\n    done\n\
    \    echo $count", "    local sum=0\n    local count=0\n    for num in $1; do\n\
    \        if [ $num -lt 0 ]; then\n            num=$((-$num))\n        fi\n   \
    \     while [ $num -gt 0 ]; do\n            sum=$((sum + num % 10))\n        \
    \    num=$((num / 10))\n        done\n        if [ $sum -gt 0 ]; then\n      \
    \      count=$((count + 1))\n        fi\n        sum=0\n    done\n    echo $count",
  "    local nums=($1)\n    local count=0\n    for num in \"${nums[@]}\"; do\n   \
    \     local sum=0\n        for (( i=0; i<${#num}; i++ )); do\n            local\
    \ digit=${num:$i:1}\n            if [[ $digit == \"-\" ]]; then\n            \
    \    continue\n            fi\n            (( sum += digit ))\n        done\n\
    \        if (( sum > 0 )); then\n            (( count++ ))\n        fi\n    done\n\
    \    echo $count", "  local nums=($1)\n  local count=0\n  for num in \"${nums[@]}\"\
    ; do\n    local sum=0\n    for (( i=0; i<${#num}; i++ )); do\n      local digit=${num:$i:1}\n\
    \      if [[ $digit =~ ^[0-9]$ ]]; then\n        (( sum += digit ))\n      elif\
    \ [[ $digit =~ ^[-]$ ]]; then\n        (( sum -= ${num:$((i+1)):1} ))\n      fi\n\
    \    done\n    if (( sum > 0 )); then\n      (( count++ ))\n    fi\n  done\n \
    \ echo $count", "    local sum=0\n    local count=0\n    for i in $1; do\n   \
    \     sum=0\n        for (( j=0; j<${#i}; j++ )); do\n            sum=$(( sum\
    \ + ${i:$j:1} ))\n        done\n        if (( sum > 0 )); then\n            count=$((\
    \ count + 1 ))\n        fi\n    done\n    echo $count", "  local sum=0\n  local\
    \ count=0\n  for i in $1; do\n    sum=0\n    for (( j=0; j<${#i}; j++ )); do\n\
    \      sum=$(( sum + ${i:$j:1} ))\n    done\n    if (( sum > 0 )); then\n    \
    \  count=$(( count + 1 ))\n    fi\n  done\n  echo $count", "    local -a arr=($1)\n\
    \    local -i sum=0\n    local -i i=0\n    local -i count=0\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -lt 0 ]]; then\n            i=$((-i))\n        fi\n   \
    \     while [[ $i -gt 0 ]]; do\n            sum=$((sum + i % 10))\n          \
    \  i=$((i / 10))\n        done\n        if [[ $sum -gt 0 ]]; then\n          \
    \  count=$((count + 1))\n        fi\n        sum=0\n    done\n    echo $count",
  "    local sum=0\n    local count=0\n    for num in $1; do\n        if [[ $num -lt\
    \ 0 ]]; then\n            sum=$((sum + num % 10))\n        else\n            sum=$((sum\
    \ + num))\n        fi\n        if [[ $sum -gt 0 ]]; then\n            count=$((count\
    \ + 1))\n        fi\n    done\n    echo $count", "    local nums=\"$1\"\n    local\
    \ count=0\n    local num\n    for num in $nums; do\n        local sum=0\n    \
    \    local digit\n        for digit in $(echo $num | sed -e 's/-//g'); do\n  \
    \          sum=$((sum + digit))\n        done\n        if [ $sum -gt 0 ]; then\n\
    \            count=$((count + 1))\n        fi\n    done\n    echo $count", " \
    \   local sum=0\n    for n in $1; do\n        if [ $n -lt 0 ]; then\n        \
    \    n=$((-n))\n        fi\n        while [ $n -gt 0 ]; do\n            sum=$((sum\
    \ + n % 10))\n            n=$((n / 10))\n        done\n        if [ $sum -gt 0\
    \ ]; then\n            echo -n 1\n        else\n            echo -n 0\n      \
    \  fi\n    done | grep -c 1"]
stop_tokens:
- "\n}"

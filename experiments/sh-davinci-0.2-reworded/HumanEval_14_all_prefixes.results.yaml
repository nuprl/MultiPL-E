language: sh
name: HumanEval_14_all_prefixes
results:
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefix\n    local result=()\n    for ((i=0; i<len; i++));\
    \ do\n        prefix=${str:0:$((i+1))}\n        result+=(\"\\\"$prefix\\\"\")\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local string=$1\n    local prefixes=()\n\
    \    for ((i=0; i<${#string}; i++)); do\n        prefixes+=(\"\\\"${string:0:$i}\\\
    \"\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefix\n    local result=()\n    for ((i=0; i<len; i++));\
    \ do\n        prefix=${str:0:$((i+1))}\n        result+=(\"\\\"$prefix\\\"\")\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n      \
    \  prefixes+=(\"\\\"${str:0:i}\\\"\")\n    done\n    echo \"${prefixes[@]}\"\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local input=\"$1\"\n    local output=\"\
    [\"\n    for (( i=0; i<${#input}; i++ )); do\n        output+='\"'\n        output+=${input:0:$((i+1))}\n\
    \        output+='\"'\n        if (( i < ${#input} - 1 )); then\n            output+=\"\
    , \"\n        fi\n    done\n    output+=\"]\"\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n      \
    \  prefixes+=(\"\\\"${str:0:i}\\\"\")\n    done\n    echo \"${prefixes[@]}\"\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local out=()\n    for (( i=1; i<=$len; i++ )); do\n        out+=(\"\\\"${str:0:i}\\\
    \"\")\n    done\n    echo \"${out[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local res=()\n    for ((i=1; i<=len; i++)); do\n        res+=(\"\
    \\\"${str:0:i}\\\"\")\n    done\n    echo \"${res[@]}\"\n}\n\ncandidate() {\n\
    \    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local result=()\n    for ((i=1; i<=len; i++)); do\n        result+=(\"\
    \\\"${str:0:i}\\\"\")\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n\
    \    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n\
    \    local i\n    local prefixes\n    for ((i=1; i<=len; i++)); do\n        prefixes=\"\
    $prefixes \\\"${str:0:i}\\\"\"\n    done\n    echo \"[$prefixes]\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n\
    \    local i\n    local res=()\n    for ((i=1; i<=len; i++)); do\n        res+=(\"\
    \\\"${str:0:i}\\\"\")\n    done\n    echo \"${res[@]}\"\n}\n\ncandidate() {\n\
    \    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local res=()\n    for ((i=1; i<=len; i++)); do\n        res+=(\"\
    \\\"${str:0:i}\\\"\")\n    done\n    echo \"${res[@]}\"\n}\n\ncandidate() {\n\
    \    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local string=\"$1\"\n    local\
    \ -a prefixes\n    for ((i=0; i<${#string}; i++)); do\n        prefixes+=($(printf\
    \ '\"%s\"' \"${string:0:i+1}\"))\n    done\n    echo \"${prefixes[@]}\"\n}\n\n\
    candidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local result=()\n    for ((i=1; i<=len; i++)); do\n        result+=(\"\
    \\\"${str:0:i}\\\"\")\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n\
    \    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefix\n    local result=()\n    for ((i=0; i<len; i++));\
    \ do\n        prefix=\"${str:0:$((i+1))}\"\n        result+=($(json_quote \"$prefix\"\
    ))\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwfoh96ol.sh: line 15: json_quote: command not found

    /tmp/tmpwfoh96ol.sh: line 15: json_quote: command not found

    /tmp/tmpwfoh96ol.sh: line 15: json_quote: command not found

    /tmp/tmpwfoh96ol.sh: line 15: json_quote: command not found

    /tmp/tmpwfoh96ol.sh: line 15: json_quote: command not found

    /tmp/tmpwfoh96ol.sh: line 15: json_quote: command not found

    '
  stdout: ''
  timestamp: 1660012786
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefix\n    local result=()\n    for ((i=0; i<len; i++));\
    \ do\n        prefix=\"$(echo \"$str\" | cut -c -$((i+1)))\"\n        result+=(\"\
    $prefix\")\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=$((${#str}\
    \ - 1))\n    local i\n    local prefix\n    local result=()\n    for ((i=0; i<=len;\
    \ i++)); do\n        prefix=\"${str:0:$((i+1))}\"\n        result+=(\"\\\"$prefix\\\
    \"\")\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefix\n    local result=()\n    for ((i=1; i<=len; i++));\
    \ do\n        prefix=\"$(echo \"$str\" | cut -c1-$i)\"\n        result+=(\"\\\"\
    $prefix\\\"\")\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefixes\n    for ((i=1; i<=len; i++)); do\n        prefixes+=\"\
    \\\"${str:0:i}\\\", \"\n    done\n    echo \"[${prefixes%, }]\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    for ((i=1; i<=len; i++)); do\n        echo \"\\\"${str:0:i}\\\
    \"\"\n    done\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local out=()\n    for ((i=1; i<=len; i++)); do\n        out+=(\"\
    \\\"${str:0:i}\\\"\")\n    done\n    echo \"${out[@]}\"\n}\n\ncandidate() {\n\
    \    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n      \
    \  prefixes+=(\"\\\"${str:0:i}\\\"\")\n    done\n    echo \"${prefixes[@]}\"\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i=0\n    local prefixes=()\n    while [ $i -lt $len ]; do\n       \
    \ prefixes+=(\"\\\"${str:0:$i}\\\"\")\n        i=$((i+1))\n    done\n    echo\
    \ \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\"\
    ) = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i=0\n    local prefixes=()\n    while [ $i -lt $len ]; do\n       \
    \ prefixes+=(\"\\\"${str:0:$((i+1))}\\\"\")\n        i=$((i+1))\n    done\n  \
    \  echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"\
    W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local result=()\n    for ((i=1; i<=len; i++)); do\n        result+=(\"\
    \\\"${str:0:i}\\\"\")\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n\
    \    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=$((${#str}\
    \ - 1))\n    local i\n    local prefixes=()\n    for ((i=0; i<=len; i++)); do\n\
    \        prefixes+=(\"\\\"${str:0:$i}\\\"\")\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local string=\"$1\"\n    local\
    \ len=${#string}\n    local i\n    local prefix\n    local result=()\n    for\
    \ ((i=0; i<len; i++)); do\n        prefix=${string:0:$((i+1))}\n        result+=(\"\
    \\\"$prefix\\\"\")\n    done\n    echo \"[${result[*]}]\"\n}\n\ncandidate() {\n\
    \    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n\
    \    local i\n    local prefix\n    local result=()\n    for ((i=0; i<len; i++));\
    \ do\n        prefix=${str:0:$((i+1))}\n        result+=($(printf '\"%s\"' \"\
    $prefix\"))\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n\
    \    local i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n      \
    \  prefixes+=(\"\\\"${str:0:i}\\\"\")\n    done\n    echo \"${prefixes[@]}\"\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n      \
    \  prefixes+=(\"\\\"${str:0:i}\\\"\")\n    done\n    echo \"${prefixes[@]}\"\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local result=()\n    for ((i=1; i<=len; i++)); do\n        result+=(\"\
    \\\"${str:0:i}\\\"\")\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n\
    \    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local -a\
    \ prefixes\n    for ((i=0; i<${#str}; i++)); do\n        prefixes+=(\"\\\"${str:0:i+1}\\\
    \"\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefix\n    local result=()\n    for ((i=1; i<=len; i++));\
    \ do\n        prefix=\"$(echo \"$str\" | cut -c1-$i)\"\n        result+=(\"\\\"\
    $prefix\\\"\")\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local string=\"$1\"\n    local\
    \ result=()\n    for ((i=0; i<${#string}; i++)); do\n        result+=(\"\\\"${string:0:$((i+1))}\\\
    \"\")\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local prefixes=()\n\
    \    for (( i=0; i<${#str}; i++ )); do\n        prefixes+=(\"\\\"${str:0:$i}\\\
    \"\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local string=$1\n    local length=${#string}\n\
    \    local prefixes=()\n    for ((i=1; i<=length; i++)); do\n        prefixes+=($(printf\
    \ '\"%s\"' \"${string:0:i}\"))\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n      \
    \  prefixes+=(\"$(printf '\"%s\"' \"${str:0:i}\")\")\n    done\n    printf '[%s]'\
    \ \"$(join_by , \"${prefixes[@]}\")\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpswnsusg5.sh: line 15: join_by: command not found

    '
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefix\n    local result=()\n    for ((i=0; i<len; i++));\
    \ do\n        prefix=\"${str:0:$((i+1))}\"\n        result+=(\"\\\"$prefix\\\"\
    \")\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n  local str=\"$1\"\n  local len=${#str}\n\
    \  local i\n  local prefix\n  local result=()\n  for ((i=1; i<=len; i++)); do\n\
    \    prefix=\"$(echo \"$str\" | cut -c -$i)\"\n    result+=(\"$prefix\")\n  done\n\
    \  echo \"${result[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"\
    W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefixes\n    for ((i=1; i<=len; i++)); do\n        prefixes=\"\
    $prefixes \\\"${str:0:i}\\\"\"\n    done\n    echo \"[$prefixes]\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n\
    \    local i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n      \
    \  prefixes+=($(printf '\"%s\"' \"${str:0:i}\"))\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n\
    \    local prefixes=()\n    for (( i=1; i<=len; i++ )); do\n        prefixes+=($(printf\
    \ '\"%s\"' \"${str:0:i}\"))\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local str_len=${#str}\n\
    \    local i\n    local prefix\n    local result=()\n    for ((i=1; i<=str_len;\
    \ i++)); do\n        prefix=\"$(echo \"$str\" | cut -c1-\"$i\")\"\n        result+=(\"\
    \\\"$prefix\\\"\")\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n\
    \    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n\
    \    local i=0\n    local res=()\n    while [ $i -lt $len ]; do\n        res+=(\"\
    \\\"${str:0:$i}\\\"\")\n        i=$((i+1))\n    done\n    echo \"${res[@]}\"\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local string=$1\n    local length=${#string}\n\
    \    local result=()\n    for ((i=1; i<=length; i++)); do\n        result+=(\"\
    \\\"${string:0:i}\\\"\")\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local prefixes=()\n\
    \    for ((i=0; i<${#str}; i++)); do\n        prefixes+=(\"\\\"${str:0:$((i+1))}\\\
    \"\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n\
    \    local i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n      \
    \  prefixes+=(\"\\\"${str:0:i}\\\"\")\n    done\n    echo \"${prefixes[@]}\"\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n\
    \    local i\n    local prefix\n    local result=()\n    for ((i=0; i<len; i++));\
    \ do\n        prefix=${str:0:$((i+1))}\n        result+=(\"\\\"$prefix\\\"\")\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefix\n    local prefixes=()\n    for ((i=0; i<len; i++));\
    \ do\n        prefix=${str:0:$((i+1))}\n        prefixes+=(\"\\\"$prefix\\\"\"\
    )\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n\
    \    local i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n      \
    \  prefixes+=($(printf '\"%s\"' \"${str:0:i}\"))\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i=0\n    local prefixes=()\n    while [ $i -lt $len ]; do\n       \
    \ prefixes+=(\"\\\"${str:0:$i}\\\"\")\n        ((i++))\n    done\n    echo \"\
    ${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local out=()\n    for ((i=1; i<=len; i++)); do\n        out+=(\"\\\"${str:0:i}\\\
    \"\")\n    done\n    echo \"${out[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefix\n\n    for ((i=0; i<len; i++)); do\n        prefix=\"\
    ${str:0:$((i+1))}\"\n        echo \"\\\"$prefix\\\"\"\n    done\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n      \
    \  prefixes+=(\"$(printf '\"%s\"' \"${str:0:i}\")\")\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local input=$1\n    local output=()\n\
    \    for ((i=0; i<${#input}; i++)); do\n        output+=(\"\\\"${input:0:$((i+1))}\\\
    \"\")\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local input=$1\n    local output=()\n\
    \    for ((i=0; i<${#input}; i++)); do\n        output+=($(printf '\"%s\"' \"\
    ${input:0:$((i+1))}\"))\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n  local str=\"$1\"\n  local len=${#str}\n\
    \  local i\n  local prefixes=()\n  for ((i=1; i<=len; i++)); do\n    prefixes+=(\"\
    \\\"${str:0:i}\\\"\")\n  done\n  echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n\
    \    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n      \
    \  prefixes+=(\"$(printf '\"%s\"' \"${str:0:i}\")\")\n    done\n    echo \"[${prefixes[*]}]\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local i=0\n\
    \    local len=${#str}\n    local res=()\n    while [ $i -lt $len ]; do\n    \
    \    res+=(\"\\\"${str:0:$i}\\\"\")\n        i=$((i+1))\n    done\n    echo \"\
    ${res[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local string=$1\n    local length=${#string}\n\
    \    local i\n    local prefix\n    local result=()\n    for ((i=1; i<=length;\
    \ i++)); do\n        prefix=${string:0:i}\n        result+=($prefix)\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"\
    W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n      \
    \  prefixes+=(\"$(printf '\"%s\"' \"${str:0:i}\")\")\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local prefixes=()\n    for ((i=0;\
    \ i<${#1}; i++)); do\n        prefixes+=(\"\\\"${1:0:i+1}\\\"\")\n    done\n \
    \   echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"\
    W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=$1\n    local prefixes=()\n\
    \    for ((i=0; i<${#str}; i++)); do\n        prefixes+=(\"\\\"${str:0:$((i+1))}\\\
    \"\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n\
    \    local i\n    local prefixes\n    for ((i=1; i<=len; i++)); do\n        prefixes+=\"\
    $(printf '\"%s\" ' \"${str:0:i}\")\"\n    done\n    echo \"[$prefixes]\"\n}\n\n\
    candidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    for ((i=1; i<=len; i++)); do\n        echo \"\\\"${str:0:i}\\\
    \"\"\n    done\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n\
    \    local i=0\n    local prefixes=()\n    while [ $i -lt $len ]; do\n       \
    \ prefixes+=(\"\\\"${str:0:$i}\\\"\")\n        i=$((i+1))\n    done\n    echo\
    \ \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\"\
    ) = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local prefixes=()\n\
    \    for ((i=0; i<${#str}; i++)); do\n        prefixes+=(\"$(printf '\"%s\"' \"\
    ${str:0:i+1}\")\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n\
    \    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n\
    \    local i\n    local prefix\n    local result=()\n    for ((i=0; i<len; i++));\
    \ do\n        prefix=${str:0:$((i+1))}\n        result+=($(printf '\"%s\"' \"\
    $prefix\"))\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n      \
    \  prefixes+=(\"\\\"${str:0:i}\\\"\")\n    done\n    echo \"${prefixes[@]}\"\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefixes\n    for ((i=1; i<=len; i++)); do\n        prefixes=\"\
    $prefixes \\\"${str:0:i}\\\"\"\n    done\n    echo \"[$prefixes]\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local string=\"$1\"\n    local\
    \ prefixes=()\n    for ((i=0; i<${#string}; i++)); do\n        prefixes+=(\"\\\
    \"${string:0:$((i+1))}\\\"\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefix\n    local result=\"\"\n    for ((i=1; i<=len;\
    \ i++)); do\n        prefix=\"$(echo \"$str\" | cut -c1-$i)\"\n        result=\"\
    $result,\\\"$prefix\\\"\"\n    done\n    echo \"[${result:1}]\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n      \
    \  prefixes+=(\"\\\"${str:0:i}\\\"\")\n    done\n    echo \"[${prefixes[*]}]\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local input=\"$1\"\n    local result=\"\
    \"\n    for ((i=0; i < ${#input}; i++)); do\n        result+=\"\\\"${input:0:$i+1}\\\
    \", \"\n    done\n    echo \"[${result%%, }]\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n\
    \    local i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n      \
    \  prefixes+=(\"\\\"${str:0:i}\\\"\")\n    done\n    echo \"${prefixes[@]}\"\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=$((${#str}-1))\n\
    \    local i=0\n    local result=\"\"\n    while [ $i -le $len ]; do\n       \
    \ result=\"$result \\\"${str:0:$i}\\\"\"\n        i=$((i+1))\n    done\n    echo\
    \ \"[$result]\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i=0\n    local prefixes=()\n    while [ $i -lt $len ]; do\n       \
    \ prefixes+=(\"\\\"${str:0:$((i+1))}\\\"\")\n        i=$((i+1))\n    done\n  \
    \  echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"\
    W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local prefixes=()\n\
    \    for (( i=0; i<${#str}; i++ )); do\n        prefixes+=(\"\\\"${str:0:$((i+1))}\\\
    \"\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n      \
    \  prefixes+=(\"\\\"${str:0:i}\\\"\")\n    done\n    echo \"${prefixes[@]}\"\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n      \
    \  prefixes+=(\"$(printf '\"%s\"' \"${str:0:i}\")\")\n    done\n    printf '%s\\\
    n' \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\"\
    ) = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local prefixes=()\n\
    \    for (( i=0; i<${#str}; i++ )); do\n        prefixes+=(\"\\\"${str:0:$((i+1))}\\\
    \"\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n      \
    \  prefixes+=(\"$(printf '\"%s\"' \"${str:0:i}\")\")\n    done\n    printf '%s\\\
    n' \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\"\
    ) = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n      \
    \  prefixes+=(\"$(printf '\"%s\"' \"${str:0:i}\")\")\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local string=$1\n    local length=${#string}\n\
    \    local i=0\n    local result=()\n    while [ $i -lt $length ]; do\n      \
    \  result+=($(printf '\"%s\"' \"${string:0:$((i+1))}\"))\n        i=$((i+1))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local out=()\n    for ((i=0; i<len; i++)); do\n        out+=(\"\
    $(printf '\"%s\"' \"${str:0:i+1}\")\")\n    done\n    echo \"${out[@]}\"\n}\n\n\
    candidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local string=\"$1\"\n    local\
    \ prefixes=()\n    for ((i=0; i<${#string}; i++)); do\n        prefixes+=(\"\\\
    \"${string:0:$((i+1))}\\\"\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n\
    \    local i\n    local prefixes\n    for ((i=1; i<=len; i++)); do\n        prefixes+=($(printf\
    \ '\"%s\"' \"${str:0:i}\"))\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n  local str=\"$1\"\n  local len=${#str}\n\
    \  local i\n  local result=()\n  for ((i=1; i<=len; i++)); do\n    result+=(\"\
    \\\"${str:0:i}\\\"\")\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n \
    \   all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n      \
    \  prefixes+=(\"\\\"${str:0:i}\\\"\")\n    done\n    echo \"${prefixes[@]}\"\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n      \
    \  prefixes+=(\"\\\"${str:0:i}\\\"\")\n    done\n    echo \"${prefixes[@]}\"\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefix\n    local result=()\n    for ((i=0; i<len; i++));\
    \ do\n        prefix=${str:0:$((i+1))}\n        result+=(\"\\\"$prefix\\\"\")\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n\
    \    local i\n    local prefixes\n    for ((i=1; i<=len; i++)); do\n        prefixes+=\"\
    $(printf '\"%s\" ' \"${str:0:i}\")\"\n    done\n    echo \"[$prefixes]\"\n}\n\n\
    candidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i=0\n    local prefixes=()\n    while [ $i -lt $len ]; do\n       \
    \ prefixes+=(\"\\\"${str:0:$((i+1))}\\\"\")\n        i=$((i+1))\n    done\n  \
    \  echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"\
    W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n      \
    \  prefixes+=(\"$(printf '\"%s\"' \"${str:0:i}\")\")\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n  local str=$1\n  local len=${#str}\n\
    \  local i=0\n  local prefixes=()\n  while [ $i -lt $len ]; do\n    prefixes+=($(printf\
    \ '\"%s\"' \"${str:0:$((i+1))}\"))\n    i=$((i+1))\n  done\n  echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local prefixes=()\n\
    \    for ((i=0; i<${#str}; i++)); do\n        prefixes+=(\"$(printf '\"%s\"' \"\
    ${str:0:i+1}\")\")\n    done\n    printf \"%s\\n\" \"${prefixes[@]}\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local string=\"$1\"\n    local\
    \ -a prefixes\n    for ((i=0; i<${#string}; i++)); do\n        prefixes+=(\"\\\
    \"${string:0:$((i+1))}\\\"\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local prefixes=()\n\
    \    for ((i=0; i<${#str}; i++)); do\n        prefixes+=(\"\\\"${str:0:$((i+1))}\\\
    \"\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefix\n    local result=()\n    for ((i=0; i<len; i++));\
    \ do\n        prefix=\"${str:0:$((i+1))}\"\n        result+=(\"\\\"$prefix\\\"\
    \")\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    for ((i=1; i<=len; i++)); do\n        echo \"\\\"${str:0:i}\\\
    \"\"\n    done\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=\"\
    ${#str}\"\n    local i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n\
    \        prefixes+=(\"\\\"${str:0:i}\\\"\")\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n      \
    \  prefixes+=(\"\\\"${str:0:i}\\\"\")\n    done\n    echo \"[${prefixes[*]}]\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local result=\"\
    \"\n    local i=0\n    local len=${#str}\n    while [ $i -lt $len ]; do\n    \
    \    result=\"$result \\\"${str:0:$i}\\\"\"\n        i=$((i+1))\n    done\n  \
    \  echo \"$result\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\"\
    ) = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i=0\n    local prefixes=()\n    while [ $i -lt $len ]; do\n       \
    \ prefixes+=(\"\\\"${str:0:$((i+1))}\\\"\")\n        i=$((i+1))\n    done\n  \
    \  echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"\
    W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local res=()\n    for ((i=1; i<=len; i++)); do\n        res+=(\"\
    \\\"${str:0:i}\\\"\")\n    done\n    echo \"${res[@]}\"\n}\n\ncandidate() {\n\
    \    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n\
    \    local i\n    for ((i=1; i<=len; i++)); do\n        echo \"\\\"${str:0:i}\\\
    \"\"\n    done\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefixes\n    for ((i=1; i<=len; i++)); do\n        prefixes+=\"\
    \\\"${str:0:i}\\\", \"\n    done\n    echo \"[${prefixes%, }]\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n  local str=\"$1\"\n  local len=${#str}\n\
    \  local i\n  for ((i=1; i<=len; i++)); do\n    echo \"\\\"${str:0:i}\\\"\"\n\
    \  done\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local string=$1\n    local length=${#string}\n\
    \    local prefixes=()\n    for ((i=1; i<=length; i++)); do\n        prefixes+=(\"\
    \\\"${string:0:i}\\\"\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local string=\"$1\"\n    local\
    \ prefixes=()\n    local i=0\n    while [ $i -lt ${#string} ]; do\n        prefixes+=(\"\
    \\\"${string:0:$((i+1))}\\\"\")\n        i=$((i+1))\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local result=()\n\
    \    local i=0\n    while [ $i -lt ${#str} ]; do\n        result+=(\"\\\"${str:0:$((i+1))}\\\
    \"\")\n        i=$((i+1))\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n      \
    \  prefixes+=(\"\\\"${str:0:i}\\\"\")\n    done\n    echo \"${prefixes[@]}\"\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n      \
    \  prefixes+=(\"$(printf '\"%s\"' \"${str:0:i}\")\")\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i=0\n    local res=()\n    while [ $i -lt $len ]; do\n        res+=(\"\
    \\\"${str:0:$((i+1))}\\\"\")\n        i=$((i+1))\n    done\n    echo \"${res[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local prefixes=()\n    for ((i=0;\
    \ i<${#1}; i++)); do\n        prefixes+=(\"\\\"${1:0:i+1}\\\"\")\n    done\n \
    \   echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"\
    W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i=0\n    local prefixes=()\n    while [ $i -lt $len ]; do\n       \
    \ prefixes+=(\"\\\"${str:0:$i}\\\"\")\n        i=$((i+1))\n    done\n    echo\
    \ \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\"\
    ) = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n\
    \    local i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n      \
    \  prefixes+=($(printf '\"%s\"' \"${str:0:i}\"))\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local string=\"$1\"\n    local\
    \ length=${#string}\n    local i\n    local prefix\n    local result=()\n    for\
    \ ((i=1; i<=length; i++)); do\n        prefix=${string:0:i}\n        result+=(\"\
    \\\"$prefix\\\"\")\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n\
    \    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n      \
    \  prefixes+=($(printf '\"%s\"' \"${str:0:i}\"))\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local prefixes=()\n    for (( i=0;\
    \ i<${#1}; i++ )); do\n        prefixes+=(\"\\\"${1:0:$((i+1))}\\\"\")\n    done\n\
    \    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    for ((i=1; i<=len; i++)); do\n        echo \"\\\"${str:0:i}\\\
    \"\"\n    done\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i=0\n    local prefixes=()\n    while [ $i -lt $len ]; do\n       \
    \ prefixes+=(\"\\\"${str:0:$i}\\\"\")\n        i=$((i+1))\n    done\n    echo\
    \ \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\"\
    ) = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n  local str=\"$1\"\n  local len=${#str}\n\
    \  local i\n  local result=()\n  for ((i=1; i<=len; i++)); do\n    result+=(\"\
    \\\"${str:0:i}\\\"\")\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n \
    \   all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefix\n    local prefixes=()\n    for ((i=0; i<len; i++));\
    \ do\n        prefix=${str:0:$((i+1))}\n        prefixes+=(\"\\\"$prefix\\\"\"\
    )\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local i=0\n\
    \    local len=${#str}\n    local result=\"\"\n    while [ $i -lt $len ]; do\n\
    \        result=\"$result,\\\"${str:0:$i}\\\"\"\n        i=$((i+1))\n    done\n\
    \    echo \"[${result:1}]\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"\
    W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n\
    \    local i=0\n    local prefixes=()\n    while [ $i -lt $len ]; do\n       \
    \ prefixes+=($(printf '\"%s\"' \"${str:0:$((i+1))}\"))\n        i=$((i+1))\n \
    \   done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local input=$1\n    local len=${#input}\n\
    \    local i\n    local prefix\n    local result=()\n    for ((i=0; i<len; i++));\
    \ do\n        prefix=${input:0:$((i+1))}\n        result+=(\"\\\"$prefix\\\"\"\
    )\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local result=()\n    for ((i=1; i<=len; i++)); do\n        result+=(\"\
    \\\"${str:0:i}\\\"\")\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n\
    \    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i=0\n    local res=()\n    while [ $i -lt $len ]; do\n        res+=(\"\
    \\\"${str:0:$((i+1))}\\\"\")\n        i=$((i+1))\n    done\n    echo \"${res[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local res=()\n    for ((i=1; i<=len; i++)); do\n        res+=(\"\
    \\\"${str:0:i}\\\"\")\n    done\n    echo \"${res[@]}\"\n}\n\ncandidate() {\n\
    \    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n      \
    \  prefixes+=(\"\\\"${str:0:i}\\\"\")\n    done\n    echo \"${prefixes[@]}\"\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n      \
    \  prefixes+=(\"\\\"${str:0:i}\\\"\")\n    done\n    echo \"${prefixes[@]}\"\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local string=\"$1\"\n    local\
    \ prefixes=()\n    for ((i=0; i<${#string}; i++)); do\n        prefixes+=(\"$(printf\
    \ '\"%s\"' \"${string:0:i+1}\")\")\n    done\n    printf '%s\\n' \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local string=$1\n    local prefixes=()\n\
    \    for (( i=0; i<${#string}; i++ )); do\n        prefixes+=(\"${string:0:$i+1}\"\
    )\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local string=\"$1\"\n    local\
    \ prefixes=()\n    for ((i=0; i<${#string}; i++)); do\n        prefixes+=(\"$(printf\
    \ '\"%s\"' \"${string:0:i+1}\")\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\
    \ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i=0\n    local prefixes=()\n    while [ $i -lt $len ]; do\n       \
    \ prefixes+=(\"\\\"${str:0:$i}\\\"\")\n        i=$((i+1))\n    done\n    echo\
    \ \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\"\
    ) = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    for ((i=1; i<=len; i++)); do\n        echo \"\\\"${str:0:i}\\\
    \"\"\n    done\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n        prefixes+=(\"\
    \\\"${str:0:i}\\\"\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n  local str=\"$1\"\n  local len=${#str}\n\
    \  local i\n  local prefixes=()\n  for ((i=1; i<=len; i++)); do\n    prefixes+=(\"\
    \\\"${str:0:i}\\\"\")\n  done\n  echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n\
    \    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n      \
    \  prefixes+=(\"$(printf '\"%s\"' \"${str:0:i}\")\")\n    done\n    printf '%s\\\
    n' \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\"\
    ) = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n  local str=\"$1\"\n  local len=${#str}\n\
    \  local i=0\n  local prefixes=()\n  while [ $i -lt $len ]; do\n    prefixes+=(\"\
    \\\"${str:0:$((i+1))}\\\"\")\n    i=$((i+1))\n  done\n  echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=$((${#str}-1))\n\
    \    local i\n    local prefixes=()\n    for ((i=0; i<=len; i++)); do\n      \
    \  prefixes+=(\"\\\"${str:0:$i}\\\"\")\n    done\n    echo \"${prefixes[@]}\"\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local prefixes=()\n    for ((i=0;\
    \ i<${#1}; i++)); do\n        prefixes+=(\"\\\"${1:0:i+1}\\\"\")\n    done\n \
    \   echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"\
    W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n      \
    \  prefixes+=(\"$(printf '\"%s\"' \"${str:0:i}\")\")\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefix\n    local result=()\n    for ((i=1; i<=len; i++));\
    \ do\n        prefix=\"$(echo \"$str\" | cut -c1-$i)\"\n        result+=(\"\\\"\
    $prefix\\\"\")\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local -a prefixes\n    for ((i=1; i<=len; i++)); do\n        prefixes+=(\"\
    \\\"${str:0:i}\\\"\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local res=()\n    for ((i=1; i<=len; i++)); do\n        res+=(\"\
    \\\"${str:0:i}\\\"\")\n    done\n    echo \"${res[@]}\"\n}\n\ncandidate() {\n\
    \    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i=0\n    local prefix\n    while [ $i -lt $len ]; do\n        prefix=\"\
    ${str:0:$i}\"\n        echo \"\\\"$prefix\\\"\"\n        i=$((i+1))\n    done\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefix\n    local result=()\n    for ((i=1; i<=len; i++));\
    \ do\n        prefix=\"${str:0:i}\"\n        result+=(\"\\\"$prefix\\\"\")\n \
    \   done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n      \
    \  prefixes+=(\"\\\"${str:0:i}\\\"\")\n    done\n    echo \"${prefixes[@]}\"\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n  local str=\"$1\"\n  local len=${#str}\n\
    \  local prefixes=()\n  for (( i=1; i<=len; i++ )); do\n    prefixes+=(\"\\\"\
    ${str:0:i}\\\"\")\n  done\n  echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n   \
    \ all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n  \
    \  [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local i=0\n\
    \    local len=${#str}\n    local prefixes=()\n    while [ $i -lt $len ]; do\n\
    \        prefixes+=(\"\\\"${str:0:$((i+1))}\\\"\")\n        i=$((i+1))\n    done\n\
    \    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n\
    \    local i=0\n    local prefixes=()\n    while [ $i -lt $len ]; do\n       \
    \ prefixes+=(\"\\\"${str:0:$((i+1))}\\\"\")\n        i=$((i+1))\n    done\n  \
    \  echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"\
    W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n      \
    \  prefixes+=(\"$(printf '\"%s\"' \"${str:0:i}\")\")\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n\
    \    local i\n    local prefix\n    local prefixes=()\n    for ((i=1; i<=len;\
    \ i++)); do\n        prefix=${str:0:i}\n        prefixes+=($prefix)\n    done\n\
    \    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local out\n    for ((i=1; i<=len; i++)); do\n        out+=\"\
    \\\"${str:0:i}\\\", \"\n    done\n    echo \"[${out%, }]\"\n}\n\ncandidate() {\n\
    \    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n      \
    \  prefixes+=(\"\\\"${str:0:i}\\\"\")\n    done\n    echo \"${prefixes[@]}\"\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n\
    \    local i=0\n    local prefixes=()\n    while [ $i -lt $len ]; do\n       \
    \ prefixes+=(\"\\\"${str:0:$i}\\\"\")\n        i=$((i+1))\n    done\n    echo\
    \ \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\"\
    ) = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefix\n    for ((i=1; i<=len; i++)); do\n        prefix=\"\
    ${str:0:i}\"\n        echo \"\\\"$prefix\\\"\"\n    done\n}\n\ncandidate() {\n\
    \    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local input=$1\n    local output=()\n\
    \    for (( i=0; i<${#input}; i++ )); do\n        output+=(\"\\\"${input:0:$((i+1))}\\\
    \"\")\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    for ((i=1; i<=len; i++)); do\n        echo \"\\\"${str:0:i}\\\
    \"\"\n    done\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local i=0\n\
    \    local len=${#str}\n    local result=\"\"\n    while [ $i -lt $len ]; do\n\
    \        result=\"$result \\\"${str:0:$((i+1))}\\\"\"\n        i=$((i+1))\n  \
    \  done\n    echo \"[$result]\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n      \
    \  prefixes+=(\"\\\"${str:0:i}\\\"\")\n    done\n    echo \"${prefixes[@]}\"\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n      \
    \  prefixes+=(\"\\\"${str:0:i}\\\"\")\n    done\n    echo \"${prefixes[@]}\"\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local prefixes=()\n\
    \    for ((i=0; i<${#str}; i++)); do\n        prefixes+=(\"$(printf '\"%s\"' \"\
    ${str:0:i+1}\")\")\n    done\n    printf '%s\\n' \"${prefixes[@]}\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local input=$1\n    local length=${#input}\n\
    \    local i=0\n    local output=()\n    while [ $i -lt $length ]; do\n      \
    \  output+=($(printf '\"%s\"' \"${input:0:$((i+1))}\"))\n        i=$((i+1))\n\
    \    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local result=()\n    for ((i=1; i<=len; i++)); do\n        result+=(\"\
    \\\"${str:0:i}\\\"\")\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n\
    \    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local out\n    for ((i=1; i<=len; i++)); do\n        out+=\"\
    $(printf '\"%s\" ' \"${str:0:i}\")\"\n    done\n    echo \"[$out]\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefix\n    local result=()\n    for ((i=1; i<=len; i++));\
    \ do\n        prefix=\"$(echo \"$str\" | cut -c1-$i)\"\n        result+=(\"$prefix\"\
    )\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local result=()\n    for ((i=1; i<=len; i++)); do\n        result+=(\"\
    \\\"${str:0:i}\\\"\")\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n\
    \    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i=0\n    local result=\"\"\n    while [ $i -lt $len ]; do\n       \
    \ result=\"$result \\\"${str:0:$i}\\\"\"\n        i=$((i+1))\n    done\n    echo\
    \ \"[$result]\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local result=\"\"\n    for (( i=1; i<=len; i++ )); do\n        result=\"\
    $result,\\\"${str:0:i}\\\"\"\n    done\n    echo \"[${result:1}]\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefixes\n    for ((i=1; i<=len; i++)); do\n        prefixes=\"\
    $prefixes, \\\"${str:0:i}\\\"\"\n    done\n    echo \"[${prefixes:1}]\"\n}\n\n\
    candidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=\"\
    ${#str}\"\n    local i\n    local prefix\n\n    for ((i=1; i<=len; i++)); do\n\
    \        prefix=\"$(echo \"$str\" | cut -c1-\"$i\")\"\n        echo '\"'$prefix'\"\
    '\n    done\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefixes\n    for ((i=1; i<=len; i++)); do\n        prefixes+=($(printf\
    \ '\"%s\"' \"${str:0:i}\"))\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    for ((i=1; i<=len; i++)); do\n        echo \"\\\"${str:0:i}\\\
    \"\"\n    done\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n      \
    \  prefixes+=(\"$(printf '\"%s\"' \"${str:0:i}\")\")\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local res=()\n    for ((i=1; i<=len; i++)); do\n        res+=(\"\
    \\\"${str:0:i}\\\"\")\n    done\n    echo \"${res[@]}\"\n}\n\ncandidate() {\n\
    \    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefix\n    local result=()\n    for ((i=1; i<=len; i++));\
    \ do\n        prefix=\"${str:0:i}\"\n        result+=(\"\\\"$prefix\\\"\")\n \
    \   done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=$((${#str}\
    \ - 1))\n    local i\n    local result=()\n    for ((i=0; i<=len; i++)); do\n\
    \        result+=(\"\\\"${str:0:$((i+1))}\\\"\")\n    done\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local prefixes=()\n\
    \    for ((i=0; i<${#str}; i++)); do\n        prefixes+=(\"\\\"${str:0:$((i+1))}\\\
    \"\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n\
    \    local i\n    local prefix\n    local result=()\n    for ((i=0; i<len; i++));\
    \ do\n        prefix=${str:0:$((i+1))}\n        result+=(\"\\\"$prefix\\\"\")\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefixes\n\n    for ((i=1; i<=len; i++)); do\n       \
    \ prefixes=\"$prefixes, \\\"${str:0:i}\\\"\"\n    done\n\n    echo \"[${prefixes:1}]\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i=0\n    local prefixes=()\n    while [ $i -lt $len ]; do\n       \
    \ prefixes+=(\"\\\"${str:0:$i}\\\"\")\n        i=$((i+1))\n    done\n    echo\
    \ \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\"\
    ) = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    for ((i=1; i<=len; i++)); do\n        echo \"\\\"${str:0:i}\\\
    \"\"\n    done\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i=0\n    local result=()\n    while [ $i -lt $len ]; do\n        result+=(\"\
    \\\"${str:0:$i}\\\"\")\n        i=$((i+1))\n    done\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefix\n    local result=()\n    for ((i=1; i<=len; i++));\
    \ do\n        prefix=\"$(echo \"$str\" | cut -c1-$i)\"\n        result+=(\"\\\"\
    $prefix\\\"\")\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local res=()\n    for ((i=1; i<=len; i++)); do\n        res+=(\"\
    \\\"${str:0:i}\\\"\")\n    done\n    echo \"${res[@]}\"\n}\n\ncandidate() {\n\
    \    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefixes\n    for ((i=1; i<=len; i++)); do\n        prefixes+=\"\
    \\\"${str:0:i}\\\", \"\n    done\n    echo \"[${prefixes%, }]\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    for ((i=1; i<=len; i++)); do\n        echo \"\\\"${str:0:i}\\\
    \"\"\n    done\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local prefixes=()\n    for ((i=0;\
    \ i<${#1}; i++)); do\n        prefixes+=(\"\\\"${1:0:i+1}\\\"\")\n    done\n \
    \   echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"\
    W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local input=$1\n    local len=${#input}\n\
    \    local i\n    local prefix\n    local result=()\n    for ((i=0; i<len; i++));\
    \ do\n        prefix=${input:0:$((i+1))}\n        result+=(\"\\\"$prefix\\\"\"\
    )\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n  local str=$1\n  local len=${#str}\n\
    \  local i\n  local result=()\n  for ((i=1; i<=len; i++)); do\n    result+=($(printf\
    \ '\"%s\"' \"${str:0:i}\"))\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n      \
    \  prefixes+=(\"$(printf '\"%s\"' \"${str:0:i}\")\")\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefix\n    local result=()\n    for ((i=1; i<=len; i++));\
    \ do\n        prefix=\"$(echo \"$str\" | cut -c1-$i)\"\n        result+=(\"\\\"\
    $prefix\\\"\")\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n\
    \    local i\n    local result=()\n    for ((i=1; i<=len; i++)); do\n        result+=($(printf\
    \ '\"%s\"' \"${str:0:i}\"))\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local input=$1\n    local len=$((${#input}-1))\n\
    \    local i=0\n    local result=\"\"\n    while [ $i -le $len ]; do\n       \
    \ result=\"$result\\\"${input:0:$i}\\\" \"\n        i=$((i+1))\n    done\n   \
    \ echo $result\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local string=\"$1\"\n    local\
    \ prefixes=()\n    for ((i=0; i<${#string}; i++)); do\n        prefixes+=(\"$(printf\
    \ '\"%s\"' \"${string:0:i+1}\")\")\n    done\n    printf '%s\\n' \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local i=0\n\
    \    local len=${#str}\n    local result=()\n    while [ $i -lt $len ]; do\n \
    \       result+=(\"\\\"${str:0:$i}\\\"\")\n        ((i++))\n    done\n    echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\"\
    ) = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"\
    ']\n#\n# $1 is a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n      \
    \  prefixes+=(\"\\\"${str:0:i}\\\"\")\n    done\n    echo \"${prefixes[@]}\"\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012786

name: HumanEval_90_next_smallest
language: sh
prompt: "#!/bin/bash\n# You are given a list of integers.\n# Write a function next_smallest()\
  \ that returns the 2nd smallest element of the list.\n# Return None if there is\
  \ no such element.\n# >>> $(next_smallest \"1 2 3 4 5\")\n# \"2\"\n# >>> $(next_smallest\
  \ \"5 1 4 3 2\")\n# \"2\"\n# >>> $(next_smallest \"\")\n# \"None\"\n# >>> $(next_smallest\
  \ \"1 1\")\n# \"None\"\n#\n# $1 is a space-separated list\nnext_smallest() {\n"
tests: "}\n\ncandidate() {\n    next_smallest \"$@\"\n}\n\nset -e\nrun_test() {\n\
  \    [[ $(candidate \"1 2 3 4 5\") = \"2\" ]]\n    [[ $(candidate \"5 1 4 3 2\"\
  ) = \"2\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"1 1\"\
  ) = \"None\" ]]\n    [[ $(candidate \"1 1 1 1 0\") = \"1\" ]]\n    [[ $(candidate\
  \ \"1 1\") = \"None\" ]]\n    [[ $(candidate \"-35 34 12 -45\") = \"-35\" ]]\n}\n\
  \nrun_test"
completions: ["    if [ -z \"$1\" ]; then\n        echo \"None\"\n        return\n\
    \    fi\n    local smallest=$(echo \"$1\" | tr ' ' '\\n' | sort -n | head -n1)\n\
    \    local second_smallest=$(echo \"$1\" | tr ' ' '\\n' | sort -n | head -n2 |\
    \ tail -n1)\n    if [ \"$smallest\" -eq \"$second_smallest\" ]; then\n       \
    \ echo \"None\"\n    else\n        echo \"$second_smallest\"\n    fi", "  local\
    \ list=($1)\n  local smallest=${list[0]}\n  local next_smallest=${list[0]}\n \
    \ for i in ${list[@]}; do\n    if [[ $i -lt $smallest ]]; then\n      next_smallest=$smallest\n\
    \      smallest=$i\n    elif [[ $i -lt $next_smallest && $i -ne $smallest ]];\
    \ then\n      next_smallest=$i\n    fi\n  done\n  if [[ $next_smallest -eq $smallest\
    \ ]]; then\n    echo \"None\"\n  else\n    echo $next_smallest\n  fi", "    if\
    \ [ -z \"$1\" ]; then\n        echo \"None\"\n        return\n    fi\n    local\
    \ -a arr=($1)\n    local -a sorted=($(echo \"${arr[@]}\" | tr ' ' '\\n' | sort\
    \ -n))\n    if [ ${#sorted[@]} -eq 1 ]; then\n        echo \"None\"\n        return\n\
    \    fi\n    echo ${sorted[1]}", "    local -a arr=($1)\n    local len=${#arr[@]}\n\
    \    if [[ $len -lt 2 ]]; then\n        echo \"None\"\n        return\n    fi\n\
    \    local min=${arr[0]}\n    local next_min=${arr[1]}\n    if [[ $min -gt $next_min\
    \ ]]; then\n        min=$next_min\n        next_min=${arr[0]}\n    fi\n    for\
    \ ((i=2; i<len; i++)); do\n        if [[ ${arr[i]} -lt $min ]]; then\n       \
    \     next_min=$min\n            min=${arr[i]}\n        elif [[ ${arr[i]} -lt\
    \ $next_min ]]; then\n            next_min=${arr[i]}\n        fi\n    done\n \
    \   echo $next_min", "    local -a arr=($1)\n    local min=${arr[0]}\n    local\
    \ min2=${arr[0]}\n    for i in ${arr[@]}; do\n        if (( i < min )); then\n\
    \            min2=$min\n            min=$i\n        elif (( i < min2 )); then\n\
    \            min2=$i\n        fi\n    done\n    if (( min == min2 )); then\n \
    \       echo \"None\"\n    else\n        echo $min2\n    fi", "    local list=($1)\n\
    \    local min=${list[0]}\n    local min2=${list[0]}\n    for i in ${list[@]};\
    \ do\n        if [[ $i -lt $min ]]; then\n            min2=$min\n            min=$i\n\
    \        elif [[ $i -lt $min2 ]]; then\n            min2=$i\n        fi\n    done\n\
    \    if [[ $min2 -eq $min ]]; then\n        echo \"None\"\n    else\n        echo\
    \ $min2\n    fi", "    if [ $# -eq 0 ]; then\n        echo \"None\"\n        return\n\
    \    fi\n    local smallest=$1\n    local second_smallest=\n    shift\n    for\
    \ i in $@; do\n        if [ $i -lt $smallest ]; then\n            second_smallest=$smallest\n\
    \            smallest=$i\n        elif [ -z $second_smallest ] || [ $i -lt $second_smallest\
    \ ]; then\n            second_smallest=$i\n        fi\n    done\n    if [ -z $second_smallest\
    \ ]; then\n        echo \"None\"\n    else\n        echo $second_smallest\n  \
    \  fi", "    local -a arr=($1)\n    local min=${arr[0]}\n    local min2=${arr[0]}\n\
    \    local i=0\n    for i in ${arr[@]}; do\n        if (( $i < $min )); then\n\
    \            min2=$min\n            min=$i\n        elif (( $i < $min2 )); then\n\
    \            min2=$i\n        fi\n    done\n    if (( $min2 == $min )); then\n\
    \        echo \"None\"\n    else\n        echo $min2\n    fi", "    local -a arr\n\
    \    local -i i\n    local -i min\n    local -i min2\n    local -i n\n    local\
    \ -i tmp\n\n    arr=($1)\n    n=${#arr[@]}\n    if ((n < 2)); then\n        echo\
    \ \"None\"\n        return\n    fi\n\n    min=${arr[0]}\n    min2=${arr[1]}\n\
    \    if ((min > min2)); then\n        tmp=min\n        min=min2\n        min2=tmp\n\
    \    fi\n\n    for ((i=2; i<n; i++)); do\n        if ((arr[i] < min)); then\n\
    \            min2=min\n            min=arr[i]\n        elif ((arr[i] < min2));\
    \ then\n            min2=arr[i]\n        fi\n    done\n\n    echo \"$min2\"",
  "  if [ -z \"$1\" ]; then\n    echo \"None\"\n    return\n  fi\n  local smallest=$(echo\
    \ \"$1\" | tr ' ' '\\n' | sort -n | head -n 1)\n  local second_smallest=$(echo\
    \ \"$1\" | tr ' ' '\\n' | sort -n | head -n 2 | tail -n 1)\n  if [ \"$smallest\"\
    \ = \"$second_smallest\" ]; then\n    echo \"None\"\n  else\n    echo \"$second_smallest\"\
    \n  fi", "    if [ $# -eq 0 ]; then\n        echo \"None\"\n        return\n \
    \   fi\n    local -a arr=($@)\n    local -a sorted=($(echo ${arr[@]} | tr ' '\
    \ '\\n' | sort -n))\n    if [ ${#sorted[@]} -eq 1 ]; then\n        echo \"None\"\
    \n        return\n    fi\n    echo ${sorted[1]}", "  local -a arr=($1)\n  local\
    \ -a sorted=($(echo \"${arr[@]}\" | tr ' ' '\\n' | sort -n))\n  local -a uniq=($(echo\
    \ \"${sorted[@]}\" | tr ' ' '\\n' | uniq))\n  if [ ${#uniq[@]} -gt 1 ]; then\n\
    \    echo ${uniq[1]}\n  else\n    echo \"None\"\n  fi", "  local -a array\n  local\
    \ -i i\n  local -i min\n  local -i min2\n  local -i n\n  local -i size\n  local\
    \ -i tmp\n\n  # Convert space-separated list to array\n  array=($1)\n  size=${#array[@]}\n\
    \n  # Check for empty array\n  if [[ $size -eq 0 ]]; then\n    echo \"None\"\n\
    \    return\n  fi\n\n  # Check for single element\n  if [[ $size -eq 1 ]]; then\n\
    \    echo \"None\"\n    return\n  fi\n\n  # Find minimum\n  min=${array[0]}\n\
    \  for ((i=1; i<size; i++)); do\n    tmp=${array[i]}\n    if [[ $tmp -lt $min\
    \ ]]; then\n      min=$tmp\n    fi\n  done\n\n  # Find second minimum\n  min2=${array[0]}\n\
    \  for ((i=1; i<size; i++)); do\n    tmp=${array[i]}\n    if [[ $tmp -gt $min\
    \ ]] && [[ $tmp -lt $min2 ]]; then\n      min2=$tmp\n    fi\n  done\n\n  # Check\
    \ for single minimum\n  if [[ $min2 -eq $min ]]; then\n    echo \"None\"\n   \
    \ return\n  fi\n\n  echo $min2", "    if [ -z \"$1\" ]; then\n        echo \"\
    None\"\n        return\n    fi\n    local smallest=$(echo \"$1\" | tr ' ' '\\\
    n' | sort -n | head -n 1)\n    local second_smallest=$(echo \"$1\" | tr ' ' '\\\
    n' | sort -n | head -n 2 | tail -n 1)\n    if [ \"$smallest\" -eq \"$second_smallest\"\
    \ ]; then\n        echo \"None\"\n    else\n        echo \"$second_smallest\"\n\
    \    fi", "    local -a arr=($1)\n    local min=${arr[0]}\n    local min2=${arr[0]}\n\
    \    for i in ${arr[@]}; do\n        if [[ $i -lt $min ]]; then\n            min2=$min\n\
    \            min=$i\n        elif [[ $i -lt $min2 ]]; then\n            min2=$i\n\
    \        fi\n    done\n    if [[ $min2 -eq $min ]]; then\n        echo \"None\"\
    \n    else\n        echo $min2\n    fi", "  local -a arr=($1)\n  local min=${arr[0]}\n\
    \  local min2=${arr[0]}\n  for i in ${arr[@]}; do\n    if (( $i < $min )); then\n\
    \      min2=$min\n      min=$i\n    elif (( $i < $min2 && $i != $min )); then\n\
    \      min2=$i\n    fi\n  done\n  if (( $min2 == $min )); then\n    echo \"None\"\
    \n  else\n    echo $min2\n  fi", "    if [ -z \"$1\" ]; then\n        echo \"\
    None\"\n        return\n    fi\n    local -a arr=($1)\n    local min=${arr[0]}\n\
    \    local min2=${arr[0]}\n    for i in ${arr[@]}; do\n        if [ $i -lt $min\
    \ ]; then\n            min2=$min\n            min=$i\n        elif [ $i -lt $min2\
    \ ]; then\n            min2=$i\n        fi\n    done\n    if [ $min2 -eq $min\
    \ ]; then\n        echo \"None\"\n    else\n        echo $min2\n    fi", "   \
    \ local -a arr=($1)\n    local min=${arr[0]}\n    local next_min=${arr[0]}\n \
    \   for i in ${arr[@]}; do\n        if [[ $i -lt $min ]]; then\n            next_min=$min\n\
    \            min=$i\n        elif [[ $i -lt $next_min && $i -ne $min ]]; then\n\
    \            next_min=$i\n        fi\n    done\n    if [[ $next_min -eq $min ]];\
    \ then\n        echo \"None\"\n    else\n        echo $next_min\n    fi", "  \
    \  if [ $# -eq 0 ]; then\n        echo \"None\"\n        return\n    fi\n    local\
    \ -a arr\n    local -i i=0\n    for x in $1; do\n        arr[i++]=$x\n    done\n\
    \    if [ ${#arr[@]} -eq 1 ]; then\n        echo \"None\"\n        return\n  \
    \  fi\n    local -i min1=${arr[0]}\n    local -i min2=${arr[1]}\n    if [ $min1\
    \ -gt $min2 ]; then\n        min1=$min2\n        min2=${arr[0]}\n    fi\n    for\
    \ ((i=2; i<${#arr[@]}; i++)); do\n        if [ ${arr[i]} -lt $min1 ]; then\n \
    \           min2=$min1\n            min1=${arr[i]}\n        elif [ ${arr[i]} -lt\
    \ $min2 ]; then\n            min2=${arr[i]}\n        fi\n    done\n    echo $min2",
  "    local list=\"$1\"\n    local smallest=\"\"\n    local next_smallest=\"\"\n\
    \    for i in $list; do\n        if [[ -z \"$smallest\" ]]; then\n           \
    \ smallest=\"$i\"\n        elif [[ \"$i\" -lt \"$smallest\" ]]; then\n       \
    \     next_smallest=\"$smallest\"\n            smallest=\"$i\"\n        elif [[\
    \ -z \"$next_smallest\" ]]; then\n            next_smallest=\"$i\"\n        elif\
    \ [[ \"$i\" -lt \"$next_smallest\" ]]; then\n            next_smallest=\"$i\"\n\
    \        fi\n    done\n    if [[ -z \"$next_smallest\" ]]; then\n        echo\
    \ \"None\"\n    else\n        echo \"$next_smallest\"\n    fi", "    local -a\
    \ arr=($1)\n    local -i len=${#arr[@]}\n    local -i i=0\n    local -i min=0\n\
    \    local -i min2=0\n    local -i min_index=0\n    local -i min2_index=0\n  \
    \  local -i tmp=0\n\n    if [ $len -eq 0 ]; then\n        echo \"None\"\n    \
    \    return\n    fi\n\n    min=${arr[0]}\n    min_index=0\n    min2=${arr[1]}\n\
    \    min2_index=1\n\n    if [ $len -eq 1 ]; then\n        echo \"None\"\n    \
    \    return\n    fi\n\n    if [ $min -gt $min2 ]; then\n        tmp=$min\n   \
    \     min=$min2\n        min2=$tmp\n        tmp=$min_index\n        min_index=$min2_index\n\
    \        min2_index=$tmp\n    fi\n\n    for ((i=2; i<len; i++)); do\n        if\
    \ [ ${arr[i]} -lt $min ]; then\n            min2=$min\n            min2_index=$min_index\n\
    \            min=${arr[i]}\n            min_index=$i\n        elif [ ${arr[i]}\
    \ -lt $min2 ]; then\n            min2=${arr[i]}\n            min2_index=$i\n \
    \       fi\n    done\n\n    if [ $min2_index -eq $min_index ]; then\n        echo\
    \ \"None\"\n    else\n        echo $min2\n    fi", "  local -a nums=($1)\n  local\
    \ -i min=${nums[0]}\n  local -i second_min=${nums[0]}\n  for ((i=1; i<${#nums[@]};\
    \ i++)); do\n    if ((nums[i] < min)); then\n      second_min=min\n      min=nums[i]\n\
    \    elif ((nums[i] < second_min)); then\n      second_min=nums[i]\n    fi\n \
    \ done\n  if ((second_min == min)); then\n    echo \"None\"\n  else\n    echo\
    \ \"$second_min\"\n  fi", "  if [ $# -eq 0 ]; then\n    echo \"None\"\n    return\n\
    \  fi\n  local -a arr=($1)\n  local -a sorted=($(printf \"%s\\n\" \"${arr[@]}\"\
    \ | sort -n))\n  if [ ${#sorted[@]} -eq 1 ]; then\n    echo \"None\"\n    return\n\
    \  fi\n  echo ${sorted[1]}", "    local -a arr=($1)\n    local min=${arr[0]}\n\
    \    local min2=${arr[0]}\n    for i in \"${arr[@]}\"; do\n        if [[ $i -lt\
    \ $min ]]; then\n            min2=$min\n            min=$i\n        elif [[ $i\
    \ -lt $min2 ]]; then\n            min2=$i\n        fi\n    done\n    if [[ $min2\
    \ -eq $min ]]; then\n        echo \"None\"\n    else\n        echo $min2\n   \
    \ fi", "    if [ $# -eq 0 ]; then\n        echo \"None\"\n        return\n   \
    \ fi\n    local -a arr=()\n    for i in $@; do\n        arr+=(\"$i\")\n    done\n\
    \    arr=($(printf \"%s\\n\" \"${arr[@]}\" | sort -n))\n    if [ ${#arr[@]} -eq\
    \ 1 ]; then\n        echo \"None\"\n        return\n    fi\n    echo \"${arr[1]}\"",
  "    # your code here\n    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n\
    \        echo \"$1\" | tr ' ' '\\n' | sort -n | uniq -u | head -n 2 | tail -n\
    \ 1\n    fi", "  local -a arr=($1)\n  local smallest=${arr[0]}\n  local second_smallest=${arr[0]}\n\
    \  for i in \"${arr[@]}\"; do\n    if [[ $i -lt $smallest ]]; then\n      second_smallest=$smallest\n\
    \      smallest=$i\n    elif [[ $i -lt $second_smallest ]]; then\n      second_smallest=$i\n\
    \    fi\n  done\n  if [[ $second_smallest -eq $smallest ]]; then\n    echo \"\
    None\"\n  else\n    echo $second_smallest\n  fi", "  local list=$@\n  local smallest=$(echo\
    \ \"$list\" | awk '{print $1}')\n  local next_smallest=$(echo \"$list\" | awk\
    \ '{print $2}')\n  for i in $list; do\n    if [ $i -lt $smallest ]; then\n   \
    \   next_smallest=$smallest\n      smallest=$i\n    elif [ $i -lt $next_smallest\
    \ ]; then\n      next_smallest=$i\n    fi\n  done\n  if [ $smallest -eq $next_smallest\
    \ ]; then\n    echo \"None\"\n  else\n    echo $next_smallest\n  fi", "    local\
    \ -a arr=($1)\n    local -i n=${#arr[@]}\n    local -i i=0\n    local -i min1=0\n\
    \    local -i min2=0\n    local -i min1_idx=0\n    local -i min2_idx=0\n    local\
    \ -i tmp=0\n\n    if [ $n -eq 0 ]; then\n        echo \"None\"\n        return\n\
    \    fi\n\n    min1=${arr[0]}\n    min2=${arr[0]}\n    min1_idx=0\n    min2_idx=0\n\
    \n    for ((i=1; i<n; i++)); do\n        tmp=${arr[i]}\n        if [ $tmp -lt\
    \ $min1 ]; then\n            min2=$min1\n            min2_idx=$min1_idx\n    \
    \        min1=$tmp\n            min1_idx=$i\n        elif [ $tmp -lt $min2 ];\
    \ then\n            min2=$tmp\n            min2_idx=$i\n        fi\n    done\n\
    \n    if [ $min1_idx -eq $min2_idx ]; then\n        echo \"None\"\n    else\n\
    \        echo $min2\n    fi", "    local -a array=($1)\n    local -i len=${#array[@]}\n\
    \    local -i i=0\n    local -i min=0\n    local -i sec_min=0\n    local -i min_index=0\n\
    \    local -i sec_min_index=0\n    local -i tmp=0\n\n    if [[ $len -eq 0 ]];\
    \ then\n        echo \"None\"\n        return\n    fi\n\n    min=${array[0]}\n\
    \    min_index=0\n    sec_min=${array[1]}\n    sec_min_index=1\n\n    for ((i=1;\
    \ i<len; i++)); do\n        tmp=${array[i]}\n        if [[ $tmp -lt $min ]]; then\n\
    \            sec_min=$min\n            sec_min_index=$min_index\n            min=$tmp\n\
    \            min_index=$i\n        elif [[ $tmp -lt $sec_min ]]; then\n      \
    \      sec_min=$tmp\n            sec_min_index=$i\n        fi\n    done\n\n  \
    \  if [[ $min_index -eq $sec_min_index ]]; then\n        echo \"None\"\n    else\n\
    \        echo \"$sec_min\"\n    fi", "    local list=($1)\n    local smallest=${list[0]}\n\
    \    local next_smallest=${list[0]}\n    for i in ${list[@]}; do\n        if [[\
    \ $i -lt $smallest ]]; then\n            next_smallest=$smallest\n           \
    \ smallest=$i\n        elif [[ $i -lt $next_smallest && $i -ne $smallest ]]; then\n\
    \            next_smallest=$i\n        fi\n    done\n    if [[ $next_smallest\
    \ -eq $smallest ]]; then\n        echo \"None\"\n    else\n        echo $next_smallest\n\
    \    fi", "    local -a arr=($1)\n    local min=${arr[0]}\n    local min2=${arr[0]}\n\
    \    for i in \"${arr[@]}\"; do\n        if (( i < min )); then\n            min2=$min\n\
    \            min=$i\n        elif (( i < min2 )); then\n            min2=$i\n\
    \        fi\n    done\n    if (( min2 == min )); then\n        echo \"None\"\n\
    \    else\n        echo $min2\n    fi", "    if [ -z \"$1\" ]; then\n        echo\
    \ \"None\"\n        return\n    fi\n    if [ $(echo \"$1\" | wc -w) -eq 1 ]; then\n\
    \        echo \"None\"\n        return\n    fi\n    echo \"$1\" | tr ' ' '\\n'\
    \ | sort -n | uniq -u | head -n 2 | tail -n 1", "    if [ $# -eq 0 ]; then\n \
    \       echo \"None\"\n        return\n    fi\n    local -a arr=($1)\n    local\
    \ -a sorted=($(echo \"${arr[@]}\" | tr ' ' '\\n' | sort -n))\n    if [ ${#sorted[@]}\
    \ -eq 1 ]; then\n        echo \"None\"\n        return\n    fi\n    echo ${sorted[1]}",
  "    local list=($1)\n    local min=${list[0]}\n    local min2=${list[0]}\n    for\
    \ i in ${list[@]}; do\n        if (( i < min )); then\n            min2=$min\n\
    \            min=$i\n        elif (( i < min2 )); then\n            min2=$i\n\
    \        fi\n    done\n    if (( min == min2 )); then\n        echo \"None\"\n\
    \    else\n        echo $min2\n    fi", "    local list=\"$1\"\n    local smallest=${list%%\
    \ *}\n    local next_smallest=${list#* }\n    local item\n    for item in $list;\
    \ do\n        if [[ $item -lt $smallest ]]; then\n            next_smallest=$smallest\n\
    \            smallest=$item\n        elif [[ $item -lt $next_smallest && $item\
    \ -ne $smallest ]]; then\n            next_smallest=$item\n        fi\n    done\n\
    \    if [[ $next_smallest -eq $smallest ]]; then\n        echo \"None\"\n    else\n\
    \        echo $next_smallest\n    fi", "  local -a nums=($1)\n  local -i min=${nums[0]}\n\
    \  local -i min2=${nums[0]}\n  local -i i=0\n  local -i len=${#nums[@]}\n  while\
    \ (( i < len )); do\n    if (( nums[i] < min )); then\n      min2=min\n      min=nums[i]\n\
    \    elif (( nums[i] < min2 )); then\n      min2=nums[i]\n    fi\n    (( i++ ))\n\
    \  done\n  if (( min2 == min )); then\n    echo \"None\"\n  else\n    echo \"\
    $min2\"\n  fi", "    if [ -z \"$1\" ]; then\n        echo \"None\"\n        return\n\
    \    fi\n    local -a arr=($1)\n    local -a sorted=($(printf \"%s\\n\" \"${arr[@]}\"\
    \ | sort -n))\n    if [ ${#sorted[@]} -eq 1 ]; then\n        echo \"None\"\n \
    \       return\n    fi\n    echo ${sorted[1]}", "    local -a arr\n    local -i\
    \ i\n    local -i min\n    local -i sec_min\n    local -i n\n    local -i len\n\
    \n    arr=($1)\n    len=${#arr[@]}\n    if [ $len -lt 2 ]; then\n        echo\
    \ \"None\"\n        return\n    fi\n\n    min=${arr[0]}\n    sec_min=${arr[1]}\n\
    \    if [ $sec_min -lt $min ]; then\n        min=$sec_min\n        sec_min=${arr[0]}\n\
    \    fi\n\n    for ((i=2; i<len; i++)); do\n        n=${arr[i]}\n        if [\
    \ $n -lt $min ]; then\n            sec_min=$min\n            min=$n\n        elif\
    \ [ $n -lt $sec_min ]; then\n            sec_min=$n\n        fi\n    done\n\n\
    \    echo $sec_min", "    local list=$1\n    local smallest=`echo $list | cut\
    \ -d ' ' -f 1`\n    local next_smallest=`echo $list | cut -d ' ' -f 2`\n    for\
    \ i in $list; do\n        if [ $i -lt $smallest ]; then\n            next_smallest=$smallest\n\
    \            smallest=$i\n        elif [ $i -lt $next_smallest ] && [ $i -ne $smallest\
    \ ]; then\n            next_smallest=$i\n        fi\n    done\n    if [ $next_smallest\
    \ -eq $smallest ]; then\n        echo \"None\"\n    else\n        echo $next_smallest\n\
    \    fi", "    local -a arr=($1)\n    local min=${arr[0]}\n    local min2=${arr[0]}\n\
    \    for i in ${arr[@]}; do\n        if [[ $i -lt $min ]]; then\n            min2=$min\n\
    \            min=$i\n        elif [[ $i -lt $min2 ]]; then\n            min2=$i\n\
    \        fi\n    done\n    if [[ $min2 -eq $min ]]; then\n        echo \"None\"\
    \n    else\n        echo $min2\n    fi", "    local -a arr=($1)\n    local -a\
    \ sorted=($(echo \"${arr[@]}\" | tr ' ' '\\n' | sort -n))\n    local -a unique=($(echo\
    \ \"${sorted[@]}\" | tr ' ' '\\n' | uniq))\n    if [ ${#unique[@]} -lt 2 ]; then\n\
    \        echo \"None\"\n    else\n        echo \"${unique[1]}\"\n    fi", "  local\
    \ -a nums=($1)\n  local smallest=${nums[0]}\n  local next_smallest=${nums[0]}\n\
    \  for ((i=1; i<${#nums[@]}; i++)); do\n    if [[ ${nums[$i]} -lt $smallest ]];\
    \ then\n      next_smallest=$smallest\n      smallest=${nums[$i]}\n    elif [[\
    \ ${nums[$i]} -lt $next_smallest ]]; then\n      next_smallest=${nums[$i]}\n \
    \   fi\n  done\n  if [[ $next_smallest -eq $smallest ]]; then\n    echo \"None\"\
    \n  else\n    echo $next_smallest\n  fi", "    local list=\"$1\"\n    local smallest\
    \ second_smallest\n    for i in $list; do\n        if [[ -z \"$smallest\" ]];\
    \ then\n            smallest=$i\n        elif [[ -z \"$second_smallest\" ]]; then\n\
    \            if [[ $i -lt $smallest ]]; then\n                second_smallest=$smallest\n\
    \                smallest=$i\n            else\n                second_smallest=$i\n\
    \            fi\n        elif [[ $i -lt $smallest ]]; then\n            second_smallest=$smallest\n\
    \            smallest=$i\n        elif [[ $i -lt $second_smallest ]]; then\n \
    \           second_smallest=$i\n        fi\n    done\n    if [[ -z \"$second_smallest\"\
    \ ]]; then\n        echo \"None\"\n    else\n        echo \"$second_smallest\"\
    \n    fi", "    local list=$1\n    local smallest=${list%% *}\n    local second_smallest=${list%%\
    \ *}\n    for i in $list; do\n        if [[ $i -lt $smallest ]]; then\n      \
    \      second_smallest=$smallest\n            smallest=$i\n        elif [[ $i\
    \ -lt $second_smallest && $i -ne $smallest ]]; then\n            second_smallest=$i\n\
    \        fi\n    done\n    if [[ $second_smallest -eq $smallest ]]; then\n   \
    \     echo \"None\"\n    else\n        echo $second_smallest\n    fi", "    local\
    \ -a arr\n    local -i i\n    local -i min\n    local -i min2\n    local -i len\n\
    \    arr=($1)\n    len=${#arr[@]}\n    if (( len < 2 )); then\n        echo \"\
    None\"\n        return\n    fi\n    min=${arr[0]}\n    min2=${arr[1]}\n    if\
    \ (( min > min2 )); then\n        min=${arr[1]}\n        min2=${arr[0]}\n    fi\n\
    \    for (( i=2; i<len; i++ )); do\n        if (( arr[i] < min )); then\n    \
    \        min2=min\n            min=${arr[i]}\n        elif (( arr[i] < min2 ));\
    \ then\n            min2=${arr[i]}\n        fi\n    done\n    echo \"$min2\"",
  "  local -a arr\n  local -i i j\n  local -i min min2\n  local -i len\n\n  arr=($1)\n\
    \  len=${#arr[@]}\n  if (( len < 2 )); then\n    echo \"None\"\n    return\n \
    \ fi\n\n  min=${arr[0]}\n  min2=${arr[1]}\n  if (( min2 < min )); then\n    min=${arr[1]}\n\
    \    min2=${arr[0]}\n  fi\n\n  for (( i=2; i<len; i++ )); do\n    if (( arr[i]\
    \ < min )); then\n      min2=min\n      min=${arr[i]}\n    elif (( arr[i] < min2\
    \ )); then\n      min2=${arr[i]}\n    fi\n  done\n\n  echo \"$min2\"", "    local\
    \ -a arr=($1)\n    local -i len=${#arr[@]}\n    local -i i=0\n    local -i min=${arr[0]}\n\
    \    local -i min2=${arr[0]}\n    local -i tmp=0\n\n    if [ $len -le 1 ]; then\n\
    \        echo \"None\"\n        return\n    fi\n\n    while [ $i -lt $len ]; do\n\
    \        tmp=${arr[$i]}\n        if [ $tmp -lt $min ]; then\n            min2=$min\n\
    \            min=$tmp\n        elif [ $tmp -lt $min2 -a $tmp -ne $min ]; then\n\
    \            min2=$tmp\n        fi\n        i=$((i+1))\n    done\n\n    if [ $min2\
    \ -eq $min ]; then\n        echo \"None\"\n    else\n        echo $min2\n    fi",
  "    if [ $# -eq 0 ]; then\n        echo \"None\"\n        return\n    fi\n    local\
    \ -a array=($1)\n    local -a sorted=($(echo ${array[@]} | tr ' ' '\\n' | sort\
    \ -n))\n    if [ ${#sorted[@]} -eq 1 ]; then\n        echo \"None\"\n        return\n\
    \    fi\n    echo ${sorted[1]}", "    if [ -z \"$1\" ]; then\n        echo \"\
    None\"\n        return\n    fi\n    # sort the list\n    sorted=($(echo \"$1\"\
    \ | tr ' ' '\\n' | sort -n))\n    # remove duplicates\n    uniq=($(echo \"${sorted[@]}\"\
    \ | tr ' ' '\\n' | uniq))\n    # return the 2nd element\n    if [ \"${#uniq[@]}\"\
    \ -gt 1 ]; then\n        echo \"${uniq[1]}\"\n    else\n        echo \"None\"\n\
    \    fi", "    local -a arr\n    local -i i\n    local -i min\n    local -i min2\n\
    \    local -i n\n\n    arr=($1)\n    n=${#arr[@]}\n    if (( n < 2 )); then\n\
    \        echo \"None\"\n        return\n    fi\n\n    min=${arr[0]}\n    min2=${arr[1]}\n\
    \    if (( min > min2 )); then\n        min=${arr[1]}\n        min2=${arr[0]}\n\
    \    fi\n\n    for (( i = 2; i < n; i++ )); do\n        if (( arr[i] < min ));\
    \ then\n            min2=min\n            min=${arr[i]}\n        elif (( arr[i]\
    \ < min2 )); then\n            min2=${arr[i]}\n        fi\n    done\n\n    echo\
    \ \"$min2\"", "    if [ $# -eq 0 ]; then\n        echo \"None\"\n        return\n\
    \    fi\n    local smallest=$1\n    local second_smallest=$1\n    for i in $@;\
    \ do\n        if [ $i -lt $smallest ]; then\n            second_smallest=$smallest\n\
    \            smallest=$i\n        elif [ $i -lt $second_smallest ]; then\n   \
    \         second_smallest=$i\n        fi\n    done\n    if [ $second_smallest\
    \ -eq $smallest ]; then\n        echo \"None\"\n    else\n        echo $second_smallest\n\
    \    fi", "    local list=$1\n    local smallest=$(echo \"$list\" | tr ' ' '\\\
    n' | sort -n | head -n 1)\n    local second_smallest=$(echo \"$list\" | tr ' '\
    \ '\\n' | sort -n | head -n 2 | tail -n 1)\n    if [ \"$smallest\" == \"$second_smallest\"\
    \ ]; then\n        echo \"None\"\n    else\n        echo \"$second_smallest\"\n\
    \    fi", "    local -a arr=($1)\n    local -i len=${#arr[@]}\n    local -i i=0\n\
    \    local -i min=0\n    local -i sec_min=0\n    local -i min_cnt=0\n    local\
    \ -i sec_min_cnt=0\n\n    if [ $len -eq 0 ]; then\n        echo \"None\"\n   \
    \     return\n    fi\n\n    min=${arr[0]}\n    min_cnt=1\n    for ((i=1; i<len;\
    \ i++)); do\n        if [ ${arr[i]} -lt $min ]; then\n            sec_min=$min\n\
    \            sec_min_cnt=$min_cnt\n            min=${arr[i]}\n            min_cnt=1\n\
    \        elif [ ${arr[i]} -eq $min ]; then\n            min_cnt=$min_cnt+1\n \
    \       elif [ ${arr[i]} -lt $sec_min ]; then\n            sec_min=${arr[i]}\n\
    \            sec_min_cnt=1\n        elif [ ${arr[i]} -eq $sec_min ]; then\n  \
    \          sec_min_cnt=$sec_min_cnt+1\n        fi\n    done\n\n    if [ $sec_min_cnt\
    \ -eq 0 ]; then\n        echo \"None\"\n    else\n        echo $sec_min\n    fi",
  "    local -a arr\n    local i\n    local min\n    local min2\n    local n\n   \
    \ arr=($1)\n    if [ ${#arr[@]} -eq 0 ]; then\n        echo \"None\"\n       \
    \ return\n    fi\n    min=${arr[0]}\n    min2=${arr[0]}\n    for ((i=1; i<${#arr[@]};\
    \ i++)); do\n        n=${arr[$i]}\n        if [ $n -lt $min ]; then\n        \
    \    min2=$min\n            min=$n\n        elif [ $n -lt $min2 ]; then\n    \
    \        min2=$n\n        fi\n    done\n    if [ $min2 -eq $min ]; then\n    \
    \    echo \"None\"\n    else\n        echo $min2\n    fi", "    local list=$1\n\
    \    local smallest=`echo \"$list\" | head -n 1`\n    local next_smallest=`echo\
    \ \"$list\" | head -n 2 | tail -n 1`\n    for i in $list; do\n        if [ $i\
    \ -lt $smallest ]; then\n            next_smallest=$smallest\n            smallest=$i\n\
    \        elif [ $i -lt $next_smallest ]; then\n            next_smallest=$i\n\
    \        fi\n    done\n    if [ $smallest -eq $next_smallest ]; then\n       \
    \ echo \"None\"\n    else\n        echo $next_smallest\n    fi", "  if [ $# -eq\
    \ 0 ]; then\n    echo \"None\"\n    return\n  fi\n  local smallest=$1\n  local\
    \ next_smallest=$1\n  shift\n  for i in $@; do\n    if [ $i -lt $smallest ]; then\n\
    \      next_smallest=$smallest\n      smallest=$i\n    elif [ $i -lt $next_smallest\
    \ ]; then\n      next_smallest=$i\n    fi\n  done\n  if [ $smallest -eq $next_smallest\
    \ ]; then\n    echo \"None\"\n  else\n    echo $next_smallest\n  fi", "    local\
    \ list=($1)\n    local min=${list[0]}\n    local min2=${list[0]}\n    for i in\
    \ ${list[@]}; do\n        if [[ $i -lt $min ]]; then\n            min2=$min\n\
    \            min=$i\n        elif [[ $i -lt $min2 ]]; then\n            min2=$i\n\
    \        fi\n    done\n    if [[ $min2 -eq $min ]]; then\n        echo \"None\"\
    \n    else\n        echo $min2\n    fi", "  local -a arr\n  local -i i\n  local\
    \ -i min\n  local -i min2\n  local -i len\n\n  arr=($1)\n  len=${#arr[@]}\n  if\
    \ (( len < 2 )); then\n    echo \"None\"\n    return\n  fi\n\n  min=${arr[0]}\n\
    \  min2=${arr[1]}\n  if (( min > min2 )); then\n    min=${arr[1]}\n    min2=${arr[0]}\n\
    \  fi\n\n  for (( i=2; i<len; i++ )); do\n    if (( arr[i] < min )); then\n  \
    \    min2=min\n      min=${arr[i]}\n    elif (( arr[i] < min2 )); then\n     \
    \ min2=${arr[i]}\n    fi\n  done\n\n  echo \"$min2\"", "  local -a list=($1)\n\
    \  local -a sorted=($(echo \"${list[@]}\" | tr ' ' '\\n' | sort -n))\n  local\
    \ -a unique=($(echo \"${sorted[@]}\" | tr ' ' '\\n' | uniq))\n  if [ ${#unique[@]}\
    \ -lt 2 ]; then\n    echo \"None\"\n  else\n    echo \"${unique[1]}\"\n  fi",
  "    if [ -z \"$1\" ]; then\n        echo \"None\"\n        return\n    fi\n   \
    \ local smallest=`echo \"$1\" | tr ' ' '\\n' | sort -n | head -n 1`\n    local\
    \ second_smallest=`echo \"$1\" | tr ' ' '\\n' | sort -n | head -n 2 | tail -n\
    \ 1`\n    if [ \"$smallest\" == \"$second_smallest\" ]; then\n        echo \"\
    None\"\n    else\n        echo \"$second_smallest\"\n    fi", "    if [ $# -eq\
    \ 0 ]; then\n        echo \"None\"\n        return\n    fi\n    local min=$1\n\
    \    local min2=$1\n    shift\n    for i in $@; do\n        if [ $i -lt $min ];\
    \ then\n            min2=$min\n            min=$i\n        elif [ $i -lt $min2\
    \ ]; then\n            min2=$i\n        fi\n    done\n    if [ $min2 -eq $min\
    \ ]; then\n        echo \"None\"\n    else\n        echo $min2\n    fi", "   \
    \ local -a arr=($1)\n    local min=${arr[0]}\n    local second_min=${arr[0]}\n\
    \    for ((i=1; i<${#arr[@]}; i++)); do\n        if [[ ${arr[i]} -lt $min ]];\
    \ then\n            second_min=$min\n            min=${arr[i]}\n        elif [[\
    \ ${arr[i]} -lt $second_min ]]; then\n            second_min=${arr[i]}\n     \
    \   fi\n    done\n    if [[ $min -eq $second_min ]]; then\n        echo \"None\"\
    \n    else\n        echo $second_min\n    fi", "  if [ -z \"$1\" ]; then\n   \
    \ echo \"None\"\n    return\n  fi\n  local min=$(echo \"$1\" | tr ' ' '\\n' |\
    \ sort -n | head -n 1)\n  local min2=$(echo \"$1\" | tr ' ' '\\n' | sort -n |\
    \ head -n 2 | tail -n 1)\n  if [ \"$min\" -eq \"$min2\" ]; then\n    echo \"None\"\
    \n  else\n    echo \"$min2\"\n  fi", "    if [ -z \"$1\" ]; then\n        echo\
    \ \"None\"\n        return\n    fi\n    local min=9999999999\n    local min2=9999999999\n\
    \    for i in $1; do\n        if [ $i -lt $min ]; then\n            min2=$min\n\
    \            min=$i\n        elif [ $i -lt $min2 ]; then\n            min2=$i\n\
    \        fi\n    done\n    if [ $min2 -eq 9999999999 ]; then\n        echo \"\
    None\"\n    else\n        echo $min2\n    fi", "  local list=$1\n  local smallest=$(echo\
    \ \"$list\" | head -n 1)\n  local next_smallest=$(echo \"$list\" | head -n 2 |\
    \ tail -n 1)\n  for i in $list; do\n    if [ \"$i\" -lt \"$smallest\" ]; then\n\
    \      next_smallest=$smallest\n      smallest=$i\n    elif [ \"$i\" -lt \"$next_smallest\"\
    \ ]; then\n      next_smallest=$i\n    fi\n  done\n  if [ \"$smallest\" -eq \"\
    $next_smallest\" ]; then\n    echo \"None\"\n  else\n    echo \"$next_smallest\"\
    \n  fi", "    if [ -z \"$1\" ]; then\n        echo \"None\"\n        return\n\
    \    fi\n    local smallest=`echo \"$1\" | tr ' ' '\\n' | sort -n | head -n 1`\n\
    \    local second_smallest=`echo \"$1\" | tr ' ' '\\n' | sort -n | head -n 2 |\
    \ tail -n 1`\n    if [ $smallest -eq $second_smallest ]; then\n        echo \"\
    None\"\n    else\n        echo $second_smallest\n    fi", "    local -a list\n\
    \    local -i i\n    local -i min\n    local -i min2\n\n    list=($1)\n    min=${list[0]}\n\
    \    min2=${list[0]}\n    for ((i=1; i<${#list[@]}; i++)); do\n        if [[ ${list[i]}\
    \ -lt $min ]]; then\n            min2=$min\n            min=${list[i]}\n     \
    \   elif [[ ${list[i]} -lt $min2 ]]; then\n            min2=${list[i]}\n     \
    \   fi\n    done\n    if [[ $min2 -eq $min ]]; then\n        echo \"None\"\n \
    \   else\n        echo $min2\n    fi", "    local sorted=($(echo \"$1\" | tr '\
    \ ' '\\n' | sort -n))\n    local len=${#sorted[@]}\n    if [ $len -lt 2 ]; then\n\
    \        echo \"None\"\n    else\n        echo ${sorted[1]}\n    fi", "    local\
    \ -a arr\n    local i\n    local min\n    local min2\n    local -i n\n    local\
    \ -i n2\n    local -i n_min\n    local -i n_min2\n    local -i n_min_prev\n  \
    \  local -i n_min2_prev\n    local -i n_min_prev_prev\n    local -i n_min2_prev_prev\n\
    \    local -i n_min_prev_prev_prev\n    local -i n_min2_prev_prev_prev\n    local\
    \ -i n_min_prev_prev_prev_prev\n    local -i n_min2_prev_prev_prev_prev\n    local\
    \ -i n_min_prev_prev_prev_prev_prev\n    local -i n_min2_prev_prev_prev_prev_prev\n\
    \    local -i n_min_prev_prev_prev_prev_prev_prev\n    local -i n_min2_prev_prev_prev_prev_prev_prev\n\
    \    local -i n_min_prev_prev_prev_prev_prev_prev_prev\n    local -i n_min2_prev_prev_prev_prev_prev_prev_prev\n\
    \    local -i n_min_prev_prev_prev_prev_prev_prev_prev_prev\n    local -i n_min2_prev_prev_prev_prev_prev_prev_prev_prev\n\
    \    local -i n_min_prev_prev_prev_prev_prev_prev_prev_prev_prev\n    local -i\
    \ n_min2_prev_prev_prev_prev_prev_prev_prev_prev_prev\n    local -i n_min_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n\
    \    local -i n_min2_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n    local\
    \ -i n_min_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n    local -i\
    \ n_min2_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n    local -i\
    \ n_min_prev_prev", "    if [ -z \"$1\" ]; then\n        echo \"None\"\n     \
    \   return\n    fi\n    local smallest=$(echo \"$1\" | awk '{print $1}')\n   \
    \ local second_smallest=$smallest\n    for i in $1; do\n        if [ $i -lt $smallest\
    \ ]; then\n            second_smallest=$smallest\n            smallest=$i\n  \
    \      elif [ $i -lt $second_smallest ] && [ $i -ne $smallest ]; then\n      \
    \      second_smallest=$i\n        fi\n    done\n    if [ $second_smallest -eq\
    \ $smallest ]; then\n        echo \"None\"\n    else\n        echo $second_smallest\n\
    \    fi", "    if [[ -z \"$1\" ]]; then\n        echo \"None\"\n        return\n\
    \    fi\n    local -a arr=($1)\n    local -a sorted=($(echo \"${arr[@]}\" | tr\
    \ ' ' '\\n' | sort -n))\n    if [[ \"${#sorted[@]}\" -lt 2 ]]; then\n        echo\
    \ \"None\"\n        return\n    fi\n    echo \"${sorted[1]}\"", "  local list=$1\n\
    \  local smallest=$(echo \"$list\" | head -n 1)\n  local next_smallest=None\n\
    \  for i in $list; do\n    if [[ $i -lt $smallest ]]; then\n      next_smallest=$smallest\n\
    \      smallest=$i\n    elif [[ $i -lt $next_smallest ]]; then\n      next_smallest=$i\n\
    \    fi\n  done\n  echo $next_smallest", "  local list=$1\n  local min=${list%%\
    \ *}\n  local second_min=\n  local num\n  for num in $list; do\n    if [[ $num\
    \ -lt $min ]]; then\n      second_min=$min\n      min=$num\n    elif [[ $num -gt\
    \ $min && ($num -lt $second_min || -z $second_min) ]]; then\n      second_min=$num\n\
    \    fi\n  done\n  if [[ -z $second_min ]]; then\n    echo None\n  else\n    echo\
    \ $second_min\n  fi", "  local list=($1)\n  local min=${list[0]}\n  local min2=${list[0]}\n\
    \  local len=${#list[@]}\n  for ((i=1; i<len; i++)); do\n    if [[ ${list[i]}\
    \ -lt $min ]]; then\n      min2=$min\n      min=${list[i]}\n    elif [[ ${list[i]}\
    \ -lt $min2 ]]; then\n      min2=${list[i]}\n    fi\n  done\n  if [[ $min2 -eq\
    \ $min ]]; then\n    echo \"None\"\n  else\n    echo $min2\n  fi", "  local list=$1\n\
    \  local smallest=$(echo \"$list\" | head -n 1)\n  local second_smallest=$(echo\
    \ \"$list\" | head -n 2 | tail -n 1)\n  for i in $list; do\n    if [ $i -lt $smallest\
    \ ]; then\n      second_smallest=$smallest\n      smallest=$i\n    elif [ $i -lt\
    \ $second_smallest ] && [ $i -ne $smallest ]; then\n      second_smallest=$i\n\
    \    fi\n  done\n  if [ $second_smallest -eq $smallest ]; then\n    echo \"None\"\
    \n  else\n    echo $second_smallest\n  fi", "    local -a arr=($1)\n    local\
    \ -i len=${#arr[@]}\n    local -i i=0\n    local -i min=${arr[0]}\n    local -i\
    \ min2=${arr[0]}\n    local -i tmp=0\n\n    if [ $len -eq 0 ]; then\n        echo\
    \ \"None\"\n        return\n    fi\n\n    for ((i=1; i<len; i++)); do\n      \
    \  tmp=${arr[i]}\n        if [ $tmp -lt $min ]; then\n            min2=$min\n\
    \            min=$tmp\n        elif [ $tmp -lt $min2 ]; then\n            min2=$tmp\n\
    \        fi\n    done\n\n    if [ $min2 -eq $min ]; then\n        echo \"None\"\
    \n    else\n        echo $min2\n    fi", "    if [ -z \"$1\" ]; then\n       \
    \ echo \"None\"\n        return\n    fi\n    local -a arr=($1)\n    local -a sorted=($(printf\
    \ \"%s\\n\" \"${arr[@]}\" | sort -n))\n    if [ \"${#sorted[@]}\" -le 1 ]; then\n\
    \        echo \"None\"\n        return\n    fi\n    echo \"${sorted[1]}\"", " \
    \ local -a arr=($1)\n  local min=${arr[0]}\n  local min2=${arr[0]}\n  for i in\
    \ ${arr[@]}; do\n    if [[ $i -lt $min ]]; then\n      min2=$min\n      min=$i\n\
    \    elif [[ $i -lt $min2 ]]; then\n      min2=$i\n    fi\n  done\n  if [[ $min2\
    \ -eq $min ]]; then\n    echo \"None\"\n  else\n    echo $min2\n  fi", "    if\
    \ [ -z \"$1\" ]; then\n        echo \"None\"\n        return\n    fi\n    local\
    \ smallest=$(echo \"$1\" | tr ' ' '\\n' | sort -n | head -n1)\n    local second_smallest=$(echo\
    \ \"$1\" | tr ' ' '\\n' | sort -n | head -n2 | tail -n1)\n    if [ \"$smallest\"\
    \ == \"$second_smallest\" ]; then\n        echo \"None\"\n    else\n        echo\
    \ \"$second_smallest\"\n    fi", "    local -a arr=($1)\n    local min=${arr[0]}\n\
    \    local min2=${arr[0]}\n    for i in ${arr[@]}; do\n        if (( i < min ));\
    \ then\n            min2=$min\n            min=$i\n        elif (( i < min2 ));\
    \ then\n            min2=$i\n        fi\n    done\n    if (( min2 == min )); then\n\
    \        echo \"None\"\n    else\n        echo $min2\n    fi", "    if [ $# -eq\
    \ 0 ]; then\n        echo \"None\"\n        return\n    fi\n    local -a arr=($1)\n\
    \    local -a sorted=($(echo \"${arr[@]}\" | tr ' ' '\\n' | sort -n))\n    if\
    \ [ ${#sorted[@]} -eq 1 ]; then\n        echo \"None\"\n        return\n    fi\n\
    \    echo ${sorted[1]}", "    local list=($1)\n    local min=${list[0]}\n    local\
    \ min2=${list[0]}\n    for i in ${list[@]}; do\n        if (( i < min )); then\n\
    \            min2=$min\n            min=$i\n        elif (( i < min2 )); then\n\
    \            min2=$i\n        fi\n    done\n    if (( min == min2 )); then\n \
    \       echo \"None\"\n    else\n        echo $min2\n    fi", "    local list=$1\n\
    \    local smallest=${list%% *}\n    local next_smallest=${list%% *}\n    local\
    \ num\n    for num in $list; do\n        if [[ $num -lt $smallest ]]; then\n \
    \           next_smallest=$smallest\n            smallest=$num\n        elif [[\
    \ $num -lt $next_smallest && $num -ne $smallest ]]; then\n            next_smallest=$num\n\
    \        fi\n    done\n    if [[ $next_smallest -eq $smallest ]]; then\n     \
    \   echo \"None\"\n    else\n        echo $next_smallest\n    fi", "    local\
    \ -a arr\n    local -i i\n    local -i min\n    local -i min2\n    local -i n\n\
    \    local -i n_min\n    local -i n_min2\n    local -i n_min_prev\n    local -i\
    \ n_min2_prev\n    local -i n_min_prev_prev\n    local -i n_min2_prev_prev\n \
    \   local -i n_min_prev_prev_prev\n    local -i n_min2_prev_prev_prev\n    local\
    \ -i n_min_prev_prev_prev_prev\n    local -i n_min2_prev_prev_prev_prev\n    local\
    \ -i n_min_prev_prev_prev_prev_prev\n    local -i n_min2_prev_prev_prev_prev_prev\n\
    \    local -i n_min_prev_prev_prev_prev_prev_prev\n    local -i n_min2_prev_prev_prev_prev_prev_prev\n\
    \    local -i n_min_prev_prev_prev_prev_prev_prev_prev\n    local -i n_min2_prev_prev_prev_prev_prev_prev_prev\n\
    \    local -i n_min_prev_prev_prev_prev_prev_prev_prev_prev\n    local -i n_min2_prev_prev_prev_prev_prev_prev_prev_prev\n\
    \    local -i n_min_prev_prev_prev_prev_prev_prev_prev_prev_prev\n    local -i\
    \ n_min2_prev_prev_prev_prev_prev_prev_prev_prev_prev\n    local -i n_min_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n\
    \    local -i n_min2_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n    local\
    \ -i n_min_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n    local -i\
    \ n_min2_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n    local -i\
    \ n_min_prev_prev_", "  local -a arr=($1)\n  local min=${arr[0]}\n  local second_min=${arr[0]}\n\
    \  for i in ${arr[@]}; do\n    if [[ $i -lt $min ]]; then\n      second_min=$min\n\
    \      min=$i\n    elif [[ $i -lt $second_min ]]; then\n      second_min=$i\n\
    \    fi\n  done\n  if [[ $min -eq $second_min ]]; then\n    echo \"None\"\n  else\n\
    \    echo $second_min\n  fi", "    local list=$1\n    local smallest=${list%%\
    \ *}\n    local next_smallest=${list#* }\n    local next_smallest=${next_smallest%%\
    \ *}\n    local next_smallest=${next_smallest:-None}\n    for i in $list; do\n\
    \        if [[ $i -lt $smallest ]]; then\n            smallest=$i\n        elif\
    \ [[ $i -lt $next_smallest && $i -ne $smallest ]]; then\n            next_smallest=$i\n\
    \        fi\n    done\n    echo $next_smallest", "    local -a arr=($1)\n    local\
    \ -i n=${#arr[@]}\n    local -i i=0\n    local -i min=0\n    local -i min2=0\n\
    \    local -i tmp=0\n\n    if [ $n -lt 2 ]; then\n        echo \"None\"\n    \
    \    return\n    fi\n\n    min=${arr[0]}\n    min2=${arr[1]}\n    if [ $min -gt\
    \ $min2 ]; then\n        tmp=$min\n        min=$min2\n        min2=$tmp\n    fi\n\
    \n    for ((i=2; i<n; i++)); do\n        if [ ${arr[i]} -lt $min ]; then\n   \
    \         min2=$min\n            min=${arr[i]}\n        elif [ ${arr[i]} -lt $min2\
    \ ]; then\n            min2=${arr[i]}\n        fi\n    done\n\n    echo $min2",
  "    local -a arr=($1)\n    local min=${arr[0]}\n    local min2=${arr[0]}\n    for\
    \ i in \"${arr[@]}\"; do\n        if [[ $i -lt $min ]]; then\n            min2=$min\n\
    \            min=$i\n        elif [[ $i -lt $min2 ]]; then\n            min2=$i\n\
    \        fi\n    done\n    if [[ $min2 -eq $min ]]; then\n        echo \"None\"\
    \n    else\n        echo $min2\n    fi", "  if [ -z \"$1\" ]; then\n    echo \"\
    None\"\n    return\n  fi\n  local -a arr=($1)\n  local min=${arr[0]}\n  local\
    \ min2=${arr[0]}\n  for i in ${arr[@]}; do\n    if [ $i -lt $min ]; then\n   \
    \   min2=$min\n      min=$i\n    elif [ $i -lt $min2 ]; then\n      min2=$i\n\
    \    fi\n  done\n  if [ $min -eq $min2 ]; then\n    echo \"None\"\n  else\n  \
    \  echo $min2\n  fi", "  local list=$1\n  local smallest=$(echo \"$list\" | head\
    \ -n 1)\n  local next_smallest=$(echo \"$list\" | head -n 2 | tail -n 1)\n  for\
    \ i in $list; do\n    if [ $i -lt $smallest ]; then\n      next_smallest=$smallest\n\
    \      smallest=$i\n    elif [ $i -lt $next_smallest ] && [ $i -ne $smallest ];\
    \ then\n      next_smallest=$i\n    fi\n  done\n  if [ $next_smallest -eq $smallest\
    \ ]; then\n    echo \"None\"\n  else\n    echo $next_smallest\n  fi", "    local\
    \ -a arr\n    local i\n    local min\n    local min2\n    local n\n\n    arr=($1)\n\
    \    min=${arr[0]}\n    min2=${arr[0]}\n    for ((i=1; i<${#arr[@]}; i++)); do\n\
    \        n=${arr[i]}\n        if ((n < min)); then\n            min2=$min\n  \
    \          min=$n\n        elif ((n < min2)); then\n            min2=$n\n    \
    \    fi\n    done\n    if ((min2 == min)); then\n        echo \"None\"\n    else\n\
    \        echo $min2\n    fi", "    # Write your code here\n    # To print results\
    \ to the standard output you can use echo\n    # Example: echo \"Hello world\"\
    \n    echo \"None\"", "    local -a arr\n    local -i i\n    local -i min\n  \
    \  local -i min2\n    local -i n\n    local -i tmp\n\n    if [[ -z \"$1\" ]];\
    \ then\n        echo \"None\"\n        return\n    fi\n\n    arr=($1)\n    min=${arr[0]}\n\
    \    min2=${arr[0]}\n    n=${#arr[@]}\n\n    for ((i=1; i<n; i++)); do\n     \
    \   tmp=${arr[i]}\n        if ((tmp < min)); then\n            min2=min\n    \
    \        min=tmp\n        elif ((tmp < min2)); then\n            min2=tmp\n  \
    \      fi\n    done\n\n    if ((min2 == min)); then\n        echo \"None\"\n \
    \   else\n        echo \"$min2\"\n    fi", "    local -a nums=($1)\n    local\
    \ min=${nums[0]}\n    local min2=${nums[0]}\n    for (( i=1; i<${#nums[@]}; i++\
    \ )); do\n        if (( nums[i] < min )); then\n            min2=$min\n      \
    \      min=${nums[i]}\n        elif (( nums[i] < min2 )); then\n            min2=${nums[i]}\n\
    \        fi\n    done\n    if (( min2 == min )); then\n        echo \"None\"\n\
    \    else\n        echo $min2\n    fi", "    local list=$1\n    local smallest=$(echo\
    \ \"$list\" | sort -n | head -n 1)\n    local second_smallest=$(echo \"$list\"\
    \ | sort -n | head -n 2 | tail -n 1)\n    if [ \"$smallest\" == \"$second_smallest\"\
    \ ]; then\n        echo \"None\"\n    else\n        echo \"$second_smallest\"\n\
    \    fi", "  local list=$1\n  local smallest=${list%% *}\n  local second_smallest=${list%%\
    \ *}\n  for item in $list; do\n    if [[ $item -lt $smallest ]]; then\n      second_smallest=$smallest\n\
    \      smallest=$item\n    elif [[ $item -lt $second_smallest ]]; then\n     \
    \ second_smallest=$item\n    fi\n  done\n  if [[ $smallest -eq $second_smallest\
    \ ]]; then\n    echo \"None\"\n  else\n    echo $second_smallest\n  fi", "   \
    \ local list=$1\n    local min=${list%% *}\n    local second_min=${list%% *}\n\
    \    for i in $list; do\n        if [[ $i -lt $min ]]; then\n            second_min=$min\n\
    \            min=$i\n        elif [[ $i -lt $second_min ]]; then\n           \
    \ second_min=$i\n        fi\n    done\n    if [[ $min -eq $second_min ]]; then\n\
    \        echo \"None\"\n    else\n        echo $second_min\n    fi", "    local\
    \ -a arr=($1)\n    local -a sorted=($(echo \"${arr[@]}\" | tr ' ' '\\n' | sort\
    \ -n))\n    local -a unique=($(echo \"${sorted[@]}\" | tr ' ' '\\n' | uniq))\n\
    \    if [[ ${#unique[@]} -lt 2 ]]; then\n        echo \"None\"\n    else\n   \
    \     echo \"${unique[1]}\"\n    fi", "  local -a arr=($1)\n  local min=${arr[0]}\n\
    \  local min2=${arr[0]}\n  for i in ${arr[@]}; do\n    if (( i < min )); then\n\
    \      min2=$min\n      min=$i\n    elif (( i < min2 )); then\n      min2=$i\n\
    \    fi\n  done\n  if (( min == min2 )); then\n    echo \"None\"\n  else\n   \
    \ echo $min2\n  fi", "  if [ -z \"$1\" ]; then\n    echo \"None\"\n  else\n  \
    \  echo \"$1\" | tr ' ' '\\n' | sort -n | uniq -c | sort -n | awk '{if(NR==2)\
    \ print $2}'\n  fi", "    local -a array\n    local -i i=0\n    local -i min=0\n\
    \    local -i min2=0\n    local -i n=0\n    local -i n2=0\n    local -i tmp=0\n\
    \    local -i tmp2=0\n\n    if [ -z \"$1\" ]; then\n        echo \"None\"\n  \
    \      return\n    fi\n\n    array=($1)\n    n=${#array[@]}\n    if [ $n -lt 2\
    \ ]; then\n        echo \"None\"\n        return\n    fi\n\n    min=${array[0]}\n\
    \    min2=${array[1]}\n    if [ $min -gt $min2 ]; then\n        tmp=$min\n   \
    \     min=$min2\n        min2=$tmp\n    fi\n\n    for ((i=2; i<n; i++)); do\n\
    \        tmp=${array[$i]}\n        if [ $tmp -lt $min ]; then\n            min2=$min\n\
    \            min=$tmp\n        elif [ $tmp -lt $min2 ]; then\n            min2=$tmp\n\
    \        fi\n    done\n\n    echo $min2", "    arr=($1)\n    if [ ${#arr[@]} -lt\
    \ 2 ]; then\n        echo \"None\"\n        return\n    fi\n    min=${arr[0]}\n\
    \    min2=${arr[1]}\n    for i in ${arr[@]}; do\n        if [ $i -lt $min ]; then\n\
    \            min2=$min\n            min=$i\n        elif [ $i -lt $min2 ]; then\n\
    \            min2=$i\n        fi\n    done\n    echo $min2", "  local -a arr\n\
    \  local i\n  local min\n  local min2\n  arr=($1)\n  min=${arr[0]}\n  min2=${arr[0]}\n\
    \  for ((i=1; i<${#arr[@]}; i++)); do\n    if [[ ${arr[i]} -lt $min ]]; then\n\
    \      min2=$min\n      min=${arr[i]}\n    elif [[ ${arr[i]} -lt $min2 ]]; then\n\
    \      min2=${arr[i]}\n    fi\n  done\n  if [[ $min2 -eq $min ]]; then\n    echo\
    \ \"None\"\n  else\n    echo $min2\n  fi", "    local -a arr=($1)\n    local -i\
    \ min1 min2\n    min1=${arr[0]}\n    min2=${arr[1]}\n    for n in \"${arr[@]}\"\
    ; do\n        if (( n < min1 )); then\n            min2=min1\n            min1=n\n\
    \        elif (( n < min2 )); then\n            min2=n\n        fi\n    done\n\
    \    if (( min1 == min2 )); then\n        echo \"None\"\n    else\n        echo\
    \ \"$min2\"\n    fi", "    local -a arr\n    local -i i j\n    local -i min min2\n\
    \    local -i len\n    local -i tmp\n\n    arr=($1)\n    len=${#arr[@]}\n    if\
    \ (( len < 2 )); then\n        echo \"None\"\n        return\n    fi\n\n    min=${arr[0]}\n\
    \    min2=${arr[1]}\n    if (( min > min2 )); then\n        tmp=min\n        min=min2\n\
    \        min2=tmp\n    fi\n\n    for (( i = 2; i < len; i++ )); do\n        if\
    \ (( arr[i] < min )); then\n            min2=min\n            min=arr[i]\n   \
    \     elif (( arr[i] < min2 )); then\n            min2=arr[i]\n        fi\n  \
    \  done\n\n    echo $min2", "  local list=$1\n  local smallest=$(echo \"$list\"\
    \ | head -n 1)\n  local second_smallest=$(echo \"$list\" | head -n 2 | tail -n\
    \ 1)\n  for i in $list; do\n    if [ $i -lt $smallest ]; then\n      second_smallest=$smallest\n\
    \      smallest=$i\n    elif [ $i -lt $second_smallest ]; then\n      second_smallest=$i\n\
    \    fi\n  done\n  if [ $second_smallest -eq $smallest ]; then\n    echo \"None\"\
    \n  else\n    echo $second_smallest\n  fi", "    local -a arr=($1)\n    local\
    \ -i i=0\n    local -i min1=${arr[0]}\n    local -i min2=${arr[0]}\n    for ((i=1;\
    \ i<${#arr[@]}; i++)); do\n        if [[ ${arr[i]} -lt $min1 ]]; then\n      \
    \      min2=$min1\n            min1=${arr[i]}\n        elif [[ ${arr[i]} -lt $min2\
    \ ]]; then\n            min2=${arr[i]}\n        fi\n    done\n    if [[ $min1\
    \ -eq $min2 ]]; then\n        echo \"None\"\n    else\n        echo $min2\n  \
    \  fi", "    local -a arr\n    local i j\n    local min min2\n    local -i n\n\
    \    arr=($1)\n    n=${#arr[@]}\n    if (( n < 2 )); then\n        echo \"None\"\
    \n        return\n    fi\n    min=${arr[0]}\n    min2=${arr[1]}\n    if (( min\
    \ > min2 )); then\n        min=${arr[1]}\n        min2=${arr[0]}\n    fi\n   \
    \ for (( i = 2; i < n; i++ )); do\n        if (( arr[i] < min )); then\n     \
    \       min2=${min}\n            min=${arr[i]}\n        elif (( arr[i] < min2\
    \ )); then\n            min2=${arr[i]}\n        fi\n    done\n    echo \"${min2}\"",
  "    local -a a=($1)\n    local -i n=${#a[@]}\n    local -i i=0\n    local -i min=${a[0]}\n\
    \    local -i min2=${a[0]}\n    while ((i < n)); do\n        if ((a[i] < min));\
    \ then\n            min2=min\n            min=a[i]\n        elif ((a[i] < min2));\
    \ then\n            min2=a[i]\n        fi\n        ((i++))\n    done\n    if ((min2\
    \ == min)); then\n        echo \"None\"\n    else\n        echo \"$min2\"\n  \
    \  fi", "    local -a arr=($1)\n    local min=${arr[0]}\n    local min2=${arr[0]}\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ $i -lt $min ]]; then\n        \
    \    min2=$min\n            min=$i\n        elif [[ $i -lt $min2 ]]; then\n  \
    \          min2=$i\n        fi\n    done\n    if [[ $min2 -eq $min ]]; then\n\
    \        echo \"None\"\n    else\n        echo $min2\n    fi", "  local list=$1\n\
    \  local smallest=${list%% *}\n  local next_smallest=${list##* }\n  local n\n\
    \  for n in $list; do\n    if [[ $n -lt $smallest ]]; then\n      next_smallest=$smallest\n\
    \      smallest=$n\n    elif [[ $n -lt $next_smallest && $n -ne $smallest ]];\
    \ then\n      next_smallest=$n\n    fi\n  done\n  if [[ $next_smallest -eq $smallest\
    \ ]]; then\n    echo \"None\"\n  else\n    echo $next_smallest\n  fi", "    local\
    \ -a arr=($1)\n    local -i len=${#arr[@]}\n    local -i i j\n    local -i min1\
    \ min2\n    if (( len < 2 )); then\n        echo \"None\"\n        return\n  \
    \  fi\n    min1=${arr[0]}\n    min2=${arr[1]}\n    if (( min1 > min2 )); then\n\
    \        min1=${arr[1]}\n        min2=${arr[0]}\n    fi\n    for (( i=2; i<len;\
    \ i++ )); do\n        if (( arr[i] < min1 )); then\n            min2=min1\n  \
    \          min1=${arr[i]}\n        elif (( arr[i] < min2 )); then\n          \
    \  min2=${arr[i]}\n        fi\n    done\n    echo $min2", "  local list=\"$1\"\
    \n  local smallest=$(echo \"$list\" | awk '{print $1}')\n  local second_smallest=$(echo\
    \ \"$list\" | awk '{print $2}')\n  for i in $list; do\n    if [[ $i -lt $smallest\
    \ ]]; then\n      second_smallest=$smallest\n      smallest=$i\n    elif [[ $i\
    \ -lt $second_smallest ]]; then\n      second_smallest=$i\n    fi\n  done\n  if\
    \ [[ $second_smallest -eq $smallest ]]; then\n    echo \"None\"\n  else\n    echo\
    \ \"$second_smallest\"\n  fi", "    # Write your code here\n    # To print results\
    \ to the standard output you can use echo\n    # Example: echo \"Hello world\"\
    \n    echo \"None\"", "    local -a arr=($1)\n    local -a sorted=($(echo \"${arr[@]}\"\
    \ | tr ' ' '\\n' | sort -n))\n    local -i len=${#sorted[@]}\n    if (( len <\
    \ 2 )); then\n        echo \"None\"\n    else\n        echo \"${sorted[1]}\"\n\
    \    fi", "  local -a arr=($1)\n  local min=${arr[0]}\n  local min2=${arr[0]}\n\
    \  for i in \"${arr[@]}\"; do\n    if (( $i < $min )); then\n      min2=$min\n\
    \      min=$i\n    elif (( $i < $min2 )); then\n      min2=$i\n    fi\n  done\n\
    \  if (( $min2 == $min )); then\n    echo \"None\"\n  else\n    echo $min2\n \
    \ fi", "    local -a arr=($1)\n    local min=${arr[0]}\n    local min2=${arr[0]}\n\
    \    for i in ${arr[@]}; do\n        if (( i < min )); then\n            min2=$min\n\
    \            min=$i\n        elif (( i < min2 )); then\n            min2=$i\n\
    \        fi\n    done\n    if (( min2 == min )); then\n        echo \"None\"\n\
    \    else\n        echo $min2\n    fi", "    local -a arr=($1)\n    local min=${arr[0]}\n\
    \    local next_min=${arr[0]}\n    for i in \"${arr[@]}\"; do\n        if [[ $i\
    \ -lt $min ]]; then\n            next_min=$min\n            min=$i\n        elif\
    \ [[ $i -lt $next_min && $i -ne $min ]]; then\n            next_min=$i\n     \
    \   fi\n    done\n    if [[ $next_min -eq $min ]]; then\n        echo \"None\"\
    \n    else\n        echo $next_min\n    fi", "    local -a arr\n    local -i i\n\
    \    local -i min\n    local -i min2\n    local -i n\n\n    arr=($1)\n    n=${#arr[@]}\n\
    \    if (( n < 2 )); then\n        echo \"None\"\n        return\n    fi\n\n \
    \   min=${arr[0]}\n    min2=${arr[1]}\n    if (( min > min2 )); then\n       \
    \ min=${arr[1]}\n        min2=${arr[0]}\n    fi\n\n    for (( i = 2; i < n; i++\
    \ )); do\n        if (( arr[i] < min )); then\n            min2=min\n        \
    \    min=${arr[i]}\n        elif (( arr[i] < min2 )); then\n            min2=${arr[i]}\n\
    \        fi\n    done\n\n    echo \"$min2\"", "  local -a arr=($1)\n  local -i\
    \ len=${#arr[@]}\n  if (( len < 2 )); then\n    echo \"None\"\n    return\n  fi\n\
    \  local -i i\n  local -i min=${arr[0]}\n  local -i min2=${arr[1]}\n  if (( min\
    \ > min2 )); then\n    min2=min\n    min=${arr[1]}\n  fi\n  for (( i=2; i<len;\
    \ i++ )); do\n    if (( arr[i] < min )); then\n      min2=min\n      min=${arr[i]}\n\
    \    elif (( arr[i] < min2 )); then\n      min2=${arr[i]}\n    fi\n  done\n  echo\
    \ \"$min2\"", "  local list=$1\n  local smallest=$(echo $list | cut -d' ' -f1)\n\
    \  local next_smallest=$smallest\n  for i in $list; do\n    if [[ $i -lt $smallest\
    \ ]]; then\n      next_smallest=$smallest\n      smallest=$i\n    elif [[ $i -lt\
    \ $next_smallest && $i -ne $smallest ]]; then\n      next_smallest=$i\n    fi\n\
    \  done\n  if [[ $next_smallest -eq $smallest ]]; then\n    echo \"None\"\n  else\n\
    \    echo $next_smallest\n  fi", "  if [ -z \"$1\" ]; then\n    echo \"None\"\n\
    \    return\n  fi\n  local smallest=$(echo \"$1\" | tr ' ' '\\n' | sort -n | head\
    \ -n 1)\n  local second_smallest=$(echo \"$1\" | tr ' ' '\\n' | sort -n | head\
    \ -n 2 | tail -n 1)\n  if [ \"$smallest\" -eq \"$second_smallest\" ]; then\n \
    \   echo \"None\"\n  else\n    echo \"$second_smallest\"\n  fi", "    if [ $#\
    \ -eq 0 ]; then\n        echo \"None\"\n        return\n    fi\n    if [ $# -eq\
    \ 1 ]; then\n        echo \"None\"\n        return\n    fi\n    local smallest=$1\n\
    \    local second_smallest=$1\n    for i in $@; do\n        if [ $i -lt $smallest\
    \ ]; then\n            second_smallest=$smallest\n            smallest=$i\n  \
    \      elif [ $i -lt $second_smallest ] && [ $i -ne $smallest ]; then\n      \
    \      second_smallest=$i\n        fi\n    done\n    echo $second_smallest", " \
    \   local -a arr\n    local i\n    local min\n    local min2\n    local -i len\n\
    \    local -i i\n    local -i j\n    local -i min_i\n    local -i min2_i\n   \
    \ local -i tmp\n    arr=($1)\n    len=${#arr[@]}\n    if ((len < 2)); then\n \
    \       echo \"None\"\n        return\n    fi\n    min=${arr[0]}\n    min2=${arr[1]}\n\
    \    min_i=0\n    min2_i=1\n    if ((min > min2)); then\n        tmp=min\n   \
    \     min=min2\n        min2=tmp\n        tmp=min_i\n        min_i=min2_i\n  \
    \      min2_i=tmp\n    fi\n    for ((i=2; i<len; i++)); do\n        if ((arr[i]\
    \ < min)); then\n            min2=min\n            min2_i=min_i\n            min=${arr[i]}\n\
    \            min_i=i\n        elif ((arr[i] < min2)); then\n            min2=${arr[i]}\n\
    \            min2_i=i\n        fi\n    done\n    if ((min2_i == min_i)); then\n\
    \        echo \"None\"\n    else\n        echo \"$min2\"\n    fi", "  local list=$1\n\
    \  local smallest=$(echo $list | cut -d' ' -f1)\n  local next_smallest=$smallest\n\
    \  for i in $list; do\n    if (( $i < $smallest )); then\n      next_smallest=$smallest\n\
    \      smallest=$i\n    elif (( $i < $next_smallest && $i != $smallest )); then\n\
    \      next_smallest=$i\n    fi\n  done\n  if (( $next_smallest == $smallest ));\
    \ then\n    echo \"None\"\n  else\n    echo $next_smallest\n  fi", "    local\
    \ list=\"$1\"\n    local smallest=$(echo \"$list\" | tr ' ' '\\n' | sort -n |\
    \ head -n 1)\n    local second_smallest=$(echo \"$list\" | tr ' ' '\\n' | sort\
    \ -n | head -n 2 | tail -n 1)\n    if [ \"$smallest\" = \"$second_smallest\" ];\
    \ then\n        echo \"None\"\n    else\n        echo \"$second_smallest\"\n \
    \   fi", "    local -a arr\n    local i\n    local min\n    local min2\n    arr=($1)\n\
    \    min=${arr[0]}\n    min2=${arr[0]}\n    for ((i=1; i<${#arr[@]}; i++)); do\n\
    \        if [[ ${arr[i]} -lt $min ]]; then\n            min2=$min\n          \
    \  min=${arr[i]}\n        elif [[ ${arr[i]} -lt $min2 ]]; then\n            min2=${arr[i]}\n\
    \        fi\n    done\n    if [[ $min2 -eq $min ]]; then\n        echo \"None\"\
    \n    else\n        echo $min2\n    fi", "    local -a arr=($1)\n    local min=${arr[0]}\n\
    \    local min2=${arr[0]}\n    for i in ${arr[@]}; do\n        if [[ $i -lt $min\
    \ ]]; then\n            min2=$min\n            min=$i\n        elif [[ $i -lt\
    \ $min2 ]]; then\n            min2=$i\n        fi\n    done\n    if [[ $min2 -eq\
    \ $min ]]; then\n        echo \"None\"\n    else\n        echo $min2\n    fi",
  "  local list=$1\n  local sorted=$(echo \"$list\" | tr ' ' '\\n' | sort -n)\n  local\
    \ smallest=$(echo \"$sorted\" | head -n 1)\n  local second_smallest=$(echo \"\
    $sorted\" | tail -n +2 | head -n 1)\n  if [ \"$smallest\" == \"$second_smallest\"\
    \ ]; then\n    echo \"None\"\n  else\n    echo \"$second_smallest\"\n  fi", " \
    \   local -a arr=($1)\n    local min=${arr[0]}\n    local min_index=0\n    local\
    \ second_min=${arr[0]}\n    local second_min_index=0\n    local i=0\n    for i\
    \ in ${!arr[@]}; do\n        if [[ ${arr[$i]} -lt $min ]]; then\n            second_min=$min\n\
    \            second_min_index=$min_index\n            min=${arr[$i]}\n       \
    \     min_index=$i\n        elif [[ ${arr[$i]} -lt $second_min && $i -ne $min_index\
    \ ]]; then\n            second_min=${arr[$i]}\n            second_min_index=$i\n\
    \        fi\n    done\n    if [[ $second_min -eq $min ]]; then\n        echo \"\
    None\"\n    else\n        echo $second_min\n    fi", "  local list=($1)\n  local\
    \ min=${list[0]}\n  local min2=${list[0]}\n  local i=0\n  while [ $i -lt ${#list[@]}\
    \ ]; do\n    if [ ${list[$i]} -lt $min ]; then\n      min2=$min\n      min=${list[$i]}\n\
    \    elif [ ${list[$i]} -lt $min2 ]; then\n      min2=${list[$i]}\n    fi\n  \
    \  i=$((i+1))\n  done\n  if [ $min -eq $min2 ]; then\n    echo \"None\"\n  else\n\
    \    echo $min2\n  fi", "  local list=\"$1\"\n  local smallest=\n  local next_smallest=\n\
    \  for i in $list; do\n    if [[ -z $smallest ]]; then\n      smallest=$i\n  \
    \  elif [[ $i -lt $smallest ]]; then\n      next_smallest=$smallest\n      smallest=$i\n\
    \    elif [[ -z $next_smallest ]] || [[ $i -lt $next_smallest ]]; then\n     \
    \ next_smallest=$i\n    fi\n  done\n  if [[ -z $next_smallest ]]; then\n    echo\
    \ \"None\"\n  else\n    echo \"$next_smallest\"\n  fi", "    local -a arr\n  \
    \  local i\n    local min\n    local min2\n    local n\n    arr=($1)\n    min=${arr[0]}\n\
    \    min2=${arr[0]}\n    for i in ${arr[@]}; do\n        if [[ $i -lt $min ]];\
    \ then\n            min2=$min\n            min=$i\n        elif [[ $i -lt $min2\
    \ ]]; then\n            min2=$i\n        fi\n    done\n    if [[ $min2 -eq $min\
    \ ]]; then\n        echo \"None\"\n    else\n        echo $min2\n    fi", "  \
    \  local -a arr\n    local i\n    local min\n    local min2\n    local -i len\n\
    \n    arr=($1)\n    len=${#arr[@]}\n    if (( len < 2 )); then\n        echo \"\
    None\"\n        return\n    fi\n\n    min=${arr[0]}\n    min2=${arr[1]}\n    if\
    \ (( min > min2 )); then\n        min=${arr[1]}\n        min2=${arr[0]}\n    fi\n\
    \n    for (( i = 2; i < len; i++ )); do\n        if (( arr[i] < min )); then\n\
    \            min2=${min}\n            min=${arr[i]}\n        elif (( arr[i] <\
    \ min2 )); then\n            min2=${arr[i]}\n        fi\n    done\n\n    echo\
    \ \"${min2}\"", "  local list=$1\n  local smallest=${list%% *}\n  local next_smallest=${list#*\
    \ }\n  local next_smallest=${next_smallest%% *}\n  for i in $list; do\n    if\
    \ [[ $i -lt $smallest ]]; then\n      next_smallest=$smallest\n      smallest=$i\n\
    \    elif [[ $i -lt $next_smallest ]]; then\n      next_smallest=$i\n    fi\n\
    \  done\n  if [[ $next_smallest -eq $smallest ]]; then\n    echo \"None\"\n  else\n\
    \    echo $next_smallest\n  fi", "    local -a arr=()\n    for i in $1; do\n \
    \       arr+=($i)\n    done\n    if [ ${#arr[@]} -lt 2 ]; then\n        echo \"\
    None\"\n        return\n    fi\n    local min=${arr[0]}\n    local min2=${arr[1]}\n\
    \    if [ $min -gt $min2 ]; then\n        min=$min2\n        min2=${arr[0]}\n\
    \    fi\n    for i in ${arr[@]:2}; do\n        if [ $i -lt $min ]; then\n    \
    \        min2=$min\n            min=$i\n        elif [ $i -lt $min2 ]; then\n\
    \            min2=$i\n        fi\n    done\n    echo $min2", "    local -a arr=($1)\n\
    \    local min=${arr[0]}\n    local min2=${arr[0]}\n    for i in ${arr[@]}; do\n\
    \        if [[ $i -lt $min ]]; then\n            min2=$min\n            min=$i\n\
    \        elif [[ $i -lt $min2 ]]; then\n            min2=$i\n        fi\n    done\n\
    \    if [[ $min2 -eq $min ]]; then\n        echo \"None\"\n    else\n        echo\
    \ $min2\n    fi", "    local -a arr=($1)\n    local min=${arr[0]}\n    local min2=${arr[0]}\n\
    \    for i in ${arr[@]}; do\n        if [[ $i -lt $min ]]; then\n            min2=$min\n\
    \            min=$i\n        elif [[ $i -lt $min2 ]]; then\n            min2=$i\n\
    \        fi\n    done\n    if [[ $min2 -eq $min ]]; then\n        echo \"None\"\
    \n    else\n        echo $min2\n    fi", "    local list=$1\n    local min=${list%%\
    \ *}\n    local min2=${list%% *}\n    for i in $list; do\n        if [[ $i -lt\
    \ $min ]]; then\n            min2=$min\n            min=$i\n        elif [[ $i\
    \ -lt $min2 ]]; then\n            min2=$i\n        fi\n    done\n    if [[ $min2\
    \ -eq $min ]]; then\n        echo \"None\"\n    else\n        echo $min2\n   \
    \ fi", "  if [ -z \"$1\" ]; then\n    echo \"None\"\n    return\n  fi\n  local\
    \ smallest=$(echo \"$1\" | tr ' ' '\\n' | sort -n | head -n 1)\n  local second_smallest=$(echo\
    \ \"$1\" | tr ' ' '\\n' | sort -n | head -n 2 | tail -n 1)\n  if [ \"$smallest\"\
    \ = \"$second_smallest\" ]; then\n    echo \"None\"\n  else\n    echo \"$second_smallest\"\
    \n  fi", "    local -a array=($1)\n    local -a sorted=($(echo ${array[@]} | tr\
    \ ' ' '\\n' | sort -n))\n    local -a unique=($(echo ${sorted[@]} | tr ' ' '\\\
    n' | uniq))\n    local -a second_smallest=($(echo ${unique[@]} | tr ' ' '\\n'\
    \ | sed -n 2p))\n    if [ ${#second_smallest[@]} -eq 0 ]; then\n        echo \"\
    None\"\n    else\n        echo ${second_smallest[@]}\n    fi", "    local -a arr=($1)\n\
    \    local min=${arr[0]}\n    local min2=${arr[0]}\n    for i in ${arr[@]}; do\n\
    \        if [[ $i -lt $min ]]; then\n            min2=$min\n            min=$i\n\
    \        elif [[ $i -lt $min2 ]]; then\n            min2=$i\n        fi\n    done\n\
    \    if [[ $min2 -eq $min ]]; then\n        echo \"None\"\n    else\n        echo\
    \ $min2\n    fi", "    local -a arr=()\n    local -i i=0\n    local -i min=0\n\
    \    local -i min2=0\n    local -i len=0\n    local -i tmp=0\n\n    # convert\
    \ string to array\n    IFS=' ' read -r -a arr <<< \"$1\"\n\n    # find the smallest\
    \ element\n    min=${arr[0]}\n    for ((i=1; i<${#arr[@]}; i++)); do\n       \
    \ if (( ${arr[i]} < min )); then\n            min=${arr[i]}\n        fi\n    done\n\
    \n    # find the 2nd smallest element\n    min2=${arr[0]}\n    for ((i=1; i<${#arr[@]};\
    \ i++)); do\n        if (( ${arr[i]} < min2 )); then\n            if (( ${arr[i]}\
    \ > min )); then\n                min2=${arr[i]}\n            fi\n        fi\n\
    \    done\n\n    # check if there is no 2nd smallest element\n    if (( min2 ==\
    \ min )); then\n        echo \"None\"\n    else\n        echo \"$min2\"\n    fi",
  "  local list=\"$1\"\n  local smallest=\n  local next_smallest=\n  for i in $list;\
    \ do\n    if [ -z \"$smallest\" ]; then\n      smallest=$i\n    elif [ -z \"$next_smallest\"\
    \ ]; then\n      if [ $i -lt $smallest ]; then\n        next_smallest=$smallest\n\
    \        smallest=$i\n      else\n        next_smallest=$i\n      fi\n    elif\
    \ [ $i -lt $smallest ]; then\n      next_smallest=$smallest\n      smallest=$i\n\
    \    elif [ $i -lt $next_smallest ]; then\n      next_smallest=$i\n    fi\n  done\n\
    \  if [ -z \"$next_smallest\" ]; then\n    echo \"None\"\n  else\n    echo \"\
    $next_smallest\"\n  fi", "  local list=($1)\n  local min=${list[0]}\n  local min2=${list[0]}\n\
    \  for i in \"${list[@]}\"; do\n    if [[ $i -lt $min ]]; then\n      min2=$min\n\
    \      min=$i\n    elif [[ $i -lt $min2 ]]; then\n      min2=$i\n    fi\n  done\n\
    \  if [[ $min2 -eq $min ]]; then\n    echo \"None\"\n  else\n    echo $min2\n\
    \  fi", "  local -a arr\n  IFS=' ' read -r -a arr <<< \"$1\"\n  local -a sorted=($(printf\
    \ \"%s\\n\" \"${arr[@]}\" | sort -n))\n  local -a unique=($(printf \"%s\\n\" \"\
    ${sorted[@]}\" | uniq))\n  if [ ${#unique[@]} -lt 2 ]; then\n    echo \"None\"\
    \n  else\n    echo \"${unique[1]}\"\n  fi", "    local -a arr=($1)\n    local\
    \ min=${arr[0]}\n    local min2=${arr[0]}\n    for i in ${arr[@]}; do\n      \
    \  if (( i < min )); then\n            min2=$min\n            min=$i\n       \
    \ elif (( i < min2 )); then\n            min2=$i\n        fi\n    done\n    if\
    \ (( min2 == min )); then\n        echo \"None\"\n    else\n        echo $min2\n\
    \    fi", "    local -a arr=($1)\n    local -a sorted=($(printf \"%s\\n\" \"${arr[@]}\"\
    \ | sort -n))\n    local -i len=${#sorted[@]}\n    local -i i=0\n    local -i\
    \ prev=${sorted[0]}\n    local -i curr=0\n    local -i next=0\n    local -i found=0\n\
    \    local -i min=${sorted[0]}\n    local -i max=${sorted[-1]}\n    local -i second_smallest=0\n\
    \n    if [[ $len -eq 0 ]]; then\n        echo \"None\"\n        return\n    fi\n\
    \n    if [[ $len -eq 1 ]]; then\n        echo \"None\"\n        return\n    fi\n\
    \n    if [[ $len -eq 2 ]]; then\n        if [[ ${sorted[0]} -eq ${sorted[1]} ]];\
    \ then\n            echo \"None\"\n            return\n        fi\n    fi\n\n\
    \    for ((i=1; i<len; i++)); do\n        curr=${sorted[$i]}\n        if [[ $curr\
    \ -eq $prev ]]; then\n            continue\n        fi\n        if [[ $curr -gt\
    \ $prev ]]; then\n            if [[ $found -eq 0 ]]; then\n                second_smallest=$curr\n\
    \                found=1\n            fi\n        fi\n        prev=$curr\n   \
    \ done\n\n    if [[ $found -eq 0 ]]; then\n        echo \"None\"\n        return\n\
    \    fi\n\n    echo $second_smallest", "    local -a list=($1)\n    local min=${list[0]}\n\
    \    local min2=${list[0]}\n    for i in ${list[@]}; do\n        if [[ $i -lt\
    \ $min ]]; then\n            min2=$min\n            min=$i\n        elif [[ $i\
    \ -lt $min2 ]]; then\n            min2=$i\n        fi\n    done\n    if [[ $min2\
    \ -eq $min ]]; then\n        echo \"None\"\n    else\n        echo $min2\n   \
    \ fi", "    local list=($1)\n    local min=${list[0]}\n    local min2=${list[0]}\n\
    \    for i in ${list[@]}; do\n        if (( i < min )); then\n            min2=$min\n\
    \            min=$i\n        elif (( i < min2 )); then\n            min2=$i\n\
    \        fi\n    done\n    if (( min == min2 )); then\n        echo \"None\"\n\
    \    else\n        echo $min2\n    fi", "    local list=\"$1\"\n    local smallest\n\
    \    local second_smallest\n    for i in $list; do\n        if [ -z \"$smallest\"\
    \ ]; then\n            smallest=$i\n        elif [ -z \"$second_smallest\" ];\
    \ then\n            if [ $i -lt $smallest ]; then\n                second_smallest=$smallest\n\
    \                smallest=$i\n            else\n                second_smallest=$i\n\
    \            fi\n        elif [ $i -lt $smallest ]; then\n            second_smallest=$smallest\n\
    \            smallest=$i\n        elif [ $i -lt $second_smallest ]; then\n   \
    \         second_smallest=$i\n        fi\n    done\n    if [ -z \"$second_smallest\"\
    \ ]; then\n        echo \"None\"\n    else\n        echo \"$second_smallest\"\n\
    \    fi", "    local -a arr\n    local -i i\n    local -i min\n    local -i min2\n\
    \    local -i n\n    local -i n2\n    local -i n3\n    local -i n4\n    local\
    \ -i n5\n    local -i n6\n    local -i n7\n    local -i n8\n    local -i n9\n\
    \    local -i n10\n    local -i n11\n    local -i n12\n    local -i n13\n    local\
    \ -i n14\n    local -i n15\n    local -i n16\n    local -i n17\n    local -i n18\n\
    \    local -i n19\n    local -i n20\n    local -i n21\n    local -i n22\n    local\
    \ -i n23\n    local -i n24\n    local -i n25\n    local -i n26\n    local -i n27\n\
    \    local -i n28\n    local -i n29\n    local -i n30\n    local -i n31\n    local\
    \ -i n32\n    local -i n33\n    local -i n34\n    local -i n35\n    local -i n36\n\
    \    local -i n37\n    local -i n38\n    local -i n39\n    local -i n40\n    local\
    \ -i n41\n    local -i n42\n    local -i n43\n    local -i n44\n    local -i n45\n\
    \    local -i n46\n    local -i n47\n    local -i n48\n    local -i n49\n    local\
    \ -i n50\n    local -i n51\n    local -i n52\n    local -i n53\n    local -i n54\n\
    \    local -i n55\n    local -i n56\n    local -i n57\n    local -i n58\n    local\
    \ -i n59\n    local -i n60\n    local -i n61\n    local -i n62\n    local -i n63\n\
    \    local -i n64\n    local -i n65\n    local -i n66\n    local -i n67\n    local\
    \ -i n68\n    local -i n69\n    local -i", "  local list=$1\n  local sorted=$(echo\
    \ \"$list\" | tr ' ' '\\n' | sort -n)\n  local smallest=$(echo \"$sorted\" | head\
    \ -n 1)\n  local second_smallest=$(echo \"$sorted\" | sed -n 2p)\n  if [ \"$smallest\"\
    \ == \"$second_smallest\" ]; then\n    echo \"None\"\n  else\n    echo \"$second_smallest\"\
    \n  fi", "  local -a arr=($1)\n  local min=${arr[0]}\n  local min2=${arr[0]}\n\
    \  for ((i=1; i<${#arr[@]}; i++)); do\n    if [[ ${arr[i]} -lt $min ]]; then\n\
    \      min2=$min\n      min=${arr[i]}\n    elif [[ ${arr[i]} -lt $min2 ]]; then\n\
    \      min2=${arr[i]}\n    fi\n  done\n  if [[ $min2 -eq $min ]]; then\n    echo\
    \ \"None\"\n  else\n    echo $min2\n  fi", "    # your code here\n    echo \"\
    None\"", "    local -a arr=($1)\n    local -a sorted=($(printf \"%s\\n\" \"${arr[@]}\"\
    \ | sort -n))\n    local -a unique=($(printf \"%s\\n\" \"${sorted[@]}\" | uniq))\n\
    \    if [ ${#unique[@]} -gt 1 ]; then\n        echo ${unique[1]}\n    else\n \
    \       echo \"None\"\n    fi", "  local -a arr=($1)\n  local min=${arr[0]}\n\
    \  local min2=${arr[0]}\n  for i in ${arr[@]}; do\n    if (( i < min )); then\n\
    \      min2=$min\n      min=$i\n    elif (( i < min2 )); then\n      min2=$i\n\
    \    fi\n  done\n  if (( min2 == min )); then\n    echo \"None\"\n  else\n   \
    \ echo $min2\n  fi", "    local -a arr\n    local i\n    local min\n    local\
    \ min2\n    local -i n\n    arr=($1)\n    n=${#arr[@]}\n    if (( n < 2 )); then\n\
    \        echo \"None\"\n        return\n    fi\n    min=${arr[0]}\n    min2=${arr[1]}\n\
    \    if (( min > min2 )); then\n        min=${arr[1]}\n        min2=${arr[0]}\n\
    \    fi\n    for (( i = 2; i < n; i++ )); do\n        if (( arr[i] < min )); then\n\
    \            min2=${min}\n            min=${arr[i]}\n        elif (( arr[i] <\
    \ min2 )); then\n            min2=${arr[i]}\n        fi\n    done\n    echo \"\
    ${min2}\"", "  local list=$1\n  local smallest=$(echo \"$list\" | head -n 1)\n\
    \  local next_smallest=$(echo \"$list\" | head -n 2 | tail -n 1)\n  for i in $list;\
    \ do\n    if [[ $i -lt $smallest ]]; then\n      next_smallest=$smallest\n   \
    \   smallest=$i\n    elif [[ $i -lt $next_smallest ]]; then\n      next_smallest=$i\n\
    \    fi\n  done\n  if [[ $next_smallest -eq $smallest ]]; then\n    echo \"None\"\
    \n  else\n    echo $next_smallest\n  fi", "    local -a arr=()\n    local i=0\n\
    \    local min=0\n    local sec_min=0\n    local len=0\n    local -i ret=0\n\n\
    \    if [ -z \"$1\" ]; then\n        echo \"None\"\n        return 0\n    fi\n\
    \n    IFS=' ' read -r -a arr <<< \"$1\"\n    len=${#arr[@]}\n    min=${arr[0]}\n\
    \    sec_min=${arr[0]}\n\n    for ((i=0; i<len; i++)); do\n        if [ ${arr[i]}\
    \ -lt $min ]; then\n            sec_min=$min\n            min=${arr[i]}\n    \
    \    elif [ ${arr[i]} -lt $sec_min ] && [ ${arr[i]} -ne $min ]; then\n       \
    \     sec_min=${arr[i]}\n        fi\n    done\n\n    if [ $sec_min -eq $min ];\
    \ then\n        echo \"None\"\n        return 0\n    fi\n\n    echo \"$sec_min\"\
    \n    return 0", "    local -a arr=($1)\n    local min=${arr[0]}\n    local min2=${arr[0]}\n\
    \    for i in ${arr[@]}; do\n        if [[ $i -lt $min ]]; then\n            min2=$min\n\
    \            min=$i\n        elif [[ $i -lt $min2 ]]; then\n            min2=$i\n\
    \        fi\n    done\n    if [[ $min2 -eq $min ]]; then\n        echo \"None\"\
    \n    else\n        echo $min2\n    fi", "  if [ -z \"$1\" ]; then\n    echo \"\
    None\"\n    return\n  fi\n  local smallest=$(echo \"$1\" | awk '{print $1}')\n\
    \  local second_smallest=$smallest\n  for n in $1; do\n    if [ \"$n\" -lt \"\
    $smallest\" ]; then\n      second_smallest=$smallest\n      smallest=$n\n    elif\
    \ [ \"$n\" -lt \"$second_smallest\" ]; then\n      second_smallest=$n\n    fi\n\
    \  done\n  if [ \"$second_smallest\" -eq \"$smallest\" ]; then\n    echo \"None\"\
    \n  else\n    echo \"$second_smallest\"\n  fi", "    local -a arr=($1)\n    local\
    \ min=${arr[0]}\n    local min2=${arr[0]}\n    for i in ${arr[@]}; do\n      \
    \  if [[ $i -lt $min ]]; then\n            min2=$min\n            min=$i\n   \
    \     elif [[ $i -lt $min2 ]]; then\n            min2=$i\n        fi\n    done\n\
    \    if [[ $min2 -eq $min ]]; then\n        echo \"None\"\n    else\n        echo\
    \ $min2\n    fi", "    if [ -z \"$1\" ]; then\n        echo \"None\"\n       \
    \ return\n    fi\n    local smallest=$(echo \"$1\" | cut -d ' ' -f 1)\n    local\
    \ second_smallest=$smallest\n    for i in $1; do\n        if [ $i -lt $smallest\
    \ ]; then\n            second_smallest=$smallest\n            smallest=$i\n  \
    \      elif [ $i -lt $second_smallest ]; then\n            second_smallest=$i\n\
    \        fi\n    done\n    if [ $second_smallest -eq $smallest ]; then\n     \
    \   echo \"None\"\n    else\n        echo $second_smallest\n    fi", "    local\
    \ list=($1)\n    local smallest=${list[0]}\n    local next_smallest=${list[0]}\n\
    \    for i in ${list[@]}; do\n        if [[ $i -lt $smallest ]]; then\n      \
    \      next_smallest=$smallest\n            smallest=$i\n        elif [[ $i -lt\
    \ $next_smallest && $i -ne $smallest ]]; then\n            next_smallest=$i\n\
    \        fi\n    done\n    if [[ $next_smallest -eq $smallest ]]; then\n     \
    \   echo \"None\"\n    else\n        echo $next_smallest\n    fi", "    local\
    \ -a arr=($1)\n    local min=${arr[0]}\n    local sec_min=${arr[0]}\n    for i\
    \ in ${arr[@]}; do\n        if [[ $i -lt $min ]]; then\n            sec_min=$min\n\
    \            min=$i\n        elif [[ $i -lt $sec_min ]]; then\n            sec_min=$i\n\
    \        fi\n    done\n    if [[ $min -eq $sec_min ]]; then\n        echo \"None\"\
    \n    else\n        echo $sec_min\n    fi", "    local -a arr\n    IFS=' ' read\
    \ -r -a arr <<< \"$1\"\n    if [[ ${#arr[@]} -eq 0 ]]; then\n        echo \"None\"\
    \n        return\n    fi\n    if [[ ${#arr[@]} -eq 1 ]]; then\n        echo \"\
    None\"\n        return\n    fi\n    local smallest=${arr[0]}\n    local second_smallest=${arr[1]}\n\
    \    if [[ $smallest -gt $second_smallest ]]; then\n        smallest=$second_smallest\n\
    \        second_smallest=${arr[0]}\n    fi\n    for i in \"${arr[@]:2}\"; do\n\
    \        if [[ $i -lt $smallest ]]; then\n            second_smallest=$smallest\n\
    \            smallest=$i\n        elif [[ $i -lt $second_smallest ]]; then\n \
    \           second_smallest=$i\n        fi\n    done\n    echo \"$second_smallest\"",
  "    # Your code here\n    echo \"None\"", "    local -a array=($1)\n    local -a\
    \ sorted=($(echo \"${array[@]}\" | tr ' ' '\\n' | sort -n))\n    local -a unique=($(echo\
    \ \"${sorted[@]}\" | tr ' ' '\\n' | uniq))\n    if [[ ${#unique[@]} -lt 2 ]];\
    \ then\n        echo \"None\"\n    else\n        echo \"${unique[1]}\"\n    fi",
  "    local list=$1\n    local smallest=${list%% *}\n    local second_smallest=${list%%\
    \ *}\n    for i in $list; do\n        if [[ $i -lt $smallest ]]; then\n      \
    \      second_smallest=$smallest\n            smallest=$i\n        elif [[ $i\
    \ -lt $second_smallest && $i -ne $smallest ]]; then\n            second_smallest=$i\n\
    \        fi\n    done\n    if [[ $second_smallest -eq $smallest ]]; then\n   \
    \     echo \"None\"\n    else\n        echo $second_smallest\n    fi", "    local\
    \ list=($1)\n    local smallest=${list[0]}\n    local next_smallest=${list[0]}\n\
    \    for i in ${list[@]}; do\n        if [[ $i -lt $smallest ]]; then\n      \
    \      next_smallest=$smallest\n            smallest=$i\n        elif [[ $i -lt\
    \ $next_smallest && $i -ne $smallest ]]; then\n            next_smallest=$i\n\
    \        fi\n    done\n    if [[ $next_smallest -eq $smallest ]]; then\n     \
    \   echo \"None\"\n    else\n        echo $next_smallest\n    fi", "    local\
    \ -a arr\n    local i\n    local min\n    local min2\n    local n\n\n    arr=($1)\n\
    \    min=${arr[0]}\n    min2=${arr[0]}\n    for i in \"${arr[@]}\"; do\n     \
    \   if (( i < min )); then\n            min2=$min\n            min=$i\n      \
    \  elif (( i < min2 )); then\n            min2=$i\n        fi\n    done\n    if\
    \ (( min == min2 )); then\n        echo \"None\"\n    else\n        echo \"$min2\"\
    \n    fi", "  local list=\"$1\"\n  local smallest=$(echo \"$list\" | head -n 1)\n\
    \  local next_smallest=\n  for i in $list; do\n    if [ \"$i\" -lt \"$smallest\"\
    \ ]; then\n      next_smallest=$smallest\n      smallest=$i\n    elif [ \"$i\"\
    \ -lt \"$next_smallest\" ] && [ \"$i\" -ne \"$smallest\" ]; then\n      next_smallest=$i\n\
    \    fi\n  done\n  if [ -z \"$next_smallest\" ]; then\n    echo \"None\"\n  else\n\
    \    echo \"$next_smallest\"\n  fi", "  if [ -z \"$1\" ]; then\n    echo \"None\"\
    \n    return\n  fi\n  local smallest=$(echo \"$1\" | tr ' ' '\\n' | sort -n |\
    \ head -n 1)\n  local smallest_count=$(echo \"$1\" | tr ' ' '\\n' | grep -c \"\
    ^$smallest$\")\n  if [ \"$smallest_count\" -gt 1 ]; then\n    echo \"None\"\n\
    \    return\n  fi\n  local second_smallest=$(echo \"$1\" | tr ' ' '\\n' | sort\
    \ -n | head -n 2 | tail -n 1)\n  echo \"$second_smallest\"", "    local -a arr\n\
    \    local i\n    local min\n    local min2\n    IFS=' ' read -r -a arr <<< \"\
    $1\"\n    if [ ${#arr[@]} -lt 2 ]; then\n        echo \"None\"\n        return\n\
    \    fi\n    min=${arr[0]}\n    min2=${arr[1]}\n    for i in \"${arr[@]}\"; do\n\
    \        if [ \"$i\" -lt \"$min\" ]; then\n            min2=$min\n           \
    \ min=$i\n        elif [ \"$i\" -lt \"$min2\" ]; then\n            min2=$i\n \
    \       fi\n    done\n    echo \"$min2\"", "    local list=$1\n    local smallest=$(echo\
    \ \"$list\" | head -n 1)\n    local next_smallest=$(echo \"$list\" | head -n 2\
    \ | tail -n 1)\n    for i in $list; do\n        if [[ $i -lt $smallest ]]; then\n\
    \            next_smallest=$smallest\n            smallest=$i\n        elif [[\
    \ $i -lt $next_smallest ]]; then\n            next_smallest=$i\n        fi\n \
    \   done\n    if [[ $next_smallest -eq $smallest ]]; then\n        echo \"None\"\
    \n    else\n        echo $next_smallest\n    fi", "    if [ -z \"$1\" ]; then\n\
    \        echo \"None\"\n        return\n    fi\n    local smallest=$(echo \"$1\"\
    \ | tr ' ' '\\n' | sort -n | head -n 1)\n    local second_smallest=$(echo \"$1\"\
    \ | tr ' ' '\\n' | sort -n | head -n 2 | tail -n 1)\n    if [ \"$smallest\" -eq\
    \ \"$second_smallest\" ]; then\n        echo \"None\"\n    else\n        echo\
    \ \"$second_smallest\"\n    fi", "    local -a arr=($1)\n    local -i i=0\n  \
    \  local -i j=0\n    local -i min=0\n    local -i min2=0\n    local -i len=${#arr[@]}\n\
    \    local -i tmp=0\n\n    if [ $len -lt 2 ]; then\n        echo \"None\"\n  \
    \      return\n    fi\n\n    min=${arr[0]}\n    min2=${arr[1]}\n    if [ $min\
    \ -gt $min2 ]; then\n        tmp=$min\n        min=$min2\n        min2=$tmp\n\
    \    fi\n\n    for ((i=2; i<len; i++)); do\n        if [ ${arr[i]} -lt $min ];\
    \ then\n            min2=$min\n            min=${arr[i]}\n        elif [ ${arr[i]}\
    \ -lt $min2 ]; then\n            min2=${arr[i]}\n        fi\n    done\n\n    echo\
    \ $min2", "    local -a arr\n    local i\n    local min\n    local min2\n    local\
    \ n\n    local -i n_min\n    local -i n_min2\n    local -i n_min_max\n    local\
    \ -i n_min2_max\n    local -i n_min_min\n    local -i n_min2_min\n    local -i\
    \ n_min_min2\n    local -i n_min2_min2\n    local -i n_min_min2_max\n    local\
    \ -i n_min2_min2_max\n    local -i n_min_min2_min\n    local -i n_min2_min2_min\n\
    \    local -i n_min_min2_min2\n    local -i n_min2_min2_min2\n    local -i n_min_min2_min2_max\n\
    \    local -i n_min2_min2_min2_max\n    local -i n_min_min2_min2_min\n    local\
    \ -i n_min2_min2_min2_min\n    local -i n_min_min2_min2_min2\n    local -i n_min2_min2_min2_min2\n\
    \    local -i n_min_min2_min2_min2_max\n    local -i n_min2_min2_min2_min2_max\n\
    \    local -i n_min_min2_min2_min2_min\n    local -i n_min2_min2_min2_min2_min\n\
    \    local -i n_min_min2_min2_min2_min2\n    local -i n_min2_min2_min2_min2_min2\n\
    \    local -i n_min_min2_min2_min2_min2_max\n    local -i n_min2_min2_min2_min2_min2_max\n\
    \    local -i n_min_min2_min2_min2_min2_min\n    local -i n_min2_min2_min2_min2_min2_min\n\
    \    local -i n_min_min2_min2", "    local -a list=($1)\n    local min=${list[0]}\n\
    \    local min2=${list[0]}\n    for i in ${list[@]}; do\n        if [[ $i -lt\
    \ $min ]]; then\n            min2=$min\n            min=$i\n        elif [[ $i\
    \ -lt $min2 ]]; then\n            min2=$i\n        fi\n    done\n    if [[ $min2\
    \ -eq $min ]]; then\n        echo \"None\"\n    else\n        echo $min2\n   \
    \ fi", "    # Your code goes here\n    # You can use the following command to\
    \ sort the list:\n    # sorted=($(echo $1 | tr ' ' '\\n' | sort -n))\n    # echo\
    \ ${sorted[1]}\n    sorted=($(echo $1 | tr ' ' '\\n' | sort -n))\n    if [ ${#sorted[@]}\
    \ -lt 2 ]; then\n        echo \"None\"\n    else\n        echo ${sorted[1]}\n\
    \    fi", "    if [ -z \"$1\" ]; then\n        echo \"None\"\n        return\n\
    \    fi\n    local smallest=$(echo \"$1\" | tr ' ' '\\n' | sort -n | head -n 1)\n\
    \    local second_smallest=$(echo \"$1\" | tr ' ' '\\n' | sort -n | head -n 2\
    \ | tail -n 1)\n    if [ \"$smallest\" = \"$second_smallest\" ]; then\n      \
    \  echo \"None\"\n    else\n        echo \"$second_smallest\"\n    fi", "  if\
    \ [ -z \"$1\" ]; then\n    echo \"None\"\n    return\n  fi\n  local -a arr=($1)\n\
    \  local -a sorted=($(printf \"%s\\n\" \"${arr[@]}\" | sort -n))\n  if [ \"${#sorted[@]}\"\
    \ -lt 2 ]; then\n    echo \"None\"\n    return\n  fi\n  echo \"${sorted[1]}\"",
  "    local -a arr=($1)\n    local min=${arr[0]}\n    local min2=${arr[0]}\n    for\
    \ i in ${arr[@]}; do\n        if (( $i < $min )); then\n            min2=$min\n\
    \            min=$i\n        elif (( $i < $min2 && $i != $min )); then\n     \
    \       min2=$i\n        fi\n    done\n    if (( $min2 == $min )); then\n    \
    \    echo \"None\"\n    else\n        echo $min2\n    fi", "    if [ $# -eq 0\
    \ ]; then\n        echo \"None\"\n        return\n    fi\n    if [ $# -eq 1 ];\
    \ then\n        echo \"None\"\n        return\n    fi\n    local smallest=$1\n\
    \    local second_smallest=$1\n    shift\n    for i in $@; do\n        if [ $i\
    \ -lt $smallest ]; then\n            second_smallest=$smallest\n            smallest=$i\n\
    \        elif [ $i -lt $second_smallest ]; then\n            second_smallest=$i\n\
    \        fi\n    done\n    echo $second_smallest", "    local -a arr=()\n    local\
    \ -i i=0\n    local -i min=0\n    local -i min2=0\n    local -i n=0\n    local\
    \ -i tmp=0\n\n    for i in $1; do\n        arr[$n]=$i\n        ((n++))\n    done\n\
    \n    if ((n < 2)); then\n        echo \"None\"\n        return\n    fi\n\n  \
    \  min=${arr[0]}\n    min2=${arr[1]}\n\n    if ((min > min2)); then\n        tmp=min\n\
    \        min=min2\n        min2=tmp\n    fi\n\n    for ((i=2; i<n; i++)); do\n\
    \        if ((arr[i] < min)); then\n            min2=min\n            min=arr[i]\n\
    \        elif ((arr[i] < min2)); then\n            min2=arr[i]\n        fi\n \
    \   done\n\n    echo $min2", "    local -a arr=($1)\n    local -i len=${#arr[@]}\n\
    \    local -i i=0\n    local -i min=${arr[0]}\n    local -i min2=${arr[0]}\n \
    \   local -i tmp=0\n\n    if [ $len -eq 0 ]; then\n        echo \"None\"\n   \
    \     return\n    fi\n\n    for ((i=1; i<len; i++)); do\n        tmp=${arr[i]}\n\
    \        if [ $tmp -lt $min ]; then\n            min2=$min\n            min=$tmp\n\
    \        elif [ $tmp -lt $min2 ]; then\n            min2=$tmp\n        fi\n  \
    \  done\n\n    if [ $min2 -eq $min ]; then\n        echo \"None\"\n    else\n\
    \        echo $min2\n    fi", "    # your code here\n    echo \"None\"", "   \
    \ local -a arr=()\n    local -i i=0\n    local -i min=0\n    local -i min2=0\n\
    \    local -i len=0\n    local -i tmp=0\n\n    # convert string to array\n   \
    \ arr=($1)\n    len=${#arr[@]}\n\n    # check if array is empty\n    if [ $len\
    \ -eq 0 ]; then\n        echo \"None\"\n        return\n    fi\n\n    # find minimum\n\
    \    min=${arr[0]}\n    for ((i=1; i<len; i++)); do\n        tmp=${arr[i]}\n \
    \       if [ $tmp -lt $min ]; then\n            min=$tmp\n        fi\n    done\n\
    \n    # find second minimum\n    min2=$min\n    for ((i=0; i<len; i++)); do\n\
    \        tmp=${arr[i]}\n        if [ $tmp -gt $min ] && [ $tmp -lt $min2 ]; then\n\
    \            min2=$tmp\n        fi\n    done\n\n    # check if second minimum\
    \ exists\n    if [ $min2 -eq $min ]; then\n        echo \"None\"\n    else\n \
    \       echo $min2\n    fi", "    local list=($1)\n    local smallest=${list[0]}\n\
    \    local next_smallest=${list[0]}\n    for i in ${list[@]}; do\n        if [[\
    \ $i -lt $smallest ]]; then\n            next_smallest=$smallest\n           \
    \ smallest=$i\n        elif [[ $i -lt $next_smallest && $i -ne $smallest ]]; then\n\
    \            next_smallest=$i\n        fi\n    done\n    if [[ $next_smallest\
    \ -eq $smallest ]]; then\n        echo \"None\"\n    else\n        echo $next_smallest\n\
    \    fi", "    local -a arr\n    local -i i\n    local -i min\n    local -i sec_min\n\
    \    local -i len\n    local -i num\n    local -i flag\n\n    arr=($1)\n    len=${#arr[@]}\n\
    \    if [ $len -eq 0 ]; then\n        echo \"None\"\n        return\n    fi\n\
    \    min=${arr[0]}\n    sec_min=${arr[0]}\n    flag=0\n    for ((i=1; i<len; i++));\
    \ do\n        num=${arr[i]}\n        if [ $num -lt $min ]; then\n            sec_min=$min\n\
    \            min=$num\n        elif [ $num -lt $sec_min ]; then\n            sec_min=$num\n\
    \            flag=1\n        fi\n    done\n    if [ $flag -eq 0 ]; then\n    \
    \    echo \"None\"\n    else\n        echo $sec_min\n    fi", "    local -a arr\n\
    \    local i\n    local min\n    local min2\n    IFS=' ' read -r -a arr <<< \"\
    $1\"\n    min=${arr[0]}\n    min2=${arr[0]}\n    for i in \"${arr[@]}\"; do\n\
    \        if (( i < min )); then\n            min2=$min\n            min=$i\n \
    \       elif (( i < min2 && i != min )); then\n            min2=$i\n        fi\n\
    \    done\n    if (( min2 == min )); then\n        echo \"None\"\n    else\n \
    \       echo \"$min2\"\n    fi", "    local -a arr=($1)\n    local -i i\n    local\
    \ -i min=${arr[0]}\n    local -i min2=${arr[0]}\n    for ((i=1; i<${#arr[@]};\
    \ i++)); do\n        if [[ ${arr[i]} -lt $min ]]; then\n            min2=$min\n\
    \            min=${arr[i]}\n        elif [[ ${arr[i]} -lt $min2 ]]; then\n   \
    \         min2=${arr[i]}\n        fi\n    done\n    if [[ $min2 -eq $min ]]; then\n\
    \        echo \"None\"\n    else\n        echo $min2\n    fi", "    local -a arr=($1)\n\
    \    local -i len=${#arr[@]}\n    local -i i=0\n    local -i min=${arr[0]}\n \
    \   local -i min2=${arr[0]}\n    local -i tmp=0\n\n    if [ $len -lt 2 ]; then\n\
    \        echo \"None\"\n        return\n    fi\n\n    for ((i=1; i<len; i++));\
    \ do\n        tmp=${arr[i]}\n        if [ $tmp -lt $min ]; then\n            min2=$min\n\
    \            min=$tmp\n        elif [ $tmp -lt $min2 ]; then\n            min2=$tmp\n\
    \        fi\n    done\n\n    if [ $min2 -eq $min ]; then\n        echo \"None\"\
    \n    else\n        echo $min2\n    fi", "  local list=$1\n  local smallest=${list%%\
    \ *}\n  local second_smallest=${list%% *}\n  for number in $list; do\n    if [[\
    \ $number -lt $smallest ]]; then\n      second_smallest=$smallest\n      smallest=$number\n\
    \    elif [[ $number -lt $second_smallest ]]; then\n      second_smallest=$number\n\
    \    fi\n  done\n  if [[ $smallest -eq $second_smallest ]]; then\n    echo \"\
    None\"\n  else\n    echo $second_smallest\n  fi", "  local sorted=($(echo \"$1\"\
    \ | tr ' ' '\\n' | sort -n))\n  local smallest=${sorted[0]}\n  local second_smallest=${sorted[1]}\n\
    \  if [ \"$smallest\" == \"$second_smallest\" ]; then\n    echo \"None\"\n  else\n\
    \    echo \"$second_smallest\"\n  fi", "    local -a arr=($1)\n    local -i i\
    \ j\n    local -i min=${arr[0]}\n    local -i min2=${arr[0]}\n    for ((i=1; i<${#arr[@]};\
    \ i++)); do\n        if ((arr[i] < min)); then\n            min2=min\n       \
    \     min=arr[i]\n        elif ((arr[i] < min2)); then\n            min2=arr[i]\n\
    \        fi\n    done\n    if ((min2 == min)); then\n        echo \"None\"\n \
    \   else\n        echo $min2\n    fi", "  local -a arr=($1)\n  local -i n=${#arr[@]}\n\
    \  local -i i=0\n  local -i j=0\n  local -i min=0\n  local -i min2=0\n  local\
    \ -i tmp=0\n\n  if [ $n -eq 0 ]; then\n    echo \"None\"\n    return\n  fi\n\n\
    \  min=${arr[0]}\n  min2=${arr[0]}\n\n  for ((i=1; i<n; i++)); do\n    tmp=${arr[i]}\n\
    \    if [ $tmp -lt $min ]; then\n      min2=$min\n      min=$tmp\n    elif [ $tmp\
    \ -lt $min2 ]; then\n      min2=$tmp\n    fi\n  done\n\n  if [ $min2 -eq $min\
    \ ]; then\n    echo \"None\"\n  else\n    echo $min2\n  fi", "  if [ -z \"$1\"\
    \ ]; then\n    echo \"None\"\n    return\n  fi\n  local smallest=$(echo \"$1\"\
    \ | tr ' ' '\\n' | sort -n | head -n1)\n  local second_smallest=$(echo \"$1\"\
    \ | tr ' ' '\\n' | sort -n | head -n2 | tail -n1)\n  if [ \"$smallest\" == \"\
    $second_smallest\" ]; then\n    echo \"None\"\n  else\n    echo \"$second_smallest\"\
    \n  fi"]
stop_tokens:
- "\n}"

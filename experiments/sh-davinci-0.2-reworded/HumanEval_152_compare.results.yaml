language: sh
name: HumanEval_152_compare
results:
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a results=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        results[i]=$((${scores[i]}-${guesses[i]}))\n        results[i]=$(echo\
    \ ${results[i]} | sed 's/-//g')\n    done\n    echo ${results[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        result+=($(echo ${scores[$i]} - ${guesses[$i]} | bc))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a results=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        results+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo ${results[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[i]=$((${scores[i]}-${guesses[i]}))\n        if [ ${result[i]}\
    \ -lt 0 ]; then\n            result[i]=$((-${result[i]}))\n        fi\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[$i]=$((${scores[$i]}-${guesses[$i]}))\n        result[$i]=$(echo\
    \ ${result[$i]} | sed 's/-//g')\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        local diff=$((${scores[$i]} - ${guesses[$i]}))\n        if\
    \ [[ $diff -lt 0 ]]; then\n            diff=$((-$diff))\n        fi\n        result+=($diff)\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[i]=$((${scores[i]}-${guesses[i]}))\n        result[i]=$(echo\
    \ ${result[i]} | sed 's/-//g')\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[$i]=$((${scores[$i]}-${guesses[$i]}))\n        if\
    \ [[ ${result[$i]} -lt 0 ]]; then\n            result[$i]=$((-${result[$i]}))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[i]=$((${scores[i]}-${guesses[i]}))\n        result[i]=$(echo\
    \ ${result[i]} | sed 's/-//g')\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a results=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        results+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo ${results[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a results=()\n    local i=0\n    for score\
    \ in ${scores[@]}; do\n        local guess=${guesses[$i]}\n        local result=$(($score\
    \ - $guess))\n        if [[ $result -lt 0 ]]; then\n            result=$(($result\
    \ * -1))\n        fi\n        results+=($result)\n        i=$(($i + 1))\n    done\n\
    \    echo ${results[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a results=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        results[i]=$((${scores[i]}-${guesses[i]}))\n        results[i]=$(echo\
    \ ${results[i]} | sed 's/-//g')\n    done\n    echo ${results[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[i]=$((${scores[i]}-${guesses[i]}))\n        if [[\
    \ ${result[i]} -lt 0 ]]; then\n            result[i]=$((-${result[i]}))\n    \
    \    fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[$i]=$((${scores[$i]}-${guesses[$i]}))\n        if\
    \ [ ${result[$i]} -lt 0 ]; then\n            result[$i]=$((-${result[$i]}))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[i]=$((${scores[i]}-${guesses[i]}))\n        result[i]=$(echo\
    \ ${result[i]} | sed 's/-//g')\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n  local -a scores=($1)\n\
    \  local -a guesses=($2)\n  local -a results=()\n  for ((i=0; i<${#scores[@]};\
    \ i++)); do\n    results+=($((${scores[$i]} - ${guesses[$i]})))\n  done\n  echo\
    \ ${results[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for i in \"${!scores[@]}\"\
    ; do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n    echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for i in \"${!scores[@]}\"\
    ; do\n        result[$i]=$((${scores[$i]} - ${guesses[$i]}))\n    done\n    echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[$i]=$((${scores[$i]}-${guesses[$i]}))\n        result[$i]=$(echo\
    \ ${result[$i]} | sed 's/-//g')\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores=($1)\n \
    \   local guesses=($2)\n    local result=()\n    for ((i=0; i<${#scores[@]}; i++));\
    \ do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n    echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a results=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]} ]]; then\n       \
    \     results[$i]=0\n        else\n            results[$i]=$((${scores[$i]} -\
    \ ${guesses[$i]}))\n        fi\n    done\n    echo ${results[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a results=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        local score=${scores[$i]}\n        local guess=${guesses[$i]}\n\
    \        local result=$((score - guess))\n        if ((result < 0)); then\n  \
    \          result=$((-result))\n        fi\n        results+=($result)\n    done\n\
    \    echo ${results[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a results=()\n    for i in \"${!scores[@]}\"\
    ; do\n        results+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n    echo\
    \ \"${results[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a results=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        results+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo ${results[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[$i]=$((${scores[$i]}-${guesses[$i]}))\n        result[$i]=$(echo\
    \ ${result[$i]} | sed 's/-//g')\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a results=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        results+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo ${results[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a results=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        results+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo \"${results[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[$i]=$((${scores[$i]}-${guesses[$i]}))\n        if\
    \ [[ ${result[$i]} -lt 0 ]]; then\n            result[$i]=$((-${result[$i]}))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[$i]=$((${scores[$i]}-${guesses[$i]}))\n        if\
    \ [[ ${result[$i]} -lt 0 ]]; then\n            result[$i]=$((-${result[$i]}))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[i]=$((${scores[i]}-${guesses[i]}))\n        result[i]=$(echo\
    \ ${result[i]} | sed 's/-//g')\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]} ]]; then\n       \
    \     result+=(0)\n        else\n            result+=($((${scores[$i]} - ${guesses[$i]})))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores=($1)\n \
    \   local guesses=($2)\n    local result=()\n    for ((i=0; i<${#scores[@]}; i++));\
    \ do\n        result[i]=$((${scores[i]}-${guesses[i]}))\n        if [[ ${result[i]}\
    \ -lt 0 ]]; then\n            result[i]=$((-${result[i]}))\n        fi\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores=($1)\n \
    \   local guesses=($2)\n    local result=()\n    for i in ${!scores[@]}; do\n\
    \        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a results\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        results[$i]=$((${scores[$i]}-${guesses[$i]}))\n    done\n\
    \    echo ${results[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a score=($1)\n\
    \    local -a guess=($2)\n    local -a result=()\n    for ((i=0; i<${#score[@]};\
    \ i++)); do\n        result[i]=$((${score[i]}-${guess[i]}))\n        if [[ ${result[i]}\
    \ -lt 0 ]]; then\n            result[i]=$((-${result[i]}))\n        fi\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for i in \"${!scores[@]}\"\
    ; do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n    echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n  local -a scores=($1)\n\
    \  local -a guesses=($2)\n  local -a results=()\n  for ((i=0; i<${#scores[@]};\
    \ i++)); do\n    local result=$((${scores[$i]} - ${guesses[$i]}))\n    result=${result#-}\n\
    \    results+=(\"$result\")\n  done\n  echo \"${results[@]}\"\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[$i]=$((${scores[$i]}-${guesses[$i]}))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n  local -a scores=($1)\n\
    \  local -a guesses=($2)\n  local -a results=()\n  for ((i=0; i<${#scores[@]};\
    \ i++)); do\n    results+=($((${scores[$i]} - ${guesses[$i]})))\n  done\n  echo\
    \ ${results[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    local i\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result+=(\"$((${scores[$i]} - ${guesses[$i]}))\")\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    local -i i=0\n    local\
    \ -i score=0\n    local -i guess=0\n    local -i diff=0\n    for i in ${!scores[@]};\
    \ do\n        score=${scores[$i]}\n        guess=${guesses[$i]}\n        diff=$(($score\
    \ - $guess))\n        if [[ $diff -lt 0 ]]; then\n            diff=$((-$diff))\n\
    \        fi\n        result[$i]=$diff\n    done\n    echo ${result[@]}\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n  local -a scores=($1)\n\
    \  local -a guesses=($2)\n  local -a result=()\n  for ((i=0; i<${#scores[@]};\
    \ i++)); do\n    result+=($((${scores[$i]} - ${guesses[$i]})))\n  done\n  echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores=($1)\n \
    \   local guesses=($2)\n    local result=()\n    for i in ${!scores[@]}; do\n\
    \        local diff=$((${scores[$i]} - ${guesses[$i]}))\n        if [[ $diff -lt\
    \ 0 ]]; then\n            diff=$((-$diff))\n        fi\n        result+=($diff)\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores=$1\n   \
    \ local guesses=$2\n    local score\n    local guess\n    local result\n    for\
    \ ((i=0; i<${#scores[@]}; i++)); do\n        score=${scores[$i]}\n        guess=${guesses[$i]}\n\
    \        result=$(($score - $guess))\n        if [ $result -lt 0 ]; then\n   \
    \         result=$(($result * -1))\n        fi\n        echo \"\\\"$result\\\"\
    \"\n    done\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp37vbtyf4.sh: line 26: 1 2 3 4 5 1 - 1 2 3 4 2 -2: syntax error
    in expression (error token is "2 3 4 5 1 - 1 2 3 4 2 -2")

    '
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for i in \"${!scores[@]}\"\
    ; do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n    echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[$i]=$((${scores[$i]}-${guesses[$i]}))\n        result[$i]=$(echo\
    \ ${result[$i]} | sed 's/-//g')\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n  local -a scores=($1)\n\
    \  local -a guesses=($2)\n  local -a results=()\n  for ((i=0; i<${#scores[@]};\
    \ i++)); do\n    results+=($((${scores[$i]} - ${guesses[$i]})))\n  done\n  echo\
    \ ${results[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a results\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        results[i]=$((${scores[i]}-${guesses[i]}))\n        results[i]=$(echo\
    \ ${results[i]} | sed 's/-//g')\n    done\n    echo ${results[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a results=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        results+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo ${results[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    local i\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result[i]=$((${scores[i]}-${guesses[i]}))\n\
    \        if [[ ${result[i]} -lt 0 ]]; then\n            result[i]=$((-${result[i]}))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a results=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        results[$i]=$((${scores[$i]} - ${guesses[$i]}))\n       \
    \ results[$i]=$(echo ${results[$i]} | sed 's/-//g')\n    done\n    echo ${results[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local score guess\n \
    \   local -a scores guesses\n    local -a result\n    scores=($1)\n    guesses=($2)\n\
    \    for ((i=0; i<${#scores[@]}; i++)); do\n        score=${scores[$i]}\n    \
    \    guess=${guesses[$i]}\n        result[$i]=$((${score}-${guess}))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n  local scores=($1)\n  local\
    \ guesses=($2)\n  local result=()\n  for ((i=0; i<${#scores[@]}; i++)); do\n \
    \   result+=($((${scores[$i]} - ${guesses[$i]})))\n  done\n  echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a results=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        results[$i]=$((${scores[$i]} - ${guesses[$i]}))\n       \
    \ results[$i]=$((${results[$i]} < 0 ? ${results[$i]} * -1 : ${results[$i]}))\n\
    \    done\n    echo ${results[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") =\
    \ \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"\
    0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a arr1=($1)\n\
    \    local -a arr2=($2)\n    local -a result=()\n    for i in \"${!arr1[@]}\"\
    ; do\n        result+=($((${arr1[$i]} - ${arr2[$i]})))\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a results=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        results+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo ${results[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a results=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        results+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo ${results[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n  local scores=($1)\n  local\
    \ guesses=($2)\n  local result=()\n  for i in ${!scores[@]}; do\n    result+=($((${scores[$i]}\
    \ - ${guesses[$i]})))\n  done\n  echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n  local scores=($1)\n  local\
    \ guesses=($2)\n  local result=()\n  for ((i=0; i<${#scores[@]}; i++)); do\n \
    \   result+=($((${scores[$i]} - ${guesses[$i]})))\n  done\n  echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[$i]=$((${scores[$i]}-${guesses[$i]}))\n        result[$i]=$(echo\
    \ ${result[$i]} | sed -e 's/-//g')\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n  local -a scores=($1)\n\
    \  local -a guesses=($2)\n  local -a results=()\n  for ((i=0; i<${#scores[@]};\
    \ i++)); do\n    results+=($((${scores[$i]} - ${guesses[$i]})))\n  done\n  echo\
    \ ${results[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for i in \"${!scores[@]}\"\
    ; do\n        if [[ ${scores[$i]} -eq ${guesses[$i]} ]]; then\n            result+=(0)\n\
    \        else\n            result+=($((${scores[$i]} - ${guesses[$i]})))\n   \
    \     fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n  local -a scores=($1)\n\
    \  local -a guesses=($2)\n  local -a results=()\n  for ((i=0; i<${#scores[@]};\
    \ i++)); do\n    results+=($((${scores[$i]} - ${guesses[$i]})))\n  done\n  echo\
    \ ${results[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[$i]=$((${scores[$i]}-${guesses[$i]}))\n        result[$i]=$((${result[$i]}>0?${result[$i]}:-${result[$i]}))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a a1=($1)\n  \
    \  local -a a2=($2)\n    local -a a3=()\n    local i=0\n    for i in \"${!a1[@]}\"\
    ; do\n        a3[$i]=$((${a1[$i]} - ${a2[$i]}))\n        if [ ${a3[$i]} -lt 0\
    \ ]; then\n            a3[$i]=$((-${a3[$i]}))\n        fi\n    done\n    echo\
    \ ${a3[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n \
    \   [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n   \
    \ [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[$i]=$((${scores[$i]}-${guesses[$i]}))\n        if\
    \ [[ ${result[$i]} -lt 0 ]]; then\n            result[$i]=$((-${result[$i]}))\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n  local -a scores=($1)\n\
    \  local -a guesses=($2)\n  local -a result=()\n  for ((i=0; i<${#scores[@]};\
    \ i++)); do\n    result+=($((${scores[$i]} - ${guesses[$i]})))\n  done\n  echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a results=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        results+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo \"${results[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a results=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        results[i]=$((${scores[i]}-${guesses[i]}))\n        results[i]=$(echo\
    \ ${results[i]} | sed 's/-//g')\n    done\n    echo ${results[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a results=()\n    local i=0\n    for score\
    \ in ${scores[@]}; do\n        local guess=${guesses[$i]}\n        if [[ $score\
    \ -eq $guess ]]; then\n            results+=(0)\n        else\n            results+=($(($score\
    \ - $guess)))\n        fi\n        i=$(($i + 1))\n    done\n    echo ${results[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[i]=$((${scores[i]}-${guesses[i]}))\n        result[i]=$(echo\
    \ ${result[i]} | sed 's/-//g')\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n  local -a scores=($1)\n\
    \  local -a guesses=($2)\n  local -a results=()\n  for ((i=0; i<${#scores[@]};\
    \ i++)); do\n    results[$i]=$((${scores[$i]}-${guesses[$i]}))\n    results[$i]=$((${results[$i]}<0?-${results[$i]}:${results[$i]}))\n\
    \  done\n  echo ${results[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        result[$i]=$((${scores[$i]}-${guesses[$i]}))\n        result[$i]=$((${result[$i]}<0?-${result[$i]}:${result[$i]}))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[$i]=$((${scores[$i]}-${guesses[$i]}))\n        if\
    \ [ ${result[$i]} -lt 0 ]; then\n            result[$i]=$((-${result[$i]}))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n  local -a scores=($1)\n\
    \  local -a guesses=($2)\n  local -a result=()\n  for ((i=0; i<${#scores[@]};\
    \ i++)); do\n    result+=($((${scores[$i]} - ${guesses[$i]})))\n  done\n  echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[$i]=$((${scores[$i]}-${guesses[$i]}))\n        if\
    \ [[ ${result[$i]} -lt 0 ]]; then\n            result[$i]=$((-${result[$i]}))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[i]=$((${scores[i]}-${guesses[i]}))\n        if [[\
    \ ${result[i]} -lt 0 ]]; then\n            result[i]=$((-${result[i]}))\n    \
    \    fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n  local -a scores=($1)\n\
    \  local -a guesses=($2)\n  local -a result=()\n  for ((i=0; i<${#scores[@]};\
    \ i++)); do\n    result[$i]=$((${scores[$i]}-${guesses[$i]}))\n    result[$i]=$(echo\
    \ ${result[$i]} | sed 's/-//g')\n  done\n  echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n  local -a scores=($1)\n\
    \  local -a guesses=($2)\n  local -a result=()\n  for ((i=0; i<${#scores[@]};\
    \ i++)); do\n    result[$i]=$((${scores[$i]}-${guesses[$i]}))\n    result[$i]=$(echo\
    \ ${result[$i]} | sed 's/-//g')\n  done\n  echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[$i]=$((${scores[$i]}-${guesses[$i]}))\n        if\
    \ [[ ${result[$i]} -lt 0 ]]; then\n            result[$i]=$((-${result[$i]}))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[i]=$((${scores[i]}-${guesses[i]}))\n        result[i]=$(echo\
    \ ${result[i]} | sed 's/-//g')\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result+=($(echo \"${scores[$i]} - ${guesses[$i]}\" | bc))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n  local scores=($1)\n  local\
    \ guesses=($2)\n  local result=\"\"\n  for ((i=0; i<${#scores[@]}; i++)); do\n\
    \    local diff=$((${scores[$i]} - ${guesses[$i]}))\n    if [[ $diff -lt 0 ]];\
    \ then\n      diff=$((-$diff))\n    fi\n    result=\"$result $diff\"\n  done\n\
    \  echo $result\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a results=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        local result=$((${scores[$i]} - ${guesses[$i]}))\n      \
    \  if (( result < 0 )); then\n            result=$((-$result))\n        fi\n \
    \       results+=($result)\n    done\n    echo ${results[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local result=()\n   \
    \ local scores=($1)\n    local guesses=($2)\n    for ((i=0; i<${#scores[@]}; i++));\
    \ do\n        result[i]=$((${scores[i]} - ${guesses[i]}))\n        result[i]=$(echo\
    \ ${result[i]} | sed 's/-//g')\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[$i]=$((${scores[$i]}-${guesses[$i]}))\n        if\
    \ [ ${result[$i]} -lt 0 ]; then\n            result[$i]=$((-${result[$i]}))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[i]=$((${scores[i]}-${guesses[i]}))\n        if [[\
    \ ${result[i]} -lt 0 ]]; then\n            result[i]=$((-${result[i]}))\n    \
    \    fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    local i=0\n    for score\
    \ in ${scores[@]}; do\n        result[$i]=$((${guesses[$i]} - $score))\n     \
    \   i=$(($i + 1))\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores=($1)\n \
    \   local guesses=($2)\n    local result=()\n    for ((i=0; i<${#scores[@]}; i++));\
    \ do\n        result+=($(echo ${scores[$i]} - ${guesses[$i]} | bc))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a results=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        results+=(\"$((${scores[$i]} - ${guesses[$i]}))\")\n    done\n\
    \    echo \"${results[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n  local -n scores=$1\n  local\
    \ -n guesses=$2\n  local -a result\n  for ((i=0; i<${#scores[@]}; i++)); do\n\
    \    result[i]=$((${scores[i]}-${guesses[i]}))\n    if [[ ${result[i]} -lt 0 ]];\
    \ then\n      result[i]=$((-${result[i]}))\n    fi\n  done\n  echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpg49nyuwg.sh: line 18: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpg49nyuwg.sh: line 19: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a results=()\n    for i in \"${!scores[@]}\"\
    ; do\n        if [[ ${scores[$i]} -eq ${guesses[$i]} ]]; then\n            results+=(\"\
    0\")\n        else\n            results+=(\"$((${scores[$i]} - ${guesses[$i]}))\"\
    )\n        fi\n    done\n    echo \"${results[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[i]=$((${scores[i]}-${guesses[i]}))\n        if [ ${result[i]}\
    \ -lt 0 ]; then\n            result[i]=$((-${result[i]}))\n        fi\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[$i]=$((${scores[$i]}-${guesses[$i]}))\n        if\
    \ [ ${result[$i]} -lt 0 ]; then\n            result[$i]=$((-${result[$i]}))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for i in \"${!scores[@]}\"\
    ; do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n    echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 2
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    # your code here\n  \
    \  # hint: use the following syntax to append to an array:\n    # array+=(\"new\
    \ value\")\n    # hint: use the following syntax to get the absolute value of\
    \ a number:\n    # abs_value=$(echo ${number} | awk '{print ($0 < 0) ? -$0 : $0}')\n\
    \    # hint: use the following syntax to print an array:\n    # echo \"${array[@]}\"\
    \n    # hint: use the following syntax to print an array with quotes around each\
    \ element:\n    # echo '\"'${array[@]}'\"'\n    # hint: use the following syntax\
    \ to print an array with quotes around each element and commas between them:\n\
    \    # echo '\"'${array[@]// /\\\", \\\"}'\"'\n    # hint: use the following syntax\
    \ to print an array with quotes around each element and commas between them,\n\
    \    # and square brackets around the whole thing:\n    # echo '\"['${array[@]//\
    \ /\\\", \\\"}']\"'\n    # hint: use the following syntax to print an array with\
    \ quotes around each element and commas between them,\n    # and square brackets\
    \ around the whole thing, and a newline at the end:\n    # echo '\"['${array[@]//\
    \ /\\\", \\\"}']\"\\n'\n    # hint: use the following syntax to print an array\
    \ with quotes around each element and commas between them,\n    # and square brackets\
    \ around the whole thing, and a newline at the end, and a space at the beginning:\n\
    \    # echo ' \"['${array[@]// /\\\", \\\"}']\"\\n'\n    # hint: use the following\
    \ syntax to print an array with quotes around each element and commas between\
    \ them,\n    # and square brackets around the whole thing, and a newline at the\
    \ end, and a space at the beginning,\n    # and a space at the end:\n    # echo\
    \ ' \"['${array[@]// /\\\", \\\"}']\"\\n '\n    # hint: use the following syntax\
    \ to print an array with quotes around each element and commas between them,\n\
    \    # and square brackets around the whole thing, and a newline at the end, and\
    \ a space at the beginning,\n    # and a space at the end,\n}\n\ncandidate() {\n\
    \    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\
    \ 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\"\
    \ \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2\
    \ -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0\
    \ 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_6f5g7z4.sh: line 45: syntax error near unexpected token `}''

    /tmp/tmp_6f5g7z4.sh: line 45: `}''

    '
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]} ]]; then\n       \
    \     result+=(0)\n        else\n            result+=($((${scores[$i]} - ${guesses[$i]})))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n  local -a scores=($1)\n\
    \  local -a guesses=($2)\n  local -a results=()\n  for i in \"${!scores[@]}\"\
    ; do\n    if [[ ${scores[$i]} -eq ${guesses[$i]} ]]; then\n      results+=(\"\
    0\")\n    else\n      results+=(\"$((${scores[$i]} - ${guesses[$i]}))\")\n   \
    \ fi\n  done\n  echo \"${results[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a results=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        results[$i]=$((${scores[$i]} - ${guesses[$i]}))\n       \
    \ results[$i]=$(echo ${results[$i]} | sed 's/-//g')\n    done\n    echo ${results[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[i]=$((${scores[i]}-${guesses[i]}))\n        result[i]=$(echo\
    \ ${result[i]} | sed 's/-//g')\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result+=(\"$((${scores[$i]} - ${guesses[$i]}))\")\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[i]=$((${scores[i]}-${guesses[i]}))\n        result[i]=$(echo\
    \ ${result[i]} | sed 's/-//g')\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a results=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        results+=(\"$((${scores[$i]} - ${guesses[$i]}))\")\n    done\n\
    \    echo ${results[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores=\"$1\"\n\
    \    local guesses=\"$2\"\n    local score\n    local guess\n    local result\n\
    \    local i=0\n    for score in $scores; do\n        guess=$(echo $guesses |\
    \ cut -d ' ' -f $((i+1)))\n        if [[ $score -eq $guess ]]; then\n        \
    \    result=\"0\"\n        else\n            result=$((score - guess))\n     \
    \       if [[ $result -lt 0 ]]; then\n                result=$((result * -1))\n\
    \            fi\n        fi\n        echo -n \"\\\"$result\\\" \"\n        i=$((i+1))\n\
    \    done\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n \
    \   [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n   \
    \ [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[$i]=$((${scores[$i]}-${guesses[$i]}))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]} ]]; then\n       \
    \     result[$i]=0\n        else\n            result[$i]=$((${scores[$i]} - ${guesses[$i]}))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    # your code here\n  \
    \  scores=($1)\n    guesses=($2)\n    for ((i=0; i<${#scores[@]}; i++)); do\n\
    \        echo -n \"\\\"$((${scores[$i]}-${guesses[$i]}))\\\"\"\n        if ((i<${#scores[@]}-1));\
    \ then\n            echo -n \" \"\n        fi\n    done\n}\n\ncandidate() {\n\
    \    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\
    \ 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\"\
    \ \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2\
    \ -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0\
    \ 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[i]=$((${scores[i]}-${guesses[i]}))\n        result[i]=$(echo\
    \ ${result[i]} | sed 's/-//g')\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores=($1)\n \
    \   local guesses=($2)\n    local result=()\n    for ((i=0; i<${#scores[@]}; i++));\
    \ do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n    echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[$i]=$((${scores[$i]}-${guesses[$i]}))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n  local -a scores=($1)\n\
    \  local -a guesses=($2)\n  local -a results=()\n  for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n    local diff=$((${scores[$i]} - ${guesses[$i]}))\n    results+=(\"\
    $((${diff#-}))\")\n  done\n  echo ${results[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[i]=$((${scores[i]}-${guesses[i]}))\n        if [[\
    \ ${result[i]} -lt 0 ]]; then\n            result[i]=$((-${result[i]}))\n    \
    \    fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n  local scores=($1)\n  local\
    \ guesses=($2)\n  local result=()\n  for i in \"${!scores[@]}\"; do\n    local\
    \ score=${scores[$i]}\n    local guess=${guesses[$i]}\n    if [[ $score -eq $guess\
    \ ]]; then\n      result+=(\"0\")\n    else\n      result+=(\"$((${score} - ${guess}))\"\
    )\n    fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4\
    \ 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0\
    \ 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2\
    \ 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores=($1)\n \
    \   local guesses=($2)\n    local result=()\n    for ((i=0; i<${#scores[@]}; i++));\
    \ do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n    echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a results=()\n    for i in ${!scores[@]};\
    \ do\n        results+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n    echo\
    \ ${results[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[i]=$((${scores[i]}-${guesses[i]}))\n        result[i]=$(echo\
    \ ${result[i]} | sed 's/-//g')\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a results=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        results+=(\"$((${scores[$i]} - ${guesses[$i]}))\")\n    done\n\
    \    echo ${results[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a a=($1)\n   \
    \ local -a b=($2)\n    local -a c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n \
    \       c[i]=$((${a[i]}-${b[i]}))\n        c[i]=$((${c[i]}<0?-${c[i]}:${c[i]}))\n\
    \    done\n    echo ${c[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a results=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        results+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo ${results[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a results=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        results[$i]=$((${scores[$i]} - ${guesses[$i]}))\n       \
    \ results[$i]=$((${results[$i]} < 0 ? ${results[$i]} * -1 : ${results[$i]}))\n\
    \    done\n    echo ${results[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") =\
    \ \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"\
    0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a results=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        results+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo ${results[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a results=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        results[i]=$((${scores[i]}-${guesses[i]}))\n        results[i]=$(echo\
    \ ${results[i]} | sed 's/-//g')\n    done\n    echo ${results[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a results=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        local score=${scores[$i]}\n        local guess=${guesses[$i]}\n\
    \        if [[ $score -eq $guess ]]; then\n            results+=(0)\n        else\n\
    \            results+=($((${score}-${guess})))\n        fi\n    done\n    echo\
    \ ${results[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n  local -a scores=($1)\n\
    \  local -a guesses=($2)\n  local -a results=()\n  local i=0\n  for score in ${scores[@]};\
    \ do\n    results[$i]=$((${guesses[$i]} - $score))\n    if [ ${results[$i]} -lt\
    \ 0 ]; then\n      results[$i]=$((${results[$i]} * -1))\n    fi\n    i=$(($i +\
    \ 1))\n  done\n  echo ${results[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]} ]]; then\n      \
    \      result[$i]=0\n        else\n            result[$i]=$((${scores[$i]} - ${guesses[$i]}))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[$i]=$((${scores[$i]}-${guesses[$i]}))\n        result[$i]=$((${result[$i]}<0?-${result[$i]}:${result[$i]}))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[$i]=$((${scores[$i]}-${guesses[$i]}))\n        if\
    \ [[ ${result[$i]} -lt 0 ]]; then\n            result[$i]=$((-${result[$i]}))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[$i]=$((${scores[$i]}-${guesses[$i]}))\n        if\
    \ [ ${result[$i]} -lt 0 ]; then\n            result[$i]=$((-${result[$i]}))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[$i]=$((${scores[$i]}-${guesses[$i]}))\n        result[$i]=$(echo\
    \ ${result[$i]} | sed 's/-//g')\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a results=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        results[$i]=$((${scores[$i]} - ${guesses[$i]}))\n       \
    \ results[$i]=$(echo ${results[$i]} | sed 's/-//g')\n    done\n    echo ${results[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[i]=$((${scores[i]}-${guesses[i]}))\n        result[i]=$(echo\
    \ ${result[i]} | sed 's/-//g')\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n  local result=\"\"\n  local\
    \ score\n  local guess\n  for i in $(seq 1 $(echo $1 | wc -w)); do\n    score=$(echo\
    \ $1 | cut -d \" \" -f $i)\n    guess=$(echo $2 | cut -d \" \" -f $i)\n    result=\"\
    $result $(($score - $guess))\"\n  done\n  echo $result\n}\n\ncandidate() {\n \
    \   compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\
    \ 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\"\
    \ \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2\
    \ -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0\
    \ 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[i]=$((${scores[i]}-${guesses[i]}))\n        result[i]=$(echo\
    \ ${result[i]} | sed 's/-//g')\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[i]=$((${scores[i]}-${guesses[i]}))\n        if [ ${result[i]}\
    \ -lt 0 ]; then\n            result[i]=$((-${result[i]}))\n        fi\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a results=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        results[i]=$((${scores[i]}-${guesses[i]}))\n        if [\
    \ ${results[i]} -lt 0 ]; then\n            results[i]=$((-${results[i]}))\n  \
    \      fi\n    done\n    echo ${results[@]}\n}\n\ncandidate() {\n    compare \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4\
    \ 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0\
    \ 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2\
    \ 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a results=()\n    local i=0\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        results+=($((${scores[$i]} - ${guesses[$i]})))\n\
    \    done\n    echo ${results[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") =\
    \ \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"\
    0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n  local -a scores=($1)\n\
    \  local -a guesses=($2)\n  local -a result=()\n  for ((i=0; i<${#scores[@]};\
    \ i++)); do\n    result[$i]=$((${scores[$i]}-${guesses[$i]}))\n    if [[ ${result[$i]}\
    \ -lt 0 ]]; then\n      result[$i]=$((-${result[$i]}))\n    fi\n  done\n  echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores=($1)\n \
    \   local guesses=($2)\n    local result=()\n    for ((i=0; i<${#scores[@]}; i++));\
    \ do\n        local score=${scores[$i]}\n        local guess=${guesses[$i]}\n\
    \        local diff=$((score - guess))\n        if ((diff < 0)); then\n      \
    \      diff=$((-diff))\n        fi\n        result+=($diff)\n    done\n    echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a results=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        results[i]=$((${scores[i]}-${guesses[i]}))\n        results[i]=$(echo\
    \ ${results[i]} | sed 's/-//g')\n    done\n    echo ${results[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n  local result=\"\"\n  local\
    \ score\n  local guess\n  for i in $(seq $(echo $1 | wc -w)); do\n    score=$(echo\
    \ $1 | cut -d \" \" -f $i)\n    guess=$(echo $2 | cut -d \" \" -f $i)\n    result=\"\
    $result \\\"$((${score} - ${guess}))\\\"\"\n  done\n  echo $result\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[$i]=$((${scores[$i]}-${guesses[$i]}))\n        if\
    \ [[ ${result[$i]} -lt 0 ]]; then\n            result[$i]=$((-${result[$i]}))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores=($1)\n \
    \   local guesses=($2)\n    local result=()\n    for ((i=0; i<${#scores[@]}; i++));\
    \ do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n    echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        local diff=$((${scores[$i]} - ${guesses[$i]}))\n        if\
    \ [[ $diff -lt 0 ]]; then\n            diff=$((-$diff))\n        fi\n        result+=($diff)\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[$i]=$((${scores[$i]}-${guesses[$i]}))\n        result[$i]=$((${result[$i]}<0?-${result[$i]}:${result[$i]}))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[$i]=$((${scores[$i]}-${guesses[$i]}))\n        if\
    \ [ ${result[$i]} -lt 0 ]; then\n            result[$i]=$((-${result[$i]}))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a results=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        results[$i]=$((${scores[$i]} - ${guesses[$i]}))\n       \
    \ if [[ ${results[$i]} -lt 0 ]]; then\n            results[$i]=$((-${results[$i]}))\n\
    \        fi\n    done\n    echo ${results[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for i in \"${!scores[@]}\"\
    ; do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n    echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a results=()\n    for i in \"${!scores[@]}\"\
    ; do\n        local score=${scores[$i]}\n        local guess=${guesses[$i]}\n\
    \        local result=$((score - guess))\n        if (( result < 0 )); then\n\
    \            result=$((-result))\n        fi\n        results+=($result)\n   \
    \ done\n    echo \"${results[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") =\
    \ \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"\
    0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for i in ${!scores[@]};\
    \ do\n        result[$i]=$((${scores[$i]} - ${guesses[$i]}))\n        result[$i]=$(echo\
    \ ${result[$i]} | sed 's/-//g')\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local scores=($1)\n \
    \   local guesses=($2)\n    local result=()\n    for ((i=0; i<${#scores[@]}; i++));\
    \ do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n    echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[$i]=$((${scores[$i]}-${guesses[$i]}))\n        if\
    \ [[ ${result[$i]} -lt 0 ]]; then\n            result[$i]=$((-${result[$i]}))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for i in \"${!scores[@]}\"\
    ; do\n        if [[ ${scores[$i]} -eq ${guesses[$i]} ]]; then\n            result+=(0)\n\
    \        else\n            result+=($((${scores[$i]} - ${guesses[$i]})))\n   \
    \     fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4\
    \ 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0\
    \ 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2\
    \ 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result+=(\"$((${scores[$i]} - ${guesses[$i]}))\")\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[i]=$((${scores[i]}-${guesses[i]}))\n        result[i]=$(echo\
    \ ${result[i]} | sed 's/-//g')\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    local -i i=0\n    for\
    \ ((i=0; i<${#scores[@]}; i++)); do\n        result[$i]=$((${scores[$i]}-${guesses[$i]}))\n\
    \        result[$i]=$((${result[$i]}<0?-${result[$i]}:${result[$i]}))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result+=(\"$((${scores[$i]} - ${guesses[$i]}))\")\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[$i]=$((${scores[$i]}-${guesses[$i]}))\n        if\
    \ [[ ${result[$i]} -lt 0 ]]; then\n            result[$i]=$((-${result[$i]}))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a results=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]} ]]; then\n       \
    \     results+=(0)\n        else\n            results+=($((${scores[$i]} - ${guesses[$i]})))\n\
    \        fi\n    done\n    echo ${results[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a result=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        local diff=$((${scores[$i]} - ${guesses[$i]}))\n        if\
    \ [[ $diff -lt 0 ]]; then\n            diff=$((-$diff))\n        fi\n        result+=($diff)\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014404
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local -a scores=($1)\n\
    \    local -a guesses=($2)\n    local -a results=()\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        results[i]=$((${scores[i]}-${guesses[i]}))\n        results[i]=$((${results[i]}<0?-${results[i]}:${results[i]}))\n\
    \    done\n    echo ${results[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") =\
    \ \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"\
    0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # >>> $(compare \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\")\n# ['\"0\"', '\"0\"', '\"0\"\
    ', '\"0\"', '\"3\"', '\"3\"']\n# >>> $(compare \"0 5 0 0 0 4\" \"4 1 1 0 0 -2\"\
    )\n# ['\"4\"', '\"4\"', '\"1\"', '\"0\"', '\"0\"', '\"6\"']\n#\n# $1 is a space-separated\
    \ list\n# $2 is a space-separated list\ncompare() {\n    local score=$1\n    local\
    \ guess=$2\n    local result=\"\"\n    local score_array=($score)\n    local guess_array=($guess)\n\
    \    for (( i=0; i<${#score_array[@]}; i++ )); do\n        result+=\"$((${score_array[$i]}\
    \ - ${guess_array[$i]})) \"\n    done\n    echo $result\n}\n\ncandidate() {\n\
    \    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\
    \ 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\"\
    \ \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2\
    \ -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0\
    \ 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014405

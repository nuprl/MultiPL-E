name: HumanEval_103_rounded_avg
language: sh
prompt: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
  \ is to compute the\n# average of the integers from n through m (including n and\
  \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
  # If n is greater than m, return -1.\n# Example:\n# >>> $(rounded_avg \"1\" \"5\"\
  )\n# \"0b11\"\n# >>> $(rounded_avg \"7\" \"5\")\n# \"-1\"\n# >>> $(rounded_avg \"\
  10\" \"20\")\n# \"0b1111\"\n# >>> $(rounded_avg \"20\" \"33\")\n# \"0b11010\"\n\
  #\n# $1 is an integer\n# $2 is an integer\nrounded_avg() {\n"
tests: "}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n  \
  \  [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") =\
  \ \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n   \
  \ [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\"\
  \ \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
  \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
  \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") =\
  \ \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
  \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\n\
  run_test"
completions: ["  if [ $1 -gt $2 ]; then\n    echo \"-1\"\n  else\n    echo \"0b$(echo\
    \ \"obase=2; ($1 + $2) / 2\" | bc)\"\n  fi", "    if [ $1 -gt $2 ]; then\n   \
    \     echo \"-1\"\n    else\n        echo \"0b$(echo \"obase=2; ($1 + $2) / 2\"\
    \ | bc)\"\n    fi", "    if [ $1 -gt $2 ]; then\n        echo \"-1\"\n    else\n\
    \        echo \"ob$(printf \"%b\" $(echo \"scale=0; ($1 + $2) / 2\" | bc))\"\n\
    \    fi", "    if [ $1 -gt $2 ]; then\n        echo \"-1\"\n    else\n       \
    \ echo \"0b$(echo \"scale=0; ($1 + $2) / 2\" | bc | xargs printf \"%b\")\"\n \
    \   fi", "  if [[ $1 -gt $2 ]]; then\n    echo -1\n  else\n    echo \"ob$(echo\
    \ \"obase=2; ($1 + $2) / 2\" | bc)\"\n  fi", "  if [ $1 -gt $2 ]; then\n    echo\
    \ \"-1\"\n  else\n    echo \"0b$(echo \"obase=2; ($1 + $2) / 2\" | bc)\"\n  fi",
  "  if [ $1 -gt $2 ]; then\n    echo \"-1\"\n  else\n    echo \"ob$(echo \"obase=2;\
    \ ($1 + $2) / 2\" | bc)\"\n  fi", "  # your code here\n  if [ $1 -gt $2 ]; then\n\
    \    echo \"-1\"\n  else\n    sum=$(( ($1 + $2) * ($2 - $1 + 1) / 2 ))\n    echo\
    \ \"ob$(echo \"obase=2; $sum\" | bc)\"\n  fi", "    if [[ $1 -gt $2 ]]; then\n\
    \        echo \"-1\"\n    else\n        echo \"ob$(echo \"obase=2; ($1 + $2) /\
    \ 2\" | bc)\"\n    fi", "    if [ $1 -gt $2 ]; then\n        echo \"-1\"\n   \
    \ else\n        echo \"0b$(echo \"obase=2; ($1 + $2) / 2\" | bc)\"\n    fi", " \
    \   if [[ $1 -gt $2 ]]; then\n        echo \"-1\"\n    else\n        echo \"0b$(echo\
    \ \"obase=2; ($1 + $2) / 2\" | bc)\"\n    fi", "  if [ $1 -gt $2 ]; then\n   \
    \ echo -1\n  else\n    echo \"ob$(echo \"obase=2; ($1 + $2) / 2\" | bc)\"\n  fi",
  "    if [[ $1 -gt $2 ]]; then\n        echo \"-1\"\n    else\n        echo \"0b$(echo\
    \ \"obase=2;$(($1+$2))/2\" | bc)\"\n    fi", "    if [[ \"$1\" -gt \"$2\" ]];\
    \ then\n        echo \"-1\"\n    else\n        echo \"ob$(echo \"obase=2; ($1\
    \ + $2) / 2\" | bc)\"\n    fi", "  if [[ $1 -gt $2 ]]; then\n    echo \"-1\"\n\
    \  else\n    echo \"0b$(echo \"scale=0; ($1 + $2) / 2\" | bc | xargs printf \"\
    %b\")\"\n  fi", "    if [ $1 -gt $2 ]; then\n        echo \"-1\"\n    else\n \
    \       echo \"ob$(echo \"obase=2; ($1 + $2) / 2\" | bc)\"\n    fi", "  local\
    \ sum=0\n  local count=0\n  for (( i=$1; i<=$2; i++ )); do\n    sum=$((sum+i))\n\
    \    count=$((count+1))\n  done\n  if [[ $count -eq 0 ]]; then\n    echo \"-1\"\
    \n  else\n    echo \"0b$(echo \"obase=2; $sum/$count\" | bc)\"\n  fi", "    if\
    \ [[ $1 -gt $2 ]]; then\n        echo \"-1\"\n    else\n        echo \"0b$(printf\
    \ \"%b\" \"$(($(($(($1+$2))/2))+1))\")\"\n    fi", "    if [ $1 -gt $2 ]; then\n\
    \        echo \"-1\"\n    else\n        echo \"0b$(echo \"obase=2; ($1 + $2) /\
    \ 2\" | bc)\"\n    fi", "    local n=$1\n    local m=$2\n    local sum=$((n +\
    \ m))\n    local avg=$((sum / 2))\n    local rounded_avg=$((avg + (avg % 2)))\n\
    \    local binary_avg=$(echo \"obase=2; $rounded_avg\" | bc)\n    if [ $n -gt\
    \ $m ]; then\n        echo \"-1\"\n    else\n        echo \"0b$binary_avg\"\n\
    \    fi"]
stop_tokens:
- "\n}"

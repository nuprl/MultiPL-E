name: HumanEval_29_filter_by_prefix
language: r
results:
- program: "# Filter an input list of strings only for ones that start with a given\
    \ prefix.\n# >>> filter_by_prefix(c(), 'a')\n# c()\n# >>> filter_by_prefix(c('abc',\
    \ 'bcd', 'cde', 'array'), 'a')\n# c('abc', 'array')\nfilter_by_prefix <- function(strings,\
    \ prefix) {\n  strings[startsWith(strings, prefix)]\n}\n\ntest_humaneval <- function()\
    \ {\ncandidate <- filter_by_prefix\n    if(!identical(candidate(c(), 'john'),\
    \ c())){quit('no', 1)}\n    if(!identical(candidate(c('xxx', 'asd', 'xxy', 'john\
    \ doe', 'xxxAAA', 'xxx'), 'xxx'), c('xxx', 'xxxAAA', 'xxx'))){quit('no', 1)}\n\
    }\ntest_humaneval()"
  stdout: b''
  stderr: "b'During startup - Warning message:\\nSetting LC_CTYPE failed, using \"\
    C\" \\nError in startsWith(strings, prefix) : non-character object(s)\\nCalls:\
    \ test_humaneval -> identical -> candidate -> startsWith\\nExecution halted\\\
    n'"
  exit_code: 1
  status: Exception
- program: "# Filter an input list of strings only for ones that start with a given\
    \ prefix.\n# >>> filter_by_prefix(c(), 'a')\n# c()\n# >>> filter_by_prefix(c('abc',\
    \ 'bcd', 'cde', 'array'), 'a')\n# c('abc', 'array')\nfilter_by_prefix <- function(strings,\
    \ prefix) {\n  strings[startsWith(strings, prefix)]\n}\n\ntest_humaneval <- function()\
    \ {\ncandidate <- filter_by_prefix\n    if(!identical(candidate(c(), 'john'),\
    \ c())){quit('no', 1)}\n    if(!identical(candidate(c('xxx', 'asd', 'xxy', 'john\
    \ doe', 'xxxAAA', 'xxx'), 'xxx'), c('xxx', 'xxxAAA', 'xxx'))){quit('no', 1)}\n\
    }\ntest_humaneval()"
  stdout: b''
  stderr: "b'During startup - Warning message:\\nSetting LC_CTYPE failed, using \"\
    C\" \\nError in startsWith(strings, prefix) : non-character object(s)\\nCalls:\
    \ test_humaneval -> identical -> candidate -> startsWith\\nExecution halted\\\
    n'"
  exit_code: 1
  status: Exception
- program: "# Filter an input list of strings only for ones that start with a given\
    \ prefix.\n# >>> filter_by_prefix(c(), 'a')\n# c()\n# >>> filter_by_prefix(c('abc',\
    \ 'bcd', 'cde', 'array'), 'a')\n# c('abc', 'array')\nfilter_by_prefix <- function(strings,\
    \ prefix) {\n  return(strings[startsWith(strings, prefix)])\n}\n\ntest_humaneval\
    \ <- function() {\ncandidate <- filter_by_prefix\n    if(!identical(candidate(c(),\
    \ 'john'), c())){quit('no', 1)}\n    if(!identical(candidate(c('xxx', 'asd', 'xxy',\
    \ 'john doe', 'xxxAAA', 'xxx'), 'xxx'), c('xxx', 'xxxAAA', 'xxx'))){quit('no',\
    \ 1)}\n}\ntest_humaneval()"
  stdout: b''
  stderr: "b'During startup - Warning message:\\nSetting LC_CTYPE failed, using \"\
    C\" \\nError in startsWith(strings, prefix) : non-character object(s)\\nCalls:\
    \ test_humaneval -> identical -> candidate -> startsWith\\nExecution halted\\\
    n'"
  exit_code: 1
  status: Exception
- program: "# Filter an input list of strings only for ones that start with a given\
    \ prefix.\n# >>> filter_by_prefix(c(), 'a')\n# c()\n# >>> filter_by_prefix(c('abc',\
    \ 'bcd', 'cde', 'array'), 'a')\n# c('abc', 'array')\nfilter_by_prefix <- function(strings,\
    \ prefix) {\n  return(strings[startsWith(strings, prefix)])\n}\n\ntest_humaneval\
    \ <- function() {\ncandidate <- filter_by_prefix\n    if(!identical(candidate(c(),\
    \ 'john'), c())){quit('no', 1)}\n    if(!identical(candidate(c('xxx', 'asd', 'xxy',\
    \ 'john doe', 'xxxAAA', 'xxx'), 'xxx'), c('xxx', 'xxxAAA', 'xxx'))){quit('no',\
    \ 1)}\n}\ntest_humaneval()"
  stdout: b''
  stderr: "b'During startup - Warning message:\\nSetting LC_CTYPE failed, using \"\
    C\" \\nError in startsWith(strings, prefix) : non-character object(s)\\nCalls:\
    \ test_humaneval -> identical -> candidate -> startsWith\\nExecution halted\\\
    n'"
  exit_code: 1
  status: Exception
- program: "# Filter an input list of strings only for ones that start with a given\
    \ prefix.\n# >>> filter_by_prefix(c(), 'a')\n# c()\n# >>> filter_by_prefix(c('abc',\
    \ 'bcd', 'cde', 'array'), 'a')\n# c('abc', 'array')\nfilter_by_prefix <- function(strings,\
    \ prefix) {\n    strings[startsWith(strings, prefix)]\n}\n\ntest_humaneval <-\
    \ function() {\ncandidate <- filter_by_prefix\n    if(!identical(candidate(c(),\
    \ 'john'), c())){quit('no', 1)}\n    if(!identical(candidate(c('xxx', 'asd', 'xxy',\
    \ 'john doe', 'xxxAAA', 'xxx'), 'xxx'), c('xxx', 'xxxAAA', 'xxx'))){quit('no',\
    \ 1)}\n}\ntest_humaneval()"
  stdout: b''
  stderr: "b'During startup - Warning message:\\nSetting LC_CTYPE failed, using \"\
    C\" \\nError in startsWith(strings, prefix) : non-character object(s)\\nCalls:\
    \ test_humaneval -> identical -> candidate -> startsWith\\nExecution halted\\\
    n'"
  exit_code: 1
  status: Exception
- program: "# Filter an input list of strings only for ones that start with a given\
    \ prefix.\n# >>> filter_by_prefix(c(), 'a')\n# c()\n# >>> filter_by_prefix(c('abc',\
    \ 'bcd', 'cde', 'array'), 'a')\n# c('abc', 'array')\nfilter_by_prefix <- function(strings,\
    \ prefix) {\n  strings[startsWith(strings, prefix)]\n}\n\ntest_humaneval <- function()\
    \ {\ncandidate <- filter_by_prefix\n    if(!identical(candidate(c(), 'john'),\
    \ c())){quit('no', 1)}\n    if(!identical(candidate(c('xxx', 'asd', 'xxy', 'john\
    \ doe', 'xxxAAA', 'xxx'), 'xxx'), c('xxx', 'xxxAAA', 'xxx'))){quit('no', 1)}\n\
    }\ntest_humaneval()"
  stdout: b''
  stderr: "b'During startup - Warning message:\\nSetting LC_CTYPE failed, using \"\
    C\" \\nError in startsWith(strings, prefix) : non-character object(s)\\nCalls:\
    \ test_humaneval -> identical -> candidate -> startsWith\\nExecution halted\\\
    n'"
  exit_code: 1
  status: Exception
- program: "# Filter an input list of strings only for ones that start with a given\
    \ prefix.\n# >>> filter_by_prefix(c(), 'a')\n# c()\n# >>> filter_by_prefix(c('abc',\
    \ 'bcd', 'cde', 'array'), 'a')\n# c('abc', 'array')\nfilter_by_prefix <- function(strings,\
    \ prefix) {\n  strings[startsWith(strings, prefix)]\n}\n\ntest_humaneval <- function()\
    \ {\ncandidate <- filter_by_prefix\n    if(!identical(candidate(c(), 'john'),\
    \ c())){quit('no', 1)}\n    if(!identical(candidate(c('xxx', 'asd', 'xxy', 'john\
    \ doe', 'xxxAAA', 'xxx'), 'xxx'), c('xxx', 'xxxAAA', 'xxx'))){quit('no', 1)}\n\
    }\ntest_humaneval()"
  stdout: b''
  stderr: "b'During startup - Warning message:\\nSetting LC_CTYPE failed, using \"\
    C\" \\nError in startsWith(strings, prefix) : non-character object(s)\\nCalls:\
    \ test_humaneval -> identical -> candidate -> startsWith\\nExecution halted\\\
    n'"
  exit_code: 1
  status: Exception
- program: "# Filter an input list of strings only for ones that start with a given\
    \ prefix.\n# >>> filter_by_prefix(c(), 'a')\n# c()\n# >>> filter_by_prefix(c('abc',\
    \ 'bcd', 'cde', 'array'), 'a')\n# c('abc', 'array')\nfilter_by_prefix <- function(strings,\
    \ prefix) {\n  return(strings[startsWith(strings, prefix)])\n}\n\ntest_humaneval\
    \ <- function() {\ncandidate <- filter_by_prefix\n    if(!identical(candidate(c(),\
    \ 'john'), c())){quit('no', 1)}\n    if(!identical(candidate(c('xxx', 'asd', 'xxy',\
    \ 'john doe', 'xxxAAA', 'xxx'), 'xxx'), c('xxx', 'xxxAAA', 'xxx'))){quit('no',\
    \ 1)}\n}\ntest_humaneval()"
  stdout: b''
  stderr: "b'During startup - Warning message:\\nSetting LC_CTYPE failed, using \"\
    C\" \\nError in startsWith(strings, prefix) : non-character object(s)\\nCalls:\
    \ test_humaneval -> identical -> candidate -> startsWith\\nExecution halted\\\
    n'"
  exit_code: 1
  status: Exception
- program: "# Filter an input list of strings only for ones that start with a given\
    \ prefix.\n# >>> filter_by_prefix(c(), 'a')\n# c()\n# >>> filter_by_prefix(c('abc',\
    \ 'bcd', 'cde', 'array'), 'a')\n# c('abc', 'array')\nfilter_by_prefix <- function(strings,\
    \ prefix) {\n  strings[startsWith(strings, prefix)]\n}\n\ntest_humaneval <- function()\
    \ {\ncandidate <- filter_by_prefix\n    if(!identical(candidate(c(), 'john'),\
    \ c())){quit('no', 1)}\n    if(!identical(candidate(c('xxx', 'asd', 'xxy', 'john\
    \ doe', 'xxxAAA', 'xxx'), 'xxx'), c('xxx', 'xxxAAA', 'xxx'))){quit('no', 1)}\n\
    }\ntest_humaneval()"
  stdout: b''
  stderr: "b'During startup - Warning message:\\nSetting LC_CTYPE failed, using \"\
    C\" \\nError in startsWith(strings, prefix) : non-character object(s)\\nCalls:\
    \ test_humaneval -> identical -> candidate -> startsWith\\nExecution halted\\\
    n'"
  exit_code: 1
  status: Exception
- program: "# Filter an input list of strings only for ones that start with a given\
    \ prefix.\n# >>> filter_by_prefix(c(), 'a')\n# c()\n# >>> filter_by_prefix(c('abc',\
    \ 'bcd', 'cde', 'array'), 'a')\n# c('abc', 'array')\nfilter_by_prefix <- function(strings,\
    \ prefix) {\n  strings[startsWith(strings, prefix)]\n}\n\ntest_humaneval <- function()\
    \ {\ncandidate <- filter_by_prefix\n    if(!identical(candidate(c(), 'john'),\
    \ c())){quit('no', 1)}\n    if(!identical(candidate(c('xxx', 'asd', 'xxy', 'john\
    \ doe', 'xxxAAA', 'xxx'), 'xxx'), c('xxx', 'xxxAAA', 'xxx'))){quit('no', 1)}\n\
    }\ntest_humaneval()"
  stdout: b''
  stderr: "b'During startup - Warning message:\\nSetting LC_CTYPE failed, using \"\
    C\" \\nError in startsWith(strings, prefix) : non-character object(s)\\nCalls:\
    \ test_humaneval -> identical -> candidate -> startsWith\\nExecution halted\\\
    n'"
  exit_code: 1
  status: Exception
- program: "# Filter an input list of strings only for ones that start with a given\
    \ prefix.\n# >>> filter_by_prefix(c(), 'a')\n# c()\n# >>> filter_by_prefix(c('abc',\
    \ 'bcd', 'cde', 'array'), 'a')\n# c('abc', 'array')\nfilter_by_prefix <- function(strings,\
    \ prefix) {\n  return(strings[startsWith(strings, prefix)])\n}\n\ntest_humaneval\
    \ <- function() {\ncandidate <- filter_by_prefix\n    if(!identical(candidate(c(),\
    \ 'john'), c())){quit('no', 1)}\n    if(!identical(candidate(c('xxx', 'asd', 'xxy',\
    \ 'john doe', 'xxxAAA', 'xxx'), 'xxx'), c('xxx', 'xxxAAA', 'xxx'))){quit('no',\
    \ 1)}\n}\ntest_humaneval()"
  stdout: b''
  stderr: "b'During startup - Warning message:\\nSetting LC_CTYPE failed, using \"\
    C\" \\nError in startsWith(strings, prefix) : non-character object(s)\\nCalls:\
    \ test_humaneval -> identical -> candidate -> startsWith\\nExecution halted\\\
    n'"
  exit_code: 1
  status: Exception
- program: "# Filter an input list of strings only for ones that start with a given\
    \ prefix.\n# >>> filter_by_prefix(c(), 'a')\n# c()\n# >>> filter_by_prefix(c('abc',\
    \ 'bcd', 'cde', 'array'), 'a')\n# c('abc', 'array')\nfilter_by_prefix <- function(strings,\
    \ prefix) {\n  strings[startsWith(strings, prefix)]\n}\n\ntest_humaneval <- function()\
    \ {\ncandidate <- filter_by_prefix\n    if(!identical(candidate(c(), 'john'),\
    \ c())){quit('no', 1)}\n    if(!identical(candidate(c('xxx', 'asd', 'xxy', 'john\
    \ doe', 'xxxAAA', 'xxx'), 'xxx'), c('xxx', 'xxxAAA', 'xxx'))){quit('no', 1)}\n\
    }\ntest_humaneval()"
  stdout: b''
  stderr: "b'During startup - Warning message:\\nSetting LC_CTYPE failed, using \"\
    C\" \\nError in startsWith(strings, prefix) : non-character object(s)\\nCalls:\
    \ test_humaneval -> identical -> candidate -> startsWith\\nExecution halted\\\
    n'"
  exit_code: 1
  status: Exception
- program: "# Filter an input list of strings only for ones that start with a given\
    \ prefix.\n# >>> filter_by_prefix(c(), 'a')\n# c()\n# >>> filter_by_prefix(c('abc',\
    \ 'bcd', 'cde', 'array'), 'a')\n# c('abc', 'array')\nfilter_by_prefix <- function(strings,\
    \ prefix) {\n    return(strings[startsWith(strings, prefix)])\n}\n\ntest_humaneval\
    \ <- function() {\ncandidate <- filter_by_prefix\n    if(!identical(candidate(c(),\
    \ 'john'), c())){quit('no', 1)}\n    if(!identical(candidate(c('xxx', 'asd', 'xxy',\
    \ 'john doe', 'xxxAAA', 'xxx'), 'xxx'), c('xxx', 'xxxAAA', 'xxx'))){quit('no',\
    \ 1)}\n}\ntest_humaneval()"
  stdout: b''
  stderr: "b'During startup - Warning message:\\nSetting LC_CTYPE failed, using \"\
    C\" \\nError in startsWith(strings, prefix) : non-character object(s)\\nCalls:\
    \ test_humaneval -> identical -> candidate -> startsWith\\nExecution halted\\\
    n'"
  exit_code: 1
  status: Exception
- program: "# Filter an input list of strings only for ones that start with a given\
    \ prefix.\n# >>> filter_by_prefix(c(), 'a')\n# c()\n# >>> filter_by_prefix(c('abc',\
    \ 'bcd', 'cde', 'array'), 'a')\n# c('abc', 'array')\nfilter_by_prefix <- function(strings,\
    \ prefix) {\n  strings[startsWith(strings, prefix)]\n}\n\ntest_humaneval <- function()\
    \ {\ncandidate <- filter_by_prefix\n    if(!identical(candidate(c(), 'john'),\
    \ c())){quit('no', 1)}\n    if(!identical(candidate(c('xxx', 'asd', 'xxy', 'john\
    \ doe', 'xxxAAA', 'xxx'), 'xxx'), c('xxx', 'xxxAAA', 'xxx'))){quit('no', 1)}\n\
    }\ntest_humaneval()"
  stdout: b''
  stderr: "b'During startup - Warning message:\\nSetting LC_CTYPE failed, using \"\
    C\" \\nError in startsWith(strings, prefix) : non-character object(s)\\nCalls:\
    \ test_humaneval -> identical -> candidate -> startsWith\\nExecution halted\\\
    n'"
  exit_code: 1
  status: Exception
- program: "# Filter an input list of strings only for ones that start with a given\
    \ prefix.\n# >>> filter_by_prefix(c(), 'a')\n# c()\n# >>> filter_by_prefix(c('abc',\
    \ 'bcd', 'cde', 'array'), 'a')\n# c('abc', 'array')\nfilter_by_prefix <- function(strings,\
    \ prefix) {\n  strings[startsWith(strings, prefix)]\n}\n\ntest_humaneval <- function()\
    \ {\ncandidate <- filter_by_prefix\n    if(!identical(candidate(c(), 'john'),\
    \ c())){quit('no', 1)}\n    if(!identical(candidate(c('xxx', 'asd', 'xxy', 'john\
    \ doe', 'xxxAAA', 'xxx'), 'xxx'), c('xxx', 'xxxAAA', 'xxx'))){quit('no', 1)}\n\
    }\ntest_humaneval()"
  stdout: b''
  stderr: "b'During startup - Warning message:\\nSetting LC_CTYPE failed, using \"\
    C\" \\nError in startsWith(strings, prefix) : non-character object(s)\\nCalls:\
    \ test_humaneval -> identical -> candidate -> startsWith\\nExecution halted\\\
    n'"
  exit_code: 1
  status: Exception
- program: "# Filter an input list of strings only for ones that start with a given\
    \ prefix.\n# >>> filter_by_prefix(c(), 'a')\n# c()\n# >>> filter_by_prefix(c('abc',\
    \ 'bcd', 'cde', 'array'), 'a')\n# c('abc', 'array')\nfilter_by_prefix <- function(strings,\
    \ prefix) {\n  return(strings[startsWith(strings, prefix)])\n}\n\ntest_humaneval\
    \ <- function() {\ncandidate <- filter_by_prefix\n    if(!identical(candidate(c(),\
    \ 'john'), c())){quit('no', 1)}\n    if(!identical(candidate(c('xxx', 'asd', 'xxy',\
    \ 'john doe', 'xxxAAA', 'xxx'), 'xxx'), c('xxx', 'xxxAAA', 'xxx'))){quit('no',\
    \ 1)}\n}\ntest_humaneval()"
  stdout: b''
  stderr: "b'During startup - Warning message:\\nSetting LC_CTYPE failed, using \"\
    C\" \\nError in startsWith(strings, prefix) : non-character object(s)\\nCalls:\
    \ test_humaneval -> identical -> candidate -> startsWith\\nExecution halted\\\
    n'"
  exit_code: 1
  status: Exception
- program: "# Filter an input list of strings only for ones that start with a given\
    \ prefix.\n# >>> filter_by_prefix(c(), 'a')\n# c()\n# >>> filter_by_prefix(c('abc',\
    \ 'bcd', 'cde', 'array'), 'a')\n# c('abc', 'array')\nfilter_by_prefix <- function(strings,\
    \ prefix) {\n  strings[startsWith(strings, prefix)]\n}\n\ntest_humaneval <- function()\
    \ {\ncandidate <- filter_by_prefix\n    if(!identical(candidate(c(), 'john'),\
    \ c())){quit('no', 1)}\n    if(!identical(candidate(c('xxx', 'asd', 'xxy', 'john\
    \ doe', 'xxxAAA', 'xxx'), 'xxx'), c('xxx', 'xxxAAA', 'xxx'))){quit('no', 1)}\n\
    }\ntest_humaneval()"
  stdout: b''
  stderr: "b'During startup - Warning message:\\nSetting LC_CTYPE failed, using \"\
    C\" \\nError in startsWith(strings, prefix) : non-character object(s)\\nCalls:\
    \ test_humaneval -> identical -> candidate -> startsWith\\nExecution halted\\\
    n'"
  exit_code: 1
  status: Exception
- program: "# Filter an input list of strings only for ones that start with a given\
    \ prefix.\n# >>> filter_by_prefix(c(), 'a')\n# c()\n# >>> filter_by_prefix(c('abc',\
    \ 'bcd', 'cde', 'array'), 'a')\n# c('abc', 'array')\nfilter_by_prefix <- function(strings,\
    \ prefix) {\n    strings[startsWith(strings, prefix)]\n}\n\ntest_humaneval <-\
    \ function() {\ncandidate <- filter_by_prefix\n    if(!identical(candidate(c(),\
    \ 'john'), c())){quit('no', 1)}\n    if(!identical(candidate(c('xxx', 'asd', 'xxy',\
    \ 'john doe', 'xxxAAA', 'xxx'), 'xxx'), c('xxx', 'xxxAAA', 'xxx'))){quit('no',\
    \ 1)}\n}\ntest_humaneval()"
  stdout: b''
  stderr: "b'During startup - Warning message:\\nSetting LC_CTYPE failed, using \"\
    C\" \\nError in startsWith(strings, prefix) : non-character object(s)\\nCalls:\
    \ test_humaneval -> identical -> candidate -> startsWith\\nExecution halted\\\
    n'"
  exit_code: 1
  status: Exception
- program: "# Filter an input list of strings only for ones that start with a given\
    \ prefix.\n# >>> filter_by_prefix(c(), 'a')\n# c()\n# >>> filter_by_prefix(c('abc',\
    \ 'bcd', 'cde', 'array'), 'a')\n# c('abc', 'array')\nfilter_by_prefix <- function(strings,\
    \ prefix) {\n  strings[startsWith(strings, prefix)]\n}\n\ntest_humaneval <- function()\
    \ {\ncandidate <- filter_by_prefix\n    if(!identical(candidate(c(), 'john'),\
    \ c())){quit('no', 1)}\n    if(!identical(candidate(c('xxx', 'asd', 'xxy', 'john\
    \ doe', 'xxxAAA', 'xxx'), 'xxx'), c('xxx', 'xxxAAA', 'xxx'))){quit('no', 1)}\n\
    }\ntest_humaneval()"
  stdout: b''
  stderr: "b'During startup - Warning message:\\nSetting LC_CTYPE failed, using \"\
    C\" \\nError in startsWith(strings, prefix) : non-character object(s)\\nCalls:\
    \ test_humaneval -> identical -> candidate -> startsWith\\nExecution halted\\\
    n'"
  exit_code: 1
  status: Exception
- program: "# Filter an input list of strings only for ones that start with a given\
    \ prefix.\n# >>> filter_by_prefix(c(), 'a')\n# c()\n# >>> filter_by_prefix(c('abc',\
    \ 'bcd', 'cde', 'array'), 'a')\n# c('abc', 'array')\nfilter_by_prefix <- function(strings,\
    \ prefix) {\n  return(strings[startsWith(strings, prefix)])\n}\n\ntest_humaneval\
    \ <- function() {\ncandidate <- filter_by_prefix\n    if(!identical(candidate(c(),\
    \ 'john'), c())){quit('no', 1)}\n    if(!identical(candidate(c('xxx', 'asd', 'xxy',\
    \ 'john doe', 'xxxAAA', 'xxx'), 'xxx'), c('xxx', 'xxxAAA', 'xxx'))){quit('no',\
    \ 1)}\n}\ntest_humaneval()"
  stdout: b''
  stderr: "b'During startup - Warning message:\\nSetting LC_CTYPE failed, using \"\
    C\" \\nError in startsWith(strings, prefix) : non-character object(s)\\nCalls:\
    \ test_humaneval -> identical -> candidate -> startsWith\\nExecution halted\\\
    n'"
  exit_code: 1
  status: Exception

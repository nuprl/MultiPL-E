name: HumanEval_124_valid_date
language: r
prompt: "# You have to write a function which validates a given date string and\n\
  # returns TRUE if the date is valid otherwise FALSE.\n# The date is valid if all\
  \ of the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
  \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
  \ And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11.\
  \ And, the number of days is not less than 1 or higher than 29 for the month 2.\n\
  # 3. The months should not be less than 1 or higher than 12.\n# 4. The date should\
  \ be in the format: mm-dd-yyyy\n# >>> valid_date('03-11-2000')\n# TRUE\n# >>> valid_date('15-01-2012')\n\
  # FALSE\n# >>> valid_date('04-0-2040')\n# FALSE\n# >>> valid_date('06-04-2020')\n\
  # TRUE\n# >>> valid_date('06/04/2020')\n# FALSE\nvalid_date <- function(date) {"
tests: "test_humaneval <- function() {\ncandidate <- valid_date\n    if(!identical(candidate('03-11-2000'),\
  \ TRUE)){quit('no', 1)}\n    if(!identical(candidate('15-01-2012'), FALSE)){quit('no',\
  \ 1)}\n    if(!identical(candidate('04-0-2040'), FALSE)){quit('no', 1)}\n    if(!identical(candidate('06-04-2020'),\
  \ TRUE)){quit('no', 1)}\n    if(!identical(candidate('01-01-2007'), TRUE)){quit('no',\
  \ 1)}\n    if(!identical(candidate('03-32-2011'), FALSE)){quit('no', 1)}\n    if(!identical(candidate(''),\
  \ FALSE)){quit('no', 1)}\n    if(!identical(candidate('04-31-3000'), FALSE)){quit('no',\
  \ 1)}\n    if(!identical(candidate('06-06-2005'), TRUE)){quit('no', 1)}\n    if(!identical(candidate('21-31-2000'),\
  \ FALSE)){quit('no', 1)}\n    if(!identical(candidate('04-12-2003'), TRUE)){quit('no',\
  \ 1)}\n    if(!identical(candidate('04122003'), FALSE)){quit('no', 1)}\n    if(!identical(candidate('20030412'),\
  \ FALSE)){quit('no', 1)}\n    if(!identical(candidate('2003-04'), FALSE)){quit('no',\
  \ 1)}\n    if(!identical(candidate('2003-04-12'), FALSE)){quit('no', 1)}\n    if(!identical(candidate('04-2003'),\
  \ FALSE)){quit('no', 1)}\n}\ntest_humaneval()"
completions: ["\n  # Your code here\n  if(!is.null(date)){\n    date <- as.Date(date,\
    \ format = \"%m-%d-%Y\")\n    if(!is.na(date)){\n      return(TRUE)\n    }\n \
    \ }\n  return(FALSE)\n}\n", "\n  if (is.na(date)) {\n    return(FALSE)\n  }\n\
    \  if (str_detect(date, '-')) {\n    date <- str_split(date, '-')\n    date <-\
    \ date[[1]]\n  } else {\n    return(FALSE)\n  }\n  if (length(date) != 3) {\n\
    \    return(FALSE)\n  }\n  if (date[1] < 1 || date[1] > 12) {\n    return(FALSE)\n\
    \  }\n  if (date[1] %in% c(1,3,5,7,8,10,12)) {\n    if (date[2] < 1 || date[2]\
    \ > 31) {\n      return(FALSE)\n    }\n  } else if (date[1] %in% c(4,6,9,11))\
    \ {\n    if (date[2] < 1 || date[2] > 30) {\n      return(FALSE)\n    }\n  } else\
    \ if (date[1] == 2) {\n    if (date[2] < 1 || date[2] > 29) {\n      return(FALSE)\n\
    \    }\n  }\n  if (date[3] < 0) {\n    return(FALSE)\n  }\n  return(TRUE)\n}\n",
  "\n  # Your code here\n  date_split <- strsplit(date, \"-\")\n  if (length(date_split)\
    \ != 3) {\n    return(FALSE)\n  }\n  month <- as.numeric(date_split[[1]][1])\n\
    \  day <- as.numeric(date_split[[1]][2])\n  year <- as.numeric(date_split[[1]][3])\n\
    \  if (month < 1 || month > 12) {\n    return(FALSE)\n  }\n  if (day < 1 || day\
    \ > 31) {\n    return(FALSE)\n  }\n  if (month == 2) {\n    if (day > 29) {\n\
    \      return(FALSE)\n    }\n  }\n  if (month %in% c(4, 6, 9, 11)) {\n    if (day\
    \ > 30) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n", "\n  # your\
    \ code here\n  if(is.null(date)){\n    return(FALSE)\n  }\n  if(!grepl(\"^[0-9]{2}-[0-9]{2}-[0-9]{4}$\"\
    , date)){\n    return(FALSE)\n  }\n  date <- strsplit(date, \"-\")[[1]]\n  month\
    \ <- as.numeric(date[1])\n  day <- as.numeric(date[2])\n  year <- as.numeric(date[3])\n\
    \  if(month < 1 || month > 12){\n    return(FALSE)\n  }\n  if(month %in% c(1,3,5,7,8,10,12)){\n\
    \    if(day < 1 || day > 31){\n      return(FALSE)\n    }\n  }\n  if(month %in%\
    \ c(4,6,9,11)){\n    if(day < 1 || day > 30){\n      return(FALSE)\n    }\n  }\n\
    \  if(month == 2){\n    if(day < 1 || day > 29){\n      return(FALSE)\n    }\n\
    \  }\n  return(TRUE)\n}\n", "\n  date <- strsplit(date, \"-\")\n  date <- unlist(date)\n\
    \  if (length(date) != 3) {\n    return(FALSE)\n  }\n  if (date[1] < 1 || date[1]\
    \ > 12) {\n    return(FALSE)\n  }\n  if (date[1] %in% c(1,3,5,7,8,10,12)) {\n\
    \    if (date[2] < 1 || date[2] > 31) {\n      return(FALSE)\n    }\n  } else\
    \ if (date[1] %in% c(4,6,9,11)) {\n    if (date[2] < 1 || date[2] > 30) {\n  \
    \    return(FALSE)\n    }\n  } else if (date[1] == 2) {\n    if (date[2] < 1 ||\
    \ date[2] > 29) {\n      return(FALSE)\n    }\n  }\n  if (date[3] < 1) {\n   \
    \ return(FALSE)\n  }\n  return(TRUE)\n}\n", "\n  # Your code here\n  if(nchar(date)==0)\
    \ return(FALSE)\n  if(!grepl(\"^[0-9]{2}-[0-9]{2}-[0-9]{4}$\",date)) return(FALSE)\n\
    \  date <- strsplit(date,\"-\")[[1]]\n  if(date[1]<1 || date[1]>12) return(FALSE)\n\
    \  if(date[1] %in% c(1,3,5,7,8,10,12)){\n    if(date[2]<1 || date[2]>31) return(FALSE)\n\
    \  }else if(date[1] %in% c(4,6,9,11)){\n    if(date[2]<1 || date[2]>30) return(FALSE)\n\
    \  }else{\n    if(date[2]<1 || date[2]>29) return(FALSE)\n  }\n  return(TRUE)\n\
    }\n", "\n  if (date == \"\") {\n    return(FALSE)\n  }\n  date_split <- strsplit(date,\
    \ \"-\")[[1]]\n  if (length(date_split) != 3) {\n    return(FALSE)\n  }\n  month\
    \ <- as.numeric(date_split[1])\n  day <- as.numeric(date_split[2])\n  year <-\
    \ as.numeric(date_split[3])\n  if (month < 1 || month > 12) {\n    return(FALSE)\n\
    \  }\n  if (month %in% c(1, 3, 5, 7, 8, 10, 12)) {\n    if (day < 1 || day > 31)\
    \ {\n      return(FALSE)\n    }\n  } else if (month %in% c(4, 6, 9, 11)) {\n \
    \   if (day < 1 || day > 30) {\n      return(FALSE)\n    }\n  } else if (month\
    \ == 2) {\n    if (day < 1 || day > 29) {\n      return(FALSE)\n    }\n  }\n \
    \ return(TRUE)\n}\n", "\n  # your code here\n}\n", "\n  date_split <- strsplit(date,\
    \ \"-\")[[1]]\n  month <- as.numeric(date_split[1])\n  day <- as.numeric(date_split[2])\n\
    \  year <- as.numeric(date_split[3])\n  if(length(date_split) != 3) {\n    return(FALSE)\n\
    \  }\n  if(month < 1 || month > 12) {\n    return(FALSE)\n  }\n  if(day < 1 ||\
    \ day > 31) {\n    return(FALSE)\n  }\n  if(month %in% c(4,6,9,11) && day > 30)\
    \ {\n    return(FALSE)\n  }\n  if(month == 2 && day > 29) {\n    return(FALSE)\n\
    \  }\n  if(month == 2 && day == 29 && !(year %% 4 == 0 && (year %% 100 != 0 ||\
    \ year %% 400 == 0))) {\n    return(FALSE)\n  }\n  return(TRUE)\n}\n", "\n  date_split\
    \ <- strsplit(date, \"-\")\n  if (length(date_split) != 3) {\n    return(FALSE)\n\
    \  }\n  month <- as.numeric(date_split[[1]][1])\n  day <- as.numeric(date_split[[1]][2])\n\
    \  year <- as.numeric(date_split[[1]][3])\n  if (month < 1 || month > 12) {\n\
    \    return(FALSE)\n  }\n  if (month %in% c(1,3,5,7,8,10,12)) {\n    if (day <\
    \ 1 || day > 31) {\n      return(FALSE)\n    }\n  } else if (month %in% c(4,6,9,11))\
    \ {\n    if (day < 1 || day > 30) {\n      return(FALSE)\n    }\n  } else if (month\
    \ == 2) {\n    if (day < 1 || day > 29) {\n      return(FALSE)\n    }\n  }\n \
    \ return(TRUE)\n}\n", "\n  if (is.na(date)) {\n    return(FALSE)\n  }\n  date\
    \ <- strsplit(date, \"-\")\n  if (length(date) != 3) {\n    return(FALSE)\n  }\n\
    \  month <- as.numeric(date[[1]][1])\n  day <- as.numeric(date[[1]][2])\n  year\
    \ <- as.numeric(date[[1]][3])\n  if (month < 1 || month > 12) {\n    return(FALSE)\n\
    \  }\n  if (month %in% c(1, 3, 5, 7, 8, 10, 12)) {\n    if (day < 1 || day > 31)\
    \ {\n      return(FALSE)\n    }\n  } else if (month %in% c(4, 6, 9, 11)) {\n \
    \   if (day < 1 || day > 30) {\n      return(FALSE)\n    }\n  } else if (month\
    \ == 2) {\n    if (day < 1 || day > 29) {\n      return(FALSE)\n    }\n  }\n \
    \ return(TRUE)\n}\n", "\n  date_split <- strsplit(date, \"-\")\n  date_split <-\
    \ unlist(date_split)\n  if (length(date_split) != 3) {\n    return(FALSE)\n  }\n\
    \  if (date_split[1] < 1 || date_split[1] > 12) {\n    return(FALSE)\n  }\n  if\
    \ (date_split[1] %in% c(1,3,5,7,8,10,12)) {\n    if (date_split[2] < 1 || date_split[2]\
    \ > 31) {\n      return(FALSE)\n    }\n  } else if (date_split[1] %in% c(4,6,9,11))\
    \ {\n    if (date_split[2] < 1 || date_split[2] > 30) {\n      return(FALSE)\n\
    \    }\n  } else if (date_split[1] == 2) {\n    if (date_split[2] < 1 || date_split[2]\
    \ > 29) {\n      return(FALSE)\n    }\n  }\n  if (date_split[3] < 0) {\n    return(FALSE)\n\
    \  }\n  return(TRUE)\n}\n", "\n  # Your code here\n  if(is.null(date)){\n    return(FALSE)\n\
    \  }\n  if(length(date)==0){\n    return(FALSE)\n  }\n  if(!grepl(\"-\",date)){\n\
    \    return(FALSE)\n  }\n  date_split <- strsplit(date,\"-\")\n  date_split <-\
    \ date_split[[1]]\n  if(length(date_split)!=3){\n    return(FALSE)\n  }\n  if(!is.numeric(date_split[1])\
    \ || !is.numeric(date_split[2]) || !is.numeric(date_split[3])){\n    return(FALSE)\n\
    \  }\n  if(date_split[1]<1 || date_split[1]>12){\n    return(FALSE)\n  }\n  if(date_split[1]==1\
    \ || date_split[1]==3 || date_split[1]==5 || date_split[1]==7 || date_split[1]==8\
    \ || date_split[1]==10 || date_split[1]==12){\n    if(date_split[2]<1 || date_split[2]>31){\n\
    \      return(FALSE)\n    }\n  }\n  if(date_split[1]==4 || date_split[1]==6 ||\
    \ date_split[1]==9 || date_split[1]==11){\n    if(date_split[2]<1 || date_split[2]>30){\n\
    \      return(FALSE)\n    }\n  }\n  if(date_split[1]==2){\n    if(date_split[2]<1\
    \ || date_split[2]>29){\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n",
  "\n  # Your code here\n  date_vec <- strsplit(date, \"-\")[[1]]\n  if (length(date_vec)\
    \ != 3) {\n    return(FALSE)\n  }\n  month <- as.numeric(date_vec[1])\n  day <-\
    \ as.numeric(date_vec[2])\n  year <- as.numeric(date_vec[3])\n  if (month < 1\
    \ || month > 12) {\n    return(FALSE)\n  }\n  if (month %in% c(1, 3, 5, 7, 8,\
    \ 10, 12)) {\n    if (day < 1 || day > 31) {\n      return(FALSE)\n    }\n  }\
    \ else if (month %in% c(4, 6, 9, 11)) {\n    if (day < 1 || day > 30) {\n    \
    \  return(FALSE)\n    }\n  } else {\n    if (day < 1 || day > 29) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n", "\n  # your code here\n  if (is.null(date)){\n\
    \    return(FALSE)\n  }\n  if (length(date) == 0){\n    return(FALSE)\n  }\n \
    \ date <- strsplit(date, \"-\")\n  date <- unlist(date)\n  if (length(date) !=\
    \ 3){\n    return(FALSE)\n  }\n  if (date[1] < 1 | date[1] > 12){\n    return(FALSE)\n\
    \  }\n  if (date[1] %in% c(1,3,5,7,8,10,12)){\n    if (date[2] < 1 | date[2] >\
    \ 31){\n      return(FALSE)\n    }\n  }\n  if (date[1] %in% c(4,6,9,11)){\n  \
    \  if (date[2] < 1 | date[2] > 30){\n      return(FALSE)\n    }\n  }\n  if (date[1]\
    \ == 2){\n    if (date[2] < 1 | date[2] > 29){\n      return(FALSE)\n    }\n \
    \ }\n  return(TRUE)\n}\n", "\n  # your code here\n  if(is.null(date)){\n    return(FALSE)\n\
    \  }\n  if(!grepl(\"^[0-9]{2}-[0-9]{2}-[0-9]{4}$\", date)){\n    return(FALSE)\n\
    \  }\n  date_split <- strsplit(date, \"-\")[[1]]\n  month <- as.numeric(date_split[1])\n\
    \  day <- as.numeric(date_split[2])\n  year <- as.numeric(date_split[3])\n  if(month\
    \ < 1 || month > 12){\n    return(FALSE)\n  }\n  if(month %in% c(1,3,5,7,8,10,12)){\n\
    \    if(day < 1 || day > 31){\n      return(FALSE)\n    }\n  }\n  if(month %in%\
    \ c(4,6,9,11)){\n    if(day < 1 || day > 30){\n      return(FALSE)\n    }\n  }\n\
    \  if(month == 2){\n    if(day < 1 || day > 29){\n      return(FALSE)\n    }\n\
    \  }\n  return(TRUE)\n}\n", "\n  # your code here\n}", "\n  if (is.null(date))\
    \ {\n    return(FALSE)\n  }\n  date <- as.character(date)\n  if (nchar(date) !=\
    \ 10) {\n    return(FALSE)\n  }\n  if (substr(date, 4, 5) != '-' | substr(date,\
    \ 7, 8) != '-') {\n    return(FALSE)\n  }\n  month <- as.numeric(substr(date,\
    \ 1, 2))\n  day <- as.numeric(substr(date, 4, 5))\n  year <- as.numeric(substr(date,\
    \ 7, 10))\n  if (month < 1 | month > 12) {\n    return(FALSE)\n  }\n  if (month\
    \ %in% c(1, 3, 5, 7, 8, 10, 12)) {\n    if (day < 1 | day > 31) {\n      return(FALSE)\n\
    \    }\n  } else if (month %in% c(4, 6, 9, 11)) {\n    if (day < 1 | day > 30)\
    \ {\n      return(FALSE)\n    }\n  } else if (month == 2) {\n    if (day < 1 |\
    \ day > 29) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n", "\n  # your\
    \ code here\n}\n", "\n  if (is.na(date)) {\n    return(FALSE)\n  }\n  if (grepl(\"\
    ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\", date)) {\n    date <- strsplit(date, \"-\")[[1]]\n\
    \    if (date[2] %in% c(1, 3, 5, 7, 8, 10, 12)) {\n      if (date[1] > 0 && date[1]\
    \ <= 31) {\n        return(TRUE)\n      }\n    } else if (date[2] %in% c(4, 6,\
    \ 9, 11)) {\n      if (date[1] > 0 && date[1] <= 30) {\n        return(TRUE)\n\
    \      }\n    } else if (date[2] == 2) {\n      if (date[1] > 0 && date[1] <=\
    \ 29) {\n        return(TRUE)\n      }\n    }\n  }\n  return(FALSE)\n}\n"]
stop_tokens:
- "\n#"
- "\n```"

name: HumanEval_117_select_words
language: r
prompt: "# Given a string s and a natural number n, you have been tasked to implement\
  \ \n# a function that returns a list of all words from string s that contain exactly\
  \ \n# n consonants, in order these words appear in the string s.\n# If the string\
  \ s is empty then the function should return an empty list.\n# Note: you may assume\
  \ the input string contains only letters and spaces.\n# Examples:\n# >>> select_words('Mary\
  \ had a little lamb', 4)\n# c('little')\n# >>> select_words('Mary had a little lamb',\
  \ 3)\n# c('Mary', 'lamb')\n# >>> select_words('simple white space', 2)\n# c()\n\
  # >>> select_words('Hello world', 4)\n# c('world')\n# >>> select_words('Uncle sam',\
  \ 3)\n# c('Uncle')\nselect_words <- function(s, n) {"
tests: "test_humaneval <- function() {\ncandidate <- select_words\n    if(!identical(candidate('Mary\
  \ had a little lamb', 4), c('little'))){quit('no', 1)}\n    if(!identical(candidate('Mary\
  \ had a little lamb', 3), c('Mary', 'lamb'))){quit('no', 1)}\n    if(!identical(candidate('simple\
  \ white space', 2), c())){quit('no', 1)}\n    if(!identical(candidate('Hello world',\
  \ 4), c('world'))){quit('no', 1)}\n    if(!identical(candidate('Uncle sam', 3),\
  \ c('Uncle'))){quit('no', 1)}\n    if(!identical(candidate('', 4), c())){quit('no',\
  \ 1)}\n    if(!identical(candidate('a b c d e f', 1), c('b', 'c', 'd', 'f'))){quit('no',\
  \ 1)}\n}\ntest_humaneval()"
completions: ["\n  words <- unlist(strsplit(s, \" \"))\n  words[sapply(words, function(x)\
    \ {\n    sum(!grepl(\"[aeiou]\", x)) == n\n  })]\n}\n", "\n  words <- unlist(strsplit(s,\
    \ \" \"))\n  words <- words[nchar(words) > 0]\n  words <- words[nchar(gsub(\"\
    [aeiou]\", \"\", words)) == n]\n  return(words)\n}\n", "\n  # your code here\n\
    }\n", "\n  words <- unlist(strsplit(s, \" \"))\n  words <- words[nchar(words)\
    \ > 0]\n  words <- words[nchar(gsub(\"[aeiou]\", \"\", words)) == n]\n  return(words)\n\
    }\n", "\n  words <- unlist(strsplit(s, \" \"))\n  words <- words[nchar(words)\
    \ > 0]\n  words <- words[nchar(gsub(\"[aeiou]\", \"\", words)) == n]\n  return(words)\n\
    }\n", "\n  # your code here\n}\n ", "\n  words <- unlist(strsplit(s, \" \"))\n\
    \  words <- words[words != \"\"]\n  consonants <- c(\"b\", \"c\", \"d\", \"f\"\
    , \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\"\
    , \"t\", \"v\", \"w\", \"x\", \"y\", \"z\")\n  words <- words[sapply(words, function(x)\
    \ sum(sapply(strsplit(x, \"\")[[1]], function(y) y %in% consonants)) == n)]\n\
    \  return(words)\n}\n", "\n    words <- unlist(strsplit(s, \" \"))\n    words\
    \ <- words[nchar(words) > 0]\n    consonants <- c('b', 'c', 'd', 'f', 'g', 'h',\
    \ 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n\
    \    words <- words[sapply(words, function(word) {\n        sum(nchar(gsub('[^a-zA-Z]',\
    \ '', word))) == n\n    })]\n    return(words)\n}\n", "\n  if (nchar(s) == 0)\
    \ {\n    return(c())\n  }\n  words <- unlist(strsplit(s, \" \"))\n  words <- words[nchar(words)\
    \ > 0]\n  consonants <- c(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"\
    k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"\
    x\", \"y\", \"z\")\n  words <- words[sapply(words, function(word) {\n    sum(nchar(word)\
    \ == n && sapply(strsplit(word, \"\")[[1]], function(letter) {\n      letter %in%\
    \ consonants\n    }))\n  })]\n  return(words)\n}\n", "\n  words <- strsplit(s,\
    \ \" \")[[1]]\n  words[sapply(words, function(w) {\n    sum(!grepl(\"[aeiou]\"\
    , w)) == n\n  })]\n}\n", "\n  words <- unlist(strsplit(s, ' '))\n  words[nchar(gsub('[aeiou]',\
    \ '', words)) == n]\n}\n", "\n  # YOUR CODE HERE\n  return(NULL)\n}\n", "\n  s\
    \ <- unlist(strsplit(s, \" \"))\n  s <- s[nchar(s) >= n]\n  s <- s[nchar(gsub(\"\
    [aeiou]\", \"\", s)) == n]\n  return(s)\n}\n", "\n  s <- strsplit(s, \" \")[[1]]\n\
    \  s <- s[nchar(s) >= n]\n  s <- s[nchar(gsub(\"[aeiou]\", \"\", s)) == n]\n \
    \ return(s)\n}\n", "\n  words <- unlist(strsplit(s, \" \"))\n  words[nchar(gsub(\"\
    [aeiou]\", \"\", words)) == n]\n}\n", "\n  words <- unlist(strsplit(s, \" \"))\n\
    \  words[nchar(gsub(\"[aeiou]\", \"\", words)) == n]\n}\n", "\n  words <- unlist(strsplit(s,\
    \ \" \"))\n  words <- words[nchar(words) > 0]\n  words <- words[nchar(gsub(\"\
    [aeiou]\", \"\", words)) == n]\n  return(words)\n}\n", "\n  words <- strsplit(s,\
    \ \" \")[[1]]\n  words[sapply(words, function(x) {\n    sum(!grepl(\"[aeiou]\"\
    , x)) == n\n  })]\n}\n", "\n  # your code here\n}\n ", "\n  s <- strsplit(s, \"\
    \ \")[[1]]\n  s <- s[nchar(s) >= n]\n  s <- s[sapply(s, function(x) sum(!(x %in%\
    \ c(\"a\", \"e\", \"i\", \"o\", \"u\")))) == n]\n  return(s)\n}\n", "\n  # Your\
    \ code here\n  words <- strsplit(s, \" \")[[1]]\n  words[nchar(gsub(\"[aeiouAEIOU]\"\
    , \"\", words)) == n]\n}\n", "\n  # Your code here\n}\n", "\n  words <- strsplit(s,\
    \ \" \")[[1]]\n  words[nchar(gsub(\"[aeiou]\", \"\", words)) == n]\n}\n", "\n\
    \  # Your code here\n}\n", "\n  s <- strsplit(s, \" \")[[1]]\n  s <- s[nchar(s)\
    \ == n]\n  s <- s[grepl(\"[^aeiou]\", s, perl = TRUE)]\n  return(s)\n}\n", "\n\
    \    # Your code here\n    # You may find the following functions useful:\n  \
    \  # strsplit, nchar, grep\n    # You may also find the following regular expression\
    \ useful:\n    # [^aeiou]\n    # You may also find the following function useful:\n\
    \    # paste\n    # You may also find the following function useful:\n    # unlist\n\
    \    # You may also find the following function useful:\n    # tolower\n}\n ",
  "\n  words <- unlist(strsplit(s, \" \"))\n  consonants <- function(w) {\n    w <-\
    \ tolower(w)\n    w <- gsub(\"[aeiou]\", \"\", w)\n    nchar(w)\n  }\n  words[consonants(words)\
    \ == n]\n}\n", "\n  if (nchar(s) == 0) return(c())\n  words <- strsplit(s, \"\
    \ \")[[1]]\n  words <- words[nchar(words) >= n]\n  words <- words[nchar(gsub(\"\
    [aeiouAEIOU]\", \"\", words)) == n]\n  return(words)\n}\n", "\n  # your code here\n\
    }\n", "\n  words <- unlist(strsplit(s, \" \"))\n  words <- words[words != \"\"\
    ]\n  consonants <- c(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"\
    l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"\
    y\", \"z\")\n  consonants <- consonants[consonants != \"a\"]\n  consonants <-\
    \ consonants[consonants != \"e\"]\n  consonants <- consonants[consonants != \"\
    i\"]\n  consonants <- consonants[consonants != \"o\"]\n  consonants <- consonants[consonants\
    \ != \"u\"]\n  words <- words[sapply(words, function(x) sum(sapply(strsplit(x,\
    \ \"\")[[1]], function(y) y %in% consonants)) == n)]\n  return(words)\n}\n", "\n\
    \  # your code here\n  s <- unlist(strsplit(s, \" \"))\n  s <- s[s != \"\"]\n\
    \  s <- s[nchar(s) >= n]\n  s <- s[nchar(gsub(\"[aeiou]\", \"\", s)) == n]\n \
    \ return(s)\n}\n", "\n  words <- unlist(strsplit(s, \" \"))\n  words <- words[nchar(words)\
    \ > 0]\n  words <- words[nchar(gsub(\"[aeiouAEIOU]\", \"\", words)) == n]\n  return(words)\n\
    }\n", "\n  words <- strsplit(s, \" \")[[1]]\n  words[nchar(gsub(\"[aeiou]\", \"\
    \", words)) == n]\n}\n", "\n  # your code here\n}\n", "\n  # your code here\n\
    }\n", "\n  words <- strsplit(s, \" \")[[1]]\n  consonants <- function(word) {\n\
    \    nchar(gsub(\"[aeiouAEIOU]\", \"\", word))\n  }\n  words[consonants(words)\
    \ == n]\n}\n", "\n  words <- strsplit(s, \" \")[[1]]\n  words[sapply(words, function(x)\
    \ sum(!grepl(\"[aeiou]\", x)) == n)]\n}\n", "\n  # Your code here\n}\n ", "\n\
    \  words <- unlist(strsplit(s, \" \"))\n  words <- words[nchar(words) > 0]\n \
    \ words <- words[nchar(gsub(\"[aeiou]\", \"\", words)) == n]\n  return(words)\n\
    }\n", "\n  words <- strsplit(s, \" \")[[1]]\n  consonants <- function(w) {\n \
    \   w <- tolower(w)\n    nchar(gsub(\"[aeiou]\", \"\", w))\n  }\n  words[consonants(words)\
    \ == n]\n}\n", "\n  words <- strsplit(s, \" \")[[1]]\n  words[sapply(words, function(x)\
    \ sum(!grepl(\"[aeiou]\", x)) == n)]\n}\n", "\n  # Your code here\n}\n", "\n \
    \ # your code here\n}\n", "\n  words <- unlist(strsplit(s, \" \"))\n  words <-\
    \ words[nchar(words) > 0]\n  words <- words[nchar(gsub(\"[aeiou]\", \"\", words))\
    \ == n]\n  return(words)\n}\n", "\n  words <- unlist(strsplit(s, \" \"))\n  words\
    \ <- words[nchar(words) > 0]\n  words <- words[nchar(gsub(\"[aeiou]\", \"\", words))\
    \ == n]\n  return(words)\n}\n", "\n  # your code here\n}\n", "\n  words <- unlist(strsplit(s,\
    \ \" \"))\n  words <- words[nchar(words) > 0]\n  words <- words[nchar(gsub(\"\
    [aeiou]\", \"\", words)) == n]\n  return(words)\n}\n", "\n  words <- unlist(strsplit(s,\
    \ \" \"))\n  consonants <- function(x) {\n    x <- gsub(\"[aeiouAEIOU]\", \"\"\
    , x)\n    nchar(x)\n  }\n  words[consonants(words) == n]\n}\n", "\n  words <-\
    \ unlist(strsplit(s, \" \"))\n  words[nchar(gsub(\"[aeiou]\", \"\", words)) ==\
    \ n]\n}\n", "\n  words <- strsplit(s, \" \")[[1]]\n  words[nchar(gsub(\"[aeiou]\"\
    , \"\", words)) == n]\n}\n", "\n  words <- unlist(strsplit(s, \" \"))\n  words\
    \ <- words[nchar(words) > 0]\n  words <- words[nchar(gsub(\"[aeiouAEIOU]\", \"\
    \", words)) == n]\n  return(words)\n}\n", "\n  words <- strsplit(s, \" \")[[1]]\n\
    \  words[nchar(gsub(\"[aeiouAEIOU]\", \"\", words)) == n]\n}\n", "\n  words <-\
    \ unlist(strsplit(s, \" \"))\n  words[sapply(words, function(x) {\n    sum(grepl(\"\
    [^aeiou]\", x)) == n\n  })]\n}\n", "\n  words <- strsplit(s, \" \")[[1]]\n  consonants\
    \ <- function(word) {\n    word <- gsub(\"[aeiouAEIOU]\", \"\", word)\n    nchar(word)\n\
    \  }\n  words[consonants(words) == n]\n}\n", "\n  words <- unlist(strsplit(s,\
    \ \" \"))\n  words <- words[nchar(words) > 0]\n  words <- words[nchar(gsub(\"\
    [aeiouAEIOU]\", \"\", words)) == n]\n  return(words)\n}\n", "\n  words <- strsplit(s,\
    \ \" \")[[1]]\n  words[sapply(words, function(word) {\n    consonants <- sum(grepl(\"\
    [bcdfghjklmnpqrstvwxz]\", word, ignore.case = TRUE))\n    consonants == n\n  })]\n\
    }\n", "\n  words <- strsplit(s, \" \")[[1]]\n  words[sapply(words, function(w)\
    \ sum(!grepl(\"[aeiou]\", w)) == n)]\n}\n", "\n  words <- strsplit(s, \" \")[[1]]\n\
    \  words[sapply(words, function(w) sum(!grepl(\"[aeiou]\", w)) == n)]\n}\n", "\n\
    \  words <- unlist(strsplit(s, \" \"))\n  words <- words[nchar(words) > 0]\n \
    \ consonants <- c(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\"\
    , \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\"\
    , \"z\")\n  words <- words[sapply(words, function(x) sum(nchar(gsub(\"[^a-zA-Z]\"\
    , \"\", x))) == n)]\n  return(words)\n}\n", "\n  words <- strsplit(s, \" \")[[1]]\n\
    \  words[sapply(words, function(x) {\n    sum(!x %in% c(\"a\", \"e\", \"i\", \"\
    o\", \"u\")) == n\n  })]\n}\nselect_words('Mary had a little lamb', 4)\nselect_words('Mary\
    \ had a little lamb', 3)\nselect_words('simple white space', 2)\nselect_words('Hello\
    \ world', 4)\nselect_words('Uncle sam', 3)\n", "\n  # Your code here\n}\n", "\n\
    \  words <- unlist(strsplit(s, \" \"))\n  words <- words[nchar(words) > 0]\n \
    \ words <- words[nchar(gsub(\"[aeiou]\", \"\", words)) == n]\n  return(words)\n\
    }\n", "\n  words <- strsplit(s, \" \")[[1]]\n  words[sapply(words, function(w)\
    \ {\n    sum(grepl(\"[^aeiou]\", w)) == n\n  })]\n}\n", "\n  words <- unlist(strsplit(s,\
    \ \" \"))\n  words <- words[nchar(words) > 0]\n  words <- words[nchar(gsub(\"\
    [aeiou]\", \"\", words)) == n]\n  return(words)\n}\n", "\n  # your code here\n\
    }\n", "\n  words <- strsplit(s, \" \")[[1]]\n  words[sapply(words, function(x)\
    \ sum(!grepl(\"[aeiou]\", x)) == n)]\n}\n", "\n  words <- unlist(strsplit(s, \"\
    \ \"))\n  words <- words[nchar(words) > 0]\n  words <- words[nchar(gsub(\"[aeiou]\"\
    , \"\", words)) == n]\n  return(words)\n}\n", "\n  words <- unlist(strsplit(s,\
    \ \" \"))\n  words[sapply(words, function(x) sum(grepl(\"[^aeiou]\", x)) == n)]\n\
    }\n", "\n  words <- strsplit(s, \" \")[[1]]\n  words[sapply(words, function(x)\
    \ sum(grepl(\"[^aeiou]\", x)) == n)]\n}\n", "\n  # your code here\n}\n", "\n \
    \ words <- unlist(strsplit(s, \" \"))\n  words <- words[nchar(words) > 0]\n  words\
    \ <- words[nchar(gsub(\"[aeiou]\", \"\", words)) == n]\n  return(words)\n}\n",
  "\n  words <- strsplit(s, \" \")[[1]]\n  words[lengths(regmatches(words, gregexpr(\"\
    [^aeiouAEIOU]\", words))) == n]\n}\n", "\n  # your code here\n}\n ", "\n  words\
    \ <- unlist(strsplit(s, \" \"))\n  words[sapply(words, function(x) sum(grepl(\"\
    [^aeiouAEIOU]\", x)) == n)]\n}\n", "\n  words <- strsplit(s, \" \")[[1]]\n  words[sapply(words,\
    \ function(word) {\n    consonants <- grep(\"[^aeiouAEIOU]\", word)\n    length(consonants)\
    \ == n\n  })]\n}\n", "\n  # your code here\n}\n", "\n  words <- strsplit(s, \"\
    \ \")[[1]]\n  words[nchar(gsub(\"[aeiou]\", \"\", words)) == n]\n}\n", "\n  words\
    \ <- strsplit(s, \" \")[[1]]\n  consonants <- function(x) {\n    x <- gsub(\"\
    [aeiouAEIOU]\", \"\", x)\n    nchar(x)\n  }\n  words[consonants(words) == n]\n\
    }\n", "\n  # Your code here\n}\n", "\n  # your code here\n}\n", "\n  words <-\
    \ unlist(strsplit(s, ' '))\n  words[nchar(gsub('[aeiou]', '', words)) == n]\n\
    }\n", "\n  words <- strsplit(s, \" \")[[1]]\n  words[nchar(gsub(\"[aeiouAEIOU]\"\
    , \"\", words)) == n]\n}\n", "\n  s <- strsplit(s, \" \")[[1]]\n  s <- s[nchar(s)\
    \ == n]\n  return(s)\n}\n", "\n  # your code here\n}\n ", "\n  # your code here\n\
    }\n ", "\n  # Your code here\n}\n ", "\n  words <- strsplit(s, \" \")[[1]]\n \
    \ words[nchar(gsub(\"[aeiouAEIOU]\", \"\", words)) == n]\n}\n", "\n  # your code\
    \ goes here\n  s <- strsplit(s, \" \")[[1]]\n  s <- s[nchar(s) >= n]\n  s <- s[nchar(gsub(\"\
    [aeiouAEIOU]\", \"\", s)) == n]\n  return(s)\n}\n", "\n  s <- strsplit(s, \" \"\
    )[[1]]\n  s[nchar(gsub(\"[aeiouAEIOU]\", \"\", s)) == n]\n}\n", "\n  # Your code\
    \ here\n  s <- strsplit(s, \" \")[[1]]\n  s <- s[nchar(s) >= n]\n  s <- s[nchar(gsub(\"\
    [aeiouAEIOU]\", \"\", s)) == n]\n  return(s)\n}\n", "\n  # your code here\n}\n\
    \ ", "\n  words <- strsplit(s, \" \")[[1]]\n  words[nchar(gsub(\"[aeiou]\", \"\
    \", words)) == n]\n}\n", "\n  s <- strsplit(s, \" \")[[1]]\n  s[nchar(gsub(\"\
    [aeiouAEIOU]\", \"\", s)) == n]\n}\n", "\n  words <- strsplit(s, \" \")[[1]]\n\
    \  consonants <- function(word) {\n    word <- gsub(\"[aeiouAEIOU]\", \"\", word)\n\
    \    nchar(word)\n  }\n  words[sapply(words, consonants) == n]\n}\n", "\n  # YOUR\
    \ CODE HERE\n  words <- unlist(strsplit(s, \" \"))\n  words <- words[words !=\
    \ \"\"]\n  words <- words[nchar(gsub(\"[aeiou]\", \"\", words)) == n]\n  return(words)\n\
    }\n", "\n  # Your code here\n}\n ", "\n  # Your code here\n}\n", "\n  words <-\
    \ unlist(strsplit(s, \" \"))\n  words <- words[nchar(words) > 0]\n  words <- words[nchar(gsub(\"\
    [aeiou]\", \"\", words)) == n]\n  return(words)\n}\n", "\n  words <- strsplit(s,\
    \ \" \")[[1]]\n  words[nchar(gsub(\"[aeiou]\", \"\", words)) == n]\n}\n", "\n\
    \  words <- unlist(strsplit(s, \" \"))\n  words <- words[nchar(words) > 0]\n \
    \ words <- words[nchar(gsub(\"[aeiouAEIOU]\", \"\", words)) == n]\n  return(words)\n\
    }\n", "\n  words <- unlist(strsplit(s, \" \"))\n  words <- words[words != \"\"\
    ]\n  words <- words[nchar(gsub(\"[aeiou]\", \"\", words)) == n]\n  return(words)\n\
    }\n", "\n  # Your code here\n}\n", "\n  words <- unlist(strsplit(s, \" \"))\n\
    \  words <- words[nchar(words) > 0]\n  words <- words[nchar(gsub(\"[aeiou]\",\
    \ \"\", words)) == n]\n  return(words)\n}\n", "\n  words <- unlist(strsplit(s,\
    \ \" \"))\n  words <- words[nchar(words) > 0]\n  words <- words[nchar(words) ==\
    \ n]\n  return(words)\n}\n", "\n  words <- unlist(strsplit(s, \" \"))\n  words\
    \ <- words[nchar(words) > 0]\n  words <- words[nchar(gsub(\"[aeiouAEIOU]\", \"\
    \", words)) == n]\n  return(words)\n}\n", "\n  words <- strsplit(s, \" \")[[1]]\n\
    \  words[nchar(gsub(\"[aeiou]\", \"\", words)) == n]\n}\n", "\n  words <- strsplit(s,\
    \ \" \")[[1]]\n  words[sapply(words, function(x) sum(!grepl(\"[aeiou]\", x)) ==\
    \ n)]\n}\n", "\n  # your code here\n  s <- strsplit(s, \" \")[[1]]\n  s <- s[nchar(s)\
    \ >= n]\n  s <- s[grepl(\"[^aeiouAEIOU]\", s)]\n  s <- s[nchar(gsub(\"[aeiouAEIOU]\"\
    , \"\", s)) == n]\n  s\n}\n", "\n  words <- unlist(strsplit(s, \" \"))\n  words\
    \ <- words[nchar(words) > 0]\n  words <- words[nchar(gsub(\"[aeiou]\", \"\", words))\
    \ == n]\n  return(words)\n}\n", "\n  words <- strsplit(s, \" \")[[1]]\n  words[sapply(words,\
    \ function(x) sum(!grepl(\"[aeiou]\", x)) == n)]\n}\n", "\n  words <- unlist(strsplit(s,\
    \ \" \"))\n  words <- words[nchar(words) > 0]\n  words <- words[nchar(gsub(\"\
    [aeiou]\", \"\", words)) == n]\n  return(words)\n}\n", "\n  # your code here\n\
    \  words <- unlist(strsplit(s, \" \"))\n  consonants <- function(word) {\n   \
    \ sum(nchar(gsub(\"[aeiou]\", \"\", word)))\n  }\n  words[consonants(words) ==\
    \ n]\n}\n", "\n  # your code here\n  words <- strsplit(s, \" \")[[1]]\n  words\
    \ <- words[nchar(words) > 0]\n  words <- words[nchar(gsub(\"[aeiou]\", \"\", words))\
    \ == n]\n  return(words)\n}\n", "\n  words <- unlist(strsplit(s, \" \"))\n  words\
    \ <- words[words != \"\"]\n  words <- words[nchar(gsub(\"[aeiou]\", \"\", words))\
    \ == n]\n  return(words)\n}\n", "\n  words <- unlist(strsplit(s, \" \"))\n  words\
    \ <- words[nchar(words) > 0]\n  words <- words[nchar(gsub(\"[aeiou]\", \"\", tolower(words)))\
    \ == n]\n  return(words)\n}\n", "\n  # your code here\n}\n", "\n  words <- unlist(strsplit(s,\
    \ \" \"))\n  words[sapply(words, function(x) {\n    sum(grepl(\"[bcdfghjklmnpqrstvwxyz]\"\
    , x)) == n\n  })]\n}\n", "\n  # Your code here\n}\n", "\n  words <- strsplit(s,\
    \ \" \")[[1]]\n  words <- words[nchar(words) > 0]\n  words <- words[sapply(words,\
    \ function(x) sum(!grepl(\"[aeiou]\", x, ignore.case = TRUE)) == n)]\n  return(words)\n\
    }\n", "\n  words <- unlist(strsplit(s, \" \"))\n  words <- words[nchar(words)\
    \ > 0]\n  words <- words[nchar(gsub(\"[aeiou]\", \"\", words)) == n]\n  return(words)\n\
    }\n", "\n  words <- unlist(strsplit(s, \" \"))\n  words[nchar(gsub(\"[aeiouAEIOU]\"\
    , \"\", words)) == n]\n}\n", "\n  # Your code here\n  words <- unlist(strsplit(s,\
    \ \" \"))\n  words <- words[nchar(words) > 0]\n  words <- words[nchar(gsub(\"\
    [aeiouAEIOU]\", \"\", words)) == n]\n  return(words)\n}\n", "\n  words <- unlist(strsplit(s,\
    \ \" \"))\n  words <- words[words != \"\"]\n  words <- words[nchar(gsub(\"[aeiouAEIOU]\"\
    , \"\", words)) == n]\n  return(words)\n}\n", "\n  # Your code here\n}\n", "\n\
    \  if (nchar(s) == 0) return(c())\n  words <- strsplit(s, \" \")[[1]]\n  words\
    \ <- words[nchar(words) >= n]\n  words <- words[nchar(gsub(\"[aeiou]\", \"\",\
    \ words)) == n]\n  return(words)\n}\n", "\n  s <- strsplit(s, \" \")[[1]]\n  s\
    \ <- s[nchar(s) == n]\n  return(s)\n}\n", "\n  # your code here\n}\n", "\n  #\
    \ your code here\n  s <- strsplit(s, \" \")[[1]]\n  s <- s[nchar(s) >= n]\n  s\
    \ <- s[grepl(\"[^aeiou]\", s, perl = TRUE)]\n  s <- s[nchar(gsub(\"[aeiou]\",\
    \ \"\", s, perl = TRUE)) == n]\n  return(s)\n}\n", "\n  # Your code here\n  words\
    \ <- unlist(strsplit(s, \" \"))\n  words <- words[words != \"\"]\n  words <- words[nchar(gsub(\"\
    [aeiou]\", \"\", words)) == n]\n  return(words)\n}\n", "\n  # Your code here\n\
    }\n", "\n  if (nchar(s) == 0) {\n    return(c())\n  }\n  words <- strsplit(s,\
    \ \" \")[[1]]\n  words <- words[nchar(words) >= n]\n  words <- words[nchar(gsub(\"\
    [aeiou]\", \"\", words)) == n]\n  return(words)\n}\n", "\n  # your code here\n\
    }\n", "\n  words <- unlist(strsplit(s, \" \"))\n  words <- words[nchar(words)\
    \ > 0]\n  words <- words[nchar(gsub(\"[aeiou]\", \"\", words)) == n]\n  return(words)\n\
    }\n", "\n  # your code here\n}\n", "\n  words <- strsplit(s, \" \")[[1]]\n  words[sapply(words,\
    \ function(w) sum(!grepl(\"[aeiou]\", w)) == n)]\n}\n", "\n  words <- unlist(strsplit(s,\
    \ \" \"))\n  words <- words[nchar(words) > 0]\n  words <- words[nchar(gsub(\"\
    [aeiou]\", \"\", words)) == n]\n  return(words)\n}\n", "\n  words <- strsplit(s,\
    \ \" \")[[1]]\n  words[sapply(words, function(x) sum(!grepl(\"[aeiou]\", x)) ==\
    \ n)]\n}\n", "\n  # Your code here\n}\n", "\n  s <- unlist(strsplit(s, \" \"))\n\
    \  s <- s[nchar(s) > 0]\n  s <- s[nchar(gsub(\"[aeiouAEIOU]\", \"\", s)) == n]\n\
    \  return(s)\n}\n", "\n  words <- unlist(strsplit(s, \" \"))\n  words <- words[nchar(words)\
    \ > 0]\n  words <- words[nchar(gsub(\"[aeiouAEIOU]\", \"\", words)) == n]\n  return(words)\n\
    }\n", "\n  words <- unlist(strsplit(s, \" \"))\n  words <- words[nchar(words)\
    \ > 0]\n  words <- words[nchar(gsub(\"[aeiou]\", \"\", words)) == n]\n  return(words)\n\
    }\n", "\n  words <- strsplit(s, \" \")[[1]]\n  words[sapply(words, function(x)\
    \ sum(grepl(\"[^aeiouAEIOU]\", x)) == n)]\n}\n", "\n  words <- strsplit(s, \"\
    \ \")[[1]]\n  words[sapply(words, function(w) {\n    nchar(gsub(\"[aeiou]\", \"\
    \", w)) == n\n  })]\n}\n", "\n  # your code here\n}\n", "\n  words <- unlist(strsplit(s,\
    \ \" \"))\n  words[sapply(words, function(word) {\n    sum(!word %in% c(\"a\"\
    , \"e\", \"i\", \"o\", \"u\")) == n\n  })]\n}\n", "\n  # Your code here\n  s <-\
    \ strsplit(s, \" \")[[1]]\n  s <- s[nchar(s) >= n]\n  s <- s[grepl(\"[^aeiou]\"\
    , s, perl = TRUE)]\n  s <- s[nchar(gsub(\"[aeiou]\", \"\", s, perl = TRUE)) ==\
    \ n]\n  return(s)\n}\n", "\n  # Your code here\n}\n ", "\n  # your code here\n\
    }\n ", "\n  words <- strsplit(s, \" \")[[1]]\n  words[nchar(gsub(\"[aeiou]\",\
    \ \"\", words)) == n]\n}\n", "\n  # Your code here\n}\n ", "\n  words <- strsplit(s,\
    \ \" \")[[1]]\n  words[sapply(words, function(w) {\n    sum(!grepl(\"[aeiou]\"\
    , w)) == n\n  })]\n}\n", "\n  words <- unlist(strsplit(s, \" \"))\n  words[nchar(gsub(\"\
    [aeiouAEIOU]\", \"\", words)) == n]\n}\n", "\n  # your code here\n}\n", "\n  words\
    \ <- unlist(strsplit(s, \" \"))\n  words <- words[nchar(words) > 0]\n  words <-\
    \ words[nchar(gsub(\"[aeiou]\", \"\", words)) == n]\n  return(words)\n}\n", "\n\
    \  # your code here\n}\n", "\n  s <- strsplit(s, \" \")[[1]]\n  s <- s[nchar(s)\
    \ >= n]\n  s <- s[nchar(gsub(\"[aeiou]\", \"\", s)) == n]\n  s\n}\n", "\n  words\
    \ <- strsplit(s, \" \")[[1]]\n  words[sapply(words, function(x) sum(grepl(\"[^aeiouAEIOU]\"\
    , x)) == n)]\n}\n", "\n  # your code here\n}\n", "\n  words <- unlist(strsplit(s,\
    \ \" \"))\n  words <- words[nchar(words) > 0]\n  words <- words[nchar(gsub(\"\
    [aeiouAEIOU]\", \"\", words)) == n]\n  return(words)\n}\n", "\n  words <- unlist(strsplit(s,\
    \ \" \"))\n  words[nchar(gsub(\"[aeiouAEIOU]\", \"\", words)) == n]\n}\n", "\n\
    \  words <- strsplit(s, \" \")[[1]]\n  words[sapply(words, function(w) {\n   \
    \ sum(grepl(\"[^aeiou]\", w)) == n\n  })]\n}\n", "\n  # your code here\n}\n",
  "\n  # your code here\n}\n ", "\n  # Your code here\n}\n ", "\n  words <- strsplit(s,\
    \ \" \")[[1]]\n  words[sapply(words, function(w) sum(!grepl(\"[aeiou]\", w)) ==\
    \ n)]\n}\n", "\n  words <- unlist(strsplit(s, \" \"))\n  words[nchar(gsub(\"[aeiou]\"\
    , \"\", words)) == n]\n}\n", "\n  # Your code here\n  # Extract words\n  words\
    \ <- strsplit(s, \" \")[[1]]\n  # Remove words with less than n consonants\n \
    \ words <- words[nchar(gsub(\"[aeiouAEIOU]\", \"\", words)) == n]\n  return(words)\n\
    }\n", "\n  words <- unlist(strsplit(s, \" \"))\n  words <- words[nchar(words)\
    \ > 0]\n  words <- words[nchar(gsub(\"[aeiou]\", \"\", words)) == n]\n  return(words)\n\
    }\n", "\n  words <- strsplit(s, \" \")[[1]]\n  words[nchar(gsub(\"[aeiou]\", \"\
    \", words)) == n]\n}\n", "\n  if (nchar(s) == 0) {\n    return(c())\n  }\n  words\
    \ <- unlist(strsplit(s, \" \"))\n  words <- words[nchar(words) > 0]\n  words <-\
    \ words[nchar(gsub(\"[aeiou]\", \"\", words)) == n]\n  return(words)\n}\n", "\n\
    \  words <- strsplit(s, \" \")[[1]]\n  words[sapply(words, function(x) sum(!grepl(\"\
    [aeiou]\", x)) == n)]\n}\n", "\n  # Your code here\n  words <- unlist(strsplit(s,\
    \ \" \"))\n  words <- words[nchar(words) > 0]\n  words <- words[sapply(words,\
    \ function(x) sum(!(x %in% c(\"a\", \"e\", \"i\", \"o\", \"u\")))) == n]\n  return(words)\n\
    }\n", "\n  words <- unlist(strsplit(s, \" \"))\n  words <- words[nchar(words)\
    \ > 0]\n  words <- words[nchar(gsub(\"[aeiou]\", \"\", words)) == n]\n  return(words)\n\
    }\n", "\n  words <- strsplit(s, \" \")[[1]]\n  words <- words[nchar(words) > 0]\n\
    \  words <- words[nchar(gsub(\"[aeiou]\", \"\", words)) == n]\n  return(words)\n\
    }\n", "\n  # your code here\n}\n", "\n  words <- strsplit(s, \" \")[[1]]\n  words[nchar(gsub(\"\
    [aeiouAEIOU]\", \"\", words)) == n]\n}\n", "\n  # Your code here\n}\n ", "\n \
    \ # your code here\n  s <- strsplit(s, \" \")[[1]]\n  s <- s[s != \"\"]\n  s <-\
    \ s[sapply(s, function(x) sum(grepl(\"[aeiou]\", x, ignore.case = TRUE))) == n]\n\
    \  return(s)\n}\n", "\n  words <- unlist(strsplit(s, ' '))\n  words[nchar(gsub('[aeiou]',\
    \ '', words)) == n]\n}\n", "\n  words <- unlist(strsplit(s, \" \"))\n  words[nchar(gsub(\"\
    [aeiou]\", \"\", words)) == n]\n}\n", "\n  words <- unlist(strsplit(s, \" \"))\n\
    \  words[sapply(words, function(x) sum(!grepl(\"[aeiou]\", x)) == n)]\n}\n", "\n\
    \  # your code here\n}\n ", "\n  # Your code here\n  # Split the string into words\n\
    \  words <- unlist(strsplit(s, \" \"))\n  # Filter the words that have exactly\
    \ n consonants\n  words[nchar(gsub(\"[aeiou]\", \"\", words)) == n]\n}\n", "\n\
    \  # Your code here\n}\n", "\n  s <- strsplit(s, \" \")[[1]]\n  s <- s[nchar(s)\
    \ >= n]\n  s <- s[nchar(gsub(\"[aeiouAEIOU]\", \"\", s)) == n]\n  return(s)\n\
    }\n", "\n  words <- unlist(strsplit(s, \" \"))\n  words <- words[nchar(words)\
    \ > 0]\n  words <- words[nchar(gsub(\"[aeiouAEIOU]\", \"\", words)) == n]\n  return(words)\n\
    }\n", "\n  # your code here\n}\n", "\n  words <- unlist(strsplit(s, \" \"))\n\
    \  words <- words[nchar(words) > 0]\n  words <- words[nchar(gsub(\"[aeiouAEIOU]\"\
    , \"\", words)) == n]\n  return(words)\n}\n", "\n  words <- strsplit(s, \" \"\
    )[[1]]\n  words[sapply(words, function(x) {\n    consonants <- nchar(gsub(\"[aeiouAEIOU]\"\
    , \"\", x))\n    consonants == n\n  })]\n}\n", "\n  words <- strsplit(s, \" \"\
    )[[1]]\n  words[sapply(words, function(x) sum(grepl(\"[aeiou]\", x, ignore.case\
    \ = TRUE)) == n)]\n}\n", "\n  words <- unlist(strsplit(s, \" \"))\n  words[sapply(words,\
    \ function(x) sum(!grepl(\"[aeiou]\", x)) == n)]\n}\n", "\n    # Your code here\n\
    \    words <- unlist(strsplit(s, \" \"))\n    consonants <- c(\"b\", \"c\", \"\
    d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"\
    r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\")\n    result <- c()\n   \
    \ for (word in words) {\n        count <- 0\n        for (letter in word) {\n\
    \            if (letter %in% consonants) {\n                count <- count + 1\n\
    \            }\n        }\n        if (count == n) {\n            result <- c(result,\
    \ word)\n        }\n    }\n    return(result)\n}\n", "\n  words <- strsplit(s,\
    \ \" \")[[1]]\n  words[sapply(words, function(x) sum(grepl(\"[^aeiouAEIOU]\",\
    \ x)) == n)]\n}\n", "\n  if (nchar(s) == 0) return(c())\n  words <- unlist(strsplit(s,\
    \ \" \"))\n  words[nchar(gsub(\"[aeiou]\", \"\", words)) == n]\n}\n", "\n  # your\
    \ code here\n}\n ", "\n  words <- unlist(strsplit(s, \" \"))\n  words <- words[nchar(words)\
    \ > 0]\n  words <- words[nchar(gsub(\"[aeiou]\", \"\", words)) == n]\n  return(words)\n\
    }\n", "\n  words <- unlist(strsplit(s, \" \"))\n  words <- words[nchar(words)\
    \ > 0]\n  words <- words[nchar(gsub(\"[aeiouAEIOU]\", \"\", words)) == n]\n  return(words)\n\
    }\n", "\n  words <- strsplit(s, \" \")[[1]]\n  words[sapply(words, function(w)\
    \ {\n    consonants <- w[grep(\"[^aeiou]\", w)]\n    length(consonants) == n\n\
    \  })]\n}\n", "\n  # your code here\n}\n ", "\n  words <- unlist(strsplit(s, \"\
    \ \"))\n  words[nchar(gsub(\"[aeiouAEIOU]\", \"\", words)) == n]\n}\n"]
stop_tokens:
- "\n#"
- "\n```"

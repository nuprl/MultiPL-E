name: HumanEval_58_common
language: r
prompt: "# Return sorted unique common elements for two lists.\n# >>> common(c(1,\
  \ 4, 3, 34, 653, 2, 5), c(5, 7, 1, 5, 9, 653, 121))\n# c(1, 5, 653)\n# >>> common(c(5,\
  \ 3, 2, 8), c(3, 2))\n# c(2, 3)\ncommon <- function(l1, l2) {"
tests: "test_humaneval <- function() {\ncandidate <- common\n    if(!identical(candidate(c(1,\
  \ 4, 3, 34, 653, 2, 5), c(5, 7, 1, 5, 9, 653, 121)), c(1, 5, 653))){quit('no', 1)}\n\
  \    if(!identical(candidate(c(5, 3, 2, 8), c(3, 2)), c(2, 3))){quit('no', 1)}\n\
  \    if(!identical(candidate(c(4, 3, 2, 8), c(3, 2, 4)), c(2, 3, 4))){quit('no',\
  \ 1)}\n    if(!identical(candidate(c(4, 3, 2, 8), c()), c())){quit('no', 1)}\n}\n\
  test_humaneval()"
completions: ["\n  return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n  sort(unique(c(l1,\
    \ l2)))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    sort(unique(c(l1,\
    \ l2)))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  sort(unique(c(l1, l2)))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n  # Your code\
    \ here\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    if (length(l1) == 0 || length(l2) == 0) {\n        return(c())\n\
    \    }\n    if (length(l1) == 1 && length(l2) == 1) {\n        if (l1[1] == l2[1])\
    \ {\n            return(l1)\n        } else {\n            return(c())\n     \
    \   }\n    }\n    if (length(l1) == 1) {\n        if (l1[1] %in% l2) {\n     \
    \       return(l1)\n        } else {\n            return(c())\n        }\n   \
    \ }\n    if (length(l2) == 1) {\n        if (l2[1] %in% l1) {\n            return(l2)\n\
    \        } else {\n            return(c())\n        }\n    }\n    if (l1[1] ==\
    \ l2[1]) {\n        return(c(l1[1], common(l1[-1], l2[-1])))\n    }\n    if (l1[1]\
    \ < l2[1]) {\n        return(common(l1[-1], l2))\n    }\n    if (l1[1] > l2[1])\
    \ {\n        return(common(l1, l2[-1]))\n    }\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  intersect(l1, l2)\n}\n", "\n  return(sort(unique(c(l1, l2))))\n\
    }\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    sort(unique(c(l1,\
    \ l2)))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n  sort(unique(c(l1,\
    \ l2)))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))[l1 %in% l2]))\n}\n", "\n\
    \    return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n\
    }\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  intersect(l1, l2)\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\ncommon(c(1, 4, 3, 34, 653, 2, 5), c(5, 7, 1, 5, 9, 653, 121))\n",
  "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n\
    }\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n  intersect(l1,\
    \ l2)\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    sort(unique(c(l1, l2)))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    sort(unique(c(l1,\
    \ l2)))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    sort(unique(c(l1, l2)))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n  intersect(l1,\
    \ l2)\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n  sort(unique(c(l1,\
    \ l2)))\n}\n", "\n  return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n  return(sort(unique(c(l1,\
    \ l2))))\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\n", "\n    sort(unique(c(l1,\
    \ l2)))\n}\n", "\n  sort(unique(c(l1, l2)))\n}\n", "\n    return(sort(unique(c(l1,\
    \ l2))))\n}\n"]
stop_tokens:
- "\n#"
- "\n```"

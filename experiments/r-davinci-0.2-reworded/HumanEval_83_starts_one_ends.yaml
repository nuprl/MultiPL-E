name: HumanEval_83_starts_one_ends
language: r
prompt: "# Given a positive integer n, return the count of the numbers of n-digit\n\
  # positive integers that start or end with 1.\nstarts_one_ends <- function(n) {"
tests: "test_humaneval <- function() {\ncandidate <- starts_one_ends\n    if(!identical(candidate(1),\
  \ 1)){quit('no', 1)}\n    if(!identical(candidate(2), 18)){quit('no', 1)}\n    if(!identical(candidate(3),\
  \ 180)){quit('no', 1)}\n    if(!identical(candidate(4), 1800)){quit('no', 1)}\n\
  \    if(!identical(candidate(5), 18000)){quit('no', 1)}\n}\ntest_humaneval()"
completions: ["\n  if (n == 1) {\n    return(2)\n  }\n  if (n == 2) {\n    return(10)\n\
    \  }\n  return(10 * starts_one_ends(n - 1) - 9 * starts_one_ends(n - 2))\n}\n",
  "\n  if (n == 1) {\n    return(2)\n  }\n  return(10^(n-1) + 10^(n-2))\n}\n", "\n\
    \  if (n == 1) {\n    return(2)\n  } else {\n    return(starts_one_ends(n - 1)\
    \ + 9 * (10 ^ (n - 2)))\n  }\n}\n", "\n  if (n == 1) {\n    return(2)\n  } else\
    \ {\n    return(9 * 10^(n-2) + starts_one_ends(n-1))\n  }\n}\n", "\n  if (n ==\
    \ 1) {\n    return(2)\n  } else {\n    return(starts_one_ends(n - 1) + 9 * 10^(n\
    \ - 2))\n  }\n}\n", "\n  if (n == 1) {\n    return(2)\n  }\n  else {\n    return(9\
    \ * 10^(n-2) + starts_one_ends(n-1))\n  }\n}\n", "\n  if (n == 1) {\n    return(2)\n\
    \  }\n  if (n == 2) {\n    return(10)\n  }\n  return(10 * (2 * n - 2) * (10 ^\
    \ (n - 2)))\n}\n", "\n  if (n == 1) {\n    return(2)\n  } else {\n    return(starts_one_ends(n\
    \ - 1) + 9 * (10 ^ (n - 2)))\n  }\n}\n", "\n  # Your code here\n}\n", "\n  if\
    \ (n == 1) {\n    return(2)\n  } else {\n    return(9 * 10^(n-2) + starts_one_ends(n-1))\n\
    \  }\n}\n", "\n  if (n == 1) {\n    return(2)\n  }\n  else {\n    return(10^(n-1)\
    \ + 10^(n-2))\n  }\n}\n", "\n  if (n == 1) {\n    return(2)\n  }\n  if (n == 2)\
    \ {\n    return(9)\n  }\n  return(starts_one_ends(n - 1) + starts_one_ends(n -\
    \ 2))\n}\n", "\n  # TODO: Implement this function.\n}\n", "\n  # Your code here\n\
    }\n", "\n  # Your code here\n  return(0)\n}\n", "\n  if (n == 1) {\n    return(2)\n\
    \  }\n  if (n == 2) {\n    return(10)\n  }\n  return(starts_one_ends(n - 1) +\
    \ starts_one_ends(n - 2))\n}\n", "\n  if (n == 1) {\n    return(2)\n  } else {\n\
    \    return(9 * 10^(n-2) + starts_one_ends(n-1))\n  }\n}\n", "\n  # YOUR CODE\
    \ HERE\n  return(0)\n}\n", "\n  # Your code here\n}\n\nstarts_one_ends(1)", "\n\
    \  # Your code here\n}\n"]
stop_tokens:
- "\n#"
- "\n```"

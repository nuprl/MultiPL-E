name: HumanEval_19_sort_numbers
language: r
prompt: "# Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
  # Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
  \ 'eight' and 'nine'.\n# Return the string with numbers sorted from smallest to\
  \ largest\n# >>> sort_numbers('three one five')\n# 'one three five'\nsort_numbers\
  \ <- function(numbers) {"
tests: "test_humaneval <- function() {\ncandidate <- sort_numbers\n    if(!identical(candidate(''),\
  \ '')){quit('no', 1)}\n    if(!identical(candidate('three'), 'three')){quit('no',\
  \ 1)}\n    if(!identical(candidate('three five nine'), 'three five nine')){quit('no',\
  \ 1)}\n    if(!identical(candidate('five zero four seven nine eight'), 'zero four\
  \ five seven eight nine')){quit('no', 1)}\n    if(!identical(candidate('six five\
  \ four three two one zero'), 'zero one two three four five six')){quit('no', 1)}\n\
  }\ntest_humaneval()"
completions: ["\n  # Your code here\n}\n", "\n  num_dict <- c('zero'=0, 'one'=1, 'two'=2,\
    \ 'three'=3, 'four'=4, 'five'=5, 'six'=6, 'seven'=7, 'eight'=8, 'nine'=9)\n  nums\
    \ <- strsplit(numbers, ' ')[[1]]\n  nums <- num_dict[nums]\n  nums <- sort(nums)\n\
    \  nums <- names(num_dict)[nums]\n  paste(nums, collapse=' ')\n}\n", "\n  # your\
    \ code here\n}\n", "\n  numbers <- strsplit(numbers, \" \")[[1]]\n  numbers <-\
    \ sort(numbers, decreasing = FALSE)\n  return(paste(numbers, collapse = \" \"\
    ))\n}\n", "\n  numbers <- strsplit(numbers, \" \")[[1]]\n  numbers <- sort(numbers,\
    \ decreasing = FALSE)\n  numbers <- paste(numbers, collapse = \" \")\n  return(numbers)\n\
    }\n", "\n  # YOUR CODE HERE\n  numbers <- strsplit(numbers, \" \")[[1]]\n  numbers\
    \ <- as.numeric(numbers)\n  numbers <- sort(numbers)\n  numbers <- as.character(numbers)\n\
    \  numbers <- paste(numbers, collapse = \" \")\n  return(numbers)\n}\n", "\n \
    \ # Your code here\n  numbers <- strsplit(numbers, \" \")[[1]]\n  numbers <- as.numeric(sapply(numbers,\
    \ function(x) {\n    switch(x,\n           zero = 0,\n           one = 1,\n  \
    \         two = 2,\n           three = 3,\n           four = 4,\n           five\
    \ = 5,\n           six = 6,\n           seven = 7,\n           eight = 8,\n  \
    \         nine = 9)\n  }))\n  numbers <- sort(numbers)\n  numbers <- sapply(numbers,\
    \ function(x) {\n    switch(x,\n           0 = \"zero\",\n           1 = \"one\"\
    ,\n           2 = \"two\",\n           3 = \"three\",\n           4 = \"four\"\
    ,\n           5 = \"five\",\n           6 = \"six\",\n           7 = \"seven\"\
    ,\n           8 = \"eight\",\n           9 = \"nine\")\n  })\n  paste(numbers,\
    \ collapse = \" \")\n}\n", "\n  numbers <- strsplit(numbers, \" \")[[1]]\n  numbers\
    \ <- sort(numbers, index.return = TRUE)\n  numbers <- numbers[order(numbers$x),\
    \ ]\n  paste(numbers$x, collapse = \" \")\n}\n", "\n  # YOUR CODE HERE\n  numbers\
    \ <- strsplit(numbers, \" \")[[1]]\n  numbers <- sort(numbers, decreasing = FALSE)\n\
    \  numbers <- paste(numbers, collapse = \" \")\n  return(numbers)\n}\n", "\n \
    \ # Your code here\n}\n", "\n  numbers <- strsplit(numbers, ' ')[[1]]\n  numbers\
    \ <- sort(numbers, index.return = TRUE)\n  numbers <- numbers[order(numbers$x),\
    \ ]\n  paste(numbers$x, collapse = ' ')\n}\n", "\n  num_list <- strsplit(numbers,\
    \ ' ')[[1]]\n  num_list <- sort(num_list, decreasing = FALSE)\n  return(paste(num_list,\
    \ collapse = ' '))\n}\n", "\n  numbers <- unlist(strsplit(numbers, \" \"))\n \
    \ numbers <- sort(numbers, index.return = TRUE)\n  numbers <- numbers$x\n  numbers\
    \ <- paste(numbers, collapse = \" \")\n  return(numbers)\n}\n", "\n  # Your code\
    \ here\n  numbers <- strsplit(numbers, \" \")[[1]]\n  numbers <- sort(numbers,\
    \ decreasing = FALSE)\n  numbers <- paste(numbers, collapse = \" \")\n  return(numbers)\n\
    }\n", "\n  numbers <- strsplit(numbers, \" \")[[1]]\n  numbers <- sort(numbers,\
    \ decreasing = FALSE, index.return = TRUE)$ix\n  numbers <- paste(numbers, collapse\
    \ = \" \")\n  return(numbers)\n}\n", "\n  # Your code here\n  numbers <- unlist(strsplit(numbers,\
    \ \" \"))\n  numbers <- as.numeric(sapply(numbers, function(x) {\n    switch(x,\n\
    \           zero = 0,\n           one = 1,\n           two = 2,\n           three\
    \ = 3,\n           four = 4,\n           five = 5,\n           six = 6,\n    \
    \       seven = 7,\n           eight = 8,\n           nine = 9)\n  }))\n  numbers\
    \ <- sort(numbers)\n  numbers <- sapply(numbers, function(x) {\n    switch(x,\n\
    \           0 = \"zero\",\n           1 = \"one\",\n           2 = \"two\",\n\
    \           3 = \"three\",\n           4 = \"four\",\n           5 = \"five\"\
    ,\n           6 = \"six\",\n           7 = \"seven\",\n           8 = \"eight\"\
    ,\n           9 = \"nine\")\n  })\n  paste(numbers, collapse = \" \")\n}\n", "\n\
    \  # YOUR CODE HERE\n  number_list <- strsplit(numbers, \" \")[[1]]\n  number_list\
    \ <- sort(number_list)\n  return(paste(number_list, collapse = \" \"))\n}\n",
  "\n  numbers <- strsplit(numbers, \" \")[[1]]\n  numbers <- sort(numbers, index.return\
    \ = TRUE)\n  numbers <- paste(numbers$x, collapse = \" \")\n  return(numbers)\n\
    }\n", "\n  # TODO: implement me\n  return(numbers)\n}\n", "\n  # Your code here\n\
    \  return(numbers)\n}\n"]
stop_tokens:
- "\n#"
- "\n```"

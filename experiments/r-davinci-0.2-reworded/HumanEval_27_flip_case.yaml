name: HumanEval_27_flip_case
language: r
prompt: "# For a given string, flip lowercase characters to uppercase and uppercase\
  \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\nflip_case <- function(string)\
  \ {"
tests: "test_humaneval <- function() {\ncandidate <- flip_case\n    if(!identical(candidate(''),\
  \ '')){quit('no', 1)}\n    if(!identical(candidate('Hello!'), 'hELLO!')){quit('no',\
  \ 1)}\n    if(!identical(candidate('These violent delights have violent ends'),\
  \ 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')){quit('no', 1)}\n}\ntest_humaneval()"
completions: ["\n  string <- strsplit(string, \"\")[[1]]\n  for (i in 1:length(string))\
    \ {\n    if (string[i] %in% letters) {\n      if (string[i] == toupper(string[i]))\
    \ {\n        string[i] <- tolower(string[i])\n      } else {\n        string[i]\
    \ <- toupper(string[i])\n      }\n    }\n  }\n  return(paste(string, collapse\
    \ = \"\"))\n}\n", "\n    string <- strsplit(string, \"\")[[1]]\n    for (i in\
    \ 1:length(string)) {\n        if (string[i] == toupper(string[i])) {\n      \
    \      string[i] <- tolower(string[i])\n        } else {\n            string[i]\
    \ <- toupper(string[i])\n        }\n    }\n    return(paste(string, collapse =\
    \ \"\"))\n}\n", "\n  string <- strsplit(string, \"\")[[1]]\n  for (i in 1:length(string))\
    \ {\n    if (string[i] == toupper(string[i])) {\n      string[i] <- tolower(string[i])\n\
    \    } else {\n      string[i] <- toupper(string[i])\n    }\n  }\n  return(paste(string,\
    \ collapse = \"\"))\n}\n", "\n  string <- strsplit(string, \"\")[[1]]\n  for (i\
    \ in 1:length(string)) {\n    if (string[i] == toupper(string[i])) {\n      string[i]\
    \ <- tolower(string[i])\n    } else {\n      string[i] <- toupper(string[i])\n\
    \    }\n  }\n  return(paste(string, collapse = \"\"))\n}\n\nflip_case(\"Hello\"\
    )\n", "\n  string <- strsplit(string, \"\")[[1]]\n  for (i in 1:length(string))\
    \ {\n    if (is.na(string[i])) {\n      next\n    }\n    if (string[i] == toupper(string[i]))\
    \ {\n      string[i] <- tolower(string[i])\n    } else {\n      string[i] <- toupper(string[i])\n\
    \    }\n  }\n  return(paste(string, collapse = \"\"))\n}\n\nflip_case(\"Hello\"\
    )\n", "\n  string <- strsplit(string, \"\")[[1]]\n  string <- sapply(string, function(x)\
    \ {\n    if (x == toupper(x)) {\n      return(tolower(x))\n    } else {\n    \
    \  return(toupper(x))\n    }\n  })\n  return(paste(string, collapse = \"\"))\n\
    }\n", "\n  string <- strsplit(string, \"\")[[1]]\n  for (i in 1:length(string))\
    \ {\n    if (string[i] == toupper(string[i])) {\n      string[i] <- tolower(string[i])\n\
    \    } else {\n      string[i] <- toupper(string[i])\n    }\n  }\n  return(paste(string,\
    \ collapse = \"\"))\n}\n", "\n  string <- strsplit(string, \"\")[[1]]\n  for (i\
    \ in 1:length(string)) {\n    if (string[i] %in% letters) {\n      if (string[i]\
    \ == toupper(string[i])) {\n        string[i] <- tolower(string[i])\n      } else\
    \ {\n        string[i] <- toupper(string[i])\n      }\n    }\n  }\n  return(paste(string,\
    \ collapse = \"\"))\n}\n", "\n  string <- strsplit(string, \"\")[[1]]\n  for (i\
    \ in 1:length(string)) {\n    if (string[i] == toupper(string[i])) {\n      string[i]\
    \ <- tolower(string[i])\n    } else {\n      string[i] <- toupper(string[i])\n\
    \    }\n  }\n  return(paste(string, collapse = \"\"))\n}\n", "\n  string <- strsplit(string,\
    \ \"\")[[1]]\n  for (i in 1:length(string)) {\n    if (string[i] == toupper(string[i]))\
    \ {\n      string[i] <- tolower(string[i])\n    } else {\n      string[i] <- toupper(string[i])\n\
    \    }\n  }\n  return(paste(string, collapse = \"\"))\n}\n", "\n  string <- strsplit(string,\
    \ \"\")[[1]]\n  string <- sapply(string, function(x) {\n    if (x == toupper(x))\
    \ {\n      return(tolower(x))\n    } else {\n      return(toupper(x))\n    }\n\
    \  })\n  return(paste(string, collapse = \"\"))\n}\n", "\n  string <- strsplit(string,\
    \ \"\")[[1]]\n  for (i in 1:length(string)) {\n    if (string[i] %in% letters)\
    \ {\n      string[i] <- ifelse(string[i] == toupper(string[i]), tolower(string[i]),\
    \ toupper(string[i]))\n    }\n  }\n  return(paste(string, collapse = \"\"))\n\
    }\n", "\n  string <- strsplit(string, \"\")[[1]]\n  for (i in 1:length(string))\
    \ {\n    if (is.na(string[i])) {\n      next\n    }\n    if (string[i] == toupper(string[i]))\
    \ {\n      string[i] <- tolower(string[i])\n    } else {\n      string[i] <- toupper(string[i])\n\
    \    }\n  }\n  return(paste(string, collapse = \"\"))\n}\n\nflip_case(\"Hello\"\
    )\n", "\n  string <- strsplit(string, \"\")[[1]]\n  for (i in 1:length(string))\
    \ {\n    if (string[i] == toupper(string[i])) {\n      string[i] <- tolower(string[i])\n\
    \    } else {\n      string[i] <- toupper(string[i])\n    }\n  }\n  return(paste(string,\
    \ collapse = \"\"))\n}\n", "\n  string <- strsplit(string, \"\")[[1]]\n  for (i\
    \ in 1:length(string)) {\n    if (string[i] == toupper(string[i])) {\n      string[i]\
    \ <- tolower(string[i])\n    } else {\n      string[i] <- toupper(string[i])\n\
    \    }\n  }\n  return(paste(string, collapse = \"\"))\n}\n", "\n  string <- strsplit(string,\
    \ \"\")[[1]]\n  for (i in 1:length(string)) {\n    if (string[i] == toupper(string[i]))\
    \ {\n      string[i] <- tolower(string[i])\n    } else {\n      string[i] <- toupper(string[i])\n\
    \    }\n  }\n  return(paste(string, collapse = \"\"))\n}\n\nflip_case(\"Hello\"\
    )\n", "\n  string <- strsplit(string, \"\")[[1]]\n  for (i in 1:length(string))\
    \ {\n    if (string[i] %in% letters) {\n      if (string[i] == toupper(string[i]))\
    \ {\n        string[i] <- tolower(string[i])\n      } else {\n        string[i]\
    \ <- toupper(string[i])\n      }\n    }\n  }\n  return(paste(string, collapse\
    \ = \"\"))\n}\n", "\n  string <- strsplit(string, \"\")[[1]]\n  for (i in 1:length(string))\
    \ {\n    if (string[i] == toupper(string[i])) {\n      string[i] <- tolower(string[i])\n\
    \    } else {\n      string[i] <- toupper(string[i])\n    }\n  }\n  return(paste(string,\
    \ collapse = \"\"))\n}\n", "\n  string <- strsplit(string, \"\")[[1]]\n  for (i\
    \ in 1:length(string)) {\n    if (string[i] == toupper(string[i])) {\n      string[i]\
    \ <- tolower(string[i])\n    } else {\n      string[i] <- toupper(string[i])\n\
    \    }\n  }\n  return(paste(string, collapse = \"\"))\n}\n", "\n  string <- strsplit(string,\
    \ \"\")[[1]]\n  for (i in 1:length(string)) {\n    if (string[i] == toupper(string[i]))\
    \ {\n      string[i] <- tolower(string[i])\n    } else {\n      string[i] <- toupper(string[i])\n\
    \    }\n  }\n  return(paste(string, collapse = \"\"))\n}\n"]
stop_tokens:
- "\n#"
- "\n```"

language: java
name: HumanEval_63_fibfib
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdroy0uc.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdroy0uc.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdroy0uc.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 0) {\n            return 0;\n        }\n        if (n ==\
    \ 1) {\n            return 0;\n        }\n        if (n == 2) {\n            return\
    \ 1;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdroy0uc.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdroy0uc.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 0) return 0;\n        if (n <= 1) return 1;\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n\
    \    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10))\
    \ == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8m6kg8gj.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 2) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu6wfcth5.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return n;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return n;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdroy0uc.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 0) {\n            return 0;\n        }\n        if (n ==\
    \ 1) {\n            return 0;\n        }\n        if (n == 2) {\n            return\
    \ 1;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011726
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 0) {\n            return 0;\n        }\n        if (n ==\
    \ 1) {\n            return 0;\n        }\n        if (n == 2) {\n            return\
    \ 1;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return n;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdroy0uc.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 0) {\n            return 0;\n        }\n        if (n ==\
    \ 1) {\n            return 0;\n        }\n        if (n == 2) {\n            return\
    \ 1;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 2) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu6wfcth5.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdroy0uc.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdroy0uc.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 2) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu6wfcth5.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdroy0uc.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 0) {\n            return 0;\n        }\n        if (n ==\
    \ 1) {\n            return 0;\n        }\n        if (n == 2) {\n            return\
    \ 1;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdroy0uc.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return n;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdroy0uc.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdroy0uc.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 2) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu6wfcth5.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 0) {\n            return 0;\n        }\n        if (n ==\
    \ 1) {\n            return 0;\n        }\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptymy7_tx.java:25)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 2) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu6wfcth5.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 2) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu6wfcth5.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 2) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu6wfcth5.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 0) return 0;\n        if (n <= 2) return 1;\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n\
    \    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10))\
    \ == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzt0ow3sg.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0) {\n            return 0;\n        } else if (n == 1)\
    \ {\n            return 1;\n        } else if (n == 2) {\n            return 1;\n\
    \        } else {\n            return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpadpnzdxr.java:28)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0) {\n            return 0;\n        }\n        if (n ==\
    \ 1) {\n            return 0;\n        }\n        if (n == 2) {\n            return\
    \ 1;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011626
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdroy0uc.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 2) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu6wfcth5.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdroy0uc.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 0) return 0;\n        if (n <= 2) return 1;\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n\
    \    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10))\
    \ == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzt0ow3sg.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1) return 0;\n        return fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3);\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphlmvpoc2.java:20)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0) {\n            return 0;\n        }\n        if (n ==\
    \ 1) {\n            return 1;\n        }\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp299oiazu.java:22)\n\
    \tat Problem.fibfib(tmp299oiazu.java:22)\n\tat Problem.fibfib(tmp299oiazu.java:22)\n\
    \tat Problem.fibfib(tmp299oiazu.java:22)\n\tat Problem.fibfib(tmp299oiazu.java:22)\n\
    \tat Problem.fibfib(tmp299oiazu.java:22)\n\tat Problem.fibfib(tmp299oiazu.java:22)\n\
    \tat Problem.fibfib(tmp299oiazu.java:22)\n\tat Problem.fibfib(tmp299oiazu.java:22)\n\
    \tat Problem.fibfib(tmp299oiazu.java:22)\n\tat Problem.fibfib(tmp299oiazu.java:22)\n\
    \tat Problem.fibfib(tmp299oiazu.java:22)\n\tat Problem.fibfib(tmp299oiazu.java:22)\n\
    \tat Problem.fibfib(tmp299oiazu.java:22)\n\tat Problem.fibfib(tmp299oiazu.java:22)\n\
    \tat Problem.fibfib(tmp299oiazu.java:22)\n\tat Problem.fibfib(tmp299oiazu.java:22)\n\
    \tat Problem.fibfib(tmp299oiazu.java:22)\n\tat Problem.fibfib(tmp299oiazu.java:22)\n\
    \tat Problem.fibfib(tmp299oiazu.java:22)\n\tat Problem.fibfib(tmp299oiazu.java:22)\n\
    \tat Problem.fibfib(tmp299oiazu.java:22)\n\tat Problem.fibfib(tmp299oiazu.java:22)\n\
    \tat Problem.fibfib(tmp299oiazu.java:22)\n\tat Problem.fibfib(tmp299oiazu.java:22)\n\
    \tat Problem.fibfib(tmp299oiazu.java:22)\n\tat Problem.fibfib(tmp299oiazu.java:22)\n\
    \tat Problem.fibfib(tmp299oiazu.java:22)\n\tat Problem.fibfib(tmp299oiazu.java:22)\n\
    \tat Problem.fibfib(tmp299oiazu.java:22)\n\tat Problem.fibfib(tmp299oiazu.java:22)\n\
    \tat Problem.fibfib(tmp299oiazu.java:22)\n\tat Problem.fibfib(tmp299oiazu.java:22)\n\
    \tat Problem.fibfib(tmp299oiazu.java:22)\n\tat Problem.fibfib(tmp299oiazu.java:22)\n\
    \tat Problem.fibfib(tmp299oiazu.java:22)\n\tat Problem.fibfib(tmp299oiazu.java:22)\n\
    \tat Problem.fibfib(tmp299oiazu.java:22)\n\tat Problem.fibfib(tmp299oiazu.java:22)\n\
    \tat Problem.fibfib(tmp299oiazu.java:22)\n\tat Problem.fibfib(tmp299oiazu.java:22)\n\
    \tat Problem.fibfib(tmp299oiazu.java:22)\n\tat Problem.fibfib(tmp299oiazu.java:22)\n\
    \tat Problem.fibfib(tmp299oiazu.java:22)\n\tat Problem.fibfib(tmp299oiazu.java:22)\n\
    \tat Problem.fibfib(tmp299oiazu.java:22)\n\tat Problem.fibfib(tmp299oiazu.java:22)\n\
    \tat Problem.fibfib(tmp299oiazu.java:22)\n\tat Problem.fibfib(tmp299oiazu.java:22)\n\
    \tat Problem.fibfib(tmp299oiazu.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return n;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 2) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu6wfcth5.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1)\n            return 0;\n        return fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args) {\n\
    \    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphaw05_ak.java:21)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdroy0uc.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdroy0uc.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 2) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu6wfcth5.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return n;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 2) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu6wfcth5.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 0) {\n            return 0;\n        }\n        if (n <=\
    \ 2) {\n            return 1;\n        }\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuyt6_0hb.java:26)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 2) {\n            return 0;\n        } else {\n        \
    \    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n        }\n}\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb02txf4x.java:23)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1)\n            return 0;\n        return fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args) {\n\
    \    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphaw05_ak.java:21)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0) {\n            return 0;\n        }\n        if (n ==\
    \ 1) {\n            return 1;\n        }\n        if (n == 2) {\n            return\
    \ 1;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe7mwyayu.java:29)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdroy0uc.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return n;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0) {\n            return 0;\n        } else if (n == 1)\
    \ {\n            return 1;\n        } else if (n == 2) {\n            return 1;\n\
    \        } else {\n            return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpadpnzdxr.java:28)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdroy0uc.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1) {\n            return 0;\n        } else {\n        \
    \    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n        }\n}\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9rwogq6w.java:23)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1)\n            return 0;\n        return fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args) {\n\
    \    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphaw05_ak.java:21)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 2) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu6wfcth5.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 0) {\n            return 0;\n        }\n        if (n ==\
    \ 1) {\n            return 0;\n        }\n        if (n == 2) {\n            return\
    \ 1;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdroy0uc.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0) {\n            return 0;\n        } else if (n == 1)\
    \ {\n            return 1;\n        } else if (n == 2) {\n            return 1;\n\
    \        } else {\n            return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpadpnzdxr.java:28)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 2) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu6wfcth5.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdroy0uc.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 2) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu6wfcth5.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1) return 0;\n        return fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3);\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphlmvpoc2.java:20)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 2) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu6wfcth5.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return n;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0) {\n            return 0;\n        }\n        if (n ==\
    \ 1) {\n            return 0;\n        }\n        if (n == 2) {\n            return\
    \ 1;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011626
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return n;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0) {\n            return 0;\n        } else if (n == 1)\
    \ {\n            return 1;\n        } else if (n == 2) {\n            return 1;\n\
    \        } else {\n            return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpadpnzdxr.java:28)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdroy0uc.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdroy0uc.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdroy0uc.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return n;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return n;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdroy0uc.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return n;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1)\n            return 0;\n        return fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args) {\n\
    \    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphaw05_ak.java:21)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdroy0uc.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1) return 0;\n        return fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3);\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphlmvpoc2.java:20)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 2) {\n            return 0;\n        } else {\n        \
    \    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n        }\n}\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb02txf4x.java:23)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1) return 0;\n        return fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3);\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphlmvpoc2.java:20)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdroy0uc.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 0) {\n            return 0;\n        }\n        if (n ==\
    \ 1) {\n            return 0;\n        }\n        if (n == 2) {\n            return\
    \ 1;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1)\n            return 0;\n        return fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args) {\n\
    \    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphaw05_ak.java:21)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1)\n            return 0;\n        return fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args) {\n\
    \    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphaw05_ak.java:21)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return n;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1) return 0;\n        return fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3);\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphlmvpoc2.java:20)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdroy0uc.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 2) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu6wfcth5.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 0) {\n            return 0;\n        }\n        if (n ==\
    \ 1) {\n            return 0;\n        }\n        if (n == 2) {\n            return\
    \ 1;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdroy0uc.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdroy0uc.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdroy0uc.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdroy0uc.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0) {\n            return 0;\n        } else if (n == 1)\
    \ {\n            return 1;\n        } else if (n == 2) {\n            return 1;\n\
    \        } else if (n >= 3) {\n            return fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3);\n        }\n}\n    public static void main(String[] args) {\n \
    \   assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp2infp2v8.java:25: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0) {\n            return 0;\n        }\n        if (n ==\
    \ 1) {\n            return 1;\n        }\n        if (n == 2) {\n            return\
    \ 1;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe7mwyayu.java:29)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 2) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu6wfcth5.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1) return 0;\n        return fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3);\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphlmvpoc2.java:20)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 0) return 0;\n        if (n == 1) return 1;\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n\
    \    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10))\
    \ == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz6n3x_z2.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 0) {\n            return 0;\n        }\n        if (n ==\
    \ 1) {\n            return 0;\n        }\n        if (n == 2) {\n            return\
    \ 1;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1) return 0;\n        return fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3);\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphlmvpoc2.java:20)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 2) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu6wfcth5.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 2) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu6wfcth5.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0) {\n            return 0;\n        } else if (n == 1)\
    \ {\n            return 1;\n        } else if (n == 2) {\n            return 1;\n\
    \        } else {\n            return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpadpnzdxr.java:28)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 0) {\n            return 0;\n        }\n        if (n ==\
    \ 1) {\n            return 0;\n        }\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptymy7_tx.java:25)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdroy0uc.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 2) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu6wfcth5.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0) {\n            return 0;\n        } else if (n == 1)\
    \ {\n            return 1;\n        } else if (n == 2) {\n            return 1;\n\
    \        } else {\n            return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpadpnzdxr.java:28)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 0) {\n            return 0;\n        }\n        if (n ==\
    \ 1) {\n            return 0;\n        }\n        if (n == 2) {\n            return\
    \ 1;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0) {\n            return 0;\n        } else if (n == 1)\
    \ {\n            return 1;\n        } else if (n == 2) {\n            return 1;\n\
    \        } else if (n >= 3) {\n            return fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3);\n        } else {\n            return -1;\n        }\n}\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptxzuap9k.java:30)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return n;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return n;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return n;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0) {\n            return 0;\n        }\n        if (n ==\
    \ 1) {\n            return 1;\n        }\n        if (n == 2) {\n            return\
    \ 1;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe7mwyayu.java:29)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0) {\n            return 0;\n        } else if (n == 1)\
    \ {\n            return 1;\n        } else if (n == 2) {\n            return 1;\n\
    \        } else {\n            return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpadpnzdxr.java:28)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1) {\n            return 0;\n        } else {\n        \
    \    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n        }\n}\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9rwogq6w.java:23)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 0) {\n            return 0;\n        }\n        if (n ==\
    \ 1) {\n            return 0;\n        }\n        if (n == 2) {\n            return\
    \ 1;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n\
    \    public static void main(String[] args) {\n    assert(fibfib((2)) == (1));\n\
    \    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8))\
    \ == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n\
    \    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 0) {\n            return 0;\n        }\n        if (n ==\
    \ 1) {\n            return 0;\n        }\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptymy7_tx.java:25)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 0) return 0;\n        if (n <= 2) return 1;\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n\
    \    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10))\
    \ == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzt0ow3sg.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 2) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu6wfcth5.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1)\n            return 0;\n        return fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args) {\n\
    \    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphaw05_ak.java:21)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 2) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu6wfcth5.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 0) return 0;\n        if (n <= 2) return 1;\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n\
    \    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10))\
    \ == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzt0ow3sg.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdroy0uc.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0) {\n            return 0;\n        } else if (n == 1)\
    \ {\n            return 1;\n        } else if (n == 2) {\n            return 1;\n\
    \        } else {\n            return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpadpnzdxr.java:28)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 2) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu6wfcth5.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1) return 0;\n        return fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3);\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphlmvpoc2.java:20)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 0) {\n            return 0;\n        }\n        if (n <=\
    \ 2) {\n            return 1;\n        }\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuyt6_0hb.java:26)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0) {\n            return 0;\n        } else if (n == 1)\
    \ {\n            return 1;\n        } else if (n == 2) {\n            return 1;\n\
    \        } else {\n            return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(fibfib((2))\
    \ == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5)) == (4));\n\
    \    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n    assert(fibfib((12))\
    \ == (274));\n    assert(fibfib((14)) == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpadpnzdxr.java:28)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.java:19)\n\tat Problem.fibfib(tmpfl757ijd.java:19)\n\
    \tat Problem.fibfib(tmpfl757ijd.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 1) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdroy0uc.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n == 0 || n == 1) {\n            return n;\n        }\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1))\
    \ == (0));\n    assert(fibfib((5)) == (4));\n    assert(fibfib((8)) == (24));\n\
    \    assert(fibfib((10)) == (81));\n    assert(fibfib((12)) == (274));\n    assert(fibfib((14))\
    \ == (927));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.java:19)\n\tat Problem.fibfib(tmpgx37hprk.java:19)\n\
    \tat Problem.fibfib(tmpgx37hprk.j"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 2) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu6wfcth5.java:22)\n"
  stdout: ''
  timestamp: 1660011726
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    public static int fibfib(int n)\
    \ {\n        if (n <= 2) {\n            return 0;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2)) == (1));\n    assert(fibfib((1)) == (0));\n    assert(fibfib((5))\
    \ == (4));\n    assert(fibfib((8)) == (24));\n    assert(fibfib((10)) == (81));\n\
    \    assert(fibfib((12)) == (274));\n    assert(fibfib((14)) == (927));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu6wfcth5.java:22)\n"
  stdout: ''
  timestamp: 1660011726

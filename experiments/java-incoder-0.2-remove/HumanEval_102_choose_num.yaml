completions:
- "        if (x > y) {\n            int temp = x;\n            x = y;\n         \
  \   y = temp;\n        }\n        int result = -1;\n        for (int i = x; i <=\
  \ y; i++) {\n            if (isEven(i)) {\n                result = i;\n       \
  \         break;\n            }\n        }\n        return result;"
- "        int even = 0;\n        int odd = 0;\n        int biggestEven = -1;\n  \
  \      int biggestOdd = -1;\n        int biggest = -1;\n        for (int i = x;\
  \ i <= y; i++) {\n            if (i % 2 == 0) {\n                even++;\n     \
  \           if (even > biggestEven) {\n                    biggestEven = even;\n\
  \                    biggest = i;\n                }\n            } else {\n   \
  \             odd++;\n                if (odd > biggestOdd) {\n                \
  \    biggestOdd = odd;\n                    biggest = i;\n                }\n  \
  \          }\n        }\n        return biggest;"
- "        int even = 0;\n        int odd = 0;\n        int biggest = 0;\n       \
  \ if (x >= y) {\n            int temp = x;\n            x = y;\n            y =\
  \ temp;\n        }\n        for (int i = x; i <= y; i++) {\n            if (i %\
  \ 2 == 0) {\n                even++;\n            } else {\n                odd++;\n\
  \            }\n        }\n        if (even > odd) {\n            biggest = even;\n\
  \        } else {\n            biggest = odd;\n        }\n        return biggest;"
- "        int even = x;\n        int odd  = y;\n        int biggest = -1;\n     \
  \   if (even > odd) {\n            biggest = even;\n            while (even > odd)\
  \ {\n                biggest = even % biggest;\n                even = even / biggest;\n\
  \            }\n        } else {\n            biggest = odd;\n            while\
  \ (odd > even) {\n                biggest = odd % biggest;\n                odd\
  \ = odd / biggest;\n            }\n        }\n        return biggest;"
- "        int ans = -1;\n        if (x >= y) {\n            ans = x;\n        } else\
  \ {\n            ans = y;\n        }\n        while (ans % 2 == 0) {\n         \
  \   ans += 1;\n        }\n        return ans;"
- "        int biggestEven = -1;\n        if (x >= y) {\n            return -1;\n\
  \        }\n        if (x % 2 == 0) {\n            biggestEven = x;\n        }\n\
  \        if (y % 2 == 0) {\n            biggestEven = y;\n        }\n        if\
  \ (biggestEven > -1) {\n            return biggestEven;\n        }\n        int\
  \ even = x;\n        int odd  = y;\n        while (even > 0 && odd > 0) {\n    \
  \        if (even % 2 == 0) {\n                even = even / 2;\n            }\n\
  \            if (odd % 2 == 0) {\n                odd = odd / 2;\n            }\n\
  \        }\n        if (even > 0 && odd > 0) {\n            return even;\n     \
  \   }\n        if (even > 0 && odd < 0) {\n            return odd;\n        }\n\
  \        return -1;"
- "        int even = 0;\n        int odd = 0;\n        for(int i = x; i <= y; i++)\
  \ {\n            if(i%2 == 0) {\n                even = even*2 + i;\n          \
  \  }\n            else {\n                odd = odd*2 + i;\n            }\n    \
  \    }\n        if(even > odd) {\n            return even;\n        }\n        else\
  \ {\n            return odd;\n        }"
- "        int biggest = -1;\n        for (int i = x; i <= y; i++) {\n           \
  \ if (isEven(i)) {\n                if (biggest < i) biggest = i;\n            }\n\
  \        }\n        return biggest;"
- "        int maxEven = -1;\n        if (x >= y) {\n            int temp = x;\n \
  \           x = y;\n            y = temp;\n        }\n        for (int i = x; i\
  \ <= y; i++) {\n            if (i % 2 == 0) {\n                maxEven = i;\n  \
  \              break;\n            }\n        }\n        return maxEven;"
- "        if (x >= y) {\n            return -1;\n        }\n        int even = x;\n\
  \        int odd = y;\n        while (even > odd) {\n            int temp = even;\n\
  \            even = odd % 2;\n            odd = temp;\n        }\n        return\
  \ even;"
- "        int ans = -1;\n        if (x >= y) {\n            ans = x;\n        } else\
  \ {\n            ans = y;\n        }\n        if (ans == -1) {\n            ans\
  \ = x + y;\n        }\n        if (ans == -1) {\n            ans = x + y;\n    \
  \    }\n        return ans;"
- "        int even = x;\n        int odd = y;\n        int biggest = even;\n    \
  \    if (even > odd) {\n            biggest = odd;\n        }\n        else {\n\
  \            biggest = even;\n        }\n        while (biggest < odd) {\n     \
  \       biggest = biggest + biggest;\n        }\n        return biggest;"
- "        int maxEven = -1;\n        for (int i = x; i <= y; i++) {\n           \
  \ if (isEven(i)) {\n                if (maxEven == -1) {\n                    maxEven\
  \ = i;\n                } else {\n                    if (maxEven < i) {\n     \
  \                   maxEven = i;\n                    }\n                }\n   \
  \         }\n        }\n        return maxEven;"
- "        int max = 0;\n        for (int i = x; i <= y; i++) {\n            if (i\
  \ % 2 == 0) {\n                max = i;\n            }\n        }\n        return\
  \ max;"
- "        int even = x;\n        int odd = y;\n        int biggest = -1;\n      \
  \  if (even > odd) {\n            biggest = even;\n        } else {\n          \
  \  biggest = odd;\n        }\n        while (biggest < x || biggest < y) {\n   \
  \         if (biggest < x && biggest < y) {\n                biggest = even;\n \
  \           } else if (biggest < x) {\n                biggest = odd;\n        \
  \    } else {\n                biggest = even;\n            }\n        }\n     \
  \   return biggest;"
- "        if (x >= y) {\n            return -1;\n        }\n        int max = 0;\n\
  \        for (int i = x; i <= y; i++) {\n            if (isEven(i)) {\n        \
  \        max = Math.max(max, i);\n            }\n        }\n        return max;"
- "        int ans = -1;\n        if (x >= y) {\n            ans = x;\n        } else\
  \ {\n            ans = y;\n        }\n        while (ans % 2 == 0) {\n         \
  \   ans += 1;\n        }\n        return ans;"
- "        if (x > y) {\n            int temp = x;\n            x = y;\n         \
  \   y = temp;\n        }\n        int max = 0;\n        for (int i = x; i <= y;\
  \ i++) {\n            if (isEven(i)) {\n                max = Math.max(max, i);\n\
  \            }\n        }\n        return max;"
- "        int max = 0;\n        for (int i = x; i <= y; i++) {\n            if (isEven(i))\
  \ {\n                max = i;\n            }\n        }\n        return max;"
- "        int ans = -1;\n        if (x >= y) {\n            ans = x;\n        } else\
  \ {\n            ans = y;\n        }\n        while (ans < x || ans > y) {\n   \
  \         if (ans % 2 == 0) {\n                ans += 1;\n            } else {\n\
  \                ans -= 1;\n            }\n        }\n        return ans;"
- "        int biggest = -1;\n        if (x >= y) {\n            int temp = x;\n \
  \           x = y;\n            y = temp;\n        }\n        for (int i = x; i\
  \ <= y; i++) {\n            if (i % 2 == 0) {\n                biggest = i;\n  \
  \          }\n        }\n        return biggest;"
- "        int maxEven = -1;\n        for (int i = x; i <= y; i++) {\n           \
  \ if (isEven(i)) {\n                maxEven = i;\n            }\n        }\n   \
  \     return maxEven;"
- "        int max = 0;\n        if (x > y) {\n            max = x;\n        } else\
  \ {\n            max = y;\n        }\n        for (int i = max; i >= 0; i--) {\n\
  \            if (x % i == 0 && y % i == 0) {\n                max = i;\n       \
  \     }\n        }\n        return max;"
- "        if (x >= y || x <= 0) {\n            return -1;\n        }\n        int\
  \ even = x;\n        int odd = y;\n        while (even > 0 && odd > 0) {\n     \
  \       if (even % 2 == 0 && odd % 2 == 0) {\n                return even;\n   \
  \         }\n            even = even / 2;\n            odd = odd / 2;\n        }\n\
  \        return -1;"
- "        int result = -1;\n        if (x >= y) {\n            int temp = x;\n  \
  \          x = y;\n            y = temp;\n        }\n        if (x > y) {\n    \
  \        int temp = x;\n            x = y;\n            y = temp;\n        }\n \
  \       if (x <= y) {\n            int temp = x;\n            x = y;\n         \
  \   y = temp;\n        }\n        if (x > 0 && y > 0) {\n            int temp =\
  \ x;\n            x = y;\n            y = temp;\n        }\n        if (x > 0 &&\
  \ y < 0) {\n            int temp = x;\n            x = y;\n            y = temp;\n\
  \        }\n        if (x < 0 && y > 0) {\n            int temp = x;\n         \
  \   x = y;\n            y = temp;\n        }\n        if (x < 0 && y < 0) {\n  \
  \          int temp = x;\n            x = y;\n            y = temp;\n        }\n\
  \        if (x > 0 && y > 0) {\n            int temp = x;\n            x = y;\n\
  \            y = temp;\n        }\n        if (x > 0 && y < 0) {\n            int\
  \ temp = x;\n            x = y;\n            y = temp;\n        }\n        if (x\
  \ < 0 && y > 0) {\n            int temp = x;\n            x = y;\n            y\
  \ = temp;\n        }\n        if (x < 0 && y < 0) {\n            int temp = x;\n\
  \            x = y;\n            y = temp;\n        }\n        if (x > 0 && y >\
  \ 0) {\n            int temp = x;\n            x = y;\n            y = temp;\n \
  \       }\n        if (x > 0 && y < 0) {\n            int temp = x;\n          \
  \  x = y;\n            y = temp;\n        }\n        if (x < 0 && y > 0) {\n   \
  \         int temp = x;\n            x = y;\n            y = temp;\n        }\n\
  \        if (x < 0 && y < 0) {\n            int temp = x;\n            x = y;\n\
  \            y = temp;\n        }\n        if (x > 0 && y > 0) {\n            int\
  \ temp = x;\n            x = y;\n            y = temp;\n        }\n        if (x\
  \ > 0 && y < 0) {\n            int temp = x;\n            x = y;\n            y\
  \ = temp;\n        }\n        if (x < 0 && y > 0) {\n            int temp = x;\n\
  \            x = y;\n            y = temp;\n        }\n        if (x < 0 && y <\
  \ 0) {\n            int temp = x;\n            x = y;\n            y = temp;\n \
  \       }\n        if (x > 0 && y > 0) {\n            int temp = x;\n          \
  \  x = y;\n            y = temp;\n        }\n        if (x > 0 && y < 0) {\n   \
  \         int temp = x;\n            x = y;\n            y = temp;\n        }\n\
  \        if (x < 0 && y > 0) {\n            int temp = x;\n            x = y;\n\
  \            y = temp;\n        }\n        if (x < 0 && y < 0) {\n            int\
  \ temp = x;\n            x = y;\n            y = temp;\n        }\n        if (x\
  \ > 0 && y > 0) {\n            int temp = x;\n            x = y;\n            y\
  \ = temp;\n        }\n        if (x > 0 && y < 0) {\n            int temp = x;\n\
  \            x = y;\n            y = temp;\n        }\n        if (x < 0 && y >\
  \ 0) {\n            int temp = x;\n            x = y;\n"
- "        if (x < 0 || y < 0 || x > y || x == y) {\n            return -1;\n    \
  \    }\n        if (x % 2 == 0 && y % 2 == 0) {\n            return x;\n       \
  \ }\n        if (x % 2 == 0 && y % 2 != 0) {\n            return y;\n        }\n\
  \        if (x % 2 != 0 && y % 2 == 0) {\n            return x;\n        }\n   \
  \     if (x % 2 != 0 && y % 2 != 0) {\n            return y;\n        }\n      \
  \  return -1;"
- "        int result = -1;\n        if (x > y) {\n            int temp = x;\n   \
  \         x = y;\n            y = temp;\n        }\n        if (x > 0 && y > 0)\
  \ {\n            int temp = 0;\n            while (x <= y) {\n                if\
  \ (x % 2 == 0) {\n                    temp += x;\n                    x++;\n   \
  \             } else {\n                    temp += y;\n                    y--;\n\
  \                }\n            }\n            if (temp % 2 == 0) {\n          \
  \      result = temp;\n            }\n        }\n        return result;"
- "        int maxEven = -1;\n        for (int i = x; i <= y; i++) {\n           \
  \ if (isEven(i)) {\n                if (maxEven == -1) {\n                    maxEven\
  \ = i;\n                } else if (maxEven < i) {\n                    maxEven =\
  \ i;\n                }\n            }\n        }\n        return maxEven;"
- "        int maxEven = -1;\n        for (int i = x; i <= y; i++) {\n           \
  \ if (isEven(i)) {\n                if (maxEven == -1) {\n                    maxEven\
  \ = i;\n                } else if (maxEven > i) {\n                    maxEven =\
  \ i;\n                }\n            }\n        }\n        return maxEven;"
- "        int even = -1;\n        if (x >= 0 && y >= 0) {\n            int even =\
  \ Integer.MIN_VALUE;\n            int even2 = Integer.MIN_VALUE;\n            int\
  \ even3 = Integer.MIN_VALUE;\n            int even4 = Integer.MIN_VALUE;\n     \
  \       int even5 = Integer.MIN_VALUE;\n            int even6 = Integer.MIN_VALUE;\n\
  \            int even7 = Integer.MIN_VALUE;\n            int even8 = Integer.MIN_VALUE;\n\
  \            int even9 = Integer.MIN_VALUE;\n            int even10 = Integer.MIN_VALUE;\n\
  \            int even11 = Integer.MIN_VALUE;\n            int even12 = Integer.MIN_VALUE;\n\
  \            int even13 = Integer.MIN_VALUE;\n            int even14 = Integer.MIN_VALUE;\n\
  \            int even15 = Integer.MIN_VALUE;\n            int even16 = Integer.MIN_VALUE;\n\
  \            int even17 = Integer.MIN_VALUE;\n            int even18 = Integer.MIN_VALUE;\n\
  \            int even19 = Integer.MIN_VALUE;\n            int even20 = Integer.MIN_VALUE;\n\
  \            int even21 = Integer.MIN_VALUE;\n            int even22 = Integer.MIN_VALUE;\n\
  \            int even23 = Integer.MIN_VALUE;\n            int even24 = Integer.MIN_VALUE;\n\
  \            int even25 = Integer.MIN_VALUE;\n            int even26 = Integer.MIN_VALUE;\n\
  \            int even27 = Integer.MIN_VALUE;\n            int even28 = Integer.MIN_VALUE;\n\
  \            int even29 = Integer.MIN_VALUE;\n            int even30 = Integer.MIN_VALUE;\n\
  \            int even31 = Integer.MIN_VALUE;\n            int even32 = Integer.MIN_VALUE;\n\
  \            int even33 = Integer.MIN_VALUE;\n            int even34 = Integer.MIN_VALUE;\n\
  \            int even35 = Integer.MIN_VALUE;\n            int even36 = Integer.MIN_VALUE;\n\
  \            int even37 = Integer.MIN_VALUE;\n            int even38 = Integer.MIN_VALUE;\n\
  \            int even39 = Integer.MIN_VALUE;\n            int even40 = Integer.MIN_VALUE;\n\
  \            int even41 = Integer.MIN_VALUE;\n            int even42 = Integer.MIN_VALUE;\n\
  \            int even43 = Integer.MIN_VALUE;\n            int even44 = Integer.MIN_VALUE;\n\
  \            int even45 = Integer.MIN_VALUE;\n            int even46 = Integer.MIN_VALUE;\n\
  \            int even47 = Integer.MIN_VALUE;\n            int even48 = Integer.MIN_VALUE;\n\
  \            int even49 = Integer.MIN_VALUE;\n            int even50 = Integer.MIN_VALUE;\n\
  \            int even51 = Integer.MIN_VALUE;\n            int "
- "        int num;\n        if (x >= y) {\n            num = x;\n        } else {\n\
  \            num = y;\n        }\n        while (num % 2 == 0) {\n            num\
  \ /= 2;\n        }\n        return num;"
- "        if (x > y) {\n            int temp = x;\n            x = y;\n         \
  \   y = temp;\n        }\n        if (x > y && x > 0 && y > 0) {\n            int\
  \ temp = 0;\n            while (x % 2 == 0 && y % 2 == 0) {\n                temp++;\n\
  \                x /= 2;\n                y /= 2;\n            }\n            return\
  \ temp;\n        }\n        if (x < 0 || y < 0 || x > y || x == 0 || y == 0) {\n\
  \            return -1;\n        }\n        int temp = 0;\n        while (x % 2\
  \ == 0 && y % 2 == 0) {\n            temp++;\n            x /= 2;\n            y\
  \ /= 2;\n        }\n        return temp;"
- "        int even = 0;\n        int odd = 0;\n        int biggest = 0;\n       \
  \ int evenNum = 0;\n        int oddNum = 0;\n        int biggestNum = 0;\n     \
  \   for(int i = x; i <= y; i++) {\n            if(i%2 == 0) {\n                evenNum\
  \ = i;\n                even++;\n            }\n            else {\n           \
  \     oddNum = i;\n                odd++;\n            }\n        }\n        if(even\
  \ > odd) {\n            biggestNum = evenNum;\n        }\n        else {\n     \
  \       biggestNum = oddNum;\n        }\n        biggest = biggestNum;\n       \
  \ return biggest;"
- "        int result = -1;\n        if (x > y) {\n            int temp = x;\n   \
  \         x = y;\n            y = temp;\n        }\n        if (x % 2 == 0) {\n\
  \            int even = x;\n            while (even < y) {\n                even\
  \ += 2;\n            }\n            if (even > y) {\n                result = even;\n\
  \            }\n        }\n        if (y % 2 == 0) {\n            int even = y;\n\
  \            while (even < x) {\n                even += 2;\n            }\n   \
  \         if (even > x) {\n                result = even;\n            }\n     \
  \   }\n        return result;"
- "        if (x > y) {\n            return -1;\n        }\n        if (x % 2 == 0\
  \ && y % 2 == 0) {\n            return x;\n        }\n        if (x % 2 == 0 &&\
  \ y % 2 != 0) {\n            return y;\n        }\n        if (x % 2 != 0 && y %\
  \ 2 == 0) {\n            return x;\n        }\n        if (x % 2 != 0 && y % 2 !=\
  \ 0) {\n            return -1;\n        }\n        return -1;"
- "        int result;\n        if (x > y) {\n            result = x;\n        } else\
  \ {\n            result = y;\n        }\n        while(result % 2 == 0) {\n    \
  \        result /= 2;\n        }\n        return result;"
- "        int ans = -1;\n        if (x >= y) {\n            ans = x;\n        } else\
  \ {\n            ans = y;\n        }\n        while (ans % 2 == 0) {\n         \
  \   ans += 1;\n        }\n        return ans;"
- "        int ans = -1;\n        if (x >= y) {\n            ans = x;\n        } else\
  \ {\n            ans = y;\n        }\n        while (ans < x || ans > y) {\n   \
  \         if (ans % 2 == 0) {\n                ans += 1;\n            } else {\n\
  \                ans -= 1;\n            }\n        }\n        return ans;"
- "        int num;\n        if (x > y) {\n            num = x;\n        } else {\n\
  \            num = y;\n        }\n        int even = 0;\n        int odd = 0;\n\
  \        int biggest = 0;\n        for (int i = num; i >= 0; i--) {\n          \
  \  if (i % 2 == 0) {\n                even++;\n            } else {\n          \
  \      odd++;\n            }\n        }\n        if (even > odd) {\n           \
  \ biggest = even;\n        } else {\n            biggest = odd;\n        }\n   \
  \     return biggest;"
- "        int maxEven = -1;\n        if (x >= y) {\n            int temp = x;\n \
  \           x = y;\n            y = temp;\n        }\n        for (int i = x; i\
  \ <= y; i++) {\n            if (i % 2 == 0) {\n                if (maxEven == -1\
  \ || maxEven > i) {\n                    maxEven = i;\n                }\n     \
  \       }\n        }\n        return maxEven;"
- "        int ans = -1;\n        if (x >= y) {\n            ans = x;\n        } else\
  \ {\n            ans = y;\n        }\n        while (ans < x || ans > y) {\n   \
  \         ans = ans + 1;\n        }\n        return ans;"
- "        int biggest = -1;\n        for (int i = x; i <= y; i++) {\n           \
  \ if (isEven(i)) {\n                if (biggest < i) {\n                    biggest\
  \ = i;\n                }\n            }\n        }\n        return biggest;"
- "        if (x < 0 || y < 0 || x > y || y > x) {\n            return -1;\n     \
  \   }\n        if (x % 2 == 0 && y % 2 == 0) {\n            return x;\n        }\n\
  \        if (x % 2 == 0 && y % 2 != 0) {\n            return y;\n        }\n   \
  \     if (x % 2 != 0 && y % 2 == 0) {\n            return x;\n        }\n      \
  \  if (x % 2 != 0 && y % 2 != 0) {\n            return y;\n        }\n        return\
  \ -1;"
- "        int biggest = -1;\n        if (x > y) {\n            biggest = x;\n   \
  \     } else {\n            biggest = y;\n        }\n        for (int i = biggest\
  \ + 1; i <= y; i++) {\n            if (i % 2 == 0) {\n                biggest =\
  \ i;\n            }\n        }\n        return biggest;"
- "        int ans = -1;\n        if (x >= y) {\n            return -1;\n        }\n\
  \        if (x % 2 == 0 && y % 2 == 0) {\n            ans = x;\n        }\n    \
  \    if (x % 2 != 0 && y % 2 != 0) {\n            ans = y;\n        }\n        return\
  \ ans;"
- "        int num;\n        if (x > y) {\n            num = x;\n        } else {\n\
  \            num = y;\n        }\n        while(num % 2 == 0) {\n            num\
  \ = num / 2;\n        }\n        return num;"
- "        int maxEven = -1;\n        if (x >= y) {\n            int tempX = x;\n\
  \            int tempY = y;\n            x = y;\n            y = tempX;\n      \
  \  }\n        for (int i = x; i <= y; i++) {\n            if (i % 2 == 0) {\n  \
  \              if (maxEven == -1) {\n                    maxEven = i;\n        \
  \        } else {\n                    if (i > maxEven) {\n                    \
  \    maxEven = i;\n                    }\n                }\n            }\n   \
  \     }\n        return maxEven;"
- "        if (x >= y) {\n            return -1;\n        }\n        if (x % 2 ==\
  \ 0 && y % 2 == 0) {\n            return x;\n        }\n        if (x % 2 != 0 &&\
  \ y % 2 != 0) {\n            return -1;\n        }\n        int even = x;\n    \
  \    int odd = y;\n        int evenMax = even;\n        int oddMax = odd;\n    \
  \    while (even > 0 && odd > 0) {\n            if (even % 2 == 0 && odd % 2 ==\
  \ 0) {\n                evenMax = even;\n                oddMax = odd;\n       \
  \     }\n            if (even % 2 != 0 && odd % 2 != 0) {\n                evenMax\
  \ = -1;\n                oddMax = -1;\n            }\n            even = even /\
  \ 2;\n            odd = odd / 2;\n        }\n        return evenMax;"
- "        int ans = -1;\n        if (x > y) {\n            int temp = x;\n      \
  \      x = y;\n            y = temp;\n        }\n        for (int i = x; i <= y;\
  \ i++) {\n            if (i % 2 == 0) {\n                ans = i;\n            \
  \    break;\n            }\n        }\n        return ans;"
- "        if (x >= y) {\n            return -1;\n        }\n        if (x <= y) {\n\
  \            return x;\n        }\n        int even = 0;\n        int odd = 0;\n\
  \        int biggestEven = x;\n        int biggestOdd = y;\n        for (int i =\
  \ x; i <= y; i++) {\n            if (i % 2 == 0) {\n                even++;\n  \
  \              if (even > biggestEven) {\n                    biggestEven = even;\n\
  \                }\n            } else {\n                odd++;\n             \
  \   if (odd > biggestOdd) {\n                    biggestOdd = odd;\n           \
  \     }\n            }\n        }\n        return biggestEven;"
- "        int result = -1;\n        if (x >= y) {\n            int temp = x;\n  \
  \          x = y;\n            y = temp;\n        }\n        for (int i = x; i <=\
  \ y; i++) {\n            if (i % 2 == 0) {\n                result = i;\n      \
  \          break;\n            }\n        }\n        return result;"
- "        if (x > y) {\n            return -1;\n        }\n        int even = 0;\n\
  \        int odd = 0;\n        int biggest = 0;\n        for (int i = x; i <= y;\
  \ i++) {\n            if (i % 2 == 0) {\n                even++;\n            }\
  \ else {\n                odd++;\n            }\n        }\n        if (even > odd)\
  \ {\n            biggest = even;\n        } else {\n            biggest = odd;\n\
  \        }\n        return biggest;"
- "        int result = -1;\n        if (x >= y) {\n            int temp = x;\n  \
  \          x = y;\n            y = temp;\n        }\n        for (int i = x; i <=\
  \ y; i++) {\n            if (i % 2 == 0) {\n                result = i;\n      \
  \          break;\n            }\n        }\n        return result;"
- "        int result = -1;\n        if (x >= y) {\n            int temp = x;\n  \
  \          x = y;\n            y = temp;\n        }\n        if (x > 0 && y > 0)\
  \ {\n            int even = 0;\n            int odd = 0;\n            while (x <=\
  \ y) {\n                if (x % 2 == 0) {\n                    even++;\n       \
  \         }\n                if (y % 2 == 0) {\n                    odd++;\n   \
  \             }\n                x++;\n                y++;\n            }\n   \
  \         if (even > odd) {\n                result = x;\n            } else {\n\
  \                result = y;\n            }\n        }\n        return result;"
- "        if (x > y) {\n            return -1;\n        }\n        if (x < y) {\n\
  \            return -1;\n        }\n        if (x % 2 == 0 && y % 2 == 0) {\n  \
  \          return x;\n        }\n        if (x % 2 == 0 && y % 2 != 0) {\n     \
  \       return y;\n        }\n        if (x % 2 != 0 && y % 2 == 0) {\n        \
  \    return x;\n        }\n        if (x % 2 != 0 && y % 2 != 0) {\n           \
  \ return y;\n        }\n        return -1;"
- "        int maxEven = -1;\n        for (int i = x; i <= y; i++) {\n           \
  \ if (i % 2 == 0) {\n                if (maxEven == -1 || maxEven > i) {\n     \
  \               maxEven = i;\n                }\n            }\n        }\n    \
  \    return maxEven;"
- "        int maxEven = -1;\n        if (x >= y) {\n            int temp = x;\n \
  \           x = y;\n            y = temp;\n        }\n        for (int i = x; i\
  \ <= y; i++) {\n            if (i % 2 == 0) {\n                maxEven = i;\n  \
  \          }\n        }\n        return maxEven;"
- "        int maxEven = -1;\n        if (x >= y) {\n            return -1;\n    \
  \    }\n        for (int i = x; i <= y; i++) {\n            if (i % 2 == 0) {\n\
  \                maxEven = i;\n            }\n        }\n        return maxEven;"
- "        int ans = -1;\n        if (x >= y) {\n            ans = x;\n        } else\
  \ {\n            ans = y;\n        }\n        for (int i = x; i <= y; i++) {\n \
  \           if (i % 2 == 0) {\n                ans = i;\n            }\n       \
  \ }\n        return ans;"
- "        int result;\n        if (x >= y) {\n            result = x;\n        }\
  \ else {\n            result = y;\n        }\n        while (result > 0 && result\
  \ <= y) {\n            if (x % 2 == 0 && y % 2 == 0) {\n                result =\
  \ x + y;\n            }\n            x /= 2;\n            y /= 2;\n        }\n \
  \       return result;"
- "        int even = x;\n        int odd = y;\n        while (even < odd) {\n   \
  \         if (even % 2 == 0) {\n                even++;\n            } else {\n\
  \                odd--;\n            }\n        }\n        return even;"
- "        int num;\n        if (x >= y) {\n            num = x;\n        } else {\n\
  \            num = y;\n        }\n        while(num >= 2) {\n            int remainder\
  \ = num % 2;\n            num = num / 2;\n            if (remainder == 0) {\n  \
  \              return num;\n            }\n        }\n        return -1;"
- "        if (x > y) {\n            int temp = x;\n            x = y;\n         \
  \   y = temp;\n        }\n        int result = -1;\n        for (int i = x; i <=\
  \ y; i++) {\n            if (i % 2 == 0) {\n                result = i;\n      \
  \          break;\n            }\n        }\n        return result;"
- "        int maxEven = -1;\n        if (x >= y) {\n            int temp = x;\n \
  \           x = y;\n            y = temp;\n        }\n        for (int i = x; i\
  \ <= y; i++) {\n            if (i % 2 == 0) {\n                maxEven = i;\n  \
  \          }\n        }\n        return maxEven;"
- "        int result = -1;\n        if (x >= y) {\n            return -1;\n     \
  \   }\n        if (x % 2 == 0 && y % 2 == 0) {\n            int even = x / 2;\n\
  \            int odd = y / 2;\n            if (even > odd) {\n                result\
  \ = even;\n            } else {\n                result = odd;\n            }\n\
  \        } else if (x % 2 == 0 && y % 2 != 0) {\n            result = x;\n     \
  \   } else if (x % 2 != 0 && y % 2 == 0) {\n            result = y;\n        }\n\
  \        return result;"
- "        int maxEven = -1;\n        if (x >= y) {\n            int temp = x;\n \
  \           x = y;\n            y = temp;\n        }\n        for (int i = x; i\
  \ <= y; i++) {\n            if (i % 2 == 0) {\n                maxEven = i;\n  \
  \          }\n        }\n        return maxEven;"
- "        int result = -1;\n        if (x >= y) {\n            int temp = x;\n  \
  \          x = y;\n            y = temp;\n        }\n        if (x % 2 == 0 && y\
  \ % 2 == 0) {\n            int temp1 = x;\n            x = y;\n            y = temp1;\n\
  \        }\n        if (x % 2 == 0 && y % 2 != 0) {\n            result = x;\n \
  \       }\n        if (x % 2 != 0 && y % 2 == 0) {\n            result = y;\n  \
  \      }\n        if (x % 2 != 0 && y % 2 != 0) {\n            result = x + y;\n\
  \        }\n        return result;"
- "        int even = x;\n        int odd = y;\n        int biggest = even;\n    \
  \    if (even > odd) {\n            biggest = odd;\n        }\n        while (even\
  \ > 0 && odd > 0) {\n            if (even % 2 == 0 && odd % 2 == 0) {\n        \
  \        biggest = even;\n                even = even / 2;\n                odd\
  \ = odd / 2;\n            } else if (even % 2 == 0 && odd % 2 != 0) {\n        \
  \        biggest = even;\n                even = even / 2;\n            } else if\
  \ (even % 2 != 0 && odd % 2 == 0) {\n                biggest = odd;\n          \
  \      odd = odd / 2;\n            } else {\n                biggest = even;\n \
  \               even = even / 2;\n                odd = odd / 2;\n            }\n\
  \        }\n        return biggest;"
- "        int result = -1;\n        if (x > y) {\n            int temp = x;\n   \
  \         x = y;\n            y = temp;\n        }\n        if (x > 0 && y > 0)\
  \ {\n            while (x != 0) {\n                if (x % 2 == 0) {\n         \
  \           result = x;\n                    break;\n                }\n       \
  \         x /= 2;\n            }\n        }\n        if (result == -1) {\n     \
  \       while (y != 0) {\n                if (y % 2 == 0) {\n                  \
  \  result = y;\n                    break;\n                }\n                y\
  \ /= 2;\n            }\n        }\n        return result;"
- "        int ans = -1;\n        if (x >= y) {\n            ans = x;\n        } else\
  \ {\n            ans = y;\n        }\n        while (ans < x || ans > y) {\n   \
  \         ans += 2;\n        }\n        return ans;"
- "        int ans = -1;\n        if (x >= y) {\n            return -1;\n        }\n\
  \        if (x % 2 == 0 && y % 2 == 0) {\n            ans = x;\n        }\n    \
  \    if (x % 2 != 0 && y % 2 != 0) {\n            ans = y;\n        }\n        return\
  \ ans;"
- "        if (x > y) {\n            int temp = x;\n            x = y;\n         \
  \   y = temp;\n        }\n        int ans = -1;\n        for (int i = x; i <= y;\
  \ i++) {\n            if (i % 2 == 0) {\n                ans = i;\n            \
  \    break;\n            }\n        }\n        return ans;"
- "        int even = x;\n        int odd = y;\n        int maxEven = even;\n    \
  \    int maxOdd = odd;\n        while(even > 0 && odd > 0) {\n            if(even\
  \ % 2 == 0 && odd % 2 == 0) {\n                maxEven = even;\n               \
  \ maxOdd = odd;\n            }\n            else if(even % 2 != 0 && odd % 2 !=\
  \ 0) {\n                maxEven = even;\n                maxOdd = odd;\n       \
  \     }\n            else {\n                maxEven = even;\n                maxOdd\
  \ = odd;\n            }\n            even = even / 2;\n            odd = odd / 2;\n\
  \        }\n        return maxEven;"
- "        int result = -1;\n        if (x >= y) {\n            int temp = x;\n  \
  \          x = y;\n            y = temp;\n        }\n        for (int i = x; i <=\
  \ y; i++) {\n            if (i % 2 == 0) {\n                result = i;\n      \
  \          break;\n            }\n        }\n        return result;"
- "        if (x >= y || x <= 0) {\n            return -1;\n        }\n        int\
  \ result = x;\n        while (result <= y) {\n            if (result % 2 == 0) {\n\
  \                result = result + 1;\n            } else {\n                result\
  \ = result + 2;\n            }\n        }\n        return result;"
- "        int ans = -1;\n        if (x >= y) {\n            ans = x;\n        } else\
  \ {\n            ans = y;\n        }\n        while (ans % 2 == 0) {\n         \
  \   ans += 1;\n        }\n        return ans;"
- "        if (x > y) {\n            int temp = x;\n            x = y;\n         \
  \   y = temp;\n        }\n        int result = -1;\n        if (x % 2 == 0 && y\
  \ % 2 == 0) {\n            int temp1 = x;\n            x = y;\n            y = temp1;\n\
  \        }\n        if (x % 2 == 0) {\n            while (x % 2 == 0) {\n      \
  \          x = x / 2;\n                if (x == y) {\n                    result\
  \ = x;\n                    break;\n                }\n            }\n        }\
  \ else if (y % 2 == 0) {\n            while (y % 2 == 0) {\n                y =\
  \ y / 2;\n                if (x == y) {\n                    result = y;\n     \
  \               break;\n                }\n            }\n        }\n        return\
  \ result;"
- "        int max = 0;\n        if (x >= y) {\n            max = x;\n        } else\
  \ {\n            max = y;\n        }\n        for (int i = 2; i <= max; i++) {\n\
  \            if (x % i == 0 && y % i == 0) {\n                return i;\n      \
  \      }\n        }\n        return -1;"
- "        int biggestEven = -1;\n        if (x >= y) {\n            return biggestEven;\n\
  \        }\n        for (int i = x; i <= y; i++) {\n            if (i % 2 == 0)\
  \ {\n                biggestEven = i;\n            }\n        }\n        return\
  \ biggestEven;"
- "        int num;\n        if (x >= y) {\n            num = x;\n        } else {\n\
  \            num = y;\n        }\n        while (true) {\n            if (num %\
  \ 2 == 0) {\n                num++;\n            } else {\n                num--;\n\
  \            }\n            if (num >= x && num <= y) {\n                return\
  \ num;\n            }\n        }"
- "        int maxEven = -1;\n        if (x >= y) {\n            int tempX = x;\n\
  \            int tempY = y;\n            x = y;\n            y = tempX;\n      \
  \  }\n        for (int i = x; i <= y; i++) {\n            if (i % 2 == 0) {\n  \
  \              if (maxEven == -1 || maxEven > i) {\n                    maxEven\
  \ = i;\n                }\n            }\n        }\n        return maxEven;"
- "        int maxEven = -1;\n        if (x >= y) {\n            return -1;\n    \
  \    }\n        for (int i = x; i <= y; i++) {\n            if (i % 2 == 0) {\n\
  \                if (maxEven == -1) {\n                    maxEven = i;\n      \
  \          } else if (maxEven > i) {\n                    maxEven = i;\n       \
  \         }\n            }\n        }\n        return maxEven;"
- "        int result = -1;\n        if (x >= y) {\n            int temp = x;\n  \
  \          x = y;\n            y = temp;\n        }\n        for (int i = x; i <=\
  \ y; i++) {\n            if (i % 2 == 0) {\n                result = i;\n      \
  \          break;\n            }\n        }\n        return result;"
- "        int max = 0;\n        for (int i = x; i <= y; i++) {\n            if (isEven(i))\
  \ {\n                max = i;\n            }\n        }\n        return max;"
- "        int biggest = -1;\n        for (int i = x; i <= y; i++) {\n           \
  \ if (isEven(i)) {\n                if (biggest < i) biggest = i;\n            }\n\
  \        }\n        return biggest;"
- "        if (x >= y) {\n            return -1;\n        }\n        int even = 0;\n\
  \        int odd = 0;\n        int biggest = 0;\n        for (int i = x; i <= y;\
  \ i++) {\n            if (i % 2 == 0) {\n                even++;\n            }\n\
  \            else {\n                odd++;\n            }\n        }\n        if\
  \ (even > odd) {\n            biggest = even;\n        }\n        else {\n     \
  \       biggest = odd;\n        }\n        return biggest;"
- "        if (x >= y || x <= 0) {\n            return -1;\n        }\n        int\
  \ biggest = x;\n        while (true) {\n            if (biggest == y) {\n      \
  \          return biggest;\n            }\n            biggest++;\n            if\
  \ (biggest > y) {\n                return -1;\n            }\n        }"
- "        int max = 0;\n        for (int i = x; i <= y; i++) {\n            if (i\
  \ % 2 == 0) {\n                max = i;\n            }\n        }\n        return\
  \ max;"
- "        if (x > y) {\n            int temp = x;\n            x = y;\n         \
  \   y = temp;\n        }\n        int result = -1;\n        for (int i = x; i <=\
  \ y; i++) {\n            if (isEven(i)) {\n                result = i;\n       \
  \         break;\n            }\n        }\n        return result;"
- "        int ans = -1;\n        if (x >= y) {\n            ans = x;\n        } else\
  \ {\n            ans = y;\n        }\n        while (ans < x || ans > y) {\n   \
  \         ans += 2;\n        }\n        return ans;"
- "        int even = x;\n        int odd = y;\n        int biggest = even;\n    \
  \    if (even > odd) {\n            biggest = odd;\n        }\n        if (even\
  \ % 2 == 0) {\n            biggest = even;\n        }\n        if (odd % 2 == 0)\
  \ {\n            biggest = odd;\n        }\n        return biggest;"
- "        int result;\n        if (x >= y) {\n            result = x;\n        }\
  \ else {\n            result = y;\n        }\n        while (result % 2 == 0) {\n\
  \            result /= 2;\n        }\n        return result;"
- "        int biggest = -1;\n        for (int i = x; i <= y; i++) {\n           \
  \ if (isEven(i)) {\n                biggest = i;\n                break;\n     \
  \       }\n        }\n        return biggest;"
- "        int biggest = -1;\n        if (x >= y) {\n            biggest = x;\n  \
  \      } else {\n            biggest = y;\n        }\n        while (biggest < x\
  \ || biggest < y) {\n            if (biggest % 2 == 0) {\n                biggest\
  \ = biggest + 1;\n            } else {\n                biggest = biggest + 2;\n\
  \            }\n        }\n        return biggest;"
- "        int result = -1;\n        if (x >= y) {\n            int temp;\n      \
  \      temp = x;\n            x = y;\n            y = temp;\n        }\n       \
  \ if (x > 0 && y > 0) {\n            while (x != 0) {\n                while (y\
  \ != 0) {\n                    if (x % 2 == 0 && y % 2 == 0) {\n               \
  \         result = x;\n                        break;\n                    }\n \
  \                   y = y / 2;\n                }\n                x = x / 2;\n\
  \            }\n        }\n        return result;"
- "        int biggest = -1;\n        if (x >= y) {\n            biggest = x;\n  \
  \      } else {\n            biggest = y;\n        }\n        for (int i = biggest\
  \ + 1; i <= y; i++) {\n            if (i % 2 == 0) {\n                biggest =\
  \ i;\n            }\n        }\n        return biggest;"
- "        int ans = -1;\n        if (x >= y) {\n            ans = x;\n        } else\
  \ {\n            ans = y;\n        }\n        while (ans < x || ans > y) {\n   \
  \         ans = ans + 1;\n        }\n        return ans;"
- "        int result = -1;\n        if (x >= y) {\n            int temp = x;\n  \
  \          x = y;\n            y = temp;\n        }\n        for (int i = x; i <=\
  \ y; i++) {\n            if (i % 2 == 0) {\n                result = i;\n      \
  \          break;\n            }\n        }\n        return result;"
- "        int ans = -1;\n        if (x > y) {\n            ans = x;\n        } else\
  \ {\n            ans = y;\n        }\n        while (ans < x || ans > y) {\n   \
  \         ans += 2;\n        }\n        return ans;"
- "        int result = -1;\n        if (x > y) {\n            int temp = x;\n   \
  \         x = y;\n            y = temp;\n        }\n        if (x > 0 && y > 0)\
  \ {\n            int even = x % 2 == 0;\n            int odd = y % 2 == 0;\n   \
  \         if (even && odd) {\n                result = x;\n            } else if\
  \ (even) {\n                result = y;\n            } else {\n                result\
  \ = x;\n            }\n        }\n        return result;"
- "        int even = 0;\n        int odd = 0;\n        int biggestEven = -1;\n  \
  \      int biggestOdd = -1;\n        if (x >= y) {\n            int temp = x;\n\
  \            x = y;\n            y = temp;\n        }\n        for (int i = x; i\
  \ <= y; i++) {\n            if (i % 2 == 0) {\n                even++;\n       \
  \         if (biggestEven == -1 || even > biggestEven) {\n                    biggestEven\
  \ = even;\n                }\n            } else {\n                odd++;\n   \
  \             if (biggestOdd == -1 || odd > biggestOdd) {\n                    biggestOdd\
  \ = odd;\n                }\n            }\n        }\n        return biggestEven;"
- "        int maxEven = -1;\n        if (x >= y) {\n            int temp = x;\n \
  \           x = y;\n            y = temp;\n        }\n        for (int i = x; i\
  \ <= y; i++) {\n            if (i % 2 == 0) {\n                maxEven = i;\n  \
  \              break;\n            }\n        }\n        return maxEven;"
- "        int maxEven = -1;\n        for (int i = x; i <= y; i++) {\n           \
  \ if (i % 2 == 0) {\n                if (maxEven == -1 || maxEven > i) {\n     \
  \               maxEven = i;\n                }\n            }\n        }\n    \
  \    return maxEven;"
- "        if (x >= y) {\n            return -1;\n        }\n        int m = x;\n\
  \        int n = y;\n        int ans = -1;\n        while (m <= n) {\n         \
  \   if (m % 2 == 0) {\n                ans = m;\n                break;\n      \
  \      }\n            m++;\n        }\n        return ans;"
- "        int max = 0;\n        for (int i = x; i <= y; i++) {\n            if (i\
  \ % 2 == 0) {\n                max = i;\n            }\n        }\n        return\
  \ max;"
- "        int max = 0;\n        for (int i = x; i <= y; i++) {\n            if (i\
  \ % 2 == 0) {\n                max = i;\n            }\n        }\n        return\
  \ max;"
- "        int ans = -1;\n        if (x >= y) {\n            ans = x;\n        } else\
  \ {\n            ans = y;\n        }\n        while (ans < x || ans > y) {\n   \
  \         if (ans % 2 == 0) {\n                ans += 1;\n            } else {\n\
  \                ans -= 1;\n            }\n        }\n        return ans;"
- "        int result = -1;\n        if (x >= y) {\n            int temp = x;\n  \
  \          x = y;\n            y = temp;\n        }\n        if (x % 2 == 0 && y\
  \ % 2 == 0) {\n            int temp1 = x;\n            x = y;\n            y = temp1;\n\
  \        }\n        if (x % 2 == 0 && y % 2 != 0) {\n            result = x;\n \
  \       }\n        if (x % 2 != 0 && y % 2 == 0) {\n            result = y;\n  \
  \      }\n        if (x % 2 != 0 && y % 2 != 0) {\n            result = x + y;\n\
  \        }\n        return result;"
- "        int result = -1;\n        if (x >= y) {\n            int temp = x;\n  \
  \          x = y;\n            y = temp;\n        }\n        for (int i = x; i <=\
  \ y; i++) {\n            if (i % 2 == 0) {\n                result = i;\n      \
  \      }\n        }\n        return result;"
- "        int biggest = -1;\n        if (x >= y) {\n            return -1;\n    \
  \    }\n        if (x % 2 == 0) {\n            biggest = x;\n        }\n       \
  \ if (y % 2 == 0) {\n            biggest = y;\n        }\n        if (biggest ==\
  \ -1) {\n            biggest = x + y;\n        }\n        return biggest;"
- "        int ans = -1;\n        if (x >= y) {\n            ans = x;\n        } else\
  \ {\n            ans = y;\n        }\n        while(ans > 0) {\n            int\
  \ mid = (ans + y) / 2;\n            if (mid % 2 == 0) {\n                ans = mid;\n\
  \            } else {\n                ans = y;\n            }\n        }\n    \
  \    return ans;"
- "        int max = 0;\n        for (int i = x; i <= y; i++) {\n            if (i\
  \ % 2 == 0) {\n                max = i;\n            }\n        }\n        return\
  \ max;"
- "        int result = -1;\n        if (x >= y) {\n            int temp = x;\n  \
  \          x = y;\n            y = temp;\n        }\n        if (x > 0 && y > 0)\
  \ {\n            while (x != 0) {\n                if (x % 2 == 0) {\n         \
  \           result = x;\n                    x = x / 2;\n                } else\
  \ {\n                    x = x / 2;\n                }\n            }\n        }\n\
  \        return result;"
- "        int result = -1;\n        if (x >= y) {\n            int temp = x;\n  \
  \          x = y;\n            y = temp;\n        }\n        if (x % 2 == 0) {\n\
  \            int even = x;\n            while (even < y) {\n                even\
  \ += 2;\n            }\n            if (even > y) {\n                result = even;\n\
  \            }\n        }\n        if (y % 2 == 0) {\n            int even = y;\n\
  \            while (even < x) {\n                even += 2;\n            }\n   \
  \         if (even > x) {\n                result = even;\n            }\n     \
  \   }\n        return result;"
- "        if (x > y) {\n            return -1;\n        }\n        if (x <= y) {\n\
  \            return x;\n        }\n        int mid = (x + y) / 2;\n        if (mid\
  \ % 2 == 0) {\n            return mid;\n        }\n        return chooseNum(x, mid);"
- "        int ans = -1;\n        if (x >= y) {\n            ans = x;\n        } else\
  \ {\n            ans = y;\n        }\n        if (ans % 2 == 0) {\n            return\
  \ ans;\n        }\n        \n        int evens = 0;\n        \n        for (int\
  \ i = x; i <= y; i++) {\n            if (i % 2 == 0) {\n                evens++;\n\
  \            }\n        }\n        \n        if (evens == 0) {\n            return\
  \ -1;\n        }\n        \n        ans = ans / 2;\n        \n        return ans;"
- "        int biggest = -1;\n        for (int i = x; i <= y; i++) {\n           \
  \ if (isEven(i)) {\n                if (biggest < i) {\n                    biggest\
  \ = i;\n                }\n            }\n        }\n        return biggest;"
- "        int max = 0;\n        for (int i = x; i <= y; i++) {\n            if (i\
  \ % 2 == 0) {\n                max = i;\n            }\n        }\n        return\
  \ max;"
- "        int biggest = -1;\n        for (int i = x; i <= y; i++) {\n           \
  \ if (isEven(i)) {\n                biggest = i;\n            }\n        }\n   \
  \     return biggest;"
- "        int result = -1;\n        if (x >= y) {\n            int temp = x;\n  \
  \          x = y;\n            y = temp;\n        }\n        for (int i = x; i <=\
  \ y; i++) {\n            if (i % 2 == 0) {\n                result = i;\n      \
  \          break;\n            }\n        }\n        return result;"
- "        int max = 0;\n        for (int i = x; i <= y; i++) {\n            if (i\
  \ % 2 == 0) {\n                if (max < i) {\n                    max = i;\n  \
  \              }\n            }\n        }\n        return max;"
- "        if (x >= y) {\n            return -1;\n        }\n        int result =\
  \ x;\n        while (result < y) {\n            if (result % 2 == 0) {\n       \
  \         result = result + 2;\n            } else {\n                result = result\
  \ + 1;\n            }\n        }\n        return result;"
- "        int even = 0;\n        int odd = 0;\n        int biggest = 0;\n       \
  \ int evenNum = 0;\n        int oddNum = 0;\n        int biggestNum = 0;\n     \
  \   boolean evenFound = false;\n        boolean oddFound = false;\n        boolean\
  \ biggestFound = false;\n        for(int i = x; i <= y; i++) {\n            if(i%2\
  \ == 0) {\n                evenNum = i;\n                evenFound = true;\n   \
  \         }\n            else {\n                oddNum = i;\n                oddFound\
  \ = true;\n            }\n        }\n        if(evenFound && oddFound) {\n     \
  \       biggestNum = evenNum;\n            biggestFound = true;\n        }\n   \
  \     else if(evenFound && !oddFound) {\n            biggestNum = evenNum;\n   \
  \         biggestFound = true;\n        }\n        else if(!evenFound && oddFound)\
  \ {\n            biggestNum = oddNum;\n            biggestFound = true;\n      \
  \  }\n        else if(!evenFound && !oddFound) {\n            biggestNum = -1;\n\
  \            biggestFound = true;\n        }\n        for(int i = x; i <= y; i++)\
  \ {\n            if(i%2 == 0) {\n                even = evenNum;\n            }\n\
  \            else {\n                odd = oddNum;\n            }\n        }\n \
  \       if(even > biggestNum) {\n            biggestNum = even;\n        }\n   \
  \     else if(odd > biggestNum) {\n            biggestNum = odd;\n        }\n  \
  \      return biggestNum;"
- "        int result;\n        if (x > y) {\n            result = x;\n        } else\
  \ {\n            result = y;\n        }\n        while (result > 0 && result % 2\
  \ == 0) {\n            result = result / 2;\n        }\n        return result;"
- "        if (x >= y) {\n            return -1;\n        }\n        int max = x;\n\
  \        int min = y;\n        while (max < min) {\n            int mid = (max +\
  \ min) / 2;\n            if (mid % 2 == 0) {\n                max = mid;\n     \
  \       } else {\n                min = mid;\n            }\n        }\n       \
  \ return max;"
- "        int result = -1;\n        if (x >= y) {\n            int temp = x;\n  \
  \          x = y;\n            y = temp;\n        }\n        for (int i = x; i <=\
  \ y; i++) {\n            if (i % 2 == 0) {\n                result = i;\n      \
  \          break;\n            }\n        }\n        return result;"
- "        int biggest = -1;\n        if (x >= y) {\n            biggest = x;\n  \
  \      } else {\n            biggest = y;\n        }\n        for (int i = biggest\
  \ + 1; i <= y; i++) {\n            if (isEven(i)) {\n                biggest = i;\n\
  \            }\n        }\n        return biggest;"
- "        int maxEven = -1;\n        if (x >= y) {\n            int temp = x;\n \
  \           x = y;\n            y = temp;\n        }\n        for (int i = x; i\
  \ <= y; i++) {\n            if (i % 2 == 0) {\n                if (maxEven == -1\
  \ || maxEven > i) {\n                    maxEven = i;\n                }\n     \
  \       }\n        }\n        return maxEven;"
- "        int maxEven = -1;\n        if (x >= y) {\n            int temp = x;\n \
  \           x = y;\n            y = temp;\n        }\n        for (int i = x; i\
  \ <= y; i++) {\n            if (i % 2 == 0) {\n                maxEven = i;\n  \
  \              break;\n            }\n        }\n        return maxEven;"
- "        int even = 0;\n        int odd = 0;\n        int biggest = -1;\n      \
  \  for (int i = x; i <= y; i++) {\n            if (i % 2 == 0) {\n             \
  \   even = even * 2 + i;\n            } else {\n                odd = odd + i;\n\
  \            }\n        }\n        if (even > biggest) {\n            biggest =\
  \ even;\n        } else if (odd > biggest) {\n            biggest = odd;\n     \
  \   }\n        return biggest;"
- "        int biggest = -1;\n        for (int i = x; i <= y; i++) {\n           \
  \ if (isEven(i)) {\n                biggest = i;\n            }\n        }\n   \
  \     return biggest;"
- "        int even = x;\n        int odd = y;\n        while(even < odd) {\n    \
  \        even+=2;\n            odd+=2;\n        }\n        if(even > odd) {\n  \
  \          return even;\n        }\n        return -1;"
- "        int biggest = -1;\n        if (x >= y) {\n            biggest = x;\n  \
  \      } else {\n            biggest = y;\n        }\n        for (int i = biggest\
  \ + 1; i <= y; i++) {\n            if (i % 2 == 0) {\n                biggest =\
  \ i;\n            }\n        }\n        return biggest;"
- "        int num;\n        if (x >= y) {\n            num = x;\n        } else {\n\
  \            num = y;\n        }\n        while(num >= 2) {\n            int temp;\n\
  \            temp = num % 2;\n            num = num / 2;\n            if (temp ==\
  \ 0) {\n                return num;\n            }\n        }\n        return -1;"
- "        int result = -1;\n        if (x > y) {\n            int temp = x;\n   \
  \         x = y;\n            y = temp;\n        }\n        if (x % 2 == 0) {\n\
  \            int temp1 = x;\n            x = y;\n            y = temp1;\n      \
  \  }\n        if (y % 2 == 0) {\n            int temp2 = y;\n            y = x;\n\
  \            x = temp2;\n        }\n        if (x > y) {\n            int temp3\
  \ = x;\n            x = y;\n            y = temp3;\n        }\n        if (x % 2\
  \ == 0) {\n            int temp4 = x;\n            x = y;\n            y = temp4;\n\
  \        }\n        if (y % 2 == 0) {\n            int temp5 = y;\n            y\
  \ = x;\n            x = temp5;\n        }\n        if (x > y) {\n            int\
  \ temp6 = x;\n            x = y;\n            y = temp6;\n        }\n        if\
  \ (x % 2 == 0) {\n            int temp7 = x;\n            x = y;\n            y\
  \ = temp7;\n        }\n        if (y % 2 == 0) {\n            int temp8 = y;\n \
  \           y = x;\n            x = temp8;\n        }\n        if (x > y) {\n  \
  \          int temp9 = x;\n            x = y;\n            y = temp9;\n        }\n\
  \        if (x % 2 == 0) {\n            int temp10 = x;\n            x = y;\n  \
  \          y = temp10;\n        }\n        if (y % 2 == 0) {\n            int temp11\
  \ = y;\n            y = x;\n            x = temp11;\n        }\n        if (x >\
  \ y) {\n            int temp12 = x;\n            x = y;\n            y = temp12;\n\
  \        }\n        if (x % 2 == 0) {\n            int temp13 = x;\n           \
  \ x = y;\n            y = temp13;\n        }\n        if (y % 2 == 0) {\n      \
  \      int temp14 = y;\n            y = x;\n            x = temp14;\n        }\n\
  \        if (x > y) {\n            int temp15 = x;\n            x = y;\n       \
  \     y = temp15;\n        }\n        if (x % 2 == 0) {\n            int temp16\
  \ = x;\n            x = y;\n            y = temp16;\n        }\n        if (y %\
  \ 2 == 0) {\n            int temp17 = y;\n            y = x;\n            x = temp17;\n\
  \        }\n        if (x > y) {\n            int temp18 = x;\n            x = y;\n\
  \            y = temp18;\n        }\n        if (x % 2 == 0) {\n            int\
  \ temp19 = x;\n            x = y;\n            y = temp19;\n        }\n        if\
  \ (y % 2 == 0) {\n            int temp20 = y;\n            y = x;\n            x\
  \ = temp20;\n        }\n        if (x > y) {\n            int temp21 = x;\n    \
  \        x = y;\n            y = temp21;\n        }\n        if (x % 2 == 0) {\n\
  \            int temp22 = x;\n            x = y;\n            y = temp22;\n    \
  \    }\n        if (y % 2 == 0) {\n            int temp23 = y;\n            y =\
  \ x;\n            x = temp23;\n        }\n        if (x > y) {\n"
- "        int result = -1;\n        if (x > y) {\n            int temp = x;\n   \
  \         x = y;\n            y = temp;\n        }\n        if (x % 2 == 0) {\n\
  \            int temp2 = x;\n            x = y;\n            y = temp2;\n      \
  \  }\n        if (y % 2 == 0) {\n            int temp3 = y;\n            y = x;\n\
  \            x = temp3;\n        }\n        if (x > y) {\n            int temp4\
  \ = x;\n            x = y;\n            y = temp4;\n        }\n        if (x % 2\
  \ == 0) {\n            int temp5 = x;\n            x = y;\n            y = temp5;\n\
  \        }\n        if (y % 2 == 0) {\n            int temp6 = y;\n            y\
  \ = x;\n            x = temp6;\n        }\n        if (x > y) {\n            int\
  \ temp7 = x;\n            x = y;\n            y = temp7;\n        }\n        if\
  \ (x % 2 == 0) {\n            int temp8 = x;\n            x = y;\n            y\
  \ = temp8;\n        }\n        if (y % 2 == 0) {\n            int temp9 = y;\n \
  \           y = x;\n            x = temp9;\n        }\n        if (x > y) {\n  \
  \          int temp10 = x;\n            x = y;\n            y = temp10;\n      \
  \  }\n        if (x % 2 == 0) {\n            int temp11 = x;\n            x = y;\n\
  \            y = temp11;\n        }\n        if (y % 2 == 0) {\n            int\
  \ temp12 = y;\n            y = x;\n            x = temp12;\n        }\n        if\
  \ (x > y) {\n            int temp13 = x;\n            x = y;\n            y = temp13;\n\
  \        }\n        if (x % 2 == 0) {\n            int temp14 = x;\n           \
  \ x = y;\n            y = temp14;\n        }\n        if (y % 2 == 0) {\n      \
  \      int temp15 = y;\n            y = x;\n            x = temp15;\n        }\n\
  \        if (x > y) {\n            int temp16 = x;\n            x = y;\n       \
  \     y = temp16;\n        }\n        if (x % 2 == 0) {\n            int temp17\
  \ = x;\n            x = y;\n            y = temp17;\n        }\n        if (y %\
  \ 2 == 0) {\n            int temp18 = y;\n            y = x;\n            x = temp18;\n\
  \        }\n        if (x > y) {\n            int temp19 = x;\n            x = y;\n\
  \            y = temp19;\n        }\n        if (x % 2 == 0) {\n            int\
  \ temp20 = x;\n            x = y;\n            y = temp20;\n        }\n        if\
  \ (y % 2 == 0) {\n            int temp21 = y;\n            y = x;\n            x\
  \ = temp21;\n        }\n        if (x > y) {\n            int temp22 = x;\n    \
  \        x = y;\n            y = temp22;\n        }\n        if (x % 2 == 0) {\n\
  \            int temp23 = x;\n            x = y;\n            y = temp23;\n    \
  \    }\n        if (y % 2 == 0) {\n            int temp24 = y;\n            y =\
  \ x;\n            x = temp24;\n        }\n        if (x > "
- "        int result = -1;\n        if (x >= y) {\n            int temp = x;\n  \
  \          x = y;\n            y = temp;\n        }\n        if (x % 2 == 0 && y\
  \ % 2 == 0) {\n            int temp1 = x;\n            x = y;\n            y = temp1;\n\
  \        }\n        if (x % 2 == 0 && y % 2 != 0) {\n            int temp2 = x;\n\
  \            x = y;\n            y = temp2;\n        }\n        if (x % 2 != 0 &&\
  \ y % 2 == 0) {\n            int temp3 = y;\n            x = y;\n            y =\
  \ temp3;\n        }\n        if (x % 2 != 0 && y % 2 != 0) {\n            int temp4\
  \ = x;\n            x = y;\n            y = temp4;\n        }\n        if (x % 2\
  \ == 0 && y % 2 == 0) {\n            int temp5 = x;\n            x = y;\n      \
  \      y = temp5;\n        }\n        if (x % 2 != 0 && y % 2 == 0) {\n        \
  \    int temp6 = x;\n            x = y;\n            y = temp6;\n        }\n   \
  \     if (x % 2 == 0 && y % 2 != 0) {\n            int temp7 = x;\n            x\
  \ = y;\n            y = temp7;\n        }\n        if (x % 2 != 0 && y % 2 != 0)\
  \ {\n            int temp8 = x;\n            x = y;\n            y = temp8;\n  \
  \      }\n        if (x % 2 == 0 && y % 2 == 0) {\n            int temp9 = x;\n\
  \            x = y;\n            y = temp9;\n        }\n        if (x % 2 != 0 &&\
  \ y % 2 == 0) {\n            int temp10 = x;\n            x = y;\n            y\
  \ = temp10;\n        }\n        if (x % 2 == 0 && y % 2 != 0) {\n            int\
  \ temp11 = x;\n            x = y;\n            y = temp11;\n        }\n        if\
  \ (x % 2 != 0 && y % 2 != 0) {\n            int temp12 = x;\n            x = y;\n\
  \            y = temp12;\n        }\n        if (x % 2 == 0 && y % 2 == 0) {\n \
  \           int temp13 = x;\n            x = y;\n            y = temp13;\n     \
  \   }\n        if (x % 2 != 0 && y % 2 == 0) {\n            int temp14 = x;\n  \
  \          x = y;\n            y = temp14;\n        }\n        if (x % 2 == 0 &&\
  \ y % 2 != 0) {\n            int temp15 = x;\n            x = y;\n            y\
  \ = temp15;\n        }\n        if (x % 2 != 0 && y % 2 != 0) {\n            int\
  \ temp16 = x;\n            x = y;\n            y = temp16;\n        }\n        if\
  \ (x % 2 == 0 && y % 2 == 0) {\n            int temp17 = x;\n            x = y;\n\
  \            y = temp17;\n        }\n        if (x % 2 != 0 && y % 2 == 0) {\n \
  \           int temp18 = x;\n            x = y;\n            y = temp18;\n     \
  \   }\n        if (x % 2 == 0 && y % 2 != 0) {\n            int temp19 = "
- "        int biggest = -1;\n        if (x >= y) {\n            biggest = x;\n  \
  \      } else {\n            biggest = y;\n        }\n        while (biggest <=\
  \ x) {\n            if (biggest % 2 == 0) {\n                biggest = biggest +\
  \ 1;\n            } else {\n                biggest = biggest + 2;\n           \
  \ }\n        }\n        return biggest;"
- "        int maxEven = -1;\n        for (int i = x; i <= y; i++) {\n           \
  \ if (isEven(i)) {\n                if (maxEven == -1) {\n                    maxEven\
  \ = i;\n                } else if (maxEven > i) {\n                    maxEven =\
  \ i;\n                }\n            }\n        }\n        return maxEven;"
- "        int ans = -1;\n        if (x >= y) {\n            ans = x;\n        } else\
  \ {\n            ans = y;\n        }\n        if (ans == -1) {\n            ans\
  \ = Integer.MIN_VALUE;\n        }\n        int evens = 0;\n        for (int i =\
  \ x; i <= y; i++) {\n            if (i % 2 == 0) {\n                evens++;\n \
  \           }\n        }\n        if (evens == 0) {\n            ans = -1;\n   \
  \     }\n        return ans;"
- "        int result = -1;\n        if (x > y) {\n            int temp = x;\n   \
  \         x = y;\n            y = temp;\n        }\n        if (x % 2 == 0) {\n\
  \            if (y % 2 == 0) {\n                if (y > x) {\n                 \
  \   result = x;\n                } else {\n                    result = y;\n   \
  \             }\n            } else {\n                result = x;\n           \
  \ }\n        } else {\n            if (y % 2 == 0) {\n                result = y;\n\
  \            } else {\n                result = x;\n            }\n        }\n \
  \       return result;"
- "        int biggest = -1;\n        if (x >= y) {\n            return biggest;\n\
  \        }\n        for (int i = x; i <= y; i++) {\n            if (i % 2 == 0)\
  \ {\n                biggest = i;\n            }\n        }\n        return biggest;"
- "        int even = 0;\n        int odd = 0;\n        for(int i = x; i <= y; i++)\
  \ {\n            if(i%2 == 0) {\n                even = even * 2 + i;\n        \
  \    } else {\n                odd = odd + i;\n            }\n        }\n      \
  \  if(even > odd) {\n            return even;\n        } else {\n            return\
  \ odd;\n        }"
- "        if (x >= y) {\n            return -1;\n        }\n        int maxEven =\
  \ x;\n        int maxOdd = y;\n        while (true) {\n            int even = maxEven\
  \ + maxOdd;\n            int odd = maxOdd - maxEven;\n            if (even % 2 ==\
  \ 0 && odd % 2 == 0) {\n                return even;\n            }\n          \
  \  maxEven = even;\n            maxOdd = odd;\n        }"
- "        int even = 0;\n        int odd = 0;\n        int biggest = 0;\n       \
  \ for(int i = x; i <= y; i++) {\n            if(i%2 == 0) {\n                even\
  \ = even*2 + i;\n            }\n            else {\n                odd = odd*2\
  \ + i;\n            }\n        }\n        if(even > odd) {\n            biggest\
  \ = even;\n        }\n        else {\n            biggest = odd;\n        }\n  \
  \      return biggest;"
- "        int ans = -1;\n        if (x >= y) {\n            ans = x;\n        } else\
  \ {\n            ans = y;\n        }\n        if (ans % 2 == 0) {\n            return\
  \ ans;\n        }\n        while (ans > 0) {\n            ans -= 2;\n          \
  \  if (ans % 2 == 0) {\n                return ans;\n            }\n        }\n\
  \        return -1;"
- "        int ans = -1;\n        if (x >= y) {\n            ans = x;\n        } else\
  \ {\n            ans = y;\n        }\n        while (ans < x || ans > y) {\n   \
  \         if (ans % 2 == 0) {\n                ans += 1;\n            } else {\n\
  \                ans -= 1;\n            }\n        }\n        return ans;"
- "        int even = x;\n        int odd = y;\n        while (even > 0 && odd > 0)\
  \ {\n            if (even % 2 == 0 && odd % 2 == 0) {\n                return even;\n\
  \            }\n            even /= 2;\n            odd /= 2;\n        }\n     \
  \   return -1;"
- "        int max = 0;\n        if (x >= y) {\n            max = x;\n        } else\
  \ {\n            max = y;\n        }\n        for (int i = x; i <= y; i++) {\n \
  \           if (i % 2 == 0) {\n                max = i;\n            }\n       \
  \ }\n        return max;"
- "        int ans = -1;\n        if (x >= y) {\n            ans = x;\n        } else\
  \ {\n            ans = y;\n        }\n        while (ans < x || ans > y) {\n   \
  \         ans += 2;\n        }\n        return ans;"
- "        int even = x;\n        int odd = y;\n        int biggest = even;\n    \
  \    if (even > odd) {\n            biggest = odd;\n        }\n        if (even\
  \ % 2 == 0) {\n            while (even % 2 == 0) {\n                even = even\
  \ / 2;\n                biggest = even;\n            }\n        }\n        if (odd\
  \ % 2 == 0) {\n            while (odd % 2 == 0) {\n                odd = odd / 2;\n\
  \                biggest = odd;\n            }\n        }\n        return biggest;"
- "        int result = -1;\n        if (x >= y) {\n            int temp = x;\n  \
  \          x = y;\n            y = temp;\n        }\n        if (x > 0 && y > 0)\
  \ {\n            while (x != 0) {\n                if (x % 2 == 0) {\n         \
  \           result = x;\n                    break;\n                }\n       \
  \         x = x / 2;\n            }\n            while (y != 0) {\n            \
  \    if (y % 2 == 0) {\n                    result = y;\n                    break;\n\
  \                }\n                y = y / 2;\n            }\n        }\n     \
  \   return result;"
- "        int maxEven = -1;\n        if (x >= y) {\n            int temp = x;\n \
  \           x = y;\n            y = temp;\n        }\n        for (int i = x; i\
  \ <= y; i++) {\n            if (i % 2 == 0) {\n                maxEven = i;\n  \
  \          }\n        }\n        return maxEven;"
- "        int max = 0;\n        for (int i = x; i <= y; i++) {\n            if (i\
  \ % 2 == 0) {\n                max = i;\n            }\n        }\n        return\
  \ max;"
- "        int maxEven = -1;\n        if (x >= y) {\n            int temp = x;\n \
  \           x = y;\n            y = temp;\n        }\n        for (int i = x; i\
  \ <= y; i++) {\n            if (i % 2 == 0) {\n                maxEven = i;\n  \
  \          }\n        }\n        return maxEven;"
- "        if (x >= y || x <= 0) {\n            return -1;\n        }\n        int\
  \ even = 0;\n        int odd = 0;\n        int biggest = 0;\n        int smaller\
  \ = 0;\n        int bigger = 0;\n        boolean evenFound = false;\n        boolean\
  \ oddFound = false;\n        boolean biggestFound = false;\n        boolean smallerFound\
  \ = false;\n        boolean biggerFound = false;\n        boolean evenFound2 = false;\n\
  \        boolean oddFound2 = false;\n        boolean biggestFound2 = false;\n  \
  \      boolean smallerFound2 = false;\n        boolean biggerFound2 = false;\n \
  \       for (int i = x; i <= y; i++) {\n            if (i % 2 == 0) {\n        \
  \        even++;\n                if (even > biggest) {\n                    biggest\
  \ = even;\n                    biggestFound = true;\n                }\n       \
  \         if (even > biggest2) {\n                    biggest2 = even;\n       \
  \             biggestFound2 = true;\n                }\n            } else {\n \
  \               odd++;\n                if (odd > biggest) {\n                 \
  \   biggest = odd;\n                    biggestFound = true;\n                }\n\
  \                if (odd > biggest2) {\n                    biggest2 = odd;\n  \
  \                  biggestFound2 = true;\n                }\n            }\n   \
  \     }\n        if (evenFound == true) {\n            return biggest;\n       \
  \ }\n        if (oddFound == true) {\n            return biggest2;\n        }\n\
  \        if (biggestFound == true) {\n            return biggest;\n        }\n \
  \       if (smallerFound == true) {\n            return smaller;\n        }\n  \
  \      if (biggerFound == true) {\n            return bigger;\n        }\n     \
  \   if (evenFound2 == true) {\n            return biggest2;\n        }\n       \
  \ if (oddFound2 == true) {\n            return biggest2;\n        }\n        if\
  \ (biggestFound2 == true) {\n            return biggest2;\n        }\n        if\
  \ (smallerFound2 == true) {\n            return biggest2;\n        }\n        if\
  \ (biggerFound2 == true) {\n            return biggest2;\n        }\n        return\
  \ -1;"
- "        int maxEven = -1;\n        if (x >= y) {\n            int tempX = x;\n\
  \            int tempY = y;\n            x = y;\n            y = tempX;\n      \
  \  }\n        for (int i = x; i <= y; i++) {\n            if (i % 2 == 0) {\n  \
  \              maxEven = i;\n            }\n        }\n        return maxEven;"
- "        int biggestEven = -1;\n        if (x >= y) {\n            biggestEven =\
  \ x;\n        } else {\n            biggestEven = y;\n        }\n        while (biggestEven\
  \ % 2 == 0) {\n            biggestEven++;\n        }\n        return biggestEven;"
- "        int ans = -1;\n        if (x >= y) {\n            ans = x;\n        } else\
  \ {\n            ans = y;\n        }\n        while (ans % 2 == 0) {\n         \
  \   ans += 1;\n        }\n        return ans;"
- "        int even = x % 2 == 0;\n        int even2 = y % 2 == 0;\n        int even3\
  \ = x % 3 == 0;\n        int even4 = y % 3 == 0;\n        int even5 = x % 5 == 0;\n\
  \        int even6 = y % 5 == 0;\n        int even7 = x % 7 == 0;\n        int even8\
  \ = y % 7 == 0;\n        int even9 = x % 9 == 0;\n        int even10 = y % 9 ==\
  \ 0;\n        int even11 = x % 11 == 0;\n        int even12 = y % 11 == 0;\n   \
  \     int even13 = x % 13 == 0;\n        int even14 = y % 13 == 0;\n        int\
  \ even15 = x % 15 == 0;\n        int even16 = y % 15 == 0;\n        int even17 =\
  \ x % 17 == 0;\n        int even18 = y % 17 == 0;\n        int even19 = x % 19 ==\
  \ 0;\n        int even20 = y % 19 == 0;\n        int even21 = x % 21 == 0;\n   \
  \     int even22 = y % 21 == 0;\n        int even23 = x % 23 == 0;\n        int\
  \ even24 = y % 23 == 0;\n        int even25 = x % 25 == 0;\n        int even26 =\
  \ y % 25 == 0;\n        int even27 = x % 27 == 0;\n        int even28 = y % 27 ==\
  \ 0;\n        int even29 = x % 29 == 0;\n        int even30 = y % 29 == 0;\n   \
  \     int even31 = x % 31 == 0;\n        int even32 = y % 31 == 0;\n        int\
  \ even33 = x % 33 == 0;\n        int even34 = y % 33 == 0;\n        int even35 =\
  \ x % 35 == 0;\n        int even36 = y % 35 == 0;\n        int even37 = x % 37 ==\
  \ 0;\n        int even38 = y % 37 == 0;\n        int even39 = x % 39 == 0;\n   \
  \     int even40 = y % 39 == 0;\n        int even41 = x % 41 == 0;\n        int\
  \ even42 = y % 41 == 0;\n        int even43 = x % 43 == 0;\n        int even44 =\
  \ y % 43 == 0;\n        int even45 = x % 45 == 0;\n        int even46 = y % 45 ==\
  \ 0;\n        int even47 = x % 47 == 0;\n        int even48 = y % 47 == 0;\n   \
  \     int even49 = x % 49 == 0;\n        int even50 = y % 49 == 0;\n        int\
  \ even51 = x % 51 == 0;\n        int even52 = y % 51 == 0;\n        int even53 =\
  \ x % 53 == "
- "        int result = -1;\n        if (x >= y) {\n            int temp = x;\n  \
  \          x = y;\n            y = temp;\n        }\n        for (int i = x; i <=\
  \ y; i++) {\n            if (i % 2 == 0) {\n                result = i;\n      \
  \          break;\n            }\n        }\n        return result;"
- "        int even = x;\n        int odd = y;\n        int biggest = even;\n    \
  \    if (even > odd) {\n            biggest = odd;\n        }\n        if (even\
  \ < odd) {\n            biggest = even;\n        }\n        return biggest;"
- "        int result = -1;\n        if (x >= y) {\n            return -1;\n     \
  \   }\n        if (x <= y) {\n            return x;\n        }\n        if (x %\
  \ 2 == 0 && y % 2 == 0) {\n            return x;\n        }\n        if (x % 2 !=\
  \ 0 && y % 2 != 0) {\n            return y;\n        }\n        if (x % 2 == 0 &&\
  \ y % 2 != 0) {\n            return y;\n        }\n        if (x % 2 != 0 && y %\
  \ 2 == 0) {\n            return x;\n        }\n        if (x % 2 != 0 && y % 2 !=\
  \ 0) {\n            return x;\n        }\n        return result;"
- "        int result = -1;\n        if (x >= y) {\n            int temp = x;\n  \
  \          x = y;\n            y = temp;\n        }\n        if (x % 2 == 0) {\n\
  \            int temp = x;\n            x = y;\n            y = temp;\n        }\n\
  \        int even = 0;\n        int odd = 0;\n        while (x != 0) {\n       \
  \     if (x % 2 == 0) {\n                even++;\n            } else {\n       \
  \         odd++;\n            }\n            x--;\n        }\n        if (even >\
  \ odd) {\n            result = x;\n        }\n        return result;"
- "        int result = -1;\n        if (x >= y) {\n            int temp = x;\n  \
  \          x = y;\n            y = temp;\n        }\n        if (x % 2 == 0) {\n\
  \            int temp1 = x;\n            x = y;\n            y = temp1;\n      \
  \  }\n        if (y % 2 == 0) {\n            int temp2 = y;\n            y = x;\n\
  \            x = temp2;\n        }\n        if (x % 2 == 0 && y % 2 == 0) {\n  \
  \          int temp3 = x;\n            x = y;\n            y = temp3;\n        }\n\
  \        if (x % 2 == 0 && y % 2 != 0) {\n            int temp4 = y;\n         \
  \   y = x;\n            x = temp4;\n        }\n        if (x % 2 != 0 && y % 2 ==\
  \ 0) {\n            int temp5 = y;\n            y = x;\n            x = temp5;\n\
  \        }\n        if (x % 2 != 0 && y % 2 != 0) {\n            int temp6 = x;\n\
  \            x = y;\n            y = temp6;\n        }\n        if (x % 2 != 0 &&\
  \ y % 2 != 0) {\n            int temp7 = y;\n            y = x;\n            x =\
  \ temp7;\n        }\n        if (x % 2 != 0 && y % 2 != 0) {\n            int temp8\
  \ = x;\n            x = y;\n            y = temp8;\n        }\n        if (x % 2\
  \ != 0 && y % 2 != 0) {\n            int temp9 = y;\n            y = x;\n      \
  \      x = temp9;\n        }\n        if (x % 2 != 0 && y % 2 != 0) {\n        \
  \    int temp10 = x;\n            x = y;\n            y = temp10;\n        }\n \
  \       if (x % 2 != 0 && y % 2 != 0) {\n            int temp11 = y;\n         \
  \   y = x;\n            x = temp11;\n        }\n        if (x % 2 != 0 && y % 2\
  \ != 0) {\n            int temp12 = x;\n            x = y;\n            y = temp12;\n\
  \        }\n        if (x % 2 != 0 && y % 2 != 0) {\n            int temp13 = y;\n\
  \            y = x;\n            x = temp13;\n        }\n        if (x % 2 != 0\
  \ && y % 2 != 0) {\n            int temp14 = x;\n            x = y;\n          \
  \  y = temp14;\n        }\n        if (x % 2 != 0 && y % 2 != 0) {\n           \
  \ int temp15 = y;\n            y = x;\n            x = temp15;\n        }\n    \
  \    if (x % 2 != 0 && y % 2 != 0) {\n            int temp16 = x;\n            x\
  \ = y;\n            y = temp16;\n        }\n        if (x % 2 != 0 && y % 2 != 0)\
  \ {\n            int temp17 = y;\n            y = x;\n            x = temp17;\n\
  \        }\n        if (x % 2 != 0 && y % 2 != 0) {\n            int temp18 = x;\n\
  \            x = y;\n            y = temp18;\n        }\n        if (x % 2 != 0\
  \ && y % 2 != 0) {\n            "
- "        if (x > y) {\n            int temp = x;\n            x = y;\n         \
  \   y = temp;\n        }\n        int result = -1;\n        for (int i = x; i <=\
  \ y; i++) {\n            if (i % 2 == 0) {\n                result = i;\n      \
  \      }\n        }\n        return result;"
- "        int biggest = -1;\n        if (x >= y) {\n            biggest = x;\n  \
  \      } else {\n            biggest = y;\n        }\n        while (biggest < x\
  \ || biggest < y) {\n            if (biggest % 2 == 0) {\n                biggest\
  \ = biggest + 1;\n            } else {\n                biggest = biggest - 1;\n\
  \            }\n        }\n        return biggest;"
- "        if (x >= y) {\n            return -1;\n        }\n        int even = 0;\n\
  \        int odd = 0;\n        for (int i = x; i <= y; i++) {\n            if (i\
  \ % 2 == 0) {\n                even++;\n            } else {\n                odd++;\n\
  \            }\n        }\n        if (even > odd) {\n            return even;\n\
  \        } else {\n            return odd;\n        }"
- "        if (x > y) {\n            int temp = x;\n            x = y;\n         \
  \   y = temp;\n        }\n        int result = -1;\n        for (int i = x; i <=\
  \ y; i++) {\n            if (i % 2 == 0) {\n                result = i;\n      \
  \      }\n        }\n        return result;"
- "        int biggest = -1;\n        for (int i = x; i <= y; i++) {\n           \
  \ if (isEven(i)) {\n                biggest = i;\n            }\n        }\n   \
  \     return biggest;"
- "        int even = x;\n        int odd = y;\n        int biggest = even;\n    \
  \    if (even > odd) {\n            biggest = odd;\n        }\n        while (even\
  \ > 0 && odd > 0) {\n            if (even % 2 == 0 && odd % 2 == 0) {\n        \
  \        biggest = even;\n                break;\n            }\n            else\
  \ if (even % 2 == 0 && odd % 2 != 0) {\n                biggest = odd;\n       \
  \         break;\n            }\n            else if (even % 2 != 0 && odd % 2 ==\
  \ 0) {\n                biggest = even;\n                break;\n            }\n\
  \            else if (even % 2 != 0 && odd % 2 != 0) {\n                biggest\
  \ = odd;\n                break;\n            }\n            even = even / 2;\n\
  \            odd = odd / 2;\n        }\n        return biggest;"
- "        if (x >= y) {\n            return -1;\n        }\n        int max = x;\n\
  \        while (max < y) {\n            max = max + 1;\n        }\n        while\
  \ (max > x) {\n            if (max % 2 == 0) {\n                max = max / 2;\n\
  \            } else {\n                max = max - 1;\n            }\n        }\n\
  \        return max;"
- "        int biggest = -1;\n        for (int i = x; i <= y; i++) {\n           \
  \ if (isEven(i)) {\n                if (biggest < i) {\n                    biggest\
  \ = i;\n                }\n            }\n        }\n        return biggest;"
- "        int maxEven = -1;\n        if (x >= y) {\n            return -1;\n    \
  \    }\n        for (int i = x; i <= y; i++) {\n            if (i % 2 == 0) {\n\
  \                if (maxEven == -1 || maxEven > i) {\n                    maxEven\
  \ = i;\n                }\n            }\n        }\n        return maxEven;"
- "        if (x >= y) {\n            return -1;\n        }\n        int even = x;\n\
  \        int odd = y;\n        while (even < odd) {\n            int temp = even;\n\
  \            even = odd % 2;\n            odd = temp;\n        }\n        return\
  \ even;"
- "        int biggest = -1;\n        if (x >= y) {\n            biggest = x;\n  \
  \      } else {\n            biggest = y;\n        }\n        while (biggest < x\
  \ + y) {\n            if (biggest % 2 == 0) {\n                biggest = biggest\
  \ + 1;\n            } else {\n                biggest = biggest + 2;\n         \
  \   }\n        }\n        return biggest;"
- "        int biggest = -1;\n        for (int i = x; i <= y; i++) {\n           \
  \ if (isEven(i)) {\n                if (biggest == -1) {\n                    biggest\
  \ = i;\n                } else if (biggest > i) {\n                    biggest =\
  \ i;\n                }\n            }\n        }\n        return biggest;"
- "        int result = -1;\n        if (x > y) {\n            int temp = x;\n   \
  \         x = y;\n            y = temp;\n        }\n        for (int i = x; i <=\
  \ y; i++) {\n            if (i % 2 == 0) {\n                result = i;\n      \
  \          break;\n            }\n        }\n        return result;"
- "        int even = 0;\n        int odd = 0;\n        int biggestEven = -1;\n  \
  \      int biggestOdd = -1;\n        for(int i = x; i <= y; i++) {\n           \
  \ if(i%2 == 0) {\n                even++;\n            }\n            else {\n \
  \               odd++;\n            }\n        }\n        if(even > odd) {\n   \
  \         biggestEven = even;\n        }\n        else {\n            biggestOdd\
  \ = odd;\n        }\n        return biggestEven;"
- "        int ans = -1;\n        if (x > y) {\n            ans = x;\n        } else\
  \ {\n            ans = y;\n        }\n        while (ans < x || ans > y) {\n   \
  \         if (ans % 2 == 0) {\n                ans += 1;\n            } else {\n\
  \                ans -= 1;\n            }\n        }\n        return ans;"
- "        int result = -1;\n        if (x >= y) {\n            return -1;\n     \
  \   }\n        if (x % 2 == 0) {\n            if (y % 2 == 0) {\n              \
  \  result = x;\n            } else {\n                result = y;\n            }\n\
  \        } else {\n            if (y % 2 == 0) {\n                result = y;\n\
  \            } else {\n                result = x;\n            }\n        }\n \
  \       return result;"
- "        int result = -1;\n        if (x >= y) {\n            int temp = x;\n  \
  \          x = y;\n            y = temp;\n        }\n        for (int i = x; i <=\
  \ y; i++) {\n            if (i % 2 == 0) {\n                result = i;\n      \
  \          break;\n            }\n        }\n        return result;"
- "        int result = -1;\n        if (x >= y) {\n            int temp = x;\n  \
  \          x = y;\n            y = temp;\n        }\n        if (x % 2 == 0 && y\
  \ % 2 == 0) {\n            int temp = (x + y) / 2;\n            if (temp % 2 ==\
  \ 0) {\n                result = temp;\n            }\n        }\n        return\
  \ result;"
- "        if (x > y) {\n            int temp = x;\n            x = y;\n         \
  \   y = temp;\n        }\n        int result = -1;\n        for (int i = x; i <=\
  \ y; i++) {\n            if (isEven(i)) {\n                result = i;\n       \
  \         break;\n            }\n        }\n        return result;"
- "        int result = -1;\n        if (x >= y) {\n            int temp;\n      \
  \      temp = x;\n            x = y;\n            y = temp;\n        }\n       \
  \ if (x % 2 == 0) {\n            int temp;\n            temp = x;\n            x\
  \ = y;\n            y = temp;\n        }\n        if (y % 2 == 0) {\n          \
  \  int temp;\n            temp = y;\n            x = y;\n            y = temp;\n\
  \        }\n        int evenNum = x;\n        int oddNum = y;\n        while (evenNum\
  \ < oddNum) {\n            if (evenNum % 2 == 0) {\n                evenNum += 1;\n\
  \            } else {\n                oddNum -= 1;\n            }\n        }\n\
  \        if (evenNum == oddNum) {\n            result = evenNum;\n        }\n  \
  \      return result;"
- "        if (x > y) {\n            int temp = x;\n            x = y;\n         \
  \   y = temp;\n        }\n        if (x > 0 && y > 0) {\n            int temp =\
  \ 0;\n            while (x <= y) {\n                temp += x;\n               \
  \ x++;\n            }\n            while (y <= x) {\n                temp += y;\n\
  \                y++;\n            }\n            return temp;\n        }\n    \
  \    return -1;"
- "        int ans = -1;\n        if (x >= y) {\n            ans = x;\n        } else\
  \ {\n            ans = y;\n        }\n        while (ans < x || ans > y) {\n   \
  \         if (ans == x || ans == y) {\n                return ans;\n           \
  \ }\n            ans += 2;\n        }\n        return ans;"
- "        int biggest = -1;\n        if (x >= y) {\n            int temp;\n     \
  \       temp = x;\n            x = y;\n            y = temp;\n        }\n      \
  \  for (int i = x; i <= y; i++) {\n            if (i % 2 == 0) {\n             \
  \   biggest = i;\n            }\n        }\n        return biggest;"
- "        if (x > y) {\n            int temp = x;\n            x = y;\n         \
  \   y = temp;\n        }\n        int biggest = -1;\n        for (int i = x; i <=\
  \ y; i++) {\n            if (isEven(i)) {\n                if (biggest == -1) {\n\
  \                    biggest = i;\n                } else if (biggest > i) {\n \
  \                   biggest = i;\n                }\n            }\n        }\n\
  \        return biggest;"
- "        int biggestEven = -1;\n        if (x >= y) {\n            int temp = x;\n\
  \            x = y;\n            y = temp;\n        }\n        for (int i = x; i\
  \ <= y; i++) {\n            if (i % 2 == 0) {\n                biggestEven = i;\n\
  \                break;\n            }\n        }\n        return biggestEven;"
- "        if (x >= y) {\n            return -1;\n        }\n        int even = 0;\n\
  \        int odd = 0;\n        for (int i = x; i <= y; i++) {\n            if (i\
  \ % 2 == 0) {\n                even++;\n            } else {\n                odd++;\n\
  \            }\n        }\n        if (even > odd) {\n            return even;\n\
  \        } else {\n            return odd;\n        }"
- "        int result = -1;\n        if (x >= y) {\n            int temp = x;\n  \
  \          x = y;\n            y = temp;\n        }\n        for (int i = x; i <=\
  \ y; i++) {\n            if (i % 2 == 0) {\n                result = i;\n      \
  \          break;\n            }\n        }\n        return result;"
- "        int maxEven = -1;\n        if (x >= y) {\n            return -1;\n    \
  \    }\n        for (int i = x; i <= y; i++) {\n            if (i % 2 == 0) {\n\
  \                maxEven = i;\n            }\n        }\n        return maxEven;"
- "        int ans = -1;\n        if (x >= y) {\n            return -1;\n        }\n\
  \        if (x % 2 == 0 && y % 2 == 0) {\n            ans = x;\n        }\n    \
  \    if (x % 2 != 0 && y % 2 != 0) {\n            ans = y;\n        }\n        return\
  \ ans;"
- "        if (x >= y) {\n            return -1;\n        }\n        if (x % 2 ==\
  \ 0 && y % 2 == 0) {\n            return x;\n        }\n        if (x % 2 == 0 &&\
  \ y % 2 != 0) {\n            return y;\n        }\n        if (x % 2 != 0 && y %\
  \ 2 == 0) {\n            return x;\n        }\n        if (x % 2 != 0 && y % 2 !=\
  \ 0) {\n            return -1;\n        }"
- "        int max = 0;\n        for (int i = x; i <= y; i++) {\n            if (i\
  \ % 2 == 0) {\n                max = i;\n            }\n        }\n        return\
  \ max;"
- "        int even = x;\n        int odd = y;\n        while (even < odd) {\n   \
  \         if (even % 2 == 0) {\n                even++;\n            } else {\n\
  \                odd--;\n            }\n        }\n        return even;"
- "        int max = 0;\n        for (int i = x; i <= y; i++) {\n            if (i\
  \ % 2 == 0) {\n                max = i;\n            }\n        }\n        return\
  \ max;"
- "        int maxEven = -1;\n        for (int i = x; i <= y; i++) {\n           \
  \ if (i % 2 == 0) {\n                if (maxEven == -1 || maxEven > i) {\n     \
  \               maxEven = i;\n                }\n            }\n        }\n    \
  \    return maxEven;"
- "        int biggest = -1;\n        for (int i = x; i <= y; i++) {\n           \
  \ if (isEven(i)) {\n                if (biggest < i) {\n                    biggest\
  \ = i;\n                }\n            }\n        }\n        return biggest;"
language: java
name: HumanEval_102_choose_num
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // This function takes two positive numbers x and y and returns\
  \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
  \ If \n    // there's no such number, then the function should return -1.\n    //\
  \ For example:\n    public static int chooseNum(int x, int y) {\n"
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- '    }

  }'
- "\n    }\n"
tests: "}\n    public static void main(String[] args) {\n    assert(chooseNum((12),\
  \ (15)) == (14));\n    assert(chooseNum((13), (12)) == (-1));\n    assert(chooseNum((33),\
  \ (12354)) == (12354));\n    assert(chooseNum((5234), (5233)) == (-1));\n    assert(chooseNum((6),\
  \ (29)) == (28));\n    assert(chooseNum((27), (10)) == (-1));\n    assert(chooseNum((7),\
  \ (7)) == (-1));\n    assert(chooseNum((546), (546)) == (546));\n    }\n\n}\n"

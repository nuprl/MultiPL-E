name: HumanEval_43_pairs_sum_to_zero
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
  \    // it returns True if there are two distinct elements in the list that\n  \
  \  // sum to zero, and False otherwise.\n    public static boolean pairsSumToZero(ArrayList<Integer>\
  \ l) {\n"
tests: "return true;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
  \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
  \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
  \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
  \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
  \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
  \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
  \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
  \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
  \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
  \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
  \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
  \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
completions: []
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "\n    }\n"

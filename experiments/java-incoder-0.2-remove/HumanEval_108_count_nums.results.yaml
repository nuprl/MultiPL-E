language: java
name: HumanEval_108_count_nums
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for (int j = 0; j < arr.get(i).intValue();\
    \ j++) {\n                sum += arr.get(i).intValue() % 10;\n               \
    \ arr.get(i) /= 10;\n            }\n            if (sum > 0) {\n             \
    \   count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4h48mu32.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i : arr) {\n            int\
    \ sum = 0;\n            while (i > 0) {\n                sum += i % 10;\n    \
    \            i /= 10;\n            }\n            if (sum > 0) {\n           \
    \     count++;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptsqxy7u7.java:33)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int digit = arr.get(i);\n         \
    \   while (digit > 0) {\n                sum += digit % 10;\n                digit\
    \ /= 10;\n            }\n            if (sum > 0) {\n                count++;\n\
    \            }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9_n6a0sb.java:34)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int num : arr) {\n            int\
    \ sum = 0;\n            while(num > 0) {\n                sum += num % 10;\n \
    \               num /= 10;\n            }\n            if(sum > 0) {\n       \
    \         count++;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2cuq3m5c.java:33)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int num : arr) {\n            int\
    \ sum = 0;\n            while(num > 0) {\n                sum += num % 10;\n \
    \               num /= 10;\n            }\n            if(sum > 0) {\n       \
    \         count++;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2cuq3m5c.java:33)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            if(i>0)\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb645if1d.java:28)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            if(i>0)\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb645if1d.java:28)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i : arr) {\n            if\
    \ (i >= 0) {\n                count += i;\n            }\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7mvtkqg0.java:25)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for(int j = 0; j < arr.get(i).intValue();\
    \ j++) {\n                sum += arr.get(i).intValue() % 10;\n               \
    \ arr.get(i) /= 10;\n            }\n            if(sum > 0) {\n              \
    \  count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphefh4tn0.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i : arr) {\n            int\
    \ sum = 0;\n            while (i != 0) {\n                sum += i % 10;\n   \
    \             i /= 10;\n            }\n            if (sum > 0) {\n          \
    \      count++;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjd9gg0wv.java:33)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            if(i>0)\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb645if1d.java:28)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i : arr) {\n            if\
    \ (i >= 0) {\n                count += i;\n            }\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7mvtkqg0.java:25)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            int num = arr.get(i);\n            int sum = 0;\n           \
    \ while(num > 0) {\n                sum += num % 10;\n                num /= 10;\n\
    \            }\n            if(sum > 0) {\n                count++;\n        \
    \    }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0sk3zo3m.java:34)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i : arr) {\n            if\
    \ (i >= 0) {\n                count += i;\n            }\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7mvtkqg0.java:25)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            int\
    \ sum = 0;\n            while(i > 0) {\n                sum += i % 10;\n     \
    \           i /= 10;\n            }\n            if(sum > 0) {\n             \
    \   count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph541d53p.java:33)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            if(i>0)\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb645if1d.java:28)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                num = num * -1;\n            }\n           \
    \ while (num != 0) {\n                sum += num % 10;\n                num /=\
    \ 10;\n            }\n            if (sum > 0) {\n                count++;\n \
    \           }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp65v052c1.java:33)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            if(i>0)\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb645if1d.java:28)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i : arr) {\n            int\
    \ sum = 0;\n            while (i > 0) {\n                sum += i % 10;\n    \
    \            i /= 10;\n            }\n            if (sum > 0) {\n           \
    \     count++;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptsqxy7u7.java:33)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for(int j = 0; j < arr.get(i).intValue();\
    \ j++) {\n                sum += arr.get(i).intValue() % 10;\n               \
    \ arr.get(i) /= 10;\n            }\n            if(sum > 0) {\n              \
    \  count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphefh4tn0.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for(int j = 0; j < arr.get(i).intValue();\
    \ j++) {\n                sum += arr.get(i).intValue() % 10;\n               \
    \ arr.get(i) /= 10;\n            }\n            if(sum > 0) {\n              \
    \  count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphefh4tn0.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            int num = arr.get(i);\n            int sum = 0;\n           \
    \ while(num > 0) {\n                sum += num % 10;\n                num /= 10;\n\
    \            }\n            if(sum > 0) {\n                count++;\n        \
    \    }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0sk3zo3m.java:34)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ while (num > 0) {\n                sum += num % 10;\n                num /=\
    \ 10;\n            }\n            if (sum > 0) {\n                count++;\n \
    \           }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4038g2w_.java:34)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ while (num > 0) {\n                sum += num % 10;\n                num /=\
    \ 10;\n            }\n            if (sum > 0) {\n                count++;\n \
    \           }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4038g2w_.java:34)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for(int j = 0; j < arr.get(i).length();\
    \ j++) {\n                sum += arr.get(i).charAt(j) - '0';\n            }\n\
    \            if(sum > 0) {\n                count++;\n            }\n        }\n\
    \        return count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl3rsgj4z.java:17: error: cannot find symbol\n            for(int\
    \ j = 0; j < arr.get(i).length(); j++) {\n                                   \
    \      ^\n  symbol:   method length()\n  location: class Integer\n/tmp/tmpl3rsgj4z.java:18:\
    \ error: cannot find symbol\n                sum += arr.get(i).charAt(j) - '0';\n\
    \                                 ^\n  symbol:   method charAt(int)\n  location:\
    \ class Integer\n2 errors\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            int\
    \ sum = 0;\n            while(i != 0) {\n                sum += i % 10;\n    \
    \            i /= 10;\n            }\n            if(sum > 0) {\n            \
    \    count++;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpywv9_v1f.java:33)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            int\
    \ sum = 0;\n            while(i != 0) {\n                sum += i % 10;\n    \
    \            i /= 10;\n            }\n            if(sum > 0) {\n            \
    \    count++;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpywv9_v1f.java:33)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for(int j = 0; j < arr.get(i).intValue();\
    \ j++) {\n                sum += arr.get(i).intValue() % 10;\n               \
    \ arr.get(i) /= 10;\n            }\n            if(sum > 0) {\n              \
    \  count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphefh4tn0.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for (int j = 0; j < arr.get(i).intValue();\
    \ j++) {\n                sum += arr.get(i).intValue() % 10;\n               \
    \ arr.get(i) /= 10;\n            }\n            if (sum > 0) {\n             \
    \   count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4h48mu32.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int digit = arr.get(i);\n         \
    \   while (digit > 0) {\n                sum += (digit % 10);\n              \
    \  digit /= 10;\n            }\n            if (sum > 0) {\n                count++;\n\
    \            }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiqjlwe1b.java:34)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            while (arr.get(i) > 0) {\n        \
    \        sum += arr.get(i) % 10;\n                arr.get(i) /= 10;\n        \
    \    }\n            if (sum > 0) {\n                count++;\n            }\n\
    \        }\n        return count;\n}\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn9cohrbn.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for(int j = 0; j < arr.get(i).intValue();\
    \ j++) {\n                sum += arr.get(i).intValue() % 10;\n               \
    \ arr.get(i) /= 10;\n            }\n            if(sum > 0) {\n              \
    \  count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphefh4tn0.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            if(i>0)\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb645if1d.java:28)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int digit = arr.get(i);\n         \
    \   while (digit > 0) {\n                sum += digit % 10;\n                digit\
    \ /= 10;\n            }\n            if (sum > 0) {\n                count++;\n\
    \            }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9_n6a0sb.java:34)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i : arr) {\n            if\
    \ (i >= 0) {\n                count += i;\n            }\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7mvtkqg0.java:25)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int digitSum = 0;\n            int num = arr.get(i);\n      \
    \      if (num < 0) {\n                num = Math.abs(num);\n                digitSum\
    \ = num % 10;\n                num = num / 10;\n            }\n            while\
    \ (num > 0) {\n                digitSum += num % 10;\n                num = num\
    \ / 10;\n            }\n            if (digitSum > 0) {\n                count++;\n\
    \            }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnh2wtlxt.java:35)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int digit = arr.get(i);\n            if (digit < 0) {\n     \
    \           digit *= -1;\n            }\n            int sum = 0;\n          \
    \  while (digit > 0) {\n                sum += digit % 10;\n                digit\
    \ /= 10;\n            }\n            if (sum > 0) {\n                count++;\n\
    \            }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkg0lnf_c.java:33)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ while (num > 0) {\n                sum += num % 10;\n                num /=\
    \ 10;\n            }\n            if (sum > 0) {\n                count++;\n \
    \           }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4038g2w_.java:34)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                num = -num;\n            }\n            while\
    \ (num != 0) {\n                sum += num % 10;\n                num /= 10;\n\
    \            }\n            if (sum > 0) {\n                count++;\n       \
    \     }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdmw8qvxv.java:33)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for(int j = 0; j < arr.get(i).intValue();\
    \ j++) {\n                sum += arr.get(i).intValue() % 10;\n               \
    \ arr.get(i) /= 10;\n            }\n            if(sum > 0) {\n              \
    \  count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphefh4tn0.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i : arr) {\n            if\
    \ (i > 0)\n                count += i;\n        }\n        return count;\n}\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw8m4mjlj.java:24)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i : arr) {\n            if\
    \ (i >= 0) {\n                count += i;\n            }\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7mvtkqg0.java:25)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for (int j = 0; j < arr.get(i).intValue();\
    \ j++) {\n                sum += arr.get(i).intValue() % 10;\n               \
    \ arr.get(i) /= 10;\n            }\n            if (sum > 0) {\n             \
    \   count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4h48mu32.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            if(i>0)\
    \ {\n                count += i;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo9ix4f0d.java:25)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            if(i<0)\
    \ {\n                i = -i;\n            }\n            int sum = 0;\n      \
    \      while(i > 0) {\n                sum += i % 10;\n                i /= 10;\n\
    \            }\n            if(sum > 0) {\n                count++;\n        \
    \    }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpif32a83v.java:32)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for(int j = 0; j < arr.get(i).intValue();\
    \ j++) {\n                sum += arr.get(i).intValue() % 10;\n               \
    \ arr.get(i) /= 10;\n            }\n            if(sum > 0) {\n              \
    \  count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphefh4tn0.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            int\
    \ sum = 0;\n            while(i != 0) {\n                sum += i % 10;\n    \
    \            i /= 10;\n            }\n            if(sum > 0) {\n            \
    \    count++;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpywv9_v1f.java:33)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            if(i>0)\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb645if1d.java:28)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for(int j = 0; j < arr.get(i).intValue();\
    \ j++) {\n                sum += arr.get(i).intValue() % 10;\n               \
    \ arr.get(i) /= 10;\n            }\n            if(sum > 0) {\n              \
    \  count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphefh4tn0.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for (int j = 0; j < arr.get(i).intValue();\
    \ j++) {\n                sum += arr.get(i).intValue() % 10;\n               \
    \ arr.get(i) /= 10;\n            }\n            if (sum > 0) {\n             \
    \   count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4h48mu32.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for (int j = 0; j < arr.get(i).intValue();\
    \ j++) {\n                sum += arr.get(i).intValue() % 10;\n               \
    \ arr.get(i) /= 10;\n            }\n            if (sum > 0) {\n             \
    \   count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4h48mu32.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i : arr) {\n            int\
    \ sum = 0;\n            while (i > 0) {\n                sum += i % 10;\n    \
    \            i /= 10;\n            }\n            if (sum > 0) {\n           \
    \     count++;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptsqxy7u7.java:33)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for(int j = 0; j < arr.get(i).intValue();\
    \ j++) {\n                sum += arr.get(i).intValue() % 10;\n               \
    \ arr.get(i) /= 10;\n            }\n            if(sum > 0) {\n              \
    \  count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphefh4tn0.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ while (num > 0) {\n                sum += num % 10;\n                num /=\
    \ 10;\n            }\n            if (sum > 0) {\n                count++;\n \
    \           }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4038g2w_.java:34)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for(int j = 0; j < arr.get(i).intValue();\
    \ j++) {\n                sum += arr.get(i).intValue() % 10;\n               \
    \ arr.get(i) /= 10;\n            }\n            if(sum > 0) {\n              \
    \  count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphefh4tn0.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for(int j = 0; j < arr.get(i).length();\
    \ j++) {\n                sum += arr.get(i).charAt(j) - '0';\n            }\n\
    \            if(sum > 0) {\n                count++;\n            }\n        }\n\
    \        return count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl3rsgj4z.java:17: error: cannot find symbol\n            for(int\
    \ j = 0; j < arr.get(i).length(); j++) {\n                                   \
    \      ^\n  symbol:   method length()\n  location: class Integer\n/tmp/tmpl3rsgj4z.java:18:\
    \ error: cannot find symbol\n                sum += arr.get(i).charAt(j) - '0';\n\
    \                                 ^\n  symbol:   method charAt(int)\n  location:\
    \ class Integer\n2 errors\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i : arr) {\n            if\
    \ (i >= 0) {\n                count += i;\n            }\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7mvtkqg0.java:25)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ while (num > 0) {\n                sum += num % 10;\n                num /=\
    \ 10;\n            }\n            if (sum > 0) {\n                count++;\n \
    \           }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4038g2w_.java:34)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int digitSum = 0;\n            int num = arr.get(i);\n      \
    \      while (num > 0) {\n                digitSum += num % 10;\n            \
    \    num /= 10;\n            }\n            if (digitSum > 0) {\n            \
    \    count++;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0to20vxz.java:34)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int digit = arr.get(i) % 10;\n            if (digit < 0) {\n\
    \                digit *= -1;\n            }\n            int sum = 0;\n     \
    \       while (digit > 0) {\n                sum += digit;\n                digit\
    \ /= 10;\n            }\n            if (sum > 0) {\n                count++;\n\
    \            }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg0ijuxkz.java:33)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i : arr) {\n            int\
    \ sum = 0;\n            while (i != 0) {\n                sum += i % 10;\n   \
    \             i /= 10;\n            }\n            if (sum > 0) {\n          \
    \      count++;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjd9gg0wv.java:33)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            if(i>0)\
    \ {\n                count += i;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo9ix4f0d.java:25)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for (int j = 0; j < arr.get(i).intValue();\
    \ j++) {\n                sum += arr.get(i).intValue() % 10;\n               \
    \ arr.get(i) /= 10;\n            }\n            if (sum > 0) {\n             \
    \   count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4h48mu32.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            if(i>0)\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb645if1d.java:28)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                num = Math.abs(num);\n                sum -=\
    \ num % 10;\n                num = num / 10;\n            }\n            while\
    \ (num > 0) {\n                sum += num % 10;\n                num = num / 10;\n\
    \            }\n            if (sum > 0) {\n                count++;\n       \
    \     }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9akhb54d.java:39)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for(int j = 0; j < arr.get(i).intValue();\
    \ j++) {\n                sum += arr.get(i).intValue() % 10;\n               \
    \ arr.get(i) /= 10;\n            }\n            if(sum > 0) {\n              \
    \  count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphefh4tn0.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            int\
    \ sum = 0;\n            while(i != 0) {\n                sum += i % 10;\n    \
    \            i /= 10;\n            }\n            if(sum > 0) {\n            \
    \    count++;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpywv9_v1f.java:33)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for(int j = 0; j < arr.get(i).intValue();\
    \ j++) {\n                sum += arr.get(i).intValue() % 10;\n               \
    \ arr.get(i) /= 10;\n            }\n            if(sum > 0) {\n              \
    \  count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphefh4tn0.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for(int j = 0; j < arr.get(i).intValue();\
    \ j++) {\n                sum += arr.get(i).intValue() % 10;\n               \
    \ arr.get(i) /= 10;\n            }\n            if(sum > 0) {\n              \
    \  count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphefh4tn0.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i : arr) {\n            int\
    \ sum = 0;\n            while (i != 0) {\n                sum += i % 10;\n   \
    \             i /= 10;\n            }\n            if (sum > 0) {\n          \
    \      count++;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjd9gg0wv.java:33)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i : arr) {\n            if\
    \ (i >= 0) {\n                count += i;\n            }\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7mvtkqg0.java:25)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            int\
    \ sum = 0;\n            while(i != 0) {\n                sum += i % 10;\n    \
    \            i /= 10;\n            }\n            if(sum > 0) {\n            \
    \    count++;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpywv9_v1f.java:33)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ while (num > 0) {\n                sum += num % 10;\n                num /=\
    \ 10;\n            }\n            if (sum > 0) {\n                count++;\n \
    \           }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4038g2w_.java:34)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i : arr) {\n            if\
    \ (i >= 0) {\n                count += i;\n            }\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7mvtkqg0.java:25)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int num : arr) {\n            int\
    \ sum = 0;\n            while(num > 0) {\n                sum += num % 10;\n \
    \               num /= 10;\n            }\n            if(sum > 0) {\n       \
    \         count++;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2cuq3m5c.java:33)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i : arr) {\n            int\
    \ sum = 0;\n            while (i != 0) {\n                sum += i % 10;\n   \
    \             i /= 10;\n            }\n            if (sum > 0) {\n          \
    \      count++;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjd9gg0wv.java:33)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int num : arr) {\n            int\
    \ digit = num % 10;\n            int sum = 0;\n            while(digit > 0) {\n\
    \                sum += digit;\n                digit /= 10;\n            }\n\
    \            if(sum > 0) {\n                count++;\n            }\n        }\n\
    \        return count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfg4hfoyd.java:33)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int digit = arr.get(i);\n         \
    \   while (digit > 0) {\n                sum += digit % 10;\n                digit\
    \ /= 10;\n            }\n            if (sum > 0) {\n                count++;\n\
    \            }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9_n6a0sb.java:34)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i : arr) {\n            int\
    \ sum = 0;\n            while (i != 0) {\n                sum += i % 10;\n   \
    \             i /= 10;\n            }\n            if (sum > 0) {\n          \
    \      count++;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjd9gg0wv.java:33)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int num : arr) {\n            int\
    \ sum = 0;\n            while(num > 0) {\n                sum += num % 10;\n \
    \               num /= 10;\n            }\n            if(sum > 0) {\n       \
    \         count++;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2cuq3m5c.java:33)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int digitSum = 0;\n            while (arr.get(i) > 0) {\n   \
    \             digitSum += arr.get(i) % 10;\n                arr.get(i) /= 10;\n\
    \            }\n            if (digitSum > 0) {\n                count++;\n  \
    \          }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjte_l8k5.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011512
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int digit = 0;\n            while (arr.get(i)\
    \ > 0) {\n                digit = arr.get(i) % 10;\n                sum += digit;\n\
    \                arr.set(i, arr.get(i) / 10);\n            }\n            if (sum\
    \ > 0) {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf2h0ss33.java:35)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            if(i>0)\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb645if1d.java:28)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ while (num > 0) {\n                sum += num % 10;\n                num /=\
    \ 10;\n            }\n            if (sum > 0) {\n                count++;\n \
    \           }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4038g2w_.java:34)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            if(i>0)\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb645if1d.java:28)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            int\
    \ sum = 0;\n            while(i != 0) {\n                sum += i % 10;\n    \
    \            i /= 10;\n            }\n            if(sum > 0) {\n            \
    \    count++;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpywv9_v1f.java:33)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for (int j = 0; j < arr.get(i).intValue();\
    \ j++) {\n                sum += arr.get(i).intValue() % 10;\n               \
    \ arr.get(i) /= 10;\n            }\n            if (sum > 0) {\n             \
    \   count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4h48mu32.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for (int j = 0; j < arr.get(i).intValue();\
    \ j++) {\n                sum += arr.get(i).intValue() % 10;\n               \
    \ arr.get(i) /= 10;\n            }\n            if (sum > 0) {\n             \
    \   count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4h48mu32.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ while (num > 0) {\n                sum += num % 10;\n                num /=\
    \ 10;\n            }\n            if (sum > 0) {\n                count++;\n \
    \           }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4038g2w_.java:34)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for (int j = 0; j < arr.get(i).intValue();\
    \ j++) {\n                sum += arr.get(i).intValue() % 10;\n               \
    \ arr.get(i) /= 10;\n            }\n            if (sum > 0) {\n             \
    \   count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4h48mu32.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int digit = arr.get(i);\n            if (digit < 0) {\n     \
    \           digit *= -1;\n            }\n            int sum = 0;\n          \
    \  while (digit > 0) {\n                sum += digit % 10;\n                digit\
    \ /= 10;\n            }\n            if (sum > 0) {\n                count++;\n\
    \            }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkg0lnf_c.java:33)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            if(i>0)\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb645if1d.java:28)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num % 10;\n                num = (num\
    \ / 10) - 1;\n            }\n            while (num > 0) {\n                sum\
    \ += num % 10;\n                num = (num / 10) - 1;\n            }\n       \
    \     if (sum > 0) {\n                count++;\n            }\n        }\n   \
    \     return count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn90k8ba_.java:38)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            int num = arr.get(i);\n            int sum = 0;\n           \
    \ while(num > 0) {\n                sum += num % 10;\n                num /= 10;\n\
    \            }\n            if(sum > 0) {\n                count++;\n        \
    \    }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0sk3zo3m.java:34)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int digitSum = 0;\n            int num = arr.get(i);\n      \
    \      if (num < 0) {\n                digitSum = num % 10;\n                num\
    \ = num / 10;\n            }\n            while (num > 0) {\n                digitSum\
    \ += num % 10;\n                num = num / 10;\n            }\n            if\
    \ (digitSum > 0) {\n                count++;\n            }\n        }\n     \
    \   return count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm5uw5l26.java:38)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i : arr) {\n            if\
    \ (i >= 0) {\n                count += i;\n            }\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7mvtkqg0.java:25)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for(int j = 0; j < arr.get(i).intValue();\
    \ j++) {\n                sum += arr.get(i).intValue() % 10;\n               \
    \ arr.get(i) /= 10;\n            }\n            if(sum > 0) {\n              \
    \  count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphefh4tn0.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int digit = arr.get(i);\n         \
    \   while (digit > 0) {\n                sum += digit % 10;\n                digit\
    \ /= 10;\n            }\n            if (sum > 0) {\n                count++;\n\
    \            }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9_n6a0sb.java:34)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i : arr) {\n            int\
    \ sum = 0;\n            while (i != 0) {\n                sum += i % 10;\n   \
    \             i /= 10;\n            }\n            if (sum > 0) {\n          \
    \      count++;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjd9gg0wv.java:33)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            int\
    \ sum = 0;\n            while(i != 0) {\n                sum += i % 10;\n    \
    \            i /= 10;\n            }\n            if(sum > 0) {\n            \
    \    count++;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpywv9_v1f.java:33)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i : arr) {\n            if\
    \ (i >= 0) {\n                count += i;\n            } else {\n            \
    \    count += Math.abs(i);\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpax4pfcms.java:26)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for(int j = 0; j < arr.get(i).intValue();\
    \ j++) {\n                sum += arr.get(i).intValue() % 10;\n               \
    \ arr.get(i) /= 10;\n            }\n            if(sum > 0) {\n              \
    \  count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphefh4tn0.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i : arr) {\n            if\
    \ (i >= 0) {\n                count += i;\n            }\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7mvtkqg0.java:25)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            int\
    \ sum = 0;\n            while(i > 0) {\n                sum += i % 10;\n     \
    \           i /= 10;\n            }\n            if(sum > 0) {\n             \
    \   count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph541d53p.java:33)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            if(i<0)\
    \ {\n                i = -i;\n            }\n            int sum = 0;\n      \
    \      while(i > 0) {\n                sum += i % 10;\n                i /= 10;\n\
    \            }\n            if(sum > 0) {\n                count++;\n        \
    \    }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpif32a83v.java:32)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ while (num > 0) {\n                sum += num % 10;\n                num /=\
    \ 10;\n            }\n            if (sum > 0) {\n                count++;\n \
    \           }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4038g2w_.java:34)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i : arr) {\n            if\
    \ (i >= 0) {\n                count += i;\n            }\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7mvtkqg0.java:25)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            if(i>0)\
    \ {\n                count += i;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo9ix4f0d.java:25)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for (int j = 0; j < arr.get(i).intValue();\
    \ j++) {\n                sum += arr.get(i).intValue() % 10;\n               \
    \ arr.get(i) /= 10;\n            }\n            if (sum > 0) {\n             \
    \   count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4h48mu32.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            if(i>0)\
    \ {\n                count += i;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo9ix4f0d.java:25)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for(int j = 0; j < arr.get(i).intValue();\
    \ j++) {\n                sum += arr.get(i).intValue() % 10;\n               \
    \ arr.get(i) /= 10;\n            }\n            if(sum > 0) {\n              \
    \  count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphefh4tn0.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i : arr) {\n            if\
    \ (i >= 0) {\n                count += i;\n            }\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7mvtkqg0.java:25)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                num = Math.abs(num);\n                sum +=\
    \ num / 10;\n                num -= num / 10;\n            }\n            while\
    \ (num > 0) {\n                sum += num % 10;\n                num -= num %\
    \ 10;\n            }\n            if (sum > 0) {\n                count++;\n \
    \           }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpog0434td.java:35)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int digit = arr.get(i);\n            if (digit < 0) {\n     \
    \           digit *= -1;\n            }\n            if (digit > 0 && digit %\
    \ 10 == 0) {\n                count++;\n            }\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppt4ctl5h.java:29)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int num : arr) {\n            int\
    \ digit = num % 10;\n            int sign = num / 10;\n            if(sign > 0)\
    \ {\n                digit *= -1;\n            }\n            count += digit;\n\
    \        }\n        return count;\n}\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoapbqjku.java:27)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i : arr) {\n            if\
    \ (i >= 0) {\n                count += i;\n            }\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7mvtkqg0.java:25)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i : arr) {\n            int\
    \ sum = 0;\n            while (i > 0) {\n                sum += i % 10;\n    \
    \            i /= 10;\n            }\n            if (sum > 0) {\n           \
    \     count++;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptsqxy7u7.java:33)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i : arr) {\n            if\
    \ (i >= 0) {\n                count += i;\n            }\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7mvtkqg0.java:25)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ while (num > 0) {\n                sum += num % 10;\n                num /=\
    \ 10;\n            }\n            if (sum > 0) {\n                count++;\n \
    \           }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4038g2w_.java:34)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for (int j = 0; j < arr.get(i).intValue();\
    \ j++) {\n                sum += arr.get(i).intValue() % 10;\n               \
    \ arr.get(i) /= 10;\n            }\n            if (sum > 0) {\n             \
    \   count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4h48mu32.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for (int j = 0; j < arr.get(i).intValue();\
    \ j++) {\n                sum += arr.get(i).intValue() % 10;\n               \
    \ arr.get(i) /= 10;\n            }\n            if (sum > 0) {\n             \
    \   count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4h48mu32.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int digitSum = 0;\n            int num = arr.get(i);\n      \
    \      if (num < 0) {\n                num = Math.abs(num);\n                digitSum\
    \ = num % 10;\n                num = num / 10;\n            }\n            while\
    \ (num > 0) {\n                digitSum += num % 10;\n                num = num\
    \ / 10;\n            }\n            if (digitSum > 0) {\n                count++;\n\
    \            }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnh2wtlxt.java:35)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i : arr) {\n            if\
    \ (i >= 0) {\n                count += i;\n            }\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7mvtkqg0.java:25)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            int\
    \ sum = 0;\n            while(i != 0) {\n                sum += i % 10;\n    \
    \            i /= 10;\n            }\n            if(sum > 0) {\n            \
    \    count++;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpywv9_v1f.java:33)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int digit = arr.get(i) % 10;\n            if (digit > 0) {\n\
    \                count += 1;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9o3bmbxr.java:28)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i : arr) {\n            if\
    \ (i >= 0) {\n                count += i;\n            }\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7mvtkqg0.java:25)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for (int j = 0; j < arr.get(i).intValue();\
    \ j++) {\n                sum += arr.get(i).intValue() % 10;\n               \
    \ arr.get(i) /= 10;\n            }\n            if (sum > 0) {\n             \
    \   count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4h48mu32.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            if(i>0)\
    \ {\n                count += i;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo9ix4f0d.java:25)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i : arr) {\n            if\
    \ (i >= 0) {\n                count += i;\n            } else {\n            \
    \    count += Math.abs(i);\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpax4pfcms.java:26)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            int digitSum = 0;\n            int n = arr.get(i);\n        \
    \    while(n > 0) {\n                digitSum += n % 10;\n                n /=\
    \ 10;\n            }\n            if(digitSum > 0) {\n                count++;\n\
    \            }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbaqgiy5e.java:34)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            int\
    \ sum = 0;\n            while(i != 0) {\n                sum += i % 10;\n    \
    \            i /= 10;\n            }\n            if(sum > 0) {\n            \
    \    count++;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpywv9_v1f.java:33)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for (int j = 0; j < arr.get(i).intValue();\
    \ j++) {\n                sum += arr.get(i).intValue() % 10;\n               \
    \ arr.get(i) /= 10;\n            }\n            if (sum > 0) {\n             \
    \   count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4h48mu32.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int digitSum = 0;\n            int digit = arr.get(i);\n    \
    \        while (digit > 0) {\n                digitSum += digit % 10;\n      \
    \          digit /= 10;\n            }\n            if (digitSum > 0) {\n    \
    \            count++;\n            }\n        }\n        return count;\n}\n  \
    \  public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpldkjqyq7.java:34)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i : arr) {\n            if\
    \ (i >= 0) {\n                count += i;\n            }\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7mvtkqg0.java:25)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for (int j = 0; j < arr.get(i).length();\
    \ j++) {\n                sum += arr.get(i).charAt(j) - '0';\n            }\n\
    \            if (sum > 0) {\n                count++;\n            }\n       \
    \ }\n        return count;\n}\n    public static void main(String[] args) {\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n  \
    \  assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2, (int)0))))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsnbn3wmt.java:17: error: cannot find symbol\n            for (int\
    \ j = 0; j < arr.get(i).length(); j++) {\n                                   \
    \       ^\n  symbol:   method length()\n  location: class Integer\n/tmp/tmpsnbn3wmt.java:18:\
    \ error: cannot find symbol\n                sum += arr.get(i).charAt(j) - '0';\n\
    \                                 ^\n  symbol:   method charAt(int)\n  location:\
    \ class Integer\n2 errors\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            if(i<0)\
    \ {\n                i = -i; // negative number\n            }\n            int\
    \ sum = 0;\n            while(i > 0) {\n                sum += i % 10;\n     \
    \           i /= 10;\n            }\n            if(sum > 0) {\n             \
    \   count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphevxi3tm.java:32)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            int\
    \ sum = 0;\n            while(i != 0) {\n                sum += i % 10;\n    \
    \            i /= 10;\n            }\n            if(sum > 0) {\n            \
    \    count++;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpywv9_v1f.java:33)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i : arr) {\n            if\
    \ (i >= 0) {\n                count += i;\n            }\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7mvtkqg0.java:25)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            if(i<0)\
    \ {\n                i = -i;\n            }\n            int sum = 0;\n      \
    \      while(i > 0) {\n                sum += i % 10;\n                i /= 10;\n\
    \            }\n            if(sum > 0) {\n                count++;\n        \
    \    }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpif32a83v.java:32)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            int\
    \ sum = 0;\n            while(i != 0) {\n                sum += i % 10;\n    \
    \            i /= 10;\n            }\n            if(sum > 0) {\n            \
    \    count++;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpywv9_v1f.java:33)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int digit = arr.get(i);\n            if (digit < 0) {\n     \
    \           digit *= -1;\n            }\n            if (digit > 9) {\n      \
    \          digit = digit % 10;\n            }\n            count += digit;\n \
    \       }\n        return count;\n}\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc_ukk4p8.java:29)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            if(i>0)\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb645if1d.java:28)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for (int j = 0; j < arr.get(i).intValue();\
    \ j++) {\n                sum += arr.get(i).intValue() % 10;\n               \
    \ arr.get(i) /= 10;\n            }\n            if (sum > 0) {\n             \
    \   count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4h48mu32.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            if(i>0)\
    \ {\n                count += i;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo9ix4f0d.java:25)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ while (num > 0) {\n                sum += num % 10;\n                num /=\
    \ 10;\n            }\n            if (sum > 0) {\n                count++;\n \
    \           }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4038g2w_.java:34)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i : arr) {\n            if\
    \ (i >= 0) {\n                count += i;\n            } else {\n            \
    \    count += Math.abs(i);\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpax4pfcms.java:26)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for (int j = 0; j < arr.get(i).intValue();\
    \ j++) {\n                sum += arr.get(i).intValue() % 10;\n               \
    \ arr.get(i) /= 10;\n            }\n            if (sum > 0) {\n             \
    \   count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4h48mu32.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int num : arr) {\n            int\
    \ digit = num % 10;\n            int sign = num / 10;\n            if(sign > 0)\
    \ {\n                digit *= -1;\n            }\n            int sum = 0;\n \
    \           while(digit > 0) {\n                sum += digit;\n              \
    \  digit /= 10;\n            }\n            if(sum > 0) {\n                count++;\n\
    \            }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfycf5nzh.java:37)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int digit = arr.get(i);\n            if (digit < 0) {\n     \
    \           digit *= -1;\n            }\n            int sum = 0;\n          \
    \  while (digit > 0) {\n                sum += digit % 10;\n                digit\
    \ /= 10;\n            }\n            if (sum > 0) {\n                count++;\n\
    \            }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkg0lnf_c.java:33)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i : arr) {\n            if\
    \ (i >= 0) {\n                count += i;\n            }\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7mvtkqg0.java:25)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            if(i>0)\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb645if1d.java:28)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for(int j = 0; j < arr.get(i).intValue();\
    \ j++) {\n                sum += arr.get(i).intValue() % 10;\n               \
    \ arr.get(i) /= 10;\n            }\n            if(sum > 0) {\n              \
    \  count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphefh4tn0.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            if(i>0)\
    \ {\n                count += i;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo9ix4f0d.java:25)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i : arr) {\n            if\
    \ (i >= 0) {\n                count += i;\n            } else {\n            \
    \    count += Math.abs(i);\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpax4pfcms.java:26)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for(int j = 0; j < arr.get(i).intValue();\
    \ j++) {\n                sum += arr.get(i).intValue() % 10;\n               \
    \ arr.get(i) /= 10;\n            }\n            if(sum > 0) {\n              \
    \  count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphefh4tn0.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for(int j = 0; j < arr.get(i).length();\
    \ j++) {\n                sum += arr.get(i).charAt(j) - '0';\n            }\n\
    \            if(sum > 0) {\n                count++;\n            }\n        }\n\
    \        return count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl3rsgj4z.java:17: error: cannot find symbol\n            for(int\
    \ j = 0; j < arr.get(i).length(); j++) {\n                                   \
    \      ^\n  symbol:   method length()\n  location: class Integer\n/tmp/tmpl3rsgj4z.java:18:\
    \ error: cannot find symbol\n                sum += arr.get(i).charAt(j) - '0';\n\
    \                                 ^\n  symbol:   method charAt(int)\n  location:\
    \ class Integer\n2 errors\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i : arr) {\n            int\
    \ sum = 0;\n            while (i > 0) {\n                sum += i % 10;\n    \
    \            i /= 10;\n            }\n            if (sum > 0) {\n           \
    \     count++;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptsqxy7u7.java:33)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int digit = arr.get(i);\n         \
    \   while (digit > 0) {\n                sum += digit % 10;\n                digit\
    \ /= 10;\n            }\n            if (sum > 0) {\n                count++;\n\
    \            }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9_n6a0sb.java:34)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for (int j = 0; j < arr.get(i).length();\
    \ j++) {\n                sum += arr.get(i).charAt(j) - '0';\n            }\n\
    \            if (sum > 0) {\n                count++;\n            }\n       \
    \ }\n        return count;\n}\n    public static void main(String[] args) {\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n  \
    \  assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2, (int)0))))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsnbn3wmt.java:17: error: cannot find symbol\n            for (int\
    \ j = 0; j < arr.get(i).length(); j++) {\n                                   \
    \       ^\n  symbol:   method length()\n  location: class Integer\n/tmp/tmpsnbn3wmt.java:18:\
    \ error: cannot find symbol\n                sum += arr.get(i).charAt(j) - '0';\n\
    \                                 ^\n  symbol:   method charAt(int)\n  location:\
    \ class Integer\n2 errors\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i : arr) {\n            if\
    \ (i >= 0) {\n                count += i;\n            } else {\n            \
    \    count += Math.abs(i);\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpax4pfcms.java:26)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ while (num > 0) {\n                sum += num % 10;\n                num /=\
    \ 10;\n            }\n            if (sum > 0) {\n                count++;\n \
    \           }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4038g2w_.java:34)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for (int j = 0; j < arr.get(i).intValue();\
    \ j++) {\n                sum += arr.get(i).intValue() % 10;\n               \
    \ arr.get(i) /= 10;\n            }\n            if (sum > 0) {\n             \
    \   count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4h48mu32.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            if(i>0)\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb645if1d.java:28)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            if(i.signum()\
    \ > 0)\n                count += i.signum();\n            else\n             \
    \   count += Math.abs(i.signum());\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyerfb8qo.java:16: error: int cannot be dereferenced\n         \
    \   if(i.signum() > 0)\n                ^\n/tmp/tmpyerfb8qo.java:17: error: int\
    \ cannot be dereferenced\n                count += i.signum();\n             \
    \             ^\n/tmp/tmpyerfb8qo.java:19: error: int cannot be dereferenced\n\
    \                count += Math.abs(i.signum());\n                            \
    \       ^\n3 errors\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int digitSum = 0;\n            int num = arr.get(i);\n      \
    \      if (num < 0) {\n                num = -num;\n                digitSum =\
    \ num % 10;\n                num = num / 10;\n            }\n            while\
    \ (num > 0) {\n                digitSum += num % 10;\n                num = num\
    \ / 10;\n            }\n            if (digitSum > 0) {\n                count++;\n\
    \            }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq6h1geva.java:35)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for (int j = 0; j < arr.get(i).intValue();\
    \ j++) {\n                sum += arr.get(i).intValue() % 10;\n               \
    \ arr.get(i) /= 10;\n            }\n            if (sum > 0) {\n             \
    \   count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4h48mu32.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i : arr) {\n            if\
    \ (i >= 0) {\n                count += i;\n            }\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7mvtkqg0.java:25)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int digit = arr.get(i);\n            if (digit < 0) {\n     \
    \           digit *= -1;\n            }\n            int sum = 0;\n          \
    \  while (digit > 0) {\n                sum += digit % 10;\n                digit\
    \ /= 10;\n            }\n            if (sum > 0) {\n                count++;\n\
    \            }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkg0lnf_c.java:33)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i : arr) {\n            int\
    \ sum = 0;\n            while (i != 0) {\n                sum += i % 10;\n   \
    \             i /= 10;\n            }\n            if (sum > 0) {\n          \
    \      count++;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjd9gg0wv.java:33)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for (int j = 0; j < arr.get(i).length();\
    \ j++) {\n                sum += arr.get(i).charAt(j) - '0';\n            }\n\
    \            if (sum > 0) {\n                count++;\n            }\n       \
    \ }\n        return count;\n}\n    public static void main(String[] args) {\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n  \
    \  assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2, (int)0))))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsnbn3wmt.java:17: error: cannot find symbol\n            for (int\
    \ j = 0; j < arr.get(i).length(); j++) {\n                                   \
    \       ^\n  symbol:   method length()\n  location: class Integer\n/tmp/tmpsnbn3wmt.java:18:\
    \ error: cannot find symbol\n                sum += arr.get(i).charAt(j) - '0';\n\
    \                                 ^\n  symbol:   method charAt(int)\n  location:\
    \ class Integer\n2 errors\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            if(i>0)\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb645if1d.java:28)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            if(i>0)\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb645if1d.java:28)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for(int j = 0; j < arr.get(i).intValue();\
    \ j++) {\n                sum += arr.get(i).intValue() % 10;\n               \
    \ arr.get(i) /= 10;\n            }\n            if(sum > 0) {\n              \
    \  count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphefh4tn0.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for(int j = 0; j < arr.get(i).intValue();\
    \ j++) {\n                sum += arr.get(i).intValue() % 10;\n               \
    \ arr.get(i) /= 10;\n            }\n            if(sum > 0) {\n              \
    \  count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphefh4tn0.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            if(i>0)\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb645if1d.java:28)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i : arr) {\n            if\
    \ (i >= 0) {\n                count += i;\n            }\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7mvtkqg0.java:25)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int digit = arr.get(i);\n            if (digit < 0) {\n     \
    \           digit = -digit;\n            }\n            int sum = 0;\n       \
    \     while (digit > 0) {\n                sum += digit % 10;\n              \
    \  digit /= 10;\n            }\n            if (sum > 0) {\n                count++;\n\
    \            }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdcozt5ze.java:33)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            if(i>0)\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb645if1d.java:28)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ while (num > 0) {\n                sum += num % 10;\n                num /=\
    \ 10;\n            }\n            if (sum > 0) {\n                count++;\n \
    \           }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4038g2w_.java:34)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for (int j = 0; j < arr.get(i).intValue();\
    \ j++) {\n                sum += arr.get(i).intValue() % 10;\n               \
    \ arr.get(i) /= 10;\n            }\n            if (sum > 0) {\n             \
    \   count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4h48mu32.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            int\
    \ sum = 0;\n            while(i != 0) {\n                sum += i % 10;\n    \
    \            i /= 10;\n            }\n            if(sum > 0) {\n            \
    \    count++;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpywv9_v1f.java:33)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            int\
    \ sum = 0;\n            while(i != 0) {\n                sum += i % 10;\n    \
    \            i /= 10;\n            }\n            if(sum > 0) {\n            \
    \    count++;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpywv9_v1f.java:33)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            if(i>0)\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb645if1d.java:28)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num % 10;\n                num = (num\
    \ / 10) - 1;\n            }\n            while (num > 0) {\n                sum\
    \ += num % 10;\n                num = (num / 10) - 1;\n            }\n       \
    \     if (sum > 0) {\n                count++;\n            }\n        }\n   \
    \     return count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn90k8ba_.java:38)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for(int j = 0; j < arr.get(i).intValue();\
    \ j++) {\n                sum += arr.get(i).intValue() % 10;\n               \
    \ arr.get(i) /= 10;\n            }\n            if(sum > 0) {\n              \
    \  count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphefh4tn0.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            if(i>0)\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb645if1d.java:28)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            if(i>0)\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb645if1d.java:28)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for(int j = 0; j < arr.get(i).length();\
    \ j++) {\n                sum += arr.get(i).charAt(j) - '0';\n            }\n\
    \            if(sum > 0) {\n                count++;\n            }\n        }\n\
    \        return count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl3rsgj4z.java:17: error: cannot find symbol\n            for(int\
    \ j = 0; j < arr.get(i).length(); j++) {\n                                   \
    \      ^\n  symbol:   method length()\n  location: class Integer\n/tmp/tmpl3rsgj4z.java:18:\
    \ error: cannot find symbol\n                sum += arr.get(i).charAt(j) - '0';\n\
    \                                 ^\n  symbol:   method charAt(int)\n  location:\
    \ class Integer\n2 errors\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i : arr) {\n            int\
    \ sum = 0;\n            while (i > 0) {\n                sum += i % 10;\n    \
    \            i /= 10;\n            }\n            if (sum > 0) {\n           \
    \     count++;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptsqxy7u7.java:33)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            int\
    \ sum = 0;\n            while(i != 0) {\n                sum += i % 10;\n    \
    \            i /= 10;\n            }\n            if(sum > 0) {\n            \
    \    count++;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpywv9_v1f.java:33)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i : arr) {\n            if\
    \ (i >= 0) {\n                count += i;\n            }\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7mvtkqg0.java:25)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                num = Math.abs(num);\n                sum +=\
    \ num;\n            }\n            while (num != 0) {\n                sum +=\
    \ num % 10;\n                num /= 10;\n            }\n            if (sum >\
    \ 0) {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwcyj1qoh.java:34)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            int num = arr.get(i);\n           \
    \ if (num < 0) {\n                sum += num % 10;\n                num = num\
    \ / 10;\n            }\n            while (num > 0) {\n                sum +=\
    \ num % 10;\n                num = num / 10;\n            }\n            if (sum\
    \ > 0) {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4vgosxh4.java:38)\n"
  stdout: ''
  timestamp: 1660011357
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i : arr) {\n            if\
    \ (i >= 0) {\n                count += i;\n            }\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7mvtkqg0.java:25)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            if(i>0)\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb645if1d.java:28)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for (int j = 0; j < arr.get(i).intValue();\
    \ j++) {\n                sum += arr.get(i).intValue() % 10;\n               \
    \ arr.get(i) /= 10;\n            }\n            if (sum > 0) {\n             \
    \   count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4h48mu32.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for(int j = 0; j < arr.get(i).intValue();\
    \ j++) {\n                sum += arr.get(i).intValue() % 10;\n               \
    \ arr.get(i) /= 10;\n            }\n            if(sum > 0) {\n              \
    \  count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphefh4tn0.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i : arr) {\n            if(i>0)\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb645if1d.java:28)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for(int j = 0; j < arr.get(i).intValue();\
    \ j++) {\n                sum += arr.get(i).intValue() % 10;\n               \
    \ arr.get(i) /= 10;\n            }\n            if(sum > 0) {\n              \
    \  count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphefh4tn0.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    public static int countNums(ArrayList<Integer>\
    \ arr) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            for (int j = 0; j < arr.get(i).intValue();\
    \ j++) {\n                sum += arr.get(i).intValue() % 10;\n               \
    \ arr.get(i) /= 10;\n            }\n            if (sum > 0) {\n             \
    \   count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4h48mu32.java:19: error: unexpected type\n                arr.get(i)\
    \ /= 10;\n                       ^\n  required: variable\n  found:    value\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011510

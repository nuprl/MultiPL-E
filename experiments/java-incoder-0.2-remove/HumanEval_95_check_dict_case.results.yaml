language: java
name: HumanEval_95_check_dict_case
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.size() == 0) {\n            return false;\n      \
    \  }\n        boolean isUpper = true;\n        for (String key : dict.keySet())\
    \ {\n            if (key.isEmpty()) {\n                return false;\n       \
    \     }\n            char c = key.charAt(0);\n            if (c >= 'a' && c <=\
    \ 'z') {\n                isUpper = true;\n            } else if (c >= 'A' &&\
    \ c <= 'Z') {\n                isUpper = false;\n            } else {\n      \
    \          return false;\n            }\n        }\n        return isUpper;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsx7ls345.java:38)\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            if(key.isEmpty()) {\n                result = false;\n      \
    \          break;\n            }\n            String lower = key.toLowerCase();\n\
    \            String upper = key.toUpperCase();\n            if(dict.containsKey(lower))\
    \ {\n                if(dict.get(lower) != upper) {\n                    result\
    \ = false;\n                    break;\n                }\n            } else\
    \ if(dict.containsKey(upper)) {\n                if(dict.get(upper) != lower)\
    \ {\n                    result = false;\n                    break;\n       \
    \         }\n            } else {\n                result = false;\n         \
    \       break;\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp057s9w21.java:40)\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = false;\n        for(String key : dict.keySet())\
    \ {\n            if(key.isLowerCase()) {\n                result = true;\n   \
    \             break;\n            }\n            if(key.isUpperCase()) {\n   \
    \             result = true;\n                break;\n            }\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\"\
    , \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\"))))\
    \ == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmponqh_oam.java:16: error: cannot find symbol\n            if(key.isLowerCase())\
    \ {\n                  ^\n  symbol:   method isLowerCase()\n  location: variable\
    \ key of type String\n/tmp/tmponqh_oam.java:20: error: cannot find symbol\n  \
    \          if(key.isUpperCase()) {\n                  ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n            \
    \    result = false;\n                break;\n            }\n        }\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf354kzp0.java:16: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmpf354kzp0.java:16: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Write your code here\n        boolean flag = true;\n   \
    \     for(String key : dict.keySet()){\n            if(key.isEmpty()){\n     \
    \           flag = false;\n                break;\n            }\n        }\n\
    \        return flag;\n    }\n    public static void main(String[] args) {\n \
    \   assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\"\
    , \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\"))))\
    \ == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxe7rc8ro.java:26)\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(!key.isEmpty()\
    \ && !value.isEmpty()) {\n                if(!key.toLowerCase().equals(value.toLowerCase()))\
    \ {\n                    result = false;\n                    break;\n       \
    \         }\n                if(!key.toUpperCase().equals(value.toUpperCase()))\
    \ {\n                    result = false;\n                    break;\n       \
    \         }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmzrb9kfu.java:31)\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        if (dict.size() == 0) {\n \
    \           return false;\n        }\n        Set<String> keys = dict.keySet();\n\
    \        for (String key : keys) {\n            String value = dict.get(key);\n\
    \            if (key.isLowerCase()) {\n                if (!value.isLowerCase())\
    \ {\n                    result = false;\n                    break;\n       \
    \         }\n            } else if (key.isUpperCase()) {\n                if (!value.isUpperCase())\
    \ {\n                    result = false;\n                    break;\n       \
    \         }\n            } else {\n                result = false;\n         \
    \       break;\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmp6_ljr6.java:21: error: cannot find symbol\n            if (key.isLowerCase())\
    \ {\n                   ^\n  symbol:   method isLowerCase()\n  location: variable\
    \ key of type String\n/tmp/tmpmp6_ljr6.java:22: error: cannot find symbol\n  \
    \              if (!value.isLowerCase()) {\n                          ^\n  symbol:\
    \   method isLowerCase()\n  location: variable value of type String\n/tmp/tmpmp6_ljr6.java:26:\
    \ error: cannot find symbol\n            } else if (key.isUpperCase()) {\n   \
    \                       ^\n  symbol:   method isUpperCase()\n  location: variable\
    \ key of type String\n/tmp/tmpmp6_ljr6.java:27: error: cannot find symbol\n  \
    \              if (!value.isUpperCase()) {\n                          ^\n  symbol:\
    \   method isUpperCase()\n  location: variable value of type String\n4 errors\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n            \
    \    result = false;\n                break;\n            }\n        }\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf354kzp0.java:16: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmpf354kzp0.java:16: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(!key.isEmpty()\
    \ && !value.isEmpty()) {\n                if(!key.isEmpty() && key.toLowerCase().equals(value.toLowerCase()))\
    \ {\n                    result = false;\n                }\n                else\
    \ if(!key.isEmpty() && key.toUpperCase().equals(value.toUpperCase())) {\n    \
    \                result = false;\n                }\n            }\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\"\
    , \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\"))))\
    \ == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcqaz0iyo.java:30)\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            if(key.isEmpty()) {\n                result = false;\n      \
    \          break;\n            }\n            String lowerKey = key.toLowerCase();\n\
    \            String upperKey = key.toUpperCase();\n            if(dict.containsKey(lowerKey))\
    \ {\n                if(!dict.get(lowerKey).equals(upperKey)) {\n            \
    \        result = false;\n                    break;\n                }\n    \
    \        } else if(dict.containsKey(upperKey)) {\n                if(!dict.get(upperKey).equals(lowerKey))\
    \ {\n                    result = false;\n                    break;\n       \
    \         }\n            } else {\n                result = false;\n         \
    \       break;\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpddqrgrds.java:40)\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String lowerCaseKey = key.toLowerCase();\n            String\
    \ upperCaseKey = key.toUpperCase();\n            if(dict.containsKey(lowerCaseKey))\
    \ {\n                if(!dict.containsKey(upperCaseKey)) {\n                 \
    \   result = false;\n                    break;\n                }\n         \
    \   }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpghe8doz8.java:28)\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.size() == 0) {\n            return false;\n      \
    \  }\n        Set<String> keys = dict.keySet();\n        for (String key : keys)\
    \ {\n            String lowerCase = key.toLowerCase();\n            String upperCase\
    \ = key.toUpperCase();\n            if (lowerCase.equals(upperCase)) {\n     \
    \           continue;\n            }\n            return false;\n        }\n \
    \       return true;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\"\
    , \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\"))))\
    \ == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2wqoo3gs.java:29)\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = false;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(key.isEmpty() ||\
    \ value.isEmpty()) {\n                return false;\n            }\n         \
    \   char firstChar = key.charAt(0);\n            char secondChar = value.charAt(0);\n\
    \            if(firstChar == secondChar) {\n                result = true;\n \
    \           }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0_t7g9l3.java:30)\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(key.isEmpty() ||\
    \ value.isEmpty()) {\n                result = false;\n                break;\n\
    \            }\n            if(!key.isEmpty() && key.toLowerCase().equals(value.toLowerCase()))\
    \ {\n                result = true;\n                break;\n            }\n \
    \           if(!key.isEmpty() && key.toUpperCase().equals(value.toUpperCase()))\
    \ {\n                result = true;\n                break;\n            }\n \
    \       }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_4kkk1x0.java:34)\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = false;\n        if (dict.size() > 0) {\n \
    \           for (String key : dict.keySet()) {\n                if (key.isLowerCase())\
    \ {\n                    result = true;\n                    break;\n        \
    \        }\n                else if (key.isUpperCase()) {\n                  \
    \  result = true;\n                    break;\n                }\n           \
    \ }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3dpnutfg.java:17: error: cannot find symbol\n                if\
    \ (key.isLowerCase()) {\n                       ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmp3dpnutfg.java:21: error: cannot\
    \ find symbol\n                else if (key.isUpperCase()) {\n               \
    \             ^\n  symbol:   method isUpperCase()\n  location: variable key of\
    \ type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        if (dict.size() == 0) {\n \
    \           return result;\n        }\n        Set<String> keys = dict.keySet();\n\
    \        for (String key : keys) {\n            String value = dict.get(key);\n\
    \            if (key.isEmpty() || value.isEmpty()) {\n                return result;\n\
    \            }\n            char firstChar = key.charAt(0);\n            char\
    \ secondChar = value.charAt(0);\n            if (firstChar != secondChar) {\n\
    \                return result;\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpacdqm5o8.java:34)\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = false;\n        if (dict.size() > 0) {\n \
    \           for (String key : dict.keySet()) {\n                if (key.isEmpty())\
    \ {\n                    return false;\n                }\n            }\n   \
    \         result = true;\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpantddgis.java:27)\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.size() == 0) {\n            return false;\n      \
    \  }\n        Set<String> keys = dict.keySet();\n        for (String key : keys)\
    \ {\n            if (key.isEmpty()) {\n                return false;\n       \
    \     }\n        }\n        return true;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnrsko3xp.java:27)\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                result = false;\n                break;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9antrw9b.java:17: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmp9antrw9b.java:17: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String lowerCase = key.toLowerCase();\n            String upperCase\
    \ = key.toUpperCase();\n            if(dict.containsKey(lowerCase) && dict.containsKey(upperCase))\
    \ {\n                result = false;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqyvgagow.java:26)\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(key.isEmpty() ||\
    \ value.isEmpty()) {\n                result = false;\n                break;\n\
    \            }\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n \
    \               result = false;\n                break;\n            }\n     \
    \   }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\"\
    , \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\"))))\
    \ == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm4eek4_x.java:21: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmpm4eek4_x.java:21: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for (String key : dict.keySet())\
    \ {\n            if (key.isEmpty()) {\n                result = false;\n     \
    \           break;\n            }\n            String lowerKey = key.toLowerCase();\n\
    \            String upperKey = key.toUpperCase();\n            if (dict.containsKey(lowerKey))\
    \ {\n                if (dict.get(lowerKey).equals(upperKey)) {\n            \
    \        result = true;\n                    break;\n                }\n     \
    \       }\n            if (dict.containsKey(upperKey)) {\n                if (dict.get(upperKey).equals(lowerKey))\
    \ {\n                    result = true;\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgb5l7ziw.java:39)\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n            \
    \    result = false;\n                break;\n            }\n        }\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf354kzp0.java:16: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmpf354kzp0.java:16: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                result = false;\n                break;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9antrw9b.java:17: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmp9antrw9b.java:17: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = false;\n        for(String key : dict.keySet())\
    \ {\n            if(key.isLowerCase()) {\n                result = true;\n   \
    \             break;\n            }\n            if(key.isUpperCase()) {\n   \
    \             result = true;\n                break;\n            }\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\"\
    , \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\"))))\
    \ == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmponqh_oam.java:16: error: cannot find symbol\n            if(key.isLowerCase())\
    \ {\n                  ^\n  symbol:   method isLowerCase()\n  location: variable\
    \ key of type String\n/tmp/tmponqh_oam.java:20: error: cannot find symbol\n  \
    \          if(key.isUpperCase()) {\n                  ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.size() == 0) {\n            return false;\n      \
    \  }\n        Set<String> keys = dict.keySet();\n        for (String key : keys)\
    \ {\n            String lowerCase = key.toLowerCase();\n            String upperCase\
    \ = key.toUpperCase();\n            if (lowerCase != upperCase) {\n          \
    \      return false;\n            }\n        }\n        return true;\n    }\n\
    \    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9uop43of.java:28)\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = false;\n        if (dict.size() > 0) {\n \
    \           Set<String> keys = dict.keySet();\n            if (keys.stream().allMatch(s\
    \ -> s.equalsIgnoreCase(s.toLowerCase()))) {\n                result = true;\n\
    \            }\n            if (keys.stream().allMatch(s -> s.equalsIgnoreCase(s.toUpperCase())))\
    \ {\n                result = true;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mtzbu8n.java:28)\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(!key.isEmpty()\
    \ && !value.isEmpty()) {\n                if(key.toLowerCase().equals(value.toLowerCase()))\
    \ {\n                    result = true;\n                }\n                else\
    \ {\n                    result = false;\n                }\n            }\n \
    \           else {\n                result = false;\n            }\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\"\
    , \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\"))))\
    \ == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4ow9vqgn.java:32)\n"
  stdout: ''
  timestamp: 1659976821
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String lowerCaseKey = key.toLowerCase();\n            String\
    \ upperCaseKey = key.toUpperCase();\n            if(dict.containsKey(lowerCaseKey))\
    \ {\n                if(!dict.containsKey(upperCaseKey)) {\n                 \
    \   result = false;\n                    break;\n                }\n         \
    \   }\n            if(dict.containsKey(upperCaseKey)) {\n                if(!dict.containsKey(lowerCaseKey))\
    \ {\n                    result = false;\n                    break;\n       \
    \         }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_g21beeh.java:34)\n"
  stdout: ''
  timestamp: 1659976821
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String lowerKey = key.toLowerCase();\n            String upperKey\
    \ = key.toUpperCase();\n            if(dict.containsKey(lowerKey)) {\n       \
    \         if(!dict.get(lowerKey).equals(dict.get(upperKey))) {\n             \
    \       result = false;\n                    break;\n                }\n     \
    \       }\n            else if(dict.containsKey(upperKey)) {\n               \
    \ if(!dict.get(upperKey).equals(dict.get(lowerKey))) {\n                    result\
    \ = false;\n                    break;\n                }\n            }\n   \
    \         else {\n                result = false;\n                break;\n  \
    \          }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiw8bipjp.java:38)\n"
  stdout: ''
  timestamp: 1659976821
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n            \
    \    result = false;\n                break;\n            }\n        }\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf354kzp0.java:16: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmpf354kzp0.java:16: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.size() == 0) {\n            return false;\n      \
    \  }\n        Set<String> keys = dict.keySet();\n        for (String key : keys)\
    \ {\n            if (key.isEmpty()) {\n                return false;\n       \
    \     }\n        }\n        return true;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnrsko3xp.java:27)\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String lowerKey = key.toLowerCase();\n            String upperKey\
    \ = key.toUpperCase();\n            if(dict.containsKey(lowerKey)) {\n       \
    \         if(!dict.containsKey(upperKey)) {\n                    result = false;\n\
    \                    break;\n                }\n            }\n            else\
    \ if(dict.containsKey(upperKey)) {\n                if(!dict.containsKey(lowerKey))\
    \ {\n                    result = false;\n                    break;\n       \
    \         }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm3izkh5h.java:34)\n"
  stdout: ''
  timestamp: 1659976821
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(key.isEmpty() ||\
    \ value.isEmpty()) {\n                result = false;\n                break;\n\
    \            }\n            if(!key.isEmpty() && key.isEmpty()) {\n          \
    \      result = false;\n                break;\n            }\n            if(!key.isEmpty()\
    \ && value.isEmpty()) {\n                result = false;\n                break;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprj_rwdft.java:34)\n"
  stdout: ''
  timestamp: 1659976821
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for (String key : dict.keySet())\
    \ {\n            if (key.isEmpty()) {\n                result = false;\n     \
    \           break;\n            }\n            String lowerKey = key.toLowerCase();\n\
    \            String upperKey = key.toUpperCase();\n            if (dict.get(lowerKey).isEmpty()\
    \ || dict.get(upperKey).isEmpty()) {\n                result = false;\n      \
    \          break;\n            }\n        }\n        return result;\n    }\n \
    \   public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.isEmpty()\" because the return value of \"java.util.HashMap.get(Object)\"\
    \ is null\n\tat Problem.checkDictCase(tmpwhsul1rc.java:22)\n\tat Problem.main(tmpwhsul1rc.java:30)\n"
  stdout: ''
  timestamp: 1659976821
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                result = false;\n                break;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9antrw9b.java:17: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmp9antrw9b.java:17: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            if(key.isEmpty()) {\n                result = false;\n      \
    \          break;\n            }\n            String lowerCase = key.toLowerCase();\n\
    \            String upperCase = key.toUpperCase();\n            if(dict.containsKey(lowerCase)\
    \ && dict.containsKey(upperCase)) {\n                result = false;\n       \
    \         break;\n            }\n        }\n        return result;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr4omev7_.java:31)\n"
  stdout: ''
  timestamp: 1659976821
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String lowerCase = key.toLowerCase();\n            String upperCase\
    \ = key.toUpperCase();\n            if(dict.containsKey(lowerCase)) {\n      \
    \          if(dict.get(lowerCase).equals(upperCase)) {\n                    result\
    \ = true;\n                } else {\n                    result = false;\n   \
    \                 break;\n                }\n            }\n        }\n      \
    \  return result;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpafrpihz8.java:30)\n"
  stdout: ''
  timestamp: 1659976821
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(!key.isEmpty()\
    \ && key.isUpperCase()) {\n                if(!value.isEmpty()) {\n          \
    \          result = false;\n                    break;\n                }\n  \
    \          } else if(!value.isEmpty()) {\n                result = false;\n  \
    \              break;\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8j93ky70.java:17: error: cannot find symbol\n            if(!key.isEmpty()\
    \ && key.isUpperCase()) {\n                                    ^\n  symbol:  \
    \ method isUpperCase()\n  location: variable key of type String\n1 error\n"
  stdout: ''
  timestamp: 1659976821
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n            \
    \    result = false;\n                break;\n            }\n        }\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf354kzp0.java:16: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmpf354kzp0.java:16: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                result = false;\n                break;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9antrw9b.java:17: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmp9antrw9b.java:17: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = false;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            boolean isUpperCase\
    \ = Character.isUpperCase(value.charAt(0));\n            boolean isLowerCase =\
    \ Character.isLowerCase(value.charAt(0));\n            boolean isStringUpperCase\
    \ = isUpperCase && isLowerCase;\n            boolean isStringLowerCase = isLowerCase\
    \ && !isUpperCase;\n            boolean isStringBoth = isStringUpperCase || isStringLowerCase;\n\
    \            if(isStringBoth) {\n                result = true;\n            \
    \    break;\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoujir5zy.java:31)\n"
  stdout: ''
  timestamp: 1659976821
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String lowerCase = key.toLowerCase();\n            String upperCase\
    \ = key.toUpperCase();\n            if(dict.containsKey(lowerCase) && dict.containsKey(upperCase))\
    \ {\n                result = false;\n                break;\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy5ls184d.java:27)\n"
  stdout: ''
  timestamp: 1659976821
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(!key.equals(value))\
    \ {\n                result = false;\n                break;\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_37igjv_.java:25)\n"
  stdout: ''
  timestamp: 1659976821
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for (String key : dict.keySet())\
    \ {\n            if (key.isEmpty()) {\n                result = false;\n     \
    \           break;\n            }\n            String lowerCase = key.toLowerCase();\n\
    \            String upperCase = key.toUpperCase();\n            if (!lowerCase.equals(upperCase))\
    \ {\n                result = false;\n                break;\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9azzm965.java:30)\n"
  stdout: ''
  timestamp: 1659976821
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n            \
    \    result = false;\n                break;\n            }\n        }\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf354kzp0.java:16: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmpf354kzp0.java:16: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Write your code here\n        boolean isUpper = true;\n\
    \        boolean isLower = true;\n        for(String key : dict.keySet()) {\n\
    \            if(key.isUpperCase()) {\n                isUpper = false;\n     \
    \       }\n            if(key.isLowerCase()) {\n                isLower = false;\n\
    \            }\n        }\n        if(isUpper == true && isLower == true) {\n\
    \            return true;\n        }\n        if(isUpper == false && isLower ==\
    \ false) {\n            return false;\n        }\n        return false;\n    }\n\
    \    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpoqjp5hz1.java:18: error: cannot find symbol\n            if(key.isUpperCase())\
    \ {\n                  ^\n  symbol:   method isUpperCase()\n  location: variable\
    \ key of type String\n/tmp/tmpoqjp5hz1.java:21: error: cannot find symbol\n  \
    \          if(key.isLowerCase()) {\n                  ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976821
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for (String key : dict.keySet())\
    \ {\n            String lowerCase = key.toLowerCase();\n            String upperCase\
    \ = key.toUpperCase();\n            if (lowerCase.equals(upperCase)) {\n     \
    \           result = true;\n                break;\n            }\n          \
    \  else {\n                result = false;\n                break;\n         \
    \   }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptaoa4fbu.java:30)\n"
  stdout: ''
  timestamp: 1659976821
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.size() == 0) {\n            return false;\n      \
    \  }\n        Set<String> keys = dict.keySet();\n        for (String key : keys)\
    \ {\n            if (key.isLowerCase()) {\n                return true;\n    \
    \        }\n            if (key.isUpperCase()) {\n                return true;\n\
    \            }\n        }\n        return false;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp04vbbjqd.java:19: error: cannot find symbol\n            if (key.isLowerCase())\
    \ {\n                   ^\n  symbol:   method isLowerCase()\n  location: variable\
    \ key of type String\n/tmp/tmp04vbbjqd.java:22: error: cannot find symbol\n  \
    \          if (key.isUpperCase()) {\n                   ^\n  symbol:   method\
    \ isUpperCase()\n  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976821
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) return false;\n        for (String key\
    \ : dict) {\n            if (key.isEmpty()) return false;\n        }\n       \
    \ return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx071qywv.java:15: error: for-each not applicable to expression\
    \ type\n        for (String key : dict) {\n                          ^\n  required:\
    \ array or java.lang.Iterable\n  found:    HashMap<String,String>\n1 error\n"
  stdout: ''
  timestamp: 1659976821
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(key.isEmpty() ||\
    \ value.isEmpty()) {\n                result = false;\n                break;\n\
    \            }\n            if(!key.isEmpty() && key.toLowerCase().equals(value.toLowerCase()))\
    \ {\n                continue;\n            }\n            if(!key.isEmpty() &&\
    \ key.toUpperCase().equals(value.toUpperCase())) {\n                continue;\n\
    \            }\n            result = false;\n            break;\n        }\n \
    \       return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\"\
    , \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\"))))\
    \ == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkq9odwh1.java:33)\n"
  stdout: ''
  timestamp: 1659976821
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = false;\n        if (dict.size() > 0) {\n \
    \           Set<String> keys = dict.keySet();\n            Set<String> lowerCaseKeys\
    \ = keys.stream().map(String::toLowerCase).collect(Collectors.toSet());\n    \
    \        Set<String> upperCaseKeys = keys.stream().map(String::toUpperCase).collect(Collectors.toSet());\n\
    \            result = lowerCaseKeys.equals(upperCaseKeys);\n        }\n      \
    \  return result;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxenj6gz6.java:24)\n"
  stdout: ''
  timestamp: 1659976821
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(key.isEmpty() ||\
    \ value.isEmpty()) {\n                result = false;\n                break;\n\
    \            }\n            if(!key.toLowerCase().equals(value.toLowerCase()))\
    \ {\n                result = false;\n                break;\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv5y8jh3h.java:29)\n"
  stdout: ''
  timestamp: 1659976821
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(!key.isEmpty()\
    \ && !value.isEmpty()) {\n                if(!key.toLowerCase().equals(value.toLowerCase()))\
    \ {\n                    result = false;\n                    break;\n       \
    \         }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphq2zskpy.java:27)\n"
  stdout: ''
  timestamp: 1659976821
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n            \
    \    result = false;\n                break;\n            }\n        }\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf354kzp0.java:16: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmpf354kzp0.java:16: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(key.isEmpty() ||\
    \ value.isEmpty()) {\n                result = false;\n                break;\n\
    \            }\n            if(!key.isEmpty() && key.toLowerCase().equals(value.toLowerCase()))\
    \ {\n                result = false;\n                break;\n            }\n\
    \            if(!key.isEmpty() && key.toUpperCase().equals(value.toUpperCase()))\
    \ {\n                result = false;\n                break;\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptjyk1cr5.java:34)\n"
  stdout: ''
  timestamp: 1659976822
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Write your code here\n        boolean result = true;\n \
    \       for (String key : dict.keySet()) {\n            if (key.isEmpty()) {\n\
    \                result = false;\n                break;\n            }\n    \
    \        String lowerCase = key.toLowerCase();\n            String upperCase =\
    \ key.toUpperCase();\n            if (dict.containsKey(lowerCase)) {\n       \
    \         if (dict.get(lowerCase).equals(upperCase)) {\n                    result\
    \ = true;\n                    break;\n                }\n            }\n    \
    \        if (dict.containsKey(upperCase)) {\n                if (dict.get(upperCase).equals(lowerCase))\
    \ {\n                    result = true;\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3te_7qvz.java:40)\n"
  stdout: ''
  timestamp: 1659976822
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Write your code here\n        boolean flag = false;\n  \
    \      if(dict.size() == 0){\n            return flag;\n        }\n        for(String\
    \ key : dict.keySet()){\n            if(key.isEmpty()){\n                return\
    \ flag;\n            }\n        }\n        for(String key : dict.keySet()){\n\
    \            if(key.isEmpty()){\n                return flag;\n            }\n\
    \        }\n        return flag;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyxaodajk.java:32)\n"
  stdout: ''
  timestamp: 1659976823
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for (String key : dict.keySet())\
    \ {\n            if (key.equalsIgnoreCase(dict.get(key))) {\n                continue;\n\
    \            }\n            result = false;\n            break;\n        }\n \
    \       return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\"\
    , \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\"))))\
    \ == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfu49e44m.java:25)\n"
  stdout: ''
  timestamp: 1659976823
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            if(key.isEmpty()) {\n                result = false;\n      \
    \          break;\n            }\n            String lowerKey = key.toLowerCase();\n\
    \            String upperKey = key.toUpperCase();\n            if(dict.get(lowerKey).isEmpty()\
    \ || dict.get(upperKey).isEmpty()) {\n                result = false;\n      \
    \          break;\n            }\n        }\n        return result;\n    }\n \
    \   public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.isEmpty()\" because the return value of \"java.util.HashMap.get(Object)\"\
    \ is null\n\tat Problem.checkDictCase(tmp128y21tb.java:22)\n\tat Problem.main(tmp128y21tb.java:30)\n"
  stdout: ''
  timestamp: 1659976823
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        if (dict.size() == 0) {\n \
    \           result = false;\n        }\n        else {\n            Set<String>\
    \ keys = dict.keySet();\n            for (String key : keys) {\n             \
    \   if (key.isEmpty()) {\n                    result = false;\n              \
    \      break;\n                }\n                else {\n                   \
    \ String lowerCase = key.toLowerCase();\n                    String upperCase\
    \ = key.toUpperCase();\n                    if (lowerCase.equals(upperCase)) {\n\
    \                        result = true;\n                    }\n             \
    \       else {\n                        result = false;\n                    \
    \    break;\n                    }\n                }\n            }\n       \
    \ }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\"\
    , \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\"))))\
    \ == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp30rtjh96.java:41)\n"
  stdout: ''
  timestamp: 1659976822
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n            \
    \    result = false;\n                break;\n            }\n        }\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf354kzp0.java:16: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmpf354kzp0.java:16: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(!key.isEmpty()\
    \ && key.toLowerCase().equals(value.toLowerCase())) {\n                result\
    \ = false;\n                break;\n            }\n            if(!key.isEmpty()\
    \ && key.toUpperCase().equals(value.toUpperCase())) {\n                result\
    \ = false;\n                break;\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpndczjevr.java:30)\n"
  stdout: ''
  timestamp: 1659976823
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Write your code here\n        boolean flag = true;\n   \
    \     for(String key : dict.keySet()) {\n            if(!key.isLowerCase() &&\
    \ !key.isUpperCase()) {\n                flag = false;\n            }\n      \
    \  }\n        return flag;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\"\
    , \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\"))))\
    \ == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp209qknpi.java:17: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmp209qknpi.java:17: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976823
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.size() == 0) {\n            return false;\n      \
    \  }\n        for (String key : dict.keySet()) {\n            if (key.isLowerCase())\
    \ {\n                return true;\n            }\n        }\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2qgf4ny5.java:18: error: cannot find symbol\n            if (key.isLowerCase())\
    \ {\n                   ^\n  symbol:   method isLowerCase()\n  location: variable\
    \ key of type String\n1 error\n"
  stdout: ''
  timestamp: 1659976822
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for (String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if (value.length()\
    \ > 0 && !value.toLowerCase().equals(value)) {\n                result = false;\n\
    \                break;\n            }\n        }\n        return result;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqxeqoyon.java:26)\n"
  stdout: ''
  timestamp: 1659976823
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n            \
    \    result = false;\n                break;\n            }\n        }\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf354kzp0.java:16: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmpf354kzp0.java:16: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Write your code here\n        boolean isUpper = true;\n\
    \        boolean isLower = true;\n        for(String key : dict.keySet()){\n \
    \           if(key.isEmpty()){\n                return false;\n            }\n\
    \            if(key.isEmpty().toUpperCase().equals(key)){\n                isUpper\
    \ = false;\n            }\n            if(key.isEmpty().toLowerCase().equals(key)){\n\
    \                isLower = false;\n            }\n        }\n        if(isUpper\
    \ == true && isLower == true){\n            return true;\n        }\n        return\
    \ false;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9lzc3_tp.java:21: error: boolean cannot be dereferenced\n     \
    \       if(key.isEmpty().toUpperCase().equals(key)){\n                       \
    \     ^\n/tmp/tmp9lzc3_tp.java:24: error: boolean cannot be dereferenced\n   \
    \         if(key.isEmpty().toLowerCase().equals(key)){\n                     \
    \       ^\n2 errors\n"
  stdout: ''
  timestamp: 1659976823
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n            \
    \    result = false;\n                break;\n            }\n        }\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf354kzp0.java:16: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmpf354kzp0.java:16: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = false;\n        if (dict.size() > 0) {\n \
    \           Set<String> keys = dict.keySet();\n            boolean isUpper = keys.stream().anyMatch(key\
    \ -> key.isUpperCase());\n            boolean isLower = keys.stream().anyMatch(key\
    \ -> key.isLowerCase());\n            result = isUpper == isLower;\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\"\
    , \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\"))))\
    \ == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8hmigiwo.java:17: error: cannot find symbol\n            boolean\
    \ isUpper = keys.stream().anyMatch(key -> key.isUpperCase());\n              \
    \                                                 ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n/tmp/tmp8hmigiwo.java:18: error: cannot\
    \ find symbol\n            boolean isLower = keys.stream().anyMatch(key -> key.isLowerCase());\n\
    \                                                               ^\n  symbol: \
    \  method isLowerCase()\n  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976823
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String lowerCase = key.toLowerCase();\n            String upperCase\
    \ = key.toUpperCase();\n            if(!dict.containsKey(lowerCase) || !dict.containsKey(upperCase))\
    \ {\n                result = false;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcv1fh2xm.java:25)\n"
  stdout: ''
  timestamp: 1659976823
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                result = false;\n            }\n \
    \       }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp398yecpj.java:17: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmp398yecpj.java:17: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976823
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        if (dict.size() == 0) {\n \
    \           return result;\n        }\n        Set<String> keys = dict.keySet();\n\
    \        for (String key : keys) {\n            if (key.isEmpty()) {\n       \
    \         return result;\n            }\n            String lowerCase = key.toLowerCase();\n\
    \            String upperCase = key.toUpperCase();\n            if (lowerCase.equals(upperCase))\
    \ {\n                continue;\n            }\n            result = false;\n \
    \           break;\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwgio4ttn.java:34)\n"
  stdout: ''
  timestamp: 1659976823
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n            \
    \    result = false;\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp42wo2t78.java:16: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmp42wo2t78.java:16: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976823
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(key.isEmpty() ||\
    \ value.isEmpty()) {\n                result = false;\n                break;\n\
    \            }\n            if(key.toLowerCase().equals(value.toLowerCase()))\
    \ {\n                continue;\n            }\n            if(key.toUpperCase().equals(value.toUpperCase()))\
    \ {\n                continue;\n            }\n            result = false;\n \
    \           break;\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjdkxw82u.java:33)\n"
  stdout: ''
  timestamp: 1659976823
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n            \
    \    result = false;\n                break;\n            }\n        }\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf354kzp0.java:16: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmpf354kzp0.java:16: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            if(key.isEmpty()) {\n                result = false;\n      \
    \          break;\n            }\n            String value = dict.get(key);\n\
    \            if(!key.isEmpty() && !value.isEmpty()) {\n                if(!key.isEmpty()\
    \ && key.toLowerCase().equals(value.toLowerCase())) {\n                    result\
    \ = true;\n                    break;\n                }\n                if(!key.isEmpty()\
    \ && key.toUpperCase().equals(value.toUpperCase())) {\n                    result\
    \ = true;\n                    break;\n                }\n            }\n    \
    \    }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\"\
    , \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\"))))\
    \ == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpro7k_cbo.java:36)\n"
  stdout: ''
  timestamp: 1659976823
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for (String key : dict.keySet())\
    \ {\n            if (key.isEmpty()) continue;\n            String lowerKey = key.toLowerCase();\n\
    \            String upperKey = key.toUpperCase();\n            if (!dict.containsKey(lowerKey))\
    \ {\n                result = false;\n                break;\n            }\n\
    \            if (!dict.containsKey(upperKey)) {\n                result = false;\n\
    \                break;\n            }\n        }\n        return result;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcs0sfc66.java:31)\n"
  stdout: ''
  timestamp: 1659976823
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n            \
    \    result = false;\n                break;\n            }\n        }\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf354kzp0.java:16: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmpf354kzp0.java:16: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(key.isEmpty() ||\
    \ value.isEmpty()) {\n                result = false;\n                break;\n\
    \            }\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n \
    \               result = false;\n                break;\n            }\n     \
    \   }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\"\
    , \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\"))))\
    \ == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm4eek4_x.java:21: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmpm4eek4_x.java:21: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        if (dict.size() == 0) {\n \
    \           return false;\n        }\n        Set<String> keys = dict.keySet();\n\
    \        for (String key : keys) {\n            if (key.isEmpty()) {\n       \
    \         return false;\n            }\n            String lower = key.toLowerCase();\n\
    \            String upper = key.toUpperCase();\n            if (dict.containsKey(lower))\
    \ {\n                if (dict.get(lower) != upper) {\n                    result\
    \ = false;\n                }\n            }\n            if (dict.containsKey(upper))\
    \ {\n                if (dict.get(upper) != lower) {\n                    result\
    \ = false;\n                }\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpix0l34mz.java:39)\n"
  stdout: ''
  timestamp: 1659976823
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(key.isEmpty() ||\
    \ value.isEmpty()) {\n                result = false;\n                break;\n\
    \            }\n            if(key.toLowerCase().equals(value.toLowerCase()))\
    \ {\n                continue;\n            }\n            if(key.toUpperCase().equals(value.toUpperCase()))\
    \ {\n                continue;\n            }\n            result = false;\n \
    \           break;\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjdkxw82u.java:33)\n"
  stdout: ''
  timestamp: 1659976823
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n            \
    \    result = false;\n                break;\n            }\n        }\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf354kzp0.java:16: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmpf354kzp0.java:16: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(!key.isEmpty()\
    \ && !value.isEmpty()) {\n                if(key.toLowerCase().equals(value.toLowerCase()))\
    \ {\n                    result = true;\n                } else {\n          \
    \          result = false;\n                    break;\n                }\n  \
    \          } else {\n                result = false;\n                break;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprmhwitbz.java:32)\n"
  stdout: ''
  timestamp: 1659976823
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(key.isEmpty() ||\
    \ value.isEmpty()) {\n                result = false;\n                break;\n\
    \            }\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n \
    \               result = false;\n                break;\n            }\n     \
    \   }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\"\
    , \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\"))))\
    \ == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm4eek4_x.java:21: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmpm4eek4_x.java:21: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(key.isEmpty() ||\
    \ value.isEmpty()) {\n                result = false;\n                break;\n\
    \            }\n            if(!key.isEmpty() && key.toLowerCase().equals(value.toLowerCase()))\
    \ {\n                continue;\n            }\n            if(!key.isEmpty() &&\
    \ key.toUpperCase().equals(value.toUpperCase())) {\n                continue;\n\
    \            }\n            result = false;\n            break;\n        }\n \
    \       return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\"\
    , \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\"))))\
    \ == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkq9odwh1.java:33)\n"
  stdout: ''
  timestamp: 1659976821
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        if (dict.size() == 0) {\n \
    \           return result;\n        }\n        Set<String> keys = dict.keySet();\n\
    \        for (String key : keys) {\n            String lowerCase = key.toLowerCase();\n\
    \            String upperCase = key.toUpperCase();\n            if (lowerCase.equals(upperCase))\
    \ {\n                result = false;\n                break;\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgvipw9ox.java:31)\n"
  stdout: ''
  timestamp: 1659976823
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = false;\n        if (dict.size() > 0) {\n \
    \           Set<String> keys = dict.keySet();\n            Set<String> keys =\
    \ dict.keySet();\n            Set<String> keys = dict.keySet();\n            Set<String>\
    \ keys = dict.keySet();\n            Set<String> keys = dict.keySet();\n     \
    \       Set<String> keys = dict.keySet();\n            Set<String> keys = dict.keySet();\n\
    \            Set<String> keys = dict.keySet();\n            Set<String> keys =\
    \ dict.keySet();\n            Set<String> keys = dict.keySet();\n            Set<String>\
    \ keys = dict.keySet();\n            Set<String> keys = dict.keySet();\n     \
    \       Set<String> keys = dict.keySet();\n            Set<String> keys = dict.keySet();\n\
    \            Set<String> keys = dict.keySet();\n            Set<String> keys =\
    \ dict.keySet();\n            Set<String> keys = dict.keySet();\n            Set<String>\
    \ keys = dict.keySet();\n            Set<String> keys = dict.keySet();\n     \
    \       Set<String> keys = dict.keySet();\n            Set<String> keys = dict.keySet();\n\
    \            Set<String> keys = dict.keySet();\n            Set<String> keys =\
    \ dict.keySet();\n            Set<String> keys = dict.keySet();\n            Set<String>\
    \ keys = dict.keySet();\n            Set<String> keys = dict.keySet();\n     \
    \       Set<String> keys = dict.keySet();\n            Set<String> keys = dict.keySet();\n\
    \            Set<String> keys = dict.keySet();\n            Set<String> keys =\
    \ dict.keySet();\n            Set<String> keys = dict.keySet();\n            Set<String>\
    \ keys = dict.keySet();\n            Set<String> keys = dict.keySet();\n     \
    \       Set<String> keys = dict.keySet();\n            Set<String> keys = dict.keySet();\n\
    \            Set<String> keys = dict.keySet();\n            Set<String> keys =\
    \ dict.keySet();\n            Set<String> keys = dict.keySet();\n            Set<String>\
    \ keys = dict.keySet();\n            Set<String> keys = dict.keySet();\n     \
    \       Set<String> keys = dict.keySet();\n            Set<String> keys = dict.keySet();\n\
    \            Set<String> keys = dict.keySet();\n            Set<String> keys =\
    \ dict.keySet();\n            Set<String> keys = dict.keySet();\n            Set<String>\
    \ keys = dict.keySet();\n            Set<String> keys = dict.keySet();\n     \
    \       Set<String> keys = dict.keySet();\n            Set<String> keys = dict.keySet();\n\
    \            Set<String> keys = dict.keySet();\n            \n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6apknuhq.java:68: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  stdout: ''
  timestamp: 1659976822
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                result = false;\n                break;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9antrw9b.java:17: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmp9antrw9b.java:17: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n            \
    \    result = false;\n                break;\n            }\n        }\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf354kzp0.java:16: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmpf354kzp0.java:16: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Write your code here\n        boolean isUpper = false;\n\
    \        boolean isLower = false;\n        for(String key : dict.keySet()){\n\
    \            if(key.isUpperCase()){\n                isUpper = true;\n       \
    \     }\n            else if(key.isLowerCase()){\n                isLower = true;\n\
    \            }\n        }\n        if(!isUpper && !isLower){\n            return\
    \ true;\n        }\n        else{\n            return false;\n        }\n    }\n\
    \    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpokn9ft82.java:18: error: cannot find symbol\n            if(key.isUpperCase()){\n\
    \                  ^\n  symbol:   method isUpperCase()\n  location: variable key\
    \ of type String\n/tmp/tmpokn9ft82.java:21: error: cannot find symbol\n      \
    \      else if(key.isLowerCase()){\n                       ^\n  symbol:   method\
    \ isLowerCase()\n  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976823
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n            \
    \    result = false;\n                break;\n            }\n        }\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf354kzp0.java:16: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmpf354kzp0.java:16: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n            \
    \    result = false;\n                break;\n            }\n        }\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf354kzp0.java:16: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmpf354kzp0.java:16: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n            \
    \    result = false;\n                break;\n            }\n        }\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf354kzp0.java:16: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmpf354kzp0.java:16: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(!key.isEmpty()\
    \ && !value.isEmpty()) {\n                if(!key.toLowerCase().equals(value.toLowerCase()))\
    \ {\n                    result = false;\n                    break;\n       \
    \         }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphq2zskpy.java:27)\n"
  stdout: ''
  timestamp: 1659976821
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for (String key : dict.keySet())\
    \ {\n            if (key.isEmpty()) continue;\n            String lowerKey = key.toLowerCase();\n\
    \            String upperKey = key.toUpperCase();\n            if (dict.get(lowerKey)\
    \ == null ||\n                dict.get(upperKey) == null) {\n                result\
    \ = false;\n                break;\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn9hii62h.java:28)\n"
  stdout: ''
  timestamp: 1659976823
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n            \
    \    result = false;\n                break;\n            }\n        }\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf354kzp0.java:16: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmpf354kzp0.java:16: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(!key.isEmpty()\
    \ && !value.isEmpty()) {\n                if(key.toLowerCase().equals(value.toLowerCase()))\
    \ {\n                    result = true;\n                }\n                else\
    \ if(key.toUpperCase().equals(value.toUpperCase())) {\n                    result\
    \ = true;\n                }\n                else {\n                    result\
    \ = false;\n                }\n            }\n            else {\n           \
    \     result = false;\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1l6_ixo3.java:35)\n"
  stdout: ''
  timestamp: 1659976824
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for (String key : dict.keySet())\
    \ {\n            if (key.isEmpty()) {\n                result = false;\n     \
    \           break;\n            }\n            if (key.toLowerCase().equals(key))\
    \ {\n                result = false;\n                break;\n            }\n\
    \            if (key.toUpperCase().equals(key)) {\n                result = false;\n\
    \                break;\n            }\n        }\n        return result;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdk_usqay.java:32)\n"
  stdout: ''
  timestamp: 1659976824
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = false;\n        if (dict.size() > 0) {\n \
    \           Set<String> keys = dict.keySet();\n            if (keys.stream().allMatch(key\
    \ -> key.isLowerCase())) {\n                result = true;\n            }\n  \
    \          if (keys.stream().allMatch(key -> key.isUpperCase())) {\n         \
    \       result = true;\n            }\n        }\n        return result;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4y4_p9jz.java:17: error: cannot find symbol\n            if (keys.stream().allMatch(key\
    \ -> key.isLowerCase())) {\n                                                 ^\n\
    \  symbol:   method isLowerCase()\n  location: variable key of type String\n/tmp/tmp4y4_p9jz.java:20:\
    \ error: cannot find symbol\n            if (keys.stream().allMatch(key -> key.isUpperCase()))\
    \ {\n                                                 ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976824
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                result = false;\n                break;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9antrw9b.java:17: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmp9antrw9b.java:17: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        if (dict.size() == 0) {\n \
    \           return result;\n        }\n        for (String key : dict.keySet())\
    \ {\n            if (key.isLowerCase()) {\n                result = true;\n  \
    \              break;\n            }\n            if (key.isUpperCase()) {\n \
    \               result = true;\n                break;\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\"\
    , \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\"))))\
    \ == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5e__jztm.java:19: error: cannot find symbol\n            if (key.isLowerCase())\
    \ {\n                   ^\n  symbol:   method isLowerCase()\n  location: variable\
    \ key of type String\n/tmp/tmp5e__jztm.java:23: error: cannot find symbol\n  \
    \          if (key.isUpperCase()) {\n                   ^\n  symbol:   method\
    \ isUpperCase()\n  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976824
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for (String key : dict.keySet())\
    \ {\n            if (key.isEmpty()) {\n                result = false;\n     \
    \           break;\n            }\n            if (key.toLowerCase().equals(key))\
    \ {\n                result = false;\n                break;\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp30m6b_f0.java:28)\n"
  stdout: ''
  timestamp: 1659976824
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(!key.isEmpty()\
    \ && !value.isEmpty()) {\n                if(!key.toLowerCase().equals(value.toLowerCase()))\
    \ {\n                    result = false;\n                    break;\n       \
    \         }\n                if(!key.toUpperCase().equals(value.toUpperCase()))\
    \ {\n                    result = false;\n                    break;\n       \
    \         }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmzrb9kfu.java:31)\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String lowerCase = key.toLowerCase();\n            String upperCase\
    \ = key.toUpperCase();\n            if(dict.containsKey(lowerCase) && dict.containsKey(upperCase))\
    \ {\n                result = false;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqyvgagow.java:26)\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for (String key : dict.keySet())\
    \ {\n            if (key.isEmpty()) {\n                result = false;\n     \
    \           break;\n            }\n            String lowerCaseKey = key.toLowerCase();\n\
    \            String upperCaseKey = key.toUpperCase();\n            if (lowerCaseKey.equals(upperCaseKey))\
    \ {\n                result = true;\n                break;\n            }\n \
    \       }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0zzn5il6.java:31)\n"
  stdout: ''
  timestamp: 1659976824
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(!key.isEmpty()\
    \ && !value.isEmpty()) {\n                if(key.toLowerCase().equals(value.toLowerCase()))\
    \ {\n                    result = true;\n                } else {\n          \
    \          result = false;\n                    break;\n                }\n  \
    \          }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr1stnp50.java:29)\n"
  stdout: ''
  timestamp: 1659976824
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(!key.isEmpty()\
    \ && !value.isEmpty()) {\n                if(!key.isEmpty() && key.toLowerCase().equals(value.toLowerCase()))\
    \ {\n                    result = false;\n                    break;\n       \
    \         }\n                if(!value.isEmpty() && key.toUpperCase().equals(value.toUpperCase()))\
    \ {\n                    result = false;\n                    break;\n       \
    \         }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb17a7phi.java:32)\n"
  stdout: ''
  timestamp: 1659976824
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            boolean isUpper =\
    \ Character.isUpperCase(key);\n            boolean isLower = Character.isLowerCase(key);\n\
    \            boolean isString = value instanceof String;\n            boolean\
    \ isStringUpper = isString && isUpper;\n            boolean isStringLower = isString\
    \ && isLower;\n            boolean isStringUpperLower = isStringUpper && isStringLower;\n\
    \            boolean isStringUpperUpper = isStringUpper && isStringUpper;\n  \
    \          boolean isStringUpperLower = isStringUpper && isStringLower;\n    \
    \        boolean isStringUpperUpperLower = isStringUpper && isStringUpperLower;\n\
    \            boolean isStringUpperUpperUpper = isStringUpper && isStringUpperUpper;\n\
    \            boolean isStringUpperUpperLower = isStringUpper && isStringUpperLower;\n\
    \            boolean isStringUpperUpperUpper = isStringUpper && isStringUpperUpperLower;\n\
    \            boolean isStringUpperUpperUpper = isStringUpper && isStringUpperUpperUpper;\n\
    \            boolean isStringUpperUpperUpperLower = isStringUpper && isStringUpperUpperLower;\n\
    \            boolean isStringUpperUpperUpperUpper = isStringUpper && isStringUpperUpperUpperLower;\n\
    \            boolean isStringUpperUpperUpperUpper = isStringUpper && isStringUpperUpperUpperUpper;\n\
    \            boolean isStringUpperUpperUpperUpper = isStringUpper && isStringUpperUpperUpperUpper;\n\
    \            boolean isStringUpperUpperUpperUpper = isStringUpper && isStringUpperUpperUpperUpper;\n\
    \            boolean isStringUpperUpperUpperUpper = isStringUpper && isStringUpperUpperUpperUpper;\n\
    \            boolean isStringUpperUpperUpperUpper = isStringUpper && isStringUpperUpperUpperUpper;\n\
    \            boolean isStringUpperUpperUpperUpper = isStringUpper && isStringUpperUpperUpperUpper;\n\
    \            boolean isStringUpperUpperUpperUpper = isStringUpper && isStringUpperUpperUpperUpper;\n\
    \            boolean isStringUpperUpperUpperUpper = isStringUpper && isStringUpperUpperUpperUpper;\n\
    \            boolean isStringUpperUpperUpperUpper = isStringUpper && isStringUpperUpperUpperUpper;\n\
    \            boolean isStringUpperUpperUpperUpper = isStringUpper && isStringUpperUpperUpperUpper;\n\
    \            boolean isStringUpperUpperUpperUpper = isStringUpper && isStringUpperUpperUpperUpper;\n\
    \            boolean isStringUpperUpperUpperUpper = isStringUpper && isStringUpper\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp284dealh.java:43: error: ';' expected\n            boolean isStringUpperUpperUpperUpper\
    \ = isStringUpper && isStringUpper\n                                         \
    \                                        ^\n/tmp/tmp284dealh.java:45: error: illegal\
    \ start of expression\n    public static void main(String[] args) {\n    ^\n2\
    \ errors\n"
  stdout: ''
  timestamp: 1659976823
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) return false;\n        Set<String> keys\
    \ = dict.keySet();\n        for (String key : keys) {\n            if (key.isEmpty())\
    \ return false;\n        }\n        return true;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe9qv1xf7.java:23)\n"
  stdout: ''
  timestamp: 1659976824
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(key.isEmpty() ||\
    \ value.isEmpty()) {\n                result = false;\n                break;\n\
    \            }\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n \
    \               result = false;\n                break;\n            }\n     \
    \   }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\"\
    , \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\"))))\
    \ == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm4eek4_x.java:21: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmpm4eek4_x.java:21: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n            \
    \    result = false;\n                break;\n            }\n        }\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf354kzp0.java:16: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmpf354kzp0.java:16: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for (String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if (key.isEmpty()\
    \ || value.isEmpty()) {\n                result = false;\n                break;\n\
    \            }\n            else if (key.isEmpty() && value.isEmpty()) {\n   \
    \             result = true;\n                break;\n            }\n        \
    \    else if (key.isEmpty()) {\n                result = false;\n            \
    \    break;\n            }\n            else if (value.isEmpty()) {\n        \
    \        result = false;\n                break;\n            }\n            else\
    \ if (key.isEmpty() && !value.isEmpty()) {\n                result = false;\n\
    \                break;\n            }\n            else if (key.isEmpty() &&\
    \ !value.isEmpty()) {\n                result = false;\n                break;\n\
    \            }\n            else if (key.isEmpty() && value.isEmpty()) {\n   \
    \             result = true;\n                break;\n            }\n        \
    \    else if (key.isEmpty() && !value.isEmpty()) {\n                result = true;\n\
    \                break;\n            }\n            else if (key.isEmpty() &&\
    \ !value.isEmpty()) {\n                result = true;\n                break;\n\
    \            }\n            else if (key.isEmpty() && value.isEmpty()) {\n   \
    \             result = true;\n                break;\n            }\n        \
    \    else if (key.isEmpty() && !value.isEmpty()) {\n                result = true;\n\
    \                break;\n            }\n            else if (key.isEmpty() &&\
    \ value.isEmpty()) {\n                result = true;\n                break;\n\
    \            }\n            else if (key.isEmpty() && value.isEmpty()) {\n   \
    \             result = true;\n                break;\n            }\n        \
    \    else if (key.isEmpty() && value.isEmpty()) {\n                result = true;\n\
    \                break;\n            }\n            else if (key.isEmpty() &&\
    \ value.isEmpty()) {\n                result = true;\n                break;\n\
    \            }\n            else if (key.isEmpty() && value.isEmpty()) {\n   \
    \             result = true;\n                break;\n            }\n        \
    \    else if (key.isEmpty() && value.isEmpty()) {\n                result = true;\n\
    \                break;\n            }\n            else if (key.isEmpty() &&\
    \ value.isEmpty()) {\n                result = true;\n                break;\n\
    \            }\n            else if (key.isEmpty() && value.isEmpty()) {\n   \
    \             result = true;\n                break;\n            }\n        \
    \    else if (key.isEmpty() && value.isEmpty()) {\n                result = true;\n\
    \                break;\n            }\n            else if (key.isEmpty() &&\
    \ value.isEmpty()) {\n                result = true;\n                break;\n\
    \            }\n            else if (key.isEmpty() && value.isEmpty()) {\n   \
    \             result = true;\n                break;\n            }\n        \
    \    else if (key.isEmpty() && value.isEmpty()) {\n                result = true;\n\
    \                break;\n            }\n            else if (key.isEmpty() &&\
    \ value.isEmpty()) {\n                result = true;\n                break;\n\
    \            }\n            else if (key.isEmpty() && value.isEmpty()) {\n   \
    \             result = true;\n                break;\n            }\n        \
    \    else if (key.isEmpty() && value.isEmpty()) {\n                result = true;\n\
    \                break;\n            }\n            else if (key.isEmpty() &&\
    \ value.isEmpty()) {\n                result = true;\n                break;\n\
    \            }\n            else if (key.isEmpty() && value.is\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpviwft1vh.java:125: error: ')' expected\n            else if (key.isEmpty()\
    \ && value.is\n                                              ^\n/tmp/tmpviwft1vh.java:126:\
    \ error: illegal start of statement\n    }\n    ^\n/tmp/tmpviwft1vh.java:127:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n    ^\n3 errors\n"
  stdout: ''
  timestamp: 1659976823
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for (String key : dict.keySet())\
    \ {\n            if (key.equalsIgnoreCase(dict.get(key))) {\n                continue;\n\
    \            }\n            result = false;\n            break;\n        }\n \
    \       return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\"\
    , \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\"))))\
    \ == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfu49e44m.java:25)\n"
  stdout: ''
  timestamp: 1659976823
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = false;\n        if (dict.size() > 0) {\n \
    \           Set<String> keys = dict.keySet();\n            Set<String> keys =\
    \ dict.keySet();\n            Set<String> keys = dict.keySet();\n            Set<String>\
    \ keys = dict.keySet();\n            Set<String> keys = dict.keySet();\n     \
    \       Set<String> keys = dict.keySet();\n            Set<String> keys = dict.keySet();\n\
    \            Set<String> keys = dict.keySet();\n            Set<String> keys =\
    \ dict.keySet();\n            Set<String> keys = dict.keySet();\n            Set<String>\
    \ keys = dict.keySet();\n            Set<String> keys = dict.keySet();\n     \
    \       Set<String> keys = dict.keySet();\n            Set<String> keys = dict.keySet();\n\
    \            Set<String> keys = dict.keySet();\n            Set<String> keys =\
    \ dict.keySet();\n            Set<String> keys = dict.keySet();\n            Set<String>\
    \ keys = dict.keySet();\n            Set<String> keys = dict.keySet();\n     \
    \       Set<String> keys = dict.keySet();\n            Set<String> keys = dict.keySet();\n\
    \            Set<String> keys = dict.keySet();\n            Set<String> keys =\
    \ dict.keySet();\n            Set<String> keys = dict.keySet();\n            Set<String>\
    \ keys = dict.keySet();\n            Set<String> keys = dict.keySet();\n     \
    \       Set<String> keys = dict.keySet();\n            Set<String> keys = dict.keySet();\n\
    \            Set<String> keys = dict.keySet();\n            Set<String> keys =\
    \ dict.keySet();\n            Set<String> keys = dict.keySet();\n            Set<String>\
    \ keys = dict.keySet();\n            Set<String> keys = dict.keySet();\n     \
    \       Set<String> keys = dict.keySet();\n            Set<String> keys = dict.keySet();\n\
    \            Set<String> keys = dict.keySet();\n            Set<String> keys =\
    \ dict.keySet();\n            Set<String> keys = dict.keySet();\n            Set<String>\
    \ keys = dict.keySet();\n            Set<String> keys = dict.keySet();\n     \
    \       Set<String> keys = dict.keySet();\n            Set<String> keys = dict.keySet();\n\
    \            Set<String> keys = dict.keySet();\n            Set<String> keys =\
    \ dict.keySet();\n            Set<String> keys = dict.keySet();\n            Set<String>\
    \ keys = dict.keySet();\n            Set<String> keys = dict.keySet();\n     \
    \       Set<String> keys = dict.keySet();\n            Set<String> keys = dict.keySet();\n\
    \            Set<String> keys = dict.keySet();\n            \n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6apknuhq.java:68: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  stdout: ''
  timestamp: 1659976822
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.size() == 0) {\n            return false;\n      \
    \  }\n        Set<String> keys = dict.keySet();\n        boolean isAllStringsLowerCase\
    \ = true;\n        boolean isAllStringsUpperCase = true;\n        for (String\
    \ key : keys) {\n            String value = dict.get(key);\n            if (value.length()\
    \ > 1) {\n                isAllStringsLowerCase = false;\n            }\n    \
    \        if (value.length() > 2) {\n                isAllStringsUpperCase = false;\n\
    \            }\n        }\n        return isAllStringsLowerCase && isAllStringsUpperCase;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0rzb77j.java:32)\n"
  stdout: ''
  timestamp: 1659976824
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(!key.isEmpty()\
    \ && !value.isEmpty()) {\n                if(!key.isEmpty() && key.toLowerCase().equals(value.toLowerCase()))\
    \ {\n                    result = true;\n                } else if(!key.isEmpty()\
    \ && key.toUpperCase().equals(value.toUpperCase())) {\n                    result\
    \ = true;\n                } else {\n                    result = false;\n   \
    \                 break;\n                }\n            } else {\n          \
    \      result = false;\n                break;\n            }\n        }\n   \
    \     return result;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\"\
    , \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\"))))\
    \ == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3wbrxa1c.java:34)\n"
  stdout: ''
  timestamp: 1659976824
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Write your code here\n        boolean flag = false;\n  \
    \      if(dict.size() == 0){\n            return flag;\n        }\n        Set<String>\
    \ keys = dict.keySet();\n        for(String key : keys){\n            if(key.isEmpty()){\n\
    \                return flag;\n            }\n            String lowerCase = key.toLowerCase();\n\
    \            String upperCase = key.toUpperCase();\n            if(lowerCase.equals(upperCase)){\n\
    \                flag = true;\n            }\n        }\n        return flag;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpln441jc3.java:33)\n"
  stdout: ''
  timestamp: 1659976824
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.size() == 0) {\n            return false;\n      \
    \  }\n        Set<String> keys = dict.keySet();\n        for (String key : keys)\
    \ {\n            if (key.isEmpty()) {\n                return false;\n       \
    \     }\n        }\n        return true;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnrsko3xp.java:27)\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        if (dict.size() == 0) {\n \
    \           return result;\n        }\n        for (String key : dict.keySet())\
    \ {\n            if (key.isEmpty()) {\n                return result;\n      \
    \      }\n            String lower = key.toLowerCase();\n            String upper\
    \ = key.toUpperCase();\n            if (dict.containsKey(lower)) {\n         \
    \       String value = dict.get(lower);\n                if (value != null &&\
    \ !value.equals(upper)) {\n                    result = false;\n             \
    \   }\n            }\n            if (dict.containsKey(upper)) {\n           \
    \     String value = dict.get(upper);\n                if (value != null && !value.equals(lower))\
    \ {\n                    result = false;\n                }\n            }\n \
    \       }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkzn239ua.java:40)\n"
  stdout: ''
  timestamp: 1659976824
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.size() == 0) {\n            return false;\n      \
    \  }\n        for (String key : dict.keySet()) {\n            if (key.isLowerCase())\
    \ {\n                return true;\n            }\n            if (key.isUpperCase())\
    \ {\n                return true;\n            }\n        }\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnwyi1067.java:18: error: cannot find symbol\n            if (key.isLowerCase())\
    \ {\n                   ^\n  symbol:   method isLowerCase()\n  location: variable\
    \ key of type String\n/tmp/tmpnwyi1067.java:21: error: cannot find symbol\n  \
    \          if (key.isUpperCase()) {\n                   ^\n  symbol:   method\
    \ isUpperCase()\n  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976824
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(key.isEmpty() ||\
    \ value.isEmpty()) {\n                result = false;\n                break;\n\
    \            }\n            if(!key.isEmpty() && key.toLowerCase().equals(value.toLowerCase()))\
    \ {\n                continue;\n            }\n            if(!key.isEmpty() &&\
    \ key.toUpperCase().equals(value.toUpperCase())) {\n                continue;\n\
    \            }\n            result = false;\n            break;\n        }\n \
    \       return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\"\
    , \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\"))))\
    \ == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkq9odwh1.java:33)\n"
  stdout: ''
  timestamp: 1659976821
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            if(key.isEmpty()) {\n                result = false;\n      \
    \          break;\n            }\n            String lowerKey = key.toLowerCase();\n\
    \            String upperKey = key.toUpperCase();\n            if(dict.containsKey(lowerKey))\
    \ {\n                if(!dict.get(lowerKey).equals(dict.get(upperKey))) {\n  \
    \                  result = false;\n                    break;\n             \
    \   }\n            }\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd05rbhhr.java:32)\n"
  stdout: ''
  timestamp: 1659976824
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.size() == 0)\n            return false;\n        Set<String>\
    \ keys = dict.keySet();\n        for (String key : keys) {\n            if (key.isEmpty())\n\
    \                return false;\n            if (key.toLowerCase().equals(key))\n\
    \                return true;\n            if (key.toUpperCase().equals(key))\n\
    \                return true;\n        }\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp22kgx87m.java:29)\n"
  stdout: ''
  timestamp: 1659976824
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            if(key.equalsIgnoreCase(dict.get(key))) {\n                continue;\n\
    \            }\n            else {\n                result = false;\n        \
    \        break;\n            }\n        }\n        return result;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1g2y0tj7.java:27)\n"
  stdout: ''
  timestamp: 1659976824
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(!key.isEmpty()\
    \ && key.toLowerCase().equals(value.toLowerCase())) {\n                result\
    \ = false;\n                break;\n            }\n            if(!key.isEmpty()\
    \ && key.toUpperCase().equals(value.toUpperCase())) {\n                result\
    \ = false;\n                break;\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpndczjevr.java:30)\n"
  stdout: ''
  timestamp: 1659976823
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean isCase = true;\n        for (String key : dict.keySet())\
    \ {\n            if (key.isEmpty()) {\n                return false;\n       \
    \     }\n            String lowerCase = key.toLowerCase();\n            String\
    \ upperCase = key.toUpperCase();\n            if (lowerCase.equals(upperCase))\
    \ {\n                continue;\n            }\n            isCase = false;\n \
    \       }\n        return isCase;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mtxxk52.java:29)\n"
  stdout: ''
  timestamp: 1659976824
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Write your code here\n        boolean result = true;\n \
    \       for(String key : dict.keySet()) {\n            if(!key.isLowerCase() &&\
    \ !key.isUpperCase()) {\n                result = false;\n            }\n    \
    \    }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\"\
    , \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\"))))\
    \ == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5pc292ah.java:17: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmp5pc292ah.java:17: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976824
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n            \
    \    result = false;\n                break;\n            }\n        }\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf354kzp0.java:16: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmpf354kzp0.java:16: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Write your code here\n        boolean check = true;\n  \
    \      if(dict.size() == 0){\n            check = false;\n        }\n        for(String\
    \ key : dict.keySet()){\n            String value = dict.get(key);\n         \
    \   if(!key.isEmpty() && !value.isEmpty()){\n                if(key.toLowerCase().equals(value.toLowerCase())){\n\
    \                    check = true;\n                }\n                else if(key.toUpperCase().equals(value.toUpperCase())){\n\
    \                    check = true;\n                }\n                else{\n\
    \                    check = false;\n                }\n            }\n      \
    \      else{\n                check = false;\n            }\n        }\n     \
    \   return check;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwuy34gf7.java:39)\n"
  stdout: ''
  timestamp: 1659976825
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Write your code here\n        boolean result = true;\n \
    \       for(String key : dict.keySet()) {\n            if(!key.isLowerCase() &&\
    \ !key.isUpperCase()) {\n                result = false;\n                break;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnyzd81ed.java:17: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmpnyzd81ed.java:17: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976824
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n            \
    \    result = false;\n                break;\n            }\n        }\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf354kzp0.java:16: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmpf354kzp0.java:16: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for (String key : dict.keySet())\
    \ {\n            if (key.isEmpty()) {\n                result = false;\n     \
    \           break;\n            }\n            String lowerKey = key.toLowerCase();\n\
    \            String upperKey = key.toUpperCase();\n            if (dict.containsKey(lowerKey))\
    \ {\n                if (!dict.get(lowerKey).equals(upperKey)) {\n           \
    \         result = false;\n                    break;\n                }\n   \
    \         } else if (dict.containsKey(upperKey)) {\n                if (!dict.get(upperKey).equals(lowerKey))\
    \ {\n                    result = false;\n                    break;\n       \
    \         }\n            } else {\n                result = false;\n         \
    \       break;\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe8_yusxv.java:40)\n"
  stdout: ''
  timestamp: 1659976825
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        if (dict.size() == 0) {\n \
    \           return false;\n        }\n        for (String key : dict.keySet())\
    \ {\n            if (key.isEmpty()) {\n                return false;\n       \
    \     }\n            String lowerKey = key.toLowerCase();\n            String\
    \ upperKey = key.toUpperCase();\n            if (dict.get(lowerKey).isEmpty()\
    \ || dict.get(upperKey).isEmpty()) {\n                return false;\n        \
    \    }\n        }\n        return true;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.isEmpty()\" because the return value of \"java.util.HashMap.get(Object)\"\
    \ is null\n\tat Problem.checkDictCase(tmpyi8t3oj_.java:24)\n\tat Problem.main(tmpyi8t3oj_.java:31)\n"
  stdout: ''
  timestamp: 1659976825
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(!key.isEmpty()\
    \ && !value.isEmpty()) {\n                if(!key.toLowerCase().equals(value.toLowerCase()))\
    \ {\n                    result = false;\n                    break;\n       \
    \         }\n                if(!key.toUpperCase().equals(value.toUpperCase()))\
    \ {\n                    result = false;\n                    break;\n       \
    \         }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmzrb9kfu.java:31)\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(!key.isEmpty()\
    \ && !value.isEmpty()) {\n                if(!key.isEmpty() && key.toLowerCase().equals(value.toLowerCase()))\
    \ {\n                    result = false;\n                } else if(!key.isEmpty()\
    \ && key.toUpperCase().equals(value.toUpperCase())) {\n                    result\
    \ = false;\n                }\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfws3vdb9.java:29)\n"
  stdout: ''
  timestamp: 1659976825
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) return false;\n        for (String key\
    \ : dict.keySet()) {\n            if (key.isEmpty()) return false;\n        }\n\
    \        return true;\n    }\n    public static void main(String[] args) {\n \
    \   assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\"\
    , \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\"))))\
    \ == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppqjt_u3n.java:22)\n"
  stdout: ''
  timestamp: 1659976825
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        if (dict.size() == 0) {\n \
    \           return result;\n        }\n        Set<String> keys = dict.keySet();\n\
    \        for (String key : keys) {\n            String value = dict.get(key);\n\
    \            if (key.isEmpty()) {\n                return result;\n          \
    \  }\n            if (key.isEmpty()) {\n                return result;\n     \
    \       }\n            if (key.isEmpty()) {\n                return result;\n\
    \            }\n            if (key.isEmpty()) {\n                return result;\n\
    \            }\n            if (key.isEmpty()) {\n                return result;\n\
    \            }\n            if (key.isEmpty()) {\n                return result;\n\
    \            }\n            if (key.isEmpty()) {\n                return result;\n\
    \            }\n            if (key.isEmpty()) {\n                return result;\n\
    \            }\n            if (key.isEmpty()) {\n                return result;\n\
    \            }\n            if (key.isEmpty()) {\n                return result;\n\
    \            }\n            if (key.isEmpty()) {\n                return result;\n\
    \            }\n            if (key.isEmpty()) {\n                return result;\n\
    \            }\n            if (key.isEmpty()) {\n                return result;\n\
    \            }\n            if (key.isEmpty()) {\n                return result;\n\
    \            }\n            if (key.isEmpty()) {\n                return result;\n\
    \            }\n            if (key.isEmpty()) {\n                return result;\n\
    \            }\n            if (key.isEmpty()) {\n                return result;\n\
    \            }\n            if (key.isEmpty()) {\n                return result;\n\
    \            }\n            if (key.isEmpty()) {\n                return result;\n\
    \            }\n            if (key.isEmpty()) {\n                return result;\n\
    \            }\n            if (key.isEmpty()) {\n                return result;\n\
    \            }\n            if (key.isEmpty()) {\n                return result;\n\
    \            }\n            if (key.isEmpty()) {\n                return result;\n\
    \            }\n            if (key.isEmpty()) {\n                return result;\n\
    \            }\n            if (key.isEmpty()) {\n                return result;\n\
    \            }\n            if (key.isEmpty()) {\n                return result;\n\
    \            }\n            if (key.isEmpty()) {\n                return result;\n\
    \            }\n            if (key.isEmpty()) {\n                return result;\n\
    \            }\n            if (key.isEmpty()) {\n                return result;\n\
    \            }\n            if (key.isEmpty()) {\n                return result;\n\
    \            }\n            if (key.isEmpty()) {\n                return result;\n\
    \            }\n            if (key.isEmpty()) {\n                return result;\n\
    \            }\n            if (key.isEmpty()) {\n                return result;\n\
    \            }\n            if (key.isEmpty()) {\n                return result;\n\
    \            }\n            if (key.isEmpty()) {\n                return result;\n\
    \            }\n            if (key.isEmpty()) {\n                return result;\n\
    \            }\n            if (key.isEmpty()) {\n                return result;\n\
    \            }\n            if (key.isEmpty()) {\n                return result;\n\
    \            }\n            if (key.isEmpty()) {\n                return result;\n\
    \            }\n            if (key.isEmpty()) {\n                return result;\n\
    \            }\n            if (key.isEmpty()) {\n                return result;\n\
    \            }\n            if (key.isEmpty()) {\n                return result;\n\
    \            }\n            if (key.isEmpty()) {\n                return result;\n\
    \            }\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7p_mie_9.java:151: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  stdout: ''
  timestamp: 1659976825
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Write your code here\n        boolean result = false;\n\
    \        if (dict.size() > 0) {\n            for (String key : dict.keySet())\
    \ {\n                String value = dict.get(key);\n                if (key.isUpperCase())\
    \ {\n                    result = true;\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8wvr64zd.java:19: error: cannot find symbol\n                if\
    \ (key.isUpperCase()) {\n                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n1 error\n"
  stdout: ''
  timestamp: 1659976825
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Write your code here\n        boolean flag = true;\n   \
    \     for(String key : dict.keySet()){\n            if(!key.toLowerCase().equals(key.toUpperCase())){\n\
    \                flag = false;\n            }\n        }\n        return flag;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjwrx9u5q.java:24)\n"
  stdout: ''
  timestamp: 1659976825
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.size() == 0) {\n            return false;\n      \
    \  }\n        Set<String> keys = dict.keySet();\n        for (String key : keys)\
    \ {\n            if (key.isEmpty()) {\n                return false;\n       \
    \     }\n        }\n        return true;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnrsko3xp.java:27)\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.size() == 0)\n            return false;\n        Set<String>\
    \ keys = dict.keySet();\n        boolean isUpperCase = true;\n        for (String\
    \ key : keys) {\n            if (key.isEmpty())\n                return false;\n\
    \            if (key.isUpperCase())\n                isUpperCase = true;\n   \
    \         else\n                isUpperCase = false;\n        }\n        return\
    \ isUpperCase;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbvrh9fgn.java:21: error: cannot find symbol\n            if (key.isUpperCase())\n\
    \                   ^\n  symbol:   method isUpperCase()\n  location: variable\
    \ key of type String\n1 error\n"
  stdout: ''
  timestamp: 1659976825
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for (String key : dict.keySet())\
    \ {\n            if (key.isEmpty()) {\n                result = false;\n     \
    \           break;\n            }\n            String lowerCaseKey = key.toLowerCase();\n\
    \            String upperCaseKey = key.toUpperCase();\n            if (lowerCaseKey.equals(upperCaseKey))\
    \ {\n                result = true;\n                break;\n            }\n \
    \       }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0zzn5il6.java:31)\n"
  stdout: ''
  timestamp: 1659976824
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean isAllStrings = true;\n        for(String key : dict.keySet())\
    \ {\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n            \
    \    isAllStrings = false;\n                break;\n            }\n        }\n\
    \        return isAllStrings;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\"\
    , \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\"))))\
    \ == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4jt11qea.java:16: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmp4jt11qea.java:16: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976825
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.size() == 0) {\n            return false;\n      \
    \  }\n        Set<String> keys = dict.keySet();\n        for (String key : keys)\
    \ {\n            String lowerCase = key.toLowerCase();\n            String upperCase\
    \ = key.toUpperCase();\n            if (lowerCase.equals(upperCase)) {\n     \
    \           return true;\n            }\n        }\n        return false;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp600r6nby.java:28)\n"
  stdout: ''
  timestamp: 1659976826
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        if (dict.size() == 0) {\n \
    \           result = false;\n        }\n        else {\n            Set<String>\
    \ keys = dict.keySet();\n            boolean upperCase = true;\n            boolean\
    \ lowerCase = true;\n            for (String key : keys) {\n                upperCase\
    \ = upperCase && key.isUpperCase();\n                lowerCase = lowerCase &&\
    \ key.isLowerCase();\n            }\n            result = upperCase && lowerCase;\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp69yq2d2f.java:23: error: cannot find symbol\n                upperCase\
    \ = upperCase && key.isUpperCase();\n                                        \
    \    ^\n  symbol:   method isUpperCase()\n  location: variable key of type String\n\
    /tmp/tmp69yq2d2f.java:24: error: cannot find symbol\n                lowerCase\
    \ = lowerCase && key.isLowerCase();\n                                        \
    \    ^\n  symbol:   method isLowerCase()\n  location: variable key of type String\n\
    2 errors\n"
  stdout: ''
  timestamp: 1659976825
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.size() == 0) {\n            return false;\n      \
    \  }\n        Set<String> keys = dict.keySet();\n        boolean isAllLowerCase\
    \ = true;\n        boolean isAllUpperCase = true;\n        for (String key : keys)\
    \ {\n            String lowerCase = key.toLowerCase();\n            String upperCase\
    \ = key.toUpperCase();\n            if (lowerCase.equals(upperCase)) {\n     \
    \           isAllLowerCase = false;\n                isAllUpperCase = false;\n\
    \                break;\n            }\n        }\n        return isAllLowerCase\
    \ && isAllUpperCase;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\"\
    , \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\"))))\
    \ == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphdh0uz9m.java:33)\n"
  stdout: ''
  timestamp: 1659976826
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) return false;\n        for (String key\
    \ : dict.keySet()) {\n            if (key.isLowerCase()) return true;\n      \
    \      if (key.isUpperCase()) return true;\n        }\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpw9ba4fc9.java:16: error: cannot find symbol\n            if (key.isLowerCase())\
    \ return true;\n                   ^\n  symbol:   method isLowerCase()\n  location:\
    \ variable key of type String\n/tmp/tmpw9ba4fc9.java:17: error: cannot find symbol\n\
    \            if (key.isUpperCase()) return true;\n                   ^\n  symbol:\
    \   method isUpperCase()\n  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976825
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(key.isEmpty() ||\
    \ value.isEmpty()) {\n                result = false;\n                break;\n\
    \            }\n            if(!key.isEmpty() && key.toLowerCase().equals(value.toLowerCase()))\
    \ {\n                continue;\n            }\n            if(!key.isEmpty() &&\
    \ key.toUpperCase().equals(value.toUpperCase())) {\n                continue;\n\
    \            }\n            result = false;\n            break;\n        }\n \
    \       return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\"\
    , \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\"))))\
    \ == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkq9odwh1.java:33)\n"
  stdout: ''
  timestamp: 1659976821
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        if (dict.size() == 0) {\n \
    \           return result;\n        }\n        for (String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if (value.isEmpty())\
    \ {\n                return result;\n            }\n            if (value.length()\
    \ > 1) {\n                return result;\n            }\n            char first\
    \ = value.charAt(0);\n            char last = value.charAt(value.length() - 1);\n\
    \            if (first != last) {\n                return result;\n          \
    \  }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxko8sfz_.java:36)\n"
  stdout: ''
  timestamp: 1659976826
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(!key.isEmpty()\
    \ && !value.isEmpty()) {\n                boolean isUpper = Character.isUpperCase(key.charAt(0));\n\
    \                boolean isLower = Character.isLowerCase(key.charAt(0));\n   \
    \             if(!isUpper && !isLower) {\n                    result = false;\n\
    \                    break;\n                }\n            }\n        }\n   \
    \     return result;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\"\
    , \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\"))))\
    \ == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmapc5e01.java:30)\n"
  stdout: ''
  timestamp: 1659976826
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.size() == 0) {\n            return false;\n      \
    \  }\n        for (String key : dict.keySet()) {\n            if (key.isLowerCase())\
    \ {\n                return true;\n            }\n            if (key.isUpperCase())\
    \ {\n                return true;\n            }\n        }\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnwyi1067.java:18: error: cannot find symbol\n            if (key.isLowerCase())\
    \ {\n                   ^\n  symbol:   method isLowerCase()\n  location: variable\
    \ key of type String\n/tmp/tmpnwyi1067.java:21: error: cannot find symbol\n  \
    \          if (key.isUpperCase()) {\n                   ^\n  symbol:   method\
    \ isUpperCase()\n  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976824
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String lowerCase = key.toLowerCase();\n            String upperCase\
    \ = key.toUpperCase();\n            if(dict.containsKey(lowerCase) && dict.containsKey(upperCase))\
    \ {\n                result = false;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqyvgagow.java:26)\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = false;\n        if (dict.size() > 0) {\n \
    \           Set<String> keys = dict.keySet();\n            Set<String> lowerCaseKeys\
    \ = new HashSet<>(keys);\n            lowerCaseKeys.removeAll(dict.keySet());\n\
    \            Set<String> upperCaseKeys = new HashSet<>(keys);\n            upperCaseKeys.removeAll(lowerCaseKeys);\n\
    \            result = lowerCaseKeys.isEmpty() && upperCaseKeys.isEmpty();\n  \
    \      }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5vvuoyor.java:26)\n"
  stdout: ''
  timestamp: 1659976826
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.size() == 0) {\n            return false;\n      \
    \  }\n        Set<String> keys = dict.keySet();\n        boolean isUpperCase =\
    \ true;\n        boolean isLowerCase = true;\n        for (String key : keys)\
    \ {\n            if (isUpperCase) {\n                if (!key.isUpperCase()) {\n\
    \                    return false;\n                }\n            } else {\n\
    \                if (!key.isLowerCase()) {\n                    return false;\n\
    \                }\n            }\n            isUpperCase = !isUpperCase;\n \
    \           isLowerCase = !isLowerCase;\n        }\n        return true;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppsyg5jzr.java:22: error: cannot find symbol\n                if\
    \ (!key.isUpperCase()) {\n                        ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n/tmp/tmppsyg5jzr.java:26: error: cannot\
    \ find symbol\n                if (!key.isLowerCase()) {\n                   \
    \     ^\n  symbol:   method isLowerCase()\n  location: variable key of type String\n\
    2 errors\n"
  stdout: ''
  timestamp: 1659976826
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty())\n            return false;\n        Set<String>\
    \ keys = dict.keySet();\n        for (String key : keys) {\n            if (key.isEmpty())\n\
    \                return false;\n        }\n        return true;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvevhjqj1.java:25)\n"
  stdout: ''
  timestamp: 1659976826
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.size() == 0) return false;\n        Set<String> keys\
    \ = dict.keySet();\n        boolean allStrings = keys.stream().allMatch(key ->\
    \ key.isEmpty() || key.isUpperCase());\n        boolean allStringsUp = keys.stream().allMatch(key\
    \ -> key.isEmpty() || key.isLowerCase());\n        return allStrings && allStringsUp;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmey8ajaq.java:16: error: cannot find symbol\n        boolean allStrings\
    \ = keys.stream().allMatch(key -> key.isEmpty() || key.isUpperCase());\n     \
    \                                                                          ^\n\
    \  symbol:   method isUpperCase()\n  location: variable key of type String\n/tmp/tmpmey8ajaq.java:17:\
    \ error: cannot find symbol\n        boolean allStringsUp = keys.stream().allMatch(key\
    \ -> key.isEmpty() || key.isLowerCase());\n                                  \
    \                                               ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976826
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) return false;\n        Set<String> keys\
    \ = dict.keySet();\n        for (String key : keys) {\n            if (key.isEmpty())\
    \ return false;\n        }\n        return true;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe9qv1xf7.java:23)\n"
  stdout: ''
  timestamp: 1659976824
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for (String key : dict.keySet())\
    \ {\n            if (key.isEmpty()) {\n                result = false;\n     \
    \           break;\n            }\n            if (key.toLowerCase().equals(key))\
    \ {\n                result = false;\n                break;\n            }\n\
    \            if (key.toUpperCase().equals(key)) {\n                result = false;\n\
    \                break;\n            }\n        }\n        return result;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdk_usqay.java:32)\n"
  stdout: ''
  timestamp: 1659976824
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(!key.isEmpty()\
    \ && key.toLowerCase().equals(value.toLowerCase())) {\n                result\
    \ = false;\n            }\n            if(!key.isEmpty() && key.toUpperCase().equals(value.toUpperCase()))\
    \ {\n                result = false;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph2sdlvq3.java:28)\n"
  stdout: ''
  timestamp: 1659976826
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                result = false;\n                break;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9antrw9b.java:17: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmp9antrw9b.java:17: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.size() == 0) return false;\n        Set<String> keys\
    \ = dict.keySet();\n        for (String key : keys) {\n            if (key.isEmpty())\
    \ return false;\n            char first = key.charAt(0);\n            char last\
    \ = key.charAt(key.length() - 1);\n            if (Character.isLowerCase(first)\
    \ && Character.isUpperCase(last)) return false;\n            if (Character.isUpperCase(first)\
    \ && Character.isLowerCase(last)) return false;\n        }\n        return true;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc7mid1p6.java:27)\n"
  stdout: ''
  timestamp: 1659976826
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for (String key : dict.keySet())\
    \ {\n            if (key.isEmpty()) {\n                result = false;\n     \
    \           break;\n            }\n            String lowerKey = key.toLowerCase();\n\
    \            String upperKey = key.toUpperCase();\n            if (dict.containsKey(lowerKey))\
    \ {\n                if (!dict.get(lowerKey).equals(upperKey)) {\n           \
    \         result = false;\n                    break;\n                }\n   \
    \         } else if (dict.containsKey(upperKey)) {\n                if (!dict.get(upperKey).equals(lowerKey))\
    \ {\n                    result = false;\n                    break;\n       \
    \         }\n            } else {\n                result = false;\n         \
    \       break;\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe8_yusxv.java:40)\n"
  stdout: ''
  timestamp: 1659976825
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.size() == 0) {\n            return false;\n      \
    \  }\n        Set<String> keys = dict.keySet();\n        for (String key : keys)\
    \ {\n            if (key.isEmpty()) {\n                return false;\n       \
    \     }\n        }\n        return true;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnrsko3xp.java:27)\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String lowerCase = key.toLowerCase();\n            String upperCase\
    \ = key.toUpperCase();\n            if(dict.containsKey(lowerCase) && dict.containsKey(upperCase))\
    \ {\n                result = false;\n                break;\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy5ls184d.java:27)\n"
  stdout: ''
  timestamp: 1659976821
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for (String key : dict.keySet())\
    \ {\n            if (key.isLowerCase()) {\n                result = true;\n  \
    \              break;\n            }\n            if (key.isUpperCase()) {\n \
    \               result = true;\n                break;\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\"\
    , \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\"))))\
    \ == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5ifxak6m.java:16: error: cannot find symbol\n            if (key.isLowerCase())\
    \ {\n                   ^\n  symbol:   method isLowerCase()\n  location: variable\
    \ key of type String\n/tmp/tmp5ifxak6m.java:20: error: cannot find symbol\n  \
    \          if (key.isUpperCase()) {\n                   ^\n  symbol:   method\
    \ isUpperCase()\n  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976826
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) return false;\n        Set<String> keys\
    \ = dict.keySet();\n        for (String key : keys) {\n            if (key.isEmpty())\
    \ return false;\n        }\n        return true;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe9qv1xf7.java:23)\n"
  stdout: ''
  timestamp: 1659976824
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                result = false;\n                break;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9antrw9b.java:17: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmp9antrw9b.java:17: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.size() == 0) {\n            return false;\n      \
    \  }\n        Set<String> keys = dict.keySet();\n        for (String key : keys)\
    \ {\n            if (key.isEmpty()) {\n                return false;\n       \
    \     }\n        }\n        return true;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnrsko3xp.java:27)\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        if (dict.isEmpty()) {\n   \
    \         return false;\n        }\n        for (String key : dict.keySet()) {\n\
    \            if (key.isEmpty()) {\n                return false;\n           \
    \ }\n            String lowerKey = key.toLowerCase();\n            String upperKey\
    \ = key.toUpperCase();\n            if (dict.containsKey(lowerKey)) {\n      \
    \          if (!dict.get(lowerKey).equals(upperKey)) {\n                    result\
    \ = false;\n                }\n            } else if (dict.containsKey(upperKey))\
    \ {\n                if (!dict.get(upperKey).equals(lowerKey)) {\n           \
    \         result = false;\n                }\n            } else {\n         \
    \       result = false;\n            }\n        }\n        return result;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2k9jdp1g.java:39)\n"
  stdout: ''
  timestamp: 1659976826
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        if (dict.size() == 0) {\n \
    \           result = false;\n        }\n        else {\n            Set<String>\
    \ keys = dict.keySet();\n            boolean isUpper = true;\n            boolean\
    \ isLower = true;\n            for (String key : keys) {\n                if (isUpper)\
    \ {\n                    isUpper = key.toUpperCase().equals(key);\n          \
    \      }\n                else {\n                    isLower = key.toLowerCase().equals(key);\n\
    \                }\n            }\n            result = isUpper && isLower;\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj99fx_nn.java:35)\n"
  stdout: ''
  timestamp: 1659976826
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for (String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if (value.length()\
    \ > 1) {\n                result = false;\n                break;\n          \
    \  }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb3d4zrk_.java:25)\n"
  stdout: ''
  timestamp: 1659976826
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n            \
    \    result = false;\n                break;\n            }\n        }\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf354kzp0.java:16: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmpf354kzp0.java:16: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n            \
    \    result = false;\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp42wo2t78.java:16: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmp42wo2t78.java:16: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976823
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for (String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if (value.length()\
    \ > 0 && value.equalsIgnoreCase(key)) {\n                result = false;\n   \
    \         }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpinjos0vm.java:25)\n"
  stdout: ''
  timestamp: 1659976826
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty())\n            return false;\n        Set<String>\
    \ keys = dict.keySet();\n        for (String key : keys) {\n            if (key.isEmpty())\n\
    \                return false;\n        }\n        return true;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvevhjqj1.java:25)\n"
  stdout: ''
  timestamp: 1659976826
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for (String key : dict.keySet())\
    \ {\n            if (key.isEmpty()) continue;\n            if (key.toLowerCase().equals(key))\
    \ {\n                result = false;\n                break;\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf3hb86rj.java:25)\n"
  stdout: ''
  timestamp: 1659976827
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        if (dict.size() == 0) {\n \
    \           return false;\n        }\n        Set<String> keys = dict.keySet();\n\
    \        for (String key : keys) {\n            String lowerCase = key.toLowerCase();\n\
    \            String upperCase = key.toUpperCase();\n            if (lowerCase.equals(upperCase))\
    \ {\n                continue;\n            }\n            result = false;\n \
    \           break;\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp19mf5j4k.java:31)\n"
  stdout: ''
  timestamp: 1659976827
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n            \
    \    result = false;\n                break;\n            }\n        }\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf354kzp0.java:16: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmpf354kzp0.java:16: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) return false;\n        Set<String> keys\
    \ = dict.keySet();\n        for (String key : keys) {\n            if (key.isEmpty())\
    \ return false;\n            if (key.isLowerCase()) continue;\n            if\
    \ (key.isUpperCase()) continue;\n            return false;\n        }\n      \
    \  return true;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp08h_qmuw.java:18: error: cannot find symbol\n            if (key.isLowerCase())\
    \ continue;\n                   ^\n  symbol:   method isLowerCase()\n  location:\
    \ variable key of type String\n/tmp/tmp08h_qmuw.java:19: error: cannot find symbol\n\
    \            if (key.isUpperCase()) continue;\n                   ^\n  symbol:\
    \   method isUpperCase()\n  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976826
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for (String key : dict.keySet())\
    \ {\n            if (key.isLowerCase()) {\n                result = result &&\
    \ dict.get(key).equalsIgnoreCase(\"true\");\n            } else {\n          \
    \      result = result && dict.get(key).equalsIgnoreCase(\"false\");\n       \
    \     }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuooitq0h.java:16: error: cannot find symbol\n            if (key.isLowerCase())\
    \ {\n                   ^\n  symbol:   method isLowerCase()\n  location: variable\
    \ key of type String\n1 error\n"
  stdout: ''
  timestamp: 1659976827
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.size() == 0) {\n            return false;\n      \
    \  }\n        boolean isAllStringInLowerCase = true;\n        boolean isAllStringInUpperCase\
    \ = true;\n        for (String key : dict.keySet()) {\n            if (key.isLowerCase())\
    \ {\n                isAllStringInLowerCase = false;\n            }\n        \
    \    if (key.isUpperCase()) {\n                isAllStringInUpperCase = false;\n\
    \            }\n        }\n        return isAllStringInLowerCase && isAllStringInUpperCase;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpydl_v8n6.java:20: error: cannot find symbol\n            if (key.isLowerCase())\
    \ {\n                   ^\n  symbol:   method isLowerCase()\n  location: variable\
    \ key of type String\n/tmp/tmpydl_v8n6.java:23: error: cannot find symbol\n  \
    \          if (key.isUpperCase()) {\n                   ^\n  symbol:   method\
    \ isUpperCase()\n  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976827
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        if (dict.size() == 0) {\n \
    \           return result;\n        }\n        Set<String> keys = dict.keySet();\n\
    \        for (String key : keys) {\n            String lowerCase = key.toLowerCase();\n\
    \            String upperCase = key.toUpperCase();\n            if (lowerCase.equals(upperCase))\
    \ {\n                continue;\n            }\n            result = false;\n \
    \           break;\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpohsrn67w.java:31)\n"
  stdout: ''
  timestamp: 1659976827
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.size() == 0) {\n            return false;\n      \
    \  }\n        for (String key : dict.keySet()) {\n            if (key.isLowerCase())\
    \ {\n                return true;\n            }\n            if (key.isUpperCase())\
    \ {\n                return true;\n            }\n        }\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnwyi1067.java:18: error: cannot find symbol\n            if (key.isLowerCase())\
    \ {\n                   ^\n  symbol:   method isLowerCase()\n  location: variable\
    \ key of type String\n/tmp/tmpnwyi1067.java:21: error: cannot find symbol\n  \
    \          if (key.isUpperCase()) {\n                   ^\n  symbol:   method\
    \ isUpperCase()\n  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976824
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        if (dict.size() == 0) {\n \
    \           return result;\n        }\n        for (String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if (key.isEmpty()\
    \ || value.isEmpty()) {\n                return result;\n            }\n     \
    \       if (key.isEmpty()) {\n                result = false;\n            }\n\
    \            if (value.isEmpty()) {\n                result = false;\n       \
    \     }\n            if (key.isEmpty() || value.isEmpty()) {\n               \
    \ return result;\n            }\n            if (key.isEmpty()) {\n          \
    \      result = false;\n            }\n            if (value.isEmpty()) {\n  \
    \              result = false;\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4bcxazk4.java:43)\n"
  stdout: ''
  timestamp: 1659976827
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.size() == 0) {\n            return false;\n      \
    \  }\n        for (String key : dict.keySet()) {\n            if (key.isLowerCase())\
    \ {\n                return true;\n            }\n            if (key.isUpperCase())\
    \ {\n                return true;\n            }\n        }\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnwyi1067.java:18: error: cannot find symbol\n            if (key.isLowerCase())\
    \ {\n                   ^\n  symbol:   method isLowerCase()\n  location: variable\
    \ key of type String\n/tmp/tmpnwyi1067.java:21: error: cannot find symbol\n  \
    \          if (key.isUpperCase()) {\n                   ^\n  symbol:   method\
    \ isUpperCase()\n  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976824
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for (String key : dict.keySet())\
    \ {\n            if (key.isEmpty()) {\n                result = false;\n     \
    \           break;\n            }\n            String lowerKey = key.toLowerCase();\n\
    \            String upperKey = key.toUpperCase();\n            if (lowerKey.equals(upperKey))\
    \ {\n                continue;\n            }\n            result = false;\n \
    \           break;\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp49ff29qp.java:31)\n"
  stdout: ''
  timestamp: 1659976827
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(key.isEmpty())\
    \ {\n                result = false;\n                break;\n            }\n\
    \            if(key.isEmpty()) {\n                result = false;\n          \
    \      break;\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4mjnla4u.java:30)\n"
  stdout: ''
  timestamp: 1659976827
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            if(key.isEmpty()) {\n                result = false;\n      \
    \          break;\n            }\n            String lowerKey = key.toLowerCase();\n\
    \            String upperKey = key.toUpperCase();\n            if(dict.containsKey(lowerKey))\
    \ {\n                if(dict.get(lowerKey).equals(upperKey)) {\n             \
    \       result = true;\n                    break;\n                }\n      \
    \      }\n            if(dict.containsKey(upperKey)) {\n                if(dict.get(upperKey).equals(lowerKey))\
    \ {\n                    result = true;\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcesfavm7.java:39)\n"
  stdout: ''
  timestamp: 1659976827
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Write your code here\n        boolean flag = false;\n  \
    \      if(dict.size() == 0){\n            return flag;\n        }\n        Set<String>\
    \ keys = dict.keySet();\n        for(String key : keys){\n            String lowerCase\
    \ = key.toLowerCase();\n            String upperCase = key.toUpperCase();\n  \
    \          if(lowerCase.equals(upperCase)){\n                flag = true;\n  \
    \          }\n        }\n        return flag;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\",\
    \ \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr5q6rmj5.java:30)\n"
  stdout: ''
  timestamp: 1659976827
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n            \
    \    result = false;\n                break;\n            }\n        }\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf354kzp0.java:16: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmpf354kzp0.java:16: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Write your code here\n        boolean result = true;\n \
    \       for(String key : dict.keySet()) {\n            if(key.isEmpty()) {\n \
    \               result = false;\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwyumzmzw.java:25)\n"
  stdout: ''
  timestamp: 1659976827
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(!key.isEmpty()\
    \ && !value.isEmpty()) {\n                if(key.toLowerCase().equals(value.toLowerCase()))\
    \ {\n                    result = true;\n                } else {\n          \
    \          result = false;\n                    break;\n                }\n  \
    \          } else {\n                result = false;\n                break;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprmhwitbz.java:32)\n"
  stdout: ''
  timestamp: 1659976823
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.isEmpty()) return false;\n        Set<String> keys\
    \ = dict.keySet();\n        boolean isAllUpper = false;\n        boolean isAllLower\
    \ = false;\n        for (String key : keys) {\n            if (key.isUpperCase())\
    \ {\n                isAllUpper = true;\n            } else {\n              \
    \  isAllLower = true;\n            }\n        }\n        return isAllUpper &&\
    \ isAllLower;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa0oek2ac.java:19: error: cannot find symbol\n            if (key.isUpperCase())\
    \ {\n                   ^\n  symbol:   method isUpperCase()\n  location: variable\
    \ key of type String\n1 error\n"
  stdout: ''
  timestamp: 1659976827
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        if (dict.isEmpty()) {\n   \
    \         return false;\n        }\n        Set<String> keys = dict.keySet();\n\
    \        for (String key : keys) {\n            String value = dict.get(key);\n\
    \            if (key.isEmpty() || value.isEmpty()) {\n                return false;\n\
    \            }\n            if (key.toLowerCase().equals(value.toLowerCase()))\
    \ {\n                continue;\n            }\n            result = false;\n \
    \           break;\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxhq52o5l.java:33)\n"
  stdout: ''
  timestamp: 1659976827
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n            \
    \    result = false;\n                break;\n            }\n        }\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf354kzp0.java:16: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmpf354kzp0.java:16: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n            \
    \    result = false;\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\",\
    \ \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
    , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp42wo2t78.java:16: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmp42wo2t78.java:16: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976823
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        // Write your code here\n        Set<String> keys = dict.keySet();\n\
    \        boolean isUpper = true;\n        boolean isLower = true;\n        for\
    \ (String key : keys) {\n            if (dict.get(key).equals(key.toUpperCase()))\
    \ {\n                isUpper = false;\n            }\n            if (dict.get(key).equals(key.toLowerCase()))\
    \ {\n                isLower = false;\n            }\n        }\n        return\
    \ isUpper && isLower;\n    }\n    public static void main(String[] args) {\n \
    \   assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\"\
    , \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\"))))\
    \ == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeww64_9m.java:30)\n"
  stdout: ''
  timestamp: 1659976827
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n            \
    \    result = false;\n                break;\n            }\n        }\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"STATE\", \"NC\",\
    \ \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>())) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf354kzp0.java:16: error: cannot find symbol\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                   ^\n  symbol:   method isLowerCase()\n\
    \  location: variable key of type String\n/tmp/tmpf354kzp0.java:16: error: cannot\
    \ find symbol\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n  \
    \                                       ^\n  symbol:   method isUpperCase()\n\
    \  location: variable key of type String\n2 errors\n"
  stdout: ''
  timestamp: 1659976820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    public static boolean checkDictCase(HashMap<String,String>\
    \ dict) {\n        if (dict.size() == 0) {\n            return false;\n      \
    \  }\n        Set<String> keys = dict.keySet();\n        boolean isUpper = true;\n\
    \        boolean isLower = true;\n        for (String key : keys) {\n        \
    \    if (isUpper && Character.isUpperCase(key.charAt(0))) {\n                isUpper\
    \ = false;\n            }\n            if (isLower && Character.isLowerCase(key.charAt(0)))\
    \ {\n                isLower = false;\n            }\n        }\n        return\
    \ isUpper && isLower;\n    }\n    public static void main(String[] args) {\n \
    \   assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
    , \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\", \"36\", \"City\"\
    , \"Houston\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
    STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String,String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\"))))\
    \ == (true));\n    assert(checkDictCase((new HashMap<String,String>())) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdm52omzr.java:31)\n"
  stdout: ''
  timestamp: 1659976827

name: HumanEval_67_fruit_distribution
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // In this task, you will be given a string that represents\
  \ a number of apples and oranges \n    // that are distributed in a basket of fruit\
  \ this basket contains \n    // apples, oranges, and mango fruits. Given the string\
  \ that represents the total number of \n    // the oranges and apples and an integer\
  \ that represent the total number of the fruits \n    // in the basket return the\
  \ number of the mango fruits in the basket.\n    // for examble:\n    public static\
  \ int fruitDistribution(String s, int n) {\n"
tests: "return 0;\n    }\n    public static void main(String[] args) {\n    assert(fruitDistribution((\"\
  5 apples and 6 oranges\"), (19)) == (8));\n    assert(fruitDistribution((\"5 apples\
  \ and 6 oranges\"), (21)) == (10));\n    assert(fruitDistribution((\"0 apples and\
  \ 1 oranges\"), (3)) == (2));\n    assert(fruitDistribution((\"1 apples and 0 oranges\"\
  ), (3)) == (2));\n    assert(fruitDistribution((\"2 apples and 3 oranges\"), (100))\
  \ == (95));\n    assert(fruitDistribution((\"2 apples and 3 oranges\"), (5)) ==\
  \ (0));\n    assert(fruitDistribution((\"1 apples and 100 oranges\"), (120)) ==\
  \ (19));\n    }\n\n}\n"
completions: ["        String[] fruits = {\"apple\", \"mango\", \"orange\"};\n   \
    \     String[] basket = s.split(\" \");\n        int[] apples = new int[fruits.length];\n\
    \        int[] mango = new int[fruits.length];\n        int[] orange = new int[fruits.length];\n\
    \        for (int i = 0; i < fruits.length; i++) {\n            apples[i] = Integer.parseInt(basket[i]);\n\
    \        }\n        for (int i = 0; i < fruits.length; i++) {\n            if\
    \ (fruits[i].equals(\"mango\")) {\n                mango[i] = Integer.parseInt(basket[i]);\n\
    \            }\n            if (fruits[i].equals(\"orange\")) {\n            \
    \    orange[i] = Integer.parseInt(basket[i]);\n            }\n        }\n    \
    \    int totalApples = apples[0];\n        int totalMango = mango[0];\n      \
    \  int totalOrange = orange[0];\n        for (int i = 0; i < fruits.length; i++)\
    \ {\n            if (fruits[i].equals(\"apple\")) {\n                totalApples\
    \ += apples[i];\n            }\n            if (fruits[i].equals(\"mango\")) {\n\
    \                totalMango += mango[i];\n            }\n            if (fruits[i].equals(\"\
    orange\")) {\n                totalOrange += orange[i];\n            }\n     \
    \   }\n        int totalFruits = totalApples + totalMango + totalOrange;\n   \
    \     if (totalFruits == n) {\n            return totalMango;\n        }\n   \
    \     return -1;", "        int apples = 0;\n        int oranges = 0;\n      \
    \  int mangoes = 0;\n        String[] fruits = s.split(\"\\\\s+\");\n        for\
    \ (String fruit : fruits) {\n            if (fruit.equals(\"apple\")) {\n    \
    \            apples++;\n            } else if (fruit.equals(\"orange\")) {\n \
    \               oranges++;\n            } else if (fruit.equals(\"mango\")) {\n\
    \                mangoes++;\n            }\n        }\n        return mangoes;",
  "        int apples = 0;\n        int oranges = 0;\n        int mango = 0;\n   \
    \     String[] fruits = s.split(\"\\\\s+\");\n        Arrays.sort(fruits);\n \
    \       Arrays.sort(fruits, Comparator.comparingInt(Integer::parseInt));\n   \
    \     Arrays.sort(fruits, Comparator.comparingInt(Integer::parseInt).reversed());\n\
    \        Arrays.sort(fruits, Comparator.comparingInt(Integer::parseInt).reversed());\n\
    \        Arrays.sort(fruits, Comparator.comparingInt(Integer::parseInt).reversed());\n\
    \        Arrays.sort(fruits, Comparator.comparingInt(Integer::parseInt).reversed());\n\
    \        Arrays.sort(fruits, Comparator.comparingInt(Integer::parseInt).reversed());\n\
    \        Arrays.sort(fruits, Comparator.comparingInt(Integer::parseInt).reversed());\n\
    \        Arrays.sort(fruits, Comparator.comparingInt(Integer::parseInt).reversed());\n\
    \        Arrays.sort(fruits, Comparator.comparingInt(Integer::parseInt).reversed());\n\
    \        Arrays.sort(fruits, Comparator.comparingInt(Integer::parseInt).reversed());\n\
    \        Arrays.sort(fruits, Comparator.comparingInt(Integer::parseInt).reversed());\n\
    \        Arrays.sort(fruits, Comparator.comparingInt(Integer::parseInt).reversed());\n\
    \        Arrays.sort(fruits, Comparator.comparingInt(Integer::parseInt).reversed());\n\
    \        Arrays.sort(fruits, Comparator.comparingInt(Integer::parseInt).reversed());\n\
    \        Arrays.sort(fruits, Comparator.comparingInt(Integer::parseInt).reversed());\n\
    \        Arrays.sort(fruits, Comparator.comparingInt(Integer::parseInt).reversed());\n\
    \        Arrays.sort(fruits, Comparator.comparingInt(Integer::parseInt).reversed());\n\
    \        Arrays.sort(fruits, Comparator.comparingInt(Integer::parseInt).reversed());\n\
    \        Arrays.sort(fruits, Comparator.comparingInt(Integer::parseInt).reversed());\n\
    \        Arrays.sort(fruits, Comparator.comparingInt(Integer::parseInt).reversed());\n\
    \        Arrays.sort(fruits, Comparator.comparingInt(Integer::parseInt).reversed());\n\
    \        Arrays.sort(fruits, Comparator.comparingInt(Integer::parseInt).reversed());\n\
    \        Arrays.sort(fruits, Comparator.comparingInt(Integer::parseInt).reversed());\n\
    \        Arrays.sort(fruits, Comparator.comparingInt(Integer::parseInt).reversed());\n\
    \        Arrays.sort(fruits, Comparator.comparingInt(Integer::parseInt).reversed());\n\
    \        Arrays.sort(fruits, Comparator.comparingInt(Integer::", "        String[]\
    \ fruits = {\"apple\", \"orange\", \"mango\"};\n        int[] count = {0, 0, 0};\n\
    \        for(int i = 0; i < fruits.length; i++) {\n            String fruit =\
    \ fruits[i];\n            int index = s.indexOf(fruit);\n            if(index\
    \ != -1) {\n                count[index]++;\n            }\n        }\n      \
    \  int total = 0;\n        for(int i = 0; i < fruits.length; i++) {\n        \
    \    total += count[i];\n        }\n        return total - n;", "        // write\
    \ your code here\n        int apple = 0;\n        int mango = 0;\n        int\
    \ orange = 0;\n        String[] arr = s.split(\"\\\\s+\");\n        Arrays.sort(arr);\n\
    \        for(int i = 0; i < arr.length; i++) {\n            if(arr[i].equals(\"\
    apple\")) {\n                apple++;\n            }\n            if(arr[i].equals(\"\
    mango\")) {\n                mango++;\n            }\n            if(arr[i].equals(\"\
    orange\")) {\n                orange++;\n            }\n        }\n        return\
    \ mango;", "        int apples = 0, oranges = 0, mangos = 0;\n        String[]\
    \ fruits = s.split(\"\\\\s+\");\n        Arrays.stream(fruits).forEach(f -> {\n\
    \            if (f.equals(\"apple\")) {\n                apples++;\n         \
    \   } else if (f.equals(\"orange\")) {\n                oranges++;\n         \
    \   } else if (f.equals(\"mango\")) {\n                mangos++;\n           \
    \ }\n        });\n        return apples + oranges + mangos;", "        // write\
    \ your code here\n        int apples = 0;\n        int oranges = 0;\n        int\
    \ mango = 0;\n        String[] fruits = s.split(\" \");\n        for(String fruit\
    \ : fruits) {\n            if(fruit.equals(\"apple\")) {\n                apples++;\n\
    \            } else if(fruit.equals(\"orange\")) {\n                oranges++;\n\
    \            } else if(fruit.equals(\"mango\")) {\n                mango++;\n\
    \            }\n        }\n        return mango;", "        int apples = 0, oranges\
    \ = 0, mangos = 0;\n        String[] fruits = s.split(\" \");\n        for (String\
    \ fruit : fruits) {\n            if (fruit.equals(\"apple\")) {\n            \
    \    apples++;\n            } else if (fruit.equals(\"orange\")) {\n         \
    \       oranges++;\n            } else if (fruit.equals(\"mango\")) {\n      \
    \          mangos++;\n            }\n        }\n        return apples + oranges\
    \ + mangos;", "        String[] fruits = {\"apple\", \"orange\", \"mango\"};\n\
    \        int[] count = {0, 0, 0};\n        String[] fruitArray = s.split(\" \"\
    );\n        for(int i = 0; i < fruitArray.length; i++) {\n            if(fruitArray[i].equals(\"\
    apple\")) {\n                count[0]++;\n            } else if(fruitArray[i].equals(\"\
    orange\")) {\n                count[1]++;\n            } else if(fruitArray[i].equals(\"\
    mango\")) {\n                count[2]++;\n            }\n        }\n        int\
    \ mango = 0;\n        for(int i = 0; i < fruitArray.length; i++) {\n         \
    \   if(fruitArray[i].equals(\"mango\")) {\n                mango++;\n        \
    \    }\n        }\n        return mango;", "        // Your code here\n      \
    \  String[] fruits = {\"apple\", \"orange\", \"mango\"};\n        String[] apples\
    \ = {\"apple\", \"mango\"};\n        String[] oranges = {\"orange\"};\n      \
    \  String[] mangos = {\"mango\"};\n        String[] fruitArray = s.split(\" \"\
    );\n        String[] appleArray = apples.split(\" \");\n        String[] orangeArray\
    \ = oranges.split(\" \");\n        String[] mangoArray = mangos.split(\" \");\n\
    \        String[] fruitArray2 = fruits.split(\" \");\n        String[] appleArray2\
    \ = apples.split(\" \");\n        String[] orangeArray2 = oranges.split(\" \"\
    );\n        String[] mangoArray2 = mangos.split(\" \");\n        String[] fruitArray3\
    \ = fruits.split(\" \");\n        String[] appleArray3 = apples.split(\" \");\n\
    \        String[] orangeArray3 = oranges.split(\" \");\n        String[] mangoArray3\
    \ = mangos.split(\" \");\n        String[] fruitArray4 = fruits.split(\" \");\n\
    \        String[] appleArray4 = apples.split(\" \");\n        String[] orangeArray4\
    \ = oranges.split(\" \");\n        String[] mangoArray4 = mangos.split(\" \");\n\
    \        String[] fruitArray5 = fruits.split(\" \");\n        String[] appleArray5\
    \ = apples.split(\" \");\n        String[] orangeArray5 = oranges.split(\" \"\
    );\n        String[] mangoArray5 = mangos.split(\" \");\n        String[] fruitArray6\
    \ = fruits.split(\" \");\n        String[] appleArray6 = apples.split(\" \");\n\
    \        String[] orangeArray6 = oranges.split(\" \");\n        String[] mangoArray6\
    \ = mangos.split(\" \");\n        String[] fruitArray7 = fruits.split(\" \");\n\
    \        String[] appleArray7 = apples.split(\" \");\n        String[] orangeArray7\
    \ = oranges.split(\" \");\n        String[] mangoArray7 = mangos.split(\" \");\n\
    \        String[] fruitArray8 = fruits.split(\" \");\n        String[] appleArray8\
    \ = apples.split(\" \");\n        String[] orangeArray8 = oranges.split(\" \"\
    );\n        String[] mangoArray8 = mangos.split(\" \");\n        String[] fruitArray9\
    \ = fruits.split(\" \");\n        String[] appleArray9 = apples.split(\" \");\n\
    \        String[] orangeArray9 = oranges.split(\" \");\n        String[] mangoArray9\
    \ = mangos.split(\" \");\n        String[] fruitArray10 = fruits.split(\" \");\n\
    \        String[] appleArray10 = apples.split(\" \");\n        String[] orangeArray10\
    \ = oranges.split(\" \");\n        String[] mangoArray10 = mangos.split(\" \"\
    );\n        String[] fruitArray11 = fruits.split(\" \");\n        String[] apple",
  "        int apples = 0, oranges = 0, mangos = 0;\n        String[] fruits = s.split(\"\
    \\\\s+\");\n        for (String fruit : fruits) {\n            if (fruit.equals(\"\
    apples\")) {\n                apples++;\n            } else if (fruit.equals(\"\
    oranges\")) {\n                oranges++;\n            } else if (fruit.equals(\"\
    mango\")) {\n                mangos++;\n            }\n        }\n        return\
    \ apples + oranges + mangos;", "        int apples = 0, oranges = 0, mangos =\
    \ 0;\n        String[] fruits = s.split(\"\\\\s+\");\n        Arrays.sort(fruits);\n\
    \        for (String fruit : fruits) {\n            if (fruit.equals(\"apple\"\
    )) {\n                apples++;\n            } else if (fruit.equals(\"orange\"\
    )) {\n                oranges++;\n            } else if (fruit.equals(\"mango\"\
    )) {\n                mangos++;\n            }\n        }\n        return mangos;",
  "        // your code here\n        int apples = 0;\n        int oranges = 0;\n\
    \        int mango = 0;\n        String[] fruits = s.split(\" \");\n        for(int\
    \ i = 0; i < fruits.length; i++) {\n            if(fruits[i].equals(\"apple\"\
    )) {\n                apples++;\n            } else if(fruits[i].equals(\"orange\"\
    )) {\n                oranges++;\n            } else if(fruits[i].equals(\"mango\"\
    )) {\n                mango++;\n            }\n        }\n        return mango;",
  "        int apples = 0;\n        int oranges = 0;\n        int mango = 0;\n   \
    \     String[] fruits = s.split(\"\\\\s+\");\n        for (String fruit : fruits)\
    \ {\n            if (fruit.equals(\"apple\")) {\n                apples++;\n \
    \           } else if (fruit.equals(\"orange\")) {\n                oranges++;\n\
    \            } else if (fruit.equals(\"mango\")) {\n                mango++;\n\
    \            }\n        }\n        return mango;", "        int apples = 0;\n\
    \        int oranges = 0;\n        int mango = 0;\n        String[] fruits = s.split(\"\
    \\\\s+\");\n        Arrays.sort(fruits);\n        Arrays.stream(fruits).forEach(s\
    \ -> {\n            if (s.equals(\"apple\")) {\n                apples++;\n  \
    \          } else if (s.equals(\"orange\")) {\n                oranges++;\n  \
    \          } else if (s.equals(\"mango\")) {\n                mango++;\n     \
    \       }\n        });\n        return mango;", "        // your code here\n \
    \       int apples = 0;\n        int oranges = 0;\n        int mango = 0;\n  \
    \      String[] fruits = s.split(\"\\\\s+\");\n        for (String fruit : fruits)\
    \ {\n            if (fruit.equals(\"apple\")) {\n                apples++;\n \
    \           } else if (fruit.equals(\"orange\")) {\n                oranges++;\n\
    \            } else if (fruit.equals(\"mango\")) {\n                mango++;\n\
    \            }\n        }\n        return mango;", "        int apples = 0;\n\
    \        int oranges = 0;\n        int mango = 0;\n        String[] fruits = s.split(\"\
    \ \");\n        Arrays.sort(fruits);\n        for(int i = 0; i < fruits.length;\
    \ i++) {\n            if(fruits[i].equals(\"apple\")) {\n                apples++;\n\
    \            } else if(fruits[i].equals(\"mango\")) {\n                mango++;\n\
    \            } else if(fruits[i].equals(\"orange\")) {\n                oranges++;\n\
    \            }\n        }\n        return mango;", "        int apples = 0;\n\
    \        int oranges = 0;\n        int mango = 0;\n        String[] fruits = s.split(\"\
    \ \");\n        for (String fruit : fruits) {\n            if (fruit.equals(\"\
    apple\")) {\n                apples++;\n            } else if (fruit.equals(\"\
    orange\")) {\n                oranges++;\n            } else if (fruit.equals(\"\
    mango\")) {\n                mango++;\n            }\n        }\n        return\
    \ mango;", "        // write your code here\n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        ", "        int apples =\
    \ 0;\n        int oranges = 0;\n        int mango = 0;\n        String[] fruits\
    \ = s.split(\"\\\\s+\");\n        Arrays.sort(fruits);\n        Arrays.sort(fruits,\
    \ (a, b) -> a.compareTo(b));\n        Arrays.sort(fruits, (a, b) -> b.compareTo(a));\n\
    \        Arrays.sort(fruits, (a, b) -> a.compareTo(b));\n        Arrays.sort(fruits,\
    \ (a, b) -> b.compareTo(a));\n        Arrays.sort(fruits, (a, b) -> a.compareTo(b));\n\
    \        Arrays.sort(fruits, (a, b) -> b.compareTo(a));\n        Arrays.sort(fruits,\
    \ (a, b) -> a.compareTo(b));\n        Arrays.sort(fruits, (a, b) -> b.compareTo(a));\n\
    \        Arrays.sort(fruits, (a, b) -> a.compareTo(b));\n        Arrays.sort(fruits,\
    \ (a, b) -> b.compareTo(a));\n        Arrays.sort(fruits, (a, b) -> a.compareTo(b));\n\
    \        Arrays.sort(fruits, (a, b) -> b.compareTo(a));\n        Arrays.sort(fruits,\
    \ (a, b) -> a.compareTo(b));\n        Arrays.sort(fruits, (a, b) -> b.compareTo(a));\n\
    \        Arrays.sort(fruits, (a, b) -> a.compareTo(b));\n        Arrays.sort(fruits,\
    \ (a, b) -> b.compareTo(a));\n        Arrays.sort(fruits, (a, b) -> a.compareTo(b));\n\
    \        Arrays.sort(fruits, (a, b) -> b.compareTo(a));\n        Arrays.sort(fruits,\
    \ (a, b) -> a.compareTo(b));\n        Arrays.sort(fruits, (a, b) -> b.compareTo(a));\n\
    \        Arrays.sort(fruits, (a, b) -> a.compareTo(b));\n        Arrays.sort(fruits,\
    \ (a, b) -> b.compareTo(a));\n        Arrays.sort(fruits, (a, b) -> a.compareTo(b));\n\
    \        Arrays.sort(fruits, (a, b) -> b.compareTo(a));\n        Arrays.sort(fruits,\
    \ (a, b) -> a.compareTo(b));\n        Arrays.sort(fruits, (a, b) -> b.compareTo(a));\n\
    \        Arrays.sort(fruits, (a, b) -> a.compareTo(b));\n        Arrays.sort(fruits,\
    \ (a, b) -> b.compareTo(a));\n        Arrays.sort(fruits, (a, b) -> a.compareTo(b));\n\
    \        Arrays.sort(fruits, (a, b) -> b.compareTo(a));\n        Arrays.sort(fruits,\
    \ (a, b) -> a.compareTo(b));\n        Arrays.sort(fruits, (a, b) -> b.compareTo(a));\n\
    \        Arrays.sort(fruits, (a, b) -> a.compareTo(b));\n        Arrays.sort(fruits,\
    \ (a, b) -> b.compareTo(a));\n        Arrays.sort(fruits, (a, b) -> a.compareTo(b));\n\
    \        Arrays.sort(fruits, (a, b) -> b.compareTo(a));\n        Arrays.sort(fruits,\
    \ (a, b) -> a.compareTo(b));\n        Arrays.sort(", "        int apples = 0;\n\
    \        int oranges = 0;\n        int mango = 0;\n        String[] fruits = s.split(\"\
    \\\\s+\");\n        for (String fruit : fruits) {\n            if (fruit.equals(\"\
    apple\")) {\n                apples++;\n            } else if (fruit.equals(\"\
    orange\")) {\n                oranges++;\n            } else if (fruit.equals(\"\
    mango\")) {\n                mango++;\n            }\n        }\n        return\
    \ apples + oranges + mango;", "        // your code here\n        int apples =\
    \ 0;\n        int oranges = 0;\n        int mango = 0;\n        String[] fruits\
    \ = s.split(\" \");\n        for(int i = 0; i < fruits.length; i++) {\n      \
    \      if(fruits[i].equals(\"apple\")) {\n                apples++;\n        \
    \    }\n            else if(fruits[i].equals(\"orange\")) {\n                oranges++;\n\
    \            }\n            else if(fruits[i].equals(\"mango\")) {\n         \
    \       mango++;\n            }\n        }\n        int totalApples = apples;\n\
    \        int totalOranges = oranges;\n        int totalMango = mango;\n      \
    \  int totalFruits = totalApples + totalOranges + totalMango;\n        int totalFruitsPerApple\
    \ = apples / totalApples;\n        int totalFruitsPerOrange = oranges / totalOranges;\n\
    \        int totalFruitsPerMango = mango / totalMango;\n        int totalFruitsPerTotal\
    \ = totalFruits / totalFruitsPerApple;\n        int totalFruitsPerOrangeTotal\
    \ = totalFruits / totalFruitsPerOrange;\n        int totalFruitsPerMangoTotal\
    \ = totalFruits / totalFruitsPerMango;\n        int totalFruitsPerTotalTotal =\
    \ totalFruits / totalFruitsPerTotal;\n        int totalFruitsPerOrangeTotalTotal\
    \ = totalFruits / totalFruitsPerOrangeTotal;\n        int totalFruitsPerMangoTotalTotal\
    \ = totalFruits / totalFruitsPerMangoTotal;\n        int totalFruitsPerTotalTotalTotal\
    \ = totalFruits / totalFruitsPerTotalTotal;\n        int totalFruitsPerOrangeTotalTotalTotal\
    \ = totalFruits / totalFruitsPerOrangeTotalTotal;\n        int totalFruitsPerMangoTotalTotalTotal\
    \ = totalFruits / totalFruitsPerMangoTotalTotal;\n        int totalFruitsPerTotalTotalTotalTotal\
    \ = totalFruits / totalFruitsPerTotalTotalTotal;\n        int totalFruitsPerOrangeTotalTotalTotalTotal\
    \ = totalFruits / totalFruitsPerOrangeTotalTotalTotal;\n        int totalFruitsPerMangoTotalTotalTotalTotal\
    \ = totalFruits / totalFruitsPerMangoTotalTotalTotal;\n        int totalFruitsPerTotalTotalTotalTotalTotal\
    \ = totalFruits / totalFru", "        String[] fruits = {\"apple\", \"mango\"\
    , \"orange\"};\n        String[] fruitsInBasket = s.split(\"\\\\s+\");\n     \
    \   String[] fruitsInBasketWithCount = fruitsInBasket.stream().map(s -> fruits.contains(s)\
    \ ? fruits.indexOf(s) : -1).collect(Collectors.toList());\n        Arrays.sort(fruitsInBasketWithCount);\n\
    \        int count = 0;\n        for (int i = 0; i < fruitsInBasketWithCount.length;\
    \ i++) {\n            if (fruitsInBasketWithCount[i] == -1) {\n              \
    \  count += n;\n            }\n        }\n        return count;", "        //\
    \ write your code here\n        int apples = 0;\n        int oranges = 0;\n  \
    \      int mango = 0;\n        String[] arr = s.split(\" \");\n        for(int\
    \ i = 0; i < arr.length; i++) {\n            if(arr[i].equals(\"apple\")) {\n\
    \                apples++;\n            }\n            if(arr[i].equals(\"orange\"\
    )) {\n                oranges++;\n            }\n            if(arr[i].equals(\"\
    mango\")) {\n                mango++;\n            }\n        }\n        return\
    \ mango;", '        ', "        // Your code here\n        int apple = 0;\n  \
    \      int mango = 0;\n        int orange = 0;\n        String[] array = s.split(\"\
    \\\\s+\");\n        Arrays.sort(array);\n        for(int i = 0; i < array.length;\
    \ i++){\n            if(array[i].equals(\"apple\")){\n                apple++;\n\
    \            }\n            if(array[i].equals(\"mango\")){\n                mango++;\n\
    \            }\n            if(array[i].equals(\"orange\")){\n               \
    \ orange++;\n            }\n        }\n        int totalApple = apple;\n     \
    \   int totalMango = mango;\n        int totalOrange = orange;\n        int totalFruits\
    \ = n + apple;\n        int totalFruitsMango = n + mango;\n        int totalFruitsOrange\
    \ = n + orange;\n        int totalFruitsTotal = n + totalApple;\n        int totalFruitsMangoTotal\
    \ = n + totalMango;\n        int totalFruitsOrangeTotal = n + totalOrange;\n \
    \       int totalFruitsTotalTotal = n + totalFruits;\n        int totalFruitsMangoTotalTotal\
    \ = n + totalMango;\n        int totalFruitsOrangeTotalTotal = n + totalOrange;\n\
    \        int totalFruitsTotalTotalTotal = n + totalFruits;\n        int totalFruitsMangoTotalTotalTotal\
    \ = n + totalMango;\n        int totalFruitsOrangeTotalTotalTotal = n + totalOrange;\n\
    \        int totalFruitsTotalTotalTotalTotal = n + totalFruits;\n        int totalFruitsMangoTotalTotalTotalTotal\
    \ = n + totalMango;\n        int totalFruitsOrangeTotalTotalTotalTotal = n + totalOrange;\n\
    \        int totalFruitsTotalTotalTotalTotal = n + totalFruits;\n        int totalFruitsMangoTotalTotalTotalTotal\
    \ = n + totalMango;\n        int totalFruitsOrangeTotalTotalTotalTotal = n + totalOrange;\n\
    \        int totalFruitsTotalTotalTotalTotal = n + totalFruits;\n        int totalFruitsMangoTotalTotalTotalTotal\
    \ = n + totalMango;\n        int totalFruitsOrangeTotalTotalTotalTotal = n + totalOrange;\n\
    \        int totalFruitsTotalTotalTotalTotal = n + totalFruits;\n        int totalFruitsMangoTotalTotalTotalTotal\
    \ = n + totalMango;\n        int totalFruitsOrangeTotalTotalTotalTotal = n + totalOrange;\n\
    \        int totalFruitsTotalTotalTotalTotal", "        // Your code here\n  \
    \      int apple = 0;\n        int orange = 0;\n        int mango = 0;\n     \
    \   String[] arr = s.split(\" \");\n        for(int i = 0; i < arr.length; i++){\n\
    \            if(arr[i].equals(\"apple\")){\n                apple++;\n       \
    \     }\n            if(arr[i].equals(\"orange\")){\n                orange++;\n\
    \            }\n            if(arr[i].equals(\"mango\")){\n                mango++;\n\
    \            }\n        }\n        return mango;", "        int apples = 0;\n\
    \        int oranges = 0;\n        int mango = 0;\n        String[] fruits = s.split(\"\
    \\\\s+\");\n        for (String fruit : fruits) {\n            if (fruit.equals(\"\
    apple\")) {\n                apples++;\n            } else if (fruit.equals(\"\
    orange\")) {\n                oranges++;\n            } else if (fruit.equals(\"\
    mango\")) {\n                mango++;\n            }\n        }\n        return\
    \ mango;", "        List<Integer> apples = new ArrayList<Integer>();\n       \
    \ List<Integer> oranges = new ArrayList<Integer>();\n        List<Integer> mango\
    \ = new ArrayList<Integer>();\n        String[] fruits = s.split(\" \");\n   \
    \     for(int i = 0; i < fruits.length; i++) {\n            if(fruits[i].equals(\"\
    apple\")) {\n                apples.add(i);\n            } else if(fruits[i].equals(\"\
    orange\")) {\n                oranges.add(i);\n            } else if(fruits[i].equals(\"\
    mango\")) {\n                mango.add(i);\n            }\n        }\n       \
    \ List<Integer> appleFruits = apples.stream().map(i -> fruits[i]).collect(Collectors.toList());\n\
    \        List<Integer> orangeFruits = oranges.stream().map(i -> fruits[i]).collect(Collectors.toList());\n\
    \        List<Integer> mangoFruits = mango.stream().map(i -> fruits[i]).collect(Collectors.toList());\n\
    \        List<Integer> appleAndOrangeFruits = appleFruits.stream().filter(i ->\
    \ orangeFruits.contains(i)).collect(Collectors.toList());\n        List<Integer>\
    \ appleAndMangoFruits = appleAndOrangeFruits.stream().filter(i -> mangoFruits.contains(i)).collect(Collectors.toList());\n\
    \        return appleAndMangoFruits.size();", "        int apples = 0, oranges\
    \ = 0, mangos = 0;\n        String[] fruits = s.split(\"\\\\s+\");\n        Arrays.sort(fruits);\n\
    \        Arrays.stream(fruits).forEach(s -> {\n            if (s.equals(\"apples\"\
    )) apples++;\n            else if (s.equals(\"oranges\")) oranges++;\n       \
    \     else if (s.equals(\"mango\")) mangos++;\n        });\n        return mangos;",
  '        ', "        String[] fruits = {\"apple\", \"orange\", \"mango\"};\n   \
    \     String[] fruitsInBasket = s.split(\"\\\\s+\");\n        int[] count = new\
    \ int[fruits.length];\n        Arrays.fill(count, 0);\n        for (int i = 0;\
    \ i < fruitsInBasket.length; i++) {\n            count[fruitsInBasket[i].charAt(0)\
    \ - 'a']++;\n        }\n        int total = 0;\n        for (int i = 0; i < fruits.length;\
    \ i++) {\n            total += count[i];\n        }\n        return total - n;",
  "        int apples = 0;\n        int oranges = 0;\n        int mango = 0;\n   \
    \     String[] fruits = s.split(\"\\\\s+\");\n        Arrays.sort(fruits);\n \
    \       for(int i = 0; i < fruits.length; i++) {\n            if(fruits[i].equals(\"\
    apple\")) {\n                apples++;\n            } else if(fruits[i].equals(\"\
    orange\")) {\n                oranges++;\n            } else if(fruits[i].equals(\"\
    mango\")) {\n                mango++;\n            }\n        }\n        return\
    \ mango;", "        // write your code here\n        int apples = 0;\n       \
    \ int oranges = 0;\n        int mango = 0;\n        String[] fruits = s.split(\"\
    \ \");\n        for(int i = 0; i < fruits.length; i++) {\n            if(fruits[i].equals(\"\
    apple\")) {\n                apples++;\n            }\n            if(fruits[i].equals(\"\
    orange\")) {\n                oranges++;\n            }\n            if(fruits[i].equals(\"\
    mango\")) {\n                mango++;\n            }\n        }\n        return\
    \ mango;", "        int apples = 0;\n        int oranges = 0;\n        int mango\
    \ = 0;\n        String[] fruits = s.split(\" \");\n        Arrays.sort(fruits);\n\
    \        Arrays.stream(fruits).forEach(s -> {\n            if (s.equals(\"apple\"\
    )) {\n                apples++;\n            } else if (s.equals(\"orange\"))\
    \ {\n                oranges++;\n            } else if (s.equals(\"mango\")) {\n\
    \                mango++;\n            }\n        });\n        return mango;",
  "        // your code here\n        int apples = 0;\n        int oranges = 0;\n\
    \        int mango = 0;\n        String[] fruits = s.split(\"\\\\s+\");\n    \
    \    Arrays.sort(fruits);\n        for(int i = 0; i < fruits.length; i++) {\n\
    \            if(fruits[i].equals(\"apple\")) {\n                apples++;\n  \
    \          }\n            else if(fruits[i].equals(\"orange\")) {\n          \
    \      oranges++;\n            }\n            else if(fruits[i].equals(\"mango\"\
    )) {\n                mango++;\n            }\n        }\n        return mango;",
  "        int apples = 0;\n        int oranges = 0;\n        int mango = 0;\n   \
    \     String[] fruits = s.split(\" \");\n        Arrays.sort(fruits);\n      \
    \  for(int i = 0; i < fruits.length; i++) {\n            if(fruits[i].equals(\"\
    apple\")) {\n                apples++;\n            } else if(fruits[i].equals(\"\
    orange\")) {\n                oranges++;\n            } else if(fruits[i].equals(\"\
    mango\")) {\n                mango++;\n            }\n        }\n        return\
    \ mango;", "        // write your code here\n        String[] fruits = {\"apple\"\
    , \"orange\", \"mango\"};\n        String[] apples = {\"apple\", \"mango\"};\n\
    \        String[] oranges = {\"orange\"};\n        String[] mangos = {\"mango\"\
    };\n        String[] fruitsInBasket = s.split(\"\\\\s+\");\n        List<String>\
    \ fruitsInBasketList = Arrays.asList(fruitsInBasket);\n        List<String> fruitsInBasketList2\
    \ = Arrays.asList(fruitsInBasket);\n        List<String> fruitsInBasketList3 =\
    \ Arrays.asList(fruitsInBasket);\n        List<String> fruitsInBasketList4 = Arrays.asList(fruitsInBasket);\n\
    \        List<String> fruitsInBasketList5 = Arrays.asList(fruitsInBasket);\n \
    \       List<String> fruitsInBasketList6 = Arrays.asList(fruitsInBasket);\n  \
    \      List<String> fruitsInBasketList7 = Arrays.asList(fruitsInBasket);\n   \
    \     List<String> fruitsInBasketList8 = Arrays.asList(fruitsInBasket);\n    \
    \    List<String> fruitsInBasketList9 = Arrays.asList(fruitsInBasket);\n     \
    \   List<String> fruitsInBasketList10 = Arrays.asList(fruitsInBasket);\n     \
    \   List<String> fruitsInBasketList11 = Arrays.asList(fruitsInBasket);\n     \
    \   List<String> fruitsInBasketList12 = Arrays.asList(fruitsInBasket);\n     \
    \   List<String> fruitsInBasketList13 = Arrays.asList(fruitsInBasket);\n     \
    \   List<String> fruitsInBasketList14 = Arrays.asList(fruitsInBasket);\n     \
    \   List<String> fruitsInBasketList15 = Arrays.asList(fruitsInBasket);\n     \
    \   List<String> fruitsInBasketList16 = Arrays.asList(fruitsInBasket);\n     \
    \   List<String> fruitsInBasketList17 = Arrays.asList(fruitsInBasket);\n     \
    \   List<String> fruitsInBasketList18 = Arrays.asList(fruitsInBasket);\n     \
    \   List<String> fruitsInBasketList19 = Arrays.asList(fruitsInBasket);\n     \
    \   List<String> fruitsInBasketList20 = Arrays.asList(fruitsInBasket);\n     \
    \   List<String> fruitsInBasketList21 = Arrays.asList(fruitsInBasket);\n     \
    \   List<String> ", "        String[] fruits = {\"apple\", \"orange\", \"mango\"\
    };\n        String[] fruitsInBasket = s.split(\"\\\\s+\");\n        List<String>\
    \ fruitsInBasketList = Arrays.asList(fruitsInBasket);\n        List<String> fruitsInBasketList2\
    \ = fruitsInBasketList.stream().filter(fruit -> fruit.equals(\"apple\")).collect(Collectors.toList());\n\
    \        List<String> fruitsInBasketList3 = fruitsInBasketList.stream().filter(fruit\
    \ -> fruit.equals(\"orange\")).collect(Collectors.toList());\n        List<String>\
    \ fruitsInBasketList4 = fruitsInBasketList.stream().filter(fruit -> fruit.equals(\"\
    mango\")).collect(Collectors.toList());\n        List<String> fruitsInBasketList5\
    \ = fruitsInBasketList.stream().filter(fruit -> fruit.equals(\"apple\")).collect(Collectors.toList());\n\
    \        List<String> fruitsInBasketList6 = fruitsInBasketList.stream().filter(fruit\
    \ -> fruit.equals(\"orange\")).collect(Collectors.toList());\n        List<String>\
    \ fruitsInBasketList7 = fruitsInBasketList.stream().filter(fruit -> fruit.equals(\"\
    mango\")).collect(Collectors.toList());\n        List<String> fruitsInBasketList8\
    \ = fruitsInBasketList.stream().filter(fruit -> fruit.equals(\"apple\")).collect(Collectors.toList());\n\
    \        List<String> fruitsInBasketList9 = fruitsInBasketList.stream().filter(fruit\
    \ -> fruit.equals(\"orange\")).collect(Collectors.toList());\n        List<String>\
    \ fruitsInBasketList10 = fruitsInBasketList.stream().filter(fruit -> fruit.equals(\"\
    mango\")).collect(Collectors.toList());\n        List<String> fruitsInBasketList11\
    \ = fruitsInBasketList.stream().filter(fruit -> fruit.equals(\"apple\")).collect(Collectors.toList());\n\
    \        List<String> fruitsInBasketList12 = fruitsInBasketList.stream().filter(fruit\
    \ -> fruit.equals(\"orange\")).collect(Collectors.toList());\n        List<String>\
    \ fruitsInBasketList13 = fruitsInBasketList.stream().filter(fruit -> fruit.equals(\"\
    mango\")).collect(Collectors.toList());\n        List<String> fruitsInBasketList14\
    \ = fruitsInBasketList.stream().filter(fruit -> fruit.equals(\"apple\")).", " \
    \       int apples = 0;\n        int oranges = 0;\n        int mango = 0;\n  \
    \      int total = 0;\n        String[] fruits = s.split(\"\\\\s+\");\n      \
    \  Arrays.stream(fruits).forEach(s -> {\n            if (s.equals(\"apple\"))\
    \ {\n                apples++;\n                total++;\n            } else if\
    \ (s.equals(\"orange\")) {\n                oranges++;\n                total++;\n\
    \            } else if (s.equals(\"mango\")) {\n                mango++;\n   \
    \             total++;\n            }\n        });\n        return total - (apples\
    \ + oranges + mango);", "        List<Integer> apples = new ArrayList<Integer>();\n\
    \        List<Integer> oranges = new ArrayList<Integer>();\n        List<Integer>\
    \ mango = new ArrayList<Integer>();\n        String[] strs = s.split(\" \");\n\
    \        for(int i = 0; i < strs.length; i++) {\n            if(strs[i].equals(\"\
    apple\")) {\n                apples.add(Integer.parseInt(strs[i+1]));\n      \
    \      }\n            if(strs[i].equals(\"orange\")) {\n                oranges.add(Integer.parseInt(strs[i+1]));\n\
    \            }\n            if(strs[i].equals(\"mango\")) {\n                mango.add(Integer.parseInt(strs[i+1]));\n\
    \            }\n        }\n        List<Integer> apples_count = apples.stream().distinct().collect(Collectors.toList());\n\
    \        List<Integer> oranges_count = oranges.stream().distinct().collect(Collectors.toList());\n\
    \        List<Integer> mango_count = mango.stream().distinct().collect(Collectors.toList());\n\
    \        List<Integer> apples_total = apples.stream().distinct().collect(Collectors.toList());\n\
    \        List<Integer> oranges_total = oranges.stream().distinct().collect(Collectors.toList());\n\
    \        List<Integer> mango_total = mango.stream().distinct().collect(Collectors.toList());\n\
    \        List<Integer> apples_total = apples.stream().distinct().collect(Collectors.toList());\n\
    \        List<Integer> oranges_total = oranges.stream().distinct().collect(Collectors.toList());\n\
    \        List<Integer> mango_total = mango.stream().distinct().collect(Collectors.toList());\n\
    \        List<Integer> apples_total = apples.stream().distinct().collect(Collectors.toList());\n\
    \        List<Integer> oranges_total = oranges.stream().distinct().collect(Collectors.toList());\n\
    \        List<Integer> mango_total = mango.stream().distinct().collect(Collectors.toList());\n\
    \        List<Integer> apples_total = apples.stream().distinct().collect(Collectors.toList());\n\
    \        List<Integer> oranges_total = oranges.stream().distinct().collect(Collectors.toList());\n\
    \        List<Integer> mango_total = mango.stream().distinct().collect(Collectors.toList());\n\
    \        List<Integer> apples_total = apples.stream().distinct().collect(Collectors.toList());\n\
    \        List<Integer> oranges_total = oranges.stream().distinct().collect(Collectors.toList());\n\
    \        List<Integer> mango_total = mango.stream().distinct().collect(Collectors.toList());\n\
    \        List<Integer> apples_total = apples.stream().distinct().collect(Collectors.toList());",
  "        String[] fruits = {\"apple\", \"orange\", \"mango\"};\n        String[]\
    \ fruitsInBasket = s.split(\"\\\\s+\");\n        int[] count = new int[fruits.length];\n\
    \        for (int i = 0; i < fruitsInBasket.length; i++) {\n            count[fruitsInBasket[i].charAt(0)\
    \ - 'a']++;\n        }\n        int total = 0;\n        for (int i = 0; i < fruits.length;\
    \ i++) {\n            total += count[i];\n        }\n        return total - n;",
  "        int apples = 0;\n        int oranges = 0;\n        int mango = 0;\n   \
    \     String[] fruits = s.split(\" \");\n        for (String fruit : fruits) {\n\
    \            if (fruit.equals(\"apple\")) {\n                apples++;\n     \
    \       } else if (fruit.equals(\"orange\")) {\n                oranges++;\n \
    \           } else if (fruit.equals(\"mango\")) {\n                mango++;\n\
    \            }\n        }\n        return mango;", "        String[] fruits =\
    \ {\"apples\", \"oranges\", \"mango\"};\n        String[] fruitsInBasket = s.split(\"\
    \\\\s+\");\n        int[] count = new int[3];\n        for(int i = 0; i < fruitsInBasket.length;\
    \ i++) {\n            count[fruitsInBasket[i].charAt(0) - 'a']++;\n        }\n\
    \        int count = 0;\n        for(int i = 0; i < fruits.length; i++) {\n  \
    \          count += count[i];\n        }\n        return count;", "        int\
    \ apples = 0;\n        int oranges = 0;\n        int mango = 0;\n        String[]\
    \ fruits = s.split(\"\\\\s+\");\n        for (String fruit : fruits) {\n     \
    \       if (fruit.equals(\"apple\")) {\n                apples++;\n          \
    \  } else if (fruit.equals(\"orange\")) {\n                oranges++;\n      \
    \      } else if (fruit.equals(\"mango\")) {\n                mango++;\n     \
    \       }\n        }\n        return mango;", "        int apples = 0;\n     \
    \   int oranges = 0;\n        int mango = 0;\n        String[] fruits = s.split(\"\
    \\\\s+\");\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n     \
    \   Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruit", "        int apples\
    \ = 0;\n        int oranges = 0;\n        int mango = 0;\n        String[] fruits\
    \ = s.split(\" \");\n        for (String fruit : fruits) {\n            if (fruit.equals(\"\
    apple\")) {\n                apples++;\n            } else if (fruit.equals(\"\
    orange\")) {\n                oranges++;\n            } else if (fruit.equals(\"\
    mango\")) {\n                mango++;\n            }\n        }\n        return\
    \ apples + oranges + mango;", "        int apples = 0, oranges = 0, mangos = 0;\n\
    \        String[] fruits = s.split(\" \");\n        Arrays.stream(fruits).forEach(s\
    \ -> {\n            if (s.equals(\"apple\")) {\n                apples++;\n  \
    \          } else if (s.equals(\"orange\")) {\n                oranges++;\n  \
    \          } else if (s.equals(\"mango\")) {\n                mangos++;\n    \
    \        }\n        });\n        return apples + oranges + mangos;", "       \
    \ int apples = 0;\n        int oranges = 0;\n        int mangoes = 0;\n      \
    \  String[] fruits = s.split(\" \");\n        for (String fruit : fruits) {\n\
    \            if (fruit.equals(\"apple\")) {\n                apples++;\n     \
    \       } else if (fruit.equals(\"orange\")) {\n                oranges++;\n \
    \           } else if (fruit.equals(\"mango\")) {\n                mangoes++;\n\
    \            }\n        }\n        return mangoes;", "        int apples = 0;\n\
    \        int oranges = 0;\n        int mango = 0;\n        String[] fruits = s.split(\"\
    \ \");\n        for (String fruit : fruits) {\n            if (fruit.equals(\"\
    apple\")) {\n                apples++;\n            } else if (fruit.equals(\"\
    orange\")) {\n                oranges++;\n            } else if (fruit.equals(\"\
    mango\")) {\n                mango++;\n            }\n        }\n        return\
    \ mango;", "        int apples = 0;\n        int oranges = 0;\n        int mango\
    \ = 0;\n        String[] fruits = s.split(\"\\\\s+\");\n        for(int i = 0;\
    \ i < fruits.length; i++) {\n            if(fruits[i].equals(\"apple\")) {\n \
    \               apples++;\n            } else if(fruits[i].equals(\"orange\"))\
    \ {\n                oranges++;\n            } else if(fruits[i].equals(\"mango\"\
    )) {\n                mango++;\n            }\n        }\n        return mango;",
  "        int apples = 0;\n        int oranges = 0;\n        int mango = 0;\n   \
    \     String[] fruits = s.split(\" \");\n        for(int i = 0; i < fruits.length;\
    \ i++) {\n            if(fruits[i].equals(\"apple\")) {\n                apples++;\n\
    \            } else if(fruits[i].equals(\"orange\")) {\n                oranges++;\n\
    \            } else if(fruits[i].equals(\"mango\")) {\n                mango++;\n\
    \            }\n        }\n        return mango;", "        String[] fruits =\
    \ {\"apple\", \"orange\", \"mango\"};\n        int[] count = {0, 0, 0};\n    \
    \    Arrays.stream(fruits).forEach(fruit -> {\n            if (s.contains(fruit))\
    \ {\n                count[fruits.indexOf(fruit)]++;\n            }\n        });\n\
    \        int sum = 0;\n        for (int i = 0; i < fruits.length; i++) {\n   \
    \         sum += count[i];\n        }\n        return sum;", "        String[]\
    \ fruits = {\"apple\", \"orange\", \"mango\"};\n        String[] basket = s.split(\"\
    \ \");\n        List<String> fruitList = Arrays.asList(fruits);\n        List<String>\
    \ basketList = Arrays.asList(basket);\n        List<String> fruitList2 = Arrays.asList(fruits);\n\
    \        List<String> basketList2 = Arrays.asList(basket);\n        List<String>\
    \ fruitList3 = Arrays.asList(fruits);\n        List<String> basketList3 = Arrays.asList(basket);\n\
    \        List<String> fruitList4 = Arrays.asList(fruits);\n        List<String>\
    \ basketList4 = Arrays.asList(basket);\n        List<String> fruitList5 = Arrays.asList(fruits);\n\
    \        List<String> basketList5 = Arrays.asList(basket);\n        List<String>\
    \ fruitList6 = Arrays.asList(fruits);\n        List<String> basketList6 = Arrays.asList(basket);\n\
    \        List<String> fruitList7 = Arrays.asList(fruits);\n        List<String>\
    \ basketList7 = Arrays.asList(basket);\n        List<String> fruitList8 = Arrays.asList(fruits);\n\
    \        List<String> basketList8 = Arrays.asList(basket);\n        List<String>\
    \ fruitList9 = Arrays.asList(fruits);\n        List<String> basketList9 = Arrays.asList(basket);\n\
    \        List<String> fruitList10 = Arrays.asList(fruits);\n        List<String>\
    \ basketList10 = Arrays.asList(basket);\n        List<String> fruitList11 = Arrays.asList(fruits);\n\
    \        List<String> basketList11 = Arrays.asList(basket);\n        List<String>\
    \ fruitList12 = Arrays.asList(fruits);\n        List<String> basketList12 = Arrays.asList(basket);\n\
    \        List<String> fruitList13 = Arrays.asList(fruits);\n        List<String>\
    \ basketList13 = Arrays.asList(basket);\n        List<String> fruitList14 = Arrays.asList(fruits);\n\
    \        List<String> basketList14 = Arrays.asList(basket);\n        List<String>\
    \ fruitList15 = Arrays.asList(fruits);\n        List<String> basketList15 = Arrays.asList(basket);\n\
    \        List<String> fruitList16 = Arrays.asList(fruits);\n        List<String>\
    \ bas", "        int apples = 0;\n        int oranges = 0;\n        int mango\
    \ = 0;\n        String[] arr = s.split(\"\\\\s+\");\n        for(int i = 0; i\
    \ < arr.length; i++) {\n            if(arr[i].equals(\"apples\")) {\n        \
    \        apples++;\n            } else if(arr[i].equals(\"oranges\")) {\n    \
    \            oranges++;\n            } else if(arr[i].equals(\"mango\")) {\n \
    \               mango++;\n            }\n        }\n        return mango;", " \
    \       String[] fruits = {\"apple\", \"orange\", \"mango\"};\n        String[]\
    \ fruitsInBasket = s.split(\"\\\\s+\");\n        int[] numbersInBasket = new int[fruits.length];\n\
    \        Arrays.fill(numbersInBasket, 0);\n        Arrays.stream(numbersInBasket).forEach(i\
    \ -> {\n            fruitsInBasket.forEach(f -> {\n                if (f.equals(fruits[i]))\
    \ {\n                    numbersInBasket[i]++;\n                }\n          \
    \  });\n        });\n        int count = 0;\n        for (int i = 0; i < fruits.length;\
    \ i++) {\n            if (numbersInBasket[i] > n) {\n                count++;\n\
    \            }\n        }\n        return count;", "        int apples = 0;\n\
    \        int oranges = 0;\n        int mango = 0;\n        String[] fruits = s.split(\"\
    \\\\s+\");\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n     \
    \   Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruit", '        ', "     \
    \   // your code here\n        String[] fruits = {\"apple\", \"orange\", \"mango\"\
    };\n        String[] apples = {\"apple\", \"mango\"};\n        String[] oranges\
    \ = {\"orange\"};\n        String[] mangos = {\"mango\"};\n        String[] fruitsInBasket\
    \ = s.split(\"\\\\s+\");\n        List<String> fruitsInBasketList = Arrays.asList(fruitsInBasket);\n\
    \        List<String> applesInBasketList = Arrays.asList(apples);\n        List<String>\
    \ orangesInBasketList = Arrays.asList(oranges);\n        List<String> mangosInBasketList\
    \ = Arrays.asList(mangos);\n        List<String> fruitsInBasketList2 = fruitsInBasketList.stream().filter(x\
    \ -> applesInBasketList.contains(x)).collect(Collectors.toList());\n        List<String>\
    \ fruitsInBasketList3 = fruitsInBasketList.stream().filter(x -> orangesInBasketList.contains(x)).collect(Collectors.toList());\n\
    \        List<String> fruitsInBasketList4 = fruitsInBasketList.stream().filter(x\
    \ -> mangosInBasketList.contains(x)).collect(Collectors.toList());\n        List<String>\
    \ fruitsInBasketList5 = fruitsInBasketList.stream().filter(x -> fruitsInBasketList2.contains(x)).collect(Collectors.toList());\n\
    \        List<String> fruitsInBasketList6 = fruitsInBasketList.stream().filter(x\
    \ -> fruitsInBasketList3.contains(x)).collect(Collectors.toList());\n        List<String>\
    \ fruitsInBasketList7 = fruitsInBasketList.stream().filter(x -> fruitsInBasketList4.contains(x)).collect(Collectors.toList());\n\
    \        List<String> fruitsInBasketList8 = fruitsInBasketList.stream().filter(x\
    \ -> fruitsInBasketList5.contains(x)).collect(Collectors.toList());\n        List<String>\
    \ fruitsInBasketList9 = fruitsInBasketList.stream().filter(x -> fruitsInBasketList6.contains(x)).collect(Collectors.toList());\n\
    \        List<String> fruitsInBasketList10 = fruitsInBasketList.stream().filter(x\
    \ -> fruitsInBasketList7.contains(x)).collect(Collectors.toList());\n        List<String>\
    \ fruitsInBasketList11 = fruitsInBasketList.stream().filter(x -> fruitsInBasketList8.contains(x)).collect(Collectors.toList());\n\
    \        List<String> fruitsInBasketList12 = fruitsInBasketList.stream().filter(x\
    \ -> fruitsInBasketList9.contains(x", "        int apples = 0;\n        int oranges\
    \ = 0;\n        int mango = 0;\n        String[] fruits = s.split(\" \");\n  \
    \      for (String fruit : fruits) {\n            if (fruit.equals(\"apple\"))\
    \ {\n                apples++;\n            } else if (fruit.equals(\"orange\"\
    )) {\n                oranges++;\n            } else if (fruit.equals(\"mango\"\
    )) {\n                mango++;\n            }\n        }\n        return mango;",
  "        int apples = 0, oranges = 0, mangos = 0;\n        String[] fruits = s.split(\"\
    \ \");\n        for (String fruit : fruits) {\n            if (fruit.equals(\"\
    apple\")) {\n                apples++;\n            } else if (fruit.equals(\"\
    orange\")) {\n                oranges++;\n            } else if (fruit.equals(\"\
    mango\")) {\n                mangos++;\n            }\n        }\n        return\
    \ apples + oranges + mangos;", "        String[] fruits = {\"apple\", \"orange\"\
    , \"mango\"};\n        String[] fruitsInBasket = s.split(\" \");\n        int[]\
    \ counts = new int[fruits.length];\n        for (int i = 0; i < fruits.length;\
    \ i++) {\n            counts[i] = fruitsInBasket.length == 0 ? 0 : fruitsInBasket.length\
    \ == 1 ? 1 : fruitsInBasket.length == 2 ? 2 : 3;\n        }\n        return counts[fruits.length\
    \ - 1];", "        int apples = 0, oranges = 0, mangos = 0;\n        String[]\
    \ fruits = s.split(\" \");\n        for (String fruit : fruits) {\n          \
    \  if (fruit.equals(\"apple\")) {\n                apples++;\n            } else\
    \ if (fruit.equals(\"orange\")) {\n                oranges++;\n            } else\
    \ if (fruit.equals(\"mango\")) {\n                mangos++;\n            }\n \
    \       }\n        return apples + oranges + mangos;", "        // write your\
    \ code here\n        int apples = 0;\n        int oranges = 0;\n        int mango\
    \ = 0;\n        String[] fruits = s.split(\" \");\n        for(int i = 0; i <\
    \ fruits.length; i++) {\n            if(fruits[i].equals(\"apple\")) {\n     \
    \           apples++;\n            }\n            if(fruits[i].equals(\"orange\"\
    )) {\n                oranges++;\n            }\n            if(fruits[i].equals(\"\
    mango\")) {\n                mango++;\n            }\n        }\n        int totalApples\
    \ = apples + oranges + mango;\n        int totalOranges = apples + oranges;\n\
    \        int totalMangos = apples + mango;\n        int totalFruits = apples +\
    \ oranges + mango;\n        int totalFruitsMango = totalMangos + mango;\n    \
    \    if(totalApples == totalOranges && totalApples == totalMangos && totalOranges\
    \ == totalFruits) {\n            return totalMangos;\n        }\n        if(totalApples\
    \ == totalOranges && totalApples == totalMangos && totalMangos == totalFruitsMango)\
    \ {\n            return totalMangos;\n        }\n        if(totalOranges == totalFruits)\
    \ {\n            return totalMangos;\n        }\n        if(totalMangos == totalFruitsMango)\
    \ {\n            return totalMangos;\n        }\n        if(totalApples == totalMangos\
    \ && totalMangos == totalFruitsMango) {\n            return totalMangos;\n   \
    \     }\n        if(totalApples == totalOranges && totalOranges == totalFruits)\
    \ {\n            return totalMangos;\n        }\n        if(totalApples == totalMangos\
    \ && totalMangos == totalFruits) {\n            return totalMangos;\n        }\n\
    \        if(totalApples == totalOranges && totalOranges == totalFruitsMango) {\n\
    \            return totalMangos;\n        }\n        if(totalApples == totalMangos\
    \ && totalMangos == totalFruitsMango) {\n            return totalMangos;\n   \
    \     }\n        if(totalOranges == totalFruitsMango) {\n            return totalMangos;\n\
    \        }\n        if(totalMangos == totalFruitsMango) {\n            return\
    \ totalMangos;\n        }\n        if(totalApples == totalOranges && totalOranges\
    \ == totalFruitsMango) {\n            return totalMangos;\n        }\n       \
    \ if(totalApples == totalMangos && totalMangos == totalFru", "        int apples\
    \ = 0;\n        int oranges = 0;\n        int mango = 0;\n        String[] fruits\
    \ = s.split(\"\\\\s+\");\n        Arrays.stream(fruits).forEach(s -> {\n     \
    \       if (s.equals(\"apples\")) {\n                apples++;\n            }\
    \ else if (s.equals(\"oranges\")) {\n                oranges++;\n            }\
    \ else if (s.equals(\"mango\")) {\n                mango++;\n            }\n \
    \       });\n        return mango;", "        String[] fruits = {\"apple\", \"\
    mango\", \"orange\"};\n        String[] fruitsInBasket = s.split(\"\\\\s+\");\n\
    \        Arrays.sort(fruitsInBasket);\n        Arrays.sort(fruits);\n        int\
    \ count = 0;\n        for(int i = 0; i < fruitsInBasket.length; i++) {\n     \
    \       if(fruitsInBasket[i].equals(fruits[i])) {\n                count++;\n\
    \            }\n        }\n        return count;", "        String[] fruits =\
    \ {\"apple\", \"orange\", \"mango\"};\n        String[] apples = {\"apple\", \"\
    mango\"};\n        String[] oranges = {\"orange\"};\n        String[] mangos =\
    \ {\"mango\"};\n        String[] fruitsInBasket = s.split(\"\\\\s+\");\n     \
    \   String[] applesInBasket = apples.split(\"\\\\s+\");\n        String[] orangesInBasket\
    \ = oranges.split(\"\\\\s+\");\n        String[] mangosInBasket = mangos.split(\"\
    \\\\s+\");\n        int applesInBasketCount = 0;\n        int orangesInBasketCount\
    \ = 0;\n        int mangosInBasketCount = 0;\n        int totalApples = 0;\n \
    \       int totalOranges = 0;\n        int totalMangos = 0;\n        for(String\
    \ fruit : fruitsInBasket) {\n            if(fruit.equals(\"apple\")) {\n     \
    \           totalApples += Integer.parseInt(fruitsInBasket[fruitsInBasket.length-1]);\n\
    \                applesInBasketCount++;\n            }\n            else if(fruit.equals(\"\
    orange\")) {\n                totalOranges += Integer.parseInt(fruitsInBasket[fruitsInBasket.length-1]);\n\
    \                orangesInBasketCount++;\n            }\n            else if(fruit.equals(\"\
    mango\")) {\n                totalMangos += Integer.parseInt(fruitsInBasket[fruitsInBasket.length-1]);\n\
    \                mangosInBasketCount++;\n            }\n        }\n        for(int\
    \ i = 0; i < fruitsInBasket.length; i++) {\n            if(fruitsInBasket[i].equals(\"\
    apple\")) {\n                applesInBasket.add(fruitsInBasket[i]);\n        \
    \        applesInBasketCount++;\n            }\n            else if(fruitsInBasket[i].equals(\"\
    orange\")) {\n                orangesInBasket.add(fruitsInBasket[i]);\n      \
    \          orangesInBasketCount++;\n            }\n            else if(fruitsInBasket[i].equals(\"\
    mango\")) {\n                mangosInBasket.add(fruitsInBasket[i]);\n        \
    \        mangosInBasketCount++;\n            }\n        }\n        int totalApplesInBasket\
    \ = applesInBasketCount;\n        int totalOrangesInBasket = orangesInBasketCount;\n\
    \        int totalMangosInBasket = mangosInBasketCount;\n        int totalFruitsInBasket\
    \ = applesInBasketCount + orangesInBasketCount + mangosInBasketCount;\n      \
    \  int totalFruitsInBasket2 = applesInBasketCount + orangesInBasketCount + mangosInBas",
  "        // write your code here\n        String[] arr = s.split(\" \");\n     \
    \   int[] num = new int[arr.length];\n        for (int i = 0; i < arr.length;\
    \ i++) {\n            num[i] = Integer.parseInt(arr[i]);\n        }\n        int\
    \ sum = 0;\n        for (int i = 0; i < num.length; i++) {\n            sum +=\
    \ num[i];\n        }\n        int count = 0;\n        for (int i = 0; i < num.length;\
    \ i++) {\n            if (num[i] == sum) {\n                count++;\n       \
    \     }\n        }\n        return count;", "        int apples = 0, oranges =\
    \ 0, mangos = 0;\n        String[] fruits = s.split(\"\\\\s+\");\n        Arrays.stream(fruits).forEach(f\
    \ -> {\n            if (f.equals(\"apple\")) {\n                apples++;\n  \
    \          } else if (f.equals(\"orange\")) {\n                oranges++;\n  \
    \          } else if (f.equals(\"mango\")) {\n                mangos++;\n    \
    \        }\n        });\n        return apples + oranges + mangos;", "       \
    \ // your code here\n        String[] fruits = {\"apple\", \"orange\", \"mango\"\
    };\n        String[] fruitArray = s.split(\" \");\n        int apples = Integer.parseInt(fruitArray[0]);\n\
    \        int oranges = Integer.parseInt(fruitArray[1]);\n        int mangos =\
    \ Integer.parseInt(fruitArray[2]);\n        int totalApples = apples + oranges;\n\
    \        int totalOranges = oranges + mangos;\n        int totalMangos = mangos\
    \ + apples;\n        int totalFruits = totalApples + totalOranges + totalMangos;\n\
    \        int totalFruitsPerApple = apples / totalApples;\n        int totalFruitsPerOrange\
    \ = oranges / totalOranges;\n        int totalFruitsPerMango = mangos / totalMangos;\n\
    \        int totalFruitsPerFruit = totalFruitsPerApple * totalFruitsPerOrange\
    \ * totalFruitsPerMango;\n        int totalFruitsPerFruitPerApple = totalFruitsPerApple\
    \ * totalFruitsPerFruit;\n        int totalFruitsPerFruitPerOrange = totalFruitsPerOrange\
    \ * totalFruitsPerFruit;\n        int totalFruitsPerFruitPerMango = totalFruitsPerMango\
    \ * totalFruitsPerFruit;\n        int totalFruitsPerFruitPerFruitPerApple = totalFruitsPerFruitPerApple\
    \ * totalFruitsPerFruitPerOrange * totalFruitsPerFruitPerMango;\n        int totalFruitsPerFruitPerFruitPerOrange\
    \ = totalFruitsPerFruitPerOrange * totalFruitsPerFruitPerApple;\n        int totalFruitsPerFruitPerFruitPerMango\
    \ = totalFruitsPerFruitPerMango * totalFruitsPerFruitPerApple;\n        int totalFruitsPerFruitPerFruitPerFruitPerApple\
    \ = totalFruitsPerFruitPerFruitPerApple * totalFruitsPerFruitPerOrange * totalFruitsPerFruitPerMango;\n\
    \        int totalFruitsPerFruitPerFruitPerFruitPerOrange = totalFruitsPerFruitPerFruitPerOrange\
    \ * totalFruits", "        int apples = 0;\n        int oranges = 0;\n       \
    \ int mango = 0;\n        String[] fruits = s.split(\"\\\\s+\");\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruit",
  "        int apples = 0, oranges = 0, mangos = 0;\n        String[] fruits = s.split(\"\
    \\\\s+\");\n        for (String fruit : fruits) {\n            if (fruit.equals(\"\
    apple\")) {\n                apples++;\n            } else if (fruit.equals(\"\
    orange\")) {\n                oranges++;\n            } else if (fruit.equals(\"\
    mango\")) {\n                mangos++;\n            }\n        }\n        return\
    \ apples + oranges + mangos;", "        int apples = 0;\n        int oranges =\
    \ 0;\n        int mango = 0;\n        String[] fruits = s.split(\" \");\n    \
    \    for (String fruit : fruits) {\n            if (fruit.equals(\"apple\")) {\n\
    \                apples++;\n            } else if (fruit.equals(\"orange\")) {\n\
    \                oranges++;\n            } else if (fruit.equals(\"mango\")) {\n\
    \                mango++;\n            }\n        }\n        return mango;", " \
    \       int apples = 0, oranges = 0, mangos = 0;\n        String[] fruits = s.split(\"\
    \ \");\n        for (String fruit : fruits) {\n            if (fruit.equals(\"\
    apples\")) {\n                apples++;\n            } else if (fruit.equals(\"\
    oranges\")) {\n                oranges++;\n            } else if (fruit.equals(\"\
    mango\")) {\n                mangos++;\n            }\n        }\n        return\
    \ apples + oranges + mangos;", "        int apples = 0;\n        int oranges =\
    \ 0;\n        int mango = 0;\n        String[] fruits = s.split(\"\\\\s+\");\n\
    \        for (String fruit : fruits) {\n            if (fruit.equals(\"apple\"\
    )) {\n                apples++;\n            } else if (fruit.equals(\"orange\"\
    )) {\n                oranges++;\n            } else if (fruit.equals(\"mango\"\
    )) {\n                mango++;\n            }\n        }\n        return mango;",
  "        int apples = 0;\n        int oranges = 0;\n        int mango = 0;\n   \
    \     String[] fruits = s.split(\"\\\\s+\");\n        for (String fruit : fruits)\
    \ {\n            if (fruit.equals(\"apple\")) {\n                apples++;\n \
    \           } else if (fruit.equals(\"orange\")) {\n                oranges++;\n\
    \            } else if (fruit.equals(\"mango\")) {\n                mango++;\n\
    \            }\n        }\n        return mango;", "        int apples = 0;\n\
    \        int oranges = 0;\n        int mango = 0;\n        String[] fruits = s.split(\"\
    \\\\s+\");\n        for (String fruit : fruits) {\n            if (fruit.equals(\"\
    apple\")) {\n                apples++;\n            } else if (fruit.equals(\"\
    orange\")) {\n                oranges++;\n            } else if (fruit.equals(\"\
    mango\")) {\n                mango++;\n            }\n        }\n        return\
    \ mango;", "        int apples = 0;\n        int oranges = 0;\n        int mango\
    \ = 0;\n        String[] fruits = s.split(\"\\\\s+\");\n        for (String fruit\
    \ : fruits) {\n            if (fruit.equals(\"apple\")) {\n                apples++;\n\
    \            } else if (fruit.equals(\"orange\")) {\n                oranges++;\n\
    \            } else if (fruit.equals(\"mango\")) {\n                mango++;\n\
    \            }\n        }\n        return mango;", "        List<Integer> apples\
    \ = new ArrayList<>();\n        List<Integer> oranges = new ArrayList<>();\n \
    \       List<Integer> mango = new ArrayList<>();\n        String[] arr = s.split(\"\
    \\\\s+\");\n        for(int i = 0; i < arr.length; i++) {\n            if(arr[i].equals(\"\
    apple\")) {\n                apples.add(Integer.parseInt(arr[i+1]));\n       \
    \         i++;\n            } else if(arr[i].equals(\"orange\")) {\n         \
    \       oranges.add(Integer.parseInt(arr[i+1]));\n                i++;\n     \
    \       } else if(arr[i].equals(\"mango\")) {\n                mango.add(Integer.parseInt(arr[i+1]));\n\
    \                i++;\n            }\n        }\n        List<Integer> appleList\
    \ = apples.stream().distinct().collect(Collectors.toList());\n        List<Integer>\
    \ orangeList = oranges.stream().distinct().collect(Collectors.toList());\n   \
    \     List<Integer> mangoList = mango.stream().distinct().collect(Collectors.toList());\n\
    \        List<Integer> appleAndOrangeList = appleList.stream().filter(i -> orangeList.contains(i)).collect(Collectors.toList());\n\
    \        List<Integer> appleAndMangoList = appleAndOrangeList.stream().filter(i\
    \ -> mangoList.contains(i)).collect(Collectors.toList());\n        return appleAndMangoList.size();",
  "        int apples = 0, oranges = 0, mangos = 0;\n        String[] fruits = s.split(\"\
    \ \");\n        for (String fruit : fruits) {\n            if (fruit.equals(\"\
    apple\")) {\n                apples++;\n            } else if (fruit.equals(\"\
    orange\")) {\n                oranges++;\n            } else if (fruit.equals(\"\
    mango\")) {\n                mangos++;\n            }\n        }\n        return\
    \ apples + oranges + mangos;", "        int apples = 0;\n        int oranges =\
    \ 0;\n        int mango = 0;\n        String[] fruits = s.split(\"\\\\s+\");\n\
    \        for (String fruit : fruits) {\n            if (fruit.equals(\"apple\"\
    )) {\n                apples++;\n            } else if (fruit.equals(\"orange\"\
    )) {\n                oranges++;\n            } else if (fruit.equals(\"mango\"\
    )) {\n                mango++;\n            }\n        }\n        return mango;",
  "        int apples = 0, oranges = 0, mangos = 0;\n        String[] fruits = s.split(\"\
    \ \");\n        for (String fruit : fruits) {\n            if (fruit.equals(\"\
    apple\")) {\n                apples++;\n            } else if (fruit.equals(\"\
    orange\")) {\n                oranges++;\n            } else if (fruit.equals(\"\
    mango\")) {\n                mangos++;\n            }\n        }\n        return\
    \ apples + oranges + mangos;", "        int apples = 0;\n        int oranges =\
    \ 0;\n        int mango = 0;\n        String[] arr = s.split(\"\\\\s+\");\n  \
    \      Arrays.sort(arr);\n        for(int i = 0; i < arr.length; i++) {\n    \
    \        if(arr[i].equals(\"apple\")) {\n                apples++;\n         \
    \   } else if(arr[i].equals(\"orange\")) {\n                oranges++;\n     \
    \       } else if(arr[i].equals(\"mango\")) {\n                mango++;\n    \
    \        }\n        }\n        return mango;", "        String[] fruits = {\"\
    apple\", \"mango\", \"orange\"};\n        String[] fruitsInBasket = s.split(\"\
    \\\\s+\");\n        List<String> basketFruits = new ArrayList<>();\n        List<Integer>\
    \ basketFruitsCount = new ArrayList<>();\n        for(int i = 0; i < fruitsInBasket.length;\
    \ i++) {\n            basketFruits.add(fruitsInBasket[i]);\n            basketFruitsCount.add(Integer.parseInt(fruitsInBasket[i]));\n\
    \        }\n        List<Integer> mangoFruitsCount = basketFruitsCount.stream().filter(i\
    \ -> i.equals(fruits[1])).collect(Collectors.toList());\n        return mangoFruitsCount.size();",
  "        int apples = 0;\n        int oranges = 0;\n        int mango = 0;\n   \
    \     String[] fruits = s.split(\" \");\n        for (String fruit : fruits) {\n\
    \            if (fruit.equals(\"apple\")) {\n                apples++;\n     \
    \       } else if (fruit.equals(\"orange\")) {\n                oranges++;\n \
    \           } else if (fruit.equals(\"mango\")) {\n                mango++;\n\
    \            }\n        }\n        return mango;", "        int apples = 0;\n\
    \        int oranges = 0;\n        int mangoes = 0;\n        String[] fruits =\
    \ s.split(\"\\\\s+\");\n        for (String fruit : fruits) {\n            if\
    \ (fruit.equals(\"apple\")) {\n                apples++;\n            } else if\
    \ (fruit.equals(\"orange\")) {\n                oranges++;\n            } else\
    \ if (fruit.equals(\"mango\")) {\n                mangoes++;\n            }\n\
    \        }\n        return mangoes;", "        // write your code here\n     \
    \   int apples = 0;\n        int oranges = 0;\n        int mango = 0;\n      \
    \  int total = 0;\n        String[] array = s.split(\" \");\n        for(int i\
    \ = 0; i < array.length; i++){\n            if(array[i].equals(\"apple\")){\n\
    \                apples++;\n            }\n            if(array[i].equals(\"orange\"\
    )){\n                oranges++;\n            }\n            if(array[i].equals(\"\
    mango\")){\n                mango++;\n            }\n        }\n        total\
    \ = apples + oranges + mango;\n        if(total >= n){\n            return mango;\n\
    \        }\n        return 0;", "        int apples = 0;\n        int oranges\
    \ = 0;\n        int mango = 0;\n        int total = 0;\n        String[] arr =\
    \ s.split(\" \");\n        Arrays.sort(arr);\n        for(int i = 0; i < arr.length;\
    \ i++) {\n            if(arr[i].equals(\"apples\")) {\n                apples++;\n\
    \                total++;\n            }\n            else if(arr[i].equals(\"\
    oranges\")) {\n                oranges++;\n                total++;\n        \
    \    }\n            else if(arr[i].equals(\"mango\")) {\n                mango++;\n\
    \                total++;\n            }\n        }\n        return mango;", " \
    \       int apples = 0;\n        int oranges = 0;\n        int mango = 0;\n  \
    \      String[] fruits = s.split(\"\\\\s+\");\n        for(String fruit : fruits)\
    \ {\n            if(fruit.equals(\"apple\")) {\n                apples++;\n  \
    \          } else if(fruit.equals(\"orange\")) {\n                oranges++;\n\
    \            } else if(fruit.equals(\"mango\")) {\n                mango++;\n\
    \            }\n        }\n        return mango;", "        int apples = 0;\n\
    \        int oranges = 0;\n        int mango = 0;\n        String[] fruits = s.split(\"\
    \\\\s+\");\n        for (String fruit : fruits) {\n            if (fruit.equals(\"\
    apple\")) {\n                apples++;\n            } else if (fruit.equals(\"\
    orange\")) {\n                oranges++;\n            } else if (fruit.equals(\"\
    mango\")) {\n                mango++;\n            }\n        }\n        return\
    \ mango;", "        int apples = 0;\n        int oranges = 0;\n        int mango\
    \ = 0;\n        String[] fruits = s.split(\"\\\\s+\");\n        for (String fruit\
    \ : fruits) {\n            if (fruit.equals(\"apple\")) {\n                apples++;\n\
    \            } else if (fruit.equals(\"orange\")) {\n                oranges++;\n\
    \            } else if (fruit.equals(\"mango\")) {\n                mango++;\n\
    \            }\n        }\n        return mango;", "        int apples = 0;\n\
    \        int oranges = 0;\n        int mango = 0;\n        String[] fruits = s.split(\"\
    \\\\s+\");\n        for (String fruit : fruits) {\n            if (fruit.equals(\"\
    apple\")) {\n                apples++;\n            } else if (fruit.equals(\"\
    orange\")) {\n                oranges++;\n            } else if (fruit.equals(\"\
    mango\")) {\n                mango++;\n            }\n        }\n        return\
    \ apples + oranges + mango;", "        int apples = 0;\n        int oranges =\
    \ 0;\n        int mango = 0;\n        String[] fruits = s.split(\"\\\\s+\");\n\
    \        for (String fruit : fruits) {\n            if (fruit.equals(\"apple\"\
    )) {\n                apples++;\n            } else if (fruit.equals(\"orange\"\
    )) {\n                oranges++;\n            } else if (fruit.equals(\"mango\"\
    )) {\n                mango++;\n            }\n        }\n        return mango;",
  "        // Your code goes here\n        String[] fruits = {\"apple\", \"orange\"\
    , \"mango\"};\n        String[] fruitsInBasket = s.split(\"\\\\s+\");\n      \
    \  Map<String, Integer> fruitMap = new HashMap<>();\n        fruitMap.put(fruits[0],\
    \ 1);\n        fruitMap.put(fruits[1], 1);\n        fruitMap.put(fruits[2], 1);\n\
    \        fruitMap.put(fruits[3], 1);\n        fruitMap.put(fruits[4], 1);\n  \
    \      fruitMap.put(fruits[5], 1);\n        fruitMap.put(fruits[6], 1);\n    \
    \    fruitMap.put(fruits[7], 1);\n        fruitMap.put(fruits[8], 1);\n      \
    \  fruitMap.put(fruits[9], 1);\n        fruitMap.put(fruits[10], 1);\n       \
    \ fruitMap.put(fruits[11], 1);\n        fruitMap.put(fruits[12], 1);\n       \
    \ fruitMap.put(fruits[13], 1);\n        fruitMap.put(fruits[14], 1);\n       \
    \ fruitMap.put(fruits[15], 1);\n        fruitMap.put(fruits[16], 1);\n       \
    \ fruitMap.put(fruits[17], 1);\n        fruitMap.put(fruits[18], 1);\n       \
    \ fruitMap.put(fruits[19], 1);\n        fruitMap.put(fruits[20], 1);\n       \
    \ fruitMap.put(fruits[21], 1);\n        fruitMap.put(fruits[22], 1);\n       \
    \ fruitMap.put(fruits[23], 1);\n        fruitMap.put(fruits[24], 1);\n       \
    \ fruitMap.put(fruits[25], 1);\n        fruitMap.put(fruits[26], 1);\n       \
    \ fruitMap.put(fruits[27], 1);\n        fruitMap.put(fruits[28], 1);\n       \
    \ fruitMap.put(fruits[29], 1);\n        fruitMap.put(fruits[30], 1);\n       \
    \ fruitMap.put(fruits[31], 1);\n        fruitMap.put(fruits[32], 1);\n       \
    \ fruitMap.put(fruits[33], 1);\n        fruitMap.put(fruits[34], 1);\n       \
    \ fruitMap.put(fruits[35], 1);\n        fruitMap.put(fruits[36], 1);\n       \
    \ fruitMap.put(fruits[37], 1);\n        fruitMap.put(fruits[38], 1);\n       \
    \ fruitMap.put(fruits[39], 1);", "        String[] fruits = {\"apple\", \"orange\"\
    , \"mango\"};\n        String[] apples = {\"apple\", \"mango\"};\n        String[]\
    \ oranges = {\"orange\"};\n        String[] mangos = {\"mango\"};\n        String[]\
    \ fruitArray = s.split(\"\\\\s+\");\n        String[] appleArray = apples.toArray(new\
    \ String[0]);\n        String[] orangeArray = oranges.toArray(new String[0]);\n\
    \        String[] mangoArray = mangos.toArray(new String[0]);\n        String[]\
    \ fruitArray2 = fruitArray.toArray(new String[0]);\n        String[] appleArray2\
    \ = appleArray.toArray(new String[0]);\n        String[] orangeArray2 = orangeArray.toArray(new\
    \ String[0]);\n        String[] mangoArray2 = mangoArray.toArray(new String[0]);\n\
    \        int appleCount = 0;\n        int orangeCount = 0;\n        int mangoCount\
    \ = 0;\n        int appleCount2 = 0;\n        int orangeCount2 = 0;\n        int\
    \ mangoCount2 = 0;\n        int appleCount3 = 0;\n        int orangeCount3 = 0;\n\
    \        int mangoCount3 = 0;\n        int appleCount4 = 0;\n        int orangeCount4\
    \ = 0;\n        int mangoCount4 = 0;\n        int appleCount5 = 0;\n        int\
    \ orangeCount5 = 0;\n        int mangoCount5 = 0;\n        int appleCount6 = 0;\n\
    \        int orangeCount6 = 0;\n        int mangoCount6 = 0;\n        int appleCount7\
    \ = 0;\n        int orangeCount7 = 0;\n        int mangoCount7 = 0;\n        int\
    \ appleCount8 = 0;\n        int orangeCount8 = 0;\n        int mangoCount8 = 0;\n\
    \        int appleCount9 = 0;\n        int orangeCount9 = 0;\n        int mangoCount9\
    \ = 0;\n        int appleCount10 = 0;\n        int orangeCount10 = 0;\n      \
    \  int mangoCount10 = 0;\n        int appleCount11 = 0;\n        int orangeCount11\
    \ = 0;\n        int mangoCount11 = 0;\n        int appleCount12 = 0;\n       \
    \ int orangeCount12 = 0;\n        int mangoCount12 = 0;\n        int appleCount13\
    \ = 0;\n        int orangeCount13 = 0;\n        int mangoCount13 = 0;\n      \
    \  int appleCount14 = 0;\n        int orangeCount14 = 0;\n        int mangoCount14\
    \ = 0;\n        int appleCount15 = 0;\n        int orangeCount15 = 0;\n      \
    \  int mangoCount15 = 0;\n        int appleCount16 = 0;\n        int orangeCount16\
    \ = 0;\n        int mangoCount16 = 0;\n        int appleCount17 = 0;\n       \
    \ int orangeCount17 = 0;\n        int mangoCount17 = 0;\n        int appleCount18\
    \ = 0;\n        int orangeCount18 = 0;\n        int mangoCount18 = 0;\n      \
    \  int appleCount19 = 0;\n        int orangeCount19 = 0;\n        int mangoCount19\
    \ = 0;\n        int appleCount20 = 0;\n        int orangeCount20 = 0;\n      \
    \  int mangoCount20 = 0;\n", "        int apples = 0;\n        int oranges = 0;\n\
    \        int mango = 0;\n        String[] fruits = s.split(\"\\\\s+\");\n    \
    \    Arrays.stream(fruits).forEach(s -> {\n            if (s.equals(\"apple\"\
    )) {\n                apples++;\n            } else if (s.equals(\"orange\"))\
    \ {\n                oranges++;\n            } else if (s.equals(\"mango\")) {\n\
    \                mango++;\n            }\n        });\n        return mango;",
  "        // write your code here\n        int apples = 0, oranges = 0, mangos =\
    \ 0;\n        String[] fruits = s.split(\"\\\\s+\");\n        for(String fruit\
    \ : fruits) {\n            if(fruit.equals(\"apple\")) {\n                apples++;\n\
    \            } else if(fruit.equals(\"orange\")) {\n                oranges++;\n\
    \            } else if(fruit.equals(\"mango\")) {\n                mangos++;\n\
    \            }\n        }\n        return mangos;", "        int apples = 0;\n\
    \        int oranges = 0;\n        int mango = 0;\n        String[] fruits = s.split(\"\
    \\\\s+\");\n        Arrays.sort(fruits);\n        for (String fruit : fruits)\
    \ {\n            if (fruit.equals(\"apple\")) {\n                apples++;\n \
    \           } else if (fruit.equals(\"orange\")) {\n                oranges++;\n\
    \            } else if (fruit.equals(\"mango\")) {\n                mango++;\n\
    \            }\n        }\n        return mango;", "        int apples = 0;\n\
    \        int oranges = 0;\n        int mango = 0;\n        String[] fruits = s.split(\"\
    \ \");\n        for(int i = 0; i < fruits.length; i++) {\n            if(fruits[i].equals(\"\
    apple\")) {\n                apples++;\n            }\n            if(fruits[i].equals(\"\
    mango\")) {\n                mango++;\n            }\n            if(fruits[i].equals(\"\
    orange\")) {\n                oranges++;\n            }\n        }\n        return\
    \ mango;", "        int apples = 0;\n        int oranges = 0;\n        int mango\
    \ = 0;\n        String[] fruits = s.split(\"\\\\s+\");\n        Arrays.sort(fruits);\n\
    \        Arrays.stream(fruits).forEach(e -> {\n            if (e.equals(\"apple\"\
    )) {\n                apples++;\n            } else if (e.equals(\"orange\"))\
    \ {\n                oranges++;\n            } else if (e.equals(\"mango\")) {\n\
    \                mango++;\n            }\n        });\n        return mango;",
  "        String[] fruits = {\"apple\", \"orange\", \"mango\"};\n        String[]\
    \ fruitsInBasket = s.split(\"\\\\s+\");\n        int[] count = new int[fruits.length];\n\
    \        for (int i = 0; i < fruitsInBasket.length; i++) {\n            count[fruitsInBasket[i].charAt(0)\
    \ - 'a']++;\n        }\n        int total = 0;\n        for (int i = 0; i < fruits.length;\
    \ i++) {\n            total += count[i];\n        }\n        return total - n;",
  "        int apples = 0;\n        int oranges = 0;\n        int mango = 0;\n   \
    \     String[] fruits = s.split(\" \");\n        for(int i = 0; i < fruits.length;\
    \ i++) {\n            if(fruits[i].equals(\"apple\")) {\n                apples++;\n\
    \            } else if(fruits[i].equals(\"orange\")) {\n                oranges++;\n\
    \            } else if(fruits[i].equals(\"mango\")) {\n                mango++;\n\
    \            }\n        }\n        return mango;", "        // write your code\
    \ here\n        int apples = 0;\n        int oranges = 0;\n        int mango =\
    \ 0;\n        String[] arr = s.split(\" \");\n        for(int i = 0; i < arr.length;\
    \ i++) {\n            if(arr[i].equals(\"apple\")) {\n                apples++;\n\
    \            }\n            else if(arr[i].equals(\"orange\")) {\n           \
    \     oranges++;\n            }\n            else if(arr[i].equals(\"mango\"))\
    \ {\n                mango++;\n            }\n        }\n        return mango;",
  "        List<String> fruits = new ArrayList<>();\n        fruits.add(\"mango\"\
    );\n        fruits.add(\"apple\");\n        fruits.add(\"orange\");\n        fruits.add(\"\
    apple\");\n        fruits.add(\"mango\");\n        fruits.add(\"apple\");\n  \
    \      fruits.add(\"orange\");\n        fruits.add(\"apple\");\n        fruits.add(\"\
    mango\");\n        fruits.add(\"apple\");\n        fruits.add(\"orange\");\n \
    \       fruits.add(\"apple\");\n        fruits.add(\"mango\");\n        fruits.add(\"\
    apple\");\n        fruits.add(\"orange\");\n        fruits.add(\"apple\");\n \
    \       fruits.add(\"mango\");\n        fruits.add(\"apple\");\n        fruits.add(\"\
    orange\");\n        fruits.add(\"apple\");\n        fruits.add(\"mango\");\n \
    \       fruits.add(\"apple\");\n        fruits.add(\"orange\");\n        fruits.add(\"\
    apple\");\n        fruits.add(\"mango\");\n        fruits.add(\"apple\");\n  \
    \      fruits.add(\"orange\");\n        fruits.add(\"apple\");\n        fruits.add(\"\
    mango\");\n        fruits.add(\"apple\");\n        fruits.add(\"orange\");\n \
    \       fruits.add(\"apple\");\n        fruits.add(\"mango\");\n        fruits.add(\"\
    apple\");\n        fruits.add(\"orange\");\n        fruits.add(\"apple\");\n \
    \       fruits.add(\"mango\");\n        fruits.add(\"apple\");\n        fruits.add(\"\
    orange\");\n        fruits.add(\"apple\");\n        fruits.add(\"mango\");\n \
    \       fruits.add(\"apple\");\n        fruits.add(\"orange\");\n        fruits.add(\"\
    apple\");\n        fruits.add(\"mango\");\n        fruits.add(\"apple\");\n  \
    \      fruits.add(\"orange\");\n        fruits.add(\"apple\");\n        fruits.add(\"\
    mango\");\n        fruits.add(\"apple\");\n        fruits.add(\"orange\");\n \
    \       fruits.add(\"apple\");\n        fruits.add(\"mango\");\n        fruits.add(\"\
    apple\");\n        fruits.add(\"orange\");\n        fruits.add(\"apple\");\n \
    \       fruits.add(\"mango\");\n        fruits.add(\"apple\");\n        fruits.add(\"\
    orange\");\n        fruits.add(\"apple\");\n        fruits.add(\"mango\");\n \
    \       fruits.add(\"apple\");\n        fruits.add(\"orange\");\n        fruits.add(\"\
    apple\");\n        fruits.add(\"mango\");\n        fruits.add(\"apple\");\n  \
    \      fruits.add(\"orange\");\n        fruits.add(\"apple\");\n        fruits.add(\"\
    mango\");\n        fruits.add", "        String[] fruits = {\"apple\", \"orange\"\
    , \"mango\"};\n        String[] fruitsInBasket = s.split(\"\\\\s+\");\n      \
    \  int apples = Integer.parseInt(fruitsInBasket[0]);\n        int oranges = Integer.parseInt(fruitsInBasket[1]);\n\
    \        int mangos = Integer.parseInt(fruitsInBasket[2]);\n        int totalFruits\
    \ = apples + oranges + mangos;\n        int totalFruitsInBasket = apples + oranges\
    \ + mangos;\n        int mangoFruits = totalFruits - totalFruitsInBasket;\n  \
    \      return mangoFruits;", "        // your code here\n        String[] fruits\
    \ = {\"apple\", \"orange\", \"mango\"};\n        String[] fruitArray = s.split(\"\
    \\\\s+\");\n        int count = 0;\n        for(int i = 0; i < fruitArray.length;\
    \ i++) {\n            if(fruitArray[i].equals(\"apple\")) {\n                count\
    \ += fruitArray[i+1].equals(\"orange\") ? 1 : 0;\n            }\n            if(fruitArray[i].equals(\"\
    orange\")) {\n                count += fruitArray[i+1].equals(\"apple\") ? 1 :\
    \ 0;\n            }\n            if(fruitArray[i].equals(\"mango\")) {\n     \
    \           count += fruitArray[i+1].equals(\"apple\") ? 1 : 0;\n            }\n\
    \        }\n        return count;", "        int apples = 0, oranges = 0, mangos\
    \ = 0;\n        String[] fruits = s.split(\" \");\n        Arrays.stream(fruits).forEach(e\
    \ -> {\n            if (e.equals(\"apples\")) {\n                apples++;\n \
    \           } else if (e.equals(\"oranges\")) {\n                oranges++;\n\
    \            } else if (e.equals(\"mango\")) {\n                mangos++;\n  \
    \          }\n        });\n        return mangos;", "        // your code here\n\
    \        int apple = 0;\n        int orange = 0;\n        int mango = 0;\n   \
    \     int total = 0;\n        String[] array = s.split(\"\\\\s+\");\n        for(int\
    \ i = 0; i < array.length; i++) {\n            if(array[i].equals(\"apple\"))\
    \ {\n                apple++;\n                total++;\n            }\n     \
    \       else if(array[i].equals(\"orange\")) {\n                orange++;\n  \
    \              total++;\n            }\n            else if(array[i].equals(\"\
    mango\")) {\n                mango++;\n                total++;\n            }\n\
    \        }\n        return total;", "        // write your code here\n       \
    \ String[] fruits = {\"apple\", \"orange\", \"mango\"};\n        String[] fruitsInBasket\
    \ = s.split(\"\\\\s+\");\n        int[] count = new int[fruits.length];\n    \
    \    for(int i = 0; i < fruitsInBasket.length; i++) {\n            count[fruitsInBasket[i].charAt(0)\
    \ - 'a']++;\n        }\n        int mango = 0;\n        for(int i = 0; i < fruits.length;\
    \ i++) {\n            if(count[i] > 0 && count[i] <= n) {\n                mango\
    \ += count[i];\n            }\n        }\n        return mango;", "        int\
    \ apples = 0;\n        int oranges = 0;\n        int mango = 0;\n        String[]\
    \ arr = s.split(\" \");\n        Arrays.sort(arr);\n        apples = Integer.parseInt(arr[0]);\n\
    \        oranges = Integer.parseInt(arr[1]);\n        mango = Integer.parseInt(arr[2]);\n\
    \        return apples + oranges + mango;", "        int apples = 0;\n       \
    \ int oranges = 0;\n        int mango = 0;\n        String[] fruits = s.split(\"\
    \ \");\n        for (String fruit : fruits) {\n            if (fruit.equals(\"\
    apple\")) {\n                apples++;\n            } else if (fruit.equals(\"\
    orange\")) {\n                oranges++;\n            } else if (fruit.equals(\"\
    mango\")) {\n                mango++;\n            }\n        }\n        return\
    \ mango;", "        String[] fruits = {\"apple\", \"orange\", \"mango\"};\n  \
    \      String[] basket = s.split(\"\\\\s+\");\n        int[] count = new int[fruits.length];\n\
    \        Arrays.fill(count, 0);\n        for (int i = 0; i < basket.length; i++)\
    \ {\n            count[fruits.indexOf(basket[i])]++;\n        }\n        int sum\
    \ = 0;\n        for (int i = 0; i < fruits.length; i++) {\n            sum +=\
    \ count[i];\n        }\n        return sum;", "        // your code here\n   \
    \     int apples = 0;\n        int oranges = 0;\n        int mango = 0;\n    \
    \    String[] fruits = s.split(\" \");\n        for(int i = 0; i < fruits.length;\
    \ i++) {\n            if(fruits[i].equals(\"apple\")) {\n                apples++;\n\
    \            } else if(fruits[i].equals(\"orange\")) {\n                oranges++;\n\
    \            } else if(fruits[i].equals(\"mango\")) {\n                mango++;\n\
    \            }\n        }\n        return mango;", "        int apples = 0;\n\
    \        int oranges = 0;\n        int mango = 0;\n        String[] fruits = s.split(\"\
    \\\\s+\");\n        for (String fruit : fruits) {\n            if (fruit.equals(\"\
    apple\")) {\n                apples++;\n            } else if (fruit.equals(\"\
    orange\")) {\n                oranges++;\n            } else if (fruit.equals(\"\
    mango\")) {\n                mango++;\n            }\n        }\n        return\
    \ mango;", "        int apples = 0, oranges = 0, mangos = 0;\n        String[]\
    \ fruits = s.split(\"\\\\s+\");\n        for (String fruit : fruits) {\n     \
    \       if (fruit.equals(\"apple\")) {\n                apples++;\n          \
    \  } else if (fruit.equals(\"orange\")) {\n                oranges++;\n      \
    \      } else if (fruit.equals(\"mango\")) {\n                mangos++;\n    \
    \        }\n        }\n        return apples + oranges + mangos;", "        //\
    \ your code here\n        int apples = 0;\n        int oranges = 0;\n        int\
    \ mango = 0;\n        String[] fruits = s.split(\" \");\n        Arrays.sort(fruits);\n\
    \        for(int i = 0; i < fruits.length; i++){\n            if(fruits[i].equals(\"\
    apple\")){\n                apples++;\n            }\n            else if(fruits[i].equals(\"\
    orange\")){\n                oranges++;\n            }\n            else if(fruits[i].equals(\"\
    mango\")){\n                mango++;\n            }\n        }\n        int totalApples\
    \ = apples;\n        int totalOranges = oranges;\n        int totalMango = mango;\n\
    \        int totalFruits = totalApples + totalOranges + totalMango;\n        int\
    \ totalFruitsPerApple = totalApples / n;\n        int totalFruitsPerOrange = totalOranges\
    \ / n;\n        int totalFruitsPerMango = totalMango / n;\n        int totalFruitsPerFruit\
    \ = totalFruits / n;\n        int totalFruitsPerFruitPerApple = totalFruitsPerApple;\n\
    \        int totalFruitsPerFruitPerOrange = totalFruitsPerOrange;\n        int\
    \ totalFruitsPerFruitPerMango = totalFruitsPerMango;\n        int totalFruitsPerFruitPerFruit\
    \ = totalFruitsPerFruit;\n        int totalFruitsPerFruitPerFruitPerApple = totalFruitsPerFruitPerApple;\n\
    \        int totalFruitsPerFruitPerFruitPerOrange = totalFruitsPerFruitPerOrange;\n\
    \        int totalFruitsPerFruitPerFruitPerMango = totalFruitsPerFruitPerMango;\n\
    \        int totalFruitsPerFruitPerFruitPerFruit = totalFruitsPerFruitPerFruit;\n\
    \        int totalFruitsPerFruitPerFruitPerFruitPerApple = totalFruitsPerFruitPerFruitPerApple;\n\
    \        int totalFruitsPerFruitPerFruitPerFruitPerOrange = totalFruitsPerFruitPerFruitPerOrange;\n\
    \        int totalFruitsPerFruitPerFruitPerFruitPerMango = totalFruitsPerFruitPerFruitPerM",
  "        int apples = 0;\n        int oranges = 0;\n        int mango = 0;\n   \
    \     String[] fruits = s.split(\"\\\\s+\");\n        Arrays.sort(fruits);\n \
    \       for (String fruit : fruits) {\n            if (fruit.equals(\"apple\"\
    )) {\n                apples++;\n            } else if (fruit.equals(\"orange\"\
    )) {\n                oranges++;\n            } else if (fruit.equals(\"mango\"\
    )) {\n                mango++;\n            }\n        }\n        return mango;",
  "        int apples = 0;\n        int oranges = 0;\n        int mango = 0;\n   \
    \     String[] fruits = s.split(\"\\\\s+\");\n        for (String fruit : fruits)\
    \ {\n            if (fruit.equals(\"apple\")) {\n                apples++;\n \
    \           } else if (fruit.equals(\"orange\")) {\n                oranges++;\n\
    \            } else if (fruit.equals(\"mango\")) {\n                mango++;\n\
    \            }\n        }\n        return apples + oranges + mango;", "      \
    \  // Write your code here\n        int apples = 0;\n        int oranges = 0;\n\
    \        int mango = 0;\n        String[] fruits = s.split(\"\\\\s+\");\n    \
    \    for(int i = 0; i < fruits.length; i++) {\n            if(fruits[i].equals(\"\
    apple\")) {\n                apples++;\n            }\n            if(fruits[i].equals(\"\
    orange\")) {\n                oranges++;\n            }\n            if(fruits[i].equals(\"\
    mango\")) {\n                mango++;\n            }\n        }\n        return\
    \ mango;", "        int apples = 0;\n        int oranges = 0;\n        int mango\
    \ = 0;\n        String[] fruits = s.split(\" \");\n        for (String fruit :\
    \ fruits) {\n            if (fruit.equals(\"apple\")) {\n                apples++;\n\
    \            } else if (fruit.equals(\"orange\")) {\n                oranges++;\n\
    \            } else if (fruit.equals(\"mango\")) {\n                mango++;\n\
    \            }\n        }\n        return mango;", "        int apples = 0;\n\
    \        int oranges = 0;\n        int mango = 0;\n        int total = 0;\n  \
    \      String[] arr = s.split(\" \");\n        for(int i = 0; i < arr.length;\
    \ i++) {\n            if(arr[i].equals(\"apples\")) {\n                apples++;\n\
    \                total += apples;\n            }\n            else if(arr[i].equals(\"\
    oranges\")) {\n                oranges++;\n                total += oranges;\n\
    \            }\n            else if(arr[i].equals(\"mango\")) {\n            \
    \    mango++;\n                total += mango;\n            }\n        }\n   \
    \     return total;", '        ', "        int apples = 0;\n        int oranges\
    \ = 0;\n        int mango = 0;\n        String[] fruits = s.split(\"\\\\s+\");\n\
    \        for (String fruit : fruits) {\n            if (fruit.equals(\"apple\"\
    )) {\n                apples++;\n            } else if (fruit.equals(\"orange\"\
    )) {\n                oranges++;\n            } else if (fruit.equals(\"mango\"\
    )) {\n                mango++;\n            }\n        }\n        return mango;",
  "        // write your code here\n        String[] fruits = {\"apple\", \"orange\"\
    , \"mango\"};\n        String[] fruitsInBasket = s.split(\"\\\\s+\");\n      \
    \  int[] fruitsInBasketCount = new int[fruits.length];\n        for(int i = 0;\
    \ i < fruitsInBasketCount.length; i++){\n            fruitsInBasketCount[i] =\
    \ Integer.parseInt(fruitsInBasket[i]);\n        }\n        Arrays.sort(fruitsInBasketCount);\n\
    \        int mangoCount = 0;\n        for(int i = 0; i < fruitsInBasketCount.length;\
    \ i++){\n            if(fruitsInBasketCount[i] > 1){\n                mangoCount\
    \ += fruitsInBasketCount[i];\n            }\n        }\n        return mangoCount;",
  "        int apples = 0;\n        int oranges = 0;\n        int mango = 0;\n   \
    \     String[] fruits = s.split(\" \");\n        Arrays.sort(fruits);\n      \
    \  Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);",
  "        int apples = 0;\n        int oranges = 0;\n        int mangoes = 0;\n \
    \       String[] fruits = s.split(\"\\\\s+\");\n        Arrays.stream(fruits).forEach(s\
    \ -> {\n            if (s.equals(\"apple\")) {\n                apples++;\n  \
    \          } else if (s.equals(\"orange\")) {\n                oranges++;\n  \
    \          } else if (s.equals(\"mango\")) {\n                mangoes++;\n   \
    \         }\n        });\n        return apples + oranges + mangoes;", "     \
    \   int apples = 0;\n        int oranges = 0;\n        int mango = 0;\n      \
    \  String[] fruits = s.split(\"\\\\s+\");\n        for (String fruit : fruits)\
    \ {\n            if (fruit.equals(\"apple\")) {\n                apples++;\n \
    \           } else if (fruit.equals(\"orange\")) {\n                oranges++;\n\
    \            } else if (fruit.equals(\"mango\")) {\n                mango++;\n\
    \            }\n        }\n        return mango;", "        Map<String, Integer>\
    \ map = new HashMap<>();\n        String[] array = s.split(\" \");\n        for(int\
    \ i = 0; i < array.length; i++) {\n            String fruit = array[i];\n    \
    \        int count = map.get(fruit);\n            map.put(fruit, count + 1);\n\
    \        }\n        int total = 0;\n        for(String fruit : map.keySet()) {\n\
    \            int count = map.get(fruit);\n            if(count == n) {\n     \
    \           total += count;\n            }\n        }\n        return total;",
  "        int apples = 0;\n        int oranges = 0;\n        int mango = 0;\n   \
    \     String[] fruits = s.split(\"\\\\s+\");\n        Arrays.sort(fruits);\n \
    \       for(int i = 0; i < fruits.length; i++) {\n            if(fruits[i].equals(\"\
    apple\")) {\n                apples++;\n            } else if(fruits[i].equals(\"\
    orange\")) {\n                oranges++;\n            } else if(fruits[i].equals(\"\
    mango\")) {\n                mango++;\n            }\n        }\n        return\
    \ mango;", "        int apples = 0, oranges = 0, mangos = 0;\n        String[]\
    \ fruits = s.split(\" \");\n        Arrays.stream(fruits).forEach(s -> {\n   \
    \         if (s.equals(\"apple\")) {\n                apples++;\n            }\
    \ else if (s.equals(\"orange\")) {\n                oranges++;\n            }\
    \ else if (s.equals(\"mango\")) {\n                mangos++;\n            }\n\
    \        });\n        return mangos;", "        String[] fruits = {\"apple\",\
    \ \"orange\", \"mango\"};\n        String[] fruitsInBasket = s.split(\"\\\\s+\"\
    );\n        int[] apples = new int[fruits.length];\n        int[] oranges = new\
    \ int[fruits.length];\n        int[] mangos = new int[fruits.length];\n      \
    \  for (int i = 0; i < fruits.length; i++) {\n            apples[i] = fruitsInBasket.indexOf(fruits[i]);\n\
    \            oranges[i] = fruitsInBasket.indexOf(fruits[i], apples[i] + 1);\n\
    \            mangos[i] = fruitsInBasket.indexOf(fruits[i], oranges[i] + 1);\n\
    \        }\n        int mangoCount = 0;\n        for (int i = 0; i < fruits.length;\
    \ i++) {\n            if (apples[i] != -1 && oranges[i] != -1 && mangos[i] !=\
    \ -1) {\n                if (apples[i] == oranges[i] && oranges[i] == mangos[i])\
    \ {\n                    mangoCount++;\n                }\n            }\n   \
    \     }\n        return mangoCount;", "        int apples = 0;\n        int oranges\
    \ = 0;\n        int mango = 0;\n        String[] fruits = s.split(\" \");\n  \
    \      for(int i = 0; i < fruits.length; i++) {\n            if(fruits[i].equals(\"\
    apple\")) {\n                apples++;\n            } else if(fruits[i].equals(\"\
    orange\")) {\n                oranges++;\n            } else if(fruits[i].equals(\"\
    mango\")) {\n                mango++;\n            }\n        }\n        return\
    \ mango;", "        int apples = 0;\n        int oranges = 0;\n        int mango\
    \ = 0;\n        String[] fruits = s.split(\"\\\\s+\");\n        Arrays.stream(fruits).forEach(s\
    \ -> {\n            if (s.equals(\"apple\")) {\n                apples++;\n  \
    \          } else if (s.equals(\"orange\")) {\n                oranges++;\n  \
    \          } else if (s.equals(\"mango\")) {\n                mango++;\n     \
    \       }\n        });\n        return mango;", "        int apples = 0;\n   \
    \     int oranges = 0;\n        int mango = 0;\n        String[] fruits = s.split(\"\
    \\\\s+\");\n        Arrays.sort(fruits);\n        for (String fruit : fruits)\
    \ {\n            if (fruit.equals(\"apple\")) {\n                apples++;\n \
    \           } else if (fruit.equals(\"orange\")) {\n                oranges++;\n\
    \            } else if (fruit.equals(\"mango\")) {\n                mango++;\n\
    \            }\n        }\n        return mango;", "        \n        \n     \
    \   \n        \n        \n        \n        \n        \n        \n        \n \
    \       \n        \n        \n        \n        \n        \n        \n       \
    \ \n        \n        \n        \n        \n        \n        \n        \n   \
    \     \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n", "        int apples = 0;\n        int oranges = 0;\n        int mango\
    \ = 0;\n        String[] fruits = s.split(\"\\\\s+\");\n        for (String fruit\
    \ : fruits) {\n            if (fruit.equals(\"apple\")) {\n                apples++;\n\
    \            } else if (fruit.equals(\"orange\")) {\n                oranges++;\n\
    \            } else if (fruit.equals(\"mango\")) {\n                mango++;\n\
    \            }\n        }\n        return mango;", "        String[] fruits =\
    \ {\"apple\", \"orange\", \"mango\"};\n        int[] count = {0, 0, 0};\n    \
    \    String[] fruitNames = {\"apple\", \"orange\", \"mango\"};\n        int[]\
    \ counts = {0, 0, 0};\n        String[] fruitNames2 = {\"apple\", \"orange\",\
    \ \"mango\"};\n        int[] counts2 = {0, 0, 0};\n        String[] fruitNames3\
    \ = {\"apple\", \"orange\", \"mango\"};\n        int[] counts3 = {0, 0, 0};\n\
    \        String[] fruitNames4 = {\"apple\", \"orange\", \"mango\"};\n        int[]\
    \ counts4 = {0, 0, 0};\n        String[] fruitNames5 = {\"apple\", \"orange\"\
    , \"mango\"};\n        int[] counts5 = {0, 0, 0};\n        String[] fruitNames6\
    \ = {\"apple\", \"orange\", \"mango\"};\n        int[] counts6 = {0, 0, 0};\n\
    \        String[] fruitNames7 = {\"apple\", \"orange\", \"mango\"};\n        int[]\
    \ counts7 = {0, 0, 0};\n        String[] fruitNames8 = {\"apple\", \"orange\"\
    , \"mango\"};\n        int[] counts8 = {0, 0, 0};\n        String[] fruitNames9\
    \ = {\"apple\", \"orange\", \"mango\"};\n        int[] counts9 = {0, 0, 0};\n\
    \        String[] fruitNames10 = {\"apple\", \"orange\", \"mango\"};\n       \
    \ int[] counts10 = {0, 0, 0};\n        String[] fruitNames11 = {\"apple\", \"\
    orange\", \"mango\"};\n        int[] counts11 = {0, 0, 0};\n        String[] fruitNames12\
    \ = {\"apple\", \"orange\", \"mango\"};\n        int[] counts12 = {0, 0, 0};\n\
    \        String[] fruitNames13 = {\"apple\", \"orange\", \"mango\"};\n       \
    \ int[] counts13 = {0, 0, 0};\n        String[] fruitNames14 = {\"apple\", \"\
    orange\", \"mango\"};\n        int[] counts14 = {0, 0, 0};\n        String[] fruitNames15\
    \ = {\"apple\", \"orange\", \"mango\"};\n        int[] counts15 = {0, 0, 0};\n\
    \        String[] fruitNames16 = {\"apple\", \"orange\", \"mango\"};\n       \
    \ int[] counts16 = {0, 0, 0};\n        String[] fruitNames17 = {\"apple\", \"\
    orange\", \"mango\"};\n        int[] counts17 = {0, 0, 0};\n        String[] fruitNames18\
    \ = {\"apple\", \"orange\", \"mango\"};\n        int[] counts18 = {0, 0, 0};\n\
    \        String[] fruitNames19 = {\"apple\", \"orange\", \"mango\"};\n       \
    \ int[] counts19 = {0, 0, 0};\n        String[] fruit", "        int apples =\
    \ 0;\n        int oranges = 0;\n        int mango = 0;\n        String[] arr =\
    \ s.split(\" \");\n        for (String fruit : arr) {\n            if (fruit.equals(\"\
    apple\")) {\n                apples++;\n            } else if (fruit.equals(\"\
    orange\")) {\n                oranges++;\n            } else if (fruit.equals(\"\
    mango\")) {\n                mango++;\n            }\n        }\n        return\
    \ mango;", "        int apples = 0;\n        int oranges = 0;\n        int mango\
    \ = 0;\n        int total = 0;\n        String[] fruits = s.split(\"\\\\s+\");\n\
    \        for (String fruit : fruits) {\n            if (fruit.equals(\"apple\"\
    )) {\n                apples++;\n                total++;\n            } else\
    \ if (fruit.equals(\"orange\")) {\n                oranges++;\n              \
    \  total++;\n            } else if (fruit.equals(\"mango\")) {\n             \
    \   mango++;\n                total++;\n            }\n        }\n        return\
    \ total - n;", "        int apples = 0, oranges = 0, mangos = 0;\n        String[]\
    \ fruits = s.split(\" \");\n        for (String fruit : fruits) {\n          \
    \  if (fruit.equals(\"apple\")) {\n                apples++;\n            } else\
    \ if (fruit.equals(\"orange\")) {\n                oranges++;\n            } else\
    \ if (fruit.equals(\"mango\")) {\n                mangos++;\n            }\n \
    \       }\n        return apples + oranges + mangos;", "        int apples = 0,\
    \ oranges = 0, mangos = 0;\n        String[] fruits = s.split(\"\\\\s+\");\n \
    \       for (String fruit : fruits) {\n            if (fruit.equals(\"apple\"\
    )) {\n                apples++;\n            } else if (fruit.equals(\"orange\"\
    )) {\n                oranges++;\n            } else if (fruit.equals(\"mango\"\
    )) {\n                mangos++;\n            }\n        }\n        return apples\
    \ + oranges + mangos;", "        int apples = 0;\n        int oranges = 0;\n \
    \       int mango = 0;\n        String[] fruits = s.split(\"\\\\s+\");\n     \
    \   for (String fruit : fruits) {\n            if (fruit.equals(\"apple\")) {\n\
    \                apples++;\n            } else if (fruit.equals(\"orange\")) {\n\
    \                oranges++;\n            } else if (fruit.equals(\"mango\")) {\n\
    \                mango++;\n            }\n        }\n        return mango;", " \
    \       // write your code here\n        String[] fruits = {\"apple\", \"orange\"\
    , \"mango\"};\n        int[] apples = {1, 2, 3};\n        int[] oranges = {1,\
    \ 2, 3};\n        int[] mangos = {1, 2, 3};\n        int[] totals = {0, 0, 0};\n\
    \        int total = 0;\n        int i = 0;\n        int j = 0;\n        int k\
    \ = 0;\n        int l = 0;\n        int m = 0;\n        int n = 0;\n        int\
    \ o = 0;\n        int p = 0;\n        int q = 0;\n        int r = 0;\n       \
    \ int s = 0;\n        int t = 0;\n        int u = 0;\n        int v = 0;\n   \
    \     int w = 0;\n        int x = 0;\n        int y = 0;\n        int z = 0;\n\
    \        int a = 0;\n        int b = 0;\n        int c = 0;\n        int d = 0;\n\
    \        int e = 0;\n        int f = 0;\n        int g = 0;\n        int h = 0;\n\
    \        int i = 0;\n        int j = 0;\n        int k = 0;\n        int l = 0;\n\
    \        int m = 0;\n        int n = 0;\n        int o = 0;\n        int p = 0;\n\
    \        int q = 0;\n        int r = 0;\n        int s = 0;\n        int t = 0;\n\
    \        int u = 0;\n        int v = 0;\n        int w = 0;\n        int x = 0;\n\
    \        int y = 0;\n        int z = 0;\n        int a = 0;\n        int b = 0;\n\
    \        int c = 0;\n        int d = 0;\n        int e = 0;\n        int f = 0;\n\
    \        int g = 0;\n        int h = 0;\n        int i = 0;\n        int j = 0;\n\
    \        int k = 0;\n        int l = 0;\n        int m = 0;\n        int n = 0;\n\
    \        int o = 0;\n        int p = 0;\n        int q = 0;\n        int r = 0;\n\
    \        int s = 0;\n        int t = 0;\n        int u = 0;\n        int v = 0;\n\
    \        int w = 0;\n        int x = 0;\n        int y = 0;\n        int z = 0;\n\
    \        int a = 0;\n        int b = 0;\n        int c = 0;\n        int d = 0;\n\
    \        int e = 0;\n        int f = 0;\n        int g = 0;\n        int h = 0;\n\
    \        int i = 0;\n        int j = 0;\n        int k = 0;\n        int l = 0;\n\
    \        int m = 0;\n        int n = 0;\n        int o = 0;\n        int p = 0;\n\
    \        int q = 0;\n        int r = 0;\n        int s = 0;\n        int t = 0;\n\
    \        int u = 0;\n        int v = 0;\n        int w = 0;\n        int x = 0;\n\
    \        int y = 0;\n        int z = 0;\n        int a = 0;\n        int b = 0;\n\
    \        int c = 0;\n        int d = 0;\n        int e = 0;\n        int f = 0;\n\
    \        int g = 0;\n        int h = 0;\n        int i = 0;\n        int j = 0;\n\
    \        int k = 0;\n        int l = 0;\n        int m = 0;\n        int n = 0;\n\
    \        int o = 0;\n        int p = 0;\n        int q = 0;\n        int r = 0;\n\
    \        int s = 0;\n        int t = 0;\n        int u = 0;\n        int ", " \
    \       // your code here\n        String[] fruits = {\"apple\", \"orange\", \"\
    mango\"};\n        String[] fruitsInBasket = s.split(\"\\\\s+\");\n        Map<String,\
    \ Integer> fruitMap = new HashMap<>();\n        for (String fruit : fruits) {\n\
    \            fruitMap.put(fruit, 0);\n        }\n        for (String fruit : fruitsInBasket)\
    \ {\n            fruitMap.put(fruit, fruitMap.get(fruit) + 1);\n        }\n  \
    \      fruitMap.put(\"mango\", fruitMap.get(\"mango\") + n);\n        return fruitMap.get(\"\
    mango\");", "        int apples = 0;\n        int oranges = 0;\n        int mango\
    \ = 0;\n        String[] fruits = s.split(\"\\\\s+\");\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruit",
  "        int apples = 0;\n        int oranges = 0;\n        int mango = 0;\n   \
    \     String[] fruits = s.split(\"\\\\s+\");\n        for(String fruit : fruits)\
    \ {\n            if(fruit.equals(\"apple\")) {\n                apples++;\n  \
    \          } else if(fruit.equals(\"orange\")) {\n                oranges++;\n\
    \            } else if(fruit.equals(\"mango\")) {\n                mango++;\n\
    \            }\n        }\n        return mango;", "        int apples = 0;\n\
    \        int oranges = 0;\n        int mango = 0;\n        String[] arr = s.split(\"\
    \\\\s+\");\n        Arrays.sort(arr);\n        apples = Integer.parseInt(arr[0]);\n\
    \        oranges = Integer.parseInt(arr[1]);\n        mango = Integer.parseInt(arr[2]);\n\
    \        if (apples > oranges) {\n            return mango;\n        }\n     \
    \   if (apples < oranges) {\n            return apples;\n        }\n        return\
    \ oranges;", "        List<Integer> apples = new ArrayList<>();\n        List<Integer>\
    \ oranges = new ArrayList<>();\n        List<Integer> mango = new ArrayList<>();\n\
    \        String[] fruits = s.split(\"\\\\s+\");\n        for (String fruit : fruits)\
    \ {\n            if (fruit.equals(\"apple\")) {\n                apples.add(fruitDistribution(fruit,\
    \ n));\n            } else if (fruit.equals(\"orange\")) {\n                oranges.add(fruitDistribution(fruit,\
    \ n));\n            } else if (fruit.equals(\"mango\")) {\n                mango.add(fruitDistribution(fruit,\
    \ n));\n            }\n        }\n        return mango.stream().filter(i -> apples.contains(i)\
    \ || oranges.contains(i)).count();", "        Map<String, Integer> map = new HashMap<>();\n\
    \        String[] fruits = s.split(\"\\\\s+\");\n        for (String fruit : fruits)\
    \ {\n            int count = map.get(fruit);\n            map.put(fruit, count\
    \ + 1);\n        }\n        Set<String> keys = map.keySet();\n        int mango\
    \ = 0;\n        for (String key : keys) {\n            if (map.get(key) == 2)\
    \ {\n                mango++;\n            }\n        }\n        return mango;",
  "        List<Integer> apples = new ArrayList<Integer>();\n        List<Integer>\
    \ oranges = new ArrayList<Integer>();\n        List<Integer> mango = new ArrayList<Integer>();\n\
    \        String[] fruits = s.split(\" \");\n        for(int i = 0; i < fruits.length;\
    \ i++) {\n            if(fruits[i].equals(\"apple\")) {\n                apples.add(i);\n\
    \            } else if(fruits[i].equals(\"orange\")) {\n                oranges.add(i);\n\
    \            } else if(fruits[i].equals(\"mango\")) {\n                mango.add(i);\n\
    \            }\n        }\n        List<Integer> appleFruits = apples.stream().mapToInt(i\
    \ -> fruits[i]).collect(Collectors.toList());\n        List<Integer> orangeFruits\
    \ = oranges.stream().mapToInt(i -> fruits[i]).collect(Collectors.toList());\n\
    \        List<Integer> mangoFruits = mango.stream().mapToInt(i -> fruits[i]).collect(Collectors.toList());\n\
    \        List<Integer> appleAndOrangeFruits = appleFruits.stream().filter(i ->\
    \ orangeFruits.contains(i)).collect(Collectors.toList());\n        List<Integer>\
    \ appleAndMangoFruits = appleAndOrangeFruits.stream().filter(i -> mangoFruits.contains(i)).collect(Collectors.toList());\n\
    \        return appleAndMangoFruits.stream().mapToInt(i -> fruits[i]).sum();",
  "        // write your code here\n        int apples = 0;\n        int oranges =\
    \ 0;\n        int mango = 0;\n        String[] fruits = s.split(\" \");\n    \
    \    for(int i = 0; i < fruits.length; i++) {\n            if(fruits[i].equals(\"\
    apple\")) {\n                apples++;\n            }\n            else if(fruits[i].equals(\"\
    orange\")) {\n                oranges++;\n            }\n            else if(fruits[i].equals(\"\
    mango\")) {\n                mango++;\n            }\n        }\n        int totalApples\
    \ = apples;\n        int totalOranges = oranges;\n        int totalMango = mango;\n\
    \        totalApples += n;\n        totalOranges += n;\n        totalMango +=\
    \ n;\n        return totalMango;", "        int apples = 0;\n        int oranges\
    \ = 0;\n        int mango = 0;\n        String[] arr = s.split(\" \");\n     \
    \   Arrays.sort(arr);\n        for(int i = 0; i < arr.length; i++) {\n       \
    \     if(arr[i].equals(\"apple\")) {\n                apples++;\n            }\n\
    \            if(arr[i].equals(\"orange\")) {\n                oranges++;\n   \
    \         }\n            if(arr[i].equals(\"mango\")) {\n                mango++;\n\
    \            }\n        }\n        return mango;", "        int apples = 0;\n\
    \        int oranges = 0;\n        int mango = 0;\n        String[] arr = s.split(\"\
    \ \");\n        for(int i = 0; i < arr.length; i++) {\n            if(arr[i].equals(\"\
    apple\")) {\n                apples++;\n            } else if(arr[i].equals(\"\
    orange\")) {\n                oranges++;\n            } else if(arr[i].equals(\"\
    mango\")) {\n                mango++;\n            }\n        }\n        return\
    \ mango;", "        int apples = 0, oranges = 0, mangos = 0;\n        String[]\
    \ fruits = s.split(\"\\\\s+\");\n        for (String fruit : fruits) {\n     \
    \       if (fruit.equals(\"apple\")) {\n                apples++;\n          \
    \  } else if (fruit.equals(\"orange\")) {\n                oranges++;\n      \
    \      } else if (fruit.equals(\"mango\")) {\n                mangos++;\n    \
    \        }\n        }\n        return apples + oranges + mangos;", "        String[]\
    \ fruits = {\"apple\", \"orange\", \"mango\"};\n        String[] fruitsInBasket\
    \ = s.split(\"\\\\s+\");\n        int apples = Integer.parseInt(fruitsInBasket[0]);\n\
    \        int oranges = Integer.parseInt(fruitsInBasket[1]);\n        int mangos\
    \ = Integer.parseInt(fruitsInBasket[2]);\n        int totalFruits = apples + oranges\
    \ + mangos;\n        int totalFruitsInBasket = apples + oranges + mangos;\n  \
    \      int mangoFruits = totalFruits - totalFruitsInBasket;\n        return mangoFruits;",
  "        Map<String, Integer> map = new HashMap<>();\n        String[] arr = s.split(\"\
    \\\\s+\");\n        Arrays.stream(arr).forEach(s -> map.put(s, map.getOrDefault(s,\
    \ 0) + 1));\n        return map.get(\"mango\") + map.get(\"apple\") + map.get(\"\
    orange\");", "        int apples = 0, oranges = 0, mangos = 0;\n        String[]\
    \ fruits = s.split(\"\\\\s+\");\n        for (String fruit : fruits) {\n     \
    \       if (fruit.equals(\"apple\")) {\n                apples++;\n          \
    \  } else if (fruit.equals(\"orange\")) {\n                oranges++;\n      \
    \      } else if (fruit.equals(\"mango\")) {\n                mangos++;\n    \
    \        }\n        }\n        return apples + oranges + mangos;", "        int\
    \ apples = 0;\n        int oranges = 0;\n        int mango = 0;\n        String[]\
    \ fruits = s.split(\"\\\\s+\");\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruit", "        // write your\
    \ code here\n        int apples = 0;\n        int oranges = 0;\n        int mango\
    \ = 0;\n        String[] fruits = s.split(\"\\\\s+\");\n        Arrays.sort(fruits);\n\
    \        for(int i = 0; i < fruits.length; i++) {\n            if(fruits[i].equals(\"\
    apple\")) {\n                apples++;\n            } else if(fruits[i].equals(\"\
    orange\")) {\n                oranges++;\n            } else if(fruits[i].equals(\"\
    mango\")) {\n                mango++;\n            }\n        }\n        return\
    \ mango;", "        int apples = 0;\n        int oranges = 0;\n        int mango\
    \ = 0;\n        String[] arr = s.split(\" \");\n        for(int i = 0; i < arr.length;\
    \ i++) {\n            if(arr[i].equals(\"apple\")) {\n                apples++;\n\
    \            }\n            else if(arr[i].equals(\"orange\")) {\n           \
    \     oranges++;\n            }\n            else if(arr[i].equals(\"mango\"))\
    \ {\n                mango++;\n            }\n        }\n        return mango;",
  "        // your code here\n        int apple = 0;\n        int orange = 0;\n  \
    \      int mango = 0;\n        String[] fruits = s.split(\"\\\\s+\");\n      \
    \  Arrays.sort(fruits);\n        Arrays.sort(fruits, Comparator.comparing(s ->\
    \ s.charAt(0)));\n        Arrays.sort(fruits, Comparator.comparing(s -> s.charAt(1)));\n\
    \        Arrays.sort(fruits, Comparator.comparing(s -> s.charAt(2)));\n      \
    \  Arrays.sort(fruits, Comparator.comparing(s -> s.charAt(3)));\n        Arrays.sort(fruits,\
    \ Comparator.comparing(s -> s.charAt(4)));\n        Arrays.sort(fruits, Comparator.comparing(s\
    \ -> s.charAt(5)));\n        Arrays.sort(fruits, Comparator.comparing(s -> s.charAt(6)));\n\
    \        Arrays.sort(fruits, Comparator.comparing(s -> s.charAt(7)));\n      \
    \  Arrays.sort(fruits, Comparator.comparing(s -> s.charAt(8)));\n        Arrays.sort(fruits,\
    \ Comparator.comparing(s -> s.charAt(9)));\n        Arrays.sort(fruits, Comparator.comparing(s\
    \ -> s.charAt(10)));\n        Arrays.sort(fruits, Comparator.comparing(s -> s.charAt(11)));\n\
    \        Arrays.sort(fruits, Comparator.comparing(s -> s.charAt(12)));\n     \
    \   Arrays.sort(fruits, Comparator.comparing(s -> s.charAt(13)));\n        Arrays.sort(fruits,\
    \ Comparator.comparing(s -> s.charAt(14)));\n        Arrays.sort(fruits, Comparator.comparing(s\
    \ -> s.charAt(15)));\n        Arrays.sort(fruits, Comparator.comparing(s -> s.charAt(16)));\n\
    \        Arrays.sort(fruits, Comparator.comparing(s -> s.charAt(17)));\n     \
    \   Arrays.sort(fruits, Comparator.comparing(s -> s.charAt(18)));\n        Arrays.sort(fruits,\
    \ Comparator.comparing(s -> s.charAt(19)));\n        Arrays.sort(fruits, Comparator.comparing(s\
    \ -> s.charAt(20)));\n        Arrays.sort(fruits, Comparator.comparing(s -> s.charAt(21)));\n\
    \        Arrays.sort(fruits, Comparator.comparing(s -> s.charAt(22)));\n     \
    \   Arrays.sort(fruits, Comparator.comparing(s -> s.charAt(23)));\n        Arrays.sort(fruits,\
    \ Comparator.comparing(s -> s.charAt(24)));\n        Arrays.sort(fruits, Comparator.comparing(s\
    \ -> s.charAt(25)));\n        Arrays.sort(fruits, Comparator.comparing(s -> s.charAt(26)));\n\
    \        Arrays.sort(fruits, Comparator.comparing(s -> s.charAt(27)));\n     \
    \   Arrays.sort(fruits, Comparator.comparing(s -> s.charAt(28)));\n        Arrays.sort(fruits,\
    \ Comparator.comparing(s -> s.charAt(29)));", "        int apples = 0;\n     \
    \   int oranges = 0;\n        int mango = 0;\n        String[] fruits = s.split(\"\
    \\\\s+\");\n        for (String fruit : fruits) {\n            if (fruit.equals(\"\
    apple\")) {\n                apples++;\n            } else if (fruit.equals(\"\
    orange\")) {\n                oranges++;\n            } else if (fruit.equals(\"\
    mango\")) {\n                mango++;\n            }\n        }\n        return\
    \ apples + oranges + mango;", "        int apples = 0;\n        int oranges =\
    \ 0;\n        int mango = 0;\n        String[] arr = s.split(\" \");\n       \
    \ for (String fruit : arr) {\n            if (fruit.equals(\"apple\")) {\n   \
    \             apples++;\n            } else if (fruit.equals(\"orange\")) {\n\
    \                oranges++;\n            } else if (fruit.equals(\"mango\")) {\n\
    \                mango++;\n            }\n        }\n        return mango;", " \
    \       String[] fruits = {\"apple\", \"orange\", \"mango\"};\n        String[]\
    \ fruitsInBasket = s.split(\"\\\\s+\");\n        int[] counts = new int[fruits.length];\n\
    \        for (int i = 0; i < fruits.length; i++) {\n            counts[i] = fruitsInBasket.length\
    \ == 0 ? 0 : fruitsInBasket.length == 1 ? 1 : fruitsInBasket.length == fruits.length\
    \ ? fruitsInBasket.length : 0;\n        }\n        int mangoCount = 0;\n     \
    \   for (int i = 0; i < fruits.length; i++) {\n            if (counts[i] == fruits.length)\
    \ mangoCount++;\n        }\n        return mangoCount;", "        int apples =\
    \ 0;\n        int oranges = 0;\n        int mango = 0;\n        String[] fruits\
    \ = s.split(\" \");\n        for (String fruit : fruits) {\n            if (fruit.equals(\"\
    apple\")) {\n                apples++;\n            } else if (fruit.equals(\"\
    orange\")) {\n                oranges++;\n            } else if (fruit.equals(\"\
    mango\")) {\n                mango++;\n            }\n        }\n        return\
    \ mango;", "        int apples = 0;\n        int oranges = 0;\n        int mango\
    \ = 0;\n        String[] fruits = s.split(\"\\\\s+\");\n        for (String fruit\
    \ : fruits) {\n            if (fruit.equals(\"apple\")) {\n                apples++;\n\
    \            } else if (fruit.equals(\"orange\")) {\n                oranges++;\n\
    \            } else if (fruit.equals(\"mango\")) {\n                mango++;\n\
    \            }\n        }\n        return mango;", "        int apples = 0;\n\
    \        int oranges = 0;\n        int mango = 0;\n        String[] fruits = s.split(\"\
    \\\\s+\");\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n     \
    \   Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruit", "        int apples\
    \ = 0;\n        int oranges = 0;\n        int mango = 0;\n        String[] fruits\
    \ = s.split(\" \");\n        for(int i = 0; i < fruits.length; i++) {\n      \
    \      if(fruits[i].equals(\"apple\")) {\n                apples++;\n        \
    \    }\n            else if(fruits[i].equals(\"orange\")) {\n                oranges++;\n\
    \            }\n            else if(fruits[i].equals(\"mango\")) {\n         \
    \       mango++;\n            }\n        }\n        return mango;", "        Map<String,\
    \ Integer> fruits = new HashMap<>();\n        String[] fruits = s.split(\" \"\
    );\n        for (String fruit : fruits) {\n            fruits.put(fruit, 1);\n\
    \        }\n        String[] fruits = s.split(\" \");\n        fruits.stream().filter(x\
    \ -> x.equals(\"apple\")).forEach(x -> fruits.put(x, fruits.get(x) + 1));\n  \
    \      fruits.stream().filter(x -> x.equals(\"mango\")).forEach(x -> fruits.put(x,\
    \ fruits.get(x) + 1));\n        fruits.stream().filter(x -> x.equals(\"orange\"\
    )).forEach(x -> fruits.put(x, fruits.get(x) + 1));\n        fruits.stream().filter(x\
    \ -> x.equals(\"mango\")).forEach(x -> fruits.put(x, fruits.get(x) + 1));\n  \
    \      fruits.stream().filter(x -> x.equals(\"apple\")).forEach(x -> fruits.put(x,\
    \ fruits.get(x) + 1));\n        fruits.stream().filter(x -> x.equals(\"orange\"\
    )).forEach(x -> fruits.put(x, fruits.get(x) + 1));\n        fruits.stream().filter(x\
    \ -> x.equals(\"mango\")).forEach(x -> fruits.put(x, fruits.get(x) + 1));\n  \
    \      fruits.stream().filter(x -> x.equals(\"apple\")).forEach(x -> fruits.put(x,\
    \ fruits.get(x) + 1));\n        fruits.stream().filter(x -> x.equals(\"orange\"\
    )).forEach(x -> fruits.put(x, fruits.get(x) + 1));\n        fruits.stream().filter(x\
    \ -> x.equals(\"mango\")).forEach(x -> fruits.put(x, fruits.get(x) + 1));\n  \
    \      fruits.stream().filter(x -> x.equals(\"apple\")).forEach(x -> fruits.put(x,\
    \ fruits.get(x) + 1));\n        fruits.stream().filter(x -> x.equals(\"orange\"\
    )).forEach(x -> fruits.put(x, fruits.get(x) + 1));\n        fruits.stream().filter(x\
    \ -> x.equals(\"mango\")).forEach(x -> fruits.put(x, fruits.get(x) + 1));\n  \
    \      fruits.stream().filter(x -> x.equals(\"apple\")).forEach(x -> fruits.put(x,\
    \ fruits.get(x) + 1));\n        fruits.stream().filter(x -> x.equals(\"orange\"\
    )).forEach(x -> fruits.put(x, fruits.get(x) + 1));\n        fruits.stream().filter(x\
    \ -> x.equals(\"mango\")).forEach(x -> fruits.put(x, fruits.get(x) + 1));\n  \
    \      fruits.stream().filter(x -> x.equals(\"apple\")).forEach(x -> fruits.put(x,\
    \ fruits.get(x) + 1));\n        ", "        int apples = 0;\n        int oranges\
    \ = 0;\n        int mango = 0;\n        String[] fruits = s.split(\" \");\n  \
    \      Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n        Arrays.sort(fruits);\n\
    \        Arrays.sort(fruits);", "        // write your code here\n        String[]\
    \ fruits = {\"apples\", \"oranges\", \"mango\"};\n        int[] nums = new int[3];\n\
    \        for(int i = 0; i < fruits.length; i++) {\n            if(s.contains(fruits[i]))\
    \ {\n                nums[i] = Integer.parseInt(s.replace(fruits[i], \"\"));\n\
    \            }\n        }\n        int count = 0;\n        for(int i = 0; i <\
    \ fruits.length; i++) {\n            if(nums[i] > n) {\n                count++;\n\
    \            }\n        }\n        return count;", "        // write your code\
    \ here\n        String[] fruits = {\"apple\", \"orange\", \"mango\"};\n      \
    \  String[] fruitArray = s.split(\" \");\n        int count = 0;\n        for\
    \ (int i = 0; i < fruitArray.length; i++) {\n            if (fruitArray[i].equals(\"\
    apple\")) {\n                count += fruitArray[i + 1].equals(\"orange\") ? 1\
    \ : 0;\n            }\n            if (fruitArray[i].equals(\"orange\")) {\n \
    \               count += fruitArray[i + 1].equals(\"apple\") ? 1 : 0;\n      \
    \      }\n            if (fruitArray[i].equals(\"mango\")) {\n               \
    \ count += fruitArray[i + 1].equals(\"apple\") ? 1 : 0;\n            }\n     \
    \   }\n        return count;", "        // write your code here\n        int apples\
    \ = 0;\n        int oranges = 0;\n        int mango = 0;\n        String[] fruits\
    \ = s.split(\" \");\n        for(int i = 0; i < fruits.length; i++) {\n      \
    \      if(fruits[i].equals(\"apple\")) {\n                apples++;\n        \
    \    }\n            if(fruits[i].equals(\"orange\")) {\n                oranges++;\n\
    \            }\n            if(fruits[i].equals(\"mango\")) {\n              \
    \  mango++;\n            }\n        }\n        return mango;", "        // your\
    \ code here\n        int apple = 0;\n        int orange = 0;\n        int mango\
    \ = 0;\n        int total = 0;\n        String[] fruits = s.split(\"\\\\s+\");\n\
    \        for(int i = 0; i < fruits.length; i++) {\n            if(fruits[i].equals(\"\
    apple\")) {\n                apple++;\n            }\n            if(fruits[i].equals(\"\
    orange\")) {\n                orange++;\n            }\n            if(fruits[i].equals(\"\
    mango\")) {\n                mango++;\n            }\n        }\n        total\
    \ = apple + orange + mango;\n        if(total > n) {\n            return -1;\n\
    \        }\n        return mango;", "        // Your code here\n        int apples\
    \ = 0;\n        int oranges = 0;\n        int mango = 0;\n        String[] fruits\
    \ = s.split(\"\\\\s+\");\n        for(int i = 0; i < fruits.length; i++) {\n \
    \           if(fruits[i].equals(\"apple\")) {\n                apples++;\n   \
    \         }\n            if(fruits[i].equals(\"mango\")) {\n                mango++;\n\
    \            }\n            if(fruits[i].equals(\"orange\")) {\n             \
    \   oranges++;\n            }\n        }\n        return mango;", "        int\
    \ apples = 0;\n        int oranges = 0;\n        int mango = 0;\n        String[]\
    \ fruits = s.split(\" \");\n        for (String fruit : fruits) {\n          \
    \  if (fruit.equals(\"apple\")) {\n                apples++;\n            } else\
    \ if (fruit.equals(\"orange\")) {\n                oranges++;\n            } else\
    \ if (fruit.equals(\"mango\")) {\n                mango++;\n            }\n  \
    \      }\n        return mango;", "        int apples = 0;\n        int oranges\
    \ = 0;\n        int mango = 0;\n        String[] fruits = s.split(\"\\\\s+\");\n\
    \        for (String fruit : fruits) {\n            if (fruit.equals(\"apple\"\
    )) {\n                apples++;\n            } else if (fruit.equals(\"orange\"\
    )) {\n                oranges++;\n            } else if (fruit.equals(\"mango\"\
    )) {\n                mango++;\n            }\n        }\n        return mango;",
  "        int apples = 0, oranges = 0, mangos = 0;\n        String[] fruits = s.split(\"\
    \\\\s+\");\n        Arrays.stream(fruits).forEach(s -> {\n            if (s.equals(\"\
    apple\")) apples++;\n            else if (s.equals(\"orange\")) oranges++;\n \
    \           else if (s.equals(\"mango\")) mangos++;\n        });\n        return\
    \ apples + oranges + mangos;", "        // write your code here\n        int apple\
    \ = 0;\n        int mango = 0;\n        int orange = 0;\n        String[] arr\
    \ = s.split(\"\\\\s+\");\n        for(int i = 0; i < arr.length; i++) {\n    \
    \        if(arr[i].equals(\"apple\")) {\n                apple++;\n          \
    \  }\n            if(arr[i].equals(\"mango\")) {\n                mango++;\n \
    \           }\n            if(arr[i].equals(\"orange\")) {\n                orange++;\n\
    \            }\n        }\n        return apple+orange+mango;", "        // Your\
    \ code here\n        String[] fruits = {\"apple\", \"orange\", \"mango\"};\n \
    \       String[] fruitNames = {\"apple\", \"orange\", \"mango\"};\n        String[]\
    \ fruitNamesArray = Arrays.stream(fruitNames).map(String::toLowerCase).toArray(String[]::new);\n\
    \        String[] fruitNamesArray2 = Arrays.stream(fruitNames).map(String::toUpperCase).toArray(String[]::new);\n\
    \        String[] fruitNamesArray3 = Arrays.stream(fruitNames).map(String::toUpperCase).toArray(String[]::new);\n\
    \        String[] fruitNamesArray4 = Arrays.stream(fruitNames).map(String::toUpperCase).toArray(String[]::new);\n\
    \        String[] fruitNamesArray5 = Arrays.stream(fruitNames).map(String::toUpperCase).toArray(String[]::new);\n\
    \        String[] fruitNamesArray6 = Arrays.stream(fruitNames).map(String::toUpperCase).toArray(String[]::new);\n\
    \        String[] fruitNamesArray7 = Arrays.stream(fruitNames).map(String::toUpperCase).toArray(String[]::new);\n\
    \        String[] fruitNamesArray8 = Arrays.stream(fruitNames).map(String::toUpperCase).toArray(String[]::new);\n\
    \        String[] fruitNamesArray9 = Arrays.stream(fruitNames).map(String::toUpperCase).toArray(String[]::new);\n\
    \        String[] fruitNamesArray10 = Arrays.stream(fruitNames).map(String::toUpperCase).toArray(String[]::new);\n\
    \        String[] fruitNamesArray11 = Arrays.stream(fruitNames).map(String::toUpperCase).toArray(String[]::new);\n\
    \        String[] fruitNamesArray12 = Arrays.stream(fruitNames).map(String::toUpperCase).toArray(String[]::new);\n\
    \        String[] fruitNamesArray13 = Arrays.stream(fruitNames).map(String::toUpperCase).toArray(String[]::new);\n\
    \        String[] fruitNamesArray14 = Arrays.stream(fruitNames).map(String::toUpperCase).toArray(String[]::new);\n\
    \        String[] fruitNamesArray15 = Arrays.stream(fruitNames).map(String::toUpperCase).toArray(String[]::new);\n\
    \        String[] fruitNamesArray16 = Arrays.stream(fruitNames).map(String::toUpperCase).toArray(String[]::new);\n\
    \        String[] fruitNamesArray17 = Arrays.stream(fruitNames).map(String::toUpperCase).toArray(String[]::new);\n",
  "        // Your code here\n        String[] arr = s.split(\" \");\n        int[]\
    \ arr = new int[arr.length];\n        for (int i = 0; i < arr.length; i++) {\n\
    \            arr[i] = Integer.parseInt(arr[i]);\n        }\n        Arrays.sort(arr);\n\
    \        int count = 0;\n        for (int i = 0; i < arr.length; i++) {\n    \
    \        if (arr[i] == n) {\n                count++;\n            }\n       \
    \ }\n        return count;", "        int apples = 0;\n        int oranges = 0;\n\
    \        int mango = 0;\n        String[] fruits = s.split(\" \");\n        for\
    \ (String fruit : fruits) {\n            if (fruit.equals(\"apple\")) {\n    \
    \            apples++;\n            } else if (fruit.equals(\"orange\")) {\n \
    \               oranges++;\n            } else if (fruit.equals(\"mango\")) {\n\
    \                mango++;\n            }\n        }\n        return mango;", " \
    \       // Your code here\n        int apples = 0;\n        int oranges = 0;\n\
    \        int mango = 0;\n        String[] fruits = s.split(\" \");\n        for\
    \ (String fruit : fruits) {\n            if (fruit.equals(\"apple\")) {\n    \
    \            apples++;\n            } else if (fruit.equals(\"orange\")) {\n \
    \               oranges++;\n            } else if (fruit.equals(\"mango\")) {\n\
    \                mango++;\n            }\n        }\n        return mango;", " \
    \       String[] fruits = {\"apple\", \"orange\", \"mango\"};\n        String[]\
    \ fruitsInBasket = s.split(\"\\\\s+\");\n        int[] counts = new int[fruits.length];\n\
    \        for (int i = 0; i < fruits.length; i++) {\n            counts[i] = fruitsInBasket.length\
    \ == 0 ? 0 : fruitsInBasket.length == 1 ? 1 : fruitsInBasket.length == 2 ? 2 :\
    \ 3;\n        }\n        int count = 0;\n        for (int i = 0; i < fruits.length;\
    \ i++) {\n            if (counts[i] == fruitsInBasket.length) {\n            \
    \    count++;\n            }\n        }\n        return count;", "        // Your\
    \ code here\n        String[] fruits = {\"apple\", \"orange\", \"mango\"};\n \
    \       int[] count = {0, 0, 0};\n        String[] fruitNames = {\"apple\", \"\
    orange\", \"mango\"};\n        for(int i = 0; i < fruits.length; i++) {\n    \
    \        if(s.contains(fruits[i])) {\n                count[i]++;\n          \
    \  }\n        }\n        for(int i = 0; i < fruits.length; i++) {\n          \
    \  if(count[i] > n) {\n                return i;\n            }\n        }\n \
    \       return -1;", "        int apples = 0, oranges = 0, mangos = 0;\n     \
    \   String[] fruits = s.split(\" \");\n        Arrays.sort(fruits);\n        for\
    \ (int i = 0; i < fruits.length; i++) {\n            if (fruits[i].equals(\"apple\"\
    )) {\n                apples++;\n            } else if (fruits[i].equals(\"orange\"\
    )) {\n                oranges++;\n            } else if (fruits[i].equals(\"mango\"\
    )) {\n                mangos++;\n            }\n        }\n        return mangos;",
  "        int apples = 0;\n        int oranges = 0;\n        int mango = 0;\n   \
    \     String[] fruits = s.split(\"\\\\s+\");\n        for (String fruit : fruits)\
    \ {\n            if (fruit.equals(\"apple\")) {\n                apples++;\n \
    \           } else if (fruit.equals(\"orange\")) {\n                oranges++;\n\
    \            } else if (fruit.equals(\"mango\")) {\n                mango++;\n\
    \            }\n        }\n        return mango;", "        int apples = 0;\n\
    \        int oranges = 0;\n        int mango = 0;\n        String[] fruits = s.split(\"\
    \\\\s+\");\n        Arrays.stream(fruits).forEach(s -> {\n            if (s.equals(\"\
    apple\")) {\n                apples++;\n            } else if (s.equals(\"orange\"\
    )) {\n                oranges++;\n            } else if (s.equals(\"mango\"))\
    \ {\n                mango++;\n            }\n        });\n        return mango;",
  "        // Write your code here\n        String[] fruits = {\"apple\", \"orange\"\
    , \"mango\"};\n        int[] count = {0, 0, 0};\n        for(int i = 0; i < fruits.length;\
    \ i++) {\n            if(s.contains(fruits[i])) {\n                count[fruits.indexOf(fruits[i])]++;\n\
    \            }\n        }\n        int mango = 0;\n        for(int i = 0; i <\
    \ fruits.length; i++) {\n            if(count[i] > 0 && count[i] <= n) {\n   \
    \             mango++;\n            }\n        }\n        return mango;", "  \
    \      int apples = 0;\n        int oranges = 0;\n        int mango = 0;\n   \
    \     String[] fruits = s.split(\"\\\\s+\");\n        for (String fruit : fruits)\
    \ {\n            if (fruit.equals(\"apple\")) {\n                apples++;\n \
    \           } else if (fruit.equals(\"orange\")) {\n                oranges++;\n\
    \            } else if (fruit.equals(\"mango\")) {\n                mango++;\n\
    \            }\n        }\n        return mango;", "        \n        \n     \
    \   \n        \n        \n        \n        \n        \n        \n        \n \
    \       \n        \n        \n        \n        \n        \n        \n       \
    \ \n        \n        \n        \n        \n        \n        \n        \n   \
    \     \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n", "        // write your code here\n        int apples = 0, oranges\
    \ = 0, mangos = 0;\n        String[] fruits = s.split(\" \");\n        for (String\
    \ fruit : fruits) {\n            if (fruit.equals(\"apple\")) {\n            \
    \    apples++;\n            } else if (fruit.equals(\"orange\")) {\n         \
    \       oranges++;\n            } else if (fruit.equals(\"mango\")) {\n      \
    \          mangos++;\n            }\n        }\n        return mangos;", "   \
    \     int apples = 0;\n        int oranges = 0;\n        int mangoes = 0;\n  \
    \      String[] fruits = s.split(\"\\\\s+\");\n        for(String fruit : fruits)\
    \ {\n            if(fruit.equals(\"apple\")) {\n                apples++;\n  \
    \          } else if(fruit.equals(\"orange\")) {\n                oranges++;\n\
    \            } else if(fruit.equals(\"mango\")) {\n                mangoes++;\n\
    \            }\n        }\n        return mangoes;", "        int apples = 0;\n\
    \        int oranges = 0;\n        int mango = 0;\n        String[] fruits = s.split(\"\
    \ \");\n        for(int i = 0; i < fruits.length; i++) {\n            if(fruits[i].equals(\"\
    apple\")) {\n                apples++;\n            }\n            if(fruits[i].equals(\"\
    orange\")) {\n                oranges++;\n            }\n            if(fruits[i].equals(\"\
    mango\")) {\n                mango++;\n            }\n        }\n        double\
    \ applePrice = Double.parseDouble(fruits[0]);\n        double orangePrice = Double.parseDouble(fruits[1]);\n\
    \        double mangoPrice = Double.parseDouble(fruits[2]);\n        double totalPrice\
    \ = applePrice + orangePrice + mangoPrice;\n        double totalPrice2 = applePrice\
    \ * orangePrice * mangoPrice;\n        double totalPrice3 = applePrice * orangePrice\
    \ * mangoPrice * applePrice;\n        double totalPrice4 = applePrice * orangePrice\
    \ * mangoPrice * applePrice * orangePrice;\n        double totalPrice5 = applePrice\
    \ * orangePrice * mangoPrice * applePrice * orangePrice * mangoPrice;\n      \
    \  double totalPrice6 = applePrice * orangePrice * mangoPrice * applePrice * orangePrice\
    \ * mangoPrice * applePrice;\n        double totalPrice7 = applePrice * orangePrice\
    \ * mangoPrice * applePrice * orangePrice * mangoPrice * applePrice * orangePrice;\n\
    \        double totalPrice8 = applePrice * orangePrice * mangoPrice * applePrice\
    \ * orangePrice * mangoPrice * applePrice * orangePrice * mangoPrice;\n      \
    \  double totalPrice9 = applePrice * orangePrice * mangoPrice * applePrice * orangePrice\
    \ * mangoPrice * applePrice * orangePrice * mangoPrice * applePrice;\n       \
    \ double totalPrice10 = applePrice * orangePrice * mangoPrice * applePrice * orangePrice\
    \ * mangoPrice * applePrice * orangePrice * mangoPrice * applePrice * orangePrice;\n\
    \        double totalPrice11 = applePrice * orangePrice * mangoPrice * applePrice\
    \ * orangePrice * mangoPrice * applePrice * orangePrice * mangoPrice * applePrice\
    \ * orange", "        // Your code here\n        int apples = 0;\n        int\
    \ oranges = 0;\n        int mango = 0;\n        String[] array = s.split(\" \"\
    );\n        for(int i = 0; i < array.length; i++) {\n            if(array[i].equals(\"\
    apple\")) {\n                apples++;\n            }\n            if(array[i].equals(\"\
    orange\")) {\n                oranges++;\n            }\n            if(array[i].equals(\"\
    mango\")) {\n                mango++;\n            }\n        }\n        int apple\
    \ = apples;\n        int orange = oranges;\n        int mango = mango;\n     \
    \   int total = apple + orange + mango;\n        int apples = apple;\n       \
    \ int oranges = orange;\n        int mangos = mango;\n        int total = apples\
    \ + oranges + mangos;\n        int apple = apples;\n        int orange = oranges;\n\
    \        int mango = mango;\n        int total = apple + orange + mango;\n   \
    \     int apples = apple;\n        int oranges = orange;\n        int mangos =\
    \ mango;\n        int total = apples + oranges + mangos;\n        int apple =\
    \ apples;\n        int orange = oranges;\n        int mango = mango;\n       \
    \ int total = apple + orange + mango;\n        int apples = apple;\n        int\
    \ oranges = orange;\n        int mangos = mango;\n        int total = apples +\
    \ oranges + mangos;\n        int apple = apples;\n        int orange = oranges;\n\
    \        int mango = mango;\n        int total = apple + orange + mango;\n   \
    \     int apples = apple;\n        int oranges = orange;\n        int mangos =\
    \ mango;\n        int total = apples + oranges + mangos;\n        int apple =\
    \ apples;\n        int orange = oranges;\n        int mango = mango;\n       \
    \ int total = apple + orange + mango;\n        int apples = apple;\n        int\
    \ oranges = orange;\n        int mangos = mango;\n        int total = apples +\
    \ oranges + mangos;\n        int apple = apples;\n        int orange = oranges;\n\
    \        int mango = mango;\n        int total = apple + orange + mango;\n   \
    \     int apples = apple;\n        int oranges = orange;\n        int mangos =\
    \ mango;\n        int total = apples + oranges + mangos;\n        int apple =\
    \ apples;\n        int orange = oranges;\n        int mango = mango;\n       \
    \ int total = apple + orange + mango;\n        int apples = apple;\n        int\
    \ oranges = orange;\n        int mangos = mango;\n        int total = apples +\
    \ oranges + mangos;\n        int apple = apples;\n        int orange = oranges;\n\
    \        int mango = mango;\n        int total = apple + orange + ", "       \
    \ int apples = 0;\n        int oranges = 0;\n        int mango = 0;\n        String[]\
    \ fruits = s.split(\"\\\\s+\");\n        for (String fruit : fruits) {\n     \
    \       if (fruit.equals(\"apple\")) {\n                apples++;\n          \
    \  } else if (fruit.equals(\"orange\")) {\n                oranges++;\n      \
    \      } else if (fruit.equals(\"mango\")) {\n                mango++;\n     \
    \       }\n        }\n        return mango;", "        // your code here\n   \
    \     String[] arr = s.split(\" \");\n        List<Integer> apples = new ArrayList<Integer>();\n\
    \        List<Integer> oranges = new ArrayList<Integer>();\n        List<Integer>\
    \ mango = new ArrayList<Integer>();\n        for(int i = 0; i < arr.length; i++)\
    \ {\n            if(arr[i].equals(\"apple\")) {\n                apples.add(Integer.parseInt(arr[i+1]));\n\
    \                i++;\n            }\n            else if(arr[i].equals(\"orange\"\
    )) {\n                oranges.add(Integer.parseInt(arr[i+1]));\n             \
    \   i++;\n            }\n            else if(arr[i].equals(\"mango\")) {\n   \
    \             mango.add(Integer.parseInt(arr[i+1]));\n                i++;\n \
    \           }\n        }\n        System.out.println(apples);\n        System.out.println(oranges);\n\
    \        System.out.println(mango);\n        int appleSum = apples.stream().mapToInt(Integer::intValue).sum();\n\
    \        int orangeSum = oranges.stream().mapToInt(Integer::intValue).sum();\n\
    \        int mangoSum = mango.stream().mapToInt(Integer::intValue).sum();\n  \
    \      int totalSum = appleSum + orangeSum + mangoSum;\n        System.out.println(appleSum);\n\
    \        System.out.println(orangeSum);\n        System.out.println(mangoSum);\n\
    \        System.out.println(totalSum);\n        int mangoCount = appleSum + orangeSum\
    \ - mangoSum;\n        System.out.println(mangoCount);\n        return mangoCount;",
  "        int apples = 0;\n        int oranges = 0;\n        int mango = 0;\n   \
    \     String[] fruits = s.split(\"\\\\s+\");\n        Arrays.sort(fruits);\n \
    \       for (String fruit : fruits) {\n            if (fruit.equals(\"apple\"\
    )) {\n                apples++;\n            } else if (fruit.equals(\"orange\"\
    )) {\n                oranges++;\n            } else if (fruit.equals(\"mango\"\
    )) {\n                mango++;\n            }\n        }\n        return mango;",
  "        // write your code here\n        int apples = 0;\n        int oranges =\
    \ 0;\n        int mango = 0;\n        String[] fruits = s.split(\" \");\n    \
    \    for(String fruit : fruits) {\n            if(fruit.equals(\"apple\")) {\n\
    \                apples++;\n            } else if(fruit.equals(\"orange\")) {\n\
    \                oranges++;\n            } else if(fruit.equals(\"mango\")) {\n\
    \                mango++;\n            }\n        }\n        return mango;", " \
    \       int apples = 0;\n        int oranges = 0;\n        int mango = 0;\n  \
    \      String[] fruits = s.split(\"\\\\s+\");\n        Arrays.sort(fruits);\n\
    \        for (int i = 0; i < fruits.length; i++) {\n            if (fruits[i].equals(\"\
    apple\")) {\n                apples++;\n            } else if (fruits[i].equals(\"\
    orange\")) {\n                oranges++;\n            } else if (fruits[i].equals(\"\
    mango\")) {\n                mango++;\n            }\n        }\n        return\
    \ mango;"]
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "\n    }\n"

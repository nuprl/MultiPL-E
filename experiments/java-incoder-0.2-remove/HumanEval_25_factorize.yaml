name: HumanEval_25_factorize
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Return list of prime factors of given integer in the order\
  \ from smallest to largest.\n    // Each of the factors should be listed number\
  \ of times corresponding to how many times it appeares in factorization.\n    //\
  \ Input number should be equal to the product of all factors\n    public static\
  \ ArrayList<Integer> factorize(int n) {\n"
tests: "return new ArrayList<Integer>(Arrays.asList());\n    }\n    public static\
  \ void main(String[] args) {\n    assert(factorize((2)).equals((new ArrayList<Integer>(Arrays.asList((int)2)))));\n\
  \    assert(factorize((4)).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
  \ (int)2)))));\n    assert(factorize((8)).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
  \ (int)2, (int)2)))));\n    assert(factorize((57)).equals((new ArrayList<Integer>(Arrays.asList((int)3,\
  \ (int)19)))));\n    assert(factorize((3249)).equals((new ArrayList<Integer>(Arrays.asList((int)3,\
  \ (int)3, (int)19, (int)19)))));\n    assert(factorize((185193)).equals((new ArrayList<Integer>(Arrays.asList((int)3,\
  \ (int)3, (int)3, (int)19, (int)19, (int)19)))));\n    assert(factorize((20577)).equals((new\
  \ ArrayList<Integer>(Arrays.asList((int)3, (int)19, (int)19, (int)19)))));\n   \
  \ assert(factorize((18)).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
  \ (int)3)))));\n    }\n\n}\n"
completions: ["        ArrayList<Integer> factors = new ArrayList<Integer>();\n  \
    \      ArrayList<Integer> factorization = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ primes = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorization\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactors = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> primeFactorsCount = new ArrayList<Integer>();\n  \
    \      ArrayList<Integer> primeFactorsCount2 = new ArrayList<Integer>();\n   \
    \     ArrayList<Integer> primeFactorsCount3 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> primeFactorsCount4 = new ArrayList<Integer>();\n     \
    \   ArrayList<Integer> primeFactorsCount5 = new ArrayList<Integer>();\n      \
    \  ArrayList<Integer> primeFactorsCount6 = new ArrayList<Integer>();\n       \
    \ ArrayList<Integer> primeFactorsCount7 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ primeFactorsCount8 = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorsCount9\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorsCount10\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorsCount11\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorsCount12\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorsCount13\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorsCount14\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorsCount15\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorsCount16\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorsCount17\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorsCount18\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorsCount19\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorsCount20\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorsCount21\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorsCount22\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorsCount23\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorsCount24\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorsCount25\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorsCount26\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorsCount27\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorsCount28\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorsCount29\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorsCount30\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorsCount31\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorsCount32\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorsCount33",
  "        ArrayList<Integer> factors = new ArrayList<>();\n        factorize(n, factors);\n\
    \        return factors;", "        ArrayList<Integer> factors = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization = new ArrayList<Integer>();\n      \
    \  int i = 2;\n        while (i <= n) {\n            if (n % i == 0) {\n     \
    \           factors.add(i);\n                factorization.add(i);\n         \
    \       while (n % i == 0) {\n                    n /= i;\n                  \
    \  factors.add(i);\n                    factorization.add(i);\n              \
    \  }\n            }\n            i++;\n        }\n        if (n > 1) {\n     \
    \       factors.add(n);\n            factorization.add(n);\n        }\n      \
    \  return factorization;", "        ArrayList<Integer> factors = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization = new ArrayList<>();\n        factorization.add(1);\n\
    \        factors.add(1);\n        factors.add(2);\n        for (int i = 2; i <=\
    \ Math.sqrt(n); i++) {\n            if (n % i == 0) {\n                while (n\
    \ % i == 0) {\n                    factorization.add(i);\n                   \
    \ n /= i;\n                }\n                factors.add(1);\n              \
    \  factors.add(i);\n                factors.add(2);\n            }\n        }\n\
    \        if (n > 1) {\n            factorization.add(n);\n        }\n        return\
    \ factorization;", "        ArrayList<Integer> factors = new ArrayList<>();\n\
    \        for (int i = 2; i <= Math.sqrt(n); i++) {\n            if (n % i == 0)\
    \ {\n                while (n % i == 0) {\n                    factors.add(i);\n\
    \                    n /= i;\n                }\n            }\n        }\n  \
    \      if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
  "        ArrayList<Integer> factors = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<>();\n        factorization.add(1);\n        factors.add(1);\n\
    \        int i = 2;\n        while (factorization.size() < n) {\n            while\
    \ (n % i == 0) {\n                factorization.add(i);\n                factors.add(i);\n\
    \                n /= i;\n            }\n            i++;\n        }\n       \
    \ return factors;", "        ArrayList<Integer> factors = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization = new ArrayList<>();\n        factorization.add(n);\n\
    \        factors.add(n);\n        int i = 2;\n        while (i < factorization.size())\
    \ {\n            while (factorization.get(i) % i == 0) {\n                factors.add(i);\n\
    \                factorization.add(i);\n                i++;\n            }\n\
    \        }\n        return factors;", "        ArrayList<Integer> factors = new\
    \ ArrayList<>();\n        factorize(n, factors);\n        return factors;", " \
    \       ArrayList<Integer> factors = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<>();\n        ArrayList<Integer> primes = new\
    \ ArrayList<>();\n        ArrayList<Integer> primeFactors = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorization = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorization2 = new ArrayList<>();\n        ArrayList<Integer> primeFactorization3\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorization4 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorization5 = new ArrayList<>();\n       \
    \ ArrayList<Integer> primeFactorization6 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorization7 = new ArrayList<>();\n        ArrayList<Integer> primeFactorization8\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorization9 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorization10 = new ArrayList<>();\n      \
    \  ArrayList<Integer> primeFactorization11 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorization12 = new ArrayList<>();\n        ArrayList<Integer> primeFactorization13\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorization14 = new\
    \ ArrayList<>();\n        ArrayList<Integer> primeFactorization15 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorization16 = new ArrayList<>();\n      \
    \  ArrayList<Integer> primeFactorization17 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorization18 = new ArrayList<>();\n        ArrayList<Integer> primeFactorization19\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorization20 = new\
    \ ArrayList<>();\n        ArrayList<Integer> primeFactorization21 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorization22 = new ArrayList<>();\n      \
    \  ArrayList<Integer> primeFactorization23 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorization24 = new ArrayList<>();\n        ArrayList<Integer> primeFactorization25\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorization26 = new\
    \ ArrayList<>();\n        ArrayList<Integer> primeFactorization27 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorization28 = new ArrayList<>();\n      \
    \  ArrayList<Integer> primeFactorization29 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorization30 = new ArrayList<>();\n        ArrayList<Integer> primeFactorization31\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorization32 = new\
    \ ArrayList<>();\n        ArrayList<Integer> primeFactorization33 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorization34 = new ArrayList<>();\n      \
    \  ArrayList<Integer> primeFactorization35 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorization36 = new ArrayList<>();\n        ArrayList<Integer> primeFactorization37\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorization38 = new\
    \ ArrayList<>();\n        ArrayList<Integer> primeFactorization39 = new ArrayList<>();\n\
    \        ArrayList<Integer> prime", "        ArrayList<Integer> factors = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> primes = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ primeFactorization = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactors\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorsCount =\
    \ new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorsCount2 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> primeFactorsCount3 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> primeFactorsCount4 = new ArrayList<Integer>();\n \
    \       ArrayList<Integer> primeFactorsCount5 = new ArrayList<Integer>();\n  \
    \      ArrayList<Integer> primeFactorsCount6 = new ArrayList<Integer>();\n   \
    \     ArrayList<Integer> primeFactorsCount7 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> primeFactorsCount8 = new ArrayList<Integer>();\n     \
    \   ArrayList<Integer> primeFactorsCount9 = new ArrayList<Integer>();\n      \
    \  ArrayList<Integer> primeFactorsCount10 = new ArrayList<Integer>();\n      \
    \  ArrayList<Integer> primeFactorsCount11 = new ArrayList<Integer>();\n      \
    \  ArrayList<Integer> primeFactorsCount12 = new ArrayList<Integer>();\n      \
    \  ArrayList<Integer> primeFactorsCount13 = new ArrayList<Integer>();\n      \
    \  ArrayList<Integer> primeFactorsCount14 = new ArrayList<Integer>();\n      \
    \  ArrayList<Integer> primeFactorsCount15 = new ArrayList<Integer>();\n      \
    \  ArrayList<Integer> primeFactorsCount16 = new ArrayList<Integer>();\n      \
    \  ArrayList<Integer> primeFactorsCount17 = new ArrayList<Integer>();\n      \
    \  ArrayList<Integer> primeFactorsCount18 = new ArrayList<Integer>();\n      \
    \  ArrayList<Integer> primeFactorsCount19 = new ArrayList<Integer>();\n      \
    \  ArrayList<Integer> primeFactorsCount20 = new ArrayList<Integer>();\n      \
    \  ArrayList<Integer> primeFactorsCount21 = new ArrayList<Integer>();\n      \
    \  ArrayList<Integer> primeFactorsCount22 = new ArrayList<Integer>();\n      \
    \  ArrayList<Integer> primeFactorsCount23 = new ArrayList<Integer>();\n      \
    \  ArrayList<Integer> primeFactorsCount24 = new ArrayList<Integer>();\n      \
    \  ArrayList<Integer> primeFactorsCount25 = new ArrayList<Integer>();\n      \
    \  ArrayList<Integer> primeFactorsCount26 = new ArrayList<Integer>();\n      \
    \  ArrayList<Integer> primeFactorsCount27 = new ArrayList<Integer>();\n      \
    \  ArrayList<Integer> primeFactorsCount28 = new ArrayList<Integer>();\n      \
    \  ArrayList<Integer> primeFactorsCount29 = new ArrayList<Integer>();\n      \
    \  ArrayList<Integer> primeFactorsCount30 = new ArrayList<Integer>();\n      \
    \  ArrayList<Integer> primeFactorsCount31 = new ArrayList<Integer>();\n      \
    \  ArrayList<Integer> primeFactorsCount32 = new ArrayList<Integer>();\n      \
    \  ArrayList<Integer> primeFactorsCount33", "        ArrayList<Integer> factors\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization = new ArrayList<>();\n\
    \        factorization.add(1);\n        factors.add(1);\n        for (int i =\
    \ 2; i <= n; i++) {\n            while (n % i == 0) {\n                factorization.add(i);\n\
    \                factors.add(i);\n                n /= i;\n            }\n   \
    \     }\n        if (n != 1) {\n            factorization.add(n);\n          \
    \  factors.add(n);\n        }\n        return factorization;", "        ArrayList<Integer>\
    \ factors = new ArrayList<>();\n        ArrayList<Integer> factorization = new\
    \ ArrayList<>();\n        ArrayList<Integer> primeFactors = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorization = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorization2 = new ArrayList<>();\n        ArrayList<Integer> primeFactorization3\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorization4 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorization5 = new ArrayList<>();\n       \
    \ ArrayList<Integer> primeFactorization6 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorization7 = new ArrayList<>();\n        ArrayList<Integer> primeFactorization8\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorization9 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorization10 = new ArrayList<>();\n      \
    \  ArrayList<Integer> primeFactorization11 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorization12 = new ArrayList<>();\n        ArrayList<Integer> primeFactorization13\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorization14 = new\
    \ ArrayList<>();\n        ArrayList<Integer> primeFactorization15 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorization16 = new ArrayList<>();\n      \
    \  ArrayList<Integer> primeFactorization17 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorization18 = new ArrayList<>();\n        ArrayList<Integer> primeFactorization19\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorization20 = new\
    \ ArrayList<>();\n        ArrayList<Integer> primeFactorization21 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorization22 = new ArrayList<>();\n      \
    \  ArrayList<Integer> primeFactorization23 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorization24 = new ArrayList<>();\n        ArrayList<Integer> primeFactorization25\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorization26 = new\
    \ ArrayList<>();\n        ArrayList<Integer> primeFactorization27 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorization28 = new ArrayList<>();\n      \
    \  ArrayList<Integer> primeFactorization29 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorization30 = new ArrayList<>();\n        ArrayList<Integer> primeFactorization31\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorization32 = new\
    \ ArrayList<>();\n        ArrayList<Integer> primeFactorization33 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorization34 = new ArrayList<>();\n      \
    \  ArrayList<Integer> primeFactorization35 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorization36 = new ArrayList<>();\n        ArrayList<Integer> primeFactorization37\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorization38 = new\
    \ ArrayList<>();\n        ArrayList<Integer> primeFactorization39 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorization40 = new ArrayList<>();\n      \
    \  ArrayList<", "        ArrayList<Integer> factors = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization = new ArrayList<Integer>();\n      \
    \  factorization.add(1);\n        factors.add(1);\n        int i = 2;\n      \
    \  while (factorization.size() < n) {\n            while (factorization.size()\
    \ < n) {\n                if (n % i == 0) {\n                    factorization.add(i);\n\
    \                    factors.add(1);\n                    n /= i;\n          \
    \          i++;\n                } else {\n                    factorization.add(i);\n\
    \                    factors.add(1);\n                }\n            }\n     \
    \   }\n        return factors;", "        ArrayList<Integer> factors = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization = new ArrayList<>();\n        factorization.add(1);\n\
    \        factors.add(1);\n        for (int i = 2; i <= Math.sqrt(n); i++) {\n\
    \            if (n % i == 0) {\n                while (n % i == 0) {\n       \
    \             factorization.add(i);\n                    n /= i;\n           \
    \     }\n                factors.add(factorization.get(i));\n                factorization.remove(i);\n\
    \            }\n        }\n        return factors;", "        ArrayList<Integer>\
    \ factors = new ArrayList<>();\n        for (int i = 2; i <= Math.sqrt(n); i++)\
    \ {\n            if (n % i == 0) {\n                while (n % i == 0) {\n   \
    \                 n /= i;\n                    factors.add(i);\n             \
    \   }\n            }\n        }\n        return factors;", "        ArrayList<Integer>\
    \ factors = new ArrayList<Integer>();\n        factorize(n, factors);\n      \
    \  return factors;", "        ArrayList<Integer> factors = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization = new ArrayList<>();\n        factorization\
    \ = factorize(n);\n        factors.add(factorization.get(0));\n        for (int\
    \ i = 1; i < factorization.size(); i++) {\n            int count = 0;\n      \
    \      for (int j = 0; j < factorization.size(); j++) {\n                if (factorization.get(j)\
    \ == factorization.get(i)) {\n                    count++;\n                }\n\
    \            }\n            factors.add(factorization.get(i));\n            factors.add(count);\n\
    \        }\n        return factors;", "        ArrayList<Integer> factors = new\
    \ ArrayList<>();\n        ArrayList<Integer> factorization = new ArrayList<>();\n\
    \        int i = 2;\n        while (i < n) {\n            if (n % i == 0) {\n\
    \                factors.add(i);\n                factorization.add(1);\n    \
    \            while (i < n / i) {\n                    if (n % i == 0) {\n    \
    \                    factors.add(i);\n                        factorization.add(factorization.get(i)\
    \ + 1);\n                        i++;\n                    } else {\n        \
    \                i++;\n                    }\n                }\n            }\n\
    \            i++;\n        }\n        return factors;", "        ArrayList<Integer>\
    \ factors = new ArrayList<>();\n        factorize(n, factors);\n        return\
    \ factors;", "        ArrayList<Integer> factors = new ArrayList<>();\n      \
    \  ArrayList<Integer> factorization = new ArrayList<>();\n        factorization\
    \ = factorize(n);\n        factors.add(factorization.size());\n        for (int\
    \ i = 0; i < factorization.size(); i++) {\n            factors.add(factorization.get(i));\n\
    \        }\n        return factors;", "        ArrayList<Integer> factors = new\
    \ ArrayList<>();\n        ArrayList<Integer> factorization = new ArrayList<>();\n\
    \        factorization.add(1);\n        factors.add(1);\n        for (int i =\
    \ 2; i <= n; i++) {\n            while (n % i == 0) {\n                factorization.add(i);\n\
    \                factors.add(i);\n                n /= i;\n            }\n   \
    \     }\n        if (n != 1) {\n            factorization.add(n);\n          \
    \  factors.add(n);\n        }\n        return factorization;", "        ArrayList<Integer>\
    \ factors = new ArrayList<Integer>();\n        ArrayList<Integer> factorization\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization2 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization3 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization4 = new ArrayList<Integer>();\n     \
    \   ArrayList<Integer> factorization5 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization6 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization7\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization8 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization9 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization10 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization11 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization12 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization13\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization14 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization15 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization16 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization17 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization18 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization19\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization20 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization21 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization22 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization23 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization24 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization25\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization26 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization27 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization28 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization29 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization30 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization31\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization32 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization33 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization34 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization35 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization36 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization37\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization38 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization39 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization40 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization41 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization42 = ", "        ArrayList<Integer> factors = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization = new ArrayList<>();\n        factorization.add(1);\n\
    \        factors.add(1);\n        int i = 2;\n        while (i < n) {\n      \
    \      while (n % i == 0) {\n                factorization.add(i);\n         \
    \       factors.add(i);\n                n /= i;\n            }\n            i++;\n\
    \        }\n        if (n != 1) {\n            factorization.add(n);\n       \
    \     factors.add(n);\n        }\n        return factorization;", "        ArrayList<Integer>\
    \ factors = new ArrayList<>();\n        ArrayList<Integer> factorization = new\
    \ ArrayList<>();\n        factorization = getFactorization(n);\n        factors.add(1);\n\
    \        factors.add(factorization.size());\n        factors.add(1);\n       \
    \ for (int i = 2; i <= factorization.size(); i++) {\n            if (factorization.contains(i))\
    \ {\n                factors.add(i);\n                factors.add(factorization.get(i));\n\
    \                factors.add(1);\n            }\n        }\n        return factors;",
  "        ArrayList<Integer> factors = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<Integer>();\n        factors.add(2);\n       \
    \ factors.add(3);\n        factors.add(5);\n        factors.add(7);\n        factors.add(11);\n\
    \        factors.add(13);\n        factors.add(17);\n        factors.add(19);\n\
    \        factors.add(23);\n        factors.add(29);\n        factors.add(31);\n\
    \        factors.add(37);\n        factors.add(41);\n        factors.add(43);\n\
    \        factors.add(47);\n        factors.add(53);\n        factors.add(59);\n\
    \        factors.add(61);\n        factors.add(67);\n        factors.add(71);\n\
    \        factors.add(73);\n        factors.add(79);\n        factors.add(83);\n\
    \        factors.add(89);\n        factors.add(97);\n        factors.add(103);\n\
    \        factors.add(109);\n        factors.add(113);\n        factors.add(127);\n\
    \        factors.add(131);\n        factors.add(137);\n        factors.add(139);\n\
    \        factors.add(149);\n        factors.add(151);\n        factors.add(157);\n\
    \        factors.add(163);\n        factors.add(167);\n        factors.add(173);\n\
    \        factors.add(179);\n        factors.add(181);\n        factors.add(191);\n\
    \        factors.add(193);\n        factors.add(197);\n        factors.add(199);\n\
    \        factors.add(203);\n        factors.add(207);\n        factors.add(211);\n\
    \        factors.add(223);\n        factors.add(227);\n        factors.add(229);\n\
    \        factors.add(233);\n        factors.add(239);\n        factors.add(241);\n\
    \        factors.add(251);\n        factors.add(257);\n        factors.add(263);\n\
    \        factors.add(269);\n        factors.add(271);\n        factors.add(277);\n\
    \        factors.add(281);\n        factors.add(283);\n        factors.add(293);\n\
    \        factors.add(307);\n        factors.add(311);\n        factors.add(313;\n\
    \        factors.add(317);\n        factors.add(331);\n        factors.add(337);\n\
    \        factors.add(347);\n        factors.add(349);\n        factors.add(353);\n\
    \        factors.add(371);\n        factors.add(373);\n        factors.add(409);\n\
    \        factors.add(419);\n        factors.add(431);\n        factors.add(439);\n\
    \        factors.add(443);\n        factors.add(449);\n        factors.add(457);\n\
    \        factors.add(461);\n        factors.add(467);\n        factors.add(",
  "        ArrayList<Integer> factors = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<>();\n        factors.add(2);\n        factors.add(1);\n\
    \        factorization.add(2);\n        factorization.add(1);\n        factorization.add(1);\n\
    \        factorization.add(2);\n        factorization.add(2);\n        factorization.add(2);\n\
    \        factorization.add(2);\n        factorization.add(2);\n        factorization.add(2);\n\
    \        factorization.add(2);\n        factorization.add(2);\n        factorization.add(2);\n\
    \        factorization.add(2);\n        factorization.add(2);\n        factorization.add(2);\n\
    \        factorization.add(2);\n        factorization.add(2);\n        factorization.add(2);\n\
    \        factorization.add(2);\n        factorization.add(2);\n        factorization.add(2);\n\
    \        factorization.add(2);\n        factorization.add(2);\n        factorization.add(2);\n\
    \        factorization.add(2);\n        factorization.add(2);\n        factorization.add(2);\n\
    \        factorization.add(2);\n        factorization.add(2);\n        factorization.add(2);\n\
    \        factorization.add(2);\n        factorization.add(2);\n        factorization.add(2);\n\
    \        factorization.add(2);\n        factorization.add(2);\n        factorization.add(2);\n\
    \        factorization.add(2);\n        factorization.add(2);\n        factorization.add(2);\n\
    \        factorization.add(2);\n        factorization.add(2);\n        factorization.add(2);\n\
    \        factorization.add(2);\n        factorization.add(2);\n        factorization.add(2);\n\
    \        factorization.add(2);\n        factorization.add(2);\n        factorization.add(2);\n\
    \        factorization.add(2);\n        factorization.add(2);\n        factorization.add(2);\n\
    \        factorization.add(2);\n        factorization.add(2);\n        factorization.add(2);\n\
    \        factorization.add(2);\n        factorization.add(2);\n        factorization.add(2);\n\
    \        factorization.add(2);\n        factorization.add(2);\n        factorization.add(2);\n\
    \        factorization.add(2);\n        factorization.add(2);\n        factorization.add(2);\n\
    \        factorization.add(2);\n        factorization.add(2);\n        factorization.add(2);\n\
    \        factorization.add(2);\n        factorization.add(2);\n        factorization.add(2);\n\
    \        factorization.add(2);\n        factorization.add(2);\n        factorization.add(2);\n\
    \        factorization.add(2);\n        factorization.add(2);\n        factorization.add(2);\n\
    \        factorization.add(2);\n        factorization.add(2);\n        factorization.add(2);\n\
    \        factorization.add(2);\n        factorization.add(2);\n        factorization.",
  "        ArrayList<Integer> factors = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<>();\n        factorization = factorization(n);\n\
    \        factors.add(factorization.get(0));\n        for (int i = 1; i < factorization.size();\
    \ i++) {\n            if (factorization.get(i) == 1) {\n                continue;\n\
    \            }\n            int count = 0;\n            for (int j = 0; j < factorization.size();\
    \ j++) {\n                if (factorization.get(j) == factorization.get(i)) {\n\
    \                    count++;\n                }\n            }\n            factors.add(factorization.get(i));\n\
    \            factors.add(count);\n        }\n        return factors;", "     \
    \   ArrayList<Integer> factors = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<>();\n        factorization = factorize(n);\n\
    \        factors.add(factorization.get(0));\n        for (int i = 1; i < factorization.size();\
    \ i++) {\n            if (factorization.get(i) == 1) {\n                factors.add(factorization.get(i));\n\
    \            } else {\n                factors.add(factorization.get(i));\n  \
    \              factors.add(factorization.get(i));\n            }\n        }\n\
    \        return factors;", "        ArrayList<Integer> factors = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization = new ArrayList<>();\n        factorization\
    \ = factorize(n);\n        for (int i = 0; i < factorization.size(); i++) {\n\
    \            factors.add(factorization.get(i));\n        }\n        return factors;",
  "        ArrayList<Integer> factors = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<>();\n        factorization.add(1);\n        factors.add(1);\n\
    \        for (int i = 2; i <= n; i++) {\n            if (n % i == 0) {\n     \
    \           while (n % i == 0) {\n                    factorization.add(i);\n\
    \                    n /= i;\n                }\n                factors.add(1);\n\
    \                factorization.add(i);\n            }\n        }\n        return\
    \ factorization;", "        ArrayList<Integer> factors = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization = new ArrayList<>();\n        factorization\
    \ = factorize(n);\n        factors.add(factorization.get(0));\n        for (int\
    \ i = 1; i < factorization.size(); i++) {\n            if (factorization.get(i)\
    \ == 1) {\n                factors.add(factorization.get(i));\n            } else\
    \ {\n                for (int j = 0; j < factorization.get(i); j++) {\n      \
    \              factors.add(factorization.get(i));\n                }\n       \
    \     }\n        }\n        return factors;", "        ArrayList<Integer> factors\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization = new ArrayList<>();\n\
    \        factorization = factorize(n);\n        factors.add(factorization.get(0));\n\
    \        for (int i = 1; i < factorization.size(); i++) {\n            while (n\
    \ % factorization.get(i) == 0) {\n                factors.add(factorization.get(i));\n\
    \                n /= factorization.get(i);\n            }\n        }\n      \
    \  return factors;", "        ArrayList<Integer> factors = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization = new ArrayList<Integer>();\n      \
    \  factors.add(2);\n        factors.add(3);\n        factors.add(5);\n       \
    \ factors.add(7);\n        factors.add(11);\n        factors.add(13);\n      \
    \  factors.add(17);\n        factors.add(19);\n        factors.add(23);\n    \
    \    factors.add(29);\n        factors.add(31);\n        factors.add(37);\n  \
    \      factors.add(41);\n        factors.add(43);\n        factors.add(47);\n\
    \        factors.add(53);\n        factors.add(59);\n        factors.add(61);\n\
    \        factors.add(67);\n        factors.add(71);\n        factors.add(73);\n\
    \        factors.add(79);\n        factors.add(83);\n        factors.add(89);\n\
    \        factors.add(97);\n        factors.add(103);\n        factors.add(109);\n\
    \        factors.add(113);\n        factors.add(127);\n        factors.add(131);\n\
    \        factors.add(137);\n        factors.add(139);\n        factors.add(143);\n\
    \        factors.add(147);\n        factors.add(151);\n        factors.add(157);\n\
    \        factors.add(163);\n        factors.add(167);\n        factors.add(173);\n\
    \        factors.add(179);\n        factors.add(181);\n        factors.add(191);\n\
    \        factors.add(193);\n        factors.add(197);\n        factors.add(199);\n\
    \        factors.add(203);\n        factors.add(207);\n        factors.add(211);\n\
    \        factors.add(217);\n        factors.add(223);\n        factors.add(227);\n\
    \        factors.add(229);\n        factors.add(233);\n        factors.add(239);\n\
    \        factors.add(241);\n        factors.add(251);\n        factors.add(257);\n\
    \        factors.add(263);\n        factors.add(269);\n        factors.add(271);\n\
    \        factors.add(277);\n        factors.add(281);\n        factors.add(283);\n\
    \        factors.add(293);\n        factors.add(307);\n        factors.add(311);\n\
    \        factors.add(313;\n        factors.add(317);\n        factors.add(331);\n\
    \        factors.add(337);\n        factors.add(347);\n        factors.add(349);\n\
    \        factors.add(353);\n        factors.add(359);\n        factors.add(361);\n\
    \        factors.add(371);\n        factors.add(373);\n        factors.add(409);\n\
    \        factors.add(419);\n        factors.add(421);\n        factors.add(433);\n\
    \        factors.add(439);\n        factors.add(44", "        ArrayList<Integer>\
    \ factors = new ArrayList<Integer>();\n        ArrayList<Integer> factorization\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primes = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> primeFactorization = new ArrayList<Integer>();\n \
    \       ArrayList<Integer> primeFactors = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ primeFactorsCount = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorsCount2\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorsCount3 =\
    \ new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorsCount4 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> primeFactorsCount5 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> primeFactorsCount6 = new ArrayList<Integer>();\n \
    \       ArrayList<Integer> primeFactorsCount7 = new ArrayList<Integer>();\n  \
    \      ArrayList<Integer> primeFactorsCount8 = new ArrayList<Integer>();\n   \
    \     ArrayList<Integer> primeFactorsCount9 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> primeFactorsCount10 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> primeFactorsCount11 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> primeFactorsCount12 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> primeFactorsCount13 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> primeFactorsCount14 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> primeFactorsCount15 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> primeFactorsCount16 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> primeFactorsCount17 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> primeFactorsCount18 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> primeFactorsCount19 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> primeFactorsCount20 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> primeFactorsCount21 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> primeFactorsCount22 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> primeFactorsCount23 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> primeFactorsCount24 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> primeFactorsCount25 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> primeFactorsCount26 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> primeFactorsCount27 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> primeFactorsCount28 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> primeFactorsCount29 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> primeFactorsCount30 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> primeFactorsCount31 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> primeFactorsCount32 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> primeFactorsCount33", "        ArrayList<Integer> factors\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization = new ArrayList<>();\n\
    \        factorization = getFactorization(n);\n        factors = factorization.stream().map(factor\
    \ -> factorization.indexOf(factor)).distinct().sorted().collect(Collectors.toList());\n\
    \        return factors;", "        ArrayList<Integer> factors = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization = new ArrayList<>();\n        factorization.add(1);\n\
    \        factors.add(1);\n        factors.add(2);\n        factors.add(2);\n \
    \       factors.add(3);\n        factors.add(3);\n        factors.add(5);\n  \
    \      factors.add(5);\n        factors.add(7);\n        factors.add(7);\n   \
    \     factors.add(11);\n        factors.add(11);\n        factors.add(13);\n \
    \       factors.add(13);\n        factors.add(17);\n        factors.add(17);\n\
    \        factors.add(19);\n        factors.add(19);\n        factors.add(23);\n\
    \        factors.add(23);\n        factors.add(29);\n        factors.add(29);\n\
    \        factors.add(31);\n        factors.add(31);\n        factors.add(37);\n\
    \        factors.add(37);\n        factors.add(41);\n        factors.add(41);\n\
    \        factors.add(43);\n        factors.add(43);\n        factors.add(47);\n\
    \        factors.add(47);\n        factors.add(53);\n        factors.add(53);\n\
    \        factors.add(59);\n        factors.add(59);\n        factors.add(61);\n\
    \        factors.add(61);\n        factors.add(67);\n        factors.add(67);\n\
    \        factors.add(71);\n        factors.add(71);\n        factors.add(73);\n\
    \        factors.add(73);\n        factors.add(79);\n        factors.add(79);\n\
    \        factors.add(83);\n        factors.add(83);\n        factors.add(89);\n\
    \        factors.add(89);\n        factors.add(97);\n        factors.add(97);\n\
    \        factors.add(101);\n        factors.add(101);\n        factors.add(103);\n\
    \        factors.add(103);\n        factors.add(107);\n        factors.add(107);\n\
    \        factors.add(113);\n        factors.add(113);\n        factors.add(117);\n\
    \        factors.add(117);\n        factors.add(121);\n        factors.add(121);\n\
    \        factors.add(123);\n        factors.add(123);\n        factors.add(127);\n\
    \        factors.add(127);\n        factors.add(131);\n        factors.add(131);\n\
    \        factors.add(137);\n        factors.add(137);\n        factors.add(139);\n\
    \        factors.add(139);\n        factors.add(143);\n        factors.add(143);\n\
    \        factors.add(147);\n        factors.add(147);\n        factors.add(151);\n\
    \        factors.add(151);\n        factors.add(153);\n        factors.add(153);\n\
    \        factors.add(157);\n        factors.add(157);\n        factors.add(16",
  "        ArrayList<Integer> factors = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<>();\n        ArrayList<Integer> factorization2\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization3 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization4 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization5 = new ArrayList<>();\n        ArrayList<Integer> factorization6\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization7 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization8 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization9 = new ArrayList<>();\n        ArrayList<Integer> factorization10\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization11 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization12 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization13 = new ArrayList<>();\n        ArrayList<Integer> factorization14\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization15 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization16 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization17 = new ArrayList<>();\n        ArrayList<Integer> factorization18\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization19 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization20 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization21 = new ArrayList<>();\n        ArrayList<Integer> factorization22\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization23 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization24 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization25 = new ArrayList<>();\n        ArrayList<Integer> factorization26\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization27 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization28 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization29 = new ArrayList<>();\n        ArrayList<Integer> factorization30\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization31 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization32 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization33 = new ArrayList<>();\n        ArrayList<Integer> factorization34\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization35 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization36 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization37 = new ArrayList<>();\n        ArrayList<Integer> factorization38\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization39 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization40 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization41 = new ArrayList<>();\n        ArrayList<Integer> factorization42\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization43 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization44 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization45 = new ArrayList<>();\n        ArrayList<Integer> ", "      \
    \  ArrayList<Integer> factors = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<>();\n        factorization.add(n);\n        factors.add(n);\n\
    \        factors.add(1);\n        factors.add(2);\n        factors.add(3);\n \
    \       factors.add(5);\n        factors.add(7);\n        factors.add(11);\n \
    \       factors.add(13);\n        factors.add(17);\n        factors.add(19);\n\
    \        factors.add(23);\n        factors.add(29);\n        factors.add(31);\n\
    \        factors.add(37);\n        factors.add(41);\n        factors.add(43);\n\
    \        factors.add(47);\n        factors.add(53);\n        factors.add(59);\n\
    \        factors.add(61);\n        factors.add(67);\n        factors.add(71);\n\
    \        factors.add(73);\n        factors.add(79);\n        factors.add(83);\n\
    \        factors.add(89);\n        factors.add(97);\n        factors.add(103);\n\
    \        factors.add(109);\n        factors.add(113);\n        factors.add(127);\n\
    \        factors.add(131);\n        factors.add(137);\n        factors.add(139);\n\
    \        factors.add(143);\n        factors.add(147);\n        factors.add(151);\n\
    \        factors.add(157);\n        factors.add(163);\n        factors.add(167);\n\
    \        factors.add(173);\n        factors.add(179);\n        factors.add(181);\n\
    \        factors.add(191);\n        factors.add(193);\n        factors.add(197);\n\
    \        factors.add(199);\n        factors.add(203);\n        factors.add(207);\n\
    \        factors.add(211;\n        factors.add(223);\n        factors.add(227);\n\
    \        factors.add(229);\n        factors.add(233);\n        factors.add(239);\n\
    \        factors.add(241);\n        factors.add(251);\n        factors.add(257);\n\
    \        factors.add(263);\n        factors.add(269);\n        factors.add(271);\n\
    \        factors.add(277);\n        factors.add(281);\n        factors.add(283);\n\
    \        factors.add(293);\n        factors.add(307);\n        factors.add(311);\n\
    \        factors.add(313;\n        factors.add(317);\n        factors.add(331);\n\
    \        factors.add(337);\n        factors.add(347);\n        factors.add(349);\n\
    \        factors.add(353);\n        factors.add(359);\n        factors.add(361);\n\
    \        factors.add(371);\n        factors.add(373);\n        factors.add(409);\n\
    \        factors.add(419);\n        factors.add(431);\n        factors.add(439);\n\
    \        factor", "        ArrayList<Integer> factors = new ArrayList<>();\n \
    \       ArrayList<Integer> factorization = new ArrayList<>();\n        factorization\
    \ = getFactorization(n);\n        factors.add(factorization.get(0));\n       \
    \ for (int i = 1; i < factorization.size(); i++) {\n            if (factorization.get(i)\
    \ == 1) {\n                continue;\n            }\n            int j = 0;\n\
    \            while (j < factorization.size() && factorization.get(j) == factorization.get(i))\
    \ {\n                j++;\n            }\n            factors.add(factorization.get(i));\n\
    \            factors.add(j);\n        }\n        return factors;", "        ArrayList<Integer>\
    \ factors = new ArrayList<>();\n        ArrayList<Integer> factorization = new\
    \ ArrayList<>();\n        factorization.add(1);\n        factors.add(1);\n   \
    \     for (int i = 2; i <= n; i++) {\n            if (n % i == 0) {\n        \
    \        while (n % i == 0) {\n                    factorization.add(i);\n   \
    \                 n /= i;\n                }\n                factors.add(1);\n\
    \                factorization.add(i);\n            }\n        }\n        return\
    \ factorization;", "        ArrayList<Integer> factors = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization = new ArrayList<Integer>();\n      \
    \  factors.add(2);\n        factors.add(3);\n        factors.add(5);\n       \
    \ factors.add(7);\n        factors.add(11);\n        factors.add(13);\n      \
    \  factors.add(17);\n        factors.add(19);\n        factors.add(23);\n    \
    \    factors.add(29);\n        factors.add(31);\n        factors.add(37);\n  \
    \      factors.add(41);\n        factors.add(43);\n        factors.add(47);\n\
    \        factors.add(53);\n        factors.add(59);\n        factors.add(61);\n\
    \        factors.add(67);\n        factors.add(71);\n        factors.add(73);\n\
    \        factors.add(79);\n        factors.add(83);\n        factors.add(89);\n\
    \        factors.add(97);\n        factors.add(103);\n        factors.add(109);\n\
    \        factors.add(113);\n        factors.add(127);\n        factors.add(131);\n\
    \        factors.add(137);\n        factors.add(139);\n        factors.add(143);\n\
    \        factors.add(147);\n        factors.add(151);\n        factors.add(157);\n\
    \        factors.add(163);\n        factors.add(167);\n        factors.add(173);\n\
    \        factors.add(179);\n        factors.add(181);\n        factors.add(191);\n\
    \        factors.add(193);\n        factors.add(197);\n        factors.add(199);\n\
    \        factors.add(203);\n        factors.add(207);\n        factors.add(211);\n\
    \        factors.add(213);\n        factors.add(217);\n        factors.add(219);\n\
    \        factors.add(223);\n        factors.add(227);\n        factors.add(229);\n\
    \        factors.add(233);\n        factors.add(239);\n        factors.add(241);\n\
    \        factors.add(251);\n        factors.add(257);\n        factors.add(263);\n\
    \        factors.add(269);\n        factors.add(271);\n        factors.add(277);\n\
    \        factors.add(281);\n        factors.add(283);\n        factors.add(293);\n\
    \        factors.add(307);\n        factors.add(311);\n        factors.add(313;\n\
    \        factors.add(317);\n        factors.add(331);\n        factors.add(337);\n\
    \        factors.add(347);\n        factors.add(349);\n        factors.add(353);\n\
    \        factors.add(359);\n        factors.add(361);\n        factors.add(369);\n\
    \        factors.add(373);\n        factors.add(379);\n        factors.add(383);\n\
    \        factors.add(389);\n        factors.add(397);\n", "        ArrayList<Integer>\
    \ factors = new ArrayList<Integer>();\n        int i = 2;\n        while (i <=\
    \ n / i) {\n            if (n % i == 0) {\n                while (n % i == 0)\
    \ {\n                    factors.add(i);\n                    n /= i;\n      \
    \          }\n            }\n            i++;\n        }\n        if (n != 1)\
    \ {\n            factors.add(n);\n        }\n        return factors;", "     \
    \   ArrayList<Integer> factors = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<Integer>();\n        ArrayList<Integer> factorization2\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization3 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization4 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization5 = new ArrayList<Integer>();\n     \
    \   ArrayList<Integer> factorization6 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization7 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization8\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization9 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization10 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization11 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization12 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization13 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization14\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization15 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization16 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization17 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization18 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization19 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization20\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization21 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization22 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization23 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization24 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization25 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization26\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization27 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization28 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization29 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization30 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization31 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization32\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization33 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization34 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization35 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization36 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization37 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization38\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization39 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization40 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization41 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization42 = ", "        ArrayList<Integer> factors\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization = new\
    \ ArrayList<Integer>();\n        factorization = factorization(n);\n        factors.add(factorization.get(0));\n\
    \        for (int i = 1; i < factorization.size(); i++) {\n            while (factorization.get(i)\
    \ * factorization.get(i) <= n) {\n                factors.add(factorization.get(i));\n\
    \                n /= factorization.get(i);\n            }\n        }\n      \
    \  return factors;", "        ArrayList<Integer> factors = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization = new ArrayList<>();\n        factorization\
    \ = getFactorization(n);\n        factors.add(factorization.get(0));\n       \
    \ factors.add(factorization.get(1));\n        factors.add(factorization.get(2));\n\
    \        factors.add(factorization.get(3));\n        factors.add(factorization.get(4));\n\
    \        factors.add(factorization.get(5));\n        factors.add(factorization.get(6));\n\
    \        factors.add(factorization.get(7));\n        factors.add(factorization.get(8));\n\
    \        factors.add(factorization.get(9));\n        factors.add(factorization.get(10));\n\
    \        factors.add(factorization.get(11));\n        factors.add(factorization.get(12));\n\
    \        factors.add(factorization.get(13));\n        factors.add(factorization.get(14));\n\
    \        factors.add(factorization.get(15));\n        factors.add(factorization.get(16));\n\
    \        factors.add(factorization.get(17));\n        factors.add(factorization.get(18));\n\
    \        factors.add(factorization.get(19));\n        factors.add(factorization.get(20));\n\
    \        factors.add(factorization.get(21));\n        factors.add(factorization.get(22));\n\
    \        factors.add(factorization.get(23));\n        factors.add(factorization.get(24));\n\
    \        factors.add(factorization.get(25));\n        factors.add(factorization.get(26));\n\
    \        factors.add(factorization.get(27));\n        factors.add(factorization.get(28));\n\
    \        factors.add(factorization.get(29));\n        factors.add(factorization.get(30));\n\
    \        factors.add(factorization.get(31));\n        factors.add(factorization.get(32));\n\
    \        factors.add(factorization.get(33));\n        factors.add(factorization.get(34));\n\
    \        factors.add(factorization.get(35));\n        factors.add(factorization.get(36));\n\
    \        factors.add(factorization.get(37));\n        factors.add(factorization.get(38));\n\
    \        factors.add(factorization.get(39));\n        factors.add(factorization.get(40));\n\
    \        factors.add(factorization.get(41));\n        factors.add(factorization.get(42));\n\
    \        factors.add(factorization.get(43));\n        factors.add(factorization.get(44));\n\
    \        factors.add(factorization.get(45));\n        factors.add(factorization.get(46));\n\
    \        factors.add(factorization.get(47));\n        factors.add(factorization.get(48));\n\
    \        factors.add(factorization.get(49));\n        factors.add(factorization.get(50));\n\
    \        factors.add(factorization.get(51));\n        factors.add(factorization.get(52));\n\
    \        factors.add(factorization.get(5", "        ArrayList<Integer> factors\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization = new ArrayList<>();\n\
    \        factorization = getFactorization(n);\n        factors.add(factorization.get(0));\n\
    \        for (int i = 1; i < factorization.size(); i++) {\n            while (factorization.get(i)\
    \ == factorization.get(i - 1)) {\n                factors.add(i * factorization.get(i));\n\
    \                factorization.remove(i);\n                i--;\n            }\n\
    \        }\n        return factors;", "        ArrayList<Integer> factors = new\
    \ ArrayList<>();\n        ArrayList<Integer> factorization = new ArrayList<>();\n\
    \        factorization.add(n);\n        while (factorization.size() > 0) {\n \
    \           int current = factorization.get(0);\n            factorization.remove(0);\n\
    \            for (int i = 1; i <= Math.sqrt(current); i++) {\n               \
    \ if (current % i == 0) {\n                    factors.add(i);\n             \
    \       factorization.add(i * current);\n                }\n            }\n  \
    \      }\n        return factors;", "        ArrayList<Integer> factors = new\
    \ ArrayList<>();\n        factorize(n, factors);\n        return factors;", " \
    \       ArrayList<Integer> factors = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<>();\n        factorization.add(n);\n        factors.add(n);\n\
    \        ArrayList<Integer> primes = new ArrayList<>();\n        primes.add(2);\n\
    \        primes.add(3);\n        primes.add(5);\n        primes.add(7);\n    \
    \    primes.add(11);\n        primes.add(13);\n        primes.add(17);\n     \
    \   primes.add(19);\n        primes.add(23);\n        primes.add(29);\n      \
    \  primes.add(31);\n        primes.add(37);\n        primes.add(41);\n       \
    \ primes.add(43);\n        primes.add(47);\n        primes.add(53);\n        primes.add(59);\n\
    \        primes.add(61);\n        primes.add(67);\n        primes.add(71);\n \
    \       primes.add(73);\n        primes.add(79);\n        primes.add(83);\n  \
    \      primes.add(89);\n        primes.add(97);\n        primes.add(103);\n  \
    \      primes.add(109);\n        primes.add(113);\n        primes.add(127);\n\
    \        primes.add(131);\n        primes.add(137);\n        primes.add(139);\n\
    \        primes.add(149);\n        primes.add(151);\n        primes.add(157);\n\
    \        primes.add(163);\n        primes.add(167);\n        primes.add(173);\n\
    \        primes.add(179);\n        primes.add(181);\n        primes.add(191);\n\
    \        primes.add(193);\n        primes.add(197);\n        primes.add(199);\n\
    \        primes.add(211);\n        primes.add(223);\n        primes.add(227);\n\
    \        primes.add(229);\n        primes.add(233);\n        primes.add(239);\n\
    \        primes.add(241);\n        primes.add(251);\n        primes.add(257);\n\
    \        primes.add(263);\n        primes.add(269);\n        primes.add(271);\n\
    \        primes.add(277);\n        primes.add(281);\n        primes.add(283);\n\
    \        primes.add(293);\n        primes.add(307);\n        primes.add(311);\n\
    \        primes.add(313;\n        primes.add(317;\n        primes.add(331);\n\
    \        primes.add(337);\n        primes.add(347);\n        primes.add(349);\n\
    \        primes.add(353);\n        primes.add(371);\n        primes.add(373);\n\
    \        primes.add(409);\n        primes.add(419);\n        primes.add(421);\n\
    \        primes.add(433);\n        primes.add(447);\n        primes.add(449);\n\
    \        primes.add(451);\n        primes.add(457);\n        primes.add(461);",
  "        ArrayList<Integer> factors = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<>();\n        factorization.add(1);\n        factors.add(1);\n\
    \        factors.add(2);\n        factors.add(2);\n        factors.add(3);\n \
    \       factors.add(3);\n        factors.add(5);\n        factors.add(5);\n  \
    \      factors.add(7);\n        factors.add(7);\n        factors.add(11);\n  \
    \      factors.add(11);\n        factors.add(13);\n        factors.add(13);\n\
    \        factors.add(17);\n        factors.add(17);\n        factors.add(19);\n\
    \        factors.add(19);\n        factors.add(23);\n        factors.add(23);\n\
    \        factors.add(29);\n        factors.add(29);\n        factors.add(31);\n\
    \        factors.add(31);\n        factors.add(37);\n        factors.add(37);\n\
    \        factors.add(41);\n        factors.add(41);\n        factors.add(43);\n\
    \        factors.add(43);\n        factors.add(47);\n        factors.add(47);\n\
    \        factors.add(53);\n        factors.add(53);\n        factors.add(59);\n\
    \        factors.add(59);\n        factors.add(61);\n        factors.add(61);\n\
    \        factors.add(67);\n        factors.add(67);\n        factors.add(71);\n\
    \        factors.add(71);\n        factors.add(73);\n        factors.add(73);\n\
    \        factors.add(79);\n        factors.add(79);\n        factors.add(83);\n\
    \        factors.add(83);\n        factors.add(89);\n        factors.add(89);\n\
    \        factors.add(97);\n        factors.add(97);\n        factors.add(101);\n\
    \        factors.add(101);\n        factors.add(103);\n        factors.add(103);\n\
    \        factors.add(107);\n        factors.add(107);\n        factors.add(113);\n\
    \        factors.add(113);\n        factors.add(127);\n        factors.add(127);\n\
    \        factors.add(131);\n        factors.add(131);\n        factors.add(137);\n\
    \        factors.add(137);\n        factors.add(139);\n        factors.add(139);\n\
    \        factors.add(143);\n        factors.add(143);\n        factors.add(147);\n\
    \        factors.add(147);\n        factors.add(151);\n        factors.add(151);\n\
    \        factors.add(153);\n        factors.add(153);\n        factors.add(157);\n\
    \        factors.add(157);\n        factors.add(163);\n        factors.add(163);\n\
    \        factors.add(167);\n        factors.add(167);\n        factors.add(173);\n\
    \        factors.add(173);\n        factors.add(17", "        ArrayList<Integer>\
    \ factors = new ArrayList<>();\n        ArrayList<Integer> factorization = new\
    \ ArrayList<>();\n        factorization.add(n);\n        factors.add(1);\n   \
    \     while (factorization.size() > 0) {\n            int p = factorization.get(0);\n\
    \            factorization.remove(0);\n            for (int i = 2; i <= Math.sqrt(p);\
    \ i++) {\n                if (p % i == 0) {\n                    factorization.add(i);\n\
    \                    factors.add(i);\n                }\n            }\n     \
    \   }\n        return factors;", "        ArrayList<Integer> factors = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization = new ArrayList<Integer>();\n      \
    \  ArrayList<Integer> factorization2 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization3 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization4\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization5 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization6 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization7 = new ArrayList<Integer>();\n     \
    \   ArrayList<Integer> factorization8 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization9 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization10\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization11 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization12 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization13 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization14 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization15 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization16\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization17 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization18 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization19 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization20 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization21 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization22\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization23 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization24 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization25 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization26 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization27 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization28\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization29 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization30 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization31 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization32 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization33 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization34\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization35 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization36 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization37 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization38 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization39 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization40\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization41 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization42 = ", "   \
    \     ArrayList<Integer> factors = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<Integer>();\n        factors.add(2);\n       \
    \ factors.add(1);\n        factorization.add(2);\n        factorization.add(1);\n\
    \        for(int i = 2; i <= Math.sqrt(n); i++) {\n            if(n%i == 0) {\n\
    \                factors.add(i);\n                factorization.add(i);\n    \
    \            for(int j = i*i; j < n; j += i) {\n                    factors.add(j);\n\
    \                    factorization.add(j);\n                }\n            }\n\
    \        }\n        return factorization;", "        ArrayList<Integer> factors\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization = new ArrayList<>();\n\
    \        ArrayList<Integer> primes = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorization = new ArrayList<>();\n        ArrayList<Integer> primeFactors\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorsCount2 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorsCount3 = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount4\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount5 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorsCount6 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorsCount7 = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount8\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount9 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorsCount10 = new ArrayList<>();\n       \
    \ ArrayList<Integer> primeFactorsCount11 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorsCount12 = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount13\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount14 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorsCount15 = new ArrayList<>();\n       \
    \ ArrayList<Integer> primeFactorsCount16 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorsCount17 = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount18\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount19 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorsCount20 = new ArrayList<>();\n       \
    \ ArrayList<Integer> primeFactorsCount21 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorsCount22 = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount23\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount24 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorsCount25 = new ArrayList<>();\n       \
    \ ArrayList<Integer> primeFactorsCount26 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorsCount27 = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount28\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount29 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorsCount30 = new ArrayList<>();\n       \
    \ ArrayList<Integer> primeFactorsCount31 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorsCount32 = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount33\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount34 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorsCount35 = new ArrayList<>();\n       \
    \ ArrayList<Integer> primeFactors", "        ArrayList<Integer> factors = new\
    \ ArrayList<>();\n        ArrayList<Integer> factorization = new ArrayList<>();\n\
    \        factorization.add(n);\n        factors.add(n);\n        while (factorization.size()\
    \ > 1) {\n            int i = factorization.get(0);\n            int j = factorization.get(1);\n\
    \            while (j > i) {\n                if (n % i == 0) {\n            \
    \        factorization.add(i);\n                    factors.add(i, 1);\n     \
    \               n /= i;\n                } else {\n                    j--;\n\
    \                }\n            }\n            factorization.add(i);\n       \
    \     factors.add(i, 1);\n        }\n        return factors;", "        ArrayList<Integer>\
    \ factors = new ArrayList<>();\n        ArrayList<Integer> factorization = new\
    \ ArrayList<>();\n        factorization.add(n);\n        factors.add(n);\n   \
    \     int i = 2;\n        while (factorization.size() > 1) {\n            while\
    \ (factorization.size() > 1) {\n                int j = 0;\n                while\
    \ (j < factorization.size() && factorization.get(j) < factorization.get(j + 1))\
    \ {\n                    j++;\n                }\n                if (j == factorization.size())\
    \ {\n                    factors.add(factorization.get(0));\n                \
    \    factorization.remove(0);\n                } else {\n                    factors.add(factorization.get(j));\n\
    \                    factorization.remove(j);\n                }\n           \
    \ }\n            i = i + 2;\n        }\n        return factors;", "        ArrayList<Integer>\
    \ factors = new ArrayList<>();\n        ArrayList<Integer> factorization = new\
    \ ArrayList<>();\n        factorization = getFactorization(n);\n        factors\
    \ = getPrimeFactors(factorization);\n        return factors;", "        ArrayList<Integer>\
    \ factors = new ArrayList<>();\n        ArrayList<Integer> factorization = new\
    \ ArrayList<>();\n        factorization = getFactorization(n);\n        factors.addAll(factorization);\n\
    \        ArrayList<Integer> primeFactors = new ArrayList<>();\n        primeFactors\
    \ = getPrimeFactors(n);\n        factors.addAll(primeFactors);\n        return\
    \ factors;", "        ArrayList<Integer> factors = new ArrayList<>();\n      \
    \  ArrayList<Integer> factorization = new ArrayList<>();\n        factorization\
    \ = factorize(n);\n        factors.add(factorization.get(0));\n        for (int\
    \ i = 1; i < factorization.size(); i++) {\n            if (factorization.get(i)\
    \ == 1) {\n                factors.add(factorization.get(i));\n            } else\
    \ {\n                factors.add(factorization.get(i));\n                factors.add(factorization.get(i));\n\
    \            }\n        }\n        return factors;", "        ArrayList<Integer>\
    \ factors = new ArrayList<Integer>();\n        factors.add(2);\n        factors.add(1);\n\
    \        for(int i = 3; i <= Math.sqrt(n); i++) {\n            if(n%i == 0) {\n\
    \                factors.add(i);\n                while(n % i == 0) {\n      \
    \              factors.add(i);\n                    n /= i;\n                }\n\
    \            }\n        }\n        return factors;", "        ArrayList<Integer>\
    \ factors = new ArrayList<>();\n        ArrayList<Integer> factorization = new\
    \ ArrayList<>();\n        factorization.add(1);\n        factors.add(1);\n   \
    \     factors.add(2);\n        factors.add(2);\n        factors.add(3);\n    \
    \    factors.add(3);\n        factors.add(5);\n        factors.add(5);\n     \
    \   factors.add(7);\n        factors.add(7);\n        factors.add(11);\n     \
    \   factors.add(11);\n        factors.add(13);\n        factors.add(13);\n   \
    \     factors.add(17);\n        factors.add(17);\n        factors.add(19);\n \
    \       factors.add(19);\n        factors.add(23);\n        factors.add(23);\n\
    \        factors.add(29);\n        factors.add(29);\n        factors.add(31);\n\
    \        factors.add(31);\n        factors.add(37);\n        factors.add(37);\n\
    \        factors.add(41);\n        factors.add(41);\n        factors.add(43);\n\
    \        factors.add(43);\n        factors.add(47);\n        factors.add(47);\n\
    \        factors.add(53);\n        factors.add(53);\n        factors.add(59);\n\
    \        factors.add(59);\n        factors.add(61);\n        factors.add(61);\n\
    \        factors.add(67);\n        factors.add(67);\n        factors.add(71);\n\
    \        factors.add(71);\n        factors.add(73);\n        factors.add(73);\n\
    \        factors.add(79);\n        factors.add(79);\n        factors.add(83);\n\
    \        factors.add(83);\n        factors.add(89);\n        factors.add(89);\n\
    \        factors.add(97);\n        factors.add(97);\n        factors.add(101);\n\
    \        factors.add(101);\n        factors.add(103);\n        factors.add(103);\n\
    \        factors.add(105);\n        factors.add(105);\n        factors.add(107);\n\
    \        factors.add(107);\n        factors.add(109);\n        factors.add(109);\n\
    \        factors.add(113);\n        factors.add(113);\n        factors.add(127);\n\
    \        factors.add(127);\n        factors.add(131);\n        factors.add(131);\n\
    \        factors.add(137);\n        factors.add(137);\n        factors.add(139);\n\
    \        factors.add(139);\n        factors.add(143);\n        factors.add(143);\n\
    \        factors.add(147);\n        factors.add(147);\n        factors.add(151);\n\
    \        factors.add(151);\n        factors.add(153);\n        factors.add(153);\n\
    \        factors.add(157);\n        factors.add(157);\n        factors.add(163);\n\
    \        factors.add(163);\n        factors.add(16", "        ArrayList<Integer>\
    \ factors = new ArrayList<>();\n        ArrayList<Integer> factorization = new\
    \ ArrayList<>();\n        factors.add(2);\n        factors.add(1);\n        factorization.add(2);\n\
    \        factorization.add(1);\n        for(int i = 3; i <= Math.sqrt(n); i++)\
    \ {\n            int j = 1;\n            while(j * i <= n) {\n               \
    \ if(n % i == 0) {\n                    factors.add(i);\n                    factorization.add(j);\n\
    \                    n /= i;\n                }\n                j++;\n      \
    \      }\n        }\n        if(n > 1) {\n            factors.add(n);\n      \
    \      factorization.add(1);\n        }\n        return factorization;", "   \
    \     ArrayList<Integer> factors = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<Integer>();\n        factorization = factorize(n);\n\
    \        factors.add(factorization.get(0));\n        for (int i = 1; i < factorization.size();\
    \ i++) {\n            if (factorization.get(i) == factorization.get(i-1)) {\n\
    \                factors.add(factorization.get(i));\n            }\n        }\n\
    \        return factors;", "        ArrayList<Integer> factors = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization = new ArrayList<>();\n        factorization\
    \ = factorize(n);\n        factors.add(factorization.size());\n        for (int\
    \ i = 0; i < factorization.size(); i++) {\n            factors.add(factorization.get(i));\n\
    \        }\n        return factors;", "        ArrayList<Integer> factors = new\
    \ ArrayList<>();\n        ArrayList<Integer> factorization = new ArrayList<>();\n\
    \        factorization.add(1);\n        factors.add(1);\n        for (int i =\
    \ 2; i <= n / 2; i++) {\n            while (n % i == 0) {\n                factorization.add(i);\n\
    \                factors.add(i);\n                n = n / i;\n            }\n\
    \        }\n        factors.add(n);\n        return factorization;", "       \
    \ ArrayList<Integer> factors = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<Integer>();\n        factors.add(2);\n       \
    \ factors.add(3);\n        factors.add(5);\n        factors.add(7);\n        factors.add(11);\n\
    \        factors.add(13);\n        factors.add(17);\n        factors.add(19);\n\
    \        factors.add(23);\n        factors.add(29);\n        factors.add(31);\n\
    \        factors.add(37);\n        factors.add(41);\n        factors.add(43);\n\
    \        factors.add(47);\n        factors.add(53);\n        factors.add(59);\n\
    \        factors.add(61);\n        factors.add(67);\n        factors.add(71);\n\
    \        factors.add(73);\n        factors.add(79);\n        factors.add(83);\n\
    \        factors.add(89);\n        factors.add(97);\n        factors.add(101);\n\
    \        factors.add(103);\n        factors.add(107);\n        factors.add(109);\n\
    \        factors.add(113);\n        factors.add(127);\n        factors.add(131);\n\
    \        factors.add(137);\n        factors.add(139);\n        factors.add(143);\n\
    \        factors.add(147);\n        factors.add(151);\n        factors.add(157);\n\
    \        factors.add(163);\n        factors.add(167);\n        factors.add(173);\n\
    \        factors.add(179);\n        factors.add(181);\n        factors.add(191);\n\
    \        factors.add(193);\n        factors.add(197);\n        factors.add(199);\n\
    \        factors.add(203);\n        factors.add(207);\n        factors.add(211;\n\
    \        factors.add(223);\n        factors.add(227);\n        factors.add(229);\n\
    \        factors.add(233);\n        factors.add(239);\n        factors.add(241);\n\
    \        factors.add(251);\n        factors.add(257);\n        factors.add(263);\n\
    \        factors.add(269);\n        factors.add(271);\n        factors.add(277);\n\
    \        factors.add(281);\n        factors.add(283);\n        factors.add(293);\n\
    \        factors.add(307);\n        factors.add(311);\n        factors.add(313;\n\
    \        factors.add(317);\n        factors.add(331);\n        factors.add(337);\n\
    \        factors.add(347);\n        factors.add(349);\n        factors.add(353);\n\
    \        factors.add(371);\n        factors.add(409);\n        factors.add(419);\n\
    \        factors.add(431);\n        factors.add(439);\n        factors.add(443);\n\
    \        factors.add(449);\n        factors.add(457);\n        factors.add(46",
  "        ArrayList<Integer> factors = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<Integer>();\n        factors.add(2);\n       \
    \ factorization.add(2);\n        factors.add(3);\n        factorization.add(3);\n\
    \        factors.add(5);\n        factorization.add(5);\n        factors.add(7);\n\
    \        factorization.add(7);\n        factors.add(11);\n        factorization.add(11);\n\
    \        factors.add(13);\n        factorization.add(13);\n        factors.add(17);\n\
    \        factorization.add(17);\n        factors.add(19);\n        factorization.add(19);\n\
    \        factors.add(23);\n        factorization.add(23);\n        factors.add(29);\n\
    \        factorization.add(29);\n        factors.add(31);\n        factorization.add(31);\n\
    \        factors.add(37);\n        factorization.add(37);\n        factors.add(41);\n\
    \        factorization.add(41);\n        factors.add(43);\n        factorization.add(43);\n\
    \        factors.add(47);\n        factorization.add(47);\n        factors.add(53);\n\
    \        factorization.add(53);\n        factors.add(59);\n        factorization.add(59);\n\
    \        factors.add(61);\n        factorization.add(61);\n        factors.add(67);\n\
    \        factorization.add(67);\n        factors.add(71);\n        factorization.add(71);\n\
    \        factors.add(73);\n        factorization.add(73);\n        factors.add(79);\n\
    \        factorization.add(79);\n        factors.add(83);\n        factorization.add(83);\n\
    \        factors.add(89);\n        factorization.add(89);\n        factors.add(97);\n\
    \        factorization.add(97);\n        factors.add(101);\n        factorization.add(101);\n\
    \        factors.add(103);\n        factorization.add(103);\n        factors.add(105);\n\
    \        factorization.add(105);\n        factors.add(107);\n        factorization.add(107);\n\
    \        factors.add(109);\n        factorization.add(109);\n        factors.add(113);\n\
    \        factorization.add(113);\n        factors.add(127);\n        factorization.add(127);\n\
    \        factors.add(131);\n        factorization.add(131);\n        factors.add(137);\n\
    \        factorization.add(137);\n        factors.add(139);\n        factorization.add(139);\n\
    \        factors.add(143);\n        factorization.add(143);\n        factors.add(147);\n\
    \        factorization.add(147);\n        factors.add(151);\n        factorization.add(151);\n\
    \        factors.add(157);\n        factorization.add(15", "        ArrayList<Integer>\
    \ factors = new ArrayList<>();\n        ArrayList<Integer> factorization = new\
    \ ArrayList<>();\n        factorization.add(n);\n        factors.add(n);\n   \
    \     factors.add(2);\n        factors.add(3);\n        factors.add(5);\n    \
    \    factors.add(7);\n        factors.add(11);\n        factors.add(13);\n   \
    \     factors.add(17);\n        factors.add(19);\n        factors.add(23);\n \
    \       factors.add(29);\n        factors.add(31);\n        factors.add(37);\n\
    \        factors.add(41);\n        factors.add(43);\n        factors.add(47);\n\
    \        factors.add(53);\n        factors.add(59);\n        factors.add(61);\n\
    \        factors.add(67);\n        factors.add(71);\n        factors.add(73);\n\
    \        factors.add(79);\n        factors.add(83);\n        factors.add(89);\n\
    \        factors.add(97);\n        factors.add(101);\n        factors.add(103);\n\
    \        factors.add(107);\n        factors.add(109);\n        factors.add(113);\n\
    \        factors.add(127);\n        factors.add(131);\n        factors.add(137);\n\
    \        factors.add(139);\n        factors.add(143);\n        factors.add(147);\n\
    \        factors.add(151);\n        factors.add(157);\n        factors.add(163);\n\
    \        factors.add(167);\n        factors.add(173);\n        factors.add(179);\n\
    \        factors.add(181);\n        factors.add(191);\n        factors.add(193);\n\
    \        factors.add(197);\n        factors.add(199);\n        factors.add(203);\n\
    \        factors.add(207);\n        factors.add(211);\n        factors.add(213);\n\
    \        factors.add(217);\n        factors.add(219);\n        factors.add(223);\n\
    \        factors.add(227);\n        factors.add(229);\n        factors.add(233);\n\
    \        factors.add(239);\n        factors.add(241);\n        factors.add(251);\n\
    \        factors.add(257);\n        factors.add(263);\n        factors.add(269);\n\
    \        factors.add(271);\n        factors.add(277);\n        factors.add(281);\n\
    \        factors.add(283);\n        factors.add(293);\n        factors.add(307);\n\
    \        factors.add(311);\n        factors.add(313;\n        factors.add(317);\n\
    \        factors.add(331);\n        factors.add(337);\n        factors.add(347);\n\
    \        factors.add(349);\n        factors.add(353);\n        factors.add(359);\n\
    \        factors.add(361);\n        factors.add(401);\n        factors.add(403);\n\
    \        factors.add(", "        ArrayList<Integer> factors = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization = new ArrayList<>();\n        factorization.add(1);\n\
    \        for (int i = 2; i <= n / 2; i++) {\n            while (n % i == 0) {\n\
    \                factors.add(i);\n                factorization.add(i);\n    \
    \            n /= i;\n            }\n        }\n        if (n != 1) {\n      \
    \      factors.add(n);\n            factorization.add(n);\n        }\n       \
    \ return factorization;", "        ArrayList<Integer> factors = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization = new ArrayList<>();\n        factorization.add(1);\n\
    \        factors.add(1);\n        int i = 2;\n        while (factorization.size()\
    \ < n) {\n            if (n % i == 0) {\n                factorization.add(i);\n\
    \                factors.add(i);\n                i++;\n            }\n      \
    \  }\n        return factors;", "        ArrayList<Integer> factors = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorization = new ArrayList<>();\n        ArrayList<Integer> primeFactors\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorsCount2 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorsCount3 = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount4\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount5 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorsCount6 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorsCount7 = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount8\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount9 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorsCount10 = new ArrayList<>();\n       \
    \ ArrayList<Integer> primeFactorsCount11 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorsCount12 = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount13\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount14 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorsCount15 = new ArrayList<>();\n       \
    \ ArrayList<Integer> primeFactorsCount16 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorsCount17 = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount18\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount19 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorsCount20 = new ArrayList<>();\n       \
    \ ArrayList<Integer> primeFactorsCount21 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorsCount22 = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount23\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount24 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorsCount25 = new ArrayList<>();\n       \
    \ ArrayList<Integer> primeFactorsCount26 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorsCount27 = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount28\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount29 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorsCount30 = new ArrayList<>();\n       \
    \ ArrayList<Integer> primeFactorsCount31 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorsCount32 = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount33\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount34 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorsCount35 = new ArrayList<>();\n       \
    \ ArrayList<Integer> primeFactorsCount36 = new ArrayList<>();\n        ArrayList<Integer",
  "        ArrayList<Integer> factors = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<>();\n        factorization = factorize(n);\n\
    \        factors.add(factorization.get(0));\n        for (int i = 1; i < factorization.size();\
    \ i++) {\n            if (factorization.get(i) == factorization.get(i-1)) {\n\
    \                factors.add(i);\n            }\n        }\n        return factors;",
  "        ArrayList<Integer> factors = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<>();\n        factorization.add(n);\n        factors.add(1);\n\
    \        while (factorization.size() > 0) {\n            int i = factorization.size()\
    \ - 1;\n            while (i >= 0) {\n                if (n % factorization.get(i)\
    \ == 0) {\n                    factors.add(factorization.get(i));\n          \
    \          factorization.remove(i);\n                    factorization.add(n /\
    \ factorization.get(i));\n                    break;\n                }\n    \
    \            i--;\n            }\n        }\n        return factors;", "     \
    \   ArrayList<Integer> factors = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<>();\n        ArrayList<Integer> factorization2\
    \ = new ArrayList<>();\n        int i = 2;\n        while (i <= n) {\n       \
    \     if (n % i == 0) {\n                factors.add(i);\n                factorization.add(i);\n\
    \                factorization2.add(1);\n                while (i <= n / i) {\n\
    \                    if (n % i == 0) {\n                        factors.add(i,\
    \ factorization2.get(i));\n                        factorization.add(i, factorization2.get(i));\n\
    \                        factorization2.add(factorization2.get(i) + 1);\n    \
    \                    i = i + 1;\n                    }\n                    else\
    \ {\n                        i = i + 1;\n                    }\n             \
    \   }\n            }\n            else {\n                i = i + 1;\n       \
    \     }\n        }\n        return factors;", "        ArrayList<Integer> factors\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization = new\
    \ ArrayList<Integer>();\n        factorization.add(n);\n        factors.add(n);\n\
    \        while (factorization.size() > 1) {\n            int i = factorization.size()\
    \ - 1;\n            int j = factorization.size() - 1;\n            while (i >=\
    \ 0 && j >= 0) {\n                if (factorization.get(i) % factorization.get(j)\
    \ == 0) {\n                    factorization.set(j, factorization.get(i));\n \
    \                   factorization.remove(i);\n                    i--;\n     \
    \           } else {\n                    j--;\n                }\n          \
    \  }\n            factors.add(factorization.get(0));\n            factorization.remove(factorization.size()\
    \ - 1);\n        }\n        return factors;", "        ArrayList<Integer> factors\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization = new\
    \ ArrayList<Integer>();\n        factors.add(2);\n        factors.add(3);\n  \
    \      factors.add(5);\n        factors.add(7);\n        factors.add(11);\n  \
    \      factors.add(13);\n        factors.add(17);\n        factors.add(19);\n\
    \        factors.add(23);\n        factors.add(29);\n        factors.add(31);\n\
    \        factors.add(37);\n        factors.add(41);\n        factors.add(43);\n\
    \        factors.add(47);\n        factors.add(53);\n        factors.add(59);\n\
    \        factors.add(61);\n        factors.add(67);\n        factors.add(71);\n\
    \        factors.add(73);\n        factors.add(79);\n        factors.add(83);\n\
    \        factors.add(89);\n        factors.add(97);\n        factors.add(103);\n\
    \        factors.add(109);\n        factors.add(113);\n        factors.add(127);\n\
    \        factors.add(131);\n        factors.add(137);\n        factors.add(139);\n\
    \        factors.add(143);\n        factors.add(147);\n        factors.add(151);\n\
    \        factors.add(157);\n        factors.add(163);\n        factors.add(167);\n\
    \        factors.add(173);\n        factors.add(179);\n        factors.add(181);\n\
    \        factors.add(191);\n        factors.add(193);\n        factors.add(197);\n\
    \        factors.add(199);\n        factors.add(203);\n        factors.add(207);\n\
    \        factors.add(211);\n        factors.add(213);\n        factors.add(217);\n\
    \        factors.add(223);\n        factors.add(227);\n        factors.add(229);\n\
    \        factors.add(233);\n        factors.add(239);\n        factors.add(241);\n\
    \        factors.add(251);\n        factors.add(257);\n        factors.add(263);\n\
    \        factors.add(269);\n        factors.add(271);\n        factors.add(277);\n\
    \        factors.add(281);\n        factors.add(283);\n        factors.add(293);\n\
    \        factors.add(307);\n        factors.add(311);\n        factors.add(313;\n\
    \        factors.add(317);\n        factors.add(331);\n        factors.add(337);\n\
    \        factors.add(347);\n        factors.add(349);\n        factors.add(353);\n\
    \        factors.add(359);\n        factors.add(361);\n        factors.add(369);\n\
    \        factors.add(373);\n        factors.add(379);\n        factors.add(383);\n\
    \        factors.add(389);\n        factors.add(397);\n        factors.add(401);\n",
  "        ArrayList<Integer> factors = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<Integer>();\n        ArrayList<Integer> factorization2\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization3 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization4 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization5 = new ArrayList<Integer>();\n     \
    \   ArrayList<Integer> factorization6 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization7 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization8\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization9 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization10 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization11 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization12 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization13 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization14\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization15 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization16 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization17 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization18 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization19 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization20\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization21 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization22 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization23 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization24 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization25 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization26\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization27 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization28 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization29 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization30 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization31 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization32\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization33 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization34 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization35 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization36 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization37 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization38\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization39 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization40 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization41 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization42 = ", "        ArrayList<Integer> factors\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization = new\
    \ ArrayList<Integer>();\n        factorization = factorize(n);\n        for (int\
    \ i = 0; i < factorization.size(); i++) {\n            factors.add(factorization.get(i));\n\
    \        }\n        return factors;", "        ArrayList<Integer> factors = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization = new ArrayList<Integer>();\n\
    \        factorization.add(1);\n        factors.add(1);\n        factors.add(2);\n\
    \        factors.add(2);\n        factors.add(3);\n        factors.add(3);\n \
    \       factors.add(5);\n        factors.add(5);\n        factors.add(7);\n  \
    \      factors.add(7);\n        factors.add(11);\n        factors.add(11);\n \
    \       factors.add(13);\n        factors.add(13);\n        factors.add(17);\n\
    \        factors.add(17);\n        factors.add(19);\n        factors.add(19);\n\
    \        factors.add(23);\n        factors.add(23);\n        factors.add(29);\n\
    \        factors.add(29);\n        factors.add(31);\n        factors.add(31);\n\
    \        factors.add(37);\n        factors.add(37);\n        factors.add(41);\n\
    \        factors.add(41);\n        factors.add(43);\n        factors.add(43);\n\
    \        factors.add(47);\n        factors.add(47);\n        factors.add(53);\n\
    \        factors.add(53);\n        factors.add(59);\n        factors.add(59);\n\
    \        factors.add(61);\n        factors.add(61);\n        factors.add(67);\n\
    \        factors.add(67);\n        factors.add(71);\n        factors.add(71);\n\
    \        factors.add(73);\n        factors.add(73);\n        factors.add(79);\n\
    \        factors.add(79);\n        factors.add(83);\n        factors.add(83);\n\
    \        factors.add(89);\n        factors.add(89);\n        factors.add(97);\n\
    \        factors.add(97);\n        factors.add(101);\n        factors.add(101);\n\
    \        factors.add(103);\n        factors.add(103);\n        factors.add(107);\n\
    \        factors.add(107);\n        factors.add(109);\n        factors.add(109);\n\
    \        factors.add(113);\n        factors.add(113);\n        factors.add(127);\n\
    \        factors.add(127);\n        factors.add(131);\n        factors.add(131);\n\
    \        factors.add(137);\n        factors.add(137);\n        factors.add(139);\n\
    \        factors.add(139);\n        factors.add(143);\n        factors.add(143);\n\
    \        factors.add(147);\n        factors.add(147);\n        factors.add(151);\n\
    \        factors.add(151);\n        factors.add(157);\n        factors.add(157);\n\
    \        factors.add(163);\n        factors.add(163);\n        factors.add(167);\n\
    \        factors.add(167);\n        factors.add(173);\n        factors.add(173);\n\
    \        factor", "        ArrayList<Integer> factors = new ArrayList<>();\n \
    \       ArrayList<Integer> factorization = new ArrayList<>();\n        factorization.add(1);\n\
    \        factors.add(n);\n        int i = 2;\n        while (factorization.size()\
    \ < n) {\n            while (n % i == 0) {\n                factorization.add(i);\n\
    \                factors.add(n);\n                n /= i;\n            }\n   \
    \         i++;\n        }\n        return factors;", "        ArrayList<Integer>\
    \ factors = new ArrayList<>();\n        ArrayList<Integer> factorization = new\
    \ ArrayList<>();\n        factorization = getFactorization(n);\n        factors.add(factorization.get(0));\n\
    \        for (int i = 1; i < factorization.size(); i++) {\n            int count\
    \ = 0;\n            for (int j = 0; j < factorization.size(); j++) {\n       \
    \         if (factorization.get(j) == factorization.get(i)) {\n              \
    \      count++;\n                }\n            }\n            factors.add(factorization.get(i));\n\
    \            factors.add(count);\n        }\n        return factors;", "     \
    \   ArrayList<Integer> factors = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<>();\n        factorization.add(1);\n        factors.add(1);\n\
    \        factors.add(2);\n        factors.add(2);\n        factors.add(3);\n \
    \       factors.add(3);\n        factors.add(5);\n        factors.add(5);\n  \
    \      factors.add(7);\n        factors.add(7);\n        factors.add(11);\n  \
    \      factors.add(11);\n        factors.add(13);\n        factors.add(13);\n\
    \        factors.add(17);\n        factors.add(17);\n        factors.add(19);\n\
    \        factors.add(19);\n        factors.add(23);\n        factors.add(23);\n\
    \        factors.add(29);\n        factors.add(29);\n        factors.add(31);\n\
    \        factors.add(31);\n        factors.add(37);\n        factors.add(37);\n\
    \        factors.add(41);\n        factors.add(41);\n        factors.add(43);\n\
    \        factors.add(43);\n        factors.add(47);\n        factors.add(47);\n\
    \        factors.add(53);\n        factors.add(53);\n        factors.add(59);\n\
    \        factors.add(59);\n        factors.add(61);\n        factors.add(61);\n\
    \        factors.add(67);\n        factors.add(67);\n        factors.add(71);\n\
    \        factors.add(71);\n        factors.add(73);\n        factors.add(73);\n\
    \        factors.add(79);\n        factors.add(79);\n        factors.add(83);\n\
    \        factors.add(83);\n        factors.add(89);\n        factors.add(89);\n\
    \        factors.add(97);\n        factors.add(97);\n        factors.add(101);\n\
    \        factors.add(101);\n        factors.add(103);\n        factors.add(103);\n\
    \        factors.add(105);\n        factors.add(105);\n        factors.add(107);\n\
    \        factors.add(107);\n        factors.add(109);\n        factors.add(109);\n\
    \        factors.add(113);\n        factors.add(113);\n        factors.add(117);\n\
    \        factors.add(117);\n        factors.add(121);\n        factors.add(121);\n\
    \        factors.add(123);\n        factors.add(123);\n        factors.add(127);\n\
    \        factors.add(127);\n        factors.add(131);\n        factors.add(131);\n\
    \        factors.add(137);\n        factors.add(137);\n        factors.add(139);\n\
    \        factors.add(139);\n        factors.add(143);\n        factors.add(143);\n\
    \        factors.add(147);\n        factors.add(147);\n        factors.add(151);\n\
    \        factors.add(151);\n        factors.add(15", "        ArrayList<Integer>\
    \ factors = new ArrayList<>();\n        ArrayList<Integer> factorization = new\
    \ ArrayList<>();\n        ArrayList<Integer> factorization2 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization3 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization4 = new ArrayList<>();\n        ArrayList<Integer> factorization5\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization6 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization7 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization8 = new ArrayList<>();\n        ArrayList<Integer> factorization9\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization10 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization11 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization12 = new ArrayList<>();\n        ArrayList<Integer> factorization13\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization14 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization15 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization16 = new ArrayList<>();\n        ArrayList<Integer> factorization17\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization18 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization19 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization20 = new ArrayList<>();\n        ArrayList<Integer> factorization21\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization22 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization23 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization24 = new ArrayList<>();\n        ArrayList<Integer> factorization25\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization26 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization27 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization28 = new ArrayList<>();\n        ArrayList<Integer> factorization29\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization30 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization31 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization32 = new ArrayList<>();\n        ArrayList<Integer> factorization33\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization34 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization35 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization36 = new ArrayList<>();\n        ArrayList<Integer> factorization37\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization38 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization39 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization40 = new ArrayList<>();\n        ArrayList<Integer> factorization41\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization42 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization43 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization44 = new ArrayList<>();\n        ArrayList<Integer> factorization45\
    \ = new ArrayList<>();\n        ArrayList<Integer> ", "        ArrayList<Integer>\
    \ factors = new ArrayList<>();\n        ArrayList<Integer> factorization = new\
    \ ArrayList<>();\n        factorization = factorize(n);\n        factors.add(factorization.get(0));\n\
    \        for (int i = 1; i < factorization.size(); i++) {\n            if (factorization.get(i)\
    \ == factorization.get(i-1)) {\n                factors.add((factorization.get(i)));\n\
    \            }\n        }\n        return factors;", "        ArrayList<Integer>\
    \ factors = new ArrayList<>();\n        ArrayList<Integer> factorization = new\
    \ ArrayList<>();\n        factorization.add(n);\n        factors.add(n);\n   \
    \     boolean isPrime = true;\n        int i = 2;\n        while (i < factorization.size())\
    \ {\n            if (factorization.get(i) % 2 == 0) {\n                isPrime\
    \ = false;\n                break;\n            }\n            i++;\n        }\n\
    \        if (isPrime) {\n            return factorization;\n        }\n      \
    \  while (i < factorization.size()) {\n            if (factorization.get(i) %\
    \ 2 == 0) {\n                factors.add(2);\n                factorization.add(factorization.get(i));\n\
    \                i++;\n            } else {\n                int j = 2;\n    \
    \            while (j < factorization.size()) {\n                    if (factorization.get(j)\
    \ % i == 0) {\n                        factors.add(j);\n                     \
    \   factorization.add(factorization.get(j));\n                        j++;\n \
    \                       break;\n                    }\n                    j++;\n\
    \                }\n            }\n        }\n        return factors;", "    \
    \    ArrayList<Integer> factors = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<>();\n        factorization.add(1);\n        factors.add(1);\n\
    \        int i = 2;\n        while (i < n) {\n            if (n % i == 0) {\n\
    \                factorization.add(i);\n                factors.add(1);\n    \
    \            while (i < n / i) {\n                    if (n % i == 0) {\n    \
    \                    factorization.add(i);\n                        factors.add(1);\n\
    \                        i++;\n                    } else {\n                \
    \        i++;\n                    }\n                }\n            }\n     \
    \       i++;\n        }\n        return factorization;", "        ArrayList<Integer>\
    \ factors = new ArrayList<>();\n        ArrayList<Integer> factorization = new\
    \ ArrayList<>();\n        int i = 2;\n        while (i <= Math.sqrt(n)) {\n  \
    \          if (n % i == 0) {\n                factors.add(i);\n              \
    \  factorization.add(i);\n                while (n % i == 0) {\n             \
    \       n /= i;\n                    factors.add(i);\n                    factorization.add(i);\n\
    \                }\n            }\n            i++;\n        }\n        if (n\
    \ != 1) {\n            factors.add(n);\n            factorization.add(n);\n  \
    \      }\n        return factorization;", "        ArrayList<Integer> factors\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization = new ArrayList<>();\n\
    \        factorization.add(n);\n        factors.add(n);\n        boolean isPrime\
    \ = true;\n        int i = 2;\n        while (i < factorization.size()) {\n  \
    \          while (factorization.get(i) % i == 0) {\n                isPrime =\
    \ false;\n                break;\n            }\n            if (isPrime) {\n\
    \                factors.add(factorization.get(i));\n                factorization.remove(i);\n\
    \                i++;\n            }\n            else {\n                i++;\n\
    \            }\n        }\n        return factors;", "        ArrayList<Integer>\
    \ factors = new ArrayList<>();\n        ArrayList<Integer> factorization = new\
    \ ArrayList<>();\n        factorization = factorize(n);\n        factors.add(factorization.get(0));\n\
    \        for (int i = 1; i < factorization.size(); i++) {\n            while (factorization.get(i)\
    \ != 1) {\n                factors.add(factorization.get(i));\n              \
    \  factorization.remove(i--);\n            }\n        }\n        return factors;",
  "        ArrayList<Integer> factors = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<>();\n        factorization = factorize(n);\n\
    \        factors.add(factorization.get(0));\n        for (int i = 1; i < factorization.size();\
    \ i++) {\n            if (factorization.get(i) == 1) {\n                factors.add(factorization.get(i));\n\
    \            } else {\n                for (int j = 0; j < factorization.get(i);\
    \ j++) {\n                    factors.add(factorization.get(i));\n           \
    \     }\n            }\n        }\n        return factors;", "        ArrayList<Integer>\
    \ factors = new ArrayList<Integer>();\n        ArrayList<Integer> factorization\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization2 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization3 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization4 = new ArrayList<Integer>();\n     \
    \   ArrayList<Integer> factorization5 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization6 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization7\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization8 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization9 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization10 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization11 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization12 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization13\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization14 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization15 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization16 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization17 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization18 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization19\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization20 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization21 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization22 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization23 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization24 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization25\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization26 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization27 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization28 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization29 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization30 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization31\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization32 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization33 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization34 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization35 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization36 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization37\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization38 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization39 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization40 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization41 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization42 = ", "        ArrayList<Integer> factors = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization = new ArrayList<>();\n        factorization.add(1);\n\
    \        factors.add(1);\n        for (int i = 2; i <= Math.sqrt(n); i++) {\n\
    \            if (n % i == 0) {\n                while (n % i == 0) {\n       \
    \             factorization.add(i);\n                    n /= i;\n           \
    \     }\n                factors.add(factorization.get(i));\n                factorization.remove(factorization.get(i));\n\
    \            }\n        }\n        return factors;", "        ArrayList<Integer>\
    \ factors = new ArrayList<>();\n        ArrayList<Integer> factorization = new\
    \ ArrayList<>();\n        factorization.add(1);\n        factors.add(1);\n   \
    \     int i = 2;\n        while (factorization.size() < n) {\n            while\
    \ (factorization.size() < n && factorization.size() < i) {\n                factorization.add(1);\n\
    \            }\n            while (factorization.size() < n && factorization.size()\
    \ < i) {\n                factorization.add(factorization.get(i));\n         \
    \       factors.add(factorization.get(i));\n                i++;\n           \
    \ }\n            while (factorization.size() < n && factorization.size() < i)\
    \ {\n                factorization.add(factorization.get(i));\n              \
    \  factors.add(factorization.get(i));\n                i++;\n            }\n \
    \           while (factorization.size() < n && factorization.size() < i) {\n \
    \               factorization.add(factorization.get(i));\n                factors.add(factorization.get(i));\n\
    \                i++;\n            }\n            while (factorization.size()\
    \ < n && factorization.size() < i) {\n                factorization.add(factorization.get(i));\n\
    \                factors.add(factorization.get(i));\n                i++;\n  \
    \          }\n            while (factorization.size() < n && factorization.size()\
    \ < i) {\n                factorization.add(factorization.get(i));\n         \
    \       factors.add(factorization.get(i));\n                i++;\n           \
    \ }\n            while (factorization.size() < n && factorization.size() < i)\
    \ {\n                factorization.add(factorization.get(i));\n              \
    \  factors.add(factorization.get(i));\n                i++;\n            }\n \
    \           while (factorization.size() < n && factorization.size() < i) {\n \
    \               factorization.add(factorization.get(i));\n                factors.add(factorization.get(i));\n\
    \                i++;\n            }\n            while (factorization.size()\
    \ < n && factorization.size() < i) {\n                factorization.add(factorization.get(i));\n\
    \                factors.add(factorization.get(i));\n                i++;\n  \
    \          }\n            while (factorization.size() < n && factorization.size()\
    \ < i) {\n                factorization.add(factorization.get(i));\n         \
    \       factors.add(factorization.get(i));\n                i++;\n           \
    \ }\n            while (factorization.size() < n && factorization.size() < i)\
    \ {\n                factorization.add(factorization.get(i));\n              \
    \  factors.add(factorization.get(i));\n                i++;\n            }\n \
    \           while (factorization.size() < n && factorization.size() < i) {\n \
    \               factorization.add(factorization.get(i));\n                factors.add(factorization.get(i));\n\
    \                i++;\n            }\n            while (factorization.size()\
    \ < n && factorization.size() < i) {\n                factorization.add(factorization",
  "        ArrayList<Integer> factors = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<>();\n        factorization.add(n);\n        while\
    \ (factorization.size() > 0) {\n            int i = factorization.get(0);\n  \
    \          factorization.remove(0);\n            factors.add(i);\n           \
    \ factorization.remove(i);\n            for (int j = 2; j < i; j++) {\n      \
    \          if (i % j == 0) {\n                    factorization.add(j);\n    \
    \            }\n            }\n        }\n        return factors;", "        ArrayList<Integer>\
    \ factors = new ArrayList<>();\n        ArrayList<Integer> factorization = new\
    \ ArrayList<>();\n        factorization.add(n);\n        factors.add(n);\n   \
    \     int i = 2;\n        while (factorization.size() > 0) {\n            while\
    \ (factorization.size() > i) {\n                int j = factorization.get(factorization.size()\
    \ - 1);\n                if (n % i == 0) {\n                    factorization.add(i);\n\
    \                    factors.add(j);\n                    factorization.remove(factorization.size()\
    \ - 1);\n                    n /= i;\n                }\n                i++;\n\
    \            }\n            i++;\n        }\n        return factors;", "     \
    \   ArrayList<Integer> factors = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<>();\n        factorization = factorize(n);\n\
    \        for (int i = 0; i < factorization.size(); i++) {\n            factors.add(factorization.get(i));\n\
    \        }\n        return factors;", "        ArrayList<Integer> factors = new\
    \ ArrayList<>();\n        ArrayList<Integer> factorization = new ArrayList<>();\n\
    \        factorization.add(n);\n        factors.add(1);\n        while (factorization.size()\
    \ > 0) {\n            int current = factorization.get(0);\n            factorization.remove(0);\n\
    \            int factor = 1;\n            while (current % 2 == 0) {\n       \
    \         current /= 2;\n                factor++;\n            }\n          \
    \  while (current % 3 == 0) {\n                current /= 3;\n               \
    \ factor++;\n            }\n            while (current % 5 == 0) {\n         \
    \       current /= 5;\n                factor++;\n            }\n            while\
    \ (current % 7 == 0) {\n                current /= 7;\n                factor++;\n\
    \            }\n            while (current % 11 == 0) {\n                current\
    \ /= 11;\n                factor++;\n            }\n            while (current\
    \ % 13 == 0) {\n                current /= 13;\n                factor++;\n  \
    \          }\n            while (current % 17 == 0) {\n                current\
    \ /= 17;\n                factor++;\n            }\n            while (current\
    \ % 19 == 0) {\n                current /= 19;\n                factor++;\n  \
    \          }\n            while (current % 23 == 0) {\n                current\
    \ /= 23;\n                factor++;\n            }\n            while (current\
    \ % 29 == 0) {\n                current /= 29;\n                factor++;\n  \
    \          }\n            while (current % 31 == 0) {\n                current\
    \ /= 31;\n                factor++;\n            }\n            while (current\
    \ % 37 == 0) {\n                current /= 37;\n                factor++;\n  \
    \          }\n            while (current % 41 == 0) {\n                current\
    \ /= 41;\n                factor++;\n            }\n            while (current\
    \ % 43 == 0) {\n                current /= 43;\n                factor++;\n  \
    \          }\n            while (current % 47 == 0) {\n                current\
    \ /= 47;\n                factor++;\n            }\n            while (current\
    \ % 53 == 0) {\n                current /= 53;\n                factor++;\n  \
    \          }\n            while (current % 59 == 0) {\n                current\
    \ /= 59;\n                factor++;\n            }\n            while (current\
    \ % 61 == 0) {\n                current /= 61;\n                factor++;\n  \
    \          }\n            while (current % 67 == 0) {\n                current\
    \ /= 67;\n                factor++;\n            }\n            while (current\
    \ % 71 == 0) {\n                current /= 71;\n                factor++;\n  \
    \          }\n            while (current % 73 == 0) {\n                current\
    \ /= 73;\n                factor++;\n            }\n            while (current\
    \ % 79 == 0) {\n                current /= 79;\n                factor++;\n  \
    \          }\n            while (current % 83 == 0) {\n                current\
    \ /= 83;\n                factor++;\n            }\n            while (current\
    \ % 89 == 0) {\n                current /= 89;\n                factor++;\n  \
    \          }\n            while (current % 97 == 0) {\n", "        ArrayList<Integer>\
    \ factors = new ArrayList<>();\n        factorize(n, factors);\n        return\
    \ factors;", "        ArrayList<Integer> factors = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization = new ArrayList<Integer>();\n      \
    \  factors.add(2);\n        factors.add(1);\n        factorization.add(2);\n \
    \       factorization.add(1);\n        factorization.add(1);\n        factorization.add(1);\n\
    \        factorization.add(1);\n        factorization.add(1);\n        factorization.add(1);\n\
    \        factorization.add(1);\n        factorization.add(1);\n        factorization.add(1);\n\
    \        factorization.add(1);\n        factorization.add(1);\n        factorization.add(1);\n\
    \        factorization.add(1);\n        factorization.add(1);\n        factorization.add(1);\n\
    \        factorization.add(1);\n        factorization.add(1);\n        factorization.add(1);\n\
    \        factorization.add(1);\n        factorization.add(1);\n        factorization.add(1);\n\
    \        factorization.add(1);\n        factorization.add(1);\n        factorization.add(1);\n\
    \        factorization.add(1);\n        factorization.add(1);\n        factorization.add(1);\n\
    \        factorization.add(1);\n        factorization.add(1);\n        factorization.add(1);\n\
    \        factorization.add(1);\n        factorization.add(1);\n        factorization.add(1);\n\
    \        factorization.add(1);\n        factorization.add(1);\n        factorization.add(1);\n\
    \        factorization.add(1);\n        factorization.add(1);\n        factorization.add(1);\n\
    \        factorization.add(1);\n        factorization.add(1);\n        factorization.add(1);\n\
    \        factorization.add(1);\n        factorization.add(1);\n        factorization.add(1);\n\
    \        factorization.add(1);\n        factorization.add(1);\n        factorization.add(1);\n\
    \        factorization.add(1);\n        factorization.add(1);\n        factorization.add(1);\n\
    \        factorization.add(1);\n        factorization.add(1);\n        factorization.add(1);\n\
    \        factorization.add(1);\n        factorization.add(1);\n        factorization.add(1);\n\
    \        factorization.add(1);\n        factorization.add(1);\n        factorization.add(1);\n\
    \        factorization.add(1);\n        factorization.add(1);\n        factorization.add(1);\n\
    \        factorization.add(1);\n        factorization.add(1);\n        factorization.add(1);\n\
    \        factorization.add(1);\n        factorization.add(1);\n        factorization.add(1);\n\
    \        factorization.add(1);\n        factorization.add(1);\n        factorization.add(1);\n\
    \        factorization.add(1);\n        factorization.add(1);\n        factorization.add(1);\n\
    \        factorization.add(1);\n        factorization.add(1);\n        factorization.add(1);\n\
    \        factorization.add(1);\n        ", "        ArrayList<Integer> factors\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization = new ArrayList<>();\n\
    \        factors.add(2);\n        factors.add(3);\n        factors.add(5);\n \
    \       factors.add(7);\n        factors.add(11);\n        factors.add(13);\n\
    \        factors.add(17);\n        factors.add(19);\n        factors.add(23);\n\
    \        factors.add(29);\n        factors.add(31);\n        factors.add(37);\n\
    \        factors.add(41);\n        factors.add(43);\n        factors.add(47);\n\
    \        factors.add(53);\n        factors.add(59);\n        factors.add(61);\n\
    \        factors.add(67);\n        factors.add(71);\n        factors.add(73);\n\
    \        factors.add(79);\n        factors.add(83);\n        factors.add(89);\n\
    \        factors.add(97);\n        factors.add(103);\n        factors.add(109);\n\
    \        factors.add(113);\n        factors.add(127);\n        factors.add(131);\n\
    \        factors.add(137);\n        factors.add(139);\n        factors.add(149);\n\
    \        factors.add(151);\n        factors.add(157);\n        factors.add(163);\n\
    \        factors.add(167);\n        factors.add(173);\n        factors.add(179);\n\
    \        factors.add(181);\n        factors.add(191);\n        factors.add(193);\n\
    \        factors.add(197);\n        factors.add(199);\n        factors.add(211);\n\
    \        factors.add(223);\n        factors.add(227);\n        factors.add(229);\n\
    \        factors.add(233);\n        factors.add(239);\n        factors.add(241);\n\
    \        factors.add(251);\n        factors.add(257);\n        factors.add(263);\n\
    \        factors.add(269);\n        factors.add(271);\n        factors.add(277);\n\
    \        factors.add(281);\n        factors.add(283);\n        factors.add(293);\n\
    \        factors.add(307);\n        factors.add(311);\n        factors.add(313;\n\
    \        factors.add(317);\n        factors.add(331);\n        factors.add(337);\n\
    \        factors.add(347);\n        factors.add(349);\n        factors.add(353);\n\
    \        factors.add(371);\n        factors.add(409);\n        factors.add(419);\n\
    \        factors.add(431);\n        factors.add(439);\n        factors.add(443);\n\
    \        factors.add(449);\n        factors.add(457);\n        factors.add(461);\n\
    \        factors.add(463);\n        factors.add(467);\n        factors.add(479);\n\
    \        factors.add(493);\n        factors.add(", "        ArrayList<Integer>\
    \ factors = new ArrayList<>();\n        ArrayList<Integer> factorization = new\
    \ ArrayList<>();\n        factorization.add(1);\n        factors.add(1);\n   \
    \     for (int i = 2; i <= Math.sqrt(n); i++) {\n            if (n % i == 0) {\n\
    \                while (n % i == 0) {\n                    factorization.add(i);\n\
    \                    n /= i;\n                }\n                factors.add(1);\n\
    \                factorization.add(i);\n            }\n        }\n        if (n\
    \ > 1) {\n            factors.add(1);\n            factorization.add(n);\n   \
    \     }\n        return factorization;", "        ArrayList<Integer> factors =\
    \ new ArrayList<>();\n        ArrayList<Integer> factorization = new ArrayList<>();\n\
    \        factorization.add(1);\n        factors.add(1);\n        int i = 2;\n\
    \        while (factorization.size() < n) {\n            while (n % i == 0) {\n\
    \                factorization.add(i);\n                factors.add(i);\n    \
    \            n /= i;\n            }\n            i++;\n        }\n        if (n\
    \ != 1) {\n            factorization.add(n);\n            factors.add(n);\n  \
    \      }\n        return factors;", "        ArrayList<Integer> factors = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization = new ArrayList<Integer>();\n\
    \        factorization.add(n);\n        factors.add(1);\n        while (factorization.size()\
    \ > 0) {\n            int i = factorization.get(0);\n            factorization.remove(0);\n\
    \            while (n % i == 0) {\n                factors.add(i);\n         \
    \       n /= i;\n            }\n        }\n        return factors;", "       \
    \ ArrayList<Integer> factors = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<>();\n        factorization.add(1);\n        factors.add(1);\n\
    \        factors.add(2);\n        factors.add(2);\n        factors.add(3);\n \
    \       factors.add(3);\n        factors.add(5);\n        factors.add(5);\n  \
    \      factors.add(7);\n        factors.add(7);\n        factors.add(11);\n  \
    \      factors.add(11);\n        factors.add(13);\n        factors.add(13);\n\
    \        factors.add(17);\n        factors.add(17);\n        factors.add(19);\n\
    \        factors.add(19);\n        factors.add(23);\n        factors.add(23);\n\
    \        factors.add(29);\n        factors.add(29);\n        factors.add(31);\n\
    \        factors.add(31);\n        factors.add(37);\n        factors.add(37);\n\
    \        factors.add(41);\n        factors.add(41);\n        factors.add(43);\n\
    \        factors.add(43);\n        factors.add(47);\n        factors.add(47);\n\
    \        factors.add(53);\n        factors.add(53);\n        factors.add(59);\n\
    \        factors.add(59);\n        factors.add(61);\n        factors.add(61);\n\
    \        factors.add(67);\n        factors.add(67);\n        factors.add(71);\n\
    \        factors.add(71);\n        factors.add(73);\n        factors.add(73);\n\
    \        factors.add(79);\n        factors.add(79);\n        factors.add(83);\n\
    \        factors.add(83);\n        factors.add(89);\n        factors.add(89);\n\
    \        factors.add(97);\n        factors.add(97);\n        factors.add(101);\n\
    \        factors.add(101);\n        factors.add(103);\n        factors.add(103);\n\
    \        factors.add(107);\n        factors.add(107);\n        factors.add(109);\n\
    \        factors.add(109);\n        factors.add(113);\n        factors.add(113);\n\
    \        factors.add(127);\n        factors.add(127);\n        factors.add(131);\n\
    \        factors.add(131);\n        factors.add(137);\n        factors.add(137);\n\
    \        factors.add(139);\n        factors.add(139);\n        factors.add(143);\n\
    \        factors.add(143);\n        factors.add(147);\n        factors.add(147);\n\
    \        factors.add(151);\n        factors.add(151);\n        factors.add(157);\n\
    \        factors.add(157);\n        factors.add(163);\n        factors.add(163);\n\
    \        factors.add(167);\n        factors.add(167);\n        factors.add(171);\n\
    \        factors.add(171);\n        factors.add(17", "        ArrayList<Integer>\
    \ factors = new ArrayList<>();\n        ArrayList<Integer> factorization = new\
    \ ArrayList<>();\n        factorization.add(1);\n        factors.add(1);\n   \
    \     factors.add(2);\n        factors.add(2);\n        factors.add(3);\n    \
    \    factors.add(3);\n        factors.add(5);\n        factors.add(5);\n     \
    \   factors.add(7);\n        factors.add(7);\n        factors.add(11);\n     \
    \   factors.add(11);\n        factors.add(13);\n        factors.add(13);\n   \
    \     factors.add(17);\n        factors.add(17);\n        factors.add(19);\n \
    \       factors.add(19);\n        factors.add(21);\n        factors.add(21);\n\
    \        factors.add(23);\n        factors.add(23);\n        factors.add(29);\n\
    \        factors.add(29);\n        factors.add(31);\n        factors.add(31);\n\
    \        factors.add(37);\n        factors.add(37);\n        factors.add(41);\n\
    \        factors.add(41);\n        factors.add(43);\n        factors.add(43);\n\
    \        factors.add(47);\n        factors.add(47);\n        factors.add(53);\n\
    \        factors.add(53);\n        factors.add(59);\n        factors.add(59);\n\
    \        factors.add(61);\n        factors.add(61);\n        factors.add(67);\n\
    \        factors.add(67);\n        factors.add(71);\n        factors.add(71);\n\
    \        factors.add(73);\n        factors.add(73);\n        factors.add(79);\n\
    \        factors.add(79);\n        factors.add(83);\n        factors.add(83);\n\
    \        factors.add(89);\n        factors.add(89);\n        factors.add(97);\n\
    \        factors.add(97);\n        factors.add(101);\n        factors.add(101);\n\
    \        factors.add(103);\n        factors.add(103);\n        factors.add(105);\n\
    \        factors.add(105);\n        factors.add(107);\n        factors.add(107);\n\
    \        factors.add(109);\n        factors.add(109);\n        factors.add(113);\n\
    \        factors.add(113);\n        factors.add(117);\n        factors.add(117);\n\
    \        factors.add(121);\n        factors.add(121);\n        factors.add(123);\n\
    \        factors.add(123);\n        factors.add(127);\n        factors.add(127);\n\
    \        factors.add(131);\n        factors.add(131);\n        factors.add(137);\n\
    \        factors.add(137);\n        factors.add(139);\n        factors.add(139);\n\
    \        factors.add(143);\n        factors.add(143);\n        factors.add(147);\n\
    \        factors.add(147);\n        factors.add(15", "        ArrayList<Integer>\
    \ factors = new ArrayList<Integer>();\n        ArrayList<Integer> factorization\
    \ = new ArrayList<Integer>();\n        factors.add(2);\n        factors.add(3);\n\
    \        factors.add(5);\n        factors.add(7);\n        factors.add(11);\n\
    \        factors.add(13);\n        factors.add(17);\n        factors.add(19);\n\
    \        factors.add(23);\n        factors.add(29);\n        factors.add(31);\n\
    \        factors.add(37);\n        factors.add(41);\n        factors.add(43);\n\
    \        factors.add(47);\n        factors.add(53);\n        factors.add(59);\n\
    \        factors.add(61);\n        factors.add(67);\n        factors.add(71);\n\
    \        factors.add(73);\n        factors.add(79);\n        factors.add(83);\n\
    \        factors.add(89);\n        factors.add(97);\n        factors.add(103);\n\
    \        factors.add(109);\n        factors.add(113);\n        factors.add(127);\n\
    \        factors.add(131);\n        factors.add(137);\n        factors.add(139);\n\
    \        factors.add(143);\n        factors.add(147);\n        factors.add(151);\n\
    \        factors.add(157);\n        factors.add(163);\n        factors.add(167);\n\
    \        factors.add(173);\n        factors.add(179);\n        factors.add(181);\n\
    \        factors.add(191);\n        factors.add(193);\n        factors.add(197);\n\
    \        factors.add(199);\n        factors.add(203);\n        factors.add(207);\n\
    \        factors.add(211);\n        factors.add(223);\n        factors.add(227);\n\
    \        factors.add(229);\n        factors.add(233);\n        factors.add(239);\n\
    \        factors.add(241);\n        factors.add(251);\n        factors.add(257);\n\
    \        factors.add(263);\n        factors.add(269);\n        factors.add(271);\n\
    \        factors.add(277);\n        factors.add(281);\n        factors.add(283);\n\
    \        factors.add(293);\n        factors.add(307);\n        factors.add(311);\n\
    \        factors.add(313;\n        factors.add(317);\n        factors.add(331);\n\
    \        factors.add(337);\n        factors.add(347);\n        factors.add(349);\n\
    \        factors.add(353);\n        factors.add(359);\n        factors.add(361);\n\
    \        factors.add(369);\n        factors.add(373);\n        factors.add(379);\n\
    \        factors.add(383);\n        factors.add(389);\n        factors.add(397);\n\
    \        factors.add(401);\n        factors.add(409);\n        factors.add(419);",
  "        ArrayList<Integer> factors = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<>();\n        factorization.add(1);\n        factors.add(1);\n\
    \        factors.add(2);\n        factors.add(2);\n        factors.add(3);\n \
    \       factors.add(3);\n        factors.add(5);\n        factors.add(5);\n  \
    \      factors.add(7);\n        factors.add(7);\n        factors.add(11);\n  \
    \      factors.add(11);\n        factors.add(13);\n        factors.add(13);\n\
    \        factors.add(17);\n        factors.add(17);\n        factors.add(19);\n\
    \        factors.add(19);\n        factors.add(23);\n        factors.add(23);\n\
    \        factors.add(29);\n        factors.add(29);\n        factors.add(31);\n\
    \        factors.add(31);\n        factors.add(37);\n        factors.add(37);\n\
    \        factors.add(41);\n        factors.add(41);\n        factors.add(43);\n\
    \        factors.add(43);\n        factors.add(47);\n        factors.add(47);\n\
    \        factors.add(53);\n        factors.add(53);\n        factors.add(59);\n\
    \        factors.add(59);\n        factors.add(61);\n        factors.add(61);\n\
    \        factors.add(67);\n        factors.add(67);\n        factors.add(71);\n\
    \        factors.add(71);\n        factors.add(73);\n        factors.add(73);\n\
    \        factors.add(79);\n        factors.add(79);\n        factors.add(83);\n\
    \        factors.add(83);\n        factors.add(89);\n        factors.add(89);\n\
    \        factors.add(97);\n        factors.add(97);\n        factors.add(101);\n\
    \        factors.add(101);\n        factors.add(103);\n        factors.add(103);\n\
    \        factors.add(107);\n        factors.add(107);\n        factors.add(113);\n\
    \        factors.add(113);\n        factors.add(127);\n        factors.add(127);\n\
    \        factors.add(131);\n        factors.add(131);\n        factors.add(137);\n\
    \        factors.add(137);\n        factors.add(139);\n        factors.add(139);\n\
    \        factors.add(143);\n        factors.add(143);\n        factors.add(147);\n\
    \        factors.add(147);\n        factors.add(151);\n        factors.add(151);\n\
    \        factors.add(153);\n        factors.add(153);\n        factors.add(157);\n\
    \        factors.add(157);\n        factors.add(163);\n        factors.add(163);\n\
    \        factors.add(167);\n        factors.add(167);\n        factors.add(173);\n\
    \        factors.add(173);\n        factors.add(17", "        ArrayList<Integer>\
    \ factors = new ArrayList<>();\n        ArrayList<Integer> factorization = new\
    \ ArrayList<>();\n        factorization.add(n);\n        factors.add(n);\n   \
    \     boolean isPrime = true;\n        int i = 2;\n        while (i < factorization.size())\
    \ {\n            if (factorization.get(i) % i == 0) {\n                isPrime\
    \ = false;\n                break;\n            }\n            i++;\n        }\n\
    \        if (isPrime) {\n            return factors;\n        } else {\n     \
    \       while (i < factorization.size()) {\n                int temp = factorization.get(i);\n\
    \                while (temp % i == 0) {\n                    factors.add(temp);\n\
    \                    temp++;\n                }\n                i++;\n      \
    \      }\n            return factors;\n        }", "        ArrayList<Integer>\
    \ factors = new ArrayList<Integer>();\n        ArrayList<Integer> factorization\
    \ = new ArrayList<Integer>();\n        int i = 2;\n        while (i <= n) {\n\
    \            if (n % i == 0) {\n                factors.add(i);\n            \
    \    factorization.add(i);\n                while (n % i == 0) {\n           \
    \         factors.add(i);\n                    factorization.add(i);\n       \
    \             n /= i;\n                }\n            }\n            i++;\n  \
    \      }\n        if (n != 1) {\n            factors.add(n);\n            factorization.add(n);\n\
    \        }\n        return factorization;", "        ArrayList<Integer> factors\
    \ = new ArrayList<>();\n        factors.add(2);\n        factors.add(1);\n   \
    \     for(int i = 3; i <= Math.sqrt(n); i++) {\n            while(n % i == 0)\
    \ {\n                factors.add(i);\n                n /= i;\n            }\n\
    \        }\n        return factors;", "        ArrayList<Integer> factors = new\
    \ ArrayList<>();\n        ArrayList<Integer> factorization = new ArrayList<>();\n\
    \        factorization.add(1);\n        factors.add(1);\n        for (int i =\
    \ 2; i <= Math.sqrt(n); i++) {\n            if (n % i == 0) {\n              \
    \  while (n % i == 0) {\n                    factorization.add(i);\n         \
    \           n /= i;\n                }\n                factors.add(factorization.get(i));\n\
    \                factorization.remove(factorization.get(i));\n            }\n\
    \        }\n        return factors;", "        ArrayList<Integer> factors = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization = new ArrayList<Integer>();\n\
    \        factorization.add(1);\n        factors.add(1);\n        factors.add(2);\n\
    \        factors.add(2);\n        factors.add(3);\n        factors.add(3);\n \
    \       factors.add(5);\n        factors.add(5);\n        factors.add(7);\n  \
    \      factors.add(7);\n        factors.add(11);\n        factors.add(11);\n \
    \       factors.add(13);\n        factors.add(13);\n        factors.add(17);\n\
    \        factors.add(17);\n        factors.add(19);\n        factors.add(19);\n\
    \        factors.add(21);\n        factors.add(21);\n        factors.add(23);\n\
    \        factors.add(23);\n        factors.add(29);\n        factors.add(29);\n\
    \        factors.add(31);\n        factors.add(31);\n        factors.add(37);\n\
    \        factors.add(37);\n        factors.add(41);\n        factors.add(41);\n\
    \        factors.add(43);\n        factors.add(43);\n        factors.add(47);\n\
    \        factors.add(47);\n        factors.add(53);\n        factors.add(53);\n\
    \        factors.add(59);\n        factors.add(59);\n        factors.add(61);\n\
    \        factors.add(61);\n        factors.add(67);\n        factors.add(67);\n\
    \        factors.add(71);\n        factors.add(71);\n        factors.add(73);\n\
    \        factors.add(73);\n        factors.add(79);\n        factors.add(79);\n\
    \        factors.add(83);\n        factors.add(83);\n        factors.add(89);\n\
    \        factors.add(89);\n        factors.add(97);\n        factors.add(97);\n\
    \        factors.add(101);\n        factors.add(101);\n        factors.add(103);\n\
    \        factors.add(103);\n        factors.add(107);\n        factors.add(107);\n\
    \        factors.add(109);\n        factors.add(109);\n        factors.add(113);\n\
    \        factors.add(113);\n        factors.add(127);\n        factors.add(127);\n\
    \        factors.add(131);\n        factors.add(131);\n        factors.add(137);\n\
    \        factors.add(137);\n        factors.add(139);\n        factors.add(139);\n\
    \        factors.add(143);\n        factors.add(143);\n        factors.add(147);\n\
    \        factors.add(147);\n        factors.add(151);\n        factors.add(151);\n\
    \        factors.add(157);\n        factors.add(157);\n        factors.add(163);\n\
    \        factors.add(163);\n        factors.add(167);\n        factors.add(167);\n\
    \        factor", "        ArrayList<Integer> factors = new ArrayList<>();\n \
    \       ArrayList<Integer> factorization = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization2 = new ArrayList<>();\n        ArrayList<Integer> factorization3\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization4 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization5 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization6 = new ArrayList<>();\n        ArrayList<Integer> factorization7\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization8 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization9 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization10 = new ArrayList<>();\n        ArrayList<Integer> factorization11\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization12 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization13 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization14 = new ArrayList<>();\n        ArrayList<Integer> factorization15\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization16 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization17 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization18 = new ArrayList<>();\n        ArrayList<Integer> factorization19\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization20 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization21 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization22 = new ArrayList<>();\n        ArrayList<Integer> factorization23\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization24 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization25 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization26 = new ArrayList<>();\n        ArrayList<Integer> factorization27\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization28 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization29 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization30 = new ArrayList<>();\n        ArrayList<Integer> factorization31\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization32 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization33 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization34 = new ArrayList<>();\n        ArrayList<Integer> factorization35\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization36 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization37 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization38 = new ArrayList<>();\n        ArrayList<Integer> factorization39\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization40 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization41 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization42 = new ArrayList<>();\n        ArrayList<Integer> factorization43\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization44 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization45 = new ArrayList<>();\n        ArrayList<Integer> ",
  "        ArrayList<Integer> factors = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<>();\n        factorization.add(1);\n        factors.add(1);\n\
    \        factors.add(2);\n        factors.add(2);\n        factors.add(3);\n \
    \       factors.add(3);\n        factors.add(5);\n        factors.add(5);\n  \
    \      factors.add(7);\n        factors.add(7);\n        factors.add(11);\n  \
    \      factors.add(11);\n        factors.add(13);\n        factors.add(13);\n\
    \        factors.add(17);\n        factors.add(17);\n        factors.add(19);\n\
    \        factors.add(19);\n        factors.add(23);\n        factors.add(23);\n\
    \        factors.add(29);\n        factors.add(29);\n        factors.add(31);\n\
    \        factors.add(31);\n        factors.add(37);\n        factors.add(37);\n\
    \        factors.add(41);\n        factors.add(41);\n        factors.add(43);\n\
    \        factors.add(43);\n        factors.add(47);\n        factors.add(47);\n\
    \        factors.add(53);\n        factors.add(53);\n        factors.add(59);\n\
    \        factors.add(59);\n        factors.add(61);\n        factors.add(61);\n\
    \        factors.add(67);\n        factors.add(67);\n        factors.add(71);\n\
    \        factors.add(71);\n        factors.add(73);\n        factors.add(73);\n\
    \        factors.add(79);\n        factors.add(79);\n        factors.add(83);\n\
    \        factors.add(83);\n        factors.add(89);\n        factors.add(89);\n\
    \        factors.add(97);\n        factors.add(97);\n        factors.add(101);\n\
    \        factors.add(101);\n        factors.add(103);\n        factors.add(103);\n\
    \        factors.add(107);\n        factors.add(107);\n        factors.add(113);\n\
    \        factors.add(113);\n        factors.add(127);\n        factors.add(127);\n\
    \        factors.add(131);\n        factors.add(131);\n        factors.add(137);\n\
    \        factors.add(137);\n        factors.add(139);\n        factors.add(139);\n\
    \        factors.add(143);\n        factors.add(143);\n        factors.add(147);\n\
    \        factors.add(147);\n        factors.add(151);\n        factors.add(151);\n\
    \        factors.add(157);\n        factors.add(157);\n        factors.add(163);\n\
    \        factors.add(163);\n        factors.add(167);\n        factors.add(167);\n\
    \        factors.add(173);\n        factors.add(173);\n        factors.add(179);\n\
    \        factors.add(179);\n        factors.add(18", "        ArrayList<Integer>\
    \ factors = new ArrayList<>();\n        ArrayList<Integer> factorization = new\
    \ ArrayList<>();\n        factorization.add(n);\n        factors.add(n);\n   \
    \     factors.add(1);\n        factors.add(2);\n        factors.add(3);\n    \
    \    factors.add(5);\n        factors.add(7);\n        factors.add(11);\n    \
    \    factors.add(13);\n        factors.add(17);\n        factors.add(19);\n  \
    \      factors.add(23);\n        factors.add(29);\n        factors.add(31);\n\
    \        factors.add(37);\n        factors.add(41);\n        factors.add(43);\n\
    \        factors.add(47);\n        factors.add(53);\n        factors.add(59);\n\
    \        factors.add(61);\n        factors.add(67);\n        factors.add(71);\n\
    \        factors.add(73);\n        factors.add(79);\n        factors.add(83);\n\
    \        factors.add(89);\n        factors.add(97);\n        factors.add(101);\n\
    \        factors.add(103);\n        factors.add(107);\n        factors.add(109);\n\
    \        factors.add(113);\n        factors.add(127);\n        factors.add(131);\n\
    \        factors.add(137);\n        factors.add(139);\n        factors.add(143);\n\
    \        factors.add(147);\n        factors.add(151);\n        factors.add(157);\n\
    \        factors.add(163);\n        factors.add(167);\n        factors.add(173);\n\
    \        factors.add(179);\n        factors.add(181);\n        factors.add(191);\n\
    \        factors.add(193);\n        factors.add(197);\n        factors.add(199);\n\
    \        factors.add(203);\n        factors.add(207);\n        factors.add(211);\n\
    \        factors.add(223);\n        factors.add(227);\n        factors.add(229);\n\
    \        factors.add(233);\n        factors.add(239);\n        factors.add(241);\n\
    \        factors.add(251);\n        factors.add(257);\n        factors.add(263);\n\
    \        factors.add(269);\n        factors.add(271);\n        factors.add(277);\n\
    \        factors.add(281);\n        factors.add(283);\n        factors.add(293);\n\
    \        factors.add(307);\n        factors.add(311);\n        factors.add(313;\n\
    \        factors.add(317);\n        factors.add(331);\n        factors.add(337);\n\
    \        factors.add(347);\n        factors.add(349);\n        factors.add(353);\n\
    \        factors.add(359);\n        factors.add(361);\n        factors.add(401);\n\
    \        factors.add(403);\n        factors.add(407);\n        factors.add(413);\n\
    \        factors.add(417", "        ArrayList<Integer> factors = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization = new ArrayList<Integer>();\n      \
    \  factorization.add(1);\n        factors.add(1);\n        factors.add(2);\n \
    \       factors.add(2);\n        factors.add(3);\n        factors.add(3);\n  \
    \      factors.add(5);\n        factors.add(5);\n        factors.add(7);\n   \
    \     factors.add(7);\n        factors.add(11);\n        factors.add(11);\n  \
    \      factors.add(13);\n        factors.add(13);\n        factors.add(17);\n\
    \        factors.add(17);\n        factors.add(19);\n        factors.add(19);\n\
    \        factors.add(21);\n        factors.add(21);\n        factors.add(23);\n\
    \        factors.add(23);\n        factors.add(29);\n        factors.add(29);\n\
    \        factors.add(31);\n        factors.add(31);\n        factors.add(37);\n\
    \        factors.add(37);\n        factors.add(41);\n        factors.add(41);\n\
    \        factors.add(43);\n        factors.add(43);\n        factors.add(47);\n\
    \        factors.add(47);\n        factors.add(53);\n        factors.add(53);\n\
    \        factors.add(59);\n        factors.add(59);\n        factors.add(61);\n\
    \        factors.add(61);\n        factors.add(67);\n        factors.add(67);\n\
    \        factors.add(71);\n        factors.add(71);\n        factors.add(73);\n\
    \        factors.add(73);\n        factors.add(79);\n        factors.add(79);\n\
    \        factors.add(83);\n        factors.add(83);\n        factors.add(89);\n\
    \        factors.add(89);\n        factors.add(97);\n        factors.add(97);\n\
    \        factors.add(101);\n        factors.add(101);\n        factors.add(103);\n\
    \        factors.add(103);\n        factors.add(107);\n        factors.add(107);\n\
    \        factors.add(113);\n        factors.add(113);\n        factors.add(127);\n\
    \        factors.add(127);\n        factors.add(131);\n        factors.add(131);\n\
    \        factors.add(137);\n        factors.add(137);\n        factors.add(139);\n\
    \        factors.add(139);\n        factors.add(143);\n        factors.add(143);\n\
    \        factors.add(147);\n        factors.add(147);\n        factors.add(151);\n\
    \        factors.add(151);\n        factors.add(157);\n        factors.add(157);\n\
    \        factors.add(163);\n        factors.add(163);\n        factors.add(167);\n\
    \        factors.add(167);\n        factors.add(173);\n        factors.add(173);\n\
    \        factor", "        ArrayList<Integer> factors = new ArrayList<>();\n \
    \       ArrayList<Integer> factorization = new ArrayList<>();\n        factorization.add(n);\n\
    \        factors.add(1);\n        factors.add(2);\n        factors.add(3);\n \
    \       factors.add(5);\n        factors.add(7);\n        factors.add(11);\n \
    \       factors.add(13);\n        factors.add(17);\n        factors.add(19);\n\
    \        factors.add(23);\n        factors.add(29);\n        factors.add(31);\n\
    \        factors.add(37);\n        factors.add(41);\n        factors.add(43);\n\
    \        factors.add(47);\n        factors.add(53);\n        factors.add(59);\n\
    \        factors.add(61);\n        factors.add(67);\n        factors.add(71);\n\
    \        factors.add(73);\n        factors.add(79);\n        factors.add(83);\n\
    \        factors.add(89);\n        factors.add(97);\n        factors.add(101);\n\
    \        factors.add(103);\n        factors.add(107);\n        factors.add(109);\n\
    \        factors.add(113);\n        factors.add(127);\n        factors.add(131);\n\
    \        factors.add(137);\n        factors.add(139);\n        factors.add(143);\n\
    \        factors.add(147);\n        factors.add(151);\n        factors.add(157);\n\
    \        factors.add(163);\n        factors.add(167);\n        factors.add(173);\n\
    \        factors.add(179);\n        factors.add(181);\n        factors.add(191);\n\
    \        factors.add(193);\n        factors.add(197);\n        factors.add(199);\n\
    \        factors.add(211);\n        factors.add(223);\n        factors.add(227);\n\
    \        factors.add(229);\n        factors.add(233);\n        factors.add(239);\n\
    \        factors.add(241);\n        factors.add(251);\n        factors.add(257);\n\
    \        factors.add(263);\n        factors.add(269);\n        factors.add(271);\n\
    \        factors.add(277);\n        factors.add(281);\n        factors.add(283);\n\
    \        factors.add(293);\n        factors.add(307);\n        factors.add(311);\n\
    \        factors.add(313;\n        factors.add(317);\n        factors.add(331);\n\
    \        factors.add(337);\n        factors.add(347);\n        factors.add(349);\n\
    \        factors.add(353);\n        factors.add(359);\n        factors.add(361);\n\
    \        factors.add(369);\n        factors.add(373);\n        factors.add(379);\n\
    \        factors.add(383);\n        factors.add(389);\n        factors.add(397);\n\
    \        factors.add(401);\n        factors.add(", "        ArrayList<Integer>\
    \ factors = new ArrayList<>();\n        ArrayList<Integer> factorization = new\
    \ ArrayList<>();\n        factorization.add(1);\n        factors.add(1);\n   \
    \     factors.add(2);\n        factors.add(2);\n        factors.add(3);\n    \
    \    factors.add(3);\n        factors.add(5);\n        factors.add(5);\n     \
    \   factors.add(7);\n        factors.add(7);\n        factors.add(11);\n     \
    \   factors.add(11);\n        factors.add(13);\n        factors.add(13);\n   \
    \     factors.add(17);\n        factors.add(17);\n        factors.add(19);\n \
    \       factors.add(19);\n        factors.add(21);\n        factors.add(21);\n\
    \        factors.add(23);\n        factors.add(23);\n        factors.add(29);\n\
    \        factors.add(29);\n        factors.add(31);\n        factors.add(31);\n\
    \        factors.add(37);\n        factors.add(37);\n        factors.add(41);\n\
    \        factors.add(41);\n        factors.add(43);\n        factors.add(43);\n\
    \        factors.add(47);\n        factors.add(47);\n        factors.add(53);\n\
    \        factors.add(53);\n        factors.add(59);\n        factors.add(59);\n\
    \        factors.add(61);\n        factors.add(61);\n        factors.add(67);\n\
    \        factors.add(67);\n        factors.add(71);\n        factors.add(71);\n\
    \        factors.add(73);\n        factors.add(73);\n        factors.add(79);\n\
    \        factors.add(79);\n        factors.add(83);\n        factors.add(83);\n\
    \        factors.add(89);\n        factors.add(89);\n        factors.add(97);\n\
    \        factors.add(97);\n        factors.add(101);\n        factors.add(101);\n\
    \        factors.add(103);\n        factors.add(103);\n        factors.add(107);\n\
    \        factors.add(107);\n        factors.add(113);\n        factors.add(113);\n\
    \        factors.add(127);\n        factors.add(127);\n        factors.add(131);\n\
    \        factors.add(131);\n        factors.add(137);\n        factors.add(137);\n\
    \        factors.add(139);\n        factors.add(139);\n        factors.add(143);\n\
    \        factors.add(143);\n        factors.add(147);\n        factors.add(147);\n\
    \        factors.add(151);\n        factors.add(151);\n        factors.add(157);\n\
    \        factors.add(157);\n        factors.add(163);\n        factors.add(163);\n\
    \        factors.add(167);\n        factors.add(167);\n        factors.add(173);\n\
    \        factors.add(173);\n        factors.add(17", "        ArrayList<Integer>\
    \ factors = new ArrayList<>();\n        ArrayList<Integer> factorization = new\
    \ ArrayList<>();\n        factorization = factorize(n);\n        factors.add(factorization.get(0));\n\
    \        for (int i = 1; i < factorization.size(); i++) {\n            int count\
    \ = 0;\n            for (int j = 0; j < factorization.size(); j++) {\n       \
    \         if (factorization.get(j) == factorization.get(i)) {\n              \
    \      count++;\n                }\n            }\n            factors.add(factorization.get(i));\n\
    \            factors.add(count);\n        }\n        return factors;", "     \
    \   ArrayList<Integer> factors = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<>();\n        int i = 2;\n        while (i <=\
    \ n) {\n            if (n % i == 0) {\n                factors.add(i);\n     \
    \           factorization.add(i);\n                while (n % i == 0) {\n    \
    \                n /= i;\n                    factors.add(i);\n              \
    \      factorization.add(i);\n                }\n            }\n            i++;\n\
    \        }\n        if (n != 1) {\n            factors.add(n);\n            factorization.add(n);\n\
    \        }\n        return factors;", "        ArrayList<Integer> factors = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization2 = new ArrayList<Integer>();\n     \
    \   ArrayList<Integer> factorization3 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization4 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization5\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization6 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization7 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization8 = new ArrayList<Integer>();\n     \
    \   ArrayList<Integer> factorization9 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization10 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization11\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization12 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization13 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization14 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization15 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization16 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization17\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization18 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization19 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization20 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization21 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization22 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization23\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization24 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization25 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization26 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization27 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization28 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization29\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization30 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization31 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization32 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization33 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization34 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization35\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization36 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization37 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization38 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization39 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization40 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization41\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization42 = ",
  "        ArrayList<Integer> factors = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<>();\n        factorization = getFactorization(n);\n\
    \        factors.add(factorization.get(0));\n        for (int i = 1; i < factorization.size();\
    \ i++) {\n            int count = 0;\n            for (int j = 0; j < factorization.size();\
    \ j++) {\n                if (factorization.get(j) == factorization.get(i)) {\n\
    \                    count++;\n                }\n            }\n            factors.add(factorization.get(i));\n\
    \            factors.add(count);\n        }\n        return factors;", "     \
    \   ArrayList<Integer> factors = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<Integer>();\n        factorization.add(1);\n \
    \       factors.add(1);\n        factors.add(2);\n        factors.add(2);\n  \
    \      factors.add(3);\n        factors.add(3);\n        factors.add(5);\n   \
    \     factors.add(5);\n        factors.add(7);\n        factors.add(7);\n    \
    \    factors.add(11);\n        factors.add(11);\n        factors.add(13);\n  \
    \      factors.add(13);\n        factors.add(17);\n        factors.add(17);\n\
    \        factors.add(19);\n        factors.add(19);\n        factors.add(23);\n\
    \        factors.add(23);\n        factors.add(29);\n        factors.add(29);\n\
    \        factors.add(31);\n        factors.add(31);\n        factors.add(37);\n\
    \        factors.add(37);\n        factors.add(41);\n        factors.add(41);\n\
    \        factors.add(43);\n        factors.add(43);\n        factors.add(47);\n\
    \        factors.add(47);\n        factors.add(53);\n        factors.add(53);\n\
    \        factors.add(59);\n        factors.add(59);\n        factors.add(61);\n\
    \        factors.add(61);\n        factors.add(67);\n        factors.add(67);\n\
    \        factors.add(71);\n        factors.add(71);\n        factors.add(73);\n\
    \        factors.add(73);\n        factors.add(79);\n        factors.add(79);\n\
    \        factors.add(83);\n        factors.add(83);\n        factors.add(89);\n\
    \        factors.add(89);\n        factors.add(97);\n        factors.add(97);\n\
    \        factors.add(101);\n        factors.add(101);\n        factors.add(103);\n\
    \        factors.add(103);\n        factors.add(107);\n        factors.add(107);\n\
    \        factors.add(113);\n        factors.add(113);\n        factors.add(127);\n\
    \        factors.add(127);\n        factors.add(131);\n        factors.add(131);\n\
    \        factors.add(137);\n        factors.add(137);\n        factors.add(139);\n\
    \        factors.add(139);\n        factors.add(143);\n        factors.add(143);\n\
    \        factors.add(147);\n        factors.add(147);\n        factors.add(151);\n\
    \        factors.add(151);\n        factors.add(157);\n        factors.add(157);\n\
    \        factors.add(163);\n        factors.add(163);\n        factors.add(167);\n\
    \        factors.add(167);\n        factors.add(173);\n        factors.add(173);\n\
    \        factors.add(179);\n        factors.add(179);\n        factor", "    \
    \    ArrayList<Integer> factors = new ArrayList<>();\n        factorize(n, factors);\n\
    \        return factors;", "        ArrayList<Integer> factors = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization = new ArrayList<Integer>();\n      \
    \  ArrayList<Integer> primes = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ primeFactors = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorization\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorization2\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorization3\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorization4\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorization5\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorization6\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorization7\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorization8\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorization9\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorization10\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorization11\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorization12\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorization13\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorization14\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorization15\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorization16\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorization17\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorization18\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorization19\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorization20\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorization21\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorization22\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorization23\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorization24\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorization25\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorization26\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorization27\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorization28\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorization29\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorization30\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorization31\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorization32\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorization33\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorization34\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorization35\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> primeFactorization36\
    \ = new ArrayList<Integer>();\n        ", "        ArrayList<Integer> factors\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization = new ArrayList<>();\n\
    \        factorization.add(n);\n        while (factorization.size() > 0) {\n \
    \           int currentFactor = factorization.get(0);\n            factorization.remove(0);\n\
    \            factors.add(currentFactor);\n            factorization.add(n / currentFactor);\n\
    \        }\n        return factors;", "        ArrayList<Integer> factors = new\
    \ ArrayList<>();\n        ArrayList<Integer> factorization = new ArrayList<>();\n\
    \        factorization.add(1);\n        for (int i = 2; i <= n; i++) {\n     \
    \       while (n % i == 0) {\n                factors.add(i);\n              \
    \  factorization.add(i);\n                n /= i;\n            }\n        }\n\
    \        if (n > 1) {\n            factors.add(n);\n            factorization.add(n);\n\
    \        }\n        return factorization;", "        ArrayList<Integer> factors\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization = new ArrayList<>();\n\
    \        factorization.add(1);\n        factors.add(1);\n        for (int i =\
    \ 2; i <= Math.sqrt(n); i++) {\n            if (n % i == 0) {\n              \
    \  while (n % i == 0) {\n                    factorization.add(i);\n         \
    \           n /= i;\n                }\n                factors.add(factorization.size());\n\
    \                factorization.clear();\n            }\n        }\n        if\
    \ (n > 1) {\n            factorization.add(n);\n            factors.add(factorization.size());\n\
    \        }\n        return factors;", "        ArrayList<Integer> factors = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization2 = new ArrayList<Integer>();\n     \
    \   ArrayList<Integer> factorization3 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization4 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization5\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization6 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization7 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization8 = new ArrayList<Integer>();\n     \
    \   ArrayList<Integer> factorization9 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization10 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization11\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization12 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization13 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization14 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization15 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization16 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization17\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization18 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization19 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization20 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization21 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization22 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization23\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization24 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization25 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization26 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization27 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization28 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization29\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization30 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization31 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization32 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization33 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization34 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization35\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization36 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization37 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization38 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization39 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization40 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization41\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization42 = ",
  "        ArrayList<Integer> factors = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<>();\n        factorization = getFactorization(n);\n\
    \        factors.add(factorization.size());\n        factors.add(1);\n       \
    \ for (int i = 1; i < factorization.size(); i++) {\n            int count = 0;\n\
    \            for (int j = 0; j < factorization.size(); j++) {\n              \
    \  if (factorization.get(j) == i) {\n                    count++;\n          \
    \      }\n            }\n            factors.add(count);\n        }\n        return\
    \ factors;", "        ArrayList<Integer> factors = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization = new ArrayList<Integer>();\n      \
    \  factorization.add(1);\n        factors.add(1);\n        int i = 2;\n      \
    \  while (factorization.size() < n) {\n            while (n % i == 0) {\n    \
    \            factorization.add(i);\n                factors.add(i);\n        \
    \        n /= i;\n            }\n            i++;\n        }\n        return factors;",
  "        ArrayList<Integer> factors = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<>();\n        factorization.add(1);\n        factors.add(1);\n\
    \        factors.add(2);\n        factors.add(2);\n        factors.add(3);\n \
    \       factors.add(3);\n        factors.add(5);\n        factors.add(5);\n  \
    \      factors.add(7);\n        factors.add(7);\n        factors.add(11);\n  \
    \      factors.add(11);\n        factors.add(13);\n        factors.add(13);\n\
    \        factors.add(17);\n        factors.add(17);\n        factors.add(19);\n\
    \        factors.add(19);\n        factors.add(23);\n        factors.add(23);\n\
    \        factors.add(29);\n        factors.add(29);\n        factors.add(31);\n\
    \        factors.add(31);\n        factors.add(37);\n        factors.add(37);\n\
    \        factors.add(41);\n        factors.add(41);\n        factors.add(43);\n\
    \        factors.add(43);\n        factors.add(47);\n        factors.add(47);\n\
    \        factors.add(53);\n        factors.add(53);\n        factors.add(59);\n\
    \        factors.add(59);\n        factors.add(61);\n        factors.add(61);\n\
    \        factors.add(67);\n        factors.add(67);\n        factors.add(71);\n\
    \        factors.add(71);\n        factors.add(73);\n        factors.add(73);\n\
    \        factors.add(79);\n        factors.add(79);\n        factors.add(83);\n\
    \        factors.add(83);\n        factors.add(89);\n        factors.add(89);\n\
    \        factors.add(97);\n        factors.add(97);\n        factors.add(101);\n\
    \        factors.add(101);\n        factors.add(103);\n        factors.add(103);\n\
    \        factors.add(107);\n        factors.add(107);\n        factors.add(109);\n\
    \        factors.add(109);\n        factors.add(113);\n        factors.add(113);\n\
    \        factors.add(127);\n        factors.add(127);\n        factors.add(131);\n\
    \        factors.add(131);\n        factors.add(137);\n        factors.add(137);\n\
    \        factors.add(139);\n        factors.add(139);\n        factors.add(143);\n\
    \        factors.add(143);\n        factors.add(147);\n        factors.add(147);\n\
    \        factors.add(151);\n        factors.add(151);\n        factors.add(157);\n\
    \        factors.add(157);\n        factors.add(163);\n        factors.add(163);\n\
    \        factors.add(167);\n        factors.add(167);\n        factors.add(173);\n\
    \        factors.add(173);\n        factors.add(17", "        ArrayList<Integer>\
    \ factors = new ArrayList<>();\n        ArrayList<Integer> factorization = new\
    \ ArrayList<>();\n        factorization.add(1);\n        factors.add(1);\n   \
    \     for (int i = 2; i <= Math.sqrt(n); i++) {\n            if (n % i == 0) {\n\
    \                while (n % i == 0) {\n                    factorization.add(i);\n\
    \                    n /= i;\n                }\n                factors.add(factorization.get(i));\n\
    \                factorization.remove(i);\n            }\n        }\n        return\
    \ factors;", "        ArrayList<Integer> factors = new ArrayList<>();\n      \
    \  ArrayList<Integer> factorization = new ArrayList<>();\n        factorization\
    \ = factorize(n);\n        factors.add(factorization.size());\n        factors.add(1);\n\
    \        factors.add(1);\n        for (int i = 1; i < factorization.size(); i++)\
    \ {\n            while (factorization.size() % 2 == 0) {\n                factors.add(factorization.get(i));\n\
    \                factorization.remove(factorization.get(i));\n            }\n\
    \        }\n        return factors;", "        ArrayList<Integer> factors = new\
    \ ArrayList<>();\n        ArrayList<Integer> factorization = new ArrayList<>();\n\
    \        factorization.add(1);\n        factors.add(1);\n        factors.add(2);\n\
    \        factors.add(2);\n        factors.add(3);\n        factors.add(3);\n \
    \       factors.add(5);\n        factors.add(5);\n        factors.add(7);\n  \
    \      factors.add(7);\n        factors.add(11);\n        factors.add(11);\n \
    \       factors.add(13);\n        factors.add(13);\n        factors.add(17);\n\
    \        factors.add(17);\n        factors.add(19);\n        factors.add(19);\n\
    \        factors.add(23);\n        factors.add(23);\n        factors.add(29);\n\
    \        factors.add(29);\n        factors.add(31);\n        factors.add(31);\n\
    \        factors.add(37);\n        factors.add(37);\n        factors.add(41);\n\
    \        factors.add(41);\n        factors.add(43);\n        factors.add(43);\n\
    \        factors.add(47);\n        factors.add(47);\n        factors.add(53);\n\
    \        factors.add(53);\n        factors.add(59);\n        factors.add(59);\n\
    \        factors.add(61);\n        factors.add(61);\n        factors.add(67);\n\
    \        factors.add(67);\n        factors.add(71);\n        factors.add(71);\n\
    \        factors.add(73);\n        factors.add(73);\n        factors.add(79);\n\
    \        factors.add(79);\n        factors.add(83);\n        factors.add(83);\n\
    \        factors.add(89);\n        factors.add(89);\n        factors.add(97);\n\
    \        factors.add(97);\n        factors.add(101);\n        factors.add(101);\n\
    \        factors.add(103);\n        factors.add(103);\n        factors.add(105);\n\
    \        factors.add(105);\n        factors.add(107);\n        factors.add(107);\n\
    \        factors.add(109);\n        factors.add(109);\n        factors.add(113);\n\
    \        factors.add(113);\n        factors.add(127);\n        factors.add(127);\n\
    \        factors.add(131);\n        factors.add(131);\n        factors.add(137);\n\
    \        factors.add(137);\n        factors.add(139);\n        factors.add(139);\n\
    \        factors.add(143);\n        factors.add(143);\n        factors.add(147);\n\
    \        factors.add(147);\n        factors.add(151);\n        factors.add(151);\n\
    \        factors.add(153);\n        factors.add(153);\n        factors.add(157);\n\
    \        factors.add(157);\n        factors.add(163);\n        factors.add(163);\n\
    \        factors.add(16", "        ArrayList<Integer> factors = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization = new ArrayList<>();\n        factorization.add(1);\n\
    \        factors.add(1);\n        for (int i = 2; i <= n / 2; i++) {\n       \
    \     if (n % i == 0) {\n                while (n % i == 0) {\n              \
    \      factorization.add(i);\n                    n /= i;\n                }\n\
    \                factors.add(1);\n                factorization.add(i);\n    \
    \        }\n        }\n        if (n != 1) {\n            factorization.add(n);\n\
    \        }\n        return factorization;", "        ArrayList<Integer> factors\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization = new ArrayList<>();\n\
    \        factorization.add(1);\n        factors.add(1);\n        for (int i =\
    \ 2; i <= Math.sqrt(n); i++) {\n            if (n % i == 0) {\n              \
    \  factorization.add(i);\n                factors.add(1);\n                while\
    \ (n % i == 0) {\n                    factorization.add(i);\n                \
    \    factors.add(1);\n                    n /= i;\n                }\n       \
    \     }\n        }\n        factorization.add(n);\n        factors.add(1);\n \
    \       return factorization;", "        ArrayList<Integer> factors = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization = new ArrayList<>();\n        factorization.add(1);\n\
    \        factors.add(1);\n        factors.add(2);\n        factors.add(2);\n \
    \       factors.add(3);\n        factors.add(3);\n        factors.add(5);\n  \
    \      factors.add(5);\n        factors.add(7);\n        factors.add(7);\n   \
    \     factors.add(11);\n        factors.add(11);\n        factors.add(13);\n \
    \       factors.add(13);\n        factors.add(17);\n        factors.add(17);\n\
    \        factors.add(19);\n        factors.add(19);\n        factors.add(23);\n\
    \        factors.add(23);\n        factors.add(29);\n        factors.add(29);\n\
    \        factors.add(31);\n        factors.add(31);\n        factors.add(37);\n\
    \        factors.add(37);\n        factors.add(41);\n        factors.add(41);\n\
    \        factors.add(43);\n        factors.add(43);\n        factors.add(47);\n\
    \        factors.add(47);\n        factors.add(53);\n        factors.add(53);\n\
    \        factors.add(59);\n        factors.add(59);\n        factors.add(61);\n\
    \        factors.add(61);\n        factors.add(67);\n        factors.add(67);\n\
    \        factors.add(71);\n        factors.add(71);\n        factors.add(73);\n\
    \        factors.add(73);\n        factors.add(79);\n        factors.add(79);\n\
    \        factors.add(83);\n        factors.add(83);\n        factors.add(89);\n\
    \        factors.add(89);\n        factors.add(97);\n        factors.add(97);\n\
    \        factors.add(101);\n        factors.add(101);\n        factors.add(103);\n\
    \        factors.add(103);\n        factors.add(107);\n        factors.add(107);\n\
    \        factors.add(113);\n        factors.add(113);\n        factors.add(117);\n\
    \        factors.add(117);\n        factors.add(121);\n        factors.add(121);\n\
    \        factors.add(123);\n        factors.add(123);\n        factors.add(127);\n\
    \        factors.add(127);\n        factors.add(131);\n        factors.add(131);\n\
    \        factors.add(137);\n        factors.add(137);\n        factors.add(139);\n\
    \        factors.add(139);\n        factors.add(143);\n        factors.add(143);\n\
    \        factors.add(147);\n        factors.add(147);\n        factors.add(151);\n\
    \        factors.add(151);\n        factors.add(157);\n        factors.add(157);\n\
    \        factors.add(163);\n        factors.add(163);\n        factors.add(16",
  "        ArrayList<Integer> factors = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<Integer>();\n        factorization = factorize(n);\n\
    \        factors.add(factorization.get(0));\n        for (int i = 1; i < factorization.size();\
    \ i++) {\n            if (factorization.get(i) == factorization.get(i - 1)) {\n\
    \                factors.add((factorization.get(i)));\n            }\n       \
    \ }\n        return factors;", "        ArrayList<Integer> factors = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization = new ArrayList<>();\n        factorization.add(n);\n\
    \        factors.add(n);\n        ArrayList<Integer> primes = new ArrayList<>();\n\
    \        primes.add(2);\n        primes.add(3);\n        primes.add(5);\n    \
    \    primes.add(7);\n        primes.add(11);\n        primes.add(13);\n      \
    \  primes.add(17);\n        primes.add(19);\n        primes.add(23);\n       \
    \ primes.add(29);\n        primes.add(31);\n        primes.add(37);\n        primes.add(41);\n\
    \        primes.add(43);\n        primes.add(47);\n        primes.add(53);\n \
    \       primes.add(59);\n        primes.add(61);\n        primes.add(67);\n  \
    \      primes.add(71);\n        primes.add(73);\n        primes.add(79);\n   \
    \     primes.add(83);\n        primes.add(89);\n        primes.add(97);\n    \
    \    primes.add(103);\n        primes.add(109);\n        primes.add(113);\n  \
    \      primes.add(127);\n        primes.add(131);\n        primes.add(137);\n\
    \        primes.add(139);\n        primes.add(143);\n        primes.add(147);\n\
    \        primes.add(151);\n        primes.add(157);\n        primes.add(163);\n\
    \        primes.add(167);\n        primes.add(173);\n        primes.add(179);\n\
    \        primes.add(181);\n        primes.add(191);\n        primes.add(193);\n\
    \        primes.add(197);\n        primes.add(199);\n        primes.add(211);\n\
    \        primes.add(223);\n        primes.add(227);\n        primes.add(229);\n\
    \        primes.add(233);\n        primes.add(239);\n        primes.add(241);\n\
    \        primes.add(251);\n        primes.add(257);\n        primes.add(263);\n\
    \        primes.add(269);\n        primes.add(271);\n        primes.add(277);\n\
    \        primes.add(281);\n        primes.add(283);\n        primes.add(293);\n\
    \        primes.add(307);\n        primes.add(311);\n        primes.add(313;\n\
    \        primes.add(317);\n        primes.add(331);\n        primes.add(337);\n\
    \        primes.add(347);\n        primes.add(349);\n        primes.add(353);\n\
    \        primes.add(371);\n        primes.add(397);\n        primes.add(419);\n\
    \        primes.add(431);\n        primes.add(437);\n        primes.add(443);\n\
    \        primes.add(449);\n        primes.add(451);\n        primes.add(457);\n\
    \        primes.add(46", "        ArrayList<Integer> factors = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization = new ArrayList<>();\n        factorization.add(1);\n\
    \        factors.add(n);\n        factors.add(1);\n        factors.add(1);\n \
    \       factors.add(1);\n        factors.add(1);\n        factors.add(1);\n  \
    \      factors.add(1);\n        factors.add(1);\n        factors.add(1);\n   \
    \     factors.add(1);\n        factors.add(1);\n        factors.add(1);\n    \
    \    factors.add(1);\n        factors.add(1);\n        factors.add(1);\n     \
    \   factors.add(1);\n        factors.add(1);\n        factors.add(1);\n      \
    \  factors.add(1);\n        factors.add(1);\n        factors.add(1);\n       \
    \ factors.add(1);\n        factors.add(1);\n        factors.add(1);\n        factors.add(1);\n\
    \        factors.add(1);\n        factors.add(1);\n        factors.add(1);\n \
    \       factors.add(1);\n        factors.add(1);\n        factors.add(1);\n  \
    \      factors.add(1);\n        factors.add(1);\n        factors.add(1);\n   \
    \     factors.add(1);\n        factors.add(1);\n        factors.add(1);\n    \
    \    factors.add(1);\n        factors.add(1);\n        factors.add(1);\n     \
    \   factors.add(1);\n        factors.add(1);\n        factors.add(1);\n      \
    \  factors.add(1);\n        factors.add(1);\n        factors.add(1);\n       \
    \ factors.add(1);\n        factors.add(1);\n        factors.add(1);\n        factors.add(1);\n\
    \        factors.add(1);\n        factors.add(1);\n        factors.add(1);\n \
    \       factors.add(1);\n        factors.add(1);\n        factors.add(1);\n  \
    \      factors.add(1);\n        factors.add(1);\n        factors.add(1);\n   \
    \     factors.add(1);\n        factors.add(1);\n        factors.add(1);\n    \
    \    factors.add(1);\n        factors.add(1);\n        factors.add(1);\n     \
    \   factors.add(1);\n        factors.add(1);\n        factors.add(1);\n      \
    \  factors.add(1);\n        factors.add(1);\n        factors.add(1);\n       \
    \ factors.add(1);\n        factors.add(1);\n        factors.add(1);\n        factors.add(1);\n\
    \        factors.add(1);\n        factors.add(1);\n        factors.add(1);\n \
    \       factors.add(1);\n        factors.add(1);\n        factors.add(1);\n  \
    \      factors.add(1);\n        factors.add(1);\n        factors.add(1);\n   \
    \     factors.add(1);\n        factors.add(1);\n        factors.add(1);\n    \
    \    factors.add(1);\n        factors.add(1);\n        factors.add(1);\n     \
    \   factors.add(1);\n        factors.add(1);\n        factors.add(1);\n      \
    \  factors.add(1);\n        factors.add(1);\n        factors.add(1);\n       \
    \ factors.add(1);\n        factor", "        ArrayList<Integer> factors = new\
    \ ArrayList<>();\n        ArrayList<Integer> factorization = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization2 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization3 = new ArrayList<>();\n        ArrayList<Integer> factorization4\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization5 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization6 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization7 = new ArrayList<>();\n        ArrayList<Integer> factorization8\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization9 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization10 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization11 = new ArrayList<>();\n        ArrayList<Integer> factorization12\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization13 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization14 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization15 = new ArrayList<>();\n        ArrayList<Integer> factorization16\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization17 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization18 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization19 = new ArrayList<>();\n        ArrayList<Integer> factorization20\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization21 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization22 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization23 = new ArrayList<>();\n        ArrayList<Integer> factorization24\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization25 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization26 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization27 = new ArrayList<>();\n        ArrayList<Integer> factorization28\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization29 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization30 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization31 = new ArrayList<>();\n        ArrayList<Integer> factorization32\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization33 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization34 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization35 = new ArrayList<>();\n        ArrayList<Integer> factorization36\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization37 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization38 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization39 = new ArrayList<>();\n        ArrayList<Integer> factorization40\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization41 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization42 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization43 = new ArrayList<>();\n        ArrayList<Integer> factorization44\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization45 = new ArrayList<>();\n\
    \        ArrayList<Integer> ", "        ArrayList<Integer> factors = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization = new ArrayList<>();\n        factorization\
    \ = factorize(n);\n        for (int i = 0; i < factorization.size(); i++) {\n\
    \            factors.add(factorization.get(i));\n        }\n        return factors;",
  "        ArrayList<Integer> factors = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<>();\n        factorization.add(1);\n        factors.add(1);\n\
    \        for (int i = 2; i <= Math.sqrt(n); i++) {\n            if (n % i == 0)\
    \ {\n                while (n % i == 0) {\n                    factorization.add(i);\n\
    \                    n /= i;\n                }\n                factors.add(1);\n\
    \                factorization.add(i);\n            }\n        }\n        factors.add(1);\n\
    \        return factorization;", "        ArrayList<Integer> factors = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization = new ArrayList<>();\n        factorization.add(1);\n\
    \        factors.add(1);\n        for (int i = 2; i <= n / 2; i++) {\n       \
    \     if (n % i == 0) {\n                factorization.add(i);\n             \
    \   factors.add(1);\n            }\n        }\n        for (int i = factorization.size()\
    \ - 1; i >= 0; i--) {\n            while (factorization.get(i) * factorization.get(i)\
    \ <= n) {\n                factors.add(factorization.get(i) * factorization.get(i));\n\
    \                factorization.remove(i);\n            }\n        }\n        return\
    \ factors;", "        ArrayList<Integer> factors = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization = new ArrayList<Integer>();\n      \
    \  int i = 2;\n        while (i <= n / i) {\n            if (n % i == 0) {\n \
    \               factors.add(i);\n                factorization.add(1);\n     \
    \           while (i <= n / i) {\n                    if (n % i == 0) {\n    \
    \                    factors.add(i);\n                        factorization.add(factorization.get(i)\
    \ + 1);\n                        i++;\n                    }\n               \
    \     i++;\n                }\n            }\n            i++;\n        }\n  \
    \      return factors;", "        ArrayList<Integer> factors = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization = new ArrayList<>();\n        factorization\
    \ = factorize(n);\n        factors.add(factorization.get(0));\n        for (int\
    \ i = 1; i < factorization.size(); i++) {\n            if (factorization.get(i)\
    \ == 1) {\n                factors.add(factorization.get(i));\n            } else\
    \ {\n                for (int j = 0; j < factorization.get(i); j++) {\n      \
    \              factors.add(factorization.get(i));\n                }\n       \
    \     }\n        }\n        return factors;", "        ArrayList<Integer> factors\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization = new ArrayList<>();\n\
    \        factorization.add(n);\n        factors.add(n);\n        factors.add(1);\n\
    \        factors.add(2);\n        factors.add(3);\n        factors.add(5);\n \
    \       factors.add(7);\n        factors.add(11);\n        factors.add(13);\n\
    \        factors.add(17);\n        factors.add(19);\n        factors.add(23);\n\
    \        factors.add(29);\n        factors.add(31);\n        factors.add(37);\n\
    \        factors.add(41);\n        factors.add(43);\n        factors.add(47);\n\
    \        factors.add(53);\n        factors.add(59);\n        factors.add(61);\n\
    \        factors.add(67);\n        factors.add(71);\n        factors.add(73);\n\
    \        factors.add(79);\n        factors.add(83);\n        factors.add(89);\n\
    \        factors.add(97);\n        factors.add(101);\n        factors.add(103);\n\
    \        factors.add(107);\n        factors.add(109);\n        factors.add(113);\n\
    \        factors.add(127);\n        factors.add(131);\n        factors.add(137);\n\
    \        factors.add(139);\n        factors.add(143);\n        factors.add(147);\n\
    \        factors.add(151);\n        factors.add(157);\n        factors.add(163);\n\
    \        factors.add(167);\n        factors.add(173);\n        factors.add(179);\n\
    \        factors.add(181);\n        factors.add(191);\n        factors.add(193);\n\
    \        factors.add(197);\n        factors.add(199);\n        factors.add(203);\n\
    \        factors.add(207);\n        factors.add(211);\n        factors.add(213);\n\
    \        factors.add(217);\n        factors.add(223);\n        factors.add(227);\n\
    \        factors.add(229);\n        factors.add(233);\n        factors.add(239);\n\
    \        factors.add(241);\n        factors.add(251);\n        factors.add(257);\n\
    \        factors.add(263);\n        factors.add(269);\n        factors.add(271);\n\
    \        factors.add(277);\n        factors.add(281);\n        factors.add(283);\n\
    \        factors.add(293);\n        factors.add(307);\n        factors.add(311);\n\
    \        factors.add(313;\n        factors.add(317);\n        factors.add(331);\n\
    \        factors.add(337);\n        factors.add(347);\n        factors.add(349);\n\
    \        factors.add(353);\n        factors.add(359);\n        factors.add(367);\n\
    \        factors.add(373);\n        factors.add(379);\n        factors.add(38",
  "        ArrayList<Integer> factors = new ArrayList<Integer>();\n        int i =\
    \ 2;\n        while (i <= Math.sqrt(n)) {\n            if (n % i == 0) {\n   \
    \             factors.add(i);\n                while (n / i > i) {\n         \
    \           n /= i;\n                    factors.add(i);\n                }\n\
    \            }\n            i++;\n        }\n        return factors;", "     \
    \   ArrayList<Integer> factors = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<Integer>();\n        factorization.add(1);\n \
    \       factors.add(1);\n        factors.add(2);\n        factors.add(2);\n  \
    \      factors.add(3);\n        factors.add(3);\n        factors.add(5);\n   \
    \     factors.add(5);\n        factors.add(7);\n        factors.add(7);\n    \
    \    factors.add(11);\n        factors.add(11);\n        factors.add(13);\n  \
    \      factors.add(13);\n        factors.add(17);\n        factors.add(17);\n\
    \        factors.add(19);\n        factors.add(19);\n        factors.add(23);\n\
    \        factors.add(23);\n        factors.add(29);\n        factors.add(29);\n\
    \        factors.add(31);\n        factors.add(31);\n        factors.add(37);\n\
    \        factors.add(37);\n        factors.add(41);\n        factors.add(41);\n\
    \        factors.add(43);\n        factors.add(43);\n        factors.add(47);\n\
    \        factors.add(47);\n        factors.add(53);\n        factors.add(53);\n\
    \        factors.add(59);\n        factors.add(59);\n        factors.add(61);\n\
    \        factors.add(61);\n        factors.add(67);\n        factors.add(67);\n\
    \        factors.add(71);\n        factors.add(71);\n        factors.add(73);\n\
    \        factors.add(73);\n        factors.add(79);\n        factors.add(79);\n\
    \        factors.add(83);\n        factors.add(83);\n        factors.add(89);\n\
    \        factors.add(89);\n        factors.add(97);\n        factors.add(97);\n\
    \        factors.add(101);\n        factors.add(101);\n        factors.add(103);\n\
    \        factors.add(103);\n        factors.add(107);\n        factors.add(107);\n\
    \        factors.add(113);\n        factors.add(113);\n        factors.add(127);\n\
    \        factors.add(127);\n        factors.add(131);\n        factors.add(131);\n\
    \        factors.add(137);\n        factors.add(137);\n        factors.add(139);\n\
    \        factors.add(139);\n        factors.add(143);\n        factors.add(143);\n\
    \        factors.add(147);\n        factors.add(147);\n        factors.add(151);\n\
    \        factors.add(151);\n        factors.add(157);\n        factors.add(157);\n\
    \        factors.add(163);\n        factors.add(163);\n        factors.add(167);\n\
    \        factors.add(167);\n        factors.add(173);\n        factors.add(173);\n\
    \        factors.add(179);\n        factors.add(179);\n        factor", "    \
    \    ArrayList<Integer> factors = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<Integer>();\n        ArrayList<Integer> factorization2\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization3 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization4 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization5 = new ArrayList<Integer>();\n     \
    \   ArrayList<Integer> factorization6 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization7 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization8\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization9 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization10 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization11 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization12 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization13 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization14\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization15 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization16 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization17 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization18 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization19 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization20\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization21 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization22 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization23 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization24 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization25 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization26\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization27 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization28 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization29 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization30 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization31 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization32\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization33 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization34 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization35 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization36 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization37 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization38\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization39 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization40 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization41 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization42 = ", "        ArrayList<Integer> factors\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization = new ArrayList<>();\n\
    \        factorization.add(1);\n        factors.add(1);\n        factors.add(2);\n\
    \        factors.add(2);\n        int i = 2;\n        while (factorization.size()\
    \ < n) {\n            while (factorization.get(i * i) <= n) {\n              \
    \  factorization.add(i * i);\n                factors.add(i);\n              \
    \  i++;\n            }\n            i++;\n        }\n        return factors;",
  "        ArrayList<Integer> factors = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<>();\n        factorization.add(n);\n        factors.add(n);\n\
    \        factors.add(1);\n        factors.add(2);\n        factors.add(3);\n \
    \       factors.add(5);\n        factors.add(7);\n        factors.add(11);\n \
    \       factors.add(13);\n        factors.add(17);\n        factors.add(19);\n\
    \        factors.add(23);\n        factors.add(29);\n        factors.add(31);\n\
    \        factors.add(37);\n        factors.add(41);\n        factors.add(43);\n\
    \        factors.add(47);\n        factors.add(53);\n        factors.add(59);\n\
    \        factors.add(61);\n        factors.add(67);\n        factors.add(71);\n\
    \        factors.add(73);\n        factors.add(79);\n        factors.add(83);\n\
    \        factors.add(89);\n        factors.add(97);\n        factors.add(101);\n\
    \        factors.add(103);\n        factors.add(107);\n        factors.add(109);\n\
    \        factors.add(113);\n        factors.add(127);\n        factors.add(131);\n\
    \        factors.add(137);\n        factors.add(139);\n        factors.add(149);\n\
    \        factors.add(151);\n        factors.add(157);\n        factors.add(163);\n\
    \        factors.add(167);\n        factors.add(173);\n        factors.add(179);\n\
    \        factors.add(181);\n        factors.add(191);\n        factors.add(193);\n\
    \        factors.add(197);\n        factors.add(199);\n        factors.add(203);\n\
    \        factors.add(207);\n        factors.add(211;\n        factors.add(223);\n\
    \        factors.add(227);\n        factors.add(229);\n        factors.add(233);\n\
    \        factors.add(239);\n        factors.add(241);\n        factors.add(251);\n\
    \        factors.add(257);\n        factors.add(263);\n        factors.add(269);\n\
    \        factors.add(271);\n        factors.add(277);\n        factors.add(281);\n\
    \        factors.add(283);\n        factors.add(293);\n        factors.add(307);\n\
    \        factors.add(311);\n        factors.add(313;\n        factors.add(317);\n\
    \        factors.add(331);\n        factors.add(337);\n        factors.add(347);\n\
    \        factors.add(349);\n        factors.add(353);\n        factors.add(359);\n\
    \        factors.add(361);\n        factors.add(401);\n        factors.add(403);\n\
    \        factors.add(407);\n        factors.add(419);\n        factors.add(421);\n\
    \        factors.add(", "        ArrayList<Integer> factors = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization = new ArrayList<Integer>();\n      \
    \  factorization.add(1);\n        factors.add(1);\n        for(int i = 2; i <=\
    \ Math.sqrt(n); i++) {\n            int j = 0;\n            while(factorization.get(j)\
    \ * i < n) {\n                j++;\n            }\n            factorization.add(j);\n\
    \            factors.add(j);\n        }\n        return factors;", "        ArrayList<Integer>\
    \ factors = new ArrayList<>();\n        ArrayList<Integer> factorization = new\
    \ ArrayList<>();\n        factorization.add(1);\n        factors.add(1);\n   \
    \     factors.add(2);\n        factors.add(2);\n        factors.add(3);\n    \
    \    factors.add(3);\n        factors.add(5);\n        factors.add(5);\n     \
    \   factors.add(7);\n        factors.add(7);\n        factors.add(11);\n     \
    \   factors.add(11);\n        factors.add(13);\n        factors.add(13);\n   \
    \     factors.add(17);\n        factors.add(17);\n        factors.add(19);\n \
    \       factors.add(19);\n        factors.add(23);\n        factors.add(23);\n\
    \        factors.add(29);\n        factors.add(29);\n        factors.add(31);\n\
    \        factors.add(31);\n        factors.add(37);\n        factors.add(37);\n\
    \        factors.add(41);\n        factors.add(41);\n        factors.add(43);\n\
    \        factors.add(43);\n        factors.add(47);\n        factors.add(47);\n\
    \        factors.add(53);\n        factors.add(53);\n        factors.add(59);\n\
    \        factors.add(59);\n        factors.add(61);\n        factors.add(61);\n\
    \        factors.add(67);\n        factors.add(67);\n        factors.add(71);\n\
    \        factors.add(71);\n        factors.add(73);\n        factors.add(73);\n\
    \        factors.add(79);\n        factors.add(79);\n        factors.add(83);\n\
    \        factors.add(83);\n        factors.add(89);\n        factors.add(89);\n\
    \        factors.add(97);\n        factors.add(97);\n        factors.add(101);\n\
    \        factors.add(101);\n        factors.add(103);\n        factors.add(103);\n\
    \        factors.add(107);\n        factors.add(107);\n        factors.add(113);\n\
    \        factors.add(113);\n        factors.add(127);\n        factors.add(127);\n\
    \        factors.add(131);\n        factors.add(131);\n        factors.add(137);\n\
    \        factors.add(137);\n        factors.add(139);\n        factors.add(139);\n\
    \        factors.add(143);\n        factors.add(143);\n        factors.add(147);\n\
    \        factors.add(147);\n        factors.add(151);\n        factors.add(151);\n\
    \        factors.add(153);\n        factors.add(153);\n        factors.add(157);\n\
    \        factors.add(157);\n        factors.add(163);\n        factors.add(163);\n\
    \        factors.add(167);\n        factors.add(167);\n        factors.add(171);\n\
    \        factors.add(171);\n        factors.add(17", "        ArrayList<Integer>\
    \ factors = new ArrayList<>();\n        ArrayList<Integer> factorization = new\
    \ ArrayList<>();\n        int i = 2;\n        while (i < n) {\n            if\
    \ (n % i == 0) {\n                factors.add(i);\n                factorization.add(i);\n\
    \                while (n % i == 0) {\n                    n /= i;\n         \
    \           factors.add(i);\n                    factorization.add(i);\n     \
    \           }\n            }\n            i++;\n        }\n        if (n > 1)\
    \ {\n            factors.add(n);\n            factorization.add(n);\n        }\n\
    \        return factorization;", "        ArrayList<Integer> factors = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization = new ArrayList<>();\n        factorization.add(1);\n\
    \        factors.add(1);\n        for (int i = 2; i <= n / 2; i++) {\n       \
    \     if (n % i == 0) {\n                while (n % i == 0) {\n              \
    \      factorization.add(i);\n                    n /= i;\n                }\n\
    \                factors.add(1);\n                factorization.add(i);\n    \
    \        }\n        }\n        if (n != 1) {\n            factorization.add(n);\n\
    \        }\n        return factorization;", "        ArrayList<Integer> factors\
    \ = new ArrayList<>();\n        for (int i = 2; i <= Math.sqrt(n); i++) {\n  \
    \          while (n % i == 0) {\n                factors.add(i);\n           \
    \     n /= i;\n            }\n        }\n        if (n > 1) {\n            factors.add(n);\n\
    \        }\n        return factors;", "        ArrayList<Integer> factors = new\
    \ ArrayList<>();\n        ArrayList<Integer> factorization = new ArrayList<>();\n\
    \        int i = 2;\n        while (i <= n) {\n            if (n % i == 0) {\n\
    \                factors.add(i);\n                factorization.add(1);\n    \
    \            while (n % i == 0) {\n                    factors.add(i);\n     \
    \               factorization.add(factorization.get(i) + 1);\n               \
    \     n /= i;\n                }\n            }\n            i++;\n        }\n\
    \        if (n != 1) {\n            factors.add(n);\n            factorization.add(1);\n\
    \        }\n        return factors;", "        ArrayList<Integer> factors = new\
    \ ArrayList<>();\n        ArrayList<Integer> factorization = new ArrayList<>();\n\
    \        factorization = factorize(n);\n        factors.add(factorization.get(0));\n\
    \        for (int i = 1; i < factorization.size(); i++) {\n            if (factorization.get(i)\
    \ == 1) {\n                factors.add(factorization.get(i));\n            }\n\
    \        }\n        return factors;", "        ArrayList<Integer> factors = new\
    \ ArrayList<>();\n        ArrayList<Integer> factorization = new ArrayList<>();\n\
    \        factorization = factorization(n);\n        factors.add(factorization.get(0));\n\
    \        for (int i = 1; i < factorization.size(); i++) {\n            int count\
    \ = 0;\n            for (int j = 0; j < factorization.size(); j++) {\n       \
    \         if (factorization.get(j) == factorization.get(i)) {\n              \
    \      count++;\n                }\n            }\n            factors.add(factorization.get(i));\n\
    \            factors.add(count);\n        }\n        return factors;", "     \
    \   ArrayList<Integer> factors = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<>();\n        factorization.add(1);\n        factors.add(1);\n\
    \        int i = 2;\n        while (i < n) {\n            if (n % i == 0) {\n\
    \                factorization.add(i);\n                factors.add(1);\n    \
    \            while (i < n && n % i == 0) {\n                    factorization.add(i);\n\
    \                    factors.add(1);\n                    i++;\n             \
    \   }\n            }\n            i++;\n        }\n        factorization.add(n);\n\
    \        factors.add(1);\n        return factorization;", "        ArrayList<Integer>\
    \ factors = new ArrayList<Integer>();\n        ArrayList<Integer> factorization\
    \ = new ArrayList<Integer>();\n        factors.add(2);\n        factors.add(3);\n\
    \        factors.add(5);\n        factors.add(7);\n        factors.add(11);\n\
    \        factors.add(13);\n        factors.add(17);\n        factors.add(19);\n\
    \        factors.add(23);\n        factors.add(29);\n        factors.add(31);\n\
    \        factors.add(37);\n        factors.add(41);\n        factors.add(43);\n\
    \        factors.add(47);\n        factors.add(53);\n        factors.add(59);\n\
    \        factors.add(61);\n        factors.add(67);\n        factors.add(71);\n\
    \        factors.add(73);\n        factors.add(79);\n        factors.add(83);\n\
    \        factors.add(89);\n        factors.add(97);\n        factors.add(103);\n\
    \        factors.add(109);\n        factors.add(113);\n        factors.add(127);\n\
    \        factors.add(131);\n        factors.add(137);\n        factors.add(139);\n\
    \        factors.add(143);\n        factors.add(147);\n        factors.add(151);\n\
    \        factors.add(157);\n        factors.add(163);\n        factors.add(167);\n\
    \        factors.add(173);\n        factors.add(179);\n        factors.add(181);\n\
    \        factors.add(191);\n        factors.add(193);\n        factors.add(197);\n\
    \        factors.add(199);\n        factors.add(203);\n        factors.add(207);\n\
    \        factors.add(211;\n        factors.add(223);\n        factors.add(227);\n\
    \        factors.add(229);\n        factors.add(233);\n        factors.add(239);\n\
    \        factors.add(241);\n        factors.add(251);\n        factors.add(257);\n\
    \        factors.add(263);\n        factors.add(269);\n        factors.add(271);\n\
    \        factors.add(277);\n        factors.add(281);\n        factors.add(283);\n\
    \        factors.add(293);\n        factors.add(307);\n        factors.add(311);\n\
    \        factors.add(313;\n        factors.add(317);\n        factors.add(331);\n\
    \        factors.add(337);\n        factors.add(347);\n        factors.add(349);\n\
    \        factors.add(353);\n        factors.add(371);\n        factors.add(409);\n\
    \        factors.add(419);\n        factors.add(431);\n        factors.add(439);\n\
    \        factors.add(443);\n        factors.add(449);\n        factors.add(457);\n\
    \        factors.add(461);\n        factors.add(463);\n        factors.add(",
  "        ArrayList<Integer> factors = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<Integer>();\n        factorization.add(1);\n \
    \       factors.add(1);\n        for(int i = 2; i <= Math.sqrt(n); i++) {\n  \
    \          int j = 0;\n            while(factorization.get(j) * i < n) {\n   \
    \             j++;\n            }\n            factorization.add(i, factorization.get(j));\n\
    \            factors.add(i, 1);\n        }\n        for(int i = factorization.size()\
    \ - 1; i >= 0; i--) {\n            int j = factorization.get(i);\n           \
    \ while(j > 0) {\n                factors.add(j, factors.get(j));\n          \
    \      j--;\n            }\n        }\n        return factors;", "        ArrayList<Integer>\
    \ factors = new ArrayList<Integer>();\n        ArrayList<Integer> factorization\
    \ = new ArrayList<Integer>();\n        factorization.add(1);\n        factors.add(1);\n\
    \        for (int i = 2; i <= Math.sqrt(n); i++) {\n            if (n % i == 0)\
    \ {\n                while (n % i == 0) {\n                    factorization.add(i);\n\
    \                    n /= i;\n                }\n                factors.add(1);\n\
    \                factorization.add(i);\n            }\n        }\n        return\
    \ factorization;", "        ArrayList<Integer> factors = new ArrayList<>();\n\
    \        factorize(n, factors);\n        return factors;", "        ArrayList<Integer>\
    \ factors = new ArrayList<>();\n        ArrayList<Integer> factorization = new\
    \ ArrayList<>();\n        ArrayList<Integer> primeFactorization = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactors = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorsCount = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount2\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount3 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorsCount4 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorsCount5 = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount6\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount7 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorsCount8 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorsCount9 = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount10\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount11 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorsCount12 = new ArrayList<>();\n       \
    \ ArrayList<Integer> primeFactorsCount13 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorsCount14 = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount15\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount16 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorsCount17 = new ArrayList<>();\n       \
    \ ArrayList<Integer> primeFactorsCount18 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorsCount19 = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount20\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount21 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorsCount22 = new ArrayList<>();\n       \
    \ ArrayList<Integer> primeFactorsCount23 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorsCount24 = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount25\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount26 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorsCount27 = new ArrayList<>();\n       \
    \ ArrayList<Integer> primeFactorsCount28 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorsCount29 = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount30\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount31 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorsCount32 = new ArrayList<>();\n       \
    \ ArrayList<Integer> primeFactorsCount33 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorsCount34 = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount35\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount36 = new ArrayList<>();\n\
    \        ArrayList<Integer", "        ArrayList<Integer> factors = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization = new ArrayList<Integer>();\n      \
    \  factors.add(2);\n        factors.add(3);\n        factors.add(5);\n       \
    \ factors.add(7);\n        factors.add(11);\n        factors.add(13);\n      \
    \  factors.add(17);\n        factors.add(19);\n        factors.add(23);\n    \
    \    factors.add(29);\n        factors.add(31);\n        factors.add(37);\n  \
    \      factors.add(41);\n        factors.add(43);\n        factors.add(47);\n\
    \        factors.add(53);\n        factors.add(59);\n        factors.add(61);\n\
    \        factors.add(67);\n        factors.add(71);\n        factors.add(73);\n\
    \        factors.add(79);\n        factors.add(83);\n        factors.add(89);\n\
    \        factors.add(97);\n        factors.add(103);\n        factors.add(109);\n\
    \        factors.add(113);\n        factors.add(127);\n        factors.add(131);\n\
    \        factors.add(137);\n        factors.add(139);\n        factors.add(143);\n\
    \        factors.add(147);\n        factors.add(151);\n        factors.add(157);\n\
    \        factors.add(163);\n        factors.add(167);\n        factors.add(173);\n\
    \        factors.add(179);\n        factors.add(181);\n        factors.add(191);\n\
    \        factors.add(193);\n        factors.add(197);\n        factors.add(199);\n\
    \        factors.add(203);\n        factors.add(207);\n        factors.add(211);\n\
    \        factors.add(213);\n        factors.add(217);\n        factors.add(223);\n\
    \        factors.add(227);\n        factors.add(229);\n        factors.add(233);\n\
    \        factors.add(239);\n        factors.add(241);\n        factors.add(251);\n\
    \        factors.add(257);\n        factors.add(263);\n        factors.add(269);\n\
    \        factors.add(271);\n        factors.add(277);\n        factors.add(281);\n\
    \        factors.add(283);\n        factors.add(293);\n        factors.add(307);\n\
    \        factors.add(311);\n        factors.add(313;\n        factors.add(317);\n\
    \        factors.add(331);\n        factors.add(337);\n        factors.add(347);\n\
    \        factors.add(349);\n        factors.add(353);\n        factors.add(359);\n\
    \        factors.add(361);\n        factors.add(369);\n        factors.add(373);\n\
    \        factors.add(379);\n        factors.add(383);\n        factors.add(389);\n\
    \        factors.add(397);\n        factors.add(401);\n", "        ArrayList<Integer>\
    \ factors = new ArrayList<>();\n        factors.add(2);\n        for (int i =\
    \ 3; i <= Math.sqrt(n); i += 2) {\n            if (n % i == 0) {\n           \
    \     while (n % i == 0) {\n                    factors.add(i);\n            \
    \        n /= i;\n                }\n            }\n        }\n        if (n >\
    \ 1) {\n            factors.add(n);\n        }\n        return factors;", "  \
    \      ArrayList<Integer> factors = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<>();\n        factorization.add(1);\n        factors.add(1);\n\
    \        factors.add(2);\n        factors.add(2);\n        factors.add(3);\n \
    \       factors.add(3);\n        factors.add(5);\n        factors.add(5);\n  \
    \      factors.add(7);\n        factors.add(7);\n        factors.add(11);\n  \
    \      factors.add(11);\n        factors.add(13);\n        factors.add(13);\n\
    \        factors.add(17);\n        factors.add(17);\n        factors.add(19);\n\
    \        factors.add(19);\n        factors.add(23);\n        factors.add(23);\n\
    \        factors.add(29);\n        factors.add(29);\n        factors.add(31);\n\
    \        factors.add(31);\n        factors.add(37);\n        factors.add(37);\n\
    \        factors.add(41);\n        factors.add(41);\n        factors.add(43);\n\
    \        factors.add(43);\n        factors.add(47);\n        factors.add(47);\n\
    \        factors.add(53);\n        factors.add(53);\n        factors.add(59);\n\
    \        factors.add(59);\n        factors.add(61);\n        factors.add(61);\n\
    \        factors.add(67);\n        factors.add(67);\n        factors.add(71);\n\
    \        factors.add(71);\n        factors.add(73);\n        factors.add(73);\n\
    \        factors.add(79);\n        factors.add(79);\n        factors.add(83);\n\
    \        factors.add(83);\n        factors.add(89);\n        factors.add(89);\n\
    \        factors.add(97);\n        factors.add(97);\n        factors.add(101);\n\
    \        factors.add(101);\n        factors.add(103);\n        factors.add(103);\n\
    \        factors.add(107);\n        factors.add(107);\n        factors.add(113);\n\
    \        factors.add(113);\n        factors.add(127);\n        factors.add(127);\n\
    \        factors.add(131);\n        factors.add(131);\n        factors.add(137);\n\
    \        factors.add(137);\n        factors.add(139);\n        factors.add(139);\n\
    \        factors.add(143);\n        factors.add(143);\n        factors.add(147);\n\
    \        factors.add(147);\n        factors.add(151);\n        factors.add(151);\n\
    \        factors.add(157);\n        factors.add(157);\n        factors.add(163);\n\
    \        factors.add(163);\n        factors.add(167);\n        factors.add(167);\n\
    \        factors.add(173);\n        factors.add(173);\n        factors.add(179);\n\
    \        factors.add(179);\n        factors.add(18", "        ArrayList<Integer>\
    \ factors = new ArrayList<Integer>();\n        ArrayList<Integer> factorization\
    \ = new ArrayList<Integer>();\n        factorization = getFactorization(n);\n\
    \        factors.add(factorization.get(0));\n        for (int i = 1; i < factorization.size();\
    \ i++) {\n            while (factorization.get(i) != 1) {\n                factors.add(factorization.get(i));\n\
    \                factorization.remove(i--);\n            }\n        }\n      \
    \  return factors;", "        ArrayList<Integer> factors = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization = new ArrayList<>();\n        factorization.add(1);\n\
    \        factors.add(1);\n        int i = 2;\n        while (i <= n) {\n     \
    \       if (n % i == 0) {\n                factorization.add(i);\n           \
    \     factors.add(1);\n                while (i <= n / i) {\n                \
    \    if (n % i == 0) {\n                        factorization.add(i);\n      \
    \                  factors.add(1);\n                        i++;\n           \
    \         }\n                    else {\n                        i++;\n      \
    \              }\n                }\n            }\n            else {\n     \
    \           i++;\n            }\n        }\n        return factorization;", " \
    \       ArrayList<Integer> factors = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<Integer>();\n        factors.add(2);\n       \
    \ factors.add(3);\n        factors.add(5);\n        factors.add(7);\n        factors.add(11);\n\
    \        factors.add(13);\n        factors.add(17);\n        factors.add(19);\n\
    \        factors.add(23);\n        factors.add(29);\n        factors.add(31);\n\
    \        factors.add(37);\n        factors.add(41);\n        factors.add(43);\n\
    \        factors.add(47);\n        factors.add(53);\n        factors.add(59);\n\
    \        factors.add(61);\n        factors.add(67);\n        factors.add(71);\n\
    \        factors.add(73);\n        factors.add(79);\n        factors.add(83);\n\
    \        factors.add(89);\n        factors.add(97);\n        factors.add(103);\n\
    \        factors.add(109);\n        factors.add(113);\n        factors.add(127);\n\
    \        factors.add(131);\n        factors.add(137);\n        factors.add(139);\n\
    \        factors.add(143);\n        factors.add(147);\n        factors.add(151);\n\
    \        factors.add(157);\n        factors.add(163);\n        factors.add(167);\n\
    \        factors.add(173);\n        factors.add(179);\n        factors.add(181);\n\
    \        factors.add(191);\n        factors.add(193);\n        factors.add(197);\n\
    \        factors.add(199);\n        factors.add(203);\n        factors.add(207);\n\
    \        factors.add(211);\n        factors.add(223);\n        factors.add(227);\n\
    \        factors.add(229);\n        factors.add(233);\n        factors.add(239);\n\
    \        factors.add(241);\n        factors.add(251);\n        factors.add(257);\n\
    \        factors.add(263);\n        factors.add(269);\n        factors.add(271);\n\
    \        factors.add(277);\n        factors.add(281);\n        factors.add(283);\n\
    \        factors.add(293);\n        factors.add(307);\n        factors.add(311);\n\
    \        factors.add(313;\n        factors.add(317);\n        factors.add(331);\n\
    \        factors.add(337);\n        factors.add(347);\n        factors.add(349);\n\
    \        factors.add(353);\n        factors.add(359);\n        factors.add(367);\n\
    \        factors.add(373);\n        factors.add(379);\n        factors.add(383);\n\
    \        factors.add(389);\n        factors.add(397);\n        factors.add(401);\n\
    \        factors.add(409);\n        factors.add(419);\n        factors.add(421);",
  "        ArrayList<Integer> factors = new ArrayList<Integer>();\n        int i =\
    \ 2;\n        while (i < n) {\n            if (n % i == 0) {\n               \
    \ factors.add(i);\n                n = n / i;\n                while (n % i ==\
    \ 0) {\n                    factors.add(i);\n                    n = n / i;\n\
    \                    i++;\n                }\n            }\n            i++;\n\
    \        }\n        return factors;", "        ArrayList<Integer> factors = new\
    \ ArrayList<>();\n        ArrayList<Integer> factorization = new ArrayList<>();\n\
    \        factorization.add(n);\n        factors.add(1);\n        while (factorization.size()\
    \ > 0) {\n            int i = factorization.get(0);\n            factorization.remove(0);\n\
    \            int j = 1;\n            while (factorization.size() > 0) {\n    \
    \            int k = factorization.get(0);\n                factorization.remove(0);\n\
    \                if (i % k == 0) {\n                    j++;\n               \
    \ }\n                factors.add(j, k);\n            }\n        }\n        return\
    \ factors;", "        ArrayList<Integer> factors = new ArrayList<>();\n      \
    \  ArrayList<Integer> factorization = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization2 = new ArrayList<>();\n        ArrayList<Integer> factorization3\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization4 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization5 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization6 = new ArrayList<>();\n        ArrayList<Integer> factorization7\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization8 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization9 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization10 = new ArrayList<>();\n        ArrayList<Integer> factorization11\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization12 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization13 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization14 = new ArrayList<>();\n        ArrayList<Integer> factorization15\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization16 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization17 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization18 = new ArrayList<>();\n        ArrayList<Integer> factorization19\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization20 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization21 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization22 = new ArrayList<>();\n        ArrayList<Integer> factorization23\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization24 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization25 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization26 = new ArrayList<>();\n        ArrayList<Integer> factorization27\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization28 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization29 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization30 = new ArrayList<>();\n        ArrayList<Integer> factorization31\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization32 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization33 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization34 = new ArrayList<>();\n        ArrayList<Integer> factorization35\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization36 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization37 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization38 = new ArrayList<>();\n        ArrayList<Integer> factorization39\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization40 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization41 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization42 = new ArrayList<>();\n        ArrayList<Integer> factorization43\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization44 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization45 = new ArrayList<>();\n        ArrayList<Integer> ",
  "        ArrayList<Integer> factors = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<Integer>();\n        ArrayList<Integer> factorization2\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization3 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization4 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization5 = new ArrayList<Integer>();\n     \
    \   ArrayList<Integer> factorization6 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization7 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization8\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization9 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization10 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization11 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization12 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization13 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization14\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization15 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization16 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization17 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization18 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization19 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization20\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization21 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization22 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization23 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization24 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization25 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization26\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization27 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization28 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization29 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization30 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization31 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization32\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization33 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization34 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization35 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization36 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization37 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization38\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization39 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization40 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization41 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization42 = ", "        ArrayList<Integer> factors\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization = new ArrayList<>();\n\
    \        factorization.add(1);\n        factors.add(n);\n        factors.add(n);\n\
    \        factors.add(1);\n        factors.add(1);\n        factors.add(1);\n \
    \       factors.add(1);\n        factors.add(1);\n        factors.add(1);\n  \
    \      factors.add(1);\n        factors.add(1);\n        factors.add(1);\n   \
    \     factors.add(1);\n        factors.add(1);\n        factors.add(1);\n    \
    \    factors.add(1);\n        factors.add(1);\n        factors.add(1);\n     \
    \   factors.add(1);\n        factors.add(1);\n        factors.add(1);\n      \
    \  factors.add(1);\n        factors.add(1);\n        factors.add(1);\n       \
    \ factors.add(1);\n        factors.add(1);\n        factors.add(1);\n        factors.add(1);\n\
    \        factors.add(1);\n        factors.add(1);\n        factors.add(1);\n \
    \       factors.add(1);\n        factors.add(1);\n        factors.add(1);\n  \
    \      factors.add(1);\n        factors.add(1);\n        factors.add(1);\n   \
    \     factors.add(1);\n        factors.add(1);\n        factors.add(1);\n    \
    \    factors.add(1);\n        factors.add(1);\n        factors.add(1);\n     \
    \   factors.add(1);\n        factors.add(1);\n        factors.add(1);\n      \
    \  factors.add(1);\n        factors.add(1);\n        factors.add(1);\n       \
    \ factors.add(1);\n        factors.add(1);\n        factors.add(1);\n        factors.add(1);\n\
    \        factors.add(1);\n        factors.add(1);\n        factors.add(1);\n \
    \       factors.add(1);\n        factors.add(1);\n        factors.add(1);\n  \
    \      factors.add(1);\n        factors.add(1);\n        factors.add(1);\n   \
    \     factors.add(1);\n        factors.add(1);\n        factors.add(1);\n    \
    \    factors.add(1);\n        factors.add(1);\n        factors.add(1);\n     \
    \   factors.add(1);\n        factors.add(1);\n        factors.add(1);\n      \
    \  factors.add(1);\n        factors.add(1);\n        factors.add(1);\n       \
    \ factors.add(1);\n        factors.add(1);\n        factors.add(1);\n        factors.add(1);\n\
    \        factors.add(1);\n        factors.add(1);\n        factors.add(1);\n \
    \       factors.add(1);\n        factors.add(1);\n        factors.add(1);\n  \
    \      factors.add(1);\n        factors.add(1);\n        factors.add(1);\n   \
    \     factors.add(1);\n        factors.add(1);\n        factors.add(1);\n    \
    \    factors.add(1);\n        factors.add(1);\n        factors.add(1);\n     \
    \   factors.add(1);\n        factors.add(1);\n        factors.add(1);\n      \
    \  factors.add(1);\n        factors.add(1);\n        factor", "        ArrayList<Integer>\
    \ factors = new ArrayList<Integer>();\n        ArrayList<Integer> factorization\
    \ = new ArrayList<Integer>();\n        factorization.add(n);\n        factors.add(1);\n\
    \        factors.add(2);\n        factors.add(3);\n        factors.add(5);\n \
    \       factors.add(7);\n        factors.add(11);\n        factors.add(13);\n\
    \        factors.add(17);\n        factors.add(19);\n        factors.add(23);\n\
    \        factors.add(29);\n        factors.add(31);\n        factors.add(37);\n\
    \        factors.add(41);\n        factors.add(43);\n        factors.add(47);\n\
    \        factors.add(53);\n        factors.add(59);\n        factors.add(61);\n\
    \        factors.add(67);\n        factors.add(71);\n        factors.add(73);\n\
    \        factors.add(79);\n        factors.add(83);\n        factors.add(89);\n\
    \        factors.add(97);\n        factors.add(101);\n        factors.add(103);\n\
    \        factors.add(107);\n        factors.add(109);\n        factors.add(113);\n\
    \        factors.add(127);\n        factors.add(131);\n        factors.add(137);\n\
    \        factors.add(139);\n        factors.add(143);\n        factors.add(147);\n\
    \        factors.add(151);\n        factors.add(157);\n        factors.add(163);\n\
    \        factors.add(167);\n        factors.add(173);\n        factors.add(179);\n\
    \        factors.add(181);\n        factors.add(191);\n        factors.add(193);\n\
    \        factors.add(197);\n        factors.add(199);\n        factors.add(203);\n\
    \        factors.add(207);\n        factors.add(211);\n        factors.add(213);\n\
    \        factors.add(217);\n        factors.add(223);\n        factors.add(227);\n\
    \        factors.add(229);\n        factors.add(233);\n        factors.add(239);\n\
    \        factors.add(241);\n        factors.add(251);\n        factors.add(257);\n\
    \        factors.add(263);\n        factors.add(269);\n        factors.add(271);\n\
    \        factors.add(277);\n        factors.add(281);\n        factors.add(283);\n\
    \        factors.add(293);\n        factors.add(307);\n        factors.add(311);\n\
    \        factors.add(313;\n        factors.add(317);\n        factors.add(331);\n\
    \        factors.add(337);\n        factors.add(347);\n        factors.add(349);\n\
    \        factors.add(353);\n        factors.add(359);\n        factors.add(367);\n\
    \        factors.add(373);\n        factors.add(379);\n        factors.add(383);\n\
    \        ", "        ArrayList<Integer> factors = new ArrayList<>();\n       \
    \ ArrayList<Integer> factorization = new ArrayList<>();\n        int i = 2;\n\
    \        while (i <= n) {\n            if (n % i == 0) {\n                factors.add(i);\n\
    \                factorization.add(i);\n                while (n / i != i) {\n\
    \                    factors.add(1);\n                    factorization.add(1);\n\
    \                }\n                while (n % i == 0) {\n                   \
    \ factors.add(1);\n                    factorization.add(1);\n               \
    \     n /= i;\n                }\n            }\n            i++;\n        }\n\
    \        factors.add(1);\n        factorization.add(1);\n        return factorization;",
  "        ArrayList<Integer> factors = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<Integer>();\n        factorization.add(n);\n \
    \       factors.add(1);\n        factors.add(2);\n        factors.add(3);\n  \
    \      factors.add(5);\n        factors.add(7);\n        factors.add(11);\n  \
    \      factors.add(13);\n        factors.add(17);\n        factors.add(19);\n\
    \        factors.add(23);\n        factors.add(29);\n        factors.add(31);\n\
    \        factors.add(37);\n        factors.add(41);\n        factors.add(43);\n\
    \        factors.add(47);\n        factors.add(53);\n        factors.add(59);\n\
    \        factors.add(61);\n        factors.add(67);\n        factors.add(71);\n\
    \        factors.add(73);\n        factors.add(79);\n        factors.add(83);\n\
    \        factors.add(89);\n        factors.add(97);\n        factors.add(101);\n\
    \        factors.add(103);\n        factors.add(107);\n        factors.add(109);\n\
    \        factors.add(113);\n        factors.add(127);\n        factors.add(131);\n\
    \        factors.add(137);\n        factors.add(139);\n        factors.add(143);\n\
    \        factors.add(147);\n        factors.add(151);\n        factors.add(157);\n\
    \        factors.add(163);\n        factors.add(167);\n        factors.add(173);\n\
    \        factors.add(179);\n        factors.add(181);\n        factors.add(191);\n\
    \        factors.add(193);\n        factors.add(197);\n        factors.add(199);\n\
    \        factors.add(211);\n        factors.add(223);\n        factors.add(227);\n\
    \        factors.add(229);\n        factors.add(233);\n        factors.add(239);\n\
    \        factors.add(241);\n        factors.add(251);\n        factors.add(257);\n\
    \        factors.add(263);\n        factors.add(269);\n        factors.add(271);\n\
    \        factors.add(277);\n        factors.add(281);\n        factors.add(283);\n\
    \        factors.add(293);\n        factors.add(307);\n        factors.add(311);\n\
    \        factors.add(313;\n        factors.add(317);\n        factors.add(331);\n\
    \        factors.add(337);\n        factors.add(347);\n        factors.add(349);\n\
    \        factors.add(353);\n        factors.add(359);\n        factors.add(361);\n\
    \        factors.add(369);\n        factors.add(373);\n        factors.add(379);\n\
    \        factors.add(383);\n        factors.add(389);\n        factors.add(397);\n\
    \        factors.add(401);\n        ", "        ArrayList<Integer> factors = new\
    \ ArrayList<>();\n        ArrayList<Integer> factorization = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization2 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization3 = new ArrayList<>();\n        ArrayList<Integer> factorization4\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization5 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization6 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization7 = new ArrayList<>();\n        ArrayList<Integer> factorization8\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization9 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization10 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization11 = new ArrayList<>();\n        ArrayList<Integer> factorization12\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization13 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization14 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization15 = new ArrayList<>();\n        ArrayList<Integer> factorization16\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization17 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization18 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization19 = new ArrayList<>();\n        ArrayList<Integer> factorization20\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization21 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization22 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization23 = new ArrayList<>();\n        ArrayList<Integer> factorization24\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization25 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization26 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization27 = new ArrayList<>();\n        ArrayList<Integer> factorization28\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization29 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization30 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization31 = new ArrayList<>();\n        ArrayList<Integer> factorization32\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization33 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization34 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization35 = new ArrayList<>();\n        ArrayList<Integer> factorization36\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization37 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization38 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization39 = new ArrayList<>();\n        ArrayList<Integer> factorization40\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization41 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization42 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization43 = new ArrayList<>();\n        ArrayList<Integer> factorization44\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization45 = new ArrayList<>();\n\
    \        ArrayList<Integer> ", "        ArrayList<Integer> factors = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization = new ArrayList<Integer>();\n      \
    \  factorization = getFactorization(n);\n        factors.add(factorization.get(0));\n\
    \        for (int i = 1; i < factorization.size(); i++) {\n            if (factorization.get(i)\
    \ == 1) {\n                factors.add(factorization.get(i));\n            }\n\
    \        }\n        return factors;", "        ArrayList<Integer> factors = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization2 = new ArrayList<Integer>();\n     \
    \   ArrayList<Integer> factorization3 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization4 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization5\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization6 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization7 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization8 = new ArrayList<Integer>();\n     \
    \   ArrayList<Integer> factorization9 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization10 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization11\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization12 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization13 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization14 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization15 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization16 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization17\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization18 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization19 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization20 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization21 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization22 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization23\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization24 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization25 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization26 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization27 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization28 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization29\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization30 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization31 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization32 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization33 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization34 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization35\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization36 = new\
    \ ArrayList<Integer>();\n        ArrayList<Integer> factorization37 = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization38 = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> factorization39 = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization40 = new ArrayList<Integer>();\n        ArrayList<Integer> factorization41\
    \ = new ArrayList<Integer>();\n        ArrayList<Integer> factorization42 = ",
  "        ArrayList<Integer> factors = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<>();\n        factorization.add(n);\n        while\
    \ (factorization.size() > 0) {\n            int x = factorization.get(0);\n  \
    \          factorization.remove(0);\n            factors.add(x);\n           \
    \ factorization.addAll(Arrays.asList(factorization).stream().filter(i -> i % x\
    \ == 0).collect(Collectors.toList()));\n        }\n        return factors;", " \
    \       ArrayList<Integer> factors = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<>();\n        ArrayList<Integer> factorization2\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization3 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization4 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization5 = new ArrayList<>();\n        ArrayList<Integer> factorization6\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization7 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization8 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization9 = new ArrayList<>();\n        ArrayList<Integer> factorization10\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization11 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization12 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization13 = new ArrayList<>();\n        ArrayList<Integer> factorization14\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization15 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization16 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization17 = new ArrayList<>();\n        ArrayList<Integer> factorization18\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization19 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization20 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization21 = new ArrayList<>();\n        ArrayList<Integer> factorization22\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization23 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization24 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization25 = new ArrayList<>();\n        ArrayList<Integer> factorization26\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization27 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization28 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization29 = new ArrayList<>();\n        ArrayList<Integer> factorization30\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization31 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization32 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization33 = new ArrayList<>();\n        ArrayList<Integer> factorization34\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization35 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization36 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization37 = new ArrayList<>();\n        ArrayList<Integer> factorization38\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization39 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization40 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization41 = new ArrayList<>();\n        ArrayList<Integer> factorization42\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization43 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization44 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization45 = new ArrayList<>();\n        ArrayList<Integer> ", "      \
    \  ArrayList<Integer> factors = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<>();\n        ArrayList<Integer> primes = new\
    \ ArrayList<>();\n        ArrayList<Integer> primeFactorization = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactors = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorsCount = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount2\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount3 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorsCount4 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorsCount5 = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount6\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount7 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorsCount8 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorsCount9 = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount10\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount11 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorsCount12 = new ArrayList<>();\n       \
    \ ArrayList<Integer> primeFactorsCount13 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorsCount14 = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount15\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount16 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorsCount17 = new ArrayList<>();\n       \
    \ ArrayList<Integer> primeFactorsCount18 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorsCount19 = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount20\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount21 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorsCount22 = new ArrayList<>();\n       \
    \ ArrayList<Integer> primeFactorsCount23 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorsCount24 = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount25\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount26 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorsCount27 = new ArrayList<>();\n       \
    \ ArrayList<Integer> primeFactorsCount28 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorsCount29 = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount30\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount31 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorsCount32 = new ArrayList<>();\n       \
    \ ArrayList<Integer> primeFactorsCount33 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorsCount34 = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount35\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactors", "        ArrayList<Integer>\
    \ factors = new ArrayList<>();\n        ArrayList<Integer> factorization = new\
    \ ArrayList<>();\n        factorization.add(n);\n        factors.add(n);\n   \
    \     factors.add(1);\n        factors.add(2);\n        factors.add(3);\n    \
    \    factors.add(5);\n        factors.add(7);\n        factors.add(11);\n    \
    \    factors.add(13);\n        factors.add(17);\n        factors.add(19);\n  \
    \      factors.add(23);\n        factors.add(29);\n        factors.add(31);\n\
    \        factors.add(37);\n        factors.add(41);\n        factors.add(43);\n\
    \        factors.add(47);\n        factors.add(53);\n        factors.add(59);\n\
    \        factors.add(61);\n        factors.add(67);\n        factors.add(71);\n\
    \        factors.add(73);\n        factors.add(79);\n        factors.add(83);\n\
    \        factors.add(89);\n        factors.add(97);\n        factors.add(101);\n\
    \        factors.add(103);\n        factors.add(107);\n        factors.add(109);\n\
    \        factors.add(113);\n        factors.add(127);\n        factors.add(131);\n\
    \        factors.add(137);\n        factors.add(139);\n        factors.add(143);\n\
    \        factors.add(147);\n        factors.add(151);\n        factors.add(157);\n\
    \        factors.add(163);\n        factors.add(167);\n        factors.add(173);\n\
    \        factors.add(179);\n        factors.add(181);\n        factors.add(191);\n\
    \        factors.add(193);\n        factors.add(197);\n        factors.add(199);\n\
    \        factors.add(203);\n        factors.add(207);\n        factors.add(211;\n\
    \        factors.add(223);\n        factors.add(227);\n        factors.add(229);\n\
    \        factors.add(233);\n        factors.add(239);\n        factors.add(241);\n\
    \        factors.add(251);\n        factors.add(257);\n        factors.add(263);\n\
    \        factors.add(269);\n        factors.add(271);\n        factors.add(277);\n\
    \        factors.add(281);\n        factors.add(283);\n        factors.add(293);\n\
    \        factors.add(307);\n        factors.add(311);\n        factors.add(313;\n\
    \        factors.add(317);\n        factors.add(331);\n        factors.add(337);\n\
    \        factors.add(347);\n        factors.add(349);\n        factors.add(353);\n\
    \        factors.add(359);\n        factors.add(361);\n        factors.add(369);\n\
    \        factors.add(373);\n        factors.add(379);\n        factors.add(383);\n\
    \        factors.add(389", "        ArrayList<Integer> factors = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> factorization = new ArrayList<Integer>();\n      \
    \  factors.add(2);\n        for (int i = 3; i <= Math.sqrt(n); i++) {\n      \
    \      if (n % i == 0) {\n                while (n % i == 0) {\n             \
    \       factors.add(i);\n                    n = n / i;\n                }\n \
    \           }\n        }\n        factors.add(n);\n        factorization.addAll(factors);\n\
    \        return factorization;", "        ArrayList<Integer> factors = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization2 = new ArrayList<>();\n        ArrayList<Integer> factorization3\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization4 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization5 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization6 = new ArrayList<>();\n        ArrayList<Integer> factorization7\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization8 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization9 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization10 = new ArrayList<>();\n        ArrayList<Integer> factorization11\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization12 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization13 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization14 = new ArrayList<>();\n        ArrayList<Integer> factorization15\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization16 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization17 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization18 = new ArrayList<>();\n        ArrayList<Integer> factorization19\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization20 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization21 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization22 = new ArrayList<>();\n        ArrayList<Integer> factorization23\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization24 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization25 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization26 = new ArrayList<>();\n        ArrayList<Integer> factorization27\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization28 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization29 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization30 = new ArrayList<>();\n        ArrayList<Integer> factorization31\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization32 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization33 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization34 = new ArrayList<>();\n        ArrayList<Integer> factorization35\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization36 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization37 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization38 = new ArrayList<>();\n        ArrayList<Integer> factorization39\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization40 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization41 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization42 = new ArrayList<>();\n        ArrayList<Integer> factorization43\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization44 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization45 = new ArrayList<>();\n        ArrayList<Integer> ",
  "        ArrayList<Integer> factors = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<Integer>();\n        factorization.add(1);\n \
    \       factors.add(1);\n        factors.add(2);\n        factors.add(2);\n  \
    \      factors.add(3);\n        factors.add(3);\n        factors.add(5);\n   \
    \     factors.add(5);\n        factors.add(7);\n        factors.add(7);\n    \
    \    factors.add(11);\n        factors.add(11);\n        factors.add(13);\n  \
    \      factors.add(13);\n        factors.add(17);\n        factors.add(17);\n\
    \        factors.add(19);\n        factors.add(19);\n        factors.add(21);\n\
    \        factors.add(21);\n        factors.add(23);\n        factors.add(23);\n\
    \        factors.add(29);\n        factors.add(29);\n        factors.add(31);\n\
    \        factors.add(31);\n        factors.add(37);\n        factors.add(37);\n\
    \        factors.add(41);\n        factors.add(41);\n        factors.add(43);\n\
    \        factors.add(43);\n        factors.add(47);\n        factors.add(47);\n\
    \        factors.add(53);\n        factors.add(53);\n        factors.add(59);\n\
    \        factors.add(59);\n        factors.add(61);\n        factors.add(61);\n\
    \        factors.add(67);\n        factors.add(67);\n        factors.add(71);\n\
    \        factors.add(71);\n        factors.add(73);\n        factors.add(73);\n\
    \        factors.add(79);\n        factors.add(79);\n        factors.add(83);\n\
    \        factors.add(83);\n        factors.add(89);\n        factors.add(89);\n\
    \        factors.add(97);\n        factors.add(97);\n        factors.add(101);\n\
    \        factors.add(101);\n        factors.add(103);\n        factors.add(103);\n\
    \        factors.add(107);\n        factors.add(107);\n        factors.add(113);\n\
    \        factors.add(113);\n        factors.add(127);\n        factors.add(127);\n\
    \        factors.add(131);\n        factors.add(131);\n        factors.add(137);\n\
    \        factors.add(137);\n        factors.add(139);\n        factors.add(139);\n\
    \        factors.add(143);\n        factors.add(143);\n        factors.add(147);\n\
    \        factors.add(147);\n        factors.add(151);\n        factors.add(151);\n\
    \        factors.add(157);\n        factors.add(157);\n        factors.add(163);\n\
    \        factors.add(163);\n        factors.add(167);\n        factors.add(167);\n\
    \        factors.add(173);\n        factors.add(173);\n        factor", "    \
    \    ArrayList<Integer> factors = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<>();\n        factorization = factorize(n);\n\
    \        factors.add(factorization.size());\n        factors.add(factorization.size());\n\
    \        factors.add(factorization.size());\n        factors.add(factorization.size());\n\
    \        factors.add(factorization.size());\n        factors.add(factorization.size());\n\
    \        factors.add(factorization.size());\n        factors.add(factorization.size());\n\
    \        factors.add(factorization.size());\n        factors.add(factorization.size());\n\
    \        factors.add(factorization.size());\n        factors.add(factorization.size());\n\
    \        factors.add(factorization.size());\n        factors.add(factorization.size());\n\
    \        factors.add(factorization.size());\n        factors.add(factorization.size());\n\
    \        factors.add(factorization.size());\n        factors.add(factorization.size());\n\
    \        factors.add(factorization.size());\n        factors.add(factorization.size());\n\
    \        factors.add(factorization.size());\n        factors.add(factorization.size());\n\
    \        factors.add(factorization.size());\n        factors.add(factorization.size());\n\
    \        factors.add(factorization.size());\n        factors.add(factorization.size());\n\
    \        factors.add(factorization.size());\n        factors.add(factorization.size());\n\
    \        factors.add(factorization.size());\n        factors.add(factorization.size());\n\
    \        factors.add(factorization.size());\n        factors.add(factorization.size());\n\
    \        factors.add(factorization.size());\n        factors.add(factorization.size());\n\
    \        factors.add(factorization.size());\n        factors.add(factorization.size());\n\
    \        factors.add(factorization.size());\n        factors.add(factorization.size());\n\
    \        factors.add(factorization.size());\n        factors.add(factorization.size());\n\
    \        factors.add(factorization.size());\n        factors.add(factorization.size());\n\
    \        factors.add(factorization.size());\n        factors.add(factorization.size());\n\
    \        factors.add(factorization.size());\n        factors.add(factorization.size());\n\
    \        factors.add(factorization.size());\n        factors.add(factorization.size());\n\
    \        factors.add(factorization.size());\n        factors.add(factorization.size());\n\
    \        factors.add(factorization.size());\n        factors.add(factorization.size());\n\
    \        factors.add(factorization.size());\n        factors.add(factorization.size());\n\
    \        factors.add(factorization.size());\n        factors.add(factorization.size());\n\
    \        factors.add(factorization.size());\n        factors.add(factorization.size());\n\
    \        factors.add(factorization.size());\n        factors.add(factorization.size());\n\
    \        factors.add(factor", "        ArrayList<Integer> factors = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization = new ArrayList<>();\n        ArrayList<Integer>\
    \ primes = new ArrayList<>();\n        ArrayList<Integer> primeFactorization =\
    \ new ArrayList<>();\n        ArrayList<Integer> primeFactors = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorsCount = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorsCount2 = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount3\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount4 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorsCount5 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorsCount6 = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount7\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount8 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorsCount9 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorsCount10 = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount11\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount12 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorsCount13 = new ArrayList<>();\n       \
    \ ArrayList<Integer> primeFactorsCount14 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorsCount15 = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount16\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount17 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorsCount18 = new ArrayList<>();\n       \
    \ ArrayList<Integer> primeFactorsCount19 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorsCount20 = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount21\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount22 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorsCount23 = new ArrayList<>();\n       \
    \ ArrayList<Integer> primeFactorsCount24 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorsCount25 = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount26\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount27 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorsCount28 = new ArrayList<>();\n       \
    \ ArrayList<Integer> primeFactorsCount29 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorsCount30 = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount31\
    \ = new ArrayList<>();\n        ArrayList<Integer> primeFactorsCount32 = new ArrayList<>();\n\
    \        ArrayList<Integer> primeFactorsCount33 = new ArrayList<>();\n       \
    \ ArrayList<Integer> primeFactorsCount34 = new ArrayList<>();\n        ArrayList<Integer>\
    \ primeFactorsCount35 = new ArrayList<>();\n        ArrayList<Integer> primeFactors",
  "        ArrayList<Integer> factors = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization = new ArrayList<>();\n        factorization.add(1);\n        factors.add(1);\n\
    \        int i = 2;\n        while (factorization.size() < n) {\n            while\
    \ (n % i == 0) {\n                factorization.add(i);\n                factors.add(i);\n\
    \                n /= i;\n            }\n            i++;\n        }\n       \
    \ return factors;", "        ArrayList<Integer> factors = new ArrayList<Integer>();\n\
    \        factorize(n, factors);\n        return factors;", "        ArrayList<Integer>\
    \ factors = new ArrayList<>();\n        ArrayList<Integer> factorization = new\
    \ ArrayList<>();\n        ArrayList<Integer> factorization2 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization3 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization4 = new ArrayList<>();\n        ArrayList<Integer> factorization5\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization6 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization7 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization8 = new ArrayList<>();\n        ArrayList<Integer> factorization9\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization10 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization11 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization12 = new ArrayList<>();\n        ArrayList<Integer> factorization13\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization14 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization15 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization16 = new ArrayList<>();\n        ArrayList<Integer> factorization17\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization18 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization19 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization20 = new ArrayList<>();\n        ArrayList<Integer> factorization21\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization22 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization23 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization24 = new ArrayList<>();\n        ArrayList<Integer> factorization25\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization26 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization27 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization28 = new ArrayList<>();\n        ArrayList<Integer> factorization29\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization30 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization31 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization32 = new ArrayList<>();\n        ArrayList<Integer> factorization33\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization34 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization35 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization36 = new ArrayList<>();\n        ArrayList<Integer> factorization37\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization38 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization39 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization40 = new ArrayList<>();\n        ArrayList<Integer> factorization41\
    \ = new ArrayList<>();\n        ArrayList<Integer> factorization42 = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization43 = new ArrayList<>();\n        ArrayList<Integer>\
    \ factorization44 = new ArrayList<>();\n        ArrayList<Integer> factorization45\
    \ = new ArrayList<>();\n        ArrayList<Integer> ", "        ArrayList<Integer>\
    \ factors = new ArrayList<Integer>();\n        ArrayList<Integer> factorization\
    \ = new ArrayList<Integer>();\n        factorization = factorize(n);\n       \
    \ factors.add(factorization.get(0));\n        for (int i = 1; i < factorization.size();\
    \ i++) {\n            if (factorization.get(i) == factorization.get(i-1)) {\n\
    \                factors.add(factorization.get(i));\n            }\n        }\n\
    \        return factors;", "        ArrayList<Integer> factors = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization = new ArrayList<>();\n        factorization.add(n);\n\
    \        factors.add(n);\n        boolean isPrime = true;\n        int i = 2;\n\
    \        while (i < factorization.size()) {\n            while (factorization.get(i)\
    \ % i == 0) {\n                factors.add(i);\n                factorization.remove(i);\n\
    \                isPrime = false;\n            }\n            i++;\n        }\n\
    \        if (isPrime) {\n            factors.add(n);\n        }\n        return\
    \ factors;", "        ArrayList<Integer> factors = new ArrayList<>();\n      \
    \  ArrayList<Integer> factorization = new ArrayList<>();\n        int i = 2;\n\
    \        while (i <= n / i) {\n            while (n % i == 0) {\n            \
    \    factors.add(i);\n                factorization.add(i);\n                n\
    \ /= i;\n            }\n            i++;\n        }\n        if (n != 1) {\n \
    \           factors.add(n);\n            factorization.add(n);\n        }\n  \
    \      return factorization;", "        ArrayList<Integer> factors = new ArrayList<>();\n\
    \        ArrayList<Integer> factorization = new ArrayList<>();\n        factorization\
    \ = getFactorization(n);\n        factors.add(factorization.get(0));\n       \
    \ for (int i = 1; i < factorization.size(); i++) {\n            int count = 0;\n\
    \            for (int j = 0; j < factorization.size(); j++) {\n              \
    \  if (factorization.get(j) == factorization.get(i)) {\n                    count++;\n\
    \                }\n            }\n            factors.add(factorization.get(i));\n\
    \            factors.add(count);\n        }\n        return factors;"]
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "\n    }\n"

language: java
name: HumanEval_62_derivative
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for(int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpbse3t6fj.java:16)\n\tat Problem.main(tmpbse3t6fj.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(xs.get(i) * derivative.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmp1jbh4xt4.java:16)\n\tat Problem.main(tmp1jbh4xt4.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(xs.get(i) * derivative.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmp1jbh4xt4.java:16)\n\tat Problem.main(tmp1jbh4xt4.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        for(int\
    \ i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i) * i);\n \
    \       }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjwdqhst9.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        for(int\
    \ i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i) * i);\n \
    \       }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjwdqhst9.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbex9g89.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(xs.get(i) * derivative.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmp1jbh4xt4.java:16)\n\tat Problem.main(tmp1jbh4xt4.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbex9g89.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbex9g89.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        derivative.add(xs.get(0));\n\
    \        for (int i = 1; i < xs.size(); i++) {\n            derivative.add(derivative.get(i)\
    \ * xs.get(i));\n        }\n        return derivative;\n}\n    public static void\
    \ main(String[] args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpe2sl6f6s.java:16)\n\tat Problem.main(tmpe2sl6f6s.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        derivative.add(xs.get(0));\n\
    \        for (int i = 1; i < xs.size(); i++) {\n            derivative.add(derivative.get(i)\
    \ * xs.get(i));\n        }\n        return derivative;\n}\n    public static void\
    \ main(String[] args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpe2sl6f6s.java:16)\n\tat Problem.main(tmpe2sl6f6s.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbex9g89.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        derivative.add(xs.get(0));\n\
    \        for (int i = 1; i < xs.size(); i++) {\n            derivative.add(derivative.get(i)\
    \ * xs.get(i));\n        }\n        return derivative;\n}\n    public static void\
    \ main(String[] args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpe2sl6f6s.java:16)\n\tat Problem.main(tmpe2sl6f6s.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbex9g89.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        derivative.add(xs.get(0));\n\
    \        for (int i = 1; i < xs.size(); i++) {\n            derivative.add(derivative.get(i)\
    \ * xs.get(i));\n        }\n        return derivative;\n}\n    public static void\
    \ main(String[] args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpe2sl6f6s.java:16)\n\tat Problem.main(tmpe2sl6f6s.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbex9g89.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbex9g89.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        derivative.add(xs.get(0));\n\
    \        for (int i = 1; i < xs.size(); i++) {\n            derivative.add(derivative.get(i)\
    \ * xs.get(i));\n        }\n        return derivative;\n}\n    public static void\
    \ main(String[] args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpe2sl6f6s.java:16)\n\tat Problem.main(tmpe2sl6f6s.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        derivative.add(xs.get(0));\n\
    \        for (int i = 1; i < xs.size(); i++) {\n            derivative.add(derivative.get(i)\
    \ * xs.get(i));\n        }\n        return derivative;\n}\n    public static void\
    \ main(String[] args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpe2sl6f6s.java:16)\n\tat Problem.main(tmpe2sl6f6s.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(xs.get(i) * derivative.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmp1jbh4xt4.java:16)\n\tat Problem.main(tmp1jbh4xt4.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(xs.get(i) * derivative.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmp1jbh4xt4.java:16)\n\tat Problem.main(tmp1jbh4xt4.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        for(int\
    \ i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i) * i);\n \
    \       }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjwdqhst9.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        for(int\
    \ i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i) * i);\n \
    \       }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjwdqhst9.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbex9g89.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        for(int\
    \ i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i) * i);\n \
    \       }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjwdqhst9.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbex9g89.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbex9g89.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 1; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbex9g89.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        for(int\
    \ i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i) * i);\n \
    \       }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjwdqhst9.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbex9g89.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbex9g89.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbex9g89.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 1; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(xs.get(i) * derivative.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmp1jbh4xt4.java:16)\n\tat Problem.main(tmp1jbh4xt4.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        derivative.add(xs.get(0));\n\
    \        for (int i = 1; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * derivative.get(i - 1));\n        }\n        return derivative;\n}\n    public\
    \ static void main(String[] args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb2ayelzt.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 1; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011156
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 1; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for(int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpbse3t6fj.java:16)\n\tat Problem.main(tmpbse3t6fj.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(xs.get(i) * derivative.get(i - 1));\n        }\n\
    \        return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo2_f14pm.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbex9g89.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        derivative.add(xs.get(0));\n\
    \        for (int i = 1; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * derivative.get(i - 1));\n        }\n        return derivative;\n}\n    public\
    \ static void main(String[] args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb2ayelzt.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        for(int\
    \ i = 1; i < xs.size(); i++) {\n            derivative.add(xs.get(i) - xs.get(i-1));\n\
    \        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr2euql2s.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        derivative.add(xs.get(0));\n\
    \        for (int i = 1; i < xs.size(); i++) {\n            derivative.add(derivative.get(i)\
    \ * xs.get(i));\n        }\n        return derivative;\n}\n    public static void\
    \ main(String[] args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpe2sl6f6s.java:16)\n\tat Problem.main(tmpe2sl6f6s.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 1; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbex9g89.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        for(int\
    \ i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i) * i);\n \
    \       }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjwdqhst9.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(xs.get(i) * derivative.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmp1jbh4xt4.java:16)\n\tat Problem.main(tmp1jbh4xt4.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 1; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ - xs.get(i-1));\n        }\n        return derivative;\n}\n    public static\
    \ void main(String[] args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuqdpoopx.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        derivative.add(xs.get(0));\n\
    \        for (int i = 1; i < xs.size(); i++) {\n            derivative.add(derivative.get(i)\
    \ * xs.get(i));\n        }\n        return derivative;\n}\n    public static void\
    \ main(String[] args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpe2sl6f6s.java:16)\n\tat Problem.main(tmpe2sl6f6s.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 1; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        derivative.add(xs.get(0));\n\
    \        for (int i = 1; i < xs.size(); i++) {\n            derivative.add(derivative.get(i)\
    \ * xs.get(i));\n        }\n        return derivative;\n}\n    public static void\
    \ main(String[] args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpe2sl6f6s.java:16)\n\tat Problem.main(tmpe2sl6f6s.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbex9g89.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        for(int\
    \ i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i) * i);\n \
    \       }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjwdqhst9.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        for(int\
    \ i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i) * i);\n \
    \       }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjwdqhst9.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbex9g89.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for(int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpbse3t6fj.java:16)\n\tat Problem.main(tmpbse3t6fj.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbex9g89.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbex9g89.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbex9g89.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        for(int\
    \ i = 1; i < xs.size(); i++) {\n            derivative.add(xs.get(i) * i);\n \
    \       }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbex9g89.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        for(int\
    \ i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i) * i);\n \
    \       }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjwdqhst9.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        for(int\
    \ i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i) * i);\n \
    \       }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjwdqhst9.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        derivative.add(xs.get(0));\n\
    \        for (int i = 1; i < xs.size(); i++) {\n            derivative.add(derivative.get(i)\
    \ * xs.get(i));\n        }\n        return derivative;\n}\n    public static void\
    \ main(String[] args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpe2sl6f6s.java:16)\n\tat Problem.main(tmpe2sl6f6s.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbex9g89.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbex9g89.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbex9g89.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        for(int\
    \ i = 1; i < xs.size(); i++) {\n            derivative.add(xs.get(i) * i);\n \
    \       }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbex9g89.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbex9g89.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        for(int\
    \ i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i) * i);\n \
    \       }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjwdqhst9.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        for(int\
    \ i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i) * i);\n \
    \       }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjwdqhst9.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        derivative.add(xs.get(0));\n\
    \        for (int i = 1; i < xs.size(); i++) {\n            derivative.add(derivative.get(i)\
    \ * xs.get(i));\n        }\n        return derivative;\n}\n    public static void\
    \ main(String[] args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpe2sl6f6s.java:16)\n\tat Problem.main(tmpe2sl6f6s.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 1; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for(int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpbse3t6fj.java:16)\n\tat Problem.main(tmpbse3t6fj.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        derivative.add(xs.get(0));\n\
    \        for (int i = 1; i < xs.size(); i++) {\n            derivative.add(derivative.get(i)\
    \ * xs.get(i));\n        }\n        return derivative;\n}\n    public static void\
    \ main(String[] args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpe2sl6f6s.java:16)\n\tat Problem.main(tmpe2sl6f6s.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbex9g89.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        derivative.add(xs.get(0));\n\
    \        for (int i = 1; i < xs.size(); i++) {\n            derivative.add(derivative.get(i)\
    \ * xs.get(i));\n        }\n        return derivative;\n}\n    public static void\
    \ main(String[] args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpe2sl6f6s.java:16)\n\tat Problem.main(tmpe2sl6f6s.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        derivative.add(xs.get(0));\n\
    \        for (int i = 1; i < xs.size(); i++) {\n            derivative.add(derivative.get(i)\
    \ * xs.get(i));\n        }\n        return derivative;\n}\n    public static void\
    \ main(String[] args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpe2sl6f6s.java:16)\n\tat Problem.main(tmpe2sl6f6s.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        derivative.add(xs.get(0));\n\
    \        for (int i = 1; i < xs.size(); i++) {\n            derivative.add(derivative.get(i)\
    \ * xs.get(i));\n        }\n        return derivative;\n}\n    public static void\
    \ main(String[] args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpe2sl6f6s.java:16)\n\tat Problem.main(tmpe2sl6f6s.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbex9g89.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbex9g89.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        derivative.add(xs.get(0));\n\
    \        for (int i = 1; i < xs.size(); i++) {\n            derivative.add(derivative.get(i)\
    \ * xs.get(i));\n        }\n        return derivative;\n}\n    public static void\
    \ main(String[] args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpe2sl6f6s.java:16)\n\tat Problem.main(tmpe2sl6f6s.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        for(int\
    \ i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i) * i);\n \
    \       }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjwdqhst9.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbex9g89.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        derivative.add(xs.get(0));\n\
    \        for (int i = 1; i < xs.size(); i++) {\n            derivative.add(derivative.get(i)\
    \ * xs.get(i));\n        }\n        return derivative;\n}\n    public static void\
    \ main(String[] args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpe2sl6f6s.java:16)\n\tat Problem.main(tmpe2sl6f6s.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbex9g89.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 1; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 1; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        for(int\
    \ i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i) * i);\n \
    \       }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjwdqhst9.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        for(int\
    \ i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i) * i);\n \
    \       }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjwdqhst9.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        for(int\
    \ i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i) * i);\n \
    \       }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjwdqhst9.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        derivative.add(xs.get(0));\n\
    \        for (int i = 1; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * derivative.get(i));\n        }\n        return derivative;\n}\n    public\
    \ static void main(String[] args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmp8hferj9p.java:16)\n\tat Problem.main(tmp8hferj9p.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        for(int\
    \ i = 1; i < xs.size(); i++) {\n            derivative.add(xs.get(i) * i);\n \
    \       }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        for(int\
    \ i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i) * i);\n \
    \       }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjwdqhst9.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbex9g89.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for(int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpbse3t6fj.java:16)\n\tat Problem.main(tmpbse3t6fj.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbex9g89.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        for(int\
    \ i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i) * i);\n \
    \       }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjwdqhst9.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        derivative.add(xs.get(0));\n\
    \        for (int i = 1; i < xs.size(); i++) {\n            derivative.add(derivative.get(i)\
    \ * xs.get(i));\n        }\n        return derivative;\n}\n    public static void\
    \ main(String[] args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpe2sl6f6s.java:16)\n\tat Problem.main(tmpe2sl6f6s.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        for(int\
    \ i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i) * i);\n \
    \       }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjwdqhst9.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbex9g89.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbex9g89.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbex9g89.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbex9g89.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 1; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(xs.get(i) * derivative.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmp1jbh4xt4.java:16)\n\tat Problem.main(tmp1jbh4xt4.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for(int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpbse3t6fj.java:16)\n\tat Problem.main(tmpbse3t6fj.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        derivative.add(xs.get(0));\n\
    \        for (int i = 1; i < xs.size(); i++) {\n            derivative.add(derivative.get(i)\
    \ * xs.get(i));\n        }\n        return derivative;\n}\n    public static void\
    \ main(String[] args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpe2sl6f6s.java:16)\n\tat Problem.main(tmpe2sl6f6s.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbex9g89.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        derivative.add(xs.get(0));\n\
    \        for (int i = 1; i < xs.size(); i++) {\n            derivative.add(derivative.get(i)\
    \ * xs.get(i));\n        }\n        return derivative;\n}\n    public static void\
    \ main(String[] args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpe2sl6f6s.java:16)\n\tat Problem.main(tmpe2sl6f6s.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbex9g89.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 1; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbex9g89.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        derivative.add(xs.get(0));\n\
    \        for (int i = 1; i < xs.size(); i++) {\n            derivative.add(derivative.get(i)\
    \ * xs.get(i));\n        }\n        return derivative;\n}\n    public static void\
    \ main(String[] args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpe2sl6f6s.java:16)\n\tat Problem.main(tmpe2sl6f6s.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        derivative.add(xs.get(0));\n\
    \        for (int i = 1; i < xs.size(); i++) {\n            derivative.add(derivative.get(i)\
    \ * xs.get(i));\n        }\n        return derivative;\n}\n    public static void\
    \ main(String[] args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpe2sl6f6s.java:16)\n\tat Problem.main(tmpe2sl6f6s.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbex9g89.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        for(int\
    \ i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i) * i);\n \
    \       }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjwdqhst9.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<>();\n        for(int\
    \ i = 1; i < xs.size(); i++) {\n            derivative.add(xs.get(i) * i);\n \
    \       }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbex9g89.java:20)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       for(int i = 1; i < xs.size(); i++) {\n            derivative.add(xs.get(i)\
    \ * i);\n        }\n        return derivative;\n}\n    public static void main(String[]\
    \ args) {\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    public static ArrayList<Integer> derivative(ArrayList<Integer>\
    \ xs) {\n        ArrayList<Integer> derivative = new ArrayList<Integer>();\n \
    \       derivative.add(xs.get(0));\n        for (int i = 1; i < xs.size(); i++)\
    \ {\n            derivative.add(derivative.get(i) * xs.get(i));\n        }\n \
    \       return derivative;\n}\n    public static void main(String[] args) {\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)12, (int)20)))));\n    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)6)))));\n\
    \    assert(derivative((new ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2)))));\n    assert(derivative((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)2, (int)1, (int)0, (int)4)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)0, (int)16)))));\n   \
    \ assert(derivative((new ArrayList<Integer>(Arrays.asList((int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.derivative(tmpfm208jo7.java:16)\n\tat Problem.main(tmpfm208jo7.java:21)\n"
  stdout: ''
  timestamp: 1660011156

language: java
name: HumanEval_131_digits
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            product *= n % 10;\n            n /= 10;\n        }\n       \
    \ return product;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo_crbdxb.java:26)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) return 0;\n        int product\
    \ = 1;\n        while (n > 0) {\n            int digit = n % 10;\n           \
    \ product *= digit;\n            n /= 10;\n        }\n        return product;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwndu3ur_.java:28)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            product *= digit;\n        \
    \    n /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8wotsbe.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n <= 0) return 0;\n        int product\
    \ = 1;\n        while (n > 0) {\n            int digit = n % 10;\n           \
    \ product *= digit;\n            n /= 10;\n        }\n        return product;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb0kcxoqn.java:28)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n>0) {\n\
    \            int digit = n % 10;\n            product *= digit;\n            n\
    \ /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpittuaw3r.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            product *= digit;\n        \
    \    n /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8wotsbe.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n>0) {\n\
    \            int digit = n % 10;\n            product *= digit;\n            n\
    \ /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpittuaw3r.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0)\n            return 0;\n   \
    \     int product = 1;\n        while (n > 0) {\n            int digit = n % 10;\n\
    \            product *= digit;\n            n /= 10;\n        }\n        return\
    \ product;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp00tymipc.java:29)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) return 0;\n        int product\
    \ = 1;\n        while (n > 0) {\n            int digit = n % 10;\n           \
    \ product *= digit;\n            n /= 10;\n        }\n        return product;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwndu3ur_.java:28)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) return 0;\n        int product\
    \ = 1;\n        while (n > 0) {\n            product *= n % 10;\n            n\
    \ /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphfncay0j.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0)\n            return 0;\n   \
    \     int product = 1;\n        while (n > 0) {\n            int digit = n % 10;\n\
    \            if (digit % 2 != 0)\n                product *= digit;\n        \
    \    n /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplfx_i_kd.java:35)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0)\n            return 0;\n   \
    \     int product = 1;\n        while (n > 0) {\n            int digit = n % 10;\n\
    \            product *= digit;\n            n /= 10;\n        }\n        return\
    \ product;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp00tymipc.java:29)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        for (int i = 0;\
    \ i < n; i++) {\n            int digit = n % 10;\n            if (digit % 2 ==\
    \ 1) {\n                product *= digit;\n            }\n            n = n /\
    \ 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_ivr_uyd.java:33)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        int digit;\n \
    \       while (n > 0) {\n            digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n}\n    public static\
    \ void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpspwvi7pl.java:28)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        int digit;\n \
    \       while (n>0) {\n            digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n}\n    public static\
    \ void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdya5ri0b.java:28)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n <= 0) return 0;\n        int product\
    \ = 1;\n        while (n > 0) {\n            int digit = n % 10;\n           \
    \ product *= digit;\n            n /= 10;\n        }\n        return product;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb0kcxoqn.java:28)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) {\n            return 0;\n \
    \       }\n        int product = 1;\n        while (n > 0) {\n            int\
    \ digit = n % 10;\n            product *= digit;\n            n /= 10;\n     \
    \   }\n        return product;\n}\n    public static void main(String[] args)\
    \ {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppepn1z9g.java:30)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int result = 0;\n        while (n > 0) {\n\
    \            result *= n % 10;\n            n /= 10;\n        }\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3oe_n1k1.java:25)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) {\n            return 0;\n \
    \       }\n        int product = 1;\n        while (n > 0) {\n            int\
    \ digit = n % 10;\n            if (digit % 2 != 0) {\n                product\
    \ *= digit;\n            }\n            n /= 10;\n        }\n        return product;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps_i5pfh2.java:37)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 0;\n        while (n > 0)\
    \ {\n            product *= n % 10;\n            n /= 10;\n        }\n       \
    \ return product;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo3agzkbi.java:25)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int result = 0;\n        while (n > 0) {\n\
    \            result *= n % 10;\n            n /= 10;\n        }\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3oe_n1k1.java:25)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) return 0;\n        int product\
    \ = 1;\n        while (n > 0) {\n            int digit = n % 10;\n           \
    \ if (digit % 2 != 0) {\n                product *= digit;\n            }\n  \
    \          n /= 10;\n        }\n        return product;\n}\n    public static\
    \ void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn0enl4lb.java:35)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0)\n            return 0;\n   \
    \     if (n % 2 == 0)\n            return 0;\n        int product = 1;\n     \
    \   for (int i = 3; i <= Math.sqrt(n); i += 2)\n            product *= (n / i);\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6cr2jffg.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) return 0;\n        int product\
    \ = 1;\n        while (n > 0) {\n            product *= n % 10;\n            n\
    \ /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphfncay0j.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) return 0;\n        int res =\
    \ 0;\n        while (n > 0) {\n            int digit = n % 10;\n            if\
    \ (digit % 2 == 1) return 0;\n            res *= digit;\n            n /= 10;\n\
    \        }\n        return res;\n}\n    public static void main(String[] args)\
    \ {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdsr4_4e5.java:28)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) {\n            return 0;\n \
    \       }\n        int result = 0;\n        while (n > 0) {\n            int digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n}\n \
    \   public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6new5ux_.java:31)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) {\n            return 0;\n \
    \       }\n        int product = 1;\n        while (n > 0) {\n            int\
    \ digit = n % 10;\n            product *= digit;\n            n /= 10;\n     \
    \   }\n        return product;\n}\n    public static void main(String[] args)\
    \ {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppepn1z9g.java:30)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n <= 0) return 0;\n        int product\
    \ = 1;\n        for (int i = 1; i <= n; i++) {\n            int digit = n % 10;\n\
    \            if (digit % 2 == 1) {\n                product *= digit;\n      \
    \      }\n            n /= 10;\n        }\n        return product;\n}\n    public\
    \ static void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwick4h0u.java:34)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) return 0;\n        if (n % 2\
    \ == 0) return 0;\n        return n * digits(n / 2);\n}\n    public static void\
    \ main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzlaff2n6.java:22)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n>0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        product *= digit;\n            }\n            n /= 10;\n        }\n \
    \       return product;\n}\n    public static void main(String[] args) {\n   \
    \ assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp404a58ta.java:34)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n>0) {\n\
    \            int digit = n % 10;\n            product *= digit;\n            n\
    \ /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpittuaw3r.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        for (int i = 0;\
    \ i < n; i++) {\n            int digit = n % 10;\n            if (digit % 2 !=\
    \ 0) {\n                product *= digit;\n            }\n            n = n /\
    \ 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp83o8uu28.java:33)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n>0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        product *= digit;\n            }\n            n /= 10;\n        }\n \
    \       return product;\n}\n    public static void main(String[] args) {\n   \
    \ assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp404a58ta.java:34)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n>0) {\n\
    \            int digit = n % 10;\n            product *= digit;\n            n\
    \ /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpittuaw3r.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            product *= digit;\n        \
    \    n /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8wotsbe.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 != 0) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6d5grh4_.java:34)\n"
  stdout: ''
  timestamp: 1660011507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0)\n            return 0;\n   \
    \     int product = 1;\n        while (n > 0) {\n            int digit = n % 10;\n\
    \            product *= digit;\n            n /= 10;\n        }\n        return\
    \ product;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp00tymipc.java:29)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            product *= digit;\n        \
    \    n /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8wotsbe.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) return 0;\n        int product\
    \ = 1;\n        while (n > 0) {\n            int digit = n % 10;\n           \
    \ product *= digit;\n            n /= 10;\n        }\n        return product;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwndu3ur_.java:28)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n>0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        product *= digit;\n            }\n            n /= 10;\n        }\n \
    \       return product;\n}\n    public static void main(String[] args) {\n   \
    \ assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp404a58ta.java:34)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 0;\n        while(n > 0) {\n\
    \            int digit = n % 10;\n            product *= digit;\n            n\
    \ /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1vs80f5h.java:26)\n"
  stdout: ''
  timestamp: 1660011507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0)\n            return 0;\n   \
    \     int product = 1;\n        while (n > 0) {\n            int digit = n % 10;\n\
    \            product *= digit;\n            n /= 10;\n        }\n        return\
    \ product;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp00tymipc.java:29)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) return 0;\n        int product\
    \ = 1;\n        while (n > 0) {\n            int digit = n % 10;\n           \
    \ if (digit % 2 == 1) {\n                product *= digit;\n            }\n  \
    \          n /= 10;\n        }\n        return product;\n}\n    public static\
    \ void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjexfh24w.java:35)\n"
  stdout: ''
  timestamp: 1660011507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) {\n            return 0;\n \
    \       }\n        int product = 1;\n        while (n > 0) {\n            int\
    \ digit = n % 10;\n            if (digit % 2 != 0) {\n                product\
    \ *= digit;\n            }\n            n /= 10;\n        }\n        return product;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps_i5pfh2.java:37)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int sum = 0;\n        while (n > 0) {\n\
    \            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpudio8q8t.java:26)\n"
  stdout: ''
  timestamp: 1660011507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int sum = 0;\n        while (n > 0) {\n\
    \            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpudio8q8t.java:26)\n"
  stdout: ''
  timestamp: 1660011507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        for(int i = 0;\
    \ i < n; i++) {\n            product *= n % 10;\n            n /= 10;\n      \
    \  }\n        return product;\n}\n    public static void main(String[] args) {\n\
    \    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxejvj8b2.java:26)\n"
  stdout: ''
  timestamp: 1660011507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n>0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        product *= digit;\n            }\n            n /= 10;\n        }\n \
    \       return product;\n}\n    public static void main(String[] args) {\n   \
    \ assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp404a58ta.java:34)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n>0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        product *= digit;\n            }\n            n /= 10;\n        }\n \
    \       return product;\n}\n    public static void main(String[] args) {\n   \
    \ assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp404a58ta.java:34)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0)\n            return 0;\n   \
    \     int product = 1;\n        while (n > 0) {\n            product *= n % 10;\n\
    \            n /= 10;\n        }\n        return product;\n}\n    public static\
    \ void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq5m1krzk.java:28)\n"
  stdout: ''
  timestamp: 1660011507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) return 0;\n        int sum =\
    \ 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n\
    \        }\n        return sum;\n}\n    public static void main(String[] args)\
    \ {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_iv9kerh.java:27)\n"
  stdout: ''
  timestamp: 1660011507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        int digit = 0;\n\
    \        while (n > 0) {\n            digit = n % 10;\n            product *=\
    \ digit;\n            n /= 10;\n        }\n        return product;\n}\n    public\
    \ static void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4_vbegg.java:28)\n"
  stdout: ''
  timestamp: 1660011507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int sum = 0;\n        while (n > 0) {\n\
    \            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpudio8q8t.java:26)\n"
  stdout: ''
  timestamp: 1660011507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            product *= digit;\n        \
    \    n /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8wotsbe.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            product *= digit;\n        \
    \    n /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8wotsbe.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            product *= n % 10;\n            n /= 10;\n        }\n       \
    \ return product;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo_crbdxb.java:26)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            product *= digit;\n        \
    \    n /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8wotsbe.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) {\n            return 0;\n \
    \       }\n        int product = 1;\n        while (n > 0) {\n            int\
    \ digit = n % 10;\n            product *= digit;\n            n /= 10;\n     \
    \   }\n        return product;\n}\n    public static void main(String[] args)\
    \ {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppepn1z9g.java:30)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) {\n            return 0;\n \
    \       }\n        int product = 1;\n        while (n > 0) {\n            int\
    \ digit = n % 10;\n            if (digit % 2 != 0) {\n                product\
    \ *= digit;\n            }\n            n = n / 10;\n        }\n        return\
    \ product;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl1r88is4.java:37)\n"
  stdout: ''
  timestamp: 1660011507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n>0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 != 0) {\n        \
    \        product *= digit;\n            }\n            n /= 10;\n        }\n \
    \       return product;\n}\n    public static void main(String[] args) {\n   \
    \ assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4_rs2pgc.java:34)\n"
  stdout: ''
  timestamp: 1660011507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int sum = 0;\n        while (n > 0) {\n\
    \            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpudio8q8t.java:26)\n"
  stdout: ''
  timestamp: 1660011507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        int digit;\n \
    \       while (n>0) {\n            digit = n % 10;\n            product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n}\n    public static\
    \ void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdya5ri0b.java:28)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) return 0;\n        int result\
    \ = 0;\n        while (n > 0) {\n            int digit = n % 10;\n           \
    \ result *= digit;\n            n /= 10;\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppaznt69g.java:27)\n"
  stdout: ''
  timestamp: 1660011507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) return 0;\n        int product\
    \ = 1;\n        while (n > 0) {\n            int digit = n % 10;\n           \
    \ product *= digit;\n            n /= 10;\n        }\n        return product;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwndu3ur_.java:28)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while(n > 0){\n\
    \            product *= n % 10;\n            n /= 10;\n        }\n        return\
    \ product;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_z_tkrhr.java:26)\n"
  stdout: ''
  timestamp: 1660011507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            product *= digit;\n        \
    \    n /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8wotsbe.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) {\n            return 0;\n \
    \       }\n        int product = 1;\n        while (n > 0) {\n            int\
    \ digit = n % 10;\n            if (digit % 2 != 0) {\n                product\
    \ *= digit;\n            }\n            n /= 10;\n        }\n        return product;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps_i5pfh2.java:37)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            product *= n % 10;\n            n /= 10;\n        }\n       \
    \ return product;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo_crbdxb.java:26)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) {\n            return 0;\n \
    \       }\n        int product = 1;\n        while (n > 0) {\n            int\
    \ digit = n % 10;\n            product *= digit;\n            n /= 10;\n     \
    \   }\n        return product;\n}\n    public static void main(String[] args)\
    \ {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppepn1z9g.java:30)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            product *= digit;\n        \
    \    n /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8wotsbe.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            product *= digit;\n        \
    \    n /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8wotsbe.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            product *= n % 10;\n            n /= 10;\n        }\n       \
    \ return product;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo_crbdxb.java:26)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            product *= n % 10;\n            n /= 10;\n        }\n       \
    \ return product;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo_crbdxb.java:26)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while(n > 0){\n\
    \            int digit = n % 10;\n            product = product * digit;\n   \
    \         n = n / 10;\n        }\n        return product;\n}\n    public static\
    \ void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpajno7ew3.java:27)\n"
  stdout: ''
  timestamp: 1660011507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            product *= digit;\n        \
    \    n /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8wotsbe.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        for (int i = 0;\
    \ i < n; i++) {\n            int digit = n % 10;\n            if (digit % 2 !=\
    \ 0) {\n                product *= digit;\n            }\n            n = n /\
    \ 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp83o8uu28.java:33)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) return 0;\n        int product\
    \ = 1;\n        while (n > 0) {\n            int digit = n % 10;\n           \
    \ product *= digit;\n            n /= 10;\n        }\n        return product;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwndu3ur_.java:28)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0)\n            return 0;\n   \
    \     int product = 1;\n        while (n > 0) {\n            int digit = n % 10;\n\
    \            product *= digit;\n            n /= 10;\n        }\n        return\
    \ product;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp00tymipc.java:29)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        for(int i = 1;\
    \ i <= n; i++) {\n            int digit = n % 10;\n            if(digit % 2 !=\
    \ 0) {\n                product *= digit;\n            }\n            n /= 10;\n\
    \        }\n        return product;\n}\n    public static void main(String[] args)\
    \ {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjigvarq5.java:33)\n"
  stdout: ''
  timestamp: 1660011507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n <= 0) return 0;\n        int product\
    \ = 1;\n        while (n > 1) {\n            int digit = n % 10;\n           \
    \ product *= digit;\n            n /= 10;\n        }\n        return product;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvyn55jxw.java:28)\n"
  stdout: ''
  timestamp: 1660011507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            product *= digit;\n        \
    \    n /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8wotsbe.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n>0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        product *= digit;\n            }\n            n = n / 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy7bkjcnn.java:34)\n"
  stdout: ''
  timestamp: 1660011507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int sum = 0;\n        while (n > 0) {\n\
    \            sum += n % 10;\n            n /= 10;\n        }\n        if (sum\
    \ % 2 != 0) {\n            return 0;\n        }\n        return sum;\n}\n    public\
    \ static void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwlh02t00.java:28)\n"
  stdout: ''
  timestamp: 1660011507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) {\n            return 0;\n \
    \       }\n        int product = 1;\n        while (n > 0) {\n            int\
    \ digit = n % 10;\n            product *= digit;\n            n /= 10;\n     \
    \   }\n        return product;\n}\n    public static void main(String[] args)\
    \ {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppepn1z9g.java:30)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            product *= n % 10;\n            n /= 10;\n        }\n       \
    \ return product % 2 == 0 ? 0 : product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptqm2qf5i.java:26)\n"
  stdout: ''
  timestamp: 1660011507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n>0) {\n\
    \            int digit = n % 10;\n            product *= digit;\n            n\
    \ /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpittuaw3r.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) {\n            return 0;\n \
    \       }\n        int product = 1;\n        while (n > 0) {\n            int\
    \ digit = n % 10;\n            product *= digit;\n            n /= 10;\n     \
    \   }\n        return product;\n}\n    public static void main(String[] args)\
    \ {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppepn1z9g.java:30)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n>0) {\n\
    \            int digit = n % 10;\n            product *= digit;\n            n\
    \ /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpittuaw3r.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        int digit = 0;\n\
    \        while (n > 0) {\n            digit = n % 10;\n            product *=\
    \ digit;\n            n /= 10;\n        }\n        return product;\n}\n    public\
    \ static void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4_vbegg.java:28)\n"
  stdout: ''
  timestamp: 1660011507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            product *= digit;\n        \
    \    n /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8wotsbe.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 0;\n        while (n>0) {\n\
    \            int digit = n % 10;\n            product *= digit;\n            n\
    \ /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphp219434.java:26)\n"
  stdout: ''
  timestamp: 1660011507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) return 0;\n        int product\
    \ = 1;\n        while (n > 0) {\n            int digit = n % 10;\n           \
    \ product *= digit;\n            n /= 10;\n        }\n        return product;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwndu3ur_.java:28)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            product *= n % 10;\n            n /= 10;\n        }\n       \
    \ return product;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo_crbdxb.java:26)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            product *= n % 10;\n            n /= 10;\n        }\n       \
    \ return product;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo_crbdxb.java:26)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            product *= digit;\n        \
    \    n /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8wotsbe.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n>0) {\n\
    \            int digit = n % 10;\n            product *= digit;\n            n\
    \ /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpittuaw3r.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) {\n            return 0;\n \
    \       }\n        int product = 1;\n        while (n > 0) {\n            int\
    \ digit = n % 10;\n            product *= digit;\n            n /= 10;\n     \
    \   }\n        return product;\n}\n    public static void main(String[] args)\
    \ {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppepn1z9g.java:30)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int sum = 0;\n        while (n > 0) {\n\
    \            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpudio8q8t.java:26)\n"
  stdout: ''
  timestamp: 1660011507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            product *= digit;\n        \
    \    n /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8wotsbe.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int sum = 0;\n        while (n > 0) {\n\
    \            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpudio8q8t.java:26)\n"
  stdout: ''
  timestamp: 1660011507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) return 0;\n        int product\
    \ = 1;\n        while (n > 0) {\n            int digit = n % 10;\n           \
    \ if (digit % 2 != 0) {\n                product *= digit;\n            }\n  \
    \          n /= 10;\n        }\n        return product;\n}\n    public static\
    \ void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn0enl4lb.java:35)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            product *= digit;\n        \
    \    n /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8wotsbe.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n <= 0) return 0;\n        int product\
    \ = 1;\n        while (n > 0) {\n            int digit = n % 10;\n           \
    \ product *= digit;\n            n /= 10;\n        }\n        return product;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb0kcxoqn.java:28)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) return 0;\n        int product\
    \ = 1;\n        while (n > 0) {\n            product *= n % 10;\n            n\
    \ /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphfncay0j.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) {\n            return 0;\n \
    \       }\n        int product = 1;\n        while (n > 0) {\n            int\
    \ digit = n % 10;\n            product *= digit;\n            n /= 10;\n     \
    \   }\n        return product;\n}\n    public static void main(String[] args)\
    \ {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppepn1z9g.java:30)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            product *= n % 10;\n            n /= 10;\n        }\n       \
    \ return product;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo_crbdxb.java:26)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n>0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 != 0) {\n        \
    \        product *= digit;\n            }\n            n /= 10;\n        }\n \
    \       return product;\n}\n    public static void main(String[] args) {\n   \
    \ assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4_rs2pgc.java:34)\n"
  stdout: ''
  timestamp: 1660011507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n>0) {\n\
    \            int digit = n % 10;\n            product *= digit;\n            n\
    \ /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpittuaw3r.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 0;\n        int digit = 0;\n\
    \        while (n > 0) {\n            digit = n % 10;\n            product *=\
    \ digit;\n            n /= 10;\n        }\n        return product;\n}\n    public\
    \ static void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbe40east.java:27)\n"
  stdout: ''
  timestamp: 1660011507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) {\n            return 0;\n \
    \       }\n        int product = 1;\n        while (n > 0) {\n            product\
    \ *= n % 10;\n            n /= 10;\n        }\n        return product;\n}\n  \
    \  public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu86um8gr.java:29)\n"
  stdout: ''
  timestamp: 1660011507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) {\n            return 0;\n \
    \       }\n        int sum = 0;\n        while (n > 0) {\n            sum += n\
    \ % 10;\n            n /= 10;\n        }\n        return sum;\n}\n    public static\
    \ void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw3j3hixo.java:29)\n"
  stdout: ''
  timestamp: 1660011507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n>0) {\n\
    \            int digit = n % 10;\n            product *= digit;\n            n\
    \ /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpittuaw3r.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) {\n            return 0;\n \
    \       }\n        int product = 1;\n        while (n > 0) {\n            product\
    \ *= n % 10;\n            n /= 10;\n        }\n        return product;\n}\n  \
    \  public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu86um8gr.java:29)\n"
  stdout: ''
  timestamp: 1660011507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 0;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            product *= digit;\n        \
    \    n /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptpt39jmm.java:26)\n"
  stdout: ''
  timestamp: 1660011507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 0;\n        if (n < 0) {\n\
    \            return 0;\n        }\n        while (n > 0) {\n            int digit\
    \ = n % 10;\n            if (digit % 2 != 0) {\n                product *= digit;\n\
    \            }\n            n = n / 10;\n        }\n        return product;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp034a86aj.java:31)\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) {\n            return 0;\n \
    \       }\n        int product = 1;\n        while (n > 0) {\n            product\
    \ *= n % 10;\n            n /= 10;\n        }\n        return product;\n}\n  \
    \  public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu86um8gr.java:29)\n"
  stdout: ''
  timestamp: 1660011507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0)\n            return 0;\n   \
    \     int product = 1;\n        while (n > 0) {\n            int digit = n % 10;\n\
    \            product *= digit;\n            n /= 10;\n        }\n        return\
    \ product;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp00tymipc.java:29)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n>0) {\n\
    \            int digit = n % 10;\n            product *= digit;\n            n\
    \ /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpittuaw3r.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            product *= digit;\n        \
    \    n /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8wotsbe.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 0;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppsiva12r.java:28)\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) return 0;\n        int product\
    \ = 1;\n        while (n > 0) {\n            int digit = n % 10;\n           \
    \ product *= digit;\n            n /= 10;\n        }\n        return product;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwndu3ur_.java:28)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n>0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        product *= digit;\n            }\n            n = n / 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy7bkjcnn.java:34)\n"
  stdout: ''
  timestamp: 1660011507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n>0) {\n\
    \            int digit = n % 10;\n            product *= digit;\n            n\
    \ /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpittuaw3r.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n <= 0) return 0;\n        int product\
    \ = 1;\n        while (n > 0) {\n            product *= n % 10;\n            n\
    \ /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpreub7pe0.java:27)\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) return 0;\n        int product\
    \ = 1;\n        while (n > 0) {\n            product *= n % 10;\n            n\
    \ /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphfncay0j.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) return 0;\n        int product\
    \ = 1;\n        while (n > 1) {\n            product *= n % 10;\n            n\
    \ /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpncxtfvjn.java:27)\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) return 0;\n        int product\
    \ = 1;\n        while (n > 0) {\n            int digit = n % 10;\n           \
    \ product *= digit;\n            n /= 10;\n        }\n        return product;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwndu3ur_.java:28)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            product *= digit;\n        \
    \    n /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8wotsbe.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            product *= digit;\n        \
    \    n /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8wotsbe.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int sum = 0;\n        while (n > 0) {\n\
    \            sum += n % 10;\n            n /= 10;\n        }\n        return sum;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpudio8q8t.java:26)\n"
  stdout: ''
  timestamp: 1660011507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n>0) {\n\
    \            int digit = n % 10;\n            product *= digit;\n            n\
    \ /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpittuaw3r.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            product *= digit;\n        \
    \    n /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8wotsbe.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n>0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        product *= digit;\n            }\n            n /= 10;\n        }\n \
    \       return product;\n}\n    public static void main(String[] args) {\n   \
    \ assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp404a58ta.java:34)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        int digit = n;\n\
    \        while (digit > 0) {\n            product *= digit;\n            digit\
    \ /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp487hi55o.java:27)\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 0;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            product *= digit;\n        \
    \    n /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptpt39jmm.java:26)\n"
  stdout: ''
  timestamp: 1660011507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n>0) {\n\
    \            int digit = n % 10;\n            product *= digit;\n            n\
    \ /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpittuaw3r.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            product *= digit;\n        \
    \    n /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8wotsbe.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            product *= digit;\n        \
    \    n /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8wotsbe.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            product *= digit;\n        \
    \    n /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8wotsbe.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            product *= digit;\n        \
    \    n /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8wotsbe.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            product *= digit;\n        \
    \    n /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8wotsbe.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0)\n            return 0;\n   \
    \     int product = 1;\n        while (n > 0) {\n            int digit = n % 10;\n\
    \            product *= digit;\n            n /= 10;\n        }\n        return\
    \ product;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp00tymipc.java:29)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) return 0;\n        int product\
    \ = 1;\n        while (n > 0) {\n            int digit = n % 10;\n           \
    \ product *= digit;\n            n /= 10;\n        }\n        return product;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwndu3ur_.java:28)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) return 0;\n        int product\
    \ = 1;\n        while (n > 1) {\n            int digit = n % 10;\n           \
    \ if (digit % 2 == 1) product *= digit;\n            n /= 10;\n        }\n   \
    \     return product;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg6mb22f9.java:33)\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n>0) {\n\
    \            int digit = n % 10;\n            product *= digit;\n            n\
    \ /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpittuaw3r.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            product *= digit;\n        \
    \    n /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8wotsbe.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) {\n            return 0;\n \
    \       }\n        int sum = 0;\n        while (n > 0) {\n            sum += n\
    \ % 10;\n            n /= 10;\n        }\n        return sum;\n}\n    public static\
    \ void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw3j3hixo.java:29)\n"
  stdout: ''
  timestamp: 1660011507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) {\n            return 0;\n \
    \       }\n        int product = 1;\n        while (n > 0) {\n            int\
    \ digit = n % 10;\n            product *= digit;\n            n /= 10;\n     \
    \   }\n        return product;\n}\n    public static void main(String[] args)\
    \ {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppepn1z9g.java:30)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n>0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 != 0) {\n        \
    \        product *= digit;\n            }\n            n = n / 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv88gzdy_.java:34)\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) {\n            return 0;\n \
    \       }\n        int product = 1;\n        while (n > 0) {\n            int\
    \ digit = n % 10;\n            if (digit % 2 == 1) {\n                product\
    \ *= digit;\n            }\n            n /= 10;\n        }\n        return product;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3k_2kkel.java:37)\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n>0) {\n\
    \            int digit = n % 10;\n            product *= digit;\n            n\
    \ /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpittuaw3r.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n <= 0) return 0;\n        int product\
    \ = 1;\n        while (n > 1) {\n            int digit = n % 10;\n           \
    \ product *= digit;\n            n /= 10;\n        }\n        return product;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvyn55jxw.java:28)\n"
  stdout: ''
  timestamp: 1660011507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while(n > 0) {\n\
    \            int digit = n % 10;\n            product *= digit;\n            n\
    \ /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmparks97qo.java:27)\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) return 0;\n        int product\
    \ = 1;\n        while (n > 1) {\n            int digit = n % 10;\n           \
    \ if (digit % 2 != 0) return 0;\n            product *= digit;\n            n\
    \ /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps44v_8u4.java:28)\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 != 0) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6d5grh4_.java:34)\n"
  stdout: ''
  timestamp: 1660011507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        int digit = 0;\n\
    \        while (n > 0) {\n            digit = n % 10;\n            product *=\
    \ digit;\n            n /= 10;\n        }\n        return product;\n}\n    public\
    \ static void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4_vbegg.java:28)\n"
  stdout: ''
  timestamp: 1660011507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n <= 0) return 0;\n        int result\
    \ = 0;\n        while (n > 0) {\n            int digit = n % 10;\n           \
    \ if (digit % 2 != 0) return 0;\n            result *= digit;\n            n /=\
    \ 10;\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp73njku5k.java:28)\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            product *= digit;\n        \
    \    n /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8wotsbe.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            product *= digit;\n        \
    \    n /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8wotsbe.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            product *= digit;\n        \
    \    n /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8wotsbe.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            product *= digit;\n        \
    \    n /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8wotsbe.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        int digit = n;\n\
    \        while (digit > 0) {\n            product *= digit;\n            digit\
    \ /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp487hi55o.java:27)\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            product *= digit;\n        \
    \    n /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8wotsbe.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) {\n            return 0;\n \
    \       }\n        int product = 1;\n        while (n > 0) {\n            int\
    \ digit = n % 10;\n            product *= digit;\n            n /= 10;\n     \
    \   }\n        return product;\n}\n    public static void main(String[] args)\
    \ {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppepn1z9g.java:30)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n>0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        product *= digit;\n            }\n            n /= 10;\n        }\n \
    \       return product;\n}\n    public static void main(String[] args) {\n   \
    \ assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp404a58ta.java:34)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) return 0;\n        int product\
    \ = 1;\n        while (n > 0) {\n            product *= n % 10;\n            n\
    \ /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphfncay0j.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            product *= digit;\n        \
    \    n /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8wotsbe.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n <= 0) return 0;\n        int product\
    \ = 1;\n        while (n > 0) {\n            int digit = n % 10;\n           \
    \ product *= digit;\n            n /= 10;\n        }\n        return product;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb0kcxoqn.java:28)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n>0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        product *= digit;\n            }\n            n /= 10;\n        }\n \
    \       return product;\n}\n    public static void main(String[] args) {\n   \
    \ assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp404a58ta.java:34)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            product *= digit;\n        \
    \    n /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8wotsbe.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            product *= digit;\n        \
    \    n /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8wotsbe.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            product *= digit;\n        \
    \    n /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8wotsbe.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int sum = 0;\n        while (n > 0) {\n\
    \            sum += n % 10;\n            n /= 10;\n        }\n        return sum\
    \ % 2 == 0 ? 0 : sum;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpamzlmn2d.java:26)\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n>0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        product *= digit;\n            }\n            n /= 10;\n        }\n \
    \       return product;\n}\n    public static void main(String[] args) {\n   \
    \ assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp404a58ta.java:34)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        int digit = n;\n\
    \        while (digit > 0) {\n            product *= digit;\n            digit\
    \ /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp487hi55o.java:27)\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            product *= digit;\n        \
    \    n /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8wotsbe.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) {\n            return 0;\n \
    \       }\n        int sum = 0;\n        while (n > 0) {\n            sum += n\
    \ % 10;\n            n /= 10;\n        }\n        return sum;\n}\n    public static\
    \ void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw3j3hixo.java:29)\n"
  stdout: ''
  timestamp: 1660011507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            product *= n % 10;\n            n /= 10;\n        }\n       \
    \ return product;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo_crbdxb.java:26)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) return 0;\n        int product\
    \ = 1;\n        while (n > 0) {\n            int digit = n % 10;\n           \
    \ product *= digit;\n            n /= 10;\n        }\n        return product;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwndu3ur_.java:28)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int result = 0;\n        while (n > 0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        result *= digit;\n            }\n            n /= 10;\n        }\n  \
    \      return result;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp49xlvyco.java:28)\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            product *= digit;\n        \
    \    n /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8wotsbe.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n <= 0) return 0;\n        int product\
    \ = 1;\n        while (n > 0) {\n            product *= n % 10;\n            n\
    \ /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpreub7pe0.java:27)\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n>0) {\n\
    \            int digit = n % 10;\n            if (digit % 2 == 1) {\n        \
    \        product *= digit;\n            }\n            n /= 10;\n        }\n \
    \       return product;\n}\n    public static void main(String[] args) {\n   \
    \ assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp404a58ta.java:34)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n>0) {\n\
    \            int digit = n % 10;\n            product *= digit;\n            n\
    \ = n / 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpomgt2_su.java:27)\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0)\n            return 0;\n   \
    \     int product = 1;\n        while (n > 0) {\n            int digit = n % 10;\n\
    \            product *= digit;\n            n /= 10;\n        }\n        return\
    \ product;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp00tymipc.java:29)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        for (int i = 0;\
    \ i < n; i++) {\n            if (n % 2 == 1) {\n                product *= 2;\n\
    \            }\n            n /= 2;\n        }\n        return product;\n}\n \
    \   public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8hsktst1.java:27)\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            product *= digit;\n        \
    \    n /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8wotsbe.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        int digit = n;\n\
    \        while (digit > 0) {\n            product *= digit;\n            digit\
    \ /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp487hi55o.java:27)\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n <= 0) return 0;\n        int product\
    \ = 1;\n        while (n > 0) {\n            int digit = n % 10;\n           \
    \ if (digit % 2 == 1) product *= digit;\n            n /= 10;\n        }\n   \
    \     return product;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphfek6jj2.java:33)\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        int digit = 0;\n\
    \        while (n > 0) {\n            digit = n % 10;\n            product *=\
    \ digit;\n            n /= 10;\n        }\n        return product;\n}\n    public\
    \ static void main(String[] args) {\n    assert(digits((5)) == (5));\n    assert(digits((54))\
    \ == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n\
    \    assert(digits((98765)) == (315));\n    assert(digits((5576543)) == (2625));\n\
    \    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4_vbegg.java:28)\n"
  stdout: ''
  timestamp: 1660011507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) return 0;\n        int product\
    \ = 1;\n        while (n > 0) {\n            int digit = n % 10;\n           \
    \ if (digit % 2 == 1) product *= digit;\n            n /= 10;\n        }\n   \
    \     return product;\n}\n    public static void main(String[] args) {\n    assert(digits((5))\
    \ == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n\
    \    assert(digits((5014)) == (5));\n    assert(digits((98765)) == (315));\n \
    \   assert(digits((5576543)) == (2625));\n    assert(digits((2468)) == (0));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb0n6ggw_.java:33)\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 1)\
    \ {\n            product *= n % 10;\n            n /= 10;\n        }\n       \
    \ return product * n % 10;\n}\n    public static void main(String[] args) {\n\
    \    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi3tlu60e.java:25)\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 0)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnswcwcvx.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) return 0;\n        int product\
    \ = 1;\n        while (n > 0) {\n            product *= n % 10;\n            n\
    \ /= 10;\n        }\n        return product;\n}\n    public static void main(String[]\
    \ args) {\n    assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n\
    \    assert(digits((120)) == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765))\
    \ == (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphfncay0j.java:27)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) return 0;\n        int product\
    \ = 1;\n        while (n > 0) {\n            int digit = n % 10;\n           \
    \ product *= digit;\n            n /= 10;\n        }\n        return product;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwndu3ur_.java:28)\n"
  stdout: ''
  timestamp: 1660011505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        int product = 1;\n        while (n > 1)\
    \ {\n            int digit = n % 10;\n            if (digit % 2 == 1) {\n    \
    \            product *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return product;\n}\n    public static void main(String[] args) {\n  \
    \  assert(digits((5)) == (5));\n    assert(digits((54)) == (5));\n    assert(digits((120))\
    \ == (1));\n    assert(digits((5014)) == (5));\n    assert(digits((98765)) ==\
    \ (315));\n    assert(digits((5576543)) == (2625));\n    assert(digits((2468))\
    \ == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6nkn1cy.java:34)\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits(1) \n    // 1\n    // >>> digits(4) \n    // 0\n    public\
    \ static int digits(int n) {\n        if (n == 0) {\n            return 0;\n \
    \       }\n        int product = 1;\n        while (n > 0) {\n            int\
    \ digit = n % 10;\n            if (digit % 2 != 0) {\n                product\
    \ *= digit;\n            }\n            n /= 10;\n        }\n        return product;\n\
    }\n    public static void main(String[] args) {\n    assert(digits((5)) == (5));\n\
    \    assert(digits((54)) == (5));\n    assert(digits((120)) == (1));\n    assert(digits((5014))\
    \ == (5));\n    assert(digits((98765)) == (315));\n    assert(digits((5576543))\
    \ == (2625));\n    assert(digits((2468)) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps_i5pfh2.java:37)\n"
  stdout: ''
  timestamp: 1660011505

language: java
name: HumanEval_16_count_distinct_characters
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for(char\
    \ c : string.toCharArray()) {\n            Integer count = map.get(c);\n     \
    \       if(count == null) {\n                map.put(c, 1);\n            } else\
    \ {\n                map.put(c, count + 1);\n            }\n        }\n      \
    \  return map.size();\n}\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpon_x6bg8.java:25)\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            map.put(c, map.getOrDefault(c,\
    \ 0) + 1);\n        }\n        return map.size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb043yigb.java:20)\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        int count = 0;\n        char[] chars = string.toCharArray();\n\
    \        for (char c : chars) {\n            if (Character.isLetterOrDigit(c))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp71y1enq3.java:23)\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Set<Character> set = new HashSet<>();\n        for(char c\
    \ : string.toCharArray()) {\n            set.add(Character.toLowerCase(c));\n\
    \        }\n        return set.size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> counts = new HashMap<>();\n     \
    \   for (char c : string.toCharArray()) {\n            counts.merge(c, counts.getOrDefault(c,\
    \ 0) + 1, Integer::sum);\n        }\n        return counts.entrySet().stream().mapToInt(Map.Entry::getValue).sum();\n\
    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf1l8uuim.java:20)\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        int count = 0;\n        char[] chars = string.toCharArray();\n\
    \        for (char c : chars) {\n            count += Character.toUpperCase(c)\
    \ - Character.toLowerCase(c);\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(countDistinctCharacters((\"\"\
    )) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbktzkakh.java:20)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for(char\
    \ c : string.toCharArray()) {\n            map.put(c, map.getOrDefault(c, 0) +\
    \ 1);\n        }\n        return map.values().stream().distinct().count();\n}\n\
    \    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptesylobj.java:15: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return map.values().stream().distinct().count();\n\
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        HashMap<Character, Integer> map = new HashMap<>();\n    \
    \    for(char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            map.put(c, count == null ? 1 : count + 1);\n        }\n        return\
    \ map.values().stream().distinct().count();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpvxa7hy_a.java:16: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return map.values().stream().distinct().count();\n\
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        int count = 0;\n        char[] charArray = string.toCharArray();\n\
    \        for (char c : charArray) {\n            count += Character.toUpperCase(c)\
    \ - Character.toLowerCase(c);\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(countDistinctCharacters((\"\"\
    )) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw17a_b35.java:20)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        HashMap<Character, Integer> map = new HashMap<>();\n    \
    \    for(char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if(count == null) {\n                map.put(c, 1);\n           \
    \ } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp36txurkj.java:25)\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Set<Character> distinctCharacters = new HashSet<>();\n  \
    \      for (char c : string.toCharArray()) {\n            distinctCharacters.add(c);\n\
    \        }\n        return distinctCharacters.size();\n}\n    public static void\
    \ main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0qjvo0p1.java:20)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        HashSet<Character> set = new HashSet<>();\n        for (char\
    \ c : string.toCharArray()) {\n            set.add(Character.toLowerCase(c));\n\
    \        }\n        return set.size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.values().stream().distinct().count();\n}\n    public static\
    \ void main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdf_a8t7u.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return map.values().stream().distinct().count();\n\
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for(char\
    \ c : string.toCharArray()) {\n            Integer count = map.get(c);\n     \
    \       if(count == null) {\n                map.put(c, 1);\n            } else\
    \ {\n                map.put(c, count + 1);\n            }\n        }\n      \
    \  return map.size();\n}\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpon_x6bg8.java:25)\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for(char\
    \ c : string.toCharArray()) {\n            map.put(c, map.getOrDefault(c, 0) +\
    \ 1);\n        }\n        return map.values().stream().distinct().count();\n}\n\
    \    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptesylobj.java:15: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return map.values().stream().distinct().count();\n\
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Set<Character> set = new HashSet<>();\n        for(char c\
    \ : string.toCharArray()) {\n            set.add(Character.toLowerCase(c));\n\
    \        }\n        return set.size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Set<Character> chars = new HashSet<>();\n        for(char\
    \ c : string.toCharArray()) {\n            chars.add(c);\n        }\n        return\
    \ chars.size();\n}\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd5893el9.java:20)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        HashSet<Character> set = new HashSet<>();\n        for(char\
    \ c : string.toCharArray()) {\n            set.add(Character.toLowerCase(c));\n\
    \        }\n        return set.size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            map.put(c, map.getOrDefault(c,\
    \ 0) + 1);\n        }\n        return map.values().stream().distinct().count();\n\
    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwn5i8ben.java:15: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return map.values().stream().distinct().count();\n\
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Set<Character> set = new HashSet<>();\n        for (char\
    \ c : string.toCharArray()) {\n            set.add(Character.toLowerCase(c));\n\
    \        }\n        return set.size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011830
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        HashMap<Character, Integer> map = new HashMap<>();\n    \
    \    for (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjwgnpby1.java:25)\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        HashSet<Character> set = new HashSet<>();\n        for (char\
    \ c : string.toCharArray()) {\n            set.add(Character.toLowerCase(c));\n\
    \        }\n        return set.size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        HashMap<Character, Integer> map = new HashMap<>();\n    \
    \    for(char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if(count == null) {\n                map.put(c, 1);\n           \
    \ } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.values().stream().distinct().count();\n}\n    public static\
    \ void main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpv3genh0i.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return map.values().stream().distinct().count();\n\
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for(char\
    \ c : string.toCharArray()) {\n            Integer count = map.get(c);\n     \
    \       if(count == null) {\n                map.put(c, 1);\n            } else\
    \ {\n                map.put(c, count + 1);\n            }\n        }\n      \
    \  return map.values().stream().distinct().count();\n}\n    public static void\
    \ main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzb81xmyl.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return map.values().stream().distinct().count();\n\
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for(char\
    \ c : string.toCharArray()) {\n            Integer count = map.get(c);\n     \
    \       if(count == null) {\n                map.put(c, 1);\n            } else\
    \ {\n                map.put(c, count + 1);\n            }\n        }\n      \
    \  return map.size();\n}\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpon_x6bg8.java:25)\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        int count = 0;\n        char[] charArray = string.toCharArray();\n\
    \        for (char c : charArray) {\n            if (Character.isLetterOrDigit(c))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2zzi_wtn.java:23)\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.values().stream().distinct().count();\n}\n    public static\
    \ void main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdf_a8t7u.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return map.values().stream().distinct().count();\n\
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for(char\
    \ c : string.toCharArray()) {\n            Integer count = map.get(c);\n     \
    \       if(count == null) {\n                map.put(c, 1);\n            } else\
    \ {\n                map.put(c, count + 1);\n            }\n        }\n      \
    \  return map.values().stream().distinct().count();\n}\n    public static void\
    \ main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzb81xmyl.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return map.values().stream().distinct().count();\n\
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.values().stream().distinct().count();\n}\n    public static\
    \ void main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdf_a8t7u.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return map.values().stream().distinct().count();\n\
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Set<Character> set = new HashSet<>();\n        for (char\
    \ c : string.toCharArray()) {\n            set.add(Character.toLowerCase(c));\n\
    \            set.add(Character.toUpperCase(c));\n        }\n        return set.size();\n\
    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpii4efr6s.java:20)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for(char\
    \ c : string.toCharArray()) {\n            Integer count = map.get(c);\n     \
    \       if(count == null) {\n                map.put(c, 1);\n            } else\
    \ {\n                map.put(c, count + 1);\n            }\n        }\n      \
    \  return map.values().stream().distinct().count();\n}\n    public static void\
    \ main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzb81xmyl.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return map.values().stream().distinct().count();\n\
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        HashMap<Character, Integer> map = new HashMap<>();\n    \
    \    for (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjwgnpby1.java:25)\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        HashSet<Character> set = new HashSet<>();\n        for(char\
    \ c : string.toCharArray()) {\n            set.add(Character.toLowerCase(c));\n\
    \        }\n        return set.size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for(char\
    \ c : string.toCharArray()) {\n            Integer count = map.get(c);\n     \
    \       if(count == null) {\n                map.put(c, 1);\n            } else\
    \ {\n                map.put(c, count + 1);\n            }\n        }\n      \
    \  return map.values().stream().distinct().count();\n}\n    public static void\
    \ main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzb81xmyl.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return map.values().stream().distinct().count();\n\
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for(char\
    \ c : string.toCharArray()) {\n            Integer count = map.get(c);\n     \
    \       if(count == null) {\n                map.put(c, 1);\n            } else\
    \ {\n                map.put(c, count + 1);\n            }\n        }\n      \
    \  return map.values().stream().distinct().count();\n}\n    public static void\
    \ main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzb81xmyl.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return map.values().stream().distinct().count();\n\
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        HashMap<Character, Integer> map = new HashMap<>();\n    \
    \    for (char c : string.toCharArray()) {\n            map.put(c, map.getOrDefault(c,\
    \ 0) + 1);\n        }\n        return map.values().stream().distinct().count();\n\
    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_sw9_cck.java:15: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return map.values().stream().distinct().count();\n\
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.values().stream().distinct().count();\n}\n    public static\
    \ void main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdf_a8t7u.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return map.values().stream().distinct().count();\n\
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.values().stream().distinct().count();\n}\n    public static\
    \ void main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdf_a8t7u.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return map.values().stream().distinct().count();\n\
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            map.put(c, map.getOrDefault(c,\
    \ 0) + 1);\n        }\n        return map.values().stream().distinct().count();\n\
    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwn5i8ben.java:15: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return map.values().stream().distinct().count();\n\
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        HashMap<Character, Integer> map = new HashMap<>();\n    \
    \    for(char c : string.toCharArray()) {\n            map.put(c, map.getOrDefault(c,\
    \ 0) + 1);\n        }\n        return map.size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg3s_qyg1.java:20)\n"
  stdout: ''
  timestamp: 1660011917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.values().stream().distinct().count();\n}\n    public static\
    \ void main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdf_a8t7u.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return map.values().stream().distinct().count();\n\
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        HashSet<Character> set = new HashSet<>();\n        for (char\
    \ c : string.toCharArray()) {\n            set.add(Character.toLowerCase(c));\n\
    \        }\n        return set.size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.values().stream().distinct().count();\n}\n    public static\
    \ void main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdf_a8t7u.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return map.values().stream().distinct().count();\n\
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Set<Character> set = new HashSet<>();\n        for(char c\
    \ : string.toCharArray()) {\n            set.add(Character.toLowerCase(c));\n\
    \        }\n        return set.size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        int count = 0;\n        for (char c : string.toCharArray())\
    \ {\n            if (Character.isLetterOrDigit(c)) {\n                count++;\n\
    \            }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9188alfj.java:22)\n"
  stdout: ''
  timestamp: 1660011917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for(char\
    \ c : string.toCharArray()) {\n            Integer count = map.get(c);\n     \
    \       if(count == null) {\n                map.put(c, 1);\n            } else\
    \ {\n                map.put(c, count + 1);\n            }\n        }\n      \
    \  return map.size();\n}\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpon_x6bg8.java:25)\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Set<Character> set = new HashSet<>();\n        for(char c\
    \ : string.toCharArray()) {\n            set.add(Character.toLowerCase(c));\n\
    \        }\n        return set.size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for(char\
    \ c : string.toCharArray()) {\n            Integer count = map.get(c);\n     \
    \       if(count == null) {\n                map.put(c, 1);\n            } else\
    \ {\n                map.put(c, count + 1);\n            }\n        }\n      \
    \  return map.size();\n}\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpon_x6bg8.java:25)\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for(char\
    \ c : string.toCharArray()) {\n            Integer count = map.get(c);\n     \
    \       map.put(c, count == null ? 1 : count + 1);\n        }\n        return\
    \ map.values().stream().distinct().count();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp5t3mzwwi.java:16: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return map.values().stream().distinct().count();\n\
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011917
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Set<Character> set = new HashSet<>();\n        for (char\
    \ c : string.toCharArray()) {\n            set.add(Character.toLowerCase(c));\n\
    \        }\n        return set.size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011830
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            map.put(c, map.getOrDefault(c,\
    \ 0) + 1);\n        }\n        return map.size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb043yigb.java:20)\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        HashSet<Character> set = new HashSet<>();\n        for(char\
    \ c : string.toCharArray()) {\n            set.add(Character.toLowerCase(c));\n\
    \        }\n        return set.size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011916
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        int count = 0;\n        Set<Character> set = new HashSet<>();\n\
    \        for (char c : string.toCharArray()) {\n            set.add(Character.toLowerCase(c));\n\
    \        }\n        count = set.size();\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(countDistinctCharacters((\"\"\
    )) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for(char\
    \ c : string.toCharArray()) {\n            Integer count = map.get(c);\n     \
    \       if(count == null) {\n                map.put(c, 1);\n            } else\
    \ {\n                map.put(c, count + 1);\n            }\n        }\n      \
    \  return map.size();\n}\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpon_x6bg8.java:25)\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.values().stream().distinct().count();\n}\n    public static\
    \ void main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdf_a8t7u.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return map.values().stream().distinct().count();\n\
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        int count = 0;\n        char[] charArray = string.toCharArray();\n\
    \        for (char c : charArray) {\n            if (Character.isLetterOrDigit(c))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2zzi_wtn.java:23)\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        HashMap<Character, Integer> map = new HashMap<>();\n    \
    \    for(char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if(count == null) {\n                map.put(c, 1);\n           \
    \ } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp36txurkj.java:25)\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for(char\
    \ c : string.toCharArray()) {\n            Integer count = map.get(c);\n     \
    \       if(count == null) {\n                map.put(c, 1);\n            } else\
    \ {\n                map.put(c, count + 1);\n            }\n        }\n      \
    \  return map.values().stream().distinct().count();\n}\n    public static void\
    \ main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzb81xmyl.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return map.values().stream().distinct().count();\n\
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for(char\
    \ c : string.toCharArray()) {\n            Integer count = map.get(c);\n     \
    \       if(count == null) {\n                map.put(c, 1);\n            } else\
    \ {\n                map.put(c, count + 1);\n            }\n        }\n      \
    \  return map.size();\n}\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpon_x6bg8.java:25)\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Set<Character> set = new HashSet<>();\n        for (char\
    \ c : string.toCharArray()) {\n            set.add(Character.toLowerCase(c));\n\
    \        }\n        return set.size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011830
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        HashMap<Character, Integer> map = new HashMap<>();\n    \
    \    for (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjwgnpby1.java:25)\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for(char\
    \ c : string.toCharArray()) {\n            Integer count = map.get(c);\n     \
    \       if(count == null) {\n                map.put(c, 1);\n            } else\
    \ {\n                map.put(c, count + 1);\n            }\n        }\n      \
    \  return map.size();\n}\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpon_x6bg8.java:25)\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        HashMap<Character, Integer> map = new HashMap<>();\n    \
    \    for (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjwgnpby1.java:25)\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Set<Character> set = new HashSet<>();\n        for (char\
    \ c : string.toCharArray()) {\n            set.add(Character.toLowerCase(c));\n\
    \        }\n        return set.size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011830
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            map.put(c, map.getOrDefault(c,\
    \ 0) + 1);\n        }\n        return map.values().stream().distinct().count();\n\
    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwn5i8ben.java:15: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return map.values().stream().distinct().count();\n\
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for(char\
    \ c : string.toCharArray()) {\n            map.put(c, map.getOrDefault(c, 0) +\
    \ 1);\n        }\n        return map.values().stream().distinct().count();\n}\n\
    \    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptesylobj.java:15: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return map.values().stream().distinct().count();\n\
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        HashSet<Character> set = new HashSet<>();\n        for (char\
    \ c : string.toCharArray()) {\n            set.add(Character.toLowerCase(c));\n\
    \        }\n        return set.size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Set<Character> set = new HashSet<>();\n        for(char c\
    \ : string.toCharArray()) {\n            set.add(Character.toLowerCase(c));\n\
    \        }\n        return set.size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        HashMap<Character, Integer> map = new HashMap<>();\n    \
    \    for (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjwgnpby1.java:25)\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for(char\
    \ c : string.toCharArray()) {\n            Integer count = map.get(c);\n     \
    \       if(count == null) {\n                map.put(c, 1);\n            } else\
    \ {\n                map.put(c, count + 1);\n            }\n        }\n      \
    \  return map.values().stream().distinct().count();\n}\n    public static void\
    \ main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzb81xmyl.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return map.values().stream().distinct().count();\n\
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.values().stream().distinct().count();\n}\n    public static\
    \ void main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdf_a8t7u.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return map.values().stream().distinct().count();\n\
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        int count = 0;\n        char[] chars = string.toCharArray();\n\
    \        for (char c : chars) {\n            count += Character.toUpperCase(c)\
    \ - Character.toLowerCase(c);\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(countDistinctCharacters((\"\"\
    )) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbktzkakh.java:20)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for(char\
    \ c : string.toCharArray()) {\n            Integer count = map.get(c);\n     \
    \       if(count == null) {\n                map.put(c, 1);\n            } else\
    \ {\n                map.put(c, count + 1);\n            }\n        }\n      \
    \  return map.size();\n}\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpon_x6bg8.java:25)\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        HashMap<Character, Integer> map = new HashMap<>();\n    \
    \    for(char c : string.toCharArray()) {\n            map.put(c, map.getOrDefault(c,\
    \ 0) + 1);\n        }\n        return map.values().stream().distinct().count();\n\
    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg27hqe4c.java:15: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return map.values().stream().distinct().count();\n\
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011917
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Set<Character> set = new HashSet<>();\n        for (char\
    \ c : string.toCharArray()) {\n            set.add(Character.toLowerCase(c));\n\
    \        }\n        return set.size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011830
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.values().stream().distinct().count();\n}\n    public static\
    \ void main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdf_a8t7u.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return map.values().stream().distinct().count();\n\
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for(char\
    \ c : string.toCharArray()) {\n            Integer count = map.get(c);\n     \
    \       if(count == null) {\n                map.put(c, 1);\n            } else\
    \ {\n                map.put(c, count + 1);\n            }\n        }\n      \
    \  return map.size();\n}\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpon_x6bg8.java:25)\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.values().stream().distinct().count();\n}\n    public static\
    \ void main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdf_a8t7u.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return map.values().stream().distinct().count();\n\
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Set<Character> distinctCharacters = new HashSet<>();\n  \
    \      for (char character : string.toCharArray()) {\n            distinctCharacters.add(character);\n\
    \        }\n        return distinctCharacters.size();\n}\n    public static void\
    \ main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzbkh_t62.java:20)\n"
  stdout: ''
  timestamp: 1660011917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> count = new HashMap<>();\n      \
    \  for (char c : string.toCharArray()) {\n            Integer count = count.get(c);\n\
    \            if (count == null) {\n                count.put(c, 1);\n        \
    \    } else {\n                count.put(c, count + 1);\n            }\n     \
    \   }\n        return count.values().stream().distinct().count();\n}\n    public\
    \ static void main(String[] args) {\n    assert(countDistinctCharacters((\"\"\
    )) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkmba7pq9.java:13: error: variable count is already defined in method\
    \ countDistinctCharacters(String)\n            Integer count = count.get(c);\n\
    \                    ^\n/tmp/tmpkmba7pq9.java:13: error: cannot find symbol\n\
    \            Integer count = count.get(c);\n                                 ^\n\
    \  symbol:   method get(char)\n  location: variable count of type Integer\n/tmp/tmpkmba7pq9.java:15:\
    \ error: cannot find symbol\n                count.put(c, 1);\n              \
    \       ^\n  symbol:   method put(char,int)\n  location: variable count of type\
    \ Integer\n/tmp/tmpkmba7pq9.java:17: error: cannot find symbol\n             \
    \   count.put(c, count + 1);\n                     ^\n  symbol:   method put(char,int)\n\
    \  location: variable count of type Integer\n/tmp/tmpkmba7pq9.java:20: error:\
    \ incompatible types: possible lossy conversion from long to int\n        return\
    \ count.values().stream().distinct().count();\n                              \
    \                         ^\n5 errors\n"
  stdout: ''
  timestamp: 1660011917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.values().stream().distinct().count();\n}\n    public static\
    \ void main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdf_a8t7u.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return map.values().stream().distinct().count();\n\
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.values().stream().distinct().count();\n}\n    public static\
    \ void main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdf_a8t7u.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return map.values().stream().distinct().count();\n\
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.values().stream().distinct().count();\n}\n    public static\
    \ void main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdf_a8t7u.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return map.values().stream().distinct().count();\n\
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> counts = new HashMap<>();\n     \
    \   for (char c : string.toCharArray()) {\n            Integer count = counts.get(c);\n\
    \            if (count == null) {\n                counts.put(c, 1);\n       \
    \     } else {\n                counts.put(c, count + 1);\n            }\n   \
    \     }\n        return counts.entrySet().stream().mapToInt(e -> e.getValue()).sum();\n\
    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf1lns_jc.java:25)\n"
  stdout: ''
  timestamp: 1660011917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        int distinctCharacters = 0;\n        for(char c : string.toCharArray())\
    \ {\n            distinctCharacters += Character.isLetterOrDigit(c) ? 1 : 0;\n\
    \        }\n        return distinctCharacters;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo9fhz4_s.java:20)\n"
  stdout: ''
  timestamp: 1660011917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        HashSet<Character> set = new HashSet<>();\n        for (char\
    \ c : string.toCharArray()) {\n            set.add(Character.toLowerCase(c));\n\
    \        }\n        return set.size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for(char\
    \ c : string.toCharArray()) {\n            Integer count = map.get(c);\n     \
    \       if(count == null) {\n                map.put(c, 1);\n            } else\
    \ {\n                map.put(c, count + 1);\n            }\n        }\n      \
    \  return map.size();\n}\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpon_x6bg8.java:25)\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Set<Character> chars = new HashSet<>();\n        chars.addAll(Arrays.asList(string.toLowerCase().toCharArray()));\n\
    \        return chars.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpnwywb01w.java:12: error: incompatible types: inference variable\
    \ T has incompatible bounds\n        chars.addAll(Arrays.asList(string.toLowerCase().toCharArray()));\n\
    \             ^\n    lower bounds: Character,Object\n    lower bounds: char[]\n\
    \  where T is a type-variable:\n    T extends Object declared in method <T>asList(T...)\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  stdout: ''
  timestamp: 1660011917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Set<Character> set = new HashSet<>();\n        for (char\
    \ c : string.toCharArray()) {\n            set.add(Character.toLowerCase(c));\n\
    \        }\n        return set.size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011830
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for(char\
    \ c : string.toCharArray()) {\n            Integer count = map.get(c);\n     \
    \       map.put(c, count == null ? 1 : count + 1);\n        }\n        return\
    \ map.values().stream().distinct().count();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp5t3mzwwi.java:16: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return map.values().stream().distinct().count();\n\
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        int count = 0;\n        for (char c : string.toCharArray())\
    \ {\n            if (Character.isLetterOrDigit(c)) {\n                count++;\n\
    \            }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9188alfj.java:22)\n"
  stdout: ''
  timestamp: 1660011917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for(char\
    \ c : string.toCharArray()) {\n            Integer count = map.get(c);\n     \
    \       if(count == null) {\n                map.put(c, 1);\n            } else\
    \ {\n                map.put(c, count + 1);\n            }\n        }\n      \
    \  return map.size();\n}\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpon_x6bg8.java:25)\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        int count = 0;\n        for(int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if(c == c.toUpperCase())\
    \ {\n                count++;\n            }\n            if(c == c.toLowerCase())\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6gmd022j.java:14: error: char cannot be dereferenced\n        \
    \    if(c == c.toUpperCase()) {\n                     ^\n/tmp/tmp6gmd022j.java:17:\
    \ error: char cannot be dereferenced\n            if(c == c.toLowerCase()) {\n\
    \                     ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        HashSet<Character> set = new HashSet<>();\n        for (char\
    \ c : string.toCharArray()) {\n            set.add(Character.toLowerCase(c));\n\
    \        }\n        return set.size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011916
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        HashSet<Character> set = new HashSet<>();\n        for (char\
    \ c : string.toCharArray()) {\n            set.add(Character.toLowerCase(c));\n\
    \        }\n        return set.size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        int distinctCharacters = 0;\n        char[] charArray = string.toCharArray();\n\
    \        for (char c : charArray) {\n            distinctCharacters += Character.isLetterOrDigit(c)\
    \ ? 1 : 0;\n        }\n        return distinctCharacters;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgnhp19z3.java:21)\n"
  stdout: ''
  timestamp: 1660011917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            map.put(c, map.getOrDefault(c,\
    \ 0) + 1);\n        }\n        return map.values().stream().distinct().count();\n\
    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwn5i8ben.java:15: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return map.values().stream().distinct().count();\n\
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        int count = 0;\n        char[] charArray = string.toCharArray();\n\
    \        for (char c : charArray) {\n            if (Character.isLetterOrDigit(c))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2zzi_wtn.java:23)\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.values().stream().distinct().count();\n}\n    public static\
    \ void main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdf_a8t7u.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return map.values().stream().distinct().count();\n\
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.values().stream().distinct().count();\n}\n    public static\
    \ void main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdf_a8t7u.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return map.values().stream().distinct().count();\n\
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        HashSet<Character> set = new HashSet<>();\n        for(char\
    \ c : string.toCharArray()) {\n            set.add(Character.toLowerCase(c));\n\
    \        }\n        return set.size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011916
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        HashSet<Character> set = new HashSet<>();\n        for(char\
    \ c : string.toCharArray()) {\n            set.add(Character.toLowerCase(c));\n\
    \        }\n        return set.size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Set<Character> distinctCharacters = new HashSet<>();\n  \
    \      for (char c : string.toCharArray()) {\n            distinctCharacters.add(c);\n\
    \        }\n        return distinctCharacters.size();\n}\n    public static void\
    \ main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0qjvo0p1.java:20)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for(char\
    \ c : string.toCharArray()) {\n            map.put(c, map.getOrDefault(c, 0) +\
    \ 1);\n        }\n        return map.size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwz1dvxio.java:20)\n"
  stdout: ''
  timestamp: 1660011917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        HashSet<Character> set = new HashSet<>();\n        for(char\
    \ c : string.toCharArray()) {\n            set.add(Character.toLowerCase(c));\n\
    \            set.add(Character.toUpperCase(c));\n        }\n        return set.size();\n\
    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeoxwpw9m.java:20)\n"
  stdout: ''
  timestamp: 1660011917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        int count = 0;\n        for(int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if(c == ' ') {\n\
    \                continue;\n            }\n            if(c == '.') {\n      \
    \          continue;\n            }\n            if(c == '!') {\n            \
    \    continue;\n            }\n            if(c == '?') {\n                continue;\n\
    \            }\n            if(c == '-') {\n                continue;\n      \
    \      }\n            if(c == '(') {\n                continue;\n            }\n\
    \            if(c == ')') {\n                continue;\n            }\n      \
    \      if(c == '[') {\n                continue;\n            }\n            if(c\
    \ == ']') {\n                continue;\n            }\n            if(c == '{')\
    \ {\n                continue;\n            }\n            if(c == '}') {\n  \
    \              continue;\n            }\n            if(c == '*') {\n        \
    \        continue;\n            }\n            if(c == '/') {\n              \
    \  continue;\n            }\n            if(c == '%') {\n                continue;\n\
    \            }\n            if(c == '^') {\n                continue;\n      \
    \      }\n            if(c == '=') {\n                continue;\n            }\n\
    \            if(c == '+') {\n                continue;\n            }\n      \
    \      if(c == '-') {\n                continue;\n            }\n            if(c\
    \ == '<') {\n                continue;\n            }\n            if(c == '>')\
    \ {\n                continue;\n            }\n            if(c == '|') {\n  \
    \              continue;\n            }\n            if(c == '&') {\n        \
    \        continue;\n            }\n            if(c == '!') {\n              \
    \  continue;\n            }\n            if(c == '~') {\n                continue;\n\
    \            }\n            if(c == '@') {\n                continue;\n      \
    \      }\n            if(c == '#') {\n                continue;\n            }\n\
    \            if(c == '$') {\n                continue;\n            }\n      \
    \      if(c == '%') {\n                continue;\n            }\n            if(c\
    \ == '&') {\n                continue;\n            }\n            if(c == '*')\
    \ {\n                continue;\n            }\n            if(c == '(') {\n  \
    \              continue;\n            }\n            if(c == ')') {\n        \
    \        continue;\n            }\n            if(c == '[') {\n              \
    \  continue;\n            }\n            if(c == ']') {\n                continue;\n\
    \            }\n            if(c == '{') {\n                continue;\n      \
    \      }\n            if(c == '}') {\n                continue;\n            }\n\
    \            if(c == '<') {\n                continue;\n            }\n      \
    \      if(c == '>') {\n                continue;\n            }\n            if(c\
    \ == '|') {\n                continue;\n            }\n            if(c == '=')\
    \ {\n                continue;\n            }\n            if(c == '+') {\n  \
    \              continue;\n            }\n            if\n}\n    public static\
    \ void main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq6rhjaas.java:137: error: '(' expected\n            if\n      \
    \        ^\n/tmp/tmpq6rhjaas.java:138: error: illegal start of expression\n}\n\
    ^\n/tmp/tmpq6rhjaas.java:139: error: illegal start of expression\n    public static\
    \ void main(String[] args) {\n    ^\n3 errors\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> counts = new HashMap<>();\n     \
    \   for (char c : string.toCharArray()) {\n            counts.merge(c, counts.getOrDefault(c,\
    \ 0) + 1, Integer::sum);\n        }\n        return counts.entrySet().stream().mapToInt(e\
    \ -> e.getValue()).sum();\n}\n    public static void main(String[] args) {\n \
    \   assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf16_lgn9.java:20)\n"
  stdout: ''
  timestamp: 1660011917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Set<Character> chars = new HashSet<>();\n        char[] charArray\
    \ = string.toCharArray();\n        for (char c : charArray) {\n            chars.add(c);\n\
    \        }\n        return chars.size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx8c87jkb.java:21)\n"
  stdout: ''
  timestamp: 1660011917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            map.put(c, map.getOrDefault(c,\
    \ 0) + 1);\n        }\n        return map.values().stream().distinct().count();\n\
    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwn5i8ben.java:15: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return map.values().stream().distinct().count();\n\
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        HashSet<Character> set = new HashSet<>();\n        for(char\
    \ c : string.toCharArray()) {\n            set.add(Character.toLowerCase(c));\n\
    \        }\n        return set.size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        int count = 0;\n        for(int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if(c == c.toUpperCase())\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwza0_4tr.java:14: error: char cannot be dereferenced\n        \
    \    if(c == c.toUpperCase()) {\n                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011917
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Set<Character> set = new HashSet<>();\n        for(char c\
    \ : string.toCharArray()) {\n            set.add(Character.toLowerCase(c));\n\
    \        }\n        return set.size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> counts = new HashMap<>();\n     \
    \   for (char c : string.toCharArray()) {\n            counts.put(c, counts.getOrDefault(c,\
    \ 0) + 1);\n        }\n        return counts.size();\n}\n    public static void\
    \ main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbzib6om7.java:20)\n"
  stdout: ''
  timestamp: 1660011917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for(char\
    \ c : string.toCharArray()) {\n            Integer count = map.get(c);\n     \
    \       if(count == null) {\n                map.put(c, 1);\n            } else\
    \ {\n                map.put(c, count + 1);\n            }\n        }\n      \
    \  return map.values().stream().distinct().count();\n}\n    public static void\
    \ main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzb81xmyl.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return map.values().stream().distinct().count();\n\
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Set<Character> chars = new HashSet<>();\n        char[] charArray\
    \ = string.toCharArray();\n        for (char c : charArray) {\n            chars.add(c);\n\
    \        }\n        return chars.size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx8c87jkb.java:21)\n"
  stdout: ''
  timestamp: 1660011917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for(char\
    \ c : string.toCharArray()) {\n            Integer count = map.get(c);\n     \
    \       if(count == null) {\n                map.put(c, 1);\n            } else\
    \ {\n                map.put(c, count + 1);\n            }\n        }\n      \
    \  return map.size();\n}\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpon_x6bg8.java:25)\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        int count = 0;\n        char[] charArray = string.toCharArray();\n\
    \        for (char c : charArray) {\n            if (Character.isUpperCase(c))\
    \ {\n                count++;\n            }\n            if (Character.isLowerCase(c))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqefr927a.java:26)\n"
  stdout: ''
  timestamp: 1660011917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for(char\
    \ c : string.toCharArray()) {\n            Integer count = map.get(c);\n     \
    \       if(count == null) {\n                map.put(c, 1);\n            } else\
    \ {\n                map.put(c, count + 1);\n            }\n        }\n      \
    \  return map.size();\n}\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpon_x6bg8.java:25)\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for(char\
    \ c : string.toCharArray()) {\n            Integer count = map.get(c);\n     \
    \       if(count == null) {\n                map.put(c, 1);\n            } else\
    \ {\n                map.put(c, count + 1);\n            }\n        }\n      \
    \  return map.size();\n}\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpon_x6bg8.java:25)\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for(char\
    \ c : string.toCharArray()) {\n            Integer count = map.get(c);\n     \
    \       if(count == null) {\n                map.put(c, 1);\n            } else\
    \ {\n                map.put(c, count + 1);\n            }\n        }\n      \
    \  return map.size();\n}\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpon_x6bg8.java:25)\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for(char\
    \ c : string.toCharArray()) {\n            Integer count = map.get(c);\n     \
    \       if(count == null) {\n                map.put(c, 1);\n            } else\
    \ {\n                map.put(c, count + 1);\n            }\n        }\n      \
    \  return map.values().stream().distinct().count();\n}\n    public static void\
    \ main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzb81xmyl.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return map.values().stream().distinct().count();\n\
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.values().stream().distinct().count();\n}\n    public static\
    \ void main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdf_a8t7u.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return map.values().stream().distinct().count();\n\
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        HashMap<Character, Integer> map = new HashMap<>();\n    \
    \    for (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjwgnpby1.java:25)\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        int count = 0;\n        char[] charArray = string.toCharArray();\n\
    \        Arrays.sort(charArray);\n        for (int i = 0; i < charArray.length;\
    \ i++) {\n            if (charArray[i] == charArray[i + 1]) {\n              \
    \  count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException:\
    \ Index 5 out of bounds for length 5\n\tat Problem.countDistinctCharacters(tmpyrt0vpvr.java:15)\n\
    \tat Problem.main(tmpyrt0vpvr.java:23)\n"
  stdout: ''
  timestamp: 1660011917
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Set<Character> set = new HashSet<>();\n        for (char\
    \ c : string.toCharArray()) {\n            set.add(Character.toLowerCase(c));\n\
    \        }\n        return set.size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011830
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        int count = 0;\n        Set<Character> set = new HashSet<>();\n\
    \        for (char c : string.toCharArray()) {\n            set.add(Character.toLowerCase(c));\n\
    \            set.add(Character.toUpperCase(c));\n        }\n        count = set.size();\n\
    \        return count;\n}\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5qp_n52v.java:22)\n"
  stdout: ''
  timestamp: 1660011917
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Set<Character> set = new HashSet<>();\n        for (char\
    \ c : string.toCharArray()) {\n            set.add(Character.toLowerCase(c));\n\
    \        }\n        return set.size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011830
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Set<Character> set = new HashSet<>();\n        for (char\
    \ c : string.toCharArray()) {\n            set.add(Character.toLowerCase(c));\n\
    \        }\n        return set.size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011830
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        int count = 0;\n        char[] charArray = string.toCharArray();\n\
    \        for (char c : charArray) {\n            count += Character.toLowerCase(c).equals(Character.toLowerCase(c))\
    \ ? 1 : 0;\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmprocucqih.java:14: error: char cannot be dereferenced\n        \
    \    count += Character.toLowerCase(c).equals(Character.toLowerCase(c)) ? 1 :\
    \ 0;\n                                             ^\n1 error\n"
  stdout: ''
  timestamp: 1660011917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        int count = 0;\n        for (char c : string.toCharArray())\
    \ {\n            if (Character.isLetterOrDigit(c)) {\n                count++;\n\
    \            }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9188alfj.java:22)\n"
  stdout: ''
  timestamp: 1660011917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Set<Character> set = new HashSet<>();\n        for (char\
    \ c : string.toCharArray()) {\n            set.add(Character.toLowerCase(c));\n\
    \        }\n        return set.size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011830
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Set<Character> set = new HashSet<>();\n        for(char c\
    \ : string.toCharArray()) {\n            set.add(Character.toLowerCase(c));\n\
    \        }\n        return set.size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for(char\
    \ c : string.toCharArray()) {\n            Integer count = map.get(c);\n     \
    \       if(count == null) {\n                map.put(c, 1);\n            } else\
    \ {\n                map.put(c, count + 1);\n            }\n        }\n      \
    \  return map.values().stream().distinct().count();\n}\n    public static void\
    \ main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzb81xmyl.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return map.values().stream().distinct().count();\n\
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Set<Character> set = new HashSet<>();\n        for (char\
    \ c : string.toCharArray()) {\n            set.add(Character.toLowerCase(c));\n\
    \        }\n        return set.size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011830
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        int count = 0;\n        char[] chars = string.toCharArray();\n\
    \        for (char c : chars) {\n            count += Character.isUpperCase(c)\
    \ ? 2 : Character.isLowerCase(c) ? 1 : 0;\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwmf1cak5.java:21)\n"
  stdout: ''
  timestamp: 1660011917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        HashSet<Character> set = new HashSet<>();\n        for(int\
    \ i = 0; i < string.length(); i++) {\n            set.add(string.charAt(i));\n\
    \        }\n        return set.size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsamt_o0w.java:20)\n"
  stdout: ''
  timestamp: 1660011917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for(char\
    \ c : string.toCharArray()) {\n            Integer count = map.get(c);\n     \
    \       if(count == null) {\n                map.put(c, 1);\n            } else\
    \ {\n                map.put(c, count + 1);\n            }\n        }\n      \
    \  return map.size();\n}\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpon_x6bg8.java:25)\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        HashMap<Character, Integer> map = new HashMap<>();\n    \
    \    for(char c : string.toCharArray()) {\n            map.put(c, map.getOrDefault(c,\
    \ 0) + 1);\n        }\n        return map.size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg3s_qyg1.java:20)\n"
  stdout: ''
  timestamp: 1660011917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        int count = 0;\n        char[] charArray = string.toCharArray();\n\
    \        Arrays.sort(charArray);\n        for (int i = 0; i < charArray.length;\
    \ i++) {\n            char c = charArray[i];\n            if (c != charArray[i\
    \ - 1]) {\n                count++;\n            }\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException:\
    \ Index -1 out of bounds for length 5\n\tat Problem.countDistinctCharacters(tmppdboxxge.java:16)\n\
    \tat Problem.main(tmppdboxxge.java:24)\n"
  stdout: ''
  timestamp: 1660011917
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Set<Character> set = new HashSet<>();\n        for(char c\
    \ : string.toCharArray()) {\n            set.add(Character.toLowerCase(c));\n\
    \        }\n        return set.size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.values().stream().distinct().count();\n}\n    public static\
    \ void main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdf_a8t7u.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return map.values().stream().distinct().count();\n\
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for(char\
    \ c : string.toCharArray()) {\n            Integer count = map.get(c);\n     \
    \       if(count == null) {\n                map.put(c, 1);\n            } else\
    \ {\n                map.put(c, count + 1);\n            }\n        }\n      \
    \  return map.size();\n}\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpon_x6bg8.java:25)\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        int count = 0;\n        for(int i = 0; i < string.length();\
    \ i++) {\n            char c = string.charAt(i);\n            if(c == c.toUpperCase())\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwza0_4tr.java:14: error: char cannot be dereferenced\n        \
    \    if(c == c.toUpperCase()) {\n                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for(char\
    \ c : string.toCharArray()) {\n            Integer count = map.get(c);\n     \
    \       if(count == null) {\n                map.put(c, 1);\n            } else\
    \ {\n                map.put(c, count + 1);\n            }\n        }\n      \
    \  return map.values().stream().distinct().count();\n}\n    public static void\
    \ main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzb81xmyl.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return map.values().stream().distinct().count();\n\
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for(char\
    \ c : string.toCharArray()) {\n            map.put(c, map.getOrDefault(c, 0) +\
    \ 1);\n        }\n        return map.values().stream().distinct().count();\n}\n\
    \    public static void main(String[] args) {\n    assert(countDistinctCharacters((\"\
    \")) == (0));\n    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptesylobj.java:15: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return map.values().stream().distinct().count();\n\
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        HashMap<Character, Integer> map = new HashMap<>();\n    \
    \    for (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjwgnpby1.java:25)\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        HashSet<Character> set = new HashSet<>();\n        for(int\
    \ i = 0; i < string.length(); i++) {\n            set.add(string.charAt(i));\n\
    \        }\n        return set.size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsamt_o0w.java:20)\n"
  stdout: ''
  timestamp: 1660011917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.values().stream().distinct().count();\n}\n    public static\
    \ void main(String[] args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n\
    \    assert(countDistinctCharacters((\"abcde\")) == (5));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdf_a8t7u.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return map.values().stream().distinct().count();\n\
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        HashSet<Character> set = new HashSet<>();\n        for(char\
    \ c : string.toCharArray()) {\n            set.add(Character.toLowerCase(c));\n\
    \        }\n        return set.size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        HashMap<Character, Integer> map = new HashMap<>();\n    \
    \    for (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjwgnpby1.java:25)\n"
  stdout: ''
  timestamp: 1660011916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        int count = 0;\n        for(char c : string.toCharArray())\
    \ {\n            if(c == c.toUpperCase()) {\n                count++;\n      \
    \      }\n            if(c == c.toLowerCase()) {\n                count++;\n \
    \           }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_y9y2vmx.java:13: error: char cannot be dereferenced\n        \
    \    if(c == c.toUpperCase()) {\n                     ^\n/tmp/tmp_y9y2vmx.java:16:\
    \ error: char cannot be dereferenced\n            if(c == c.toLowerCase()) {\n\
    \                     ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        Map<Character, Integer> map = new HashMap<>();\n        for\
    \ (char c : string.toCharArray()) {\n            Integer count = map.get(c);\n\
    \            if (count == null) {\n                map.put(c, 1);\n          \
    \  } else {\n                map.put(c, count + 1);\n            }\n        }\n\
    \        return map.size();\n}\n    public static void main(String[] args) {\n\
    \    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4lfgylb.java:25)\n"
  stdout: ''
  timestamp: 1660011915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    public static int countDistinctCharacters(String\
    \ string) {\n        HashMap<Character, Integer> map = new HashMap<>();\n    \
    \    for(char c : string.toCharArray()) {\n            map.put(c, map.getOrDefault(c,\
    \ 0) + 1);\n        }\n        return map.size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(countDistinctCharacters((\"\")) == (0));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1));\n   \
    \ assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg3s_qyg1.java:20)\n"
  stdout: ''
  timestamp: 1660011917

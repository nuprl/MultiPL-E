language: java
name: HumanEval_93_encode
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            String s = Character.toString(c);\n            if (s.equals(\"a\"\
    ) || s.equals(\"e\") || s.equals(\"i\") || s.equals(\"o\") || s.equals(\"u\"))\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpiwpvicb4.java:28: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            if (Character.isLetter(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\nreturn \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp6fjdv3jy.java:27: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] newChars = new char[chars.length];\n\
    \        for(int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            char newChar = c;\n            if(c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u') {\n                newChar = Character.toUpperCase(c);\n\
    \            }\n            if(c == 'A' || c == 'E' || c == 'I' || c == 'O' ||\
    \ c == 'U') {\n                newChar = Character.toUpperCase(c);\n         \
    \   }\n            newChars[i] = newChar;\n        }\n        return new String(newChars);\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpo75ycsh6.java:30: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ letters = message.toCharArray();\n        Arrays.sort(letters);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < letters.length; i++) {\n\
    \            char c = letters[i];\n            if(c == 'a' || c == 'e' || c ==\
    \ 'i' || c == 'o' || c == 'u') {\n                sb.append(c);\n            }\
    \ else {\n                sb.append(Character.toUpperCase(c));\n            }\n\
    \        }\n        return sb.toString();\nreturn \"\";\n    }\n    public static\
    \ void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmphcvugg05.java:28: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] newChars = new char[chars.length];\n\
    \        for (int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            if (Character.isUpperCase(c)) {\n                newChars[i] = Character.toLowerCase(c);\n\
    \            } else {\n                newChars[i] = Character.toUpperCase(c);\n\
    \            }\n        }\n        StringBuilder sb = new StringBuilder();\n \
    \       for (int i = 0; i < chars.length; i++) {\n            char c = newChars[i];\n\
    \            if (Character.isLetter(c)) {\n                sb.append(c);\n   \
    \         }\n        }\n        return sb.toString();\nreturn \"\";\n    }\n \
    \   public static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpuhrqtpw3.java:34: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Write\
    \ your code here\n        char[] chars = message.toCharArray();\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if((c >= 'a' && c <= 'z') || (c >=\
    \ 'A' && c <= 'Z')) {\n                sb.append(c);\n            } else if((c\
    \ >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c >= '0' && c <= '9')) {\n\
    \                sb.append(Character.toUpperCase(c));\n            } else {\n\
    \                sb.append(Character.toLowerCase(c));\n            }\n       \
    \ }\n        return sb.toString();\nreturn \"\";\n    }\n    public static void\
    \ main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp01_t_pu2.java:30: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] vowels = {'a', 'e', 'i', 'o',\
    \ 'u'};\n        Arrays.sort(vowels);\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if (vowels.contains(c)) {\n     \
    \           sb.append(Character.toUpperCase(c));\n            } else {\n     \
    \           sb.append(c);\n            }\n        }\n        return sb.toString();\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy78rfyu2.java:23: error: cannot find symbol\n            if (vowels.contains(c))\
    \ {\n                      ^\n  symbol:   method contains(char)\n  location: variable\
    \ vowels of type char[]\n1 error\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if (Character.isLetter(c)) {\n  \
    \              sb.append(Character.toUpperCase(c));\n            } else {\n  \
    \              sb.append(c);\n            }\n        }\n        char[] vowels\
    \ = {'a', 'e', 'i', 'o', 'u'};\n        Arrays.sort(vowels);\n        StringBuilder\
    \ vowelsSB = new StringBuilder();\n        for (int i = 0; i < vowels.length;\
    \ i++) {\n            char vowel = vowels[i];\n            vowelsSB.append(vowel);\n\
    \        }\n        char[] vowelsChars = vowelsSB.toString().toCharArray();\n\
    \        Arrays.sort(vowelsChars);\n        StringBuilder vowelsSB2 = new StringBuilder();\n\
    \        for (int i = 0; i < vowelsChars.length; i++) {\n            char vowel\
    \ = vowelsChars[i];\n            vowelsSB2.append(vowel);\n        }\n       \
    \ char[] vowelsChars2 = vowelsSB2.toString().toCharArray();\n        Arrays.sort(vowelsChars2);\n\
    \        StringBuilder vowelsSB3 = new StringBuilder();\n        for (int i =\
    \ 0; i < vowelsChars2.length; i++) {\n            char vowel = vowelsChars2[i];\n\
    \            vowelsSB3.append(vowel);\n        }\n        char[] vowelsChars3\
    \ = vowelsSB3.toString().toCharArray();\n        Arrays.sort(vowelsChars3);\n\
    \        StringBuilder vowelsSB4 = new StringBuilder();\n        for (int i =\
    \ 0; i < vowelsChars3.length; i++) {\n            char vowel = vowelsChars3[i];\n\
    \            vowelsSB4.append(vowel);\n        }\n        char[] vowelsChars4\
    \ = vowelsSB4.toString().toCharArray();\n        Arrays.sort(vowelsChars4);\n\
    \        StringBuilder vowelsSB5 = new StringBuilder();\n        for (int i =\
    \ 0; i < vowelsChars4.length; i++) {\n            char vowel = vowelsChars4[i];\n\
    \            vowelsSB5.append(vowel);\n        }\n        char[] vowelsChars5\
    \ = vowelsSB5.toString().toCharArray();\n        Arrays.sort(vowelsChars5);\n\
    \        StringBuilder vowelsSB6 = new StringBuilder();\n        for (int i =\
    \ 0; i < vowelsChars5.length; i++) {\n            char vowel = vowelsChars5[i];\n\
    \            vowelsSB6.append(vowel);\n        }\n        char[] vowelsChars6\
    \ = vowelsSB6.toString().toCharArray();\n        Arrays.sort(vowelsChars6);\n\
    \        StringBuilder vowelsSB7 = new StringBuilder();\n        for \nreturn\
    \ \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpypul07le.java:72: error: '(' expected\n        for \n         \
    \  ^\n/tmp/tmpypul07le.java:73: error: illegal start of expression\nreturn \"\"\
    ;\n^\n2 errors\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u') {\n                sb.append(c);\n            } else\
    \ if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n           \
    \     sb.append(c);\n            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\nreturn \"\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp07uydd6x.java:30: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        \nreturn\
    \ \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzwe3tkd7.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < message.length(); i++)\
    \ {\n            char c = message.charAt(i);\n            if(c == 'a' || c ==\
    \ 'e' || c == 'i' || c == 'o' || c == 'u') {\n                sb.append(message.charAt(i));\n\
    \            } else if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\
    \ {\n                sb.append(message.charAt(i));\n            } else {\n   \
    \             sb.append(Character.toUpperCase(c));\n            }\n        }\n\
    \        return sb.toString();\nreturn \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpl77acys8.java:28: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if (Character.isLetter(c)) {\n  \
    \              String replacement = Character.toUpperCase(Character.toLowerCase(c));\n\
    \                for (int j = i; j < chars.length; j++) {\n                  \
    \  if (Character.isLetter(chars[j])) {\n                        String replacement2\
    \ = Character.toUpperCase(Character.toLowerCase(chars[j]));\n                \
    \        if (replacement.equals(replacement2)) {\n                           \
    \ sb.append(replacement);\n                            break;\n              \
    \          }\n                    }\n                }\n            } else {\n\
    \                sb.append(c);\n            }\n        }\n        return sb.toString();\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn557uyzr.java:22: error: incompatible types: char cannot be converted\
    \ to String\n                String replacement = Character.toUpperCase(Character.toLowerCase(c));\n\
    \                                                          ^\n/tmp/tmpn557uyzr.java:25:\
    \ error: incompatible types: char cannot be converted to String\n            \
    \            String replacement2 = Character.toUpperCase(Character.toLowerCase(chars[j]));\n\
    \                                                                   ^\n2 errors\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < message.length(); i++)\
    \ {\n            char c = message.charAt(i);\n            if('A' <= c && c <=\
    \ 'Z') {\n                sb.append(Character.toUpperCase(c));\n            }\
    \ else if('a' <= c && c <= 'z') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if('0' <= c && c <= '9') {\n                sb.append(c);\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\nreturn \"\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpp3ntgton.java:30: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        \nreturn\
    \ \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzwe3tkd7.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < message.length(); i++)\
    \ {\n            char c = message.charAt(i);\n            if('A' <= c && c <=\
    \ 'Z') {\n                sb.append(Character.toUpperCase(c));\n            }\
    \ else if('a' <= c && c <= 'z') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if('0' <= c && c <= '9') {\n                sb.append(c);\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\nreturn \"\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpp3ntgton.java:30: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u') {\n                sb.append(c);\n            } else\
    \ if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n           \
    \     sb.append(c);\n            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\nreturn \"\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp07uydd6x.java:30: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] newChars = new char[chars.length];\n\
    \        for(int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            char newC = Character.toUpperCase(c);\n            char newC2 = Character.toLowerCase(newC);\n\
    \            char newC3 = Character.toUpperCase(newC2);\n            char newC4\
    \ = Character.toLowerCase(newC3);\n            char newC5 = Character.toUpperCase(newC4);\n\
    \            char newC6 = Character.toLowerCase(newC5);\n            char newC7\
    \ = Character.toUpperCase(newC6);\n            char newC8 = Character.toLowerCase(newC7);\n\
    \            char newC9 = Character.toUpperCase(newC8);\n            char newC10\
    \ = Character.toLowerCase(newC9);\n            char newC11 = Character.toUpperCase(newC10);\n\
    \            char newC12 = Character.toLowerCase(newC11);\n            char newC13\
    \ = Character.toUpperCase(newC12);\n            char newC14 = Character.toLowerCase(newC13);\n\
    \            char newC15 = Character.toUpperCase(newC14);\n            char newC16\
    \ = Character.toLowerCase(newC15);\n            char newC17 = Character.toUpperCase(newC16);\n\
    \            char newC18 = Character.toLowerCase(newC17);\n            char newC19\
    \ = Character.toUpperCase(newC18);\n            char newC20 = Character.toLowerCase(newC19);\n\
    \            char newC21 = Character.toUpperCase(newC20);\n            char newC22\
    \ = Character.toLowerCase(newC21);\n            char newC23 = Character.toUpperCase(newC22);\n\
    \            char newC24 = Character.toLowerCase(newC23);\n            char newC25\
    \ = Character.toUpperCase(newC24);\n            char newC26 = Character.toLowerCase(newC25);\n\
    \            char newC27 = Character.toUpperCase(newC26);\n            char newC28\
    \ = Character.toLowerCase(newC27);\n            char newC29 = Character.toUpperCase(newC28);\n\
    \            char newC30 = Character.toLowerCase(newC29);\n            char newC31\
    \ = Character.toUpperCase(newC30);\n            char newC32 = Character.toLowerCase(newC31);\n\
    \            char newC33 = Character.toUpperCase(newC32);\n            char newC34\
    \ = Character.toLowerCase(newC33);\n            char newC35 = Character.toUpperCase(newC34);\n\
    \            char newC36 = \nreturn \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2uk10s0k.java:56: error: illegal start of expression\nreturn \"\
    \";\n^\n/tmp/tmp2uk10s0k.java:58: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n2 errors\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if (Character.isUpperCase(c)) {\n\
    \                sb.append(Character.toLowerCase(c));\n            } else {\n\
    \                sb.append(c);\n            }\n        }\n        char[] vowels\
    \ = new char[]{'a', 'e', 'i', 'o', 'u'};\n        Arrays.sort(vowels);\n     \
    \   StringBuilder vowelsSb = new StringBuilder();\n        for (int i = 0; i <\
    \ vowels.length; i++) {\n            char c = vowels[i];\n            vowelsSb.append(c);\n\
    \        }\n        char[] vowelsSbChars = vowelsSb.toCharArray();\n        Arrays.sort(vowelsSbChars);\n\
    \        for (int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if (vowelsSbChars.indexOf(c) == 2) {\n                sb.append(vowelsSbChars[vowelsSbChars.indexOf(c)\
    \ + 1]);\n            } else {\n                sb.append(c);\n            }\n\
    \        }\n        return sb.toString();\nreturn \"\";\n    }\n    public static\
    \ void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp16ooa1s2.java:34: error: cannot find symbol\n        char[] vowelsSbChars\
    \ = vowelsSb.toCharArray();\n                                       ^\n  symbol:\
    \   method toCharArray()\n  location: variable vowelsSb of type StringBuilder\n\
    /tmp/tmp16ooa1s2.java:40: error: cannot find symbol\n            } else if (vowelsSbChars.indexOf(c)\
    \ == 2) {\n                                    ^\n  symbol:   method indexOf(char)\n\
    \  location: variable vowelsSbChars of type char[]\n/tmp/tmp16ooa1s2.java:41:\
    \ error: cannot find symbol\n                sb.append(vowelsSbChars[vowelsSbChars.indexOf(c)\
    \ + 1]);\n                                                     ^\n  symbol:  \
    \ method indexOf(char)\n  location: variable vowelsSbChars of type char[]\n3 errors\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] newChars = new char[chars.length];\n\
    \        for(int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            if('A' <= c && c <= 'Z') {\n                newChars[i] = c;\n  \
    \          }\n            if('a' <= c && c <= 'z') {\n                newChars[i]\
    \ = c;\n            }\n            if('0' <= c && c <= '9') {\n              \
    \  newChars[i] = c;\n            }\n        }\n        StringBuilder sb = new\
    \ StringBuilder();\n        for(int i = 0; i < newChars.length; i++) {\n     \
    \       char c = newChars[i];\n            if('A' <= c && c <= 'Z') {\n      \
    \          sb.append(Character.toUpperCase(c));\n            }\n            if('a'\
    \ <= c && c <= 'z') {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n            if('0' <= c && c <= '9') {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\nreturn \"\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpn7b_kzry.java:44: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] newChars = new char[chars.length];\n\
    \        for(int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n\
    \                newChars[i] = 'A';\n            } else if(c == 'A' || c == 'E'\
    \ || c == 'I' || c == 'O' || c == 'U') {\n                newChars[i] = 'a';\n\
    \            } else if(c == 'b' || c == 'c' || c == 'd' || c == 'f' || c == 'g'\
    \ || c == 'h' || c == 'j' || c == 'k' || c == 'l' || c == 'm' || c == 'n' || c\
    \ == 'p' || c == 'q' || c == 'r' || c == 's' || c == 't' || c == 'v' || c == 'w'\
    \ || c == 'x' || c == 'y' || c == 'z') {\n                newChars[i] = 'B';\n\
    \            } else if(c == 'B' || c == 'C' || c == 'D' || c == 'F' || c == 'G'\
    \ || c == 'H' || c == 'J' || c == 'K' || c == 'L' || c == 'M' || c == 'N' || c\
    \ == 'P' || c == 'Q' || c == 'R' || c == 'S' || c == 'T' || c == 'V' || c == 'W'\
    \ || c == 'X' || c == 'Y' || c == 'Z') {\n                newChars[i] = 'b';\n\
    \            } else if(c == 'd' || c == 'f' || c == 'g' || c == 'h' || c == 'j'\
    \ || c == 'k' || c == 'l' || c == 'm' || c == 'n' || c == 'p' || c == 'q' || c\
    \ == 'r' || c == 's' || c == 't' || c == 'v' || c == 'w' || c == 'x' || c == 'y'\
    \ || c == 'z') {\n                newChars[i] = 'd';\n            } else if(c\
    \ == 'f' || c == 'g' || c == 'h' || c == 'j' || c == 'k' || c == 'l' || c == 'm'\
    \ || c == 'n' || c == 'p' || c == 'q' || c == 'r' || c == 's' || c == 't' || c\
    \ == 'v' || c == 'w' || c == 'x' || c == 'y' || c == 'z') {\n                newChars[i]\
    \ = 'f';\n            } else if(c == 'g' || c == 'h' || c == 'j' || c == 'k' ||\
    \ c == 'l' || c == 'm' || c == 'n' || c == 'p' || c == 'q' || c == 'r' || c ==\
    \ 's' || c == 't' || c == 'v' || c\nreturn \"\";\n    }\n    public static void\
    \ main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4y22hfn2.java:32: error: ')' expected\n            } else if(c\
    \ == 'g' || c == 'h' || c == 'j' || c == 'k' || c == 'l' || c == 'm' || c == 'n'\
    \ || c == 'p' || c == 'q' || c == 'r' || c == 's' || c == 't' || c == 'v' || c\n\
    \                                                                            \
    \                                                                            \
    \                           ^\n/tmp/tmp4y22hfn2.java:35: error: illegal start\
    \ of expression\n    public static void main(String[] args) {\n    ^\n2 errors\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        \nreturn\
    \ \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzwe3tkd7.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if (Character.isLetter(c)) {\n  \
    \              sb.append(Character.toUpperCase(c));\n            } else {\n  \
    \              sb.append(c);\n            }\n        }\n        char[] vowels\
    \ = {'a', 'e', 'i', 'o', 'u'};\n        Arrays.sort(vowels);\n        Arrays.stream(vowels).forEach(v\
    \ -> {\n            int index = sb.indexOf(v);\n            if (index != -1) {\n\
    \                sb.setCharAt(index, sb.charAt(index + 1));\n            }\n \
    \       });\n        return sb.toString();\nreturn \"\";\n    }\n    public static\
    \ void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpe81kmf46.java:29: error: no suitable method found for stream(char[])\n\
    \        Arrays.stream(vowels).forEach(v -> {\n              ^\n    method Arrays.<T#1>stream(T#1[])\
    \ is not applicable\n      (inference variable T#1 has incompatible bounds\n \
    \       equality constraints: char\n        lower bounds: Object)\n    method\
    \ Arrays.<T#2>stream(T#2[],int,int) is not applicable\n      (cannot infer type-variable(s)\
    \ T#2\n        (actual and formal argument lists differ in length))\n    method\
    \ Arrays.stream(int[]) is not applicable\n      (argument mismatch; char[] cannot\
    \ be converted to int[])\n    method Arrays.stream(long[]) is not applicable\n\
    \      (argument mismatch; char[] cannot be converted to long[])\n    method Arrays.stream(double[])\
    \ is not applicable\n      (argument mismatch; char[] cannot be converted to double[])\n\
    \  where T#1,T#2 are type-variables:\n    T#1 extends Object declared in method\
    \ <T#1>stream(T#1[])\n    T#2 extends Object declared in method <T#2>stream(T#2[],int,int)\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] newChars = new char[chars.length];\n\
    \        Arrays.fill(newChars, 'a');\n        Arrays.fill(newChars, 'A');\n  \
    \      Arrays.fill(newChars, 'b');\n        Arrays.fill(newChars, 'B');\n    \
    \    Arrays.fill(newChars, 'c');\n        Arrays.fill(newChars, 'C');\n      \
    \  Arrays.fill(newChars, 'd');\n        Arrays.fill(newChars, 'D');\n        Arrays.fill(newChars,\
    \ 'e');\n        Arrays.fill(newChars, 'E');\n        Arrays.fill(newChars, 'f');\n\
    \        Arrays.fill(newChars, 'F');\n        Arrays.fill(newChars, 'g');\n  \
    \      Arrays.fill(newChars, 'G');\n        Arrays.fill(newChars, 'h');\n    \
    \    Arrays.fill(newChars, 'H');\n        Arrays.fill(newChars, 'i');\n      \
    \  Arrays.fill(newChars, 'I');\n        Arrays.fill(newChars, 'j');\n        Arrays.fill(newChars,\
    \ 'J');\n        Arrays.fill(newChars, 'k');\n        Arrays.fill(newChars, 'K');\n\
    \        Arrays.fill(newChars, 'l');\n        Arrays.fill(newChars, 'L');\n  \
    \      Arrays.fill(newChars, 'm');\n        Arrays.fill(newChars, 'M');\n    \
    \    Arrays.fill(newChars, 'n');\n        Arrays.fill(newChars, 'N');\n      \
    \  Arrays.fill(newChars, 'o');\n        Arrays.fill(newChars, 'O');\n        Arrays.fill(newChars,\
    \ 'p');\n        Arrays.fill(newChars, 'P');\n        Arrays.fill(newChars, 'q');\n\
    \        Arrays.fill(newChars, 'Q');\n        Arrays.fill(newChars, 'r');\n  \
    \      Arrays.fill(newChars, 'R');\n        Arrays.fill(newChars, 's');\n    \
    \    Arrays.fill(newChars, 'S');\n        Arrays.fill(newChars, 't');\n      \
    \  Arrays.fill(newChars, 'T');\n        Arrays.fill(newChars, 'u');\n        Arrays.fill(newChars,\
    \ 'U');\n        Arrays.fill(newChars, 'v');\n        Arrays.fill(newChars, 'V');\n\
    \        Arrays.fill(newChars, 'w');\n        Arrays.fill(newChars, 'W');\n  \
    \      Arrays.fill(newChars, 'x');\n        Arrays.fill(newChars, 'X');\n    \
    \    Arrays.fill(newChars, 'y');\n\nreturn \"\";\n    }\n    public static void\
    \ main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9pif5n_j.java:71)\n"
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] newChars = new char[chars.length];\n\
    \        for(int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            if('A' <= c && c <= 'Z') {\n                newChars[i] = c;\n  \
    \          } else if('a' <= c && c <= 'z') {\n                newChars[i] = c;\n\
    \            } else if('0' <= c && c <= '9') {\n                newChars[i] =\
    \ c;\n            } else if(Character.isLetter(c)) {\n                newChars[i]\
    \ = Character.toUpperCase(c);\n            } else {\n                newChars[i]\
    \ = c;\n            }\n        }\n        return new String(newChars);\nreturn\
    \ \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp4pl327hk.java:33: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] newChars = new char[chars.length];\n\
    \        for(int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            if('A' <= c && c <= 'Z') {\n                newChars[i] = (char)\
    \ (c + 1);\n            } else if('a' <= c && c <= 'z') {\n                newChars[i]\
    \ = (char) (c - 1);\n            } else if('0' <= c && c <= '9') {\n         \
    \       newChars[i] = c;\n            } else {\n                newChars[i] =\
    \ c;\n            }\n        }\n        return new String(newChars);\nreturn \"\
    \";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpqlb3vstv.java:31: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        \nreturn\
    \ \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzwe3tkd7.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] newChars = new char[chars.length];\n\
    \        for(int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n\
    \                newChars[i] = 'A';\n            } else if(c == 'b' || c == 'c'\
    \ || c == 'd' || c == 'f' || c == 'g' || c == 'h' || c == 'j' || c == 'k' || c\
    \ == 'l' || c == 'm' || c == 'n' || c == 'p' || c == 'q' || c == 'r' || c == 's'\
    \ || c == 't' || c == 'v' || c == 'w' || c == 'x' || c == 'y' || c == 'z') {\n\
    \                newChars[i] = 'B';\n            } else if(c == 'A' || c == 'B'\
    \ || c == 'C' || c == 'D' || c == 'E' || c == 'F' || c == 'G' || c == 'H' || c\
    \ == 'I' || c == 'J' || c == 'K' || c == 'L' || c == 'M' || c == 'N' || c == 'P'\
    \ || c == 'Q' || c == 'R' || c == 'S' || c == 'T' || c == 'V' || c == 'W' || c\
    \ == 'X' || c == 'Y' || c == 'Z') {\n                newChars[i] = 'a';\n    \
    \        } else if(c == 'a' || c == 'b' || c == 'c' || c == 'd' || c == 'e' ||\
    \ c == 'f' || c == 'g' || c == 'h' || c == 'i' || c == 'j' || c == 'k' || c ==\
    \ 'l' || c == 'm' || c == 'n' || c == 'p' || c == 'q' || c == 'r' || c == 's'\
    \ || c == 't' || c == 'v' || c == 'w' || c == 'x' || c == 'y' || c == 'z') {\n\
    \                newChars[i] = 'b';\n            } else if(c == 'A' || c == 'B'\
    \ || c == 'C' || c == 'D' || c == 'E' || c == 'F' || c == 'G' || c == 'H' || c\
    \ == 'I' || c == 'J' || c == 'K' || c == 'L' || c == 'M' || c == 'N' || c == 'P'\
    \ || c == 'Q' || c == 'R' || c == 'S' || c == 'T' || c == 'V' || c == 'W' || c\
    \ == 'X' || c == 'Y' || c == 'Z') {\n                newChars[i] = 'c';\n    \
    \        } else if(c == 'a' || c == 'b' || c == 'c' || c == 'd' || c == 'e' ||\
    \ c == 'f' || c == 'g' || \nreturn \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx08yxwvd.java:31: error: illegal start of expression\nreturn \"\
    \";\n^\n/tmp/tmpx08yxwvd.java:33: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n2 errors\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] newChars = new char[chars.length];\n\
    \        for(int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            char newChar = Character.toUpperCase(c);\n            char newChar2\
    \ = Character.toLowerCase(c);\n            char newChar3 = Character.toUpperCase(newChar2);\n\
    \            char newChar4 = Character.toLowerCase(newChar2);\n            char\
    \ newChar5 = Character.toUpperCase(newChar3);\n            char newChar6 = Character.toLowerCase(newChar3);\n\
    \            char newChar7 = Character.toUpperCase(newChar4);\n            char\
    \ newChar8 = Character.toLowerCase(newChar4);\n            char newChar9 = Character.toUpperCase(newChar5);\n\
    \            char newChar10 = Character.toLowerCase(newChar5);\n            char\
    \ newChar11 = Character.toUpperCase(newChar6);\n            char newChar12 = Character.toLowerCase(newChar6);\n\
    \            char newChar13 = Character.toUpperCase(newChar7);\n            char\
    \ newChar14 = Character.toLowerCase(newChar7);\n            char newChar15 = Character.toUpperCase(newChar8);\n\
    \            char newChar16 = Character.toLowerCase(newChar8);\n            char\
    \ newChar17 = Character.toUpperCase(newChar9);\n            char newChar18 = Character.toLowerCase(newChar9);\n\
    \            char newChar19 = Character.toUpperCase(newChar10);\n            char\
    \ newChar20 = Character.toLowerCase(newChar10);\n            char newChar21 =\
    \ Character.toUpperCase(newChar11);\n            char newChar22 = Character.toLowerCase(newChar11);\n\
    \            char newChar23 = Character.toUpperCase(newChar12);\n            char\
    \ newChar24 = Character.toLowerCase(newChar12);\n            char newChar25 =\
    \ Character.toUpperCase(newChar13);\n            char newChar26 = Character.toLowerCase(newChar13);\n\
    \            char newChar27 = Character.toUpperCase(newChar14);\n            char\
    \ newChar28 = Character.toLowerCase(newChar14);\n            char newChar29 =\
    \ Character.toUpperCase(newChar15);\n            char newChar30 = Character.toLowerCase(newChar15);\n\
    \            char newChar31 = Character.toUpperCase(newChar16);\n            char\
    \ newChar32 = Character.toLowerCase(newChar16);\n            char newChar33 =\
    \ Character.toUpperCase(newChar17);\n            char newChar34 = Character.toLowerCase(newChar17);\n\
    \            char newChar35 = Character.toUpperCase(newChar18);\n            char\
    \ newChar36 = Character.toLowerCase(newChar18);\n            char newChar37\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdknptvc.java:56: error: ';' expected\n            char newChar37\n\
    \                          ^\n/tmp/tmpgdknptvc.java:59: error: illegal start of\
    \ expression\n    public static void main(String[] args) {\n    ^\n2 errors\n"
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u') {\n                sb.append(c);\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        for(int i = 0; i < chars.length; i++) {\n            char c =\
    \ chars[i];\n            if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c\
    \ == 'u') {\n                sb.append(c);\n            } else {\n           \
    \     sb.append(Character.toLowerCase(c));\n            }\n        }\n       \
    \ return sb.toString();\nreturn \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpv45s_8cn.java:36: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ letters = message.toCharArray();\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < letters.length; i++) {\n            char c = letters[i];\n\
    \            String s = Character.toString(c);\n            String t = s.toLowerCase();\n\
    \            String u = t.replace(\"a\", \"A\");\n            String v = u.replace(\"\
    e\", \"E\");\n            String w = v.replace(\"i\", \"I\");\n            String\
    \ x = w.replace(\"o\", \"O\");\n            String y = x.replace(\"u\", \"U\"\
    );\n            String z = y.replace(\"a\", \"A\");\n            String aa = z.replace(\"\
    e\", \"E\");\n            String ab = aa.replace(\"i\", \"I\");\n            String\
    \ ac = ab.replace(\"o\", \"O\");\n            String ad = ac.replace(\"u\", \"\
    U\");\n            String ae = ad.replace(\"a\", \"A\");\n            String af\
    \ = a.replace(\"e\", \"E\");\n            String ag = af.replace(\"i\", \"I\"\
    );\n            String ah = ag.replace(\"o\", \"O\");\n            String ai =\
    \ ah.replace(\"u\", \"U\");\n            String aj = ai.replace(\"a\", \"A\");\n\
    \            String ak = aj.replace(\"e\", \"E\");\n            String al = ak.replace(\"\
    i\", \"I\");\n            String am = al.replace(\"o\", \"O\");\n            String\
    \ an = am.replace(\"u\", \"U\");\n            String ao = an.replace(\"a\", \"\
    A\");\n            String ap = ao.replace(\"e\", \"E\");\n            String aq\
    \ = ap.replace(\"i\", \"I\");\n            String ar = aq.replace(\"o\", \"O\"\
    );\n            String as = ar.replace(\"u\", \"U\");\n            String au =\
    \ as.replace(\"a\", \"A\");\n            String av = au.replace(\"e\", \"E\");\n\
    \            String aw = av.replace(\"i\", \"I\");\n            String ax = aw.replace(\"\
    o\", \"O\");\n            String ay = ax.replace(\"u\", \"U\");\n            String\
    \ az = ay.replace(\"a\", \"A\");\n            String ba = az.replace(\"e\", \"\
    E\");\n            String bb = ba.replace(\"i\", \"I\");\n            String bc\
    \ = bb.replace(\"o\", \"O\");\n            String bd = bc.replace(\"u\", \"U\"\
    );\n            String be = pd.replace(\"a\", \"A\");\n            String bf =\
    \ be.replace(\"e\", \"E\");\n            String bg = bf.replace(\"i\", \"I\");\n\
    \            String bh = bg.replace(\"o\", \"O\");\n            String bi = bh.replace(\"\
    u\", \"U\");\n            String bj = bi.replace(\"a\", \"A\");\n            String\
    \ bk = bj.replace(\"e\", \"E\");\n            String bl = bk.replace(\"i\", \"\
    I\");\n            String bm = bl.replace(\"o\", \"O\");\n            String bn\
    \ = \nreturn \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5kocsbqm.java:67: error: illegal start of expression\nreturn \"\
    \";\n^\n/tmp/tmp5kocsbqm.java:69: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n2 errors\n"
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] newChars = new char[chars.length];\n\
    \        for(int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n\
    \                newChars[i] = 'A';\n            } else if(c == 'b' || c == 'c'\
    \ || c == 'd' || c == 'f' || c == 'g') {\n                newChars[i] = 'B';\n\
    \            } else if(c == 'h' || c == 'j' || c == 'k' || c == 'l' || c == 'm')\
    \ {\n                newChars[i] = 'C';\n            } else if(c == 'n' || c ==\
    \ 'p' || c == 'q' || c == 'r' || c == 's') {\n                newChars[i] = 'D';\n\
    \            } else if(c == 't' || c == 'v' || c == 'w' || c == 'x' || c == 'y')\
    \ {\n                newChars[i] = 'E';\n            } else if(c == 'z') {\n \
    \               newChars[i] = 'F';\n            }\n        }\n        return new\
    \ String(newChars);\nreturn \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpohih_xtq.java:35: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ letters = message.toCharArray();\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < letters.length; i++) {\n            char c = letters[i];\n\
    \            if (Character.isLetter(c)) {\n                String s = Character.toUpperCase(c);\n\
    \                for (int j = 0; j < s.length(); j++) {\n                    char\
    \ ch = s.charAt(j);\n                    if (Character.isLetter(ch)) {\n     \
    \                   String s2 = Character.toUpperCase(ch);\n                 \
    \       int index = j;\n                        for (int k = j + 1; k < s.length();\
    \ k++) {\n                            char ch2 = s.charAt(k);\n              \
    \              if (Character.isLetter(ch2)) {\n                              \
    \  String s3 = Character.toUpperCase(ch2);\n                                int\
    \ index2 = k;\n                                if (index == index2) {\n      \
    \                              sb.append(s3);\n                              \
    \  }\n                            }\n                        }\n             \
    \       }\n                }\n            }\n        }\n        return sb.toString();\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq3zerzz4.java:21: error: incompatible types: char cannot be converted\
    \ to String\n                String s = Character.toUpperCase(c);\n          \
    \                                      ^\n/tmp/tmpq3zerzz4.java:25: error: incompatible\
    \ types: char cannot be converted to String\n                        String s2\
    \ = Character.toUpperCase(ch);\n                                             \
    \            ^\n/tmp/tmpq3zerzz4.java:30: error: incompatible types: char cannot\
    \ be converted to String\n                                String s3 = Character.toUpperCase(ch2);\n\
    \                                                                 ^\n3 errors\n"
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] newChars = new char[chars.length];\n\
    \        for(int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n\
    \                newChars[i] = c;\n            }\n            else {\n       \
    \         newChars[i] = Character.toUpperCase(c);\n            }\n        }\n\
    \        return new String(newChars);\nreturn \"\";\n    }\n    public static\
    \ void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp4_fjdh83.java:28: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < message.length(); i++)\
    \ {\n            char c = message.charAt(i);\n            if(c == 'a' || c ==\
    \ 'e' || c == 'i' || c == 'o' || c == 'u') {\n                sb.append(message.charAt(i));\n\
    \            }\n            else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\nreturn \"\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpi691y13q.java:27: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] newChars = new char[chars.length];\n\
    \        Arrays.fill(newChars, 'a');\n        Arrays.fill(newChars, 'A');\n  \
    \      Arrays.fill(newChars, 'b');\n        Arrays.fill(newChars, 'B');\n    \
    \    Arrays.fill(newChars, 'c');\n        Arrays.fill(newChars, 'C');\n      \
    \  Arrays.fill(newChars, 'd');\n        Arrays.fill(newChars, 'D');\n        Arrays.fill(newChars,\
    \ 'e');\n        Arrays.fill(newChars, 'E');\n        Arrays.fill(newChars, 'f');\n\
    \        Arrays.fill(newChars, 'F');\n        Arrays.fill(newChars, 'g');\n  \
    \      Arrays.fill(newChars, 'G');\n        Arrays.fill(newChars, 'h');\n    \
    \    Arrays.fill(newChars, 'H');\n        Arrays.fill(newChars, 'i');\n      \
    \  Arrays.fill(newChars, 'I');\n        Arrays.fill(newChars, 'j');\n        Arrays.fill(newChars,\
    \ 'J');\n        Arrays.fill(newChars, 'k');\n        Arrays.fill(newChars, 'K');\n\
    \        Arrays.fill(newChars, 'l');\n        Arrays.fill(newChars, 'L');\n  \
    \      Arrays.fill(newChars, 'm');\n        Arrays.fill(newChars, 'M');\n    \
    \    Arrays.fill(newChars, 'n');\n        Arrays.fill(newChars, 'N');\n      \
    \  Arrays.fill(newChars, 'o');\n        Arrays.fill(newChars, 'O');\n        Arrays.fill(newChars,\
    \ 'p');\n        Arrays.fill(newChars, 'P');\n        Arrays.fill(newChars, 'q');\n\
    \        Arrays.fill(newChars, 'Q');\n        Arrays.fill(newChars, 'r');\n  \
    \      Arrays.fill(newChars, 'R');\n        Arrays.fill(newChars, 's');\n    \
    \    Arrays.fill(newChars, 'S');\n        Arrays.fill(newChars, 't');\n      \
    \  Arrays.fill(newChars, 'T');\n        Arrays.fill(newChars, 'u');\n        Arrays.fill(newChars,\
    \ 'U');\n        Arrays.fill(newChars, 'v');\n        Arrays.fill(newChars, 'V');\n\
    \        Arrays.fill(newChars, 'w');\n        Arrays.fill(newChars, 'W');\n  \
    \      Arrays.fill(newChars, 'x');\n        Arrays.fill(newChars, 'X');\n    \
    \    Arrays.fill(newChars, 'y');\n\nreturn \"\";\n    }\n    public static void\
    \ main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9pif5n_j.java:71)\n"
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\n        char[] chars = message.toCharArray();\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u') {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n            else {\n                sb.append(c);\n          \
    \  }\n        }\n        return sb.toString();\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpjst7v_v2.java:29: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u') {\n                sb.append(c);\n            }\n \
    \           else {\n                sb.append(Character.toUpperCase(c));\n   \
    \         }\n        }\n        return sb.toString();\nreturn \"\";\n    }\n \
    \   public static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp8f1puhti.java:29: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] vowels = {'a', 'e', 'i', 'o',\
    \ 'u'};\n        Arrays.sort(vowels);\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < chars.length; i++) {\n\
    \            if (vowels.contains(chars[i])) {\n                sb.append(chars[i]);\n\
    \            } else {\n                sb.append(Character.toUpperCase(chars[i]));\n\
    \            }\n        }\n        return sb.toString();\nreturn \"\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7nzgk8ta.java:22: error: cannot find symbol\n            if (vowels.contains(chars[i]))\
    \ {\n                      ^\n  symbol:   method contains(char)\n  location: variable\
    \ vowels of type char[]\n1 error\n"
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        \nreturn\
    \ \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzwe3tkd7.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ letters = message.toCharArray();\n        Arrays.sort(letters);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < letters.length; i++)\
    \ {\n            char c = letters[i];\n            if (Character.isUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        char[] vowels\
    \ = {'a', 'e', 'i', 'o', 'u'};\n        Arrays.sort(vowels);\n        StringBuilder\
    \ sb2 = new StringBuilder();\n        for (int i = 0; i < vowels.length; i++)\
    \ {\n            char c = vowels[i];\n            int index = sb.indexOf(c);\n\
    \            if (index != -1) {\n                sb2.append(sb.charAt(index +\
    \ 1));\n            }\n        }\n        return sb.toString().toUpperCase() +\
    \ sb2.toString();\nreturn \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp78w5dlcn.java:32: error: incompatible types: char cannot be converted\
    \ to String\n            int index = sb.indexOf(c);\n                        \
    \           ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        \nreturn\
    \ \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzwe3tkd7.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] vowels = {'a', 'e', 'i', 'o',\
    \ 'u'};\n        char[] consonants = {'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k',\
    \ 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'};\n        char[]\
    \ newChars = new char[chars.length];\n        for (int i = 0; i < chars.length;\
    \ i++) {\n            if (vowels.contains(chars[i])) {\n                newChars[i]\
    \ = vowels[vowels.indexOf(chars[i]) + 2];\n            } else if (consonants.contains(chars[i]))\
    \ {\n                newChars[i] = consonants[consonants.indexOf(chars[i]) + 2];\n\
    \            } else {\n                newChars[i] = chars[i];\n            }\n\
    \        }\n        return new String(newChars);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpb0kmdnie.java:21: error: cannot find symbol\n            if (vowels.contains(chars[i]))\
    \ {\n                      ^\n  symbol:   method contains(char)\n  location: variable\
    \ vowels of type char[]\n/tmp/tmpb0kmdnie.java:22: error: cannot find symbol\n\
    \                newChars[i] = vowels[vowels.indexOf(chars[i]) + 2];\n       \
    \                                    ^\n  symbol:   method indexOf(char)\n  location:\
    \ variable vowels of type char[]\n/tmp/tmpb0kmdnie.java:23: error: cannot find\
    \ symbol\n            } else if (consonants.contains(chars[i])) {\n          \
    \                       ^\n  symbol:   method contains(char)\n  location: variable\
    \ consonants of type char[]\n/tmp/tmpb0kmdnie.java:24: error: cannot find symbol\n\
    \                newChars[i] = consonants[consonants.indexOf(chars[i]) + 2];\n\
    \                                                   ^\n  symbol:   method indexOf(char)\n\
    \  location: variable consonants of type char[]\n4 errors\n"
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        \nreturn\
    \ \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzwe3tkd7.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u') {\n                sb.append(c);\n            }\n \
    \           else {\n                sb.append(Character.toUpperCase(c));\n   \
    \         }\n        }\n        return sb.toString();\nreturn \"\";\n    }\n \
    \   public static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp8f1puhti.java:29: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] vowels = {'a', 'e', 'i', 'o',\
    \ 'u'};\n        Arrays.sort(vowels);\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < chars.length; i++) {\n            if (vowels.contains(chars[i]))\
    \ {\n                sb.append(chars[i]);\n            }\n            else {\n\
    \                sb.append(Character.toUpperCase(chars[i]));\n            }\n\
    \        }\n        return sb.toString();\nreturn \"\";\n    }\n    public static\
    \ void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn_q2vfdn.java:21: error: cannot find symbol\n            if (vowels.contains(chars[i]))\
    \ {\n                      ^\n  symbol:   method contains(char)\n  location: variable\
    \ vowels of type char[]\n1 error\n"
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < message.length(); i++)\
    \ {\n            char c = message.charAt(i);\n            if('A' <= c && c <=\
    \ 'Z') {\n                sb.append(Character.toUpperCase(c));\n            }\
    \ else if('a' <= c && c <= 'z') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if('0' <= c && c <= '9') {\n                sb.append(c);\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\nreturn \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpygzm1d0c.java:30: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if (Character.isUpperCase(c)) {\n\
    \                sb.append(Character.toLowerCase(c));\n            } else {\n\
    \                sb.append(c);\n            }\n        }\n        char[] vowels\
    \ = {'a', 'e', 'i', 'o', 'u'};\n        Arrays.sort(vowels);\n        char[] vowels2\
    \ = {'a', 'e', 'i', 'o', 'u'};\n        Arrays.sort(vowels2);\n        char[]\
    \ vowels3 = {'a', 'e', 'i', 'o', 'u'};\n        Arrays.sort(vowels3);\n      \
    \  char[] vowels4 = {'a', 'e', 'i', 'o', 'u'};\n        Arrays.sort(vowels4);\n\
    \        char[] vowels5 = {'a', 'e', 'i', 'o', 'u'};\n        Arrays.sort(vowels5);\n\
    \        char[] vowels6 = {'a', 'e', 'i', 'o', 'u'};\n        Arrays.sort(vowels6);\n\
    \        char[] vowels7 = {'a', 'e', 'i', 'o', 'u'};\n        Arrays.sort(vowels7);\n\
    \        char[] vowels8 = {'a', 'e', 'i', 'o', 'u'};\n        Arrays.sort(vowels8);\n\
    \        char[] vowels9 = {'a', 'e', 'i', 'o', 'u'};\n        Arrays.sort(vowels9);\n\
    \        char[] vowels10 = {'a', 'e', 'i', 'o', 'u'};\n        Arrays.sort(vowels10);\n\
    \        char[] vowels11 = {'a', 'e', 'i', 'o', 'u'};\n        Arrays.sort(vowels11);\n\
    \        char[] vowels12 = {'a', 'e', 'i', 'o', 'u'};\n        Arrays.sort(vowels12);\n\
    \        char[] vowels13 = {'a', 'e', 'i', 'o', 'u'};\n        Arrays.sort(vowels13);\n\
    \        char[] vowels14 = {'a', 'e', 'i', 'o', 'u'};\n        Arrays.sort(vowels14);\n\
    \        char[] vowels15 = {'a', 'e', 'i', 'o', 'u'};\n        Arrays.sort(vowels15);\n\
    \        char[] vowels16 = {'a', 'e', 'i', 'o', 'u'};\n        Arrays.sort(vowels16);\n\
    \        char[] vowels17 = {'a', 'e', 'i', 'o', 'u'};\n        Arrays.sort(vowels17);\n\
    \        char[] vowels18 = {'a', 'e', 'i', 'o', 'u'};\n        Arrays.sort(vowels18);\n\
    \        char[] vowels19 = {'a', 'e', 'i', 'o', 'u'};\n        Arrays.sort(vowels19);\n\
    \        char[] vowels20 = {'a', '\nreturn \"\";\n    }\n    public static void\
    \ main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmposx2e5zt.java:65: error: illegal line end in character literal\n\
    \        char[] vowels20 = {'a', '\n                                ^\n1 error\n"
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u') {\n                sb.append(c);\n            } else\
    \ if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n           \
    \     sb.append(c);\n            } else if(c == 'b' || c == 'c' || c == 'd' ||\
    \ c == 'f' || c == 'g' || c == 'h' || c == 'j' || c == 'k' || c == 'l' || c ==\
    \ 'm' || c == 'n' || c == 'p' || c == 'q' || c == 'r' || c == 's' || c == 't'\
    \ || c == 'v' || c == 'w' || c == 'x' || c == 'y' || c == 'z') {\n           \
    \     sb.append(c);\n            } else if(c == 'B' || c == 'C' || c == 'D' ||\
    \ c == 'F' || c == 'G' || c == 'H' || c == 'J' || c == 'K' || c == 'L' || c ==\
    \ 'M' || c == 'N' || c == 'P' || c == 'Q' || c == 'R' || c == 'S' || c == 'T'\
    \ || c == 'V' || c == 'W' || c == 'X' || c == 'Y' || c == 'Z') {\n           \
    \     sb.append(c);\n            } else {\n                sb.append(Character.toLowerCase(c));\n\
    \            }\n        }\n        return sb.toString();\nreturn \"\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpu5czpzfu.java:34: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        \nreturn\
    \ \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzwe3tkd7.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        \nreturn\
    \ \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzwe3tkd7.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] vowels = new char[] { 'a', 'e',\
    \ 'i', 'o', 'u' };\n        char[] consonants = new char[] { 'b', 'c', 'd', 'f',\
    \ 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y',\
    \ 'z' };\n        char[] newChars = new char[chars.length];\n        for(int i\
    \ = 0; i < chars.length; i++) {\n            char c = chars[i];\n            char\
    \ vowel = vowels[i % vowels.length];\n            char consonant = consonants[(i\
    \ + 2) % consonants.length];\n            char newChar = vowel;\n            if(c\
    \ != vowel) {\n                newChar = consonant;\n            }\n         \
    \   newChars[i] = newChar;\n        }\n        return new String(newChars);\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpo3tl7lms.java:31: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\n        \nreturn \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsxvhewk0.java:21)\n"
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if (Character.isLetter(c)) {\n  \
    \              sb.append(Character.toUpperCase(c));\n            } else {\n  \
    \              sb.append(c);\n            }\n        }\n        char[] vowels\
    \ = { 'a', 'e', 'i', 'o', 'u' };\n        Arrays.sort(vowels);\n        StringBuilder\
    \ sb2 = new StringBuilder();\n        for (int i = 0; i < vowels.length; i++)\
    \ {\n            char c = vowels[i];\n            int index = sb.indexOf(c);\n\
    \            if (index != -1) {\n                sb2.append(sb.charAt(index +\
    \ 1));\n            }\n        }\n        return sb.toString() + sb2.toString();\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppwi837zv.java:32: error: incompatible types: char cannot be converted\
    \ to String\n            int index = sb.indexOf(c);\n                        \
    \           ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] newChars = new char[chars.length];\n\
    \        for(int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n\
    \                newChars[i] = 'A';\n            } else if(c == 'b' || c == 'c'\
    \ || c == 'd' || c == 'f' || c == 'g') {\n                newChars[i] = 'B';\n\
    \            } else if(c == 'h' || c == 'j' || c == 'k' || c == 'l' || c == 'm')\
    \ {\n                newChars[i] = 'C';\n            } else if(c == 'n' || c ==\
    \ 'p' || c == 'q' || c == 'r' || c == 's') {\n                newChars[i] = 'D';\n\
    \            } else if(c == 't' || c == 'v' || c == 'w' || c == 'x' || c == 'y')\
    \ {\n                newChars[i] = 'E';\n            } else if(c == 'z') {\n \
    \               newChars[i] = 'F';\n            } else {\n                newChars[i]\
    \ = c;\n            }\n        }\n        return new String(newChars);\nreturn\
    \ \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpil0vjph9.java:37: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] vowels = {'a', 'e', 'i', 'o',\
    \ 'u'};\n        char[] consonants = {'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k',\
    \ 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'};\n        char[]\
    \ newChars = new char[chars.length];\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            int index = Arrays.asList(vowels).indexOf(c);\n\
    \            if(index != -1) {\n                newChars[i] = vowels[index];\n\
    \            } else {\n                index = Arrays.asList(consonants).indexOf(c);\n\
    \                if(index != -1) {\n                    newChars[i] = consonants[index];\n\
    \                } else {\n                    newChars[i] = c;\n            \
    \    }\n            }\n        }\n        return new String(newChars);\nreturn\
    \ \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpa1_h44f2.java:35: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        \nreturn\
    \ \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzwe3tkd7.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Write\
    \ your code here\n        \n        \n        \n        \n        return message;\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpsm3yo51l.java:22: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] newChars = new char[chars.length];\n\
    \        for(int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n\
    \                newChars[i] = 'A';\n            }\n            else if(c == 'A'\
    \ || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n                newChars[i]\
    \ = 'a';\n            }\n            else {\n                newChars[i] = c;\n\
    \            }\n        }\n        return new String(newChars);\nreturn \"\";\n\
    \    }\n    public static void main(String[] args) {\n    assert(encode((\"TEST\"\
    )).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp3tezxge5.java:31: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        StringBuilder sb = new StringBuilder();\n\
    \        for(int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n\
    \                sb.append(c);\n            } else if(c == 'A' || c == 'E' ||\
    \ c == 'I' || c == 'O' || c == 'U') {\n                sb.append(c);\n       \
    \     } else {\n                sb.append(Character.toUpperCase(c));\n       \
    \     }\n        }\n        return sb.toString();\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpq5yntnv8.java:29: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] newChars = new char[chars.length];\n\
    \        for(int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            char newC = c;\n            if(c == 'a' || c == 'e' || c == 'i' ||\
    \ c == 'o' || c == 'u') {\n                newC = c + 1;\n            }\n    \
    \        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n    \
    \            newC = c + 1;\n            }\n            newChars[i] = newC;\n \
    \       }\n        return new String(newChars);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7a3sfdi6.java:22: error: incompatible types: possible lossy conversion\
    \ from int to char\n                newC = c + 1;\n                         ^\n\
    /tmp/tmp7a3sfdi6.java:25: error: incompatible types: possible lossy conversion\
    \ from int to char\n                newC = c + 1;\n                         ^\n\
    2 errors\n"
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        \nreturn\
    \ \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzwe3tkd7.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u') {\n                sb.append(c);\n            }\n \
    \           else {\n                sb.append(Character.toUpperCase(c));\n   \
    \         }\n        }\n        return sb.toString();\nreturn \"\";\n    }\n \
    \   public static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp8f1puhti.java:29: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < message.length(); i++)\
    \ {\n            char c = message.charAt(i);\n            if('A' <= c && c <=\
    \ 'Z') {\n                sb.append(Character.toLowerCase(c));\n            }\
    \ else if('a' <= c && c <= 'z') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if('0' <= c && c <= '9') {\n                sb.append(c);\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\nreturn \"\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpo0nwqiib.java:30: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if (Character.isUpperCase(c)) {\n\
    \                sb.append(Character.toLowerCase(c));\n            } else {\n\
    \                sb.append(c);\n            }\n        }\n        char[] vowels\
    \ = {'a', 'e', 'i', 'o', 'u'};\n        Arrays.sort(vowels);\n        Arrays.stream(vowels).forEach(c\
    \ -> {\n            int index = sb.indexOf(c);\n            if (index != -1) {\n\
    \                sb.deleteCharAt(index);\n                sb.insert(index + 1,\
    \ Character.toUpperCase(sb.charAt(index)));\n            }\n        });\n    \
    \    return sb.toString();\nreturn \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwiw2uaes.java:29: error: no suitable method found for stream(char[])\n\
    \        Arrays.stream(vowels).forEach(c -> {\n              ^\n    method Arrays.<T#1>stream(T#1[])\
    \ is not applicable\n      (inference variable T#1 has incompatible bounds\n \
    \       equality constraints: char\n        lower bounds: Object)\n    method\
    \ Arrays.<T#2>stream(T#2[],int,int) is not applicable\n      (cannot infer type-variable(s)\
    \ T#2\n        (actual and formal argument lists differ in length))\n    method\
    \ Arrays.stream(int[]) is not applicable\n      (argument mismatch; char[] cannot\
    \ be converted to int[])\n    method Arrays.stream(long[]) is not applicable\n\
    \      (argument mismatch; char[] cannot be converted to long[])\n    method Arrays.stream(double[])\
    \ is not applicable\n      (argument mismatch; char[] cannot be converted to double[])\n\
    \  where T#1,T#2 are type-variables:\n    T#1 extends Object declared in method\
    \ <T#1>stream(T#1[])\n    T#2 extends Object declared in method <T#2>stream(T#2[],int,int)\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  stdout: ''
  timestamp: 1659793637
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] newChars = new char[chars.length];\n\
    \        for(int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            if('A' <= c && c <= 'Z') {\n                newChars[i] = c;\n  \
    \          } else if('a' <= c && c <= 'z') {\n                newChars[i] = c;\n\
    \            } else if('0' <= c && c <= '9') {\n                newChars[i] =\
    \ c;\n            } else {\n                newChars[i] = '?';\n            }\n\
    \        }\n        return new String(newChars);\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp7n2jjdhr.java:31: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u') {\n                sb.append(c);\n            }\n \
    \           else if(c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \         else {\n                sb.append(Character.toLowerCase(c));\n     \
    \       }\n        }\n        return sb.toString();\nreturn \"\";\n    }\n   \
    \ public static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp1lm4jz9l.java:32: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793637
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < message.length(); i++)\
    \ {\n            char c = message.charAt(i);\n            if('A' <= c && c <=\
    \ 'Z') {\n                sb.append(Character.toUpperCase(c));\n            }\
    \ else if('a' <= c && c <= 'z') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if('0' <= c && c <= '9') {\n                sb.append(c);\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\nreturn \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpygzm1d0c.java:30: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        \nreturn\
    \ \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzwe3tkd7.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] newChars = new char[chars.length];\n\
    \        Arrays.fill(newChars, 'a');\n        Arrays.fill(newChars, 'A');\n  \
    \      Arrays.fill(newChars, 'b');\n        Arrays.fill(newChars, 'B');\n    \
    \    Arrays.fill(newChars, 'c');\n        Arrays.fill(newChars, 'C');\n      \
    \  Arrays.fill(newChars, 'd');\n        Arrays.fill(newChars, 'D');\n        Arrays.fill(newChars,\
    \ 'e');\n        Arrays.fill(newChars, 'E');\n        Arrays.fill(newChars, 'f');\n\
    \        Arrays.fill(newChars, 'F');\n        Arrays.fill(newChars, 'g');\n  \
    \      Arrays.fill(newChars, 'G');\n        Arrays.fill(newChars, 'h');\n    \
    \    Arrays.fill(newChars, 'H');\n        Arrays.fill(newChars, 'i');\n      \
    \  Arrays.fill(newChars, 'I');\n        Arrays.fill(newChars, 'j');\n        Arrays.fill(newChars,\
    \ 'J');\n        Arrays.fill(newChars, 'k');\n        Arrays.fill(newChars, 'K');\n\
    \        Arrays.fill(newChars, 'l');\n        Arrays.fill(newChars, 'L');\n  \
    \      Arrays.fill(newChars, 'm');\n        Arrays.fill(newChars, 'M');\n    \
    \    Arrays.fill(newChars, 'n');\n        Arrays.fill(newChars, 'N');\n      \
    \  Arrays.fill(newChars, 'o');\n        Arrays.fill(newChars, 'O');\n        Arrays.fill(newChars,\
    \ 'p');\n        Arrays.fill(newChars, 'P');\n        Arrays.fill(newChars, 'q');\n\
    \        Arrays.fill(newChars, 'Q');\n        Arrays.fill(newChars, 'r');\n  \
    \      Arrays.fill(newChars, 'R');\n        Arrays.fill(newChars, 's');\n    \
    \    Arrays.fill(newChars, 'S');\n        Arrays.fill(newChars, 't');\n      \
    \  Arrays.fill(newChars, 'T');\n        Arrays.fill(newChars, 'u');\n        Arrays.fill(newChars,\
    \ 'U');\n        Arrays.fill(newChars, 'v');\n        Arrays.fill(newChars, 'V');\n\
    \        Arrays.fill(newChars, 'w');\n        Arrays.fill(newChars, 'W');\n  \
    \      Arrays.fill(newChars, 'x');\n        Arrays.fill(newChars, 'X');\n    \
    \    Arrays.fill(newChars, 'y');\n\nreturn \"\";\n    }\n    public static void\
    \ main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9pif5n_j.java:71)\n"
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u') {\n                sb.append(c);\n            }\n \
    \           else {\n                sb.append(Character.toUpperCase(c));\n   \
    \         }\n        }\n        return sb.toString();\nreturn \"\";\n    }\n \
    \   public static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp8f1puhti.java:29: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u') {\n                sb.append(c);\n                continue;\n\
    \            }\n            int index = c - 'a';\n            char nextChar =\
    \ chars[++i];\n            if(nextChar == 'a' || nextChar == 'e' || nextChar ==\
    \ 'i' || nextChar == 'o' || nextChar == 'u') {\n                sb.append(nextChar);\n\
    \                continue;\n            }\n            char nextChar2 = chars[++i];\n\
    \            if(nextChar2 == 'a' || nextChar2 == 'e' || nextChar2 == 'i' || nextChar2\
    \ == 'o' || nextChar2 == 'u') {\n                sb.append(nextChar2);\n     \
    \           continue;\n            }\n            char nextChar3 = chars[++i];\n\
    \            if(nextChar3 == 'a' || nextChar3 == 'e' || nextChar3 == 'i' || nextChar3\
    \ == 'o' || nextChar3 == 'u') {\n                sb.append(nextChar3);\n     \
    \           continue;\n            }\n            char nextChar4 = chars[++i];\n\
    \            if(nextChar4 == 'a' || nextChar4 == 'e' || nextChar4 == 'i' || nextChar4\
    \ == 'o' || nextChar4 == 'u') {\n                sb.append(nextChar4);\n     \
    \           continue;\n            }\n            char nextChar5 = chars[++i];\n\
    \            if(nextChar5 == 'a' || nextChar5 == 'e' || nextChar5 == 'i' || nextChar5\
    \ == 'o' || nextChar5 == 'u') {\n                sb.append(nextChar5);\n     \
    \           continue;\n            }\n            char nextChar6 = chars[++i];\n\
    \            if(nextChar6 == 'a' || nextChar6 == 'e' || nextChar6 == 'i' || nextChar6\
    \ == 'o' || nextChar6 == 'u') {\n                sb.append(nextChar6);\n     \
    \           continue;\n            }\n            char nextChar7 = chars[++i];\n\
    \            if(nextChar7 == 'a' || nextChar7 == 'e' || nextChar7 == 'i' || nextChar7\
    \ == 'o' || nextChar7 == 'u') {\n                sb.append(nextChar7);\n     \
    \           continue;\n            }\n            char nextChar8 = chars[++i];\n\
    \            if(nextChar8 == 'a' || nextChar8 == 'e' || nextChar8 == 'i' || nextChar8\
    \ == 'o' || nextChar8 == 'u') {\n                s\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgqz9cx3r.java:63: error: not a statement\n                s\n \
    \               ^\n/tmp/tmpgqz9cx3r.java:63: error: ';' expected\n           \
    \     s\n                 ^\n/tmp/tmpgqz9cx3r.java:66: error: illegal start of\
    \ expression\n    public static void main(String[] args) {\n    ^\n3 errors\n"
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u') {\n                sb.append(c);\n            }\n \
    \           else {\n                sb.append(Character.toUpperCase(c));\n   \
    \         }\n        }\n        return sb.toString();\nreturn \"\";\n    }\n \
    \   public static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp8f1puhti.java:29: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] newChars = new char[chars.length];\n\
    \        for(int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n\
    \                newChars[i] = 'A';\n            } else if(c == 'b' || c == 'c'\
    \ || c == 'd' || c == 'f' || c == 'g') {\n                newChars[i] = 'B';\n\
    \            } else if(c == 'h' || c == 'j' || c == 'k' || c == 'l' || c == 'm')\
    \ {\n                newChars[i] = 'C';\n            } else if(c == 'n' || c ==\
    \ 'p' || c == 'q' || c == 'r' || c == 's') {\n                newChars[i] = 'D';\n\
    \            } else if(c == 't' || c == 'v' || c == 'w' || c == 'x' || c == 'y')\
    \ {\n                newChars[i] = 'E';\n            } else if(c == 'z') {\n \
    \               newChars[i] = 'F';\n            } else {\n                newChars[i]\
    \ = c;\n            }\n        }\n        return new String(newChars);\nreturn\
    \ \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpil0vjph9.java:37: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < message.length(); i++)\
    \ {\n            char c = message.charAt(i);\n            if('A' <= c && c <=\
    \ 'Z') {\n                sb.append(Character.toUpperCase(c));\n            }\
    \ else if('a' <= c && c <= 'z') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if('0' <= c && c <= '9') {\n                sb.append(c);\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\nreturn \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpygzm1d0c.java:30: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        \nreturn\
    \ \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzwe3tkd7.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        \nreturn\
    \ \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzwe3tkd7.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        \nreturn\
    \ \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzwe3tkd7.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] newChars = new char[chars.length];\n\
    \        for(int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n\
    \                newChars[i] = 'A';\n            } else if(c == 'A' || c == 'E'\
    \ || c == 'I' || c == 'O' || c == 'U') {\n                newChars[i] = 'a';\n\
    \            } else if(c == 'B' || c == 'F' || c == 'G' || c == 'H' || c == 'J'\
    \ || c == 'K' || c == 'M' || c == 'N' || c == 'P' || c == 'Q' || c == 'R' || c\
    \ == 'S' || c == 'T' || c == 'V' || c == 'W' || c == 'X' || c == 'Y' || c == 'Z')\
    \ {\n                newChars[i] = 'b';\n            } else if(c == 'C' || c ==\
    \ 'D' || c == 'H' || c == 'J' || c == 'L' || c == 'N' || c == 'P' || c == 'Q'\
    \ || c == 'R' || c == 'S' || c == 'T' || c == 'V' || c == 'W' || c == 'X' || c\
    \ == 'Y' || c == 'Z') {\n                newChars[i] = 'c';\n            } else\
    \ if(c == 'D' || c == 'E' || c == 'F' || c == 'G' || c == 'H' || c == 'J' || c\
    \ == 'K' || c == 'M' || c == 'N' || c == 'P' || c == 'Q' || c == 'R' || c == 'S'\
    \ || c == 'T' || c == 'V' || c == 'W' || c == 'X' || c == 'Y' || c == 'Z') {\n\
    \                newChars[i] = 'd';\n            } else if(c == 'E' || c == 'F'\
    \ || c == 'G' || c == 'H' || c == 'J' || c == 'K' || c == 'M' || c == 'N' || c\
    \ == 'P' || c == 'Q' || c == 'R' || c == 'S' || c == 'T' || c == 'V' || c == 'W'\
    \ || c == 'X' || c == 'Y' || c == 'Z') {\n                newChars[i] = 'e';\n\
    \            } else if(c == 'F' || c == 'G' || c == 'H' || c == 'J' || c == 'K'\
    \ || c == 'M' || c == 'N' || c == 'P' || c == 'Q' || c == 'R' || c == 'S' || c\
    \ == 'T' || c == 'V' || c == 'W' || c == 'X' || c == 'Y' || c == 'Z') {\n    \
    \            newChars[i] = 'f';\n            } else if(c == 'G' || c == '\nreturn\
    \ \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpu1b3vcqz.java:34: error: illegal line end in character literal\n\
    \            } else if(c == 'G' || c == '\n                                  \
    \     ^\n/tmp/tmpu1b3vcqz.java:37: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n2 errors\n"
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] newChars = new char[chars.length];\n\
    \        Arrays.fill(newChars, 'a');\n        Arrays.fill(newChars, 'A');\n  \
    \      Arrays.fill(newChars, 'e');\n        Arrays.fill(newChars, 'E');\n    \
    \    Arrays.fill(newChars, 'i');\n        Arrays.fill(newChars, 'I');\n      \
    \  Arrays.fill(newChars, 'o');\n        Arrays.fill(newChars, 'O');\n        Arrays.fill(newChars,\
    \ 'u');\n        Arrays.fill(newChars, 'U');\n        Arrays.fill(newChars, 'y');\n\
    \        Arrays.fill(newChars, 'Y');\n        Arrays.fill(newChars, 'a');\n  \
    \      Arrays.fill(newChars, 'A');\n        Arrays.fill(newChars, 'e');\n    \
    \    Arrays.fill(newChars, 'E');\n        Arrays.fill(newChars, 'i');\n      \
    \  Arrays.fill(newChars, 'I');\n        Arrays.fill(newChars, 'o');\n        Arrays.fill(newChars,\
    \ 'O');\n        Arrays.fill(newChars, 'u');\n        Arrays.fill(newChars, 'U');\n\
    \        Arrays.fill(newChars, 'y');\n        Arrays.fill(newChars, 'Y');\n  \
    \      Arrays.fill(newChars, 'A');\n        Arrays.fill(newChars, 'a');\n    \
    \    Arrays.fill(newChars, 'A');\n        Arrays.fill(newChars, 'E');\n      \
    \  Arrays.fill(newChars, 'e');\n        Arrays.fill(newChars, 'E');\n        Arrays.fill(newChars,\
    \ 'I');\n        Arrays.fill(newChars, 'i');\n        Arrays.fill(newChars, 'I');\n\
    \        Arrays.fill(newChars, 'O');\n        Arrays.fill(newChars, 'o');\n  \
    \      Arrays.fill(newChars, 'O');\n        Arrays.fill(newChars, 'U');\n    \
    \    Arrays.fill(newChars, 'u');\n        Arrays.fill(newChars, 'U');\n      \
    \  Arrays.fill(newChars, 'Y');\n        Arrays.fill(newChars, 'y');\n        Arrays.fill(newChars,\
    \ 'Y');\n        Arrays.fill(newChars, 'a');\n        Arrays.fill(newChars, 'A');\n\
    \        Arrays.fill(newChars, 'e');\n        Arrays.fill(newChars, 'E');\n  \
    \      Arrays.fill(newChars, 'i');\n        Arrays.fill(newChars, 'I');\n    \
    \    Arrays.fill(newChars, 'o');\nreturn \"\";\n    }\n    public static void\
    \ main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwlexg0fr.java:70)\n"
  stdout: ''
  timestamp: 1659793637
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if (Character.isLetter(c)) {\n  \
    \              String s = Character.toUpperCase(c);\n                for (int\
    \ j = i; j < chars.length; j++) {\n                    if (Character.isLetter(chars[j]))\
    \ {\n                        s = Character.toUpperCase(chars[j]);\n          \
    \              break;\n                    }\n                }\n            \
    \    sb.append(s);\n            } else {\n                sb.append(c);\n    \
    \        }\n        }\n        return sb.toString();\nreturn \"\";\n    }\n  \
    \  public static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf56bipox.java:22: error: incompatible types: char cannot be converted\
    \ to String\n                String s = Character.toUpperCase(c);\n          \
    \                                      ^\n/tmp/tmpf56bipox.java:25: error: incompatible\
    \ types: char cannot be converted to String\n                        s = Character.toUpperCase(chars[j]);\n\
    \                                                 ^\n2 errors\n"
  stdout: ''
  timestamp: 1659793637
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] newChars = new char[chars.length];\n\
    \        for (int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            if (Character.isLetter(c)) {\n                char nextLetter = Character.toUpperCase(chars[i\
    \ + 1]);\n                if (nextLetter == 'A' || nextLetter == 'E' || nextLetter\
    \ == 'I' || nextLetter == 'O' || nextLetter == 'U') {\n                    newChars[i]\
    \ = nextLetter;\n                } else {\n                    newChars[i] = c;\n\
    \                }\n            } else {\n                newChars[i] = c;\n \
    \           }\n        }\n        return new String(newChars);\nreturn \"\";\n\
    \    }\n    public static void main(String[] args) {\n    assert(encode((\"TEST\"\
    )).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp14vg7a24.java:32: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793637
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] newChars = new char[chars.length];\n\
    \        for (int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            if (Character.isUpperCase(c)) {\n                newChars[i] = Character.toLowerCase(c);\n\
    \            } else {\n                newChars[i] = Character.toUpperCase(c);\n\
    \            }\n        }\n        return new String(newChars);\nreturn \"\";\n\
    \    }\n    public static void main(String[] args) {\n    assert(encode((\"TEST\"\
    )).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: '/tmp/tmps9e1i_f4.java:27: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793637
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < message.length(); i++)\
    \ {\n            char c = message.charAt(i);\n            if(c == 'a' || c ==\
    \ 'e' || c == 'i' || c == 'o' || c == 'u') {\n                sb.append(c);\n\
    \            }\n            else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\nreturn \"\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpu5ngm1yj.java:27: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793637
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        StringBuilder sb = new StringBuilder();\n\
    \        for(int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n\
    \                sb.append(Character.toUpperCase(c));\n            } else {\n\
    \                sb.append(c);\n            }\n        }\n        return sb.toString();\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpg6155psp.java:27: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793637
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        \nreturn\
    \ \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzwe3tkd7.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        \nreturn\
    \ \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzwe3tkd7.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < message.length(); i++)\
    \ {\n            char c = message.charAt(i);\n            if(c == 'a' || c ==\
    \ 'e' || c == 'i' || c == 'o' || c == 'u') {\n                sb.append(c);\n\
    \            } else if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\
    \ {\n                sb.append(c);\n            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\nreturn \"\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpwjs11yc1.java:28: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793637
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u') {\n                sb.append(c);\n            } else\
    \ if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n           \
    \     sb.append(c);\n            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\nreturn \"\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp07uydd6x.java:30: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            if (Character.isLetter(c)) {\n                String s = Character.toLowerCase(c);\n\
    \                for (int j = 0; j < s.length(); j++) {\n                    char\
    \ ch = s.charAt(j);\n                    if (Character.isLetter(ch)) {\n     \
    \                   String s2 = Character.toLowerCase(ch);\n                 \
    \       int index = j;\n                        for (int k = j + 1; k < s.length();\
    \ k++) {\n                            char ch2 = s.charAt(k);\n              \
    \              if (Character.isLetter(ch2)) {\n                              \
    \  String s3 = Character.toLowerCase(ch2);\n                                int\
    \ index2 = k;\n                                if (index == index2) {\n      \
    \                              sb.append(s3);\n                              \
    \  }\n                            }\n                        }\n             \
    \       }\n                }\n            }\n        }\n        return sb.toString();\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_wuew73t.java:21: error: incompatible types: char cannot be converted\
    \ to String\n                String s = Character.toLowerCase(c);\n          \
    \                                      ^\n/tmp/tmp_wuew73t.java:25: error: incompatible\
    \ types: char cannot be converted to String\n                        String s2\
    \ = Character.toLowerCase(ch);\n                                             \
    \            ^\n/tmp/tmp_wuew73t.java:30: error: incompatible types: char cannot\
    \ be converted to String\n                                String s3 = Character.toLowerCase(ch2);\n\
    \                                                                 ^\n3 errors\n"
  stdout: ''
  timestamp: 1659793637
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        \nreturn\
    \ \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzwe3tkd7.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] vowels = {'a', 'e', 'i', 'o',\
    \ 'u'};\n        char[] consonants = {'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k',\
    \ 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'};\n        char[]\
    \ newChars = new char[chars.length];\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            if(vowels.contains(chars[i])) {\n                newChars[i]\
    \ = vowels[vowels.indexOf(chars[i]) + 2];\n            }\n            else {\n\
    \                newChars[i] = consonants[consonants.indexOf(chars[i]) - 2];\n\
    \            }\n        }\n        return new String(newChars);\nreturn \"\";\n\
    \    }\n    public static void main(String[] args) {\n    assert(encode((\"TEST\"\
    )).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf4aaqjr0.java:21: error: cannot find symbol\n            if(vowels.contains(chars[i]))\
    \ {\n                     ^\n  symbol:   method contains(char)\n  location: variable\
    \ vowels of type char[]\n/tmp/tmpf4aaqjr0.java:22: error: cannot find symbol\n\
    \                newChars[i] = vowels[vowels.indexOf(chars[i]) + 2];\n       \
    \                                    ^\n  symbol:   method indexOf(char)\n  location:\
    \ variable vowels of type char[]\n/tmp/tmpf4aaqjr0.java:25: error: cannot find\
    \ symbol\n                newChars[i] = consonants[consonants.indexOf(chars[i])\
    \ - 2];\n                                                   ^\n  symbol:   method\
    \ indexOf(char)\n  location: variable consonants of type char[]\n3 errors\n"
  stdout: ''
  timestamp: 1659793637
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] newChars = new char[chars.length];\n\
    \        for(int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            if('A' <= c && c <= 'Z') {\n                newChars[i] = (char)(c\
    \ + 1);\n            } else if('a' <= c && c <= 'z') {\n                newChars[i]\
    \ = (char)(c - 1);\n            } else if('0' <= c && c <= '9') {\n          \
    \      newChars[i] = c;\n            } else {\n                newChars[i] = c;\n\
    \            }\n        }\n        return new String(newChars);\nreturn \"\";\n\
    \    }\n    public static void main(String[] args) {\n    assert(encode((\"TEST\"\
    )).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpzk4uerfx.java:31: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793637
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] vowels = {'a', 'e', 'i', 'o',\
    \ 'u'};\n        char[] newChars = new char[chars.length];\n        Arrays.fill(newChars,\
    \ 'a');\n        Arrays.fill(newChars, 'e');\n        Arrays.fill(newChars, 'i');\n\
    \        Arrays.fill(newChars, 'o');\n        Arrays.fill(newChars, 'u');\n  \
    \      Arrays.fill(newChars, 'A');\n        Arrays.fill(newChars, 'E');\n    \
    \    Arrays.fill(newChars, 'I');\n        Arrays.fill(newChars, 'O');\n      \
    \  Arrays.fill(newChars, 'U');\n        Arrays.fill(newChars, 'a');\n        Arrays.fill(newChars,\
    \ 'e');\n        Arrays.fill(newChars, 'i');\n        Arrays.fill(newChars, 'o');\n\
    \        Arrays.fill(newChars, 'u');\n        Arrays.fill(newChars, 'A');\n  \
    \      Arrays.fill(newChars, 'E');\n        Arrays.fill(newChars, 'I');\n    \
    \    Arrays.fill(newChars, 'O');\n        Arrays.fill(newChars, 'U');\n      \
    \  Arrays.fill(newChars, 'B');\n        Arrays.fill(newChars, 'C');\n        Arrays.fill(newChars,\
    \ 'D');\n        Arrays.fill(newChars, 'F');\n        Arrays.fill(newChars, 'G');\n\
    \        Arrays.fill(newChars, 'H');\n        Arrays.fill(newChars, 'J');\n  \
    \      Arrays.fill(newChars, 'K');\n        Arrays.fill(newChars, 'L');\n    \
    \    Arrays.fill(newChars, 'M');\n        Arrays.fill(newChars, 'N');\n      \
    \  Arrays.fill(newChars, 'P');\n        Arrays.fill(newChars, 'Q');\n        Arrays.fill(newChars,\
    \ 'R');\n        Arrays.fill(newChars, 'S');\n        Arrays.fill(newChars, 'T');\n\
    \        Arrays.fill(newChars, 'V');\n        Arrays.fill(newChars, 'W');\n  \
    \      Arrays.fill(newChars, 'X');\n        Arrays.fill(newChars, 'Y');\n    \
    \    Arrays.fill(newChars, 'Z');\n        Arrays.fill(newChars, '0');\n      \
    \  Arrays.fill(newChars, '1');\n        Arrays.fill(newChars, '2');\n        Arrays.fill(newChars,\
    \ '3');\n        Arrays.fill(newChars, '4');\n        Arrays.fill(newChars, '5');\n\
    \        Arrays.fill(newChar\nreturn \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7gh_yj_a.java:66: error: ')' expected\n        Arrays.fill(newChar\n\
    \                           ^\n1 error\n"
  stdout: ''
  timestamp: 1659793637
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if (Character.isLetter(c)) {\n  \
    \              String s = Character.toString(c);\n                for (int j =\
    \ 0; j < s.length(); j++) {\n                    char ch = s.charAt(j);\n    \
    \                if (Character.isLetter(ch)) {\n                        ch = Character.toUpperCase(ch);\n\
    \                    }\n                    sb.append(ch);\n                }\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\nreturn \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpi1gi431q.java:35: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793637
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        \nreturn\
    \ \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzwe3tkd7.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] newChars = new char[chars.length];\n\
    \        for(int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            char newChar = Character.toUpperCase(c);\n            char newChar2\
    \ = Character.toLowerCase(c);\n            char newChar3 = Character.toUpperCase(newChar2);\n\
    \            char newChar4 = Character.toLowerCase(newChar2);\n            char\
    \ newChar5 = Character.toUpperCase(newChar3);\n            char newChar6 = Character.toLowerCase(newChar3);\n\
    \            char newChar7 = Character.toUpperCase(newChar4);\n            char\
    \ newChar8 = Character.toLowerCase(newChar4);\n            char newChar9 = Character.toUpperCase(newChar5);\n\
    \            char newChar10 = Character.toLowerCase(newChar5);\n            char\
    \ newChar11 = Character.toUpperCase(newChar6);\n            char newChar12 = Character.toLowerCase(newChar6);\n\
    \            char newChar13 = Character.toUpperCase(newChar7);\n            char\
    \ newChar14 = Character.toLowerCase(newChar7);\n            char newChar15 = Character.toUpperCase(newChar8);\n\
    \            char newChar16 = Character.toLowerCase(newChar8);\n            char\
    \ newChar17 = Character.toUpperCase(newChar9);\n            char newChar18 = Character.toLowerCase(newChar9);\n\
    \            char newChar19 = Character.toUpperCase(newChar10);\n            char\
    \ newChar20 = Character.toLowerCase(newChar10);\n            char newChar21 =\
    \ Character.toUpperCase(newChar11);\n            char newChar22 = Character.toLowerCase(newChar11);\n\
    \            char newChar23 = Character.toUpperCase(newChar12);\n            char\
    \ newChar24 = Character.toLowerCase(newChar12);\n            char newChar25 =\
    \ Character.toUpperCase(newChar13);\n            char newChar26 = Character.toLowerCase(newChar13);\n\
    \            char newChar27 = Character.toUpperCase(newChar14);\n            char\
    \ newChar28 = Character.toLowerCase(newChar14);\n            char newChar29 =\
    \ Character.toUpperCase(newChar15);\n            char newChar30 = Character.toLowerCase(newChar15);\n\
    \            char newChar31 = Character.toUpperCase(newChar16);\n            char\
    \ newChar32 = Character.toLowerCase(newChar16);\n            char newChar33 =\
    \ Character.toUpperCase(newChar17);\n            char newChar34 = Character.toLowerCase(newChar17);\n\
    \            char newChar35 = Character.toUpperCase(newChar18);\n            char\
    \ newChar36 = Character.toLowerCase(newChar18);\n            char newChar37\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdknptvc.java:56: error: ';' expected\n            char newChar37\n\
    \                          ^\n/tmp/tmpgdknptvc.java:59: error: illegal start of\
    \ expression\n    public static void main(String[] args) {\n    ^\n2 errors\n"
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        \nreturn\
    \ \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzwe3tkd7.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        \nreturn\
    \ \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzwe3tkd7.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] newChars = new char[chars.length];\n\
    \        for(int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            char newChar = c;\n            if(c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u') {\n                newChar = Character.toUpperCase(c);\n\
    \            }\n            if(c == 'A' || c == 'E' || c == 'I' || c == 'O' ||\
    \ c == 'U') {\n                newChar = Character.toUpperCase(c);\n         \
    \   }\n            newChars[i] = newChar;\n        }\n        return new String(newChars);\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpo75ycsh6.java:30: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ letters = message.toCharArray();\n        Arrays.sort(letters);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < letters.length; i++) {\n\
    \            char c = letters[i];\n            if(c == 'a' || c == 'e' || c ==\
    \ 'i' || c == 'o' || c == 'u') {\n                sb.append(c);\n            }\
    \ else {\n                sb.append(Character.toUpperCase(c));\n            }\n\
    \        }\n        return sb.toString();\nreturn \"\";\n    }\n    public static\
    \ void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmphcvugg05.java:28: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < message.length(); i++)\
    \ {\n            char c = message.charAt(i);\n            if('A' <= c && c <=\
    \ 'Z') {\n                sb.append(Character.toUpperCase(c));\n            }\
    \ else if('a' <= c && c <= 'z') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if('0' <= c && c <= '9') {\n                sb.append(c);\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\nreturn \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpygzm1d0c.java:30: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        \nreturn\
    \ \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzwe3tkd7.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if (Character.isLetter(c)) {\n  \
    \              sb.append(Character.toUpperCase(c));\n            } else {\n  \
    \              sb.append(c);\n            }\n        }\n        char[] vowels\
    \ = { 'a', 'e', 'i', 'o', 'u' };\n        Arrays.sort(vowels);\n        Arrays.stream(vowels).forEach(v\
    \ -> {\n            int index = Arrays.binarySearch(vowels, v);\n            if\
    \ (index >= 0) {\n                sb.append(String.valueOf(vowels[index + 1]));\n\
    \            }\n        });\n        return sb.toString();\nreturn \"\";\n   \
    \ }\n    public static void main(String[] args) {\n    assert(encode((\"TEST\"\
    )).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi2_guhj1.java:29: error: no suitable method found for stream(char[])\n\
    \        Arrays.stream(vowels).forEach(v -> {\n              ^\n    method Arrays.<T#1>stream(T#1[])\
    \ is not applicable\n      (inference variable T#1 has incompatible bounds\n \
    \       equality constraints: char\n        lower bounds: Object)\n    method\
    \ Arrays.<T#2>stream(T#2[],int,int) is not applicable\n      (cannot infer type-variable(s)\
    \ T#2\n        (actual and formal argument lists differ in length))\n    method\
    \ Arrays.stream(int[]) is not applicable\n      (argument mismatch; char[] cannot\
    \ be converted to int[])\n    method Arrays.stream(long[]) is not applicable\n\
    \      (argument mismatch; char[] cannot be converted to long[])\n    method Arrays.stream(double[])\
    \ is not applicable\n      (argument mismatch; char[] cannot be converted to double[])\n\
    \  where T#1,T#2 are type-variables:\n    T#1 extends Object declared in method\
    \ <T#1>stream(T#1[])\n    T#2 extends Object declared in method <T#2>stream(T#2[],int,int)\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  stdout: ''
  timestamp: 1659793637
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\n        \nreturn \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsxvhewk0.java:21)\n"
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Write\
    \ your code here\n        \n        return message;\nreturn \"\";\n    }\n   \
    \ public static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmposx26_1p.java:19: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793637
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        StringBuilder sb = new StringBuilder();\n\
    \        for(int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n\
    \                sb.append(c);\n            }\n            else if(c >= 'A' &&\
    \ c <= 'Z') {\n                sb.append(Character.toUpperCase(c));\n        \
    \    }\n            else if(c >= 'a' && c <= 'z') {\n                sb.append(Character.toLowerCase(c));\n\
    \            }\n            else {\n                sb.append(c);\n          \
    \  }\n        }\n        return sb.toString();\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmphnl1dkky.java:34: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793637
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] newChars = new char[chars.length];\n\
    \        for(int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n\
    \                newChars[i] = 'A';\n            }\n            if(c == 'b' ||\
    \ c == 'c' || c == 'd' || c == 'f' || c == 'g') {\n                newChars[i]\
    \ = 'B';\n            }\n            if(c == 'h' || c == 'j' || c == 'k' || c\
    \ == 'l' || c == 'm') {\n                newChars[i] = 'C';\n            }\n \
    \           if(c == 'n' || c == 'p' || c == 'q' || c == 'r' || c == 's') {\n \
    \               newChars[i] = 'D';\n            }\n            if(c == 't' ||\
    \ c == 'v' || c == 'w' || c == 'x' || c == 'y') {\n                newChars[i]\
    \ = 'E';\n            }\n            if(c == 'z') {\n                newChars[i]\
    \ = 'F';\n            }\n        }\n        return new String(newChars);\nreturn\
    \ \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: '/tmp/tmppwrml1ve.java:40: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793637
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        \nreturn\
    \ \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzwe3tkd7.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if (Character.isLetter(c)) {\n  \
    \              sb.append(Character.toLowerCase(c));\n            } else {\n  \
    \              sb.append(c);\n            }\n        }\n        char[] vowels\
    \ = { 'a', 'e', 'i', 'o', 'u' };\n        Arrays.sort(vowels);\n        StringBuilder\
    \ sb2 = new StringBuilder();\n        for (int i = 0; i < vowels.length; i++)\
    \ {\n            char c = vowels[i];\n            if (sb.length() >= 2) {\n  \
    \              char d = sb.charAt(sb.length() - 2);\n                if (Character.isLetter(c))\
    \ {\n                    sb2.append(Character.toLowerCase(c));\n             \
    \   } else {\n                    sb2.append(d);\n                }\n        \
    \    }\n        }\n        return sb.toString() + sb2.toString();\nreturn \"\"\
    ;\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp38987c5z.java:42: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793637
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] newChars = new char[chars.length];\n\
    \        for(int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            char newC = c;\n            if(Character.isUpperCase(c)) {\n    \
    \            newC = Character.toLowerCase(c);\n            }\n            if(Character.isLowerCase(c))\
    \ {\n                newC = Character.toUpperCase(c);\n            }\n       \
    \     if(Character.isLetter(c)) {\n                for(int j = i; j < chars.length;\
    \ j++) {\n                    char d = chars[j];\n                    if(Character.isLetter(d)\
    \ && Character.isUpperCase(c)) {\n                        newC = Character.toLowerCase(d);\n\
    \                        break;\n                    }\n                }\n  \
    \          }\n            newChars[i] = newC;\n        }\n        return new String(newChars);\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: '/tmp/tmptbpfddo1.java:39: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793637
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < message.length(); i++)\
    \ {\n            char c = message.charAt(i);\n            if('A' <= c && c <=\
    \ 'Z') {\n                sb.append(Character.toUpperCase(c));\n            }\
    \ else if('a' <= c && c <= 'z') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if('0' <= c && c <= '9') {\n                sb.append(c);\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\nreturn \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpygzm1d0c.java:30: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if (Character.isLetter(c)) {\n  \
    \              String s = Character.toUpperCase(c);\n                for (int\
    \ j = 0; j < s.length(); j++) {\n                    char d = s.charAt(j);\n \
    \                   if (Character.isLetter(d) && j > 0 && s.charAt(j - 1) != d)\
    \ {\n                        sb.append(d);\n                        break;\n \
    \                   }\n                }\n            }\n        }\n        return\
    \ sb.toString();\nreturn \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0cmze_x4.java:22: error: incompatible types: char cannot be converted\
    \ to String\n                String s = Character.toUpperCase(c);\n          \
    \                                      ^\n1 error\n"
  stdout: ''
  timestamp: 1659793637
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] newChars = new char[chars.length];\n\
    \        for (int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            if (Character.isLetter(c)) {\n                c = Character.toUpperCase(c);\n\
    \                c = Character.toLowerCase(c);\n                newChars[i] =\
    \ c;\n            }\n        }\n        return new String(newChars);\nreturn \"\
    \";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp_1xbibac.java:27: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793637
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        StringBuilder sb = new StringBuilder();\n\
    \        for(int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n\
    \                sb.append(Character.toUpperCase(c));\n            } else if(c\
    \ == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\nreturn \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpo1z3yz73.java:29: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793637
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] newChars = new char[chars.length];\n\
    \        Arrays.fill(newChars, 'a');\n        Arrays.fill(newChars, 'A');\n  \
    \      Arrays.fill(newChars, 'b');\n        Arrays.fill(newChars, 'B');\n    \
    \    Arrays.fill(newChars, 'c');\n        Arrays.fill(newChars, 'C');\n      \
    \  Arrays.fill(newChars, 'd');\n        Arrays.fill(newChars, 'D');\n        Arrays.fill(newChars,\
    \ 'e');\n        Arrays.fill(newChars, 'E');\n        Arrays.fill(newChars, 'f');\n\
    \        Arrays.fill(newChars, 'F');\n        Arrays.fill(newChars, 'g');\n  \
    \      Arrays.fill(newChars, 'G');\n        Arrays.fill(newChars, 'h');\n    \
    \    Arrays.fill(newChars, 'H');\n        Arrays.fill(newChars, 'i');\n      \
    \  Arrays.fill(newChars, 'I');\n        Arrays.fill(newChars, 'j');\n        Arrays.fill(newChars,\
    \ 'J');\n        Arrays.fill(newChars, 'k');\n        Arrays.fill(newChars, 'K');\n\
    \        Arrays.fill(newChars, 'l');\n        Arrays.fill(newChars, 'L');\n  \
    \      Arrays.fill(newChars, 'm');\n        Arrays.fill(newChars, 'M');\n    \
    \    Arrays.fill(newChars, 'n');\n        Arrays.fill(newChars, 'N');\n      \
    \  Arrays.fill(newChars, 'o');\n        Arrays.fill(newChars, 'O');\n        Arrays.fill(newChars,\
    \ 'p');\n        Arrays.fill(newChars, 'P');\n        Arrays.fill(newChars, 'q');\n\
    \        Arrays.fill(newChars, 'Q');\n        Arrays.fill(newChars, 'r');\n  \
    \      Arrays.fill(newChars, 'R');\n        Arrays.fill(newChars, 's');\n    \
    \    Arrays.fill(newChars, 'S');\n        Arrays.fill(newChars, 't');\n      \
    \  Arrays.fill(newChars, 'T');\n        Arrays.fill(newChars, 'u');\n        Arrays.fill(newChars,\
    \ 'U');\n        Arrays.fill(newChars, 'v');\n        Arrays.fill(newChars, 'V');\n\
    \        Arrays.fill(newChars, 'w');\n        Arrays.fill(newChars, 'W');\n  \
    \      Arrays.fill(newChars, 'x');\n        Arrays.fill(newChars, 'X');\n    \
    \    Arrays.fill(newChars, 'y');\n\nreturn \"\";\n    }\n    public static void\
    \ main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9pif5n_j.java:71)\n"
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] newChars = new char[chars.length];\n\
    \        for (int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            if (Character.isLetter(c)) {\n                String s = Character.toUpperCase(c);\n\
    \                String s2 = Character.toLowerCase(c);\n                for (int\
    \ j = 0; j < s.length(); j++) {\n                    char d = s.charAt(j);\n \
    \                   char d2 = s2.charAt(j);\n                    if (d == 'A'\
    \ || d == 'E' || d == 'I' || d == 'O' || d == 'U') {\n                       \
    \ newChars[i + j] = d;\n                    } else if (d2 == 'A' || d2 == 'E'\
    \ || d2 == 'I' || d2 == 'O' || d2 == 'U') {\n                        newChars[i\
    \ + j] = d2;\n                    } else {\n                        newChars[i\
    \ + j] = d;\n                    }\n                }\n            } else {\n\
    \                newChars[i] = c;\n            }\n        }\n        return new\
    \ String(newChars);\nreturn \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjxusuimo.java:21: error: incompatible types: char cannot be converted\
    \ to String\n                String s = Character.toUpperCase(c);\n          \
    \                                      ^\n/tmp/tmpjxusuimo.java:22: error: incompatible\
    \ types: char cannot be converted to String\n                String s2 = Character.toLowerCase(c);\n\
    \                                                 ^\n2 errors\n"
  stdout: ''
  timestamp: 1659793637
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u') {\n                sb.append(c);\n            } else\
    \ if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n           \
    \     sb.append(c);\n            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\nreturn \"\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp07uydd6x.java:30: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u') {\n                sb.append(c);\n            }\n \
    \           else {\n                sb.append(Character.toUpperCase(c));\n   \
    \         }\n        }\n        return sb.toString();\nreturn \"\";\n    }\n \
    \   public static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp8f1puhti.java:29: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] newChars = new char[chars.length];\n\
    \        for(int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            char newChar = Character.toUpperCase(c);\n            char newChar2\
    \ = Character.toLowerCase(c);\n            char newChar3 = Character.toUpperCase(newChar2);\n\
    \            char newChar4 = Character.toLowerCase(newChar2);\n            char\
    \ newChar5 = Character.toUpperCase(newChar3);\n            char newChar6 = Character.toLowerCase(newChar3);\n\
    \            char newChar7 = Character.toUpperCase(newChar4);\n            char\
    \ newChar8 = Character.toLowerCase(newChar4);\n            char newChar9 = Character.toUpperCase(newChar5);\n\
    \            char newChar10 = Character.toLowerCase(newChar5);\n            char\
    \ newChar11 = Character.toUpperCase(newChar6);\n            char newChar12 = Character.toLowerCase(newChar6);\n\
    \            char newChar13 = Character.toUpperCase(newChar7);\n            char\
    \ newChar14 = Character.toLowerCase(newChar7);\n            char newChar15 = Character.toUpperCase(newChar8);\n\
    \            char newChar16 = Character.toLowerCase(newChar8);\n            char\
    \ newChar17 = Character.toUpperCase(newChar9);\n            char newChar18 = Character.toLowerCase(newChar9);\n\
    \            char newChar19 = Character.toUpperCase(newChar10);\n            char\
    \ newChar20 = Character.toLowerCase(newChar10);\n            char newChar21 =\
    \ Character.toUpperCase(newChar11);\n            char newChar22 = Character.toLowerCase(newChar11);\n\
    \            char newChar23 = Character.toUpperCase(newChar12);\n            char\
    \ newChar24 = Character.toLowerCase(newChar12);\n            char newChar25 =\
    \ Character.toUpperCase(newChar13);\n            char newChar26 = Character.toLowerCase(newChar13);\n\
    \            char newChar27 = Character.toUpperCase(newChar14);\n            char\
    \ newChar28 = Character.toLowerCase(newChar14);\n            char newChar29 =\
    \ Character.toUpperCase(newChar15);\n            char newChar30 = Character.toLowerCase(newChar15);\n\
    \            char newChar31 = Character.toUpperCase(newChar16);\n            char\
    \ newChar32 = Character.toLowerCase(newChar16);\n            char newChar33 =\
    \ Character.toUpperCase(newChar17);\n            char newChar34 = Character.toLowerCase(newChar17);\n\
    \            char newChar35 = Character.toUpperCase(newChar18);\n            char\
    \ newChar36 = Character.toLowerCase(newChar18);\n            char newChar37\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdknptvc.java:56: error: ';' expected\n            char newChar37\n\
    \                          ^\n/tmp/tmpgdknptvc.java:59: error: illegal start of\
    \ expression\n    public static void main(String[] args) {\n    ^\n2 errors\n"
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        StringBuilder sb = new StringBuilder();\n\
    \        for(int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n\
    \                sb.append(c);\n            } else if(c == 'A' || c == 'E' ||\
    \ c == 'I' || c == 'O' || c == 'U') {\n                sb.append(c);\n       \
    \     } else {\n                sb.append(Character.toUpperCase(c));\n       \
    \     }\n        }\n        return sb.toString();\nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpq5yntnv8.java:29: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if (Character.isLetter(c)) {\n  \
    \              sb.append(Character.toUpperCase(c));\n            } else {\n  \
    \              sb.append(c);\n            }\n        }\n        char[] vowels\
    \ = {'a', 'e', 'i', 'o', 'u'};\n        Arrays.sort(vowels);\n        Arrays.stream(vowels).forEach(v\
    \ -> {\n            int index = sb.indexOf(v);\n            if (index != -1) {\n\
    \                sb.setCharAt(index, sb.charAt(index + 1));\n            }\n \
    \       });\n        return sb.toString();\nreturn \"\";\n    }\n    public static\
    \ void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpe81kmf46.java:29: error: no suitable method found for stream(char[])\n\
    \        Arrays.stream(vowels).forEach(v -> {\n              ^\n    method Arrays.<T#1>stream(T#1[])\
    \ is not applicable\n      (inference variable T#1 has incompatible bounds\n \
    \       equality constraints: char\n        lower bounds: Object)\n    method\
    \ Arrays.<T#2>stream(T#2[],int,int) is not applicable\n      (cannot infer type-variable(s)\
    \ T#2\n        (actual and formal argument lists differ in length))\n    method\
    \ Arrays.stream(int[]) is not applicable\n      (argument mismatch; char[] cannot\
    \ be converted to int[])\n    method Arrays.stream(long[]) is not applicable\n\
    \      (argument mismatch; char[] cannot be converted to long[])\n    method Arrays.stream(double[])\
    \ is not applicable\n      (argument mismatch; char[] cannot be converted to double[])\n\
    \  where T#1,T#2 are type-variables:\n    T#1 extends Object declared in method\
    \ <T#1>stream(T#1[])\n    T#2 extends Object declared in method <T#2>stream(T#2[],int,int)\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if (Character.isLetter(c)) {\n  \
    \              sb.append(Character.toUpperCase(c));\n            } else {\n  \
    \              sb.append(c);\n            }\n        }\n        return sb.toString();\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp5rn_m65d.java:28: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793637
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] newChars = new char[chars.length];\n\
    \        Arrays.fill(newChars, 'a');\n        Arrays.fill(newChars, 'A');\n  \
    \      Arrays.fill(newChars, 'b');\n        Arrays.fill(newChars, 'B');\n    \
    \    Arrays.fill(newChars, 'c');\n        Arrays.fill(newChars, 'C');\n      \
    \  Arrays.fill(newChars, 'd');\n        Arrays.fill(newChars, 'D');\n        Arrays.fill(newChars,\
    \ 'e');\n        Arrays.fill(newChars, 'E');\n        Arrays.fill(newChars, 'f');\n\
    \        Arrays.fill(newChars, 'F');\n        Arrays.fill(newChars, 'g');\n  \
    \      Arrays.fill(newChars, 'G');\n        Arrays.fill(newChars, 'h');\n    \
    \    Arrays.fill(newChars, 'H');\n        Arrays.fill(newChars, 'i');\n      \
    \  Arrays.fill(newChars, 'I');\n        Arrays.fill(newChars, 'j');\n        Arrays.fill(newChars,\
    \ 'J');\n        Arrays.fill(newChars, 'k');\n        Arrays.fill(newChars, 'K');\n\
    \        Arrays.fill(newChars, 'l');\n        Arrays.fill(newChars, 'L');\n  \
    \      Arrays.fill(newChars, 'm');\n        Arrays.fill(newChars, 'M');\n    \
    \    Arrays.fill(newChars, 'n');\n        Arrays.fill(newChars, 'N');\n      \
    \  Arrays.fill(newChars, 'o');\n        Arrays.fill(newChars, 'O');\n        Arrays.fill(newChars,\
    \ 'p');\n        Arrays.fill(newChars, 'P');\n        Arrays.fill(newChars, 'q');\n\
    \        Arrays.fill(newChars, 'Q');\n        Arrays.fill(newChars, 'r');\n  \
    \      Arrays.fill(newChars, 'R');\n        Arrays.fill(newChars, 's');\n    \
    \    Arrays.fill(newChars, 'S');\n        Arrays.fill(newChars, 't');\n      \
    \  Arrays.fill(newChars, 'T');\n        Arrays.fill(newChars, 'u');\n        Arrays.fill(newChars,\
    \ 'U');\n        Arrays.fill(newChars, 'v');\n        Arrays.fill(newChars, 'V');\n\
    \        Arrays.fill(newChars, 'w');\n        Arrays.fill(newChars, 'W');\n  \
    \      Arrays.fill(newChars, 'x');\n        Arrays.fill(newChars, 'X');\n    \
    \    Arrays.fill(newChars, 'y');\n\nreturn \"\";\n    }\n    public static void\
    \ main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9pif5n_j.java:71)\n"
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] newChars = new char[chars.length];\n\
    \        for(int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n\
    \                newChars[i] = c;\n            }\n            else {\n       \
    \         newChars[i] = Character.toUpperCase(c);\n            }\n        }\n\
    \        return new String(newChars);\nreturn \"\";\n    }\n    public static\
    \ void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp4_fjdh83.java:28: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if (Character.isLetter(c)) {\n  \
    \              sb.append(Character.toUpperCase(c));\n            } else {\n  \
    \              sb.append(c);\n            }\n        }\n        return sb.toString();\n\
    return \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp5rn_m65d.java:28: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793637
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if('A' <= c && c <= 'Z') {\n    \
    \            sb.append(Character.toUpperCase(c));\n            } else if('a' <=\
    \ c && c <= 'z') {\n                sb.append(Character.toLowerCase(c));\n   \
    \         } else if('0' <= c && c <= '9') {\n                sb.append(c);\n \
    \           } else {\n                sb.append(Character.toUpperCase(c));\n \
    \           }\n        }\n        return sb.toString();\nreturn \"\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmplz9y0sji.java:32: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793637
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        StringBuilder sb = new StringBuilder();\n\
    \        for(int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            if('A' <= c && c <= 'Z') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if('a' <= c && c <= 'z') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if('0' <= c && c <= '9') {\n                sb.append(c);\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\nreturn \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpcszy7a_t.java:31: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793637
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if (Character.isLetter(c)) {\n  \
    \              sb.append(Character.toUpperCase(c));\n            } else {\n  \
    \              sb.append(c);\n            }\n        }\n        char[] vowels\
    \ = {'a', 'e', 'i', 'o', 'u'};\n        Arrays.sort(vowels);\n        StringBuilder\
    \ sb2 = new StringBuilder();\n        for (int i = 0; i < vowels.length; i++)\
    \ {\n            char c = vowels[i];\n            int index = sb.indexOf(c);\n\
    \            if (index != -1) {\n                sb2.append(sb.charAt(index));\n\
    \                sb2.append(sb.charAt(index + 2));\n            } else {\n   \
    \             sb2.append(c);\n            }\n        }\n        return sb.toString().toUpperCase()\
    \ + sb2.toString();\nreturn \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplti3otes.java:32: error: incompatible types: char cannot be converted\
    \ to String\n            int index = sb.indexOf(c);\n                        \
    \           ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1659793637
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] newChars = new char[chars.length];\n\
    \        for (int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            if (Character.isUpperCase(c)) {\n                newChars[i] = Character.toLowerCase(c);\n\
    \            } else {\n                newChars[i] = Character.toUpperCase(c);\n\
    \            }\n        }\n        return String.valueOf(newChars);\nreturn \"\
    \";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpxwr4gozz.java:27: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793637
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < message.length(); i++)\
    \ {\n            char c = message.charAt(i);\n            if('A' <= c && c <=\
    \ 'Z') {\n                sb.append(Character.toUpperCase(c));\n            }\
    \ else if('a' <= c && c <= 'z') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if('0' <= c && c <= '9') {\n                sb.append(c);\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\nreturn \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpygzm1d0c.java:30: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if (Character.isLetter(c)) {\n  \
    \              String s = Character.toString(c);\n                for (int j =\
    \ 0; j < s.length(); j++) {\n                    char ch = s.charAt(j);\n    \
    \                if (Character.isLetter(ch)) {\n                        String\
    \ s2 = Character.toString(ch);\n                        int index = j;\n     \
    \                   for (int k = j + 1; k < s.length(); k++) {\n             \
    \               char ch2 = s.charAt(k);\n                            if (Character.isLetter(ch2))\
    \ {\n                                String s3 = Character.toString(ch2);\n  \
    \                              int index2 = k;\n                             \
    \   if (index == index2) {\n                                    sb.append(s3);\n\
    \                                }\n                            }\n          \
    \              }\n                    }\n                }\n            }\n  \
    \      }\n        return sb.toString();\nreturn \"\";\n    }\n    public static\
    \ void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpos800npa.java:43: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793637
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] newChars = new char[chars.length];\n\
    \        for(int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n\
    \                newChars[i] = 'A';\n            }\n            if(c == 'b' ||\
    \ c == 'c' || c == 'd' || c == 'f' || c == 'g') {\n                newChars[i]\
    \ = 'B';\n            }\n            if(c == 'h' || c == 'j' || c == 'k' || c\
    \ == 'l' || c == 'm') {\n                newChars[i] = 'C';\n            }\n \
    \           if(c == 'n' || c == 'p' || c == 'q' || c == 'r' || c == 's') {\n \
    \               newChars[i] = 'D';\n            }\n            if(c == 't' ||\
    \ c == 'v' || c == 'w' || c == 'x' || c == 'y') {\n                newChars[i]\
    \ = 'E';\n            }\n            if(c == 'z') {\n                newChars[i]\
    \ = 'F';\n            }\n        }\n        return new String(newChars);\nreturn\
    \ \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: '/tmp/tmppwrml1ve.java:40: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793637
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ letters = message.toCharArray();\n        StringBuilder sb = new StringBuilder();\n\
    \        for(int i = 0; i < letters.length; i++) {\n            char c = letters[i];\n\
    \            if('A' <= c && c <= 'Z') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if('a' <= c && c <= 'z') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if('0' <= c && c <= '9') {\n                sb.append(c);\n\
    \            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\nreturn \"\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmppii68_e9.java:31: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793637
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] newChars = new char[chars.length];\n\
    \        Arrays.fill(newChars, 'a');\n        Arrays.fill(newChars, 'A');\n  \
    \      Arrays.fill(newChars, 'b');\n        Arrays.fill(newChars, 'B');\n    \
    \    Arrays.fill(newChars, 'c');\n        Arrays.fill(newChars, 'C');\n      \
    \  Arrays.fill(newChars, 'd');\n        Arrays.fill(newChars, 'D');\n        Arrays.fill(newChars,\
    \ 'e');\n        Arrays.fill(newChars, 'E');\n        Arrays.fill(newChars, 'f');\n\
    \        Arrays.fill(newChars, 'F');\n        Arrays.fill(newChars, 'g');\n  \
    \      Arrays.fill(newChars, 'G');\n        Arrays.fill(newChars, 'h');\n    \
    \    Arrays.fill(newChars, 'H');\n        Arrays.fill(newChars, 'i');\n      \
    \  Arrays.fill(newChars, 'I');\n        Arrays.fill(newChars, 'j');\n        Arrays.fill(newChars,\
    \ 'J');\n        Arrays.fill(newChars, 'k');\n        Arrays.fill(newChars, 'K');\n\
    \        Arrays.fill(newChars, 'l');\n        Arrays.fill(newChars, 'L');\n  \
    \      Arrays.fill(newChars, 'm');\n        Arrays.fill(newChars, 'M');\n    \
    \    Arrays.fill(newChars, 'n');\n        Arrays.fill(newChars, 'N');\n      \
    \  Arrays.fill(newChars, 'o');\n        Arrays.fill(newChars, 'O');\n        Arrays.fill(newChars,\
    \ 'p');\n        Arrays.fill(newChars, 'P');\n        Arrays.fill(newChars, 'q');\n\
    \        Arrays.fill(newChars, 'Q');\n        Arrays.fill(newChars, 'r');\n  \
    \      Arrays.fill(newChars, 'R');\n        Arrays.fill(newChars, 's');\n    \
    \    Arrays.fill(newChars, 'S');\n        Arrays.fill(newChars, 't');\n      \
    \  Arrays.fill(newChars, 'T');\n        Arrays.fill(newChars, 'u');\n        Arrays.fill(newChars,\
    \ 'U');\n        Arrays.fill(newChars, 'v');\n        Arrays.fill(newChars, 'V');\n\
    \        Arrays.fill(newChars, 'w');\n        Arrays.fill(newChars, 'W');\n  \
    \      Arrays.fill(newChars, 'x');\n        Arrays.fill(newChars, 'X');\n    \
    \    Arrays.fill(newChars, 'y');\n\nreturn \"\";\n    }\n    public static void\
    \ main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n\
    \    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9pif5n_j.java:71)\n"
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        \nreturn\
    \ \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzwe3tkd7.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] newChars = new char[chars.length];\n\
    \        for (int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            if (Character.isUpperCase(c)) {\n                newChars[i] = Character.toLowerCase(c);\n\
    \            } else {\n                newChars[i] = Character.toUpperCase(c);\n\
    \            }\n        }\n        return new String(newChars);\nreturn \"\";\n\
    \    }\n    public static void main(String[] args) {\n    assert(encode((\"TEST\"\
    )).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: '/tmp/tmps9e1i_f4.java:27: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793637
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        char[] newChars = new char[chars.length];\n\
    \        for(int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            if('A' <= c && c <= 'Z') {\n                newChars[i] = c;\n  \
    \          } else if('a' <= c && c <= 'z') {\n                newChars[i] = c;\n\
    \            } else if('0' <= c && c <= '9') {\n                newChars[i] =\
    \ c;\n            } else if('!' <= c && c <= '@') {\n                newChars[i]\
    \ = c;\n            } else if('?' <= c && c <= '[') {\n                newChars[i]\
    \ = c;\n            } else if('*' <= c && c <= '^') {\n                newChars[i]\
    \ = c;\n            } else if('&' <= c && c <= '`') {\n                newChars[i]\
    \ = c;\n            } else if('%' <= c && c <= '{') {\n                newChars[i]\
    \ = c;\n            } else if('+' <= c && c <= '|') {\n                newChars[i]\
    \ = c;\n            } else if('-' <= c && c <= '_') {\n                newChars[i]\
    \ = c;\n            } else if('=' <= c && c <= '~') {\n                newChars[i]\
    \ = c;\n            } else if('|' <= c && c <= '~') {\n                newChars[i]\
    \ = c;\n            } else if(';' <= c && c <= '<') {\n                newChars[i]\
    \ = c;\n            } else if('>' <= c && c <= '?') {\n                newChars[i]\
    \ = c;\n            } else if(',' <= c && c <= '@') {\n                newChars[i]\
    \ = c;\n            } else if('.' <= c && c <= '~') {\n                newChars[i]\
    \ = c;\n            } else if('/' <= c && c <= '{') {\n                newChars[i]\
    \ = c;\n            } else if(':' <= c && c <= '~') {\n                newChars[i]\
    \ = c;\n            } else if(';' <= c && c <= '<') {\n                newChars[i]\
    \ = c;\n            } else if('>' <= c && c <= '?') {\n                newChars[i]\
    \ = c;\n            } else if(',' <= c && c <= '@') {\n                newChars[i]\
    \ = c;\n            } else if('.' <= c && c <= '~') {\n                newChars[i]\
    \ = c;\n            } else if('/' <= c && c <= '{') {\n                newChars[i]\
    \ = c;\n            } else if(':' <= c && c <= '~') {\n                newChars[i]\
    \ = c;\n            } else if(';' <= c && c \nreturn \"\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa3o_cmqu.java:68: error: ')' expected\n            } else if(';'\
    \ <= c && c \n                                   ^\n/tmp/tmpa3o_cmqu.java:71:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n    ^\n2 errors\n"
  stdout: ''
  timestamp: 1659793637
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < message.length(); i++)\
    \ {\n            char c = message.charAt(i);\n            if('A' <= c && c <=\
    \ 'Z') {\n                sb.append(Character.toUpperCase(c));\n            }\
    \ else if('a' <= c && c <= 'z') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if('0' <= c && c <= '9') {\n                sb.append(c);\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\nreturn \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpygzm1d0c.java:30: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u') {\n                sb.append(c);\n                continue;\n\
    \            }\n            int index = c - 'a';\n            int nextIndex =\
    \ index + 2;\n            char nextChar = chars[nextIndex];\n            char\
    \ nextNextChar = chars[nextIndex + 1];\n            if(nextChar == 'a' || nextChar\
    \ == 'e' || nextChar == 'i' || nextChar == 'o' || nextChar == 'u') {\n       \
    \         sb.append(nextChar);\n                sb.append(nextNextChar);\n   \
    \             continue;\n            }\n            sb.append(c);\n        }\n\
    \        return sb.toString();\nreturn \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"\
    Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\"\
    )));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\"\
    )));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW\
    \ wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpf1algk2t.java:37: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793637
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u') {\n                sb.append(c);\n            }\n \
    \           else {\n                sb.append(Character.toUpperCase(c));\n   \
    \         }\n        }\n        return sb.toString();\nreturn \"\";\n    }\n \
    \   public static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp8f1puhti.java:29: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793636
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        // Your\
    \ code here\nreturn \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\"\
    )).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n\
    \    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n\
    \    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT\
    \ Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_qhg8eb.java:20)\n"
  stdout: ''
  timestamp: 1659793635
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if (Character.isLetter(c)) {\n  \
    \              String replacement = \n                    Character.toUpperCase(Character.toLowerCase(c));\n\
    \                sb.append(replacement);\n            } else {\n             \
    \   sb.append(c);\n            }\n        }\n        return sb.toString();\nreturn\
    \ \"\";\n    }\n    public static void main(String[] args) {\n    assert(encode((\"\
    TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\"\
    )));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"\
    This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgx7x_u5x.java:23: error: incompatible types: char cannot be converted\
    \ to String\n                    Character.toUpperCase(Character.toLowerCase(c));\n\
    \                                         ^\n1 error\n"
  stdout: ''
  timestamp: 1659793637
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    public static String encode(String message) {\n        char[]\
    \ chars = message.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u') {\n                sb.append(c);\n            } else\
    \ if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n           \
    \     sb.append(c);\n            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\nreturn \"\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(encode((\"TEST\")).equals((\"\
    tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"\
    YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"\
    tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp07uydd6x.java:30: error: unreachable statement

    return "";

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659793635

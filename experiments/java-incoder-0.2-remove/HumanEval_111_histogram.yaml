name: HumanEval_111_histogram
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given a string representing a space separated lowercase\
  \ letters, return a dictionary\n    // of the letter with the most repetition and\
  \ containing the corresponding count.\n    // If several letters have the same occurrence,\
  \ return all of them.\n    // Example:\n    public static HashMap<String,Integer>\
  \ histogram(String test) {\n"
tests: "return new HashMap<String,Integer>();\n    }\n    public static void main(String[]\
  \ args) {\n    assert(histogram((\"a b b a\")).equals((new HashMap<String,Integer>(Map.of(\"\
  a\", 2, \"b\", 2)))));\n    assert(histogram((\"a b c a b\")).equals((new HashMap<String,Integer>(Map.of(\"\
  a\", 2, \"b\", 2)))));\n    assert(histogram((\"a b c d g\")).equals((new HashMap<String,Integer>(Map.of(\"\
  a\", 1, \"b\", 1, \"c\", 1, \"d\", 1, \"g\", 1)))));\n    assert(histogram((\"r\
  \ t g\")).equals((new HashMap<String,Integer>(Map.of(\"r\", 1, \"t\", 1, \"g\",\
  \ 1)))));\n    assert(histogram((\"b b b b a\")).equals((new HashMap<String,Integer>(Map.of(\"\
  b\", 4)))));\n    assert(histogram((\"r t g\")).equals((new HashMap<String,Integer>(Map.of(\"\
  r\", 1, \"t\", 1, \"g\", 1)))));\n    assert(histogram((\"\")).equals((new HashMap<String,Integer>())));\n\
  \    assert(histogram((\"a\")).equals((new HashMap<String,Integer>(Map.of(\"a\"\
  , 1)))));\n    }\n\n}\n"
completions: []
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "\n    }\n"

name: HumanEval_68_pluck
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // \"Given an array representing a branch of a tree that has\
  \ non-negative integer nodes\n    // your task is to pluck one of the nodes and\
  \ return it.\n    // The plucked node should be the node with the smallest even\
  \ value.\n    // If multiple nodes with the same smallest even value are found return\
  \ the node that has smallest index.\n    // The plucked node should be returned\
  \ in a list, [ smalest_value, its index ],\n    // If there are no even values or\
  \ the given array is empty, return [].\n    // Example 1:\n    // Explanation: 2\
  \ has the smallest even value, and 2 has the smallest index.\n    // Example 2:\n\
  \    // Explanation: 2 has the smallest even value, and 2 has the smallest index.\n\
  \    // Example 3:\n    // Example 4:\n    // Explanation: 0 is the smallest value,\
  \ but  there are two zeros,\n    // so we will choose the first zero, which has\
  \ the smallest index.\n    // Constraints:\n    // * 1 <= nodes.length <= 10000\n\
  \    // * 0 <= node.value\n    public static ArrayList<Long> pluck(ArrayList<Long>\
  \ arr) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(pluck((new\
  \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
  \ (long)1l)))));\n    assert(pluck((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)2l, (long)3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l)))));\n\
  \    assert(pluck((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
  \    assert(pluck((new ArrayList<Long>(Arrays.asList((long)5l, (long)0l, (long)3l,\
  \ (long)0l, (long)4l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
  \ (long)1l)))));\n    assert(pluck((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)2l, (long)3l, (long)0l, (long)5l, (long)3l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
  \ (long)3l)))));\n    assert(pluck((new ArrayList<Long>(Arrays.asList((long)5l,\
  \ (long)4l, (long)8l, (long)4l, (long)8l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
  \ (long)1l)))));\n    assert(pluck((new ArrayList<Long>(Arrays.asList((long)7l,\
  \ (long)6l, (long)7l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
  \ (long)1l)))));\n    assert(pluck((new ArrayList<Long>(Arrays.asList((long)7l,\
  \ (long)9l, (long)7l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
  \    }\n\n}\n"
completions: ["        ArrayList<Long> result = new ArrayList<>();\n        long smallestEven\
    \ = Long.MAX_VALUE;\n        int smallestIndex = 0;\n        for (int i = 0; i\
    \ < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n             \
    \   smallestEven = Math.min(smallestEven, arr.get(i));\n                smallestIndex++;\n\
    \            }\n        }\n        if (smallestEven != Long.MAX_VALUE) {\n   \
    \         result.add(smallestEven);\n            result.add(smallestIndex);\n\
    \        }\n        return result;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        long smallestIndex = -1;\n\
    \        int size = arr.size();\n        for (int i = 0; i < size; i++) {\n  \
    \          if (arr.get(i) % 2 == 0) {\n                if (smallestEven == Long.MAX_VALUE)\
    \ {\n                    smallestEven = arr.get(i);\n                    smallestIndex\
    \ = i;\n                } else if (arr.get(i) < smallestEven) {\n            \
    \        smallestEven = arr.get(i);\n                    smallestIndex = i;\n\
    \                }\n            }\n        }\n        if (smallestEven == Long.MAX_VALUE)\
    \ {\n            return res;\n        }\n        ArrayList<Long> evens = new ArrayList<>();\n\
    \        for (int i = 0; i < size; i++) {\n            if (arr.get(i) % 2 == 0)\
    \ {\n                evens.add(arr.get(i));\n            }\n        }\n      \
    \  evens.sort(Comparator.comparingLong(Long::longValue));\n        evens.remove(smallestEven);\n\
    \        evens.add(smallestEven);\n        res.add(smallestEven);\n        res.add(smallestIndex);\n\
    \        return res;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallest_value = Long.MAX_VALUE;\n        int smallest_index = -1;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if (value % 2 == 0) {\n                if (value < smallest_value)\
    \ {\n                    smallest_value = value;\n                    smallest_index\
    \ = i;\n                }\n            }\n        }\n        if (smallest_index\
    \ != -1) {\n            result.add(smallest_value);\n            result.add(smallest_index);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) % 2\
    \ == 0) {\n                if(smallestEven > arr.get(i)) {\n                 \
    \   smallestEven = arr.get(i);\n                    smallestIndex = i;\n     \
    \           }\n            }\n        }\n        result.add(smallestEven);\n \
    \       result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = 0;\n        int\
    \ smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n       \
    \     if (arr.get(i) % 2 == 0) {\n                if (smallestEvenValue < arr.get(i))\
    \ {\n                    smallestEvenValue = arr.get(i);\n                   \
    \ smallestIndex = i;\n                }\n            }\n        }\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = Long.MIN_VALUE;\n\
    \        int smallestIndex = 0;\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            long value = arr.get(i);\n            if(value % 2 == 0) {\n    \
    \            if(smallestEvenValue > value) {\n                    smallestEvenValue\
    \ = value;\n                    smallestIndex = i;\n                }\n      \
    \      }\n        }\n        if(smallestEvenValue == Long.MIN_VALUE) {\n     \
    \       return result;\n        }\n        ArrayList<Long> evenValues = new ArrayList<>();\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if(value % 2 == 0) {\n                evenValues.add(value);\n  \
    \          }\n        }\n        smallestEvenValue = Collections.min(evenValues);\n\
    \        smallestIndex = evenValues.indexOf(smallestEvenValue);\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEven = Long.MIN_VALUE;\n \
    \       int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            if (arr.get(i) % 2 == 0) {\n                if (smallestEven > arr.get(i))\
    \ {\n                    smallestEven = arr.get(i);\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n \
    \       int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            long value = arr.get(i);\n            if (value % 2 == 0) {\n   \
    \             if (value < smallestEven) {\n                    smallestEven =\
    \ value;\n                    smallestIndex = i;\n                }\n        \
    \    }\n        }\n        result.add(smallestEven);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                if (smallestEven > arr.get(i)) {\n              \
    \      smallestEven = arr.get(i);\n                    smallestIndex = i;\n  \
    \              }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n \
    \       int smallestIndex = 0;\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            long value = arr.get(i);\n            if(value % 2 == 0) {\n    \
    \            if(value < smallestEven) {\n                    smallestEven = value;\n\
    \                    smallestIndex = i;\n                }\n            }\n  \
    \      }\n        if(smallestEven != Long.MAX_VALUE) {\n            result.add(smallestEven);\n\
    \            result.add(smallestIndex);\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        long smallestEven\
    \ = Long.MAX_VALUE;\n        long smallestIndex = -1;\n        long smallestValue\
    \ = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i)\
    \ % 2 == 0) {\n                if(smallestEven == Long.MAX_VALUE) {\n        \
    \            smallestEven = arr.get(i);\n                    smallestIndex = i;\n\
    \                    smallestValue = arr.get(i);\n                } else if(arr.get(i)\
    \ < smallestEven) {\n                    smallestEven = arr.get(i);\n        \
    \            smallestIndex = i;\n                    smallestValue = arr.get(i);\n\
    \                }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = Long.MAX_VALUE;\n\
    \        int smallestIndex = 0;\n        int index = 0;\n        for(int i = 0;\
    \ i < arr.size(); i++) {\n            long value = arr.get(i);\n            if(value\
    \ % 2 == 0) {\n                if(value < smallestEvenValue) {\n             \
    \       smallestEvenValue = value;\n                    smallestIndex = index;\n\
    \                }\n                index++;\n            }\n        }\n     \
    \   if(smallestEvenValue == Long.MAX_VALUE) {\n            return result;\n  \
    \      }\n        ArrayList<Long> evenValues = new ArrayList<>();\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n      \
    \      if(value % 2 == 0) {\n                evenValues.add(value);\n        \
    \    }\n        }\n        Collections.sort(evenValues);\n        for(long value\
    \ : evenValues) {\n            if(value == smallestEvenValue) {\n            \
    \    result.add(smallestEvenValue);\n                result.add(smallestIndex);\n\
    \                break;\n            }\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        long smallestEven\
    \ = Long.MAX_VALUE;\n        int smallestIndex = 0;\n        for (int i = 0; i\
    \ < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n             \
    \   smallestEven = Math.min(smallestEven, arr.get(i));\n                smallestIndex\
    \ = i;\n            }\n        }\n        if (smallestEven == Long.MAX_VALUE)\
    \ {\n            return result;\n        }\n        smallestEven = Math.min(smallestEven,\
    \ arr.get(smallestIndex));\n        result.add(smallestEven);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = 0;\n        int smallestIndex = 0;\n       \
    \ long smallestValue = 0;\n        long largestValue = 0;\n        long largestIndex\
    \ = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long value\
    \ = arr.get(i);\n            if (value % 2 == 0) {\n                if (smallestEvenValue\
    \ < value) {\n                    smallestEvenValue = value;\n               \
    \     smallestIndex = i;\n                }\n                if (smallestEvenValue\
    \ == value) {\n                    if (smallestIndex < i) {\n                \
    \        smallestIndex = i;\n                    }\n                }\n      \
    \      }\n            if (value > largestValue) {\n                largestValue\
    \ = value;\n                largestIndex = i;\n            }\n        }\n    \
    \    if (smallestEvenValue == 0) {\n            result.add(smallestValue);\n \
    \           result.add(smallestIndex);\n        } else {\n            result.add(smallestEvenValue);\n\
    \            result.add(smallestIndex);\n        }\n        if (largestValue ==\
    \ 0) {\n            result.add(largestValue);\n            result.add(largestIndex);\n\
    \        } else {\n            result.add(largestValue);\n            result.add(largestIndex);\n\
    \        }\n        return result;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        long smalest_value = Long.MAX_VALUE;\n        int smallest_index = -1;\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if(value % 2 == 0) {\n                if(value < smalest_value) {\n\
    \                    smalest_value = value;\n                    smallest_index\
    \ = i;\n                }\n            }\n        }\n        if(smallest_index\
    \ != -1) {\n            res.add(smalest_value);\n            res.add(smallest_index);\n\
    \        }\n        return res;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                if (smallestEven > arr.get(i)) {\n              \
    \      smallestEven = arr.get(i);\n                    smallestIndex = i;\n  \
    \              }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n \
    \       int smallestIndex = 0;\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            long value = arr.get(i);\n            if((value & 1) == 0) {\n  \
    \              if(value < smallestEven) {\n                    smallestEven =\
    \ value;\n                    smallestIndex = i;\n                }\n        \
    \    }\n        }\n        if(smallestEven == Long.MAX_VALUE) {\n            return\
    \ result;\n        }\n        ArrayList<Long> evens = new ArrayList<>();\n   \
    \     for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if((value & 1) == 0) {\n                evens.add(value);\n     \
    \       }\n        }\n        Collections.sort(evens);\n        for(int i = 0;\
    \ i < evens.size(); i++) {\n            if(evens.get(i) == smallestEven) {\n \
    \               result.add(smallestEven);\n                result.add(smallestIndex);\n\
    \                break;\n            }\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        long smallestEven\
    \ = Long.MAX_VALUE;\n        int smallestIndex = 0;\n        for (int i = 0; i\
    \ < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n             \
    \   if (smallestEven > arr.get(i)) {\n                    smallestEven = arr.get(i);\n\
    \                    smallestIndex = i;\n                }\n            }\n  \
    \      }\n        result.add(smallestEven);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if (value % 2 == 0) {\n                if (smallestEven > value)\
    \ {\n                    smallestEven = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = Long.MAX_VALUE;\n\
    \        int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            long value = arr.get(i);\n            if (value % 2 == 0) {\n\
    \                if (value < smallestEvenValue) {\n                    smallestEvenValue\
    \ = value;\n                    smallestIndex = i;\n                }\n      \
    \      }\n        }\n        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallest_value = Long.MAX_VALUE;\n        int smallest_index = 0;\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if(value % 2 == 0) {\n                if(value < smallest_value)\
    \ {\n                    smallest_value = value;\n                    smallest_index\
    \ = i;\n                }\n            }\n        }\n        result.add(smallest_value);\n\
    \        result.add(smallest_index);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = Long.MIN_VALUE;\n\
    \        int smallestIndex = 0;\n        int index = 0;\n        for(int i = 0;\
    \ i < arr.size(); i++) {\n            long value = arr.get(i);\n            if(value\
    \ % 2 == 0) {\n                if(value < smallestEvenValue) {\n             \
    \       smallestEvenValue = value;\n                    smallestIndex = index;\n\
    \                }\n                index++;\n            }\n        }\n     \
    \   result.add(smallestEvenValue);\n        result.add(smallestIndex);\n     \
    \   return result;", "        ArrayList<Long> result = new ArrayList<>();\n  \
    \      long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n \
    \       for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) % 2\
    \ == 0) {\n                if (smallestEven > arr.get(i)) {\n                \
    \    smallestEven = arr.get(i);\n                    smallestIndex = i;\n    \
    \            }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n \
    \       int smallestIndex = 0;\n        int index = 0;\n        for(Long val :\
    \ arr) {\n            if(val % 2 == 0) {\n                if(smallestEven == Long.MAX_VALUE)\
    \ {\n                    smallestEven = val;\n                    smallestIndex\
    \ = index;\n                }\n                else {\n                    if(val\
    \ < smallestEven) {\n                        smallestEven = val;\n           \
    \             smallestIndex = index;\n                    }\n                }\n\
    \            }\n            index++;\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = Long.MAX_VALUE;\n\
    \        int smallestIndex = 0;\n        for(long value : arr) {\n           \
    \ if(value % 2 == 0) {\n                if(value < smallestEvenValue) {\n    \
    \                smallestEvenValue = value;\n                    smallestIndex\
    \ = arr.indexOf(value);\n                }\n            }\n        }\n       \
    \ if(smallestEvenValue == Long.MAX_VALUE) {\n            return result;\n    \
    \    }\n        for(long value : arr) {\n            if(value % 2 == 0) {\n  \
    \              if(value == smallestEvenValue) {\n                    result.add(smallestEvenValue);\n\
    \                    result.add(smallestIndex);\n                }\n         \
    \   }\n        }\n        return result;", "        ArrayList<Long> result = new\
    \ ArrayList<>();\n        long smallestEvenValue = 0;\n        int smallestIndex\
    \ = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            long value\
    \ = arr.get(i);\n            if(value % 2 == 0) {\n                if(smallestEvenValue\
    \ < value) {\n                    smallestEvenValue = value;\n               \
    \     smallestIndex = i;\n                }\n            }\n        }\n      \
    \  if(smallestEvenValue == 0) {\n            return result;\n        }\n     \
    \   for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if(value % 2 == 0) {\n                if(smallestEvenValue == value)\
    \ {\n                    result.add(smallestEvenValue);\n                    result.add(smallestIndex);\n\
    \                }\n            }\n        }\n        return result;", "     \
    \   ArrayList<Long> result = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n\
    \        int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            if (arr.get(i) % 2 == 0) {\n                if (smallestEven\
    \ == Long.MAX_VALUE) {\n                    smallestEven = arr.get(i);\n     \
    \               smallestIndex = i;\n                } else if (arr.get(i) < smallestEven)\
    \ {\n                    smallestEven = arr.get(i);\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEven = Long.MIN_VALUE;\n \
    \       int smallestIndex = -1;\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            long value = arr.get(i);\n            if(value % 2 == 0) {\n    \
    \            if(smallestEven == Long.MIN_VALUE) {\n                    smallestEven\
    \ = value;\n                    smallestIndex = i;\n                } else if(value\
    \ < smallestEven) {\n                    smallestEven = value;\n             \
    \       smallestIndex = i;\n                }\n            }\n        }\n    \
    \    if(smallestEven != Long.MIN_VALUE) {\n            result.add(smallestEven);\n\
    \            result.add(smallestIndex);\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        long smallestEven\
    \ = Long.MAX_VALUE;\n        int smallestIndex = 0;\n        for (int i = 0; i\
    \ < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n             \
    \   if (smallestEven > arr.get(i)) {\n                    smallestEven = arr.get(i);\n\
    \                    smallestIndex = i;\n                }\n            }\n  \
    \      }\n        result.add(smallestEven);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex =\
    \ 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i)\
    \ % 2 == 0) {\n                if (smallestEvenValue > arr.get(i)) {\n       \
    \             smallestEvenValue = arr.get(i);\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = Long.MAX_VALUE;\n\
    \        int smallestIndex = 0;\n        int index = 0;\n        for (Long node\
    \ : arr) {\n            if (node % 2 == 0) {\n                if (smallestEvenValue\
    \ > node) {\n                    smallestEvenValue = node;\n                 \
    \   smallestIndex = index;\n                }\n                index++;\n    \
    \        }\n        }\n        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = 0;\n        long smallestIndex = 0;\n      \
    \  int count = 0;\n        for (long i : arr) {\n            if (i % 2 == 0) {\n\
    \                smallestEvenValue = i;\n                smallestIndex = count;\n\
    \            }\n            count++;\n        }\n        if (count == 0) {\n \
    \           return result;\n        }\n        long smallestValue = smallestEvenValue;\n\
    \        long smallestIndex = smallestIndex;\n        int count = 0;\n       \
    \ for (long i : arr) {\n            if (i % 2 == 0) {\n                if (i ==\
    \ smallestEvenValue) {\n                    smallestValue = i;\n             \
    \       smallestIndex = count;\n                }\n                count++;\n\
    \            }\n        }\n        if (count == 0) {\n            return result;\n\
    \        }\n        ArrayList<Long> temp = new ArrayList<>();\n        long smallestValue\
    \ = smallestEvenValue;\n        long smallestIndex = smallestIndex;\n        int\
    \ count = 0;\n        for (long i : arr) {\n            if (i % 2 == 0) {\n  \
    \              if (i == smallestEvenValue) {\n                    smallestValue\
    \ = i;\n                    smallestIndex = count;\n                }\n      \
    \          count++;\n            }\n        }\n        if (count == 0) {\n   \
    \         return result;\n        }\n        long smallestValue = smallestEvenValue;\n\
    \        long smallestIndex = smallestIndex;\n        int count = 0;\n       \
    \ for (long i : arr) {\n            if (i % 2 == 0) {\n                if (i ==\
    \ smallestEvenValue) {\n                    smallestValue = i;\n             \
    \       smallestIndex = count;\n                }\n                count++;\n\
    \            }\n        }\n        if (count == 0) {\n            return result;\n\
    \        }\n        ArrayList<Long> temp = new ArrayList<>();\n        long smallestValue\
    \ = smallestEvenValue;\n        long smallestIndex = smallestIndex;\n        int\
    \ count = 0;\n        for (long i : arr) {\n            if (i % 2 == 0) {\n  \
    \              if (i == smallestEvenValue) {\n                    smallestValue\
    \ = i;\n                    smallestIndex = count;\n                }\n      \
    \          count++;\n            }\n        }\n        if (count == 0) {\n   \
    \         return result;\n        }\n        ArrayList<Long> temp = new ArrayList<>();\n\
    \        long smallestValue = smallestEvenValue;\n        long smallestIndex =\
    \ smallestIndex;\n        int count = 0;\n        for (long i : arr) {\n     \
    \       if (i % 2 == 0) {\n                if (i == smallestEvenValue) {\n   \
    \                 smallestValue = i;\n                    smallestIndex = count;\n\
    \                }\n                count++;\n            }\n        }\n     \
    \   if (count == 0) {\n            return result;\n        }\n        ArrayList<Long>\
    \ temp = new ArrayList<>();\n        long smallestValue = smallestEvenValue;\n\
    \        long smallestIndex = smallestIndex;\n        int count = 0;\n       \
    \ for (long i : arr) {\n            if (i % 2 == 0) {\n                if (i ==\
    \ smallestEvenValue) {\n                    smallestValue = i;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n \
    \       int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            if (arr.get(i) % 2 == 0) {\n                smallestEven = Math.min(smallestEven,\
    \ arr.get(i));\n                smallestIndex = i;\n            }\n        }\n\
    \        if (smallestEven != Long.MAX_VALUE) {\n            result.add(smallestEven);\n\
    \            result.add(smallestIndex);\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        long smallestEven\
    \ = Long.MAX_VALUE;\n        int smallestIndex = 0;\n        for (int i = 0; i\
    \ < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n             \
    \   if (smallestEven > arr.get(i)) {\n                    smallestEven = arr.get(i);\n\
    \                    smallestIndex = i;\n                }\n            }\n  \
    \      }\n        result.add(smallestEven);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        int size = arr.size();\n        for (int i = 0; i < size; i++) {\n  \
    \          if (arr.get(i) % 2 == 0) {\n                if (smallestEven > arr.get(i))\
    \ {\n                    smallestEven = arr.get(i);\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n \
    \       int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            if (arr.get(i) % 2 == 0) {\n                if (smallestEven > arr.get(i))\
    \ {\n                    smallestEven = arr.get(i);\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallest_value = Long.MAX_VALUE;\n\
    \        int smallest_index = -1;\n        int size = arr.size();\n        for\
    \ (int i = 0; i < size; i++) {\n            long value = arr.get(i);\n       \
    \     if (value % 2 == 0) {\n                if (value < smallest_value) {\n \
    \                   smallest_value = value;\n                    smallest_index\
    \ = i;\n                }\n            }\n        }\n        if (smallest_index\
    \ != -1) {\n            result.add(smallest_value);\n            result.add(smallest_index);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) % 2\
    \ == 0) {\n                if(smallestEven > arr.get(i)) {\n                 \
    \   smallestEven = arr.get(i);\n                    smallestIndex = i;\n     \
    \           }\n            }\n        }\n        result.add(smallestEven);\n \
    \       result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n \
    \       int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            long value = arr.get(i);\n            if (value % 2 == 0) {\n   \
    \             if (value < smallestEven) {\n                    smallestEven =\
    \ value;\n                    smallestIndex = i;\n                }\n        \
    \    }\n        }\n        result.add(smallestEven);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = 0;\n        int smallestIndex = 0;\n       \
    \ for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0)\
    \ {\n                if (smallestEvenValue < arr.get(i)) {\n                 \
    \   smallestEvenValue = arr.get(i);\n                    smallestIndex = i;\n\
    \                }\n            }\n        }\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = Long.MAX_VALUE;\n\
    \        int smallestIndex = 0;\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            long value = arr.get(i);\n            if(value % 2 == 0) {\n    \
    \            if(value < smallestEvenValue) {\n                    smallestEvenValue\
    \ = value;\n                    smallestIndex = i;\n                }\n      \
    \      }\n        }\n        if(smallestEvenValue == Long.MAX_VALUE) {\n     \
    \       return result;\n        }\n        ArrayList<Long> evens = new ArrayList<>();\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if(value % 2 == 0) {\n                evens.add(value);\n       \
    \     }\n        }\n        Collections.sort(evens);\n        for(int i = 0; i\
    \ < evens.size(); i++) {\n            if(evens.get(i) == smallestEvenValue) {\n\
    \                result.add(smallestEvenValue);\n                result.add(smallestIndex);\n\
    \                break;\n            }\n        }\n        if(result.isEmpty())\
    \ {\n            return result;\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if (value % 2 == 0) {\n                if (value < smallestEven)\
    \ {\n                    smallestEven = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        if (smallestEven\
    \ != Long.MAX_VALUE) {\n            result.add(smallestEven);\n            result.add(smallestIndex);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallest_value = Long.MAX_VALUE;\n        int smallest_index = -1;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if (value % 2 == 0) {\n                if (value < smallest_value)\
    \ {\n                    smallest_value = value;\n                    smallest_index\
    \ = i;\n                }\n            }\n        }\n        if (smallest_index\
    \ != -1) {\n            result.add(smallest_value);\n            result.add(smallest_index);\n\
    \        }\n        return result;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if (value % 2 == 0) {\n                if (value < smallestEven)\
    \ {\n                    smallestEven = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        if (smallestEven\
    \ != Long.MAX_VALUE) {\n            res.add(smallestEven);\n            res.add(smallestIndex);\n\
    \        }\n        return res;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex =\
    \ 0;\n        for(Long node : arr) {\n            if(node % 2 == 0) {\n      \
    \          if(smallestEvenValue < node) {\n                    smallestEvenValue\
    \ = node;\n                    smallestIndex = arr.indexOf(node);\n          \
    \      }\n            }\n        }\n        result.add(smallestEvenValue);\n \
    \       result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = 0;\n        int\
    \ smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n       \
    \     if (arr.get(i) % 2 == 0) {\n                if (smallestEvenValue < arr.get(i))\
    \ {\n                    smallestEvenValue = arr.get(i);\n                   \
    \ smallestIndex = i;\n                }\n            }\n        }\n        if\
    \ (smallestEvenValue == 0) {\n            return result;\n        }\n        ArrayList<Long>\
    \ evens = new ArrayList<>();\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            if (arr.get(i) % 2 == 0) {\n                evens.add(arr.get(i));\n\
    \            }\n        }\n        Collections.sort(evens);\n        Collections.reverse(evens);\n\
    \        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for(long val : arr) {\n            if(val % 2 == 0) {\n             \
    \   if(smallestEven > val) {\n                    smallestEven = val;\n      \
    \              smallestIndex = arr.indexOf(val);\n                }\n        \
    \    }\n        }\n        result.add(smallestEven);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex =\
    \ 0;\n        for(long val : arr) {\n            if(val % 2 == 0) {\n        \
    \        if(smallestEvenValue > val) {\n                    smallestEvenValue\
    \ = val;\n                    smallestIndex = arr.indexOf(val);\n            \
    \    }\n            }\n        }\n        result.add(smallestEvenValue);\n   \
    \     result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        long smalest_value = 0;\n        int smalest_index\
    \ = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i)\
    \ % 2 == 0) {\n                if(smalest_value < arr.get(i)) {\n            \
    \        smalest_value = arr.get(i);\n                    smalest_index = i;\n\
    \                }\n            }\n        }\n        if(smalest_value == 0) {\n\
    \            return res;\n        }\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            if(arr.get(i) % 2 == 0) {\n                if(arr.get(i) == smalest_value)\
    \ {\n                    res.add(smalest_value);\n                    res.add(smalest_index);\n\
    \                }\n            }\n        }\n        return res;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n    \
    \    int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            if (arr.get(i) % 2 == 0) {\n                if (smallestEven > arr.get(i))\
    \ {\n                    smallestEven = arr.get(i);\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        res.add(smallestEven);\n\
    \        res.add(smallestIndex);\n        return res;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n    \
    \    int smallestIndex = 0;\n        int size = arr.size();\n        for (int\
    \ i = 0; i < size; i++) {\n            long value = arr.get(i);\n            if\
    \ (value % 2 == 0) {\n                if (value < smallestEven) {\n          \
    \          smallestEven = value;\n                    smallestIndex = i;\n   \
    \             }\n            }\n        }\n        if (smallestEven != Long.MAX_VALUE)\
    \ {\n            res.add(smallestEven);\n            res.add(smallestIndex);\n\
    \        }\n        return res;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = 0;\n        long smallestIndex = 0;\n      \
    \  long smallestValue = 0;\n        int count = 0;\n        for(int i = 0; i <\
    \ arr.size(); i++) {\n            if(arr.get(i) % 2 == 0) {\n                smallestEvenValue\
    \ = arr.get(i);\n                smallestIndex = i;\n            }\n        }\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) % 2\
    \ == 0) {\n                if(smallestEvenValue > arr.get(i)) {\n            \
    \        smallestEvenValue = arr.get(i);\n                    smallestIndex =\
    \ i;\n                }\n            }\n        }\n        smallestValue = smallestEvenValue;\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) % 2\
    \ == 0) {\n                if(smallestEvenValue > arr.get(i)) {\n            \
    \        smallestEvenValue = arr.get(i);\n                    smallestIndex =\
    \ i;\n                }\n            }\n        }\n        while(smallestEvenValue\
    \ != 0) {\n            smallestEvenValue /= 2;\n            smallestValue += smallestEvenValue;\n\
    \            count++;\n        }\n        if(count == 0) {\n            return\
    \ result;\n        }\n        for(int i = 0; i < arr.size(); i++) {\n        \
    \    if(arr.get(i) % 2 == 0) {\n                if(smallestEvenValue > arr.get(i))\
    \ {\n                    smallestEvenValue = arr.get(i);\n                   \
    \ smallestIndex = i;\n                }\n            }\n        }\n        result.add(smallestValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = 0;\n        long\
    \ smallestIndex = 0;\n        long currentSmallestEvenValue = 0;\n        long\
    \ currentSmallestIndex = 0;\n        long currentSmallestEvenValueIndex = 0;\n\
    \        long currentSmallestEvenValueIndex2 = 0;\n        long currentSmallestEvenValueIndex3\
    \ = 0;\n        long currentSmallestEvenValueIndex4 = 0;\n        long currentSmallestEvenValueIndex5\
    \ = 0;\n        long currentSmallestEvenValueIndex6 = 0;\n        long currentSmallestEvenValueIndex7\
    \ = 0;\n        long currentSmallestEvenValueIndex8 = 0;\n        long currentSmallestEvenValueIndex9\
    \ = 0;\n        long currentSmallestEvenValueIndex10 = 0;\n        long currentSmallestEvenValueIndex11\
    \ = 0;\n        long currentSmallestEvenValueIndex12 = 0;\n        long currentSmallestEvenValueIndex13\
    \ = 0;\n        long currentSmallestEvenValueIndex14 = 0;\n        long currentSmallestEvenValueIndex15\
    \ = 0;\n        long currentSmallestEvenValueIndex16 = 0;\n        long currentSmallestEvenValueIndex17\
    \ = 0;\n        long currentSmallestEvenValueIndex18 = 0;\n        long currentSmallestEvenValueIndex19\
    \ = 0;\n        long currentSmallestEvenValueIndex20 = 0;\n        long currentSmallestEvenValueIndex21\
    \ = 0;\n        long currentSmallestEvenValueIndex22 = 0;\n        long currentSmallestEvenValueIndex23\
    \ = 0;\n        long currentSmallestEvenValueIndex24 = 0;\n        long currentSmallestEvenValueIndex25\
    \ = 0;\n        long currentSmallestEvenValueIndex26 = 0;\n        long currentSmallestEvenValueIndex27\
    \ = 0;\n        long currentSmallestEvenValueIndex28 = 0;\n        long currentSmallestEvenValueIndex29\
    \ = 0;\n        long currentSmallestEvenValueIndex30 = 0;\n        long currentSmallestEvenValueIndex31\
    \ = 0;\n        long currentSmallestEvenValueIndex32 = 0;\n        long currentSmallestEvenValueIndex33\
    \ = 0;\n        long currentSmallestEvenValueIndex34 = 0;\n        long currentSmallestEvenValueIndex35\
    \ = 0;\n        long currentSmallestEvenValueIndex36 = 0;\n        long currentSmallestEvenValueIndex37\
    \ = 0;\n        long currentSmallestEvenValueIndex38 = 0;\n        long currentSmallestEvenValueIndex39\
    \ = 0;\n        long currentSmallest", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallest_value = Long.MAX_VALUE;\n        int smallest_index = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if (value % 2 == 0) {\n                if (value < smallest_value)\
    \ {\n                    smallest_value = value;\n                    smallest_index\
    \ = i;\n                }\n            }\n        }\n        result.add(smallest_value);\n\
    \        result.add(smallest_index);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n \
    \       int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            if (arr.get(i) % 2 == 0) {\n                if (smallestEven > arr.get(i))\
    \ {\n                    smallestEven = arr.get(i);\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = arr.get(0);\n\
    \        int smallestIndex = 0;\n        for (int i = 1; i < arr.size(); i++)\
    \ {\n            if (arr.get(i) % 2 == 0) {\n                if (smallestEvenValue\
    \ < arr.get(i)) {\n                    smallestEvenValue = arr.get(i);\n     \
    \               smallestIndex = i;\n                }\n            }\n       \
    \ }\n        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        long smalest_value = Long.MAX_VALUE;\n        int smallest_index = -1;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if (value % 2 == 0) {\n                if (value < smalest_value)\
    \ {\n                    smalest_value = value;\n                    smallest_index\
    \ = i;\n                }\n            }\n        }\n        if (smalest_value\
    \ == Long.MAX_VALUE) {\n            return res;\n        }\n        ArrayList<Long>\
    \ smallest = new ArrayList<>();\n        smallest.add(smalest_value);\n      \
    \  smallest.add(smallest_index);\n        res.add(smallest);\n        return res;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long smallestEven\
    \ = Long.MAX_VALUE;\n        int smallestIndex = 0;\n        for (int i = 0; i\
    \ < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n             \
    \   if (smallestEven > arr.get(i)) {\n                    smallestEven = arr.get(i);\n\
    \                    smallestIndex = i;\n                }\n            }\n  \
    \      }\n        result.add(smallestEven);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex =\
    \ 0;\n        for(int i = 0; i < arr.size(); i++) {\n            long value =\
    \ arr.get(i);\n            if(value % 2 == 0) {\n                if(value < smallestEvenValue)\
    \ {\n                    smallestEvenValue = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        if(smallestEvenValue\
    \ == Long.MAX_VALUE) {\n            return res;\n        }\n        ArrayList<Long>\
    \ evens = new ArrayList<>();\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            long value = arr.get(i);\n            if(value % 2 == 0) {\n    \
    \            evens.add(value);\n            }\n        }\n        Collections.sort(evens);\n\
    \        for(int i = 0; i < evens.size(); i++) {\n            if(evens.get(i)\
    \ == smallestEvenValue) {\n                res.add(smallestEvenValue);\n     \
    \           res.add(smallestIndex);\n                break;\n            }\n \
    \       }\n        return res;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MIN_VALUE;\n        int smallestIndex =\
    \ 0;\n        int size = arr.size();\n        for(int i = 0; i < size; i++) {\n\
    \            long value = arr.get(i);\n            if(value % 2 == 0) {\n    \
    \            if(smallestEvenValue < value) {\n                    smallestEvenValue\
    \ = value;\n                    smallestIndex = i;\n                }\n      \
    \      }\n        }\n        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = 0;\n        int smallestIndex = 0;\n       \
    \ for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if(value % 2 == 0) {\n                if(smallestEvenValue < value)\
    \ {\n                    smallestEvenValue = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        if(smallestEvenValue\
    \ == 0) {\n            return result;\n        }\n        for(int i = 0; i < arr.size();\
    \ i++) {\n            long value = arr.get(i);\n            if(value % 2 == 0)\
    \ {\n                if(smallestEvenValue == value) {\n                    result.add(smallestEvenValue);\n\
    \                    result.add(smallestIndex);\n                    break;\n\
    \                }\n            }\n        }\n        return result;", "     \
    \   ArrayList<Long> result = new ArrayList<>();\n        long smallestEvenValue\
    \ = 0;\n        long smallestIndex = 0;\n        boolean foundSmallestEvenValue\
    \ = false;\n        boolean foundSmallestIndex = false;\n        for(int i = 0;\
    \ i < arr.size(); i++) {\n            long value = arr.get(i);\n            if(value\
    \ % 2 == 0) {\n                smallestEvenValue = value;\n                foundSmallestEvenValue\
    \ = true;\n            }\n            if(value == smallestEvenValue) {\n     \
    \           smallestIndex = i;\n                foundSmallestIndex = true;\n \
    \           }\n        }\n        if(foundSmallestEvenValue) {\n            result.add(smallestEvenValue);\n\
    \            result.add(smallestIndex);\n        }\n        if(foundSmallestIndex)\
    \ {\n            result.add(smallestIndex);\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long smallest_value\
    \ = Long.MAX_VALUE;\n        int smallest_index = 0;\n        for (int i = 0;\
    \ i < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n           \
    \     if (arr.get(i) < smallest_value) {\n                    smallest_value =\
    \ arr.get(i);\n                    smallest_index = i;\n                }\n  \
    \          }\n        }\n        result.add(smallest_value);\n        result.add(smallest_index);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = 0;\n        int smallestIndex = 0;\n       \
    \ for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0)\
    \ {\n                smallestEvenValue = arr.get(i);\n                smallestIndex\
    \ = i;\n            }\n        }\n        if (smallestEvenValue == 0) {\n    \
    \        return result;\n        }\n        ArrayList<Long> evenValues = new ArrayList<>();\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                evenValues.add(arr.get(i));\n            }\n    \
    \    }\n        Collections.sort(evenValues);\n        if (evenValues.size() ==\
    \ 1) {\n            result.add(smallestEvenValue);\n            result.add(smallestIndex);\n\
    \            return result;\n        }\n        ArrayList<Long> evenValues2 =\
    \ new ArrayList<>();\n        for (int i = 0; i < arr.size(); i++) {\n       \
    \     if (arr.get(i) % 2 == 0) {\n                evenValues2.add(arr.get(i));\n\
    \            }\n        }\n        Collections.sort(evenValues2);\n        if\
    \ (evenValues2.size() == 1) {\n            result.add(smallestEvenValue);\n  \
    \          result.add(smallestIndex);\n            return result;\n        }\n\
    \        ArrayList<Long> evenValues3 = new ArrayList<>();\n        for (int i\
    \ = 0; i < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n      \
    \          evenValues3.add(arr.get(i));\n            }\n        }\n        Collections.sort(evenValues3);\n\
    \        if (evenValues3.size() == 1) {\n            result.add(smallestEvenValue);\n\
    \            result.add(smallestIndex);\n            return result;\n        }\n\
    \        ArrayList<Long> evenValues4 = new ArrayList<>();\n        for (int i\
    \ = 0; i < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n      \
    \          evenValues4.add(arr.get(i));\n            }\n        }\n        Collections.sort(evenValues4);\n\
    \        if (evenValues4.size() == 1) {\n            result.add(smallestEvenValue);\n\
    \            result.add(smallestIndex);\n            return result;\n        }\n\
    \        ArrayList<Long> evenValues5 = new ArrayList<>();\n        for (int i\
    \ = 0; i < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n      \
    \          evenValues5.add(arr.get(i));\n            }\n        }\n        Collections.sort(evenValues5);\n\
    \        if (evenValues5.size() == 1) {\n            result.add(smallestEvenValue);\n\
    \            result.add(smallestIndex);\n            return result;\n        }\n\
    \        ArrayList<Long> evenValues6 = new ArrayList<>();\n        for (int i\
    \ = 0; i < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n      \
    \          evenValues6.add(arr.get(i));\n            }\n        }\n        Collections.sort(evenValues6);\n\
    \        if (evenValues6.size() == 1) {\n            result.add(smallestEvenValue);\n\
    \            result.add(smallestIndex);\n            return result;\n        }\n\
    \        ArrayList<Long> evenValues7", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if (value % 2 == 0) {\n                if (value < smallestEven)\
    \ {\n                    smallestEven = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        if (smallestEven\
    \ != Long.MAX_VALUE) {\n            result.add(smallestEven);\n            result.add(smallestIndex);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) % 2\
    \ == 0) {\n                if(smallestEven == Long.MAX_VALUE) {\n            \
    \        smallestEven = arr.get(i);\n                    smallestIndex = i;\n\
    \                } else if(arr.get(i) < smallestEven) {\n                    smallestEven\
    \ = arr.get(i);\n                    smallestIndex = i;\n                }\n \
    \           }\n        }\n        result.add(smallestEven);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex =\
    \ 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long value =\
    \ arr.get(i);\n            if (value % 2 == 0) {\n                if (value <\
    \ smallestEvenValue) {\n                    smallestEvenValue = value;\n     \
    \               smallestIndex = i;\n                }\n            }\n       \
    \ }\n        if (smallestEvenValue == Long.MAX_VALUE) {\n            return result;\n\
    \        }\n        ArrayList<Long> evenValues = new ArrayList<>();\n        for\
    \ (int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n \
    \           if (value % 2 == 0) {\n                evenValues.add(value);\n  \
    \          }\n        }\n        Collections.sort(evenValues);\n        evenValues.remove(smallestEvenValue);\n\
    \        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        int index = 0;\n        for(int i = 0; i < arr.size(); i++) {\n     \
    \       long value = arr.get(i);\n            if((value % 2) == 0) {\n       \
    \         if(value < smallestEven) {\n                    smallestEven = value;\n\
    \                    smallestIndex = i;\n                }\n            }\n  \
    \      }\n        if(smallestEven != Long.MAX_VALUE) {\n            result.add(smallestEven);\n\
    \            result.add(smallestIndex);\n        }\n        return result;", " \
    \       ArrayList<Long> res = new ArrayList<>();\n        long smallestEven =\
    \ Long.MIN_VALUE;\n        int smallestIndex = 0;\n        for (int i = 0; i <\
    \ arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n               \
    \ if (smallestEven == Long.MIN_VALUE) {\n                    smallestEven = arr.get(i);\n\
    \                    smallestIndex = i;\n                } else {\n          \
    \          if (arr.get(i) < smallestEven) {\n                        smallestEven\
    \ = arr.get(i);\n                        smallestIndex = i;\n                \
    \    }\n                }\n            }\n        }\n        res.add(smallestEven);\n\
    \        res.add(smallestIndex);\n        return res;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = Long.MAX_VALUE;\n\
    \        int smallestIndex = 0;\n        for(long value : arr) {\n           \
    \ if(value % 2 == 0) {\n                if(smallestEvenValue < value) {\n    \
    \                smallestEvenValue = value;\n                    smallestIndex\
    \ = arr.indexOf(value);\n                }\n            }\n        }\n       \
    \ result.add(smallestEvenValue);\n        result.add(smallestIndex);\n       \
    \ return result;", "        ArrayList<Long> res = new ArrayList<>();\n       \
    \ long smallest_value = Long.MAX_VALUE;\n        int smallest_index = 0;\n   \
    \     for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) % 2 ==\
    \ 0) {\n                if (arr.get(i) < smallest_value) {\n                 \
    \   smallest_value = arr.get(i);\n                    smallest_index = i;\n  \
    \              }\n            }\n        }\n        res.add(smallest_value);\n\
    \        res.add(smallest_index);\n        return res;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = 0;\n        int\
    \ smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n       \
    \     if (arr.get(i) % 2 == 0) {\n                if (smallestEvenValue < arr.get(i))\
    \ {\n                    smallestEvenValue = arr.get(i);\n                   \
    \ smallestIndex = i;\n                }\n            }\n        }\n        if\
    \ (smallestEvenValue == 0) {\n            return result;\n        }\n        ArrayList<Long>\
    \ evenValues = new ArrayList<>();\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            if (arr.get(i) % 2 == 0) {\n                evenValues.add(arr.get(i));\n\
    \            }\n        }\n        Collections.sort(evenValues);\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n \
    \       int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            if (arr.get(i) % 2 == 0) {\n                if (smallestEven > arr.get(i))\
    \ {\n                    smallestEven = arr.get(i);\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n    \
    \    int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            long value = arr.get(i);\n            if (value % 2 == 0) {\n   \
    \             if (value < smallestEven) {\n                    smallestEven =\
    \ value;\n                    smallestIndex = i;\n                }\n        \
    \    }\n        }\n        if (smallestEven != Long.MAX_VALUE) {\n           \
    \ res.add(smallestEven);\n            res.add(smallestIndex);\n        }\n   \
    \     return res;", "        ArrayList<Long> result = new ArrayList<>();\n   \
    \     long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n  \
    \      for (int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if (value % 2 == 0) {\n                if (value < smallestEven)\
    \ {\n                    smallestEven = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n \
    \       int smallestIndex = 0;\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            if(arr.get(i) % 2 == 0) {\n                if(arr.get(i) < smallestEven)\
    \ {\n                    smallestEven = arr.get(i);\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        long smalest_value = 0;\n        int smalest_index\
    \ = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            long value\
    \ = arr.get(i);\n            if(value % 2 == 0) {\n                if(value <\
    \ smalest_value) {\n                    smalest_value = value;\n             \
    \       smalest_index = i;\n                }\n            }\n        }\n    \
    \    if(smalest_index != 0) {\n            res.add(smalest_value);\n         \
    \   res.add(smalest_index);\n        }\n        return res;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n \
    \       int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            if (arr.get(i) % 2 == 0) {\n                if (smallestEven > arr.get(i))\
    \ {\n                    smallestEven = arr.get(i);\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = Long.MAX_VALUE;\n\
    \        int smallestIndex = 0;\n        int size = arr.size();\n        for (int\
    \ i = 0; i < size; i++) {\n            long value = arr.get(i);\n            if\
    \ (value % 2 == 0) {\n                if (value < smallestEvenValue) {\n     \
    \               smallestEvenValue = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        if (smallestEvenValue\
    \ == Long.MAX_VALUE) {\n            return result;\n        }\n        ArrayList<Long>\
    \ evenValues = new ArrayList<>();\n        for (int i = 0; i < size; i++) {\n\
    \            long value = arr.get(i);\n            if (value % 2 == 0) {\n   \
    \             evenValues.add(value);\n            }\n        }\n        Collections.sort(evenValues);\n\
    \        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex =\
    \ 0;\n        for(int i = 0; i < arr.size(); i++) {\n            long value =\
    \ arr.get(i);\n            if(value % 2 == 0) {\n                if(value < smallestEvenValue)\
    \ {\n                    smallestEvenValue = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = Long.MAX_VALUE;\n\
    \        int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            if (arr.get(i) % 2 == 0) {\n                if (smallestEvenValue\
    \ > arr.get(i)) {\n                    smallestEvenValue = arr.get(i);\n     \
    \               smallestIndex = i;\n                }\n            }\n       \
    \ }\n        if (smallestEvenValue == Long.MAX_VALUE) {\n            return result;\n\
    \        }\n        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = arr.get(0);\n        int smallestIndex = 0;\n\
    \        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                if (smallestEvenValue > arr.get(i)) {\n         \
    \           smallestEvenValue = arr.get(i);\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = Long.MAX_VALUE;\n\
    \        long smallestIndex = -1;\n        long smallestValue = 0;\n        for(long\
    \ value : arr) {\n            if(value % 2 == 0) {\n                if(smallestEvenValue\
    \ < value) {\n                    smallestEvenValue = value;\n               \
    \     smallestIndex = arr.indexOf(value);\n                }\n               \
    \ if(smallestEvenValue == value) {\n                    if(smallestIndex == -1)\
    \ {\n                        smallestIndex = arr.indexOf(value);\n           \
    \         } else {\n                        if(smallestIndex < arr.indexOf(value))\
    \ {\n                            smallestIndex = arr.indexOf(value);\n       \
    \                 }\n                    }\n                }\n            }\n\
    \        }\n        if(smallestEvenValue == 0) {\n            return result;\n\
    \        }\n        for(long i = 0; i < arr.size(); i++) {\n            if(arr.get(i)\
    \ == smallestEvenValue) {\n                result.add(smallestEvenValue);\n  \
    \              result.add(i);\n            }\n        }\n        return result;",
  "        ArrayList<Long> res = new ArrayList<>();\n        long smallest_even_value\
    \ = Long.MAX_VALUE;\n        int smallest_even_index = -1;\n        for (int i\
    \ = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n        \
    \    if (value % 2 == 0) {\n                if (smallest_even_value < value) {\n\
    \                    smallest_even_value = value;\n                    smallest_even_index\
    \ = i;\n                }\n            }\n        }\n        if (smallest_even_value\
    \ == Long.MAX_VALUE) {\n            return res;\n        }\n        long smallest_even_value_2\
    \ = smallest_even_value / 2;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            long value = arr.get(i);\n            if (value % 2 == 0) {\n   \
    \             if (smallest_even_value == value) {\n                    res.add(smallest_even_value_2);\n\
    \                    res.add(i);\n                }\n            }\n        }\n\
    \        return res;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallest_value = 0;\n        int smallest_index = 0;\n        long\
    \ smallest_even_value = 0;\n        int smallest_even_count = 0;\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n      \
    \      if(value % 2 == 0) {\n                smallest_even_count++;\n        \
    \        if(smallest_even_count == 1) {\n                    smallest_even_value\
    \ = value;\n                }\n                if(smallest_even_count > 1) {\n\
    \                    smallest_value = value;\n                    smallest_index\
    \ = i;\n                }\n            }\n        }\n        if(smallest_even_count\
    \ == 0) {\n            return result;\n        }\n        else if(smallest_even_count\
    \ == 1) {\n            smallest_value = smallest_even_value;\n            smallest_index\
    \ = smallest_index;\n        }\n        else if(smallest_even_count > 1) {\n \
    \           smallest_value = smallest_value;\n            smallest_index = smallest_index;\n\
    \        }\n        for(int i = 0; i < arr.size(); i++) {\n            long value\
    \ = arr.get(i);\n            if(value % 2 == 0) {\n                result.add(smallest_value);\n\
    \                result.add(smallest_index);\n            }\n        }\n     \
    \   return result;", "        ArrayList<Long> res = new ArrayList<>();\n     \
    \   long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n    \
    \    for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) % 2 ==\
    \ 0) {\n                if (smallestEven == Long.MAX_VALUE) {\n              \
    \      smallestEven = arr.get(i);\n                    smallestIndex = i;\n  \
    \              } else if (arr.get(i) < smallestEven) {\n                    smallestEven\
    \ = arr.get(i);\n                    smallestIndex = i;\n                }\n \
    \           }\n        }\n        res.add(smallestEven);\n        res.add(smallestIndex);\n\
    \        return res;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if(value % 2 == 0) {\n                if(value < smallestEven) {\n\
    \                    smallestEven = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        if(smallestEven !=\
    \ Long.MAX_VALUE) {\n            result.add(smallestEven);\n            result.add(smallestIndex);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex =\
    \ 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i)\
    \ % 2 == 0) {\n                if (smallestEvenValue > arr.get(i)) {\n       \
    \             smallestEvenValue = arr.get(i);\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = Long.MAX_VALUE;\n\
    \        int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            if (arr.get(i) % 2 == 0) {\n                if (smallestEvenValue\
    \ > arr.get(i)) {\n                    smallestEvenValue = arr.get(i);\n     \
    \               smallestIndex = i;\n                }\n            }\n       \
    \ }\n        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                if (smallestEven > arr.get(i)) {\n              \
    \      smallestEven = arr.get(i);\n                    smallestIndex = i;\n  \
    \              }\n            }\n        }\n        if (smallestEven != Long.MAX_VALUE)\
    \ {\n            result.add(smallestEven);\n            result.add(smallestIndex);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) % 2\
    \ == 0) {\n                if(smallestEven > arr.get(i)) {\n                 \
    \   smallestEven = arr.get(i);\n                    smallestIndex = i;\n     \
    \           }\n            }\n        }\n        result.add(smallestEven);\n \
    \       result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n \
    \       int smallestIndex = 0;\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            long value = arr.get(i);\n            if(value % 2 == 0) {\n    \
    \            if(value < smallestEven) {\n                    smallestEven = value;\n\
    \                    smallestIndex = i;\n                }\n            }\n  \
    \      }\n        if(smallestEven != Long.MAX_VALUE) {\n            result.add(smallestEven);\n\
    \            result.add(smallestIndex);\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        long smallestEven\
    \ = Long.MAX_VALUE;\n        int smallestIndex = 0;\n        int index = 0;\n\
    \        for(Long val : arr) {\n            if(val % 2 == 0) {\n             \
    \   if(smallestEven > val) {\n                    smallestEven = val;\n      \
    \              smallestIndex = index;\n                }\n                index++;\n\
    \            }\n        }\n        result.add(smallestEven);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if(value % 2 == 0) {\n                if(value < smallestEven) {\n\
    \                    smallestEven = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        long smallestEvenValue = Long.MIN_VALUE;\n\
    \        long smallestIndex = -1;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            long value = arr.get(i);\n            if (value % 2 == 0) {\n\
    \                if (smallestEvenValue < value) {\n                    smallestEvenValue\
    \ = value;\n                    smallestIndex = i;\n                }\n      \
    \      }\n        }\n        if (smallestEvenValue == Long.MIN_VALUE) {\n    \
    \        return res;\n        }\n        ArrayList<Long> evenValues = new ArrayList<>();\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if (value % 2 == 0) {\n                evenValues.add(value);\n \
    \           }\n        }\n        evenValues.sort((a, b) -> a - b);\n        smallestEvenValue\
    \ = evenValues.get(0);\n        smallestIndex = evenValues.get(0);\n        for\
    \ (int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n \
    \           if (value % 2 == 0) {\n                if (smallestEvenValue < value)\
    \ {\n                    smallestEvenValue = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        res.add(smallestEvenValue);\n\
    \        res.add(smallestIndex);\n        return res;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallest_even = Long.MAX_VALUE;\n\
    \        int smallest_index = -1;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            long value = arr.get(i);\n            if (value % 2 == 0) {\n\
    \                if (smallest_even > value) {\n                    smallest_even\
    \ = value;\n                    smallest_index = i;\n                }\n     \
    \       }\n        }\n        if (smallest_even != Long.MAX_VALUE) {\n       \
    \     result.add(smallest_even);\n            result.add(smallest_index);\n  \
    \      }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                if (smallestEven > arr.get(i)) {\n              \
    \      smallestEven = arr.get(i);\n                    smallestIndex = i;\n  \
    \              }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = 0;\n        int\
    \ smallestIndex = 0;\n        for(int i = 0; i < arr.size(); i++) {\n        \
    \    long value = arr.get(i);\n            if(value % 2 == 0) {\n            \
    \    if(smallestEvenValue < value) {\n                    smallestEvenValue =\
    \ value;\n                    smallestIndex = i;\n                }\n        \
    \    }\n        }\n        if(smallestEvenValue != 0) {\n            result.add(smallestEvenValue);\n\
    \            result.add(smallestIndex);\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        long smallestEven\
    \ = Long.MAX_VALUE;\n        long smallestIndex = -1;\n        int count = 0;\n\
    \        for (long val : arr) {\n            if (val % 2 == 0) {\n           \
    \     if (smallestEven > val) {\n                    smallestEven = val;\n   \
    \                 smallestIndex = count;\n                }\n                count++;\n\
    \            }\n        }\n        if (smallestEven != Long.MAX_VALUE) {\n   \
    \         result.add(smallestEven);\n            result.add(smallestIndex);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex =\
    \ 0;\n        for(int i = 0; i < arr.size(); i++) {\n            long value =\
    \ arr.get(i);\n            if(value % 2 == 0) {\n                if(value < smallestEvenValue)\
    \ {\n                    smallestEvenValue = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n \
    \       int smallestIndex = -1;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            long value = arr.get(i);\n            if (value % 2 == 0) {\n\
    \                if (value < smallestEven) {\n                    smallestEven\
    \ = value;\n                    smallestIndex = i;\n                }\n      \
    \      }\n        }\n        if (smallestEven != Long.MAX_VALUE) {\n         \
    \   result.add(smallestEven);\n            result.add(smallestIndex);\n      \
    \  }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallest_value = Long.MAX_VALUE;\n        int smallest_index = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                if (arr.get(i) < smallest_value) {\n            \
    \        smallest_value = arr.get(i);\n                    smallest_index = i;\n\
    \                }\n            }\n        }\n        result.add(smallest_value);\n\
    \        result.add(smallest_index);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = Long.MAX_VALUE;\n\
    \        long smallestIndex = 0;\n        long smallestValue = Long.MAX_VALUE;\n\
    \        int index = 0;\n        for (int i = 0; i < arr.size(); i++) {\n    \
    \        long value = arr.get(i);\n            if (value % 2 == 0) {\n       \
    \         if (value < smallestEvenValue) {\n                    smallestEvenValue\
    \ = value;\n                    smallestIndex = i;\n                    smallestValue\
    \ = value;\n                }\n            } else if (value < smallestValue) {\n\
    \                smallestEvenValue = value;\n                smallestIndex = i;\n\
    \                smallestValue = value;\n            }\n        }\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = 0;\n        long\
    \ smallestIndex = 0;\n        long smallestValue = 0;\n        long largestValue\
    \ = 0;\n        long largestIndex = 0;\n        long largestEvenValue = 0;\n \
    \       long largestEvenIndex = 0;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            long value = arr.get(i);\n            if((value & 1) == 0) {\n\
    \                smallestEvenValue = value;\n                smallestIndex = i;\n\
    \            }\n            else if(value >= largestEvenValue) {\n           \
    \     largestEvenValue = value;\n                largestEvenIndex = i;\n     \
    \       }\n            else if(value >= smallestEvenValue) {\n               \
    \ smallestEvenValue = value;\n                smallestEvenIndex = i;\n       \
    \     }\n            else if(value < smallestEvenValue) {\n                smallestEvenValue\
    \ = value;\n                smallestEvenIndex = i;\n            }\n          \
    \  else if(value < largestValue) {\n                largestValue = value;\n  \
    \              largestIndex = i;\n            }\n            else if(value > largestValue)\
    \ {\n                largestValue = value;\n                largestIndex = i;\n\
    \            }\n        }\n        if(smallestEvenValue == 0) {\n            return\
    \ result;\n        }\n        else if(smallestEvenIndex == arr.size() - 1) {\n\
    \            result.add(smallestEvenValue);\n            return result;\n    \
    \    }\n        else {\n            result.add(smallestEvenValue);\n         \
    \   result.add(smallestIndex);\n            return result;\n        }", "    \
    \    ArrayList<Long> res = new ArrayList<>();\n        long smallestEven = Long.MIN_VALUE;\n\
    \        long smallestIndex = Long.MIN_VALUE;\n        long smallestIndexOfSmallestEven\
    \ = Long.MIN_VALUE;\n        long smallestIndexOfSmallestEvenIndex = Long.MIN_VALUE;\n\
    \        long smallestIndexOfSmallestEvenValue = 0;\n        long smallestIndexOfSmallestEvenValueIndex\
    \ = 0;\n        long smallestIndexOfSmallestEvenValueIndexOfSmallestEvenValue\
    \ = 0;\n        long smallestIndexOfSmallestEvenValueIndexOfSmallestEvenValueIndex\
    \ = 0;\n        long smallestIndexOfSmallestEvenValueIndexOfSmallestEvenValueIndexOfSmallestEvenValue\
    \ = 0;\n        long smallestIndexOfSmallestEvenValueIndexOfSmallestEvenValueIndexOfSmallestEvenValueIndex\
    \ = 0;\n        long smallestIndexOfSmallestEvenValueIndexOfSmallestEvenValueIndexOfSmallestEvenValueIndexOfSmallestEvenValue\
    \ = 0;\n        long smallestIndexOfSmallestEvenValueIndexOfSmallestEvenValueIndexOfSmallestEvenValueIndexOfSmallestEvenValueIndex\
    \ = 0;\n        long smallestIndexOfSmallestEvenValueIndexOfSmallestEvenValueIndexOfSmallestEvenValueIndexOfSmallestEvenValueIndexOfSmallestEvenValue\
    \ = 0;\n        long smallestIndexOfSmallestEvenValueIndexOfSmallestEvenValueIndexOfSmallestEvenValueIndexOfSmallestEvenValueIndexOfSmallestEvenValueIndexOfSmallestEvenValue\
    \ = 0;\n        long smallestIndexOfSmallestEvenValueIndexOfSmallestEvenValueIndexOfSmallestEvenValueIndexOfSmallestEvenValueIndexOfSmallestEvenValueIndexOfSmallestEvenValue\
    \ = 0;\n        long smallestIndexOfSmallestEvenValueIndexOfSmallestEvenValueIndexOfSmallestEvenValueIndexOfSmallestEvenValueIndexOfSmallestEvenValueIndexOfSmallestEvenValueIndexOfSmallestEvenValue\
    \ = 0;\n        long smallestIndexOfSmallestEvenValueIndexOfSmallestEvenValueIndexOfSmallestEvenValueIndexOfSmallestEvenValueIndexOfSmallestEvenValueIndexOfSmallestEvenValueIndexOfSmallestEvenValueIndexOfSmallestEvenValue\
    \ = 0;\n", "        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n        for\
    \ (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n\
    \                if (smallestEven > arr.get(i)) {\n                    smallestEven\
    \ = arr.get(i);\n                    smallestIndex = i;\n                }\n \
    \           }\n        }\n        result.add(smallestEven);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = 0;\n        long smallestIndex = 0;\n      \
    \  long smallestValue = 0;\n        long smallestIndex2 = 0;\n        long smallestValue2\
    \ = 0;\n        long smallestIndex3 = 0;\n        long smallestValue3 = 0;\n \
    \       long smallestIndex4 = 0;\n        long smallestValue4 = 0;\n        long\
    \ smallestIndex5 = 0;\n        long smallestValue5 = 0;\n        long smallestIndex6\
    \ = 0;\n        long smallestValue6 = 0;\n        long smallestIndex7 = 0;\n \
    \       long smallestValue7 = 0;\n        long smallestIndex8 = 0;\n        long\
    \ smallestValue8 = 0;\n        long smallestIndex9 = 0;\n        long smallestValue9\
    \ = 0;\n        long smallestIndex10 = 0;\n        long smallestValue10 = 0;\n\
    \        long smallestIndex11 = 0;\n        long smallestValue11 = 0;\n      \
    \  long smallestIndex12 = 0;\n        long smallestValue12 = 0;\n        long\
    \ smallestIndex13 = 0;\n        long smallestValue13 = 0;\n        long smallestIndex14\
    \ = 0;\n        long smallestValue14 = 0;\n        long smallestIndex15 = 0;\n\
    \        long smallestValue15 = 0;\n        long smallestIndex16 = 0;\n      \
    \  long smallestValue16 = 0;\n        long smallestIndex17 = 0;\n        long\
    \ smallestValue17 = 0;\n        long smallestIndex18 = 0;\n        long smallestValue18\
    \ = 0;\n        long smallestIndex19 = 0;\n        long smallestValue19 = 0;\n\
    \        long smallestIndex20 = 0;\n        long smallestValue20 = 0;\n      \
    \  long smallestIndex21 = 0;\n        long smallestValue21 = 0;\n        long\
    \ smallestIndex22 = 0;\n        long smallestValue22 = 0;\n        long smallestIndex23\
    \ = 0;\n        long smallestValue23 = 0;\n        long smallestIndex24 = 0;\n\
    \        long smallestValue24 = 0;\n        long smallestIndex25 = 0;\n      \
    \  long smallestValue25 = 0;\n        long smallestIndex26 = 0;\n        long\
    \ smallestValue26 = 0;\n        long smallestIndex27 = 0;\n        long smallestValue27\
    \ = 0;\n        long smallestIndex28 = 0;\n        long smallestValue28 = 0;\n\
    \        long smallestIndex29 = 0;\n        long smallestValue29 = 0;\n      \
    \  long smallestIndex30 = 0;\n        long smallestValue30 = 0;\n        long\
    \ smallestIndex31 = 0;\n        long smallestValue31 = 0;\n        long smallestIndex32\
    \ = 0;\n        ", "        ArrayList<Long> result = new ArrayList<>();\n    \
    \    long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n   \
    \     int index = 0;\n        for(int i = 0; i < arr.size(); i++) {\n        \
    \    long value = arr.get(i);\n            if(value % 2 == 0) {\n            \
    \    if(value < smallestEven) {\n                    smallestEven = value;\n \
    \                   smallestIndex = i;\n                }\n            }\n   \
    \     }\n        if(smallestEven != Long.MAX_VALUE) {\n            result.add(smallestEven);\n\
    \            result.add(smallestIndex);\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        long smallestEvenValue\
    \ = 0;\n        int smallestIndex = 0;\n        long smallestValue = 0;\n    \
    \    boolean isSmallestEvenValueFound = false;\n        boolean isSmallestIndexFound\
    \ = false;\n        for(int i = 0; i < arr.size(); i++) {\n            long value\
    \ = arr.get(i);\n            if(value % 2 == 0) {\n                isSmallestEvenValueFound\
    \ = true;\n                smallestEvenValue = value;\n                smallestIndex\
    \ = i;\n                smallestValue = value;\n            }\n            else\
    \ if(value < smallestEvenValue) {\n                isSmallestEvenValueFound =\
    \ false;\n                smallestEvenValue = value;\n                smallestIndex\
    \ = i;\n                smallestValue = value;\n            }\n            else\
    \ if(value == smallestEvenValue) {\n                isSmallestEvenValueFound =\
    \ true;\n                smallestIndex = i;\n                smallestValue = value;\n\
    \            }\n        }\n        if(isSmallestEvenValueFound) {\n          \
    \  smallestValue = smallestEvenValue;\n        }\n        else if(smallestIndex\
    \ == arr.size() - 1) {\n            smallestValue = arr.get(smallestIndex);\n\
    \        }\n        else {\n            smallestValue = arr.get(smallestIndex);\n\
    \            smallestIndex = smallestIndex + 1;\n        }\n        result.add(smallestValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        long smallestEvenValue = 0;\n        long\
    \ smallestIndex = 0;\n        long smallestValue = 0;\n        long index = 0;\n\
    \        boolean foundSmallestEvenValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        boolean foundSmallestValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        boolean foundSmallestValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        boolean foundSmallestValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        boolean foundSmallestValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        boolean foundSmallestValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        boolean foundSmallestValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        boolean foundSmallestValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        boolean foundSmallestValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        boolean foundSmallestValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        boolean foundSmallestValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        boolean foundSmallestValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        boolean foundSmallestValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        boolean foundSmallestValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        boolean foundSmallestValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        boolean foundSmallestValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        boolean foundSmallestValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        boolean foundSmallestValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        boolean foundSmallestValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        boolean foundSmallestValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        boolean foundSmallestValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        boolean foundSmallestValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        boolean foundSmallestValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        boolean foundSmallestValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        boolean foundSmallestValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        boolean foundSmallestValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        boolean foundSmallestValue", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        long smallest_value = Long.MAX_VALUE;\n      \
    \  int smallest_index = 0;\n        for (int i = 0; i < arr.size(); i++) {\n \
    \           long value = arr.get(i);\n            if (value % 2 == 0) {\n    \
    \            if (value < smallest_value) {\n                    smallest_value\
    \ = value;\n                    smallest_index = i;\n                }\n     \
    \       }\n        }\n        if (smallest_index != 0) {\n            result.add(smallest_value);\n\
    \            result.add(smallest_index);\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long smallestEvenValue\
    \ = 0;\n        int smallestIndex = 0;\n        int size = arr.size();\n     \
    \   for(int i = 0; i < size; i++) {\n            long value = arr.get(i);\n  \
    \          if(value % 2 == 0) {\n                smallestEvenValue = value;\n\
    \                smallestIndex = i;\n            }\n        }\n        if(smallestEvenValue\
    \ == 0) {\n            return result;\n        }\n        for(int i = 0; i < size;\
    \ i++) {\n            long value = arr.get(i);\n            if(value % 2 == 0)\
    \ {\n                if(value < smallestEvenValue) {\n                    smallestEvenValue\
    \ = value;\n                    smallestIndex = i;\n                }\n      \
    \      }\n        }\n        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallest_value = Long.MAX_VALUE;\n        int smallest_index = -1;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                if (smallest_value < arr.get(i)) {\n            \
    \        smallest_value = arr.get(i);\n                    smallest_index = i;\n\
    \                }\n            }\n        }\n        if (smallest_index != -1)\
    \ {\n            result.add(smallest_value);\n            result.add(smallest_index);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        int size = arr.size();\n        for (int i = 0; i < size; i++) {\n  \
    \          long value = arr.get(i);\n            if (value % 2 == 0) {\n     \
    \           if (value < smallestEven) {\n                    smallestEven = value;\n\
    \                    smallestIndex = i;\n                }\n            }\n  \
    \      }\n        if (smallestEven != Long.MAX_VALUE) {\n            result.add(smallestEven);\n\
    \            result.add(smallestIndex);\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        long smallestEvenValue\
    \ = Long.MAX_VALUE;\n        int smallestIndex = 0;\n        for(int i = 0; i\
    \ < arr.size(); i++) {\n            long value = arr.get(i);\n            if(value\
    \ % 2 == 0) {\n                if(value < smallestEvenValue) {\n             \
    \       smallestEvenValue = value;\n                    smallestIndex = i;\n \
    \               }\n            }\n        }\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n \
    \       int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            if (arr.get(i) % 2 == 0) {\n                if (smallestEven > arr.get(i))\
    \ {\n                    smallestEven = arr.get(i);\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = Long.MAX_VALUE;\n\
    \        int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            long value = arr.get(i);\n            if (value % 2 == 0) {\n\
    \                if (value < smallestEvenValue) {\n                    smallestEvenValue\
    \ = value;\n                    smallestIndex = i;\n                }\n      \
    \      }\n        }\n        if (smallestEvenValue == Long.MAX_VALUE) {\n    \
    \        return result;\n        }\n        long smallestValue = arr[smallestIndex];\n\
    \        long smallestEvenValueIndex = arr[smallestIndex];\n        for (int i\
    \ = smallestIndex + 1; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if (value % 2 == 0) {\n                if (value < smallestEvenValue)\
    \ {\n                    smallestEvenValue = value;\n                    smallestEvenValueIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestEvenValueIndex);\n        return result;", "     \
    \   ArrayList<Long> result = new ArrayList<>();\n        long smallestEvenValue\
    \ = Long.MAX_VALUE;\n        long smallestIndex = 0;\n        int i = 0;\n   \
    \     while (i < arr.size()) {\n            long value = arr.get(i);\n       \
    \     if (value % 2 == 0) {\n                if (value < smallestEvenValue) {\n\
    \                    smallestEvenValue = value;\n                    smallestIndex\
    \ = i;\n                }\n            } else if (value < smallestEvenValue) {\n\
    \                smallestEvenValue = value;\n                smallestIndex = i;\n\
    \            }\n            i++;\n        }\n        if (smallestEvenValue ==\
    \ Long.MAX_VALUE) {\n            return result;\n        }\n        ArrayList<Long>\
    \ evenValues = new ArrayList<>();\n        evenValues.add(smallestEvenValue);\n\
    \        evenValues.addAll(arr.subList(smallestIndex + 1, arr.size()));\n    \
    \    evenValues.sort((a, b) -> a - b);\n        smallestEvenValue = evenValues.get(0);\n\
    \        smallestIndex = evenValues.get(1);\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = Long.MIN_VALUE;\n\
    \        int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            long value = arr.get(i);\n            if (value % 2 == 0) {\n\
    \                if (smallestEvenValue < value) {\n                    smallestEvenValue\
    \ = value;\n                    smallestIndex = i;\n                }\n      \
    \      }\n        }\n        if (smallestEvenValue == Long.MIN_VALUE) {\n    \
    \        return result;\n        }\n        ArrayList<Long> evens = new ArrayList<>();\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if (value % 2 == 0) {\n                evens.add(value);\n      \
    \      }\n        }\n        Collections.sort(evens);\n        smallestEvenValue\
    \ = evens.get(0);\n        smallestIndex = evens.get(0);\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = Long.MAX_VALUE;\n\
    \        int smallestIndex = 0;\n        int size = arr.size();\n        for (int\
    \ i = 0; i < size; i++) {\n            long value = arr.get(i);\n            if\
    \ (value % 2 == 0) {\n                if (smallestEvenValue < value) {\n     \
    \               smallestEvenValue = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        if (smallestEvenValue\
    \ == Long.MAX_VALUE) {\n            return result;\n        }\n        ArrayList<Long>\
    \ evenValues = new ArrayList<>();\n        for (int i = 0; i < size; i++) {\n\
    \            long value = arr.get(i);\n            if (value % 2 == 0) {\n   \
    \             evenValues.add(value);\n            }\n        }\n        Collections.sort(evenValues);\n\
    \        smallestEvenValue = evenValues.get(0);\n        smallestIndex = evenValues.get(0);\n\
    \        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = 0;\n        long smallestIndex = 0;\n      \
    \  long currentSmallestEvenValue = 0;\n        long currentSmallestIndex = 0;\n\
    \        long currentSmallestValue = 0;\n        long currentSmallestIndex2 =\
    \ 0;\n        long currentSmallestValue2 = 0;\n        long currentSmallestIndex3\
    \ = 0;\n        long currentSmallestValue3 = 0;\n        long currentSmallestIndex4\
    \ = 0;\n        long currentSmallestValue4 = 0;\n        long currentSmallestIndex5\
    \ = 0;\n        long currentSmallestValue5 = 0;\n        long currentSmallestIndex6\
    \ = 0;\n        long currentSmallestValue6 = 0;\n        long currentSmallestIndex7\
    \ = 0;\n        long currentSmallestValue7 = 0;\n        long currentSmallestIndex8\
    \ = 0;\n        long currentSmallestValue8 = 0;\n        long currentSmallestIndex9\
    \ = 0;\n        long currentSmallestValue9 = 0;\n        long currentSmallestIndex10\
    \ = 0;\n        long currentSmallestValue10 = 0;\n        long currentSmallestIndex11\
    \ = 0;\n        long currentSmallestValue11 = 0;\n        long currentSmallestIndex12\
    \ = 0;\n        long currentSmallestValue12 = 0;\n        long currentSmallestIndex13\
    \ = 0;\n        long currentSmallestValue13 = 0;\n        long currentSmallestIndex14\
    \ = 0;\n        long currentSmallestValue14 = 0;\n        long currentSmallestIndex15\
    \ = 0;\n        long currentSmallestValue15 = 0;\n        long currentSmallestIndex16\
    \ = 0;\n        long currentSmallestValue16 = 0;\n        long currentSmallestIndex17\
    \ = 0;\n        long currentSmallestValue17 = 0;\n        long currentSmallestIndex18\
    \ = 0;\n        long currentSmallestValue18 = 0;\n        long currentSmallestIndex19\
    \ = 0;\n        long currentSmallestValue19 = 0;\n        long currentSmallestIndex20\
    \ = 0;\n        long currentSmallestValue20 = 0;\n        long currentSmallestIndex21\
    \ = 0;\n        long currentSmallestValue21 = 0;\n        long currentSmallestIndex22\
    \ = 0;\n        long currentSmallestValue22 = 0;\n        long currentSmallestIndex23\
    \ = 0;\n        long currentSmallestValue23 = 0;\n        long currentSmallestIndex24\
    \ = 0;\n        long currentSmallestValue24 = 0;\n        long currentSmallestIndex25",
  "        ArrayList<Long> result = new ArrayList<>();\n        long smallestEven\
    \ = Long.MAX_VALUE;\n        long smallestIndex = -1;\n        for (int i = 0;\
    \ i < arr.size(); i++) {\n            long value = arr.get(i);\n            if\
    \ (value % 2 == 0) {\n                if (smallestEven > value) {\n          \
    \          smallestEven = value;\n                    smallestIndex = i;\n   \
    \             }\n            }\n        }\n        if (smallestEven != Long.MAX_VALUE)\
    \ {\n            result.add(smallestEven);\n            result.add(smallestIndex);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex =\
    \ 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i)\
    \ % 2 == 0) {\n                if (smallestEvenValue > arr.get(i)) {\n       \
    \             smallestEvenValue = arr.get(i);\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = 0;\n        int\
    \ smallestIndex = 0;\n        long smallestValue = 0;\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        ", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n \
    \       int smallestIndex = 0;\n        int index = 0;\n        for (Long val\
    \ : arr) {\n            if (val % 2 == 0) {\n                if (smallestEven\
    \ > val) {\n                    smallestEven = val;\n                    smallestIndex\
    \ = index;\n                }\n                index++;\n            }\n     \
    \   }\n        result.add(smallestEven);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        long smallestEvenValue = 0;\n        long smallestIndex = 0;\n      \
    \  long smallestValue = 0;\n        long largestValue = 0;\n        long largestIndex\
    \ = 0;\n        boolean isEven = false;\n        boolean isSmallestEven = false;\n\
    \        boolean isSmallestIndex = false;\n        boolean isLargestEven = false;\n\
    \        boolean isLargestIndex = false;\n        boolean isLargestValue = false;\n\
    \        boolean isSmallestValue = false;\n        boolean isLargestIndex = false;\n\
    \        boolean isLargestValue = false;\n        boolean isSmallestIndex = false;\n\
    \        boolean isSmallestValue = false;\n        boolean isSmallestIndex = false;\n\
    \        boolean isSmallestIndex = false;\n        boolean isSmallestIndex = false;\n\
    \        boolean isSmallestIndex = false;\n        boolean isSmallestIndex = false;\n\
    \        boolean isSmallestIndex = false;\n        boolean isSmallestIndex = false;\n\
    \        boolean isSmallestIndex = false;\n        boolean isSmallestIndex = false;\n\
    \        boolean isSmallestIndex = false;\n        boolean isSmallestIndex = false;\n\
    \        boolean isSmallestIndex = false;\n        boolean isSmallestIndex = false;\n\
    \        boolean isSmallestIndex = false;\n        boolean isSmallestIndex = false;\n\
    \        boolean isSmallestIndex = false;\n        boolean isSmallestIndex = false;\n\
    \        boolean isSmallestIndex = false;\n        boolean isSmallestIndex = false;\n\
    \        boolean isSmallestIndex = false;\n        boolean isSmallestIndex = false;\n\
    \        boolean isSmallestIndex = false;\n        boolean isSmallestIndex = false;\n\
    \        boolean isSmallestIndex = false;\n        boolean isSmallestIndex = false;\n\
    \        boolean isSmallestIndex = false;\n        boolean isSmallestIndex = false;\n\
    \        boolean isSmallestIndex = false;\n        boolean isSmallestIndex = false;\n\
    \        boolean isSmallestIndex = false;\n        boolean isSmallestIndex = false;\n\
    \        boolean isSmallestIndex = false;\n        boolean isSmallestIndex = false;\n\
    \        boolean isSmallestIndex = false;\n        boolean isSmallestIndex = false;\n\
    \        boolean isSmallestIndex = false;\n        boolean isSmallestIndex = false;\n\
    \        boolean isSmallestIndex = false;\n        boolean isSmallestIndex = false;\n\
    \        boolean isSmallestIndex = false;\n        boolean isSmallestIndex = false;\n\
    \        boolean ", "        ArrayList<Long> result = new ArrayList<>();\n   \
    \     long smallestEvenValue = 0;\n        int smallestIndex = 0;\n        long\
    \ smallestValue = 0;\n        for(int i = 0; i < arr.size(); i++) {\n        \
    \    long value = arr.get(i);\n            if(value % 2 == 0) {\n            \
    \    if(smallestEvenValue == 0) {\n                    smallestEvenValue = value;\n\
    \                    smallestIndex = i;\n                    smallestValue = value;\n\
    \                }\n                else if(smallestEvenValue == value) {\n  \
    \                  smallestIndex = i;\n                    smallestValue = value;\n\
    \                }\n            }\n        }\n        if(smallestEvenValue !=\
    \ 0) {\n            smallestValue = smallestEvenValue;\n        }\n        result.add(smallestValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = 0;\n        int\
    \ smallestIndex = 0;\n        int size = arr.size();\n        for (int i = 0;\
    \ i < size; i++) {\n            if (arr.get(i) % 2 == 0) {\n                if\
    \ (smallestEvenValue < arr.get(i)) {\n                    smallestEvenValue =\
    \ arr.get(i);\n                    smallestIndex = i;\n                }\n   \
    \         }\n        }\n        if (smallestEvenValue == 0) {\n            return\
    \ result;\n        }\n        ArrayList<Long> evenValues = new ArrayList<>();\n\
    \        for (int i = 0; i < size; i++) {\n            if (arr.get(i) % 2 == 0)\
    \ {\n                evenValues.add(arr.get(i));\n            }\n        }\n \
    \       Collections.sort(evenValues);\n        if (evenValues.size() == 1) {\n\
    \            result.add(smallestEvenValue);\n            result.add(smallestIndex);\n\
    \            return result;\n        }\n        ArrayList<Long> evenValues2 =\
    \ new ArrayList<>();\n        for (int i = 0; i < size; i++) {\n            if\
    \ (arr.get(i) % 2 == 0) {\n                evenValues2.add(arr.get(i));\n    \
    \        }\n        }\n        Collections.sort(evenValues2);\n        if (evenValues2.size()\
    \ == 1) {\n            result.add(smallestEvenValue);\n            result.add(smallestIndex);\n\
    \            return result;\n        }\n        ArrayList<Long> evenValues3 =\
    \ new ArrayList<>();\n        for (int i = 0; i < size; i++) {\n            if\
    \ (arr.get(i) % 2 == 0) {\n                evenValues3.add(arr.get(i));\n    \
    \        }\n        }\n        Collections.sort(evenValues3);\n        if (evenValues3.size()\
    \ == 1) {\n            result.add(smallestEvenValue);\n            result.add(smallestIndex);\n\
    \            return result;\n        }\n        ArrayList<Long> evenValues4 =\
    \ new ArrayList<>();\n        for (int i = 0; i < size; i++) {\n            if\
    \ (arr.get(i) % 2 == 0) {\n                evenValues4.add(arr.get(i));\n    \
    \        }\n        }\n        Collections.sort(evenValues4);\n        if (evenValues4.size()\
    \ == 1) {\n            result.add(smallestEvenValue);\n            result.add(smallestIndex);\n\
    \            return result;\n        }\n        ArrayList<Long> evenValues5 =\
    \ new ArrayList<>();\n        for (int i = 0; i < size; i++) {\n            if\
    \ (arr.get(i) % 2 == 0) {\n                evenValues5.add(arr.get(i));\n    \
    \        }\n        }\n        Collections.sort(evenValues5);\n        if (evenValues5.size()\
    \ == 1) {\n            result.add(smallestEvenValue);\n            result.add(smallestIndex);\n\
    \            return result;\n        }\n        ArrayList<Long> evenValues6 =\
    \ new ArrayList<>();\n        for (int i = 0; i < size; i++) {\n            if\
    \ (arr.get(i) % 2 == 0) {\n                evenValues6.add(arr.get(i));\n    \
    \        }\n        }\n        Collections.sort(evenValues6);\n        if (evenValues6.size()\
    \ == 1) {\n            result.add(smallestEvenValue);\n            result.add(smallestIndex);\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        long smallestEvenValue\
    \ = 0;\n        int smallestIndex = 0;\n        for(int i = 0; i < arr.size();\
    \ i++) {\n            long value = arr.get(i);\n            if(value % 2 == 0)\
    \ {\n                if(smallestEvenValue < value) {\n                    smallestEvenValue\
    \ = value;\n                    smallestIndex = i;\n                }\n      \
    \      }\n        }\n        if(smallestEvenValue == 0) {\n            return\
    \ result;\n        }\n        ArrayList<Long> evenValues = new ArrayList<>();\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if(value % 2 == 0) {\n                evenValues.add(value);\n  \
    \          }\n        }\n        Collections.sort(evenValues);\n        for(int\
    \ i = 0; i < evenValues.size(); i++) {\n            if(evenValues.get(i) == smallestEvenValue)\
    \ {\n                result.add(smallestEvenValue);\n                result.add(smallestIndex);\n\
    \                break;\n            }\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        long smallestEven\
    \ = Long.MAX_VALUE;\n        int smallestIndex = 0;\n        for (int i = 0; i\
    \ < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n             \
    \   if (smallestEven > arr.get(i)) {\n                    smallestEven = arr.get(i);\n\
    \                    smallestIndex = i;\n                }\n            }\n  \
    \      }\n        result.add(smallestEven);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = 0;\n        int smallestIndex = 0;\n       \
    \ for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if(value % 2 == 0) {\n                if(smallestEvenValue < value)\
    \ {\n                    smallestEvenValue = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        if(smallestEvenValue\
    \ == 0) {\n            return result;\n        }\n        for(int i = 0; i < arr.size();\
    \ i++) {\n            long value = arr.get(i);\n            if(value % 2 == 0)\
    \ {\n                if(smallestEvenValue == value) {\n                    result.add(smallestEvenValue);\n\
    \                    result.add(smallestIndex);\n                }\n         \
    \   }\n        }\n        return result;", "        ArrayList<Long> result = new\
    \ ArrayList<>();\n        long smallestEvenValue = Long.MAX_VALUE;\n        int\
    \ smallestIndex = 0;\n        for(int i = 0; i < arr.size(); i++) {\n        \
    \    long value = arr.get(i);\n            if(value % 2 == 0) {\n            \
    \    if(value < smallestEvenValue) {\n                    smallestEvenValue =\
    \ value;\n                    smallestIndex = i;\n                }\n        \
    \    }\n        }\n        if(smallestEvenValue == Long.MAX_VALUE) {\n       \
    \     return result;\n        }\n        long smallestEvenValueIndex = smallestIndex;\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if(value % 2 == 0) {\n                if(value < smallestEvenValue)\
    \ {\n                    smallestEvenValue = value;\n                    smallestEvenValueIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEvenValue,\
    \ smallestEvenValueIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n \
    \       int smallestIndex = 0;\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            if(arr.get(i) % 2 == 0) {\n                if(smallestEven > arr.get(i))\
    \ {\n                    smallestEven = arr.get(i);\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallest_value = Long.MAX_VALUE;\n\
    \        int smallest_index = 0;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            long value = arr.get(i);\n            if(value % 2 == 0) {\n\
    \                if(value < smallest_value) {\n                    smallest_value\
    \ = value;\n                    smallest_index = i;\n                }\n     \
    \       }\n        }\n        result.add(smallest_value);\n        result.add(smallest_index);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallest_even_value = arr.get(0);\n        int smallest_even_index\
    \ = -1;\n        int smallest_even_index_in_arr = -1;\n        for (int i = 1;\
    \ i < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n           \
    \     if (smallest_even_value < arr.get(i)) {\n                    smallest_even_value\
    \ = arr.get(i);\n                    smallest_even_index = i;\n              \
    \      smallest_even_index_in_arr = i;\n                }\n            }\n   \
    \     }\n        if (smallest_even_index == -1) {\n            return result;\n\
    \        }\n        ArrayList<Long> smallest_even_value_and_index = new ArrayList<>();\n\
    \        smallest_even_value_and_index.add(smallest_even_value);\n        smallest_even_value_and_index.add(smallest_even_index);\n\
    \        smallest_even_value_and_index.add(smallest_even_index_in_arr);\n    \
    \    result.add(smallest_even_value_and_index);\n        return result;", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long smallest_value\
    \ = 0;\n        int smallest_index = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            if (arr.get(i) % 2 == 0) {\n                if (smallest_value\
    \ < arr.get(i)) {\n                    smallest_value = arr.get(i);\n        \
    \            smallest_index = i;\n                }\n            }\n        }\n\
    \        result.add(smallest_value);\n        result.add(smallest_index);\n  \
    \      return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex =\
    \ 0;\n        int index = 0;\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            long value = arr.get(i);\n            int evenValue = value % 2 ==\
    \ 0 ? value : value + 1;\n            if(evenValue < smallestEvenValue) {\n  \
    \              smallestEvenValue = evenValue;\n                smallestIndex =\
    \ i;\n            }\n            if(evenValue == smallestEvenValue) {\n      \
    \          result.add(smallestEvenValue);\n                result.add(smallestIndex);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n        int\
    \ smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n       \
    \     if (arr.get(i) % 2 == 0) {\n                if (smallestEven > arr.get(i))\
    \ {\n                    smallestEven = arr.get(i);\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        long smalest_value = 0;\n        int smalest_index\
    \ = 0;\n        long smalest_value_even = 0;\n        int smalest_index_even =\
    \ 0;\n        long smalest_value_odd = 0;\n        int smalest_index_odd = 0;\n\
    \        long smalest_value_even_index = 0;\n        int smalest_index_even_index\
    \ = 0;\n        long smalest_value_odd_index = 0;\n        int smalest_index_odd_index\
    \ = 0;\n        long smalest_value_even_index_index = 0;\n        int smalest_index_even_index_index\
    \ = 0;\n        long smalest_value_odd_index_index = 0;\n        int smalest_index_odd_index_index\
    \ = 0;\n        long smalest_value_even_index_index_index = 0;\n        int smalest_index_even_index_index_index\
    \ = 0;\n        long smalest_value_odd_index_index_index = 0;\n        int smalest_index_odd_index_index_index\
    \ = 0;\n        long smalest_value_even_index_index_index_index = 0;\n       \
    \ int smalest_index_even_index_index_index_index = 0;\n        long smalest_value_odd_index_index_index_index\
    \ = 0;\n        int smalest_index_odd_index_index_index_index = 0;\n        long\
    \ smalest_value_even_index_index_index_index_index = 0;\n        int smalest_index_even_index_index_index_index\
    \ = 0;\n        long smalest_value_odd_index_index_index_index = 0;\n        int\
    \ smalest_index_odd_index_index_index_index = 0;\n        long smalest_value_even_index_index_index_index_index\
    \ = 0;\n        int smalest_index_even_index_index_index_index_index = 0;\n  \
    \      long smalest_value_odd_index_index_index_index_index = 0;\n        int\
    \ smalest_index_odd_index_index_index_index_index = 0;\n        long smalest_value_even_index_index_index_index_index_index\
    \ = 0;\n        int smalest_index_even_index_index_index_index_index_index = 0;\n\
    \        long smalest_value_odd_index_index_index_index_index_index = 0;\n   \
    \     int smalest_index_odd_index_index_index_index_index_index = 0;\n       \
    \ long smalest_value_even_index_index_index_index_index_index = 0;\n        int\
    \ smalest_index_even_index_index_index_index_index_index = 0;\n        long smalest_value_odd_index_index_index_index_index_index_index\
    \ = 0;\n        int smalest_index_odd_index_index_index_index_index_index_index\
    \ = 0;\n        long smalest_value_even_index_index_index_index_index_index_index\
    \ = 0;\n        int smalest_index_even_index_index_index_index_index_index_index\
    \ = 0;\n        long smalest_value_odd_", "        ArrayList<Long> result = new\
    \ ArrayList<>();\n        long smallestEvenValue = Long.MAX_VALUE;\n        int\
    \ smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n       \
    \     long value = arr.get(i);\n            if (value % 2 == 0) {\n          \
    \      if (value < smallestEvenValue) {\n                    smallestEvenValue\
    \ = value;\n                    smallestIndex = i;\n                }\n      \
    \      }\n        }\n        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if(value % 2 == 0) {\n                if(value < smallestEven) {\n\
    \                    smallestEven = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        if(smallestEven !=\
    \ Long.MAX_VALUE) {\n            result.add(smallestEven);\n            result.add(smallestIndex);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex =\
    \ 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long value =\
    \ arr.get(i);\n            if (value % 2 == 0) {\n                if (smallestEvenValue\
    \ < value) {\n                    smallestEvenValue = value;\n               \
    \     smallestIndex = i;\n                }\n            }\n        }\n      \
    \  if (smallestEvenValue == Long.MAX_VALUE) {\n            return result;\n  \
    \      }\n        ArrayList<Long> evenValues = new ArrayList<>();\n        for\
    \ (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n\
    \                evenValues.add(arr.get(i));\n            }\n        }\n     \
    \   Collections.sort(evenValues);\n        smallestEvenValue = evenValues.get(0);\n\
    \        smallestIndex = evenValues.get(0);\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n \
    \       int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            long value = arr.get(i);\n            if (value % 2 == 0) {\n   \
    \             if (smallestEven > value) {\n                    smallestEven =\
    \ value;\n                    smallestIndex = i;\n                }\n        \
    \    }\n        }\n        result.add(smallestEven);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallest_value = Long.MAX_VALUE;\n        int smallest_index = -1;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if (value % 2 == 0) {\n                if (value < smallest_value)\
    \ {\n                    smallest_value = value;\n                    smallest_index\
    \ = i;\n                }\n            }\n        }\n        if (smallest_index\
    \ == -1) {\n            return result;\n        }\n        smallest_value = arr[smallest_index];\n\
    \        result.add(smallest_value);\n        result.add(smallest_index);\n  \
    \      return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = 0;\n        int smallestIndex = 0;\n       \
    \ for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if(value % 2 == 0) {\n                if(smallestEvenValue < value)\
    \ {\n                    smallestEvenValue = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        if(smallestEvenValue\
    \ == 0) {\n            return result;\n        }\n        for(int i = 0; i < arr.size();\
    \ i++) {\n            long value = arr.get(i);\n            if(value % 2 == 0)\
    \ {\n                if(smallestEvenValue < value) {\n                    smallestEvenValue\
    \ = value;\n                    smallestIndex = i;\n                }\n      \
    \      }\n        }\n        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                if (smallestEven > arr.get(i)) {\n              \
    \      smallestEven = arr.get(i);\n                    smallestIndex = i;\n  \
    \              }\n            }\n        }\n        res.add(smallestEven);\n \
    \       res.add(smallestIndex);\n        return res;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = Long.MAX_VALUE;\n\
    \        int smallestIndex = 0;\n        int i = 0;\n        while (i < arr.size())\
    \ {\n            long value = arr.get(i);\n            if (value % 2 == 0) {\n\
    \                if (value < smallestEvenValue) {\n                    smallestEvenValue\
    \ = value;\n                    smallestIndex = i;\n                }\n      \
    \      }\n            i++;\n        }\n        if (smallestEvenValue == Long.MAX_VALUE)\
    \ {\n            return result;\n        }\n        long smallestEvenValueIndex\
    \ = smallestIndex + 1;\n        result.add(smallestEvenValue);\n        result.add(smallestEvenValueIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MIN_VALUE;\n        int smallestIndex =\
    \ 0;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i)\
    \ % 2 == 0) {\n                if(smallestEvenValue > arr.get(i)) {\n        \
    \            smallestEvenValue = arr.get(i);\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        long smalest_value = Long.MIN_VALUE;\n   \
    \     int smalest_index = 0;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            if (arr.get(i) % 2 == 0) {\n                if (smalest_value < arr.get(i))\
    \ {\n                    smalest_value = arr.get(i);\n                    smalest_index\
    \ = i;\n                }\n            }\n        }\n        if (smalest_value\
    \ == Long.MIN_VALUE) {\n            return res;\n        }\n        res.add(smalest_value);\n\
    \        res.add(smalest_index);\n        return res;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEven = Long.MIN_VALUE;\n \
    \       int smallestIndex = 0;\n        int index = 0;\n        for (int i = 0;\
    \ i < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n           \
    \     if (smallestEven > arr.get(i)) {\n                    smallestEven = arr.get(i);\n\
    \                    smallestIndex = i;\n                }\n            }\n  \
    \      }\n        if (smallestEven == Long.MIN_VALUE) {\n            return result;\n\
    \        }\n        smallestEven = smallestEven % 2;\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = 0;\n        long\
    \ smallestIndex = 0;\n        long currentIndex = 0;\n        for(long i : arr)\
    \ {\n            if(i%2 == 0) {\n                smallestEvenValue = i;\n    \
    \            smallestIndex = currentIndex;\n            }\n            currentIndex++;\n\
    \        }\n        if(smallestEvenValue == 0) {\n            return result;\n\
    \        }\n        for(long i : arr) {\n            if(i%2 == 0) {\n        \
    \        if(i == smallestEvenValue) {\n                    result.add(smallestEvenValue);\n\
    \                    result.add(smallestIndex);\n                }\n         \
    \   }\n        }\n        return result;", "        ArrayList<Long> result = new\
    \ ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex\
    \ = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long value\
    \ = arr.get(i);\n            if (value % 2 == 0) {\n                if (value\
    \ < smallestEven) {\n                    smallestEven = value;\n             \
    \       smallestIndex = i;\n                }\n            }\n        }\n    \
    \    result.add(smallestEven);\n        result.add(smallestIndex);\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex = 0;\n      \
    \  int size = arr.size();\n        for (int i = 0; i < size; i++) {\n        \
    \    long value = arr.get(i);\n            if (value % 2 == 0) {\n           \
    \     if (value < smallestEvenValue) {\n                    smallestEvenValue\
    \ = value;\n                    smallestIndex = i;\n                }\n      \
    \      }\n        }\n        if (smallestEvenValue == Long.MAX_VALUE) {\n    \
    \        return result;\n        }\n        ArrayList<Long> evenValues = new ArrayList<>();\n\
    \        for (int i = 0; i < size; i++) {\n            long value = arr.get(i);\n\
    \            if (value % 2 == 0) {\n                evenValues.add(value);\n \
    \           }\n        }\n        Collections.sort(evenValues);\n        if (evenValues.size()\
    \ == 1) {\n            smallestEvenValue = evenValues.get(0);\n            smallestIndex\
    \ = evenValues.indexOf(smallestEvenValue);\n        }\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n \
    \       int smallestIndex = 0;\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            if(arr.get(i) % 2 == 0) {\n                if(smallestEven > arr.get(i))\
    \ {\n                    smallestEven = arr.get(i);\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n    \
    \    int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            long val = arr.get(i);\n            if (val % 2 == 0) {\n       \
    \         if (val < smallestEven) {\n                    smallestEven = val;\n\
    \                    smallestIndex = i;\n                }\n            }\n  \
    \      }\n        if (smallestEven != Long.MAX_VALUE) {\n            res.add(smallestEven);\n\
    \            res.add(smallestIndex);\n        }\n        return res;", "     \
    \   ArrayList<Long> result = new ArrayList<>();\n        long smallestEvenValue\
    \ = Long.MAX_VALUE;\n        int smallestIndex = 0;\n        for(int i = 0; i\
    \ < arr.size(); i++) {\n            long value = arr.get(i);\n            if(value\
    \ % 2 == 0) {\n                if(value < smallestEvenValue) {\n             \
    \       smallestEvenValue = value;\n                    smallestIndex = i;\n \
    \               }\n            }\n        }\n        if(smallestEvenValue == Long.MAX_VALUE)\
    \ {\n            return result;\n        }\n        ArrayList<Long> evenValues\
    \ = new ArrayList<>();\n        for(int i = 0; i < arr.size(); i++) {\n      \
    \      long value = arr.get(i);\n            if(value % 2 == 0) {\n          \
    \      evenValues.add(value);\n            }\n        }\n        Collections.sort(evenValues);\n\
    \        for(int i = 0; i < evenValues.size(); i++) {\n            if(evenValues.get(i)\
    \ == smallestEvenValue) {\n                result.add(smallestEvenValue);\n  \
    \              result.add(smallestIndex);\n                break;\n          \
    \  }\n        }\n        return result;", "        ArrayList<Long> result = new\
    \ ArrayList<>();\n        long smallestEven = Long.MIN_VALUE;\n        int smallestIndex\
    \ = 0;\n        int size = arr.size();\n        for(int i = 0; i < size; i++)\
    \ {\n            long value = arr.get(i);\n            if(value % 2 == 0) {\n\
    \                if(smallestEven > value) {\n                    smallestEven\
    \ = value;\n                    smallestIndex = i;\n                }\n      \
    \      }\n        }\n        if(smallestEven != Long.MIN_VALUE) {\n          \
    \  result.add(smallestEven);\n            result.add(smallestIndex);\n       \
    \ }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MIN_VALUE;\n        int smallestIndex = 0;\n\
    \        boolean foundSmallestEven = false;\n        for(int i = 0; i < arr.size();\
    \ i++) {\n            long value = arr.get(i);\n            if(!foundSmallestEven)\
    \ {\n                if(value % 2 == 0) {\n                    smallestEven =\
    \ value;\n                    foundSmallestEven = true;\n                }\n \
    \           }\n            else if(value < smallestEven) {\n                smallestEven\
    \ = value;\n                smallestIndex = i;\n            }\n        }\n   \
    \     if(smallestEven == Long.MIN_VALUE) {\n            return result;\n     \
    \   }\n        else if(smallestIndex == 0) {\n            result.add(smallestEven);\n\
    \            return result;\n        }\n        else {\n            ArrayList<Long>\
    \ temp = new ArrayList<>();\n            for(int i = 0; i < arr.size(); i++) {\n\
    \                if(i != smallestIndex) {\n                    temp.add(arr.get(i));\n\
    \                }\n            }\n            result.add(smallestEven);\n   \
    \         result.add(smallestIndex);\n            return temp;\n        }", " \
    \       ArrayList<Long> res = new ArrayList<>();\n        long smallestEven =\
    \ Long.MIN_VALUE;\n        int smallestIndex = 0;\n        int size = arr.size();\n\
    \        for (int i = 0; i < size; i++) {\n            if (arr.get(i) % 2 == 0)\
    \ {\n                if (smallestEven > arr.get(i)) {\n                    smallestEven\
    \ = arr.get(i);\n                    smallestIndex = i;\n                }\n \
    \           }\n        }\n        res.add(smallestEven);\n        res.add(smallestIndex);\n\
    \        return res;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = 0;\n        long smallestIndex = 0;\n      \
    \  long smallestValue = 0;\n        long index = 0;\n        for(long i : arr)\
    \ {\n            if(i%2 == 0) {\n                smallestEvenValue = i;\n    \
    \            smallestIndex = i;\n                smallestValue = i;\n        \
    \        index = i;\n            }\n            if(i == smallestEvenValue) {\n\
    \                smallestValue = i;\n                smallestIndex = i;\n    \
    \            index = i;\n            }\n        }\n        result.add(smallestValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n \
    \       int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            if (arr.get(i) % 2 == 0) {\n                if (smallestEven > arr.get(i))\
    \ {\n                    smallestEven = arr.get(i);\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = Long.MAX_VALUE;\n\
    \        int smallestIndex = 0;\n        for(long value : arr) {\n           \
    \ if(value % 2 == 0) {\n                if(smallestEvenValue < value) {\n    \
    \                smallestEvenValue = value;\n                    smallestIndex\
    \ = arr.indexOf(value);\n                }\n            }\n        }\n       \
    \ result.add(smallestEvenValue);\n        result.add(smallestIndex);\n       \
    \ return result;", "        ArrayList<Long> res = new ArrayList<>();\n       \
    \ long smallestEvenValue = arr.get(0);\n        int smallestIndex = 0;\n     \
    \   for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) % 2 ==\
    \ 0) {\n                if (smallestEvenValue < arr.get(i)) {\n              \
    \      smallestEvenValue = arr.get(i);\n                    smallestIndex = i;\n\
    \                }\n            }\n        }\n        res.add(smallestEvenValue);\n\
    \        res.add(smallestIndex);\n        return res;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n \
    \       long smallestIndex = -1;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            if (arr.get(i) % 2 == 0) {\n                if (smallestEven\
    \ == Long.MAX_VALUE) {\n                    smallestEven = arr.get(i);\n     \
    \               smallestIndex = i;\n                } else if (arr.get(i) < smallestEven)\
    \ {\n                    smallestEven = arr.get(i);\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = Long.MAX_VALUE;\n\
    \        int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            if (arr.get(i) % 2 == 0) {\n                if (smallestEvenValue\
    \ < arr.get(i)) {\n                    smallestEvenValue = arr.get(i);\n     \
    \               smallestIndex = i;\n                }\n            }\n       \
    \ }\n        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallest_value = Long.MAX_VALUE;\n        int smallest_index = 0;\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if(value % 2 == 0) {\n                if(value < smallest_value)\
    \ {\n                    smallest_value = value;\n                    smallest_index\
    \ = i;\n                }\n            }\n        }\n        result.add(smallest_value);\n\
    \        result.add(smallest_index);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n \
    \       int smallestIndex = 0;\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            long value = arr.get(i);\n            if(value % 2 == 0) {\n    \
    \            if(value < smallestEven) {\n                    smallestEven = value;\n\
    \                    smallestIndex = i;\n                }\n            }\n  \
    \      }\n        if(smallestEven != Long.MAX_VALUE) {\n            result.add(smallestEven);\n\
    \            result.add(smallestIndex);\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        long smallestEven\
    \ = Long.MAX_VALUE;\n        long smallestIndex = -1;\n        int count = 0;\n\
    \        for (Long val : arr) {\n            if (val % 2 == 0) {\n           \
    \     if (smallestEven == Long.MAX_VALUE) {\n                    smallestEven\
    \ = val;\n                    smallestIndex = count;\n                } else if\
    \ (val < smallestEven) {\n                    smallestEven = val;\n          \
    \          smallestIndex = count;\n                }\n                count++;\n\
    \            }\n        }\n        if (smallestEven == Long.MAX_VALUE) {\n   \
    \         return result;\n        }\n        ArrayList<Long> evens = new ArrayList<>();\n\
    \        evens.add(smallestEven);\n        evens.add(smallestIndex);\n       \
    \ evens.addAll(arr.subList(1, arr.size()));\n        Collections.sort(evens);\n\
    \        result.add(evens.get(0));\n        result.add(evens.get(1));\n      \
    \  return result;", "        ArrayList<Long> result = new ArrayList<>();\n   \
    \     long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n  \
    \      int index = 0;\n        for (Long val : arr) {\n            if (val % 2\
    \ == 0) {\n                if (smallestEven > val) {\n                    smallestEven\
    \ = val;\n                    smallestIndex = index;\n                }\n    \
    \            index++;\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = 0;\n        int\
    \ smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n       \
    \     if (arr.get(i) % 2 == 0) {\n                if (smallestEvenValue < arr.get(i))\
    \ {\n                    smallestEvenValue = arr.get(i);\n                   \
    \ smallestIndex = i;\n                }\n            }\n        }\n        if\
    \ (smallestEvenValue == 0) {\n            return result;\n        }\n        ArrayList<Long>\
    \ evenValues = new ArrayList<>();\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            if (arr.get(i) % 2 == 0) {\n                evenValues.add(arr.get(i));\n\
    \            }\n        }\n        Collections.sort(evenValues);\n        smallestEvenValue\
    \ = evenValues.get(0);\n        smallestIndex = evenValues.get(0);\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallest_value = Long.MAX_VALUE;\n\
    \        int smallest_index = -1;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            if (arr.get(i) % 2 == 0) {\n                if (arr.get(i) <\
    \ smallest_value) {\n                    smallest_value = arr.get(i);\n      \
    \              smallest_index = i;\n                }\n            }\n       \
    \ }\n        result.add(smallest_value);\n        result.add(smallest_index);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                if (smallestEven > arr.get(i)) {\n              \
    \      smallestEven = arr.get(i);\n                    smallestIndex = i;\n  \
    \              }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n \
    \       int smallestIndex = 0;\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            long value = arr.get(i);\n            if(value % 2 == 0) {\n    \
    \            if(value < smallestEven) {\n                    smallestEven = value;\n\
    \                    smallestIndex = i;\n                }\n            }\n  \
    \      }\n        if(smallestEven != Long.MAX_VALUE) {\n            result.add(smallestEven);\n\
    \            result.add(smallestIndex);\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        long smallestEvenValue\
    \ = 0;\n        int smallestIndex = 0;\n        long smallestValue = 0;\n    \
    \    boolean isSmallestEvenValue = false;\n        boolean isSmallestIndex = false;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if (value % 2 == 0) {\n                smallestEvenValue = value;\n\
    \                smallestIndex = i;\n                isSmallestEvenValue = true;\n\
    \            }\n            if (value == smallestEvenValue) {\n              \
    \  smallestValue = value;\n                isSmallestEvenValue = true;\n     \
    \           isSmallestIndex = true;\n            }\n        }\n        if (isSmallestEvenValue)\
    \ {\n            if (smallestIndex == arr.size() - 1) {\n                result.add(smallestValue);\n\
    \            } else {\n                result.add(smallestValue, smallestIndex);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n        int\
    \ smallestIndex = 0;\n        for(int i = 0; i < arr.size(); i++) {\n        \
    \    long value = arr.get(i);\n            if((value & 1) == 0) {\n          \
    \      if(smallestEven == Long.MAX_VALUE) {\n                    smallestEven\
    \ = value;\n                    smallestIndex = i;\n                } else if(value\
    \ < smallestEven) {\n                    smallestEven = value;\n             \
    \       smallestIndex = i;\n                }\n            }\n        }\n    \
    \    result.add(smallestEven);\n        result.add(smallestIndex);\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex = 0;\n      \
    \  for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if((value & 1) == 0) {\n                if(value < smallestEvenValue)\
    \ {\n                    smallestEvenValue = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        if(smallestEvenValue\
    \ == Long.MAX_VALUE) {\n            return result;\n        }\n        ArrayList<Long>\
    \ evenValues = new ArrayList<>();\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            long value = arr.get(i);\n            if((value & 1) == 0) {\n\
    \                evenValues.add(value);\n            }\n        }\n        Collections.sort(evenValues);\n\
    \        for(int i = 0; i < evenValues.size(); i++) {\n            if(evenValues.get(i)\
    \ == smallestEvenValue) {\n                result.add(smallestEvenValue);\n  \
    \              result.add(smallestIndex);\n                break;\n          \
    \  }\n        }\n        return result;", "        ArrayList<Long> result = new\
    \ ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex\
    \ = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i)\
    \ % 2 == 0) {\n                if (smallestEven > arr.get(i)) {\n            \
    \        smallestEven = arr.get(i);\n                    smallestIndex = i;\n\
    \                }\n            }\n        }\n        if (smallestEven != Long.MAX_VALUE)\
    \ {\n            result.add(smallestEven);\n            result.add(smallestIndex);\n\
    \        }\n        return result;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if(value % 2 == 0) {\n                if(value < smallestEven) {\n\
    \                    smallestEven = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        if(smallestEven !=\
    \ Long.MAX_VALUE) {\n            res.add(smallestEven);\n            res.add(smallestIndex);\n\
    \        }\n        return res;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex =\
    \ 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long value =\
    \ arr.get(i);\n            if (value % 2 == 0) {\n                if (value <\
    \ smallestEvenValue) {\n                    smallestEvenValue = value;\n     \
    \               smallestIndex = i;\n                }\n            }\n       \
    \ }\n        if (smallestEvenValue == Long.MAX_VALUE) {\n            return result;\n\
    \        }\n        ArrayList<Long> evenValues = new ArrayList<>();\n        evenValues.add(smallestEvenValue);\n\
    \        evenValues.addAll(arr.subList(smallestIndex + 1, arr.size()));\n    \
    \    evenValues.sort((a, b) -> a - b);\n        smallestEvenValue = evenValues.get(0);\n\
    \        smallestIndex = evenValues.get(1);\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        long smallest_even_value = Long.MIN_VALUE;\n\
    \        int smallest_even_index = -1;\n        int index = 0;\n        for (int\
    \ i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n      \
    \      if (value % 2 == 0) {\n                if (smallest_even_value < value)\
    \ {\n                    smallest_even_value = value;\n                    smallest_even_index\
    \ = index;\n                }\n                index++;\n            }\n     \
    \   }\n        if (smallest_even_index == -1) {\n            return res;\n   \
    \     }\n        smallest_even_index--;\n        res.add(smallest_even_value);\n\
    \        res.add(smallest_even_index);\n        return res;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        long smalest_value = Long.MAX_VALUE;\n   \
    \     int smalest_index = 0;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            if (arr.get(i) % 2 == 0) {\n                if (smalest_value < arr.get(i))\
    \ {\n                    smalest_value = arr.get(i);\n                    smalest_index\
    \ = i;\n                }\n            }\n        }\n        res.add(smalest_value);\n\
    \        res.add(smalest_index);\n        return res;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = 0;\n        long\
    \ smallestIndex = 0;\n        long smallestValue = 0;\n        long largestEvenValue\
    \ = 0;\n        long largestIndex = 0;\n        long largestValue = 0;\n     \
    \   long largestEvenValueIndex = 0;\n        long largestEvenValueIndex2 = 0;\n\
    \        long largestEvenValueIndex3 = 0;\n        long largestEvenValueIndex4\
    \ = 0;\n        long largestEvenValueIndex5 = 0;\n        long largestEvenValueIndex6\
    \ = 0;\n        long largestEvenValueIndex7 = 0;\n        long largestEvenValueIndex8\
    \ = 0;\n        long largestEvenValueIndex9 = 0;\n        long largestEvenValueIndex10\
    \ = 0;\n        long largestEvenValueIndex11 = 0;\n        long largestEvenValueIndex12\
    \ = 0;\n        long largestEvenValueIndex13 = 0;\n        long largestEvenValueIndex14\
    \ = 0;\n        long largestEvenValueIndex15 = 0;\n        long largestEvenValueIndex16\
    \ = 0;\n        long largestEvenValueIndex17 = 0;\n        long largestEvenValueIndex18\
    \ = 0;\n        long largestEvenValueIndex19 = 0;\n        long largestEvenValueIndex20\
    \ = 0;\n        long largestEvenValueIndex21 = 0;\n        long largestEvenValueIndex22\
    \ = 0;\n        long largestEvenValueIndex23 = 0;\n        long largestEvenValueIndex24\
    \ = 0;\n        long largestEvenValueIndex25 = 0;\n        long largestEvenValueIndex26\
    \ = 0;\n        long largestEvenValueIndex27 = 0;\n        long largestEvenValueIndex28\
    \ = 0;\n        long largestEvenValueIndex29 = 0;\n        long largestEvenValueIndex30\
    \ = 0;\n        long largestEvenValueIndex31 = 0;\n        long largestEvenValueIndex32\
    \ = 0;\n        long largestEvenValueIndex33 = 0;\n        long largestEvenValueIndex34\
    \ = 0;\n        long largestEvenValueIndex35 = 0;\n        long largestEvenValueIndex36\
    \ = 0;\n        long largestEvenValueIndex37 = 0;\n        long largestEvenValueIndex38\
    \ = 0;\n        long largestEvenValueIndex39 = 0;\n        long largestEvenValueIndex40\
    \ = 0;\n        long largestEvenValueIndex41 = 0;\n        long largestEvenValueIndex42\
    \ = 0;\n        long largestEvenValueIndex43 = 0;\n        long largestEvenValueIndex44\
    \ = 0;\n        long largestEvenValueIndex45 = 0;\n        long largestEvenValueIndex46\
    \ = 0;\n        long largest", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for(long val : arr) {\n            if(val % 2 == 0) {\n             \
    \   if(smallestEven > val) {\n                    smallestEven = val;\n      \
    \              smallestIndex = arr.indexOf(val);\n                }\n        \
    \    }\n        }\n        if(smallestEven == Long.MAX_VALUE) {\n            return\
    \ res;\n        }\n        for(long val : arr) {\n            if(val % 2 == 0)\
    \ {\n                if(smallestEven > val) {\n                    smallestEven\
    \ = val;\n                    smallestIndex = arr.indexOf(val);\n            \
    \    }\n            }\n        }\n        res.add(smallestEven);\n        res.add(smallestIndex);\n\
    \        return res;", "        ArrayList<Long> res = new ArrayList<>();\n   \
    \     long smalest_value = Long.MIN_VALUE;\n        int smallest_index = -1;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                if (smalest_value < arr.get(i)) {\n             \
    \       smalest_value = arr.get(i);\n                    smallest_index = i;\n\
    \                }\n            }\n        }\n        if (smalest_value == Long.MIN_VALUE)\
    \ {\n            return res;\n        }\n        res.add(smalest_value);\n   \
    \     res.add(smallest_index);\n        return res;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallest_value = 0;\n        int smallest_index\
    \ = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i)\
    \ % 2 == 0) {\n                if (smallest_value == 0) {\n                  \
    \  smallest_value = arr.get(i);\n                    smallest_index = i;\n   \
    \             } else if (arr.get(i) < smallest_value) {\n                    smallest_value\
    \ = arr.get(i);\n                    smallest_index = i;\n                }\n\
    \            }\n        }\n        result.add(smallest_value);\n        result.add(smallest_index);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = 0;\n        long smallestIndex = 0;\n      \
    \  long smallestValue = 0;\n        long largestEvenValue = 0;\n        long largestIndex\
    \ = 0;\n        long largestValue = 0;\n        long largestIndex2 = 0;\n    \
    \    long largestValue2 = 0;\n        long largestIndex3 = 0;\n        long largestValue3\
    \ = 0;\n        long largestIndex4 = 0;\n        long largestValue4 = 0;\n   \
    \     long largestIndex5 = 0;\n        long largestValue5 = 0;\n        long largestIndex6\
    \ = 0;\n        long largestValue6 = 0;\n        long largestIndex7 = 0;\n   \
    \     long largestValue7 = 0;\n        long largestIndex8 = 0;\n        long largestValue8\
    \ = 0;\n        long largestIndex9 = 0;\n        long largestValue9 = 0;\n   \
    \     long largestIndex10 = 0;\n        long largestValue10 = 0;\n        long\
    \ largestIndex11 = 0;\n        long largestValue11 = 0;\n        long largestIndex12\
    \ = 0;\n        long largestValue12 = 0;\n        long largestIndex13 = 0;\n \
    \       long largestValue13 = 0;\n        long largestIndex14 = 0;\n        long\
    \ largestValue14 = 0;\n        long largestIndex15 = 0;\n        long largestValue15\
    \ = 0;\n        long largestIndex16 = 0;\n        long largestValue16 = 0;\n \
    \       long largestIndex17 = 0;\n        long largestValue17 = 0;\n        long\
    \ largestIndex18 = 0;\n        long largestValue18 = 0;\n        long largestIndex19\
    \ = 0;\n        long largestValue19 = 0;\n        long largestIndex20 = 0;\n \
    \       long largestValue20 = 0;\n        long largestIndex21 = 0;\n        long\
    \ largestValue21 = 0;\n        long largestIndex22 = 0;\n        long largestValue22\
    \ = 0;\n        long largestIndex23 = 0;\n        long largestValue23 = 0;\n \
    \       long largestIndex24 = 0;\n        long largestValue24 = 0;\n        long\
    \ largestIndex25 = 0;\n        long largestValue25 = 0;\n        long largestIndex26\
    \ = 0;\n        long largestValue26 = 0;\n        long largestIndex27 = 0;\n \
    \       long largestValue27 = 0;\n        long largestIndex28 = 0;\n        long\
    \ largestValue28 = 0;\n        long largestIndex29 = 0;\n        long largestValue29\
    \ = 0;\n        long largestIndex30 = 0;\n        long largestValue30 = 0;\n \
    \       long lar", "        ArrayList<Long> result = new ArrayList<>();\n    \
    \    long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n   \
    \     for(Long node : arr) {\n            if(node % 2 == 0) {\n              \
    \  if(node < smallestEven) {\n                    smallestEven = node;\n     \
    \               smallestIndex = arr.indexOf(node);\n                }\n      \
    \      }\n        }\n        if(smallestEven != Long.MAX_VALUE) {\n          \
    \  result.add(smallestEven);\n            result.add(smallestIndex);\n       \
    \ }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex =\
    \ 0;\n        for(int i = 0; i < arr.size(); i++) {\n            long value =\
    \ arr.get(i);\n            if(value % 2 == 0) {\n                if(value < smallestEvenValue)\
    \ {\n                    smallestEvenValue = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        if(smallestEvenValue\
    \ == Long.MAX_VALUE) {\n            return result;\n        }\n        long smallestEvenValueIndex\
    \ = smallestIndex;\n        for(int i = 0; i < arr.size(); i++) {\n          \
    \  long value = arr.get(i);\n            if(value % 2 == 0) {\n              \
    \  if(value == smallestEvenValue) {\n                    smallestEvenValueIndex\
    \ = i;\n                    break;\n                }\n            }\n       \
    \ }\n        result.add(smallestEvenValue);\n        result.add(smallestEvenValueIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex =\
    \ 0;\n        int index = 0;\n        for(Long val : arr) {\n            if(val\
    \ % 2 == 0) {\n                if(smallestEvenValue > val) {\n               \
    \     smallestEvenValue = val;\n                    smallestIndex = index;\n \
    \               }\n                index++;\n            }\n        }\n      \
    \  result.add(smallestEvenValue);\n        result.add(smallestIndex);\n      \
    \  return result;", "        ArrayList<Long> result = new ArrayList<>();\n   \
    \     long smallest_value = Long.MAX_VALUE;\n        int smallest_index = -1;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                if (smallest_value < arr.get(i)) {\n            \
    \        smallest_value = arr.get(i);\n                    smallest_index = i;\n\
    \                }\n            }\n        }\n        if (smallest_index != -1)\
    \ {\n            result.add(smallest_value);\n            result.add(smallest_index);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                if (smallestEven > arr.get(i)) {\n              \
    \      smallestEven = arr.get(i);\n                    smallestIndex = i;\n  \
    \              }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = arr.get(0);\n\
    \        long smallestIndex = 0;\n        boolean foundSmallestEvenValue = false;\n\
    \        for (int i = 1; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if (value % 2 == 0) {\n                if (smallestEvenValue < value)\
    \ {\n                    smallestEvenValue = value;\n                    smallestIndex\
    \ = i;\n                    foundSmallestEvenValue = true;\n                }\n\
    \            }\n        }\n        if (foundSmallestEvenValue) {\n           \
    \ result.add(smallestEvenValue);\n            result.add(smallestIndex);\n   \
    \     }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = 0;\n        long smallestIndex = 0;\n      \
    \  long currentSmallestEvenValue = 0;\n        long currentSmallestIndex = 0;\n\
    \        long currentSmallestValue = 0;\n        long currentSmallestIndex2 =\
    \ 0;\n        long currentSmallestValue2 = 0;\n        long currentSmallestIndex3\
    \ = 0;\n        long currentSmallestValue3 = 0;\n        long currentSmallestIndex4\
    \ = 0;\n        long currentSmallestValue4 = 0;\n        long currentSmallestIndex5\
    \ = 0;\n        long currentSmallestValue5 = 0;\n        long currentSmallestIndex6\
    \ = 0;\n        long currentSmallestValue6 = 0;\n        long currentSmallestIndex7\
    \ = 0;\n        long currentSmallestValue7 = 0;\n        long currentSmallestIndex8\
    \ = 0;\n        long currentSmallestValue8 = 0;\n        long currentSmallestIndex9\
    \ = 0;\n        long currentSmallestValue9 = 0;\n        long currentSmallestIndex10\
    \ = 0;\n        long currentSmallestValue10 = 0;\n        long currentSmallestIndex11\
    \ = 0;\n        long currentSmallestValue11 = 0;\n        long currentSmallestIndex12\
    \ = 0;\n        long currentSmallestValue12 = 0;\n        long currentSmallestIndex13\
    \ = 0;\n        long currentSmallestValue13 = 0;\n        long currentSmallestIndex14\
    \ = 0;\n        long currentSmallestValue14 = 0;\n        long currentSmallestIndex15\
    \ = 0;\n        long currentSmallestValue15 = 0;\n        long currentSmallestIndex16\
    \ = 0;\n        long currentSmallestValue16 = 0;\n        long currentSmallestIndex17\
    \ = 0;\n        long currentSmallestValue17 = 0;\n        long currentSmallestIndex18\
    \ = 0;\n        long currentSmallestValue18 = 0;\n        long currentSmallestIndex19\
    \ = 0;\n        long currentSmallestValue19 = 0;\n        long currentSmallestIndex20\
    \ = 0;\n        long currentSmallestValue20 = 0;\n        long currentSmallestIndex21\
    \ = 0;\n        long currentSmallestValue21 = 0;\n        long currentSmallestIndex22\
    \ = 0;\n        long currentSmallestValue22 = 0;\n        long currentSmallestIndex23\
    \ = 0;\n        long currentSmallestValue23 = 0;\n        long currentSmallestIndex24\
    \ = 0;\n        long currentSmallestValue24 = 0;\n        long currentSmallestIndex25",
  "        ArrayList<Long> result = new ArrayList<>();\n        long smallestEven\
    \ = Long.MAX_VALUE;\n        int smallestIndex = 0;\n        for (int i = 0; i\
    \ < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n             \
    \   smallestEven = Math.min(smallestEven, arr.get(i));\n                smallestIndex\
    \ = i;\n            }\n        }\n        if (smallestEven != Long.MAX_VALUE)\
    \ {\n            result.add(smallestEven);\n            result.add(smallestIndex);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex =\
    \ 0;\n        for(int i = 0; i < arr.size(); i++) {\n            long value =\
    \ arr.get(i);\n            if(value % 2 == 0) {\n                if(value < smallestEvenValue)\
    \ {\n                    smallestEvenValue = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        if(smallestEvenValue\
    \ == Long.MAX_VALUE) {\n            return result;\n        }\n        ArrayList<Long>\
    \ evenValues = new ArrayList<>();\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            long value = arr.get(i);\n            if(value % 2 == 0) {\n\
    \                evenValues.add(value);\n            }\n        }\n        Collections.sort(evenValues);\n\
    \        for(long value : evenValues) {\n            if(value == smallestEvenValue)\
    \ {\n                result.add(smallestEvenValue);\n                result.add(smallestIndex);\n\
    \                break;\n            }\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        long smallestEvenValue\
    \ = 0;\n        long smallestIndex = 0;\n        long smallestValue = 0;\n   \
    \     long index = 0;\n        boolean found = false;\n        for(int i = 0;\
    \ i < arr.size(); i++) {\n            long value = arr.get(i);\n            if((value\
    \ & 1) == 0) {\n                found = true;\n                smallestEvenValue\
    \ = value;\n                smallestIndex = i;\n                smallestValue\
    \ = value;\n                index = i;\n            }\n        }\n        if(!found)\
    \ {\n            return result;\n        }\n        for(int i = 0; i < arr.size();\
    \ i++) {\n            long value = arr.get(i);\n            if((value & 1) ==\
    \ 0) {\n                if(smallestValue > value) {\n                    smallestValue\
    \ = value;\n                    smallestIndex = i;\n                }\n      \
    \      }\n        }\n        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MIN_VALUE;\n        int smallestIndex = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                if (smallestEven == Long.MIN_VALUE) {\n         \
    \           smallestEven = arr.get(i);\n                    smallestIndex = i;\n\
    \                } else {\n                    if (arr.get(i) < smallestEven)\
    \ {\n                        smallestEven = arr.get(i);\n                    \
    \    smallestIndex = i;\n                    }\n                }\n          \
    \  }\n        }\n        result.add(smallestEven);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                if (smallestEven > arr.get(i)) {\n              \
    \      smallestEven = arr.get(i);\n                    smallestIndex = i;\n  \
    \              }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = arr.get(0);\n\
    \        int smallestIndex = 0;\n        for (int i = 1; i < arr.size(); i++)\
    \ {\n            if (arr.get(i) % 2 == 0) {\n                if (smallestEvenValue\
    \ > arr.get(i)) {\n                    smallestEvenValue = arr.get(i);\n     \
    \               smallestIndex = i;\n                }\n            }\n       \
    \ }\n        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        long smallestValue = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            if (arr.get(i) % 2 == 0) {\n                if (smallestEven\
    \ == Long.MAX_VALUE) {\n                    smallestEven = arr.get(i);\n     \
    \               smallestIndex = i;\n                    smallestValue = arr.get(i);\n\
    \                } else {\n                    if (arr.get(i) < smallestEven)\
    \ {\n                        smallestEven = arr.get(i);\n                    \
    \    smallestIndex = i;\n                        smallestValue = arr.get(i);\n\
    \                    }\n                }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;"]
stop_tokens:
- "\n    }\n"

name: HumanEval_116_sort_array
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // In this Kata, you have to sort an array of non-negative\
  \ integers according to\n    // number of ones in their binary representation in\
  \ ascending order.\n    // For similar number of ones, sort based on decimal value.\n\
  \    // It must be implemented like this:\n    public static ArrayList<Integer>\
  \ sortArray(ArrayList<Integer> arr) {\n"
tests: "return new ArrayList<Integer>(Arrays.asList());\n    }\n    public static\
  \ void main(String[] args) {\n    assert(sortArray((new ArrayList<Integer>(Arrays.asList((int)1,\
  \ (int)5, (int)2, (int)3, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
  \ (int)2, (int)4, (int)3, (int)5)))));\n    assert(sortArray((new ArrayList<Integer>(Arrays.asList((int)-2,\
  \ (int)-3, (int)-4, (int)-5, (int)-6)))).equals((new ArrayList<Integer>(Arrays.asList((int)-4,\
  \ (int)-2, (int)-6, (int)-5, (int)-3)))));\n    assert(sortArray((new ArrayList<Integer>(Arrays.asList((int)1,\
  \ (int)0, (int)2, (int)3, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
  \ (int)1, (int)2, (int)4, (int)3)))));\n    assert(sortArray((new ArrayList<Integer>(Arrays.asList()))).equals((new\
  \ ArrayList<Integer>(Arrays.asList()))));\n    assert(sortArray((new ArrayList<Integer>(Arrays.asList((int)2,\
  \ (int)5, (int)77, (int)4, (int)5, (int)3, (int)5, (int)7, (int)2, (int)3, (int)4)))).equals((new\
  \ ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)4, (int)4, (int)3, (int)3,\
  \ (int)5, (int)5, (int)5, (int)7, (int)77)))));\n    assert(sortArray((new ArrayList<Integer>(Arrays.asList((int)3,\
  \ (int)6, (int)44, (int)12, (int)32, (int)5)))).equals((new ArrayList<Integer>(Arrays.asList((int)32,\
  \ (int)3, (int)5, (int)6, (int)12, (int)44)))));\n    assert(sortArray((new ArrayList<Integer>(Arrays.asList((int)2,\
  \ (int)4, (int)8, (int)16, (int)32)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
  \ (int)4, (int)8, (int)16, (int)32)))));\n    assert(sortArray((new ArrayList<Integer>(Arrays.asList((int)2,\
  \ (int)4, (int)8, (int)16, (int)32)))).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
  \ (int)4, (int)8, (int)16, (int)32)))));\n    }\n\n}\n"
completions: ['        // Your code here', "        // sort based on number of ones\
    \ in binary representation\n        Arrays.sort(arr, Comparator.comparingInt(i\
    \ -> Integer.toBinaryString(i).length()));\n        // sort based on decimal value\n\
    \        Arrays.sort(arr, Comparator.comparingInt(i -> Integer.toString(i).length()));\n\
    \        return arr;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        Arrays.sort(arr);\n        for(int i = 0; i < arr.size(); i++) {\n  \
    \          if(arr.get(i) == 1) {\n                result.add(arr.get(i));\n  \
    \          }\n        }\n        for(int i = 0; i < arr.size(); i++) {\n     \
    \       if(arr.get(i) != 1) {\n                result.add(arr.get(i));\n     \
    \       }\n        }\n        return result;", "        ArrayList<Integer> result\
    \ = new ArrayList<Integer>();\n        int[] arr = new int[arr.size()];\n    \
    \    for (int i = 0; i < arr.size(); i++) {\n            arr[i] = arr.get(i);\n\
    \        }\n        Arrays.sort(arr);\n        for (int i = 0; i < arr.length;\
    \ i++) {\n            result.add(arr[i]);\n        }\n        return result;",
  '        // Your code here', '        // Your code here', "        // sort by number\
    \ of ones\n        Collections.sort(arr, Comparator.comparingInt(i -> Integer.toBinaryString(i).length()));\n\
    \        // sort by decimal value\n        Collections.sort(arr, Comparator.comparingInt(i\
    \ -> Integer.parseInt(Integer.toBinaryString(i), 2)));\n        return arr;",
  "        ArrayList<Integer> result = new ArrayList<>();\n        for(int i = 0;\
    \ i < arr.size(); i++) {\n            int ones = arr.get(i);\n            int\
    \ decimal = Integer.parseInt(Integer.toBinaryString(ones));\n            result.add(decimal);\n\
    \        }\n        Collections.sort(result);\n        return result;", "    \
    \    ArrayList<Integer> result = new ArrayList<>();\n        int[] ones = arr.stream().filter(i\
    \ -> i%2==0).mapToInt(i -> i).toArray();\n        int[] zeros = arr.stream().filter(i\
    \ -> i%2==1).mapToInt(i -> i).toArray();\n        Arrays.sort(ones);\n       \
    \ Arrays.sort(zeros);\n        for(int i = 0; i < ones.length; i++){\n       \
    \     result.add(ones[i]);\n        }\n        for(int i = 0; i < zeros.length;\
    \ i++){\n            result.add(zeros[i]);\n        }\n        return result;",
  "        ArrayList<Integer> result = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ temp = new ArrayList<Integer>();\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            int count = 0;\n            for(int j = 0; j < arr.size(); j++)\
    \ {\n                if(arr.get(i) == arr.get(j)) {\n                    count++;\n\
    \                }\n            }\n            if(count == 1) {\n            \
    \    temp.add(arr.get(i));\n            }\n        }\n        for(int i = 0; i\
    \ < temp.size(); i++) {\n            for(int j = 0; j < temp.size(); j++) {\n\
    \                if(temp.get(i) < temp.get(j)) {\n                    result.add(temp.get(j));\n\
    \                    temp.remove(j);\n                }\n            }\n     \
    \   }\n        for(int i = 0; i < temp.size(); i++) {\n            result.add(temp.get(i));\n\
    \        }\n        return result;", '        // Your code here', "        ArrayList<Integer>\
    \ result = new ArrayList<>();\n        arr.stream().forEach(i -> {\n         \
    \   int count = 0;\n            while (i > 0) {\n                count += i &\
    \ 1;\n                i >>>= 1;\n            }\n            result.add(count);\n\
    \        });\n        Collections.sort(result);\n        return result;", '        //
    Your code here', '        // Write your code here', '        // Your code here',
  '        // Your code here', "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int[] arr = arr.stream().mapToInt(Integer::intValue).toArray();\n   \
    \     Arrays.sort(arr);\n        for(int i = 0; i < arr.length; i++) {\n     \
    \       if(arr[i] == 1) {\n                result.add(arr[i]);\n            }\n\
    \        }\n        return result;", '        // Your code here', "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        Arrays.sort(arr);\n        for (int\
    \ i = 0; i < arr.size(); i++) {\n            if (arr.get(i) == 1) {\n        \
    \        result.add(arr.get(i));\n            }\n        }\n        return result;",
  "        ArrayList<Integer> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            int ones = arr.get(i);\n\
    \            int decimal = Integer.parseInt(Integer.toBinaryString(ones));\n \
    \           result.add(decimal);\n        }\n        return result;", "      \
    \  ArrayList<Integer> result = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ temp = new ArrayList<Integer>();\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            int count = 0;\n            for(int j = 0; j < arr.size(); j++)\
    \ {\n                if(arr.get(i) == arr.get(j)) {\n                    count++;\n\
    \                }\n            }\n            int decimal = Integer.parseInt(Integer.toBinaryString(arr.get(i)));\n\
    \            int decimal2 = Integer.parseInt(Integer.toBinaryString(arr.get(j)));\n\
    \            if(count == 1) {\n                result.add(decimal);\n        \
    \        result.add(decimal2);\n            }\n            else if(count > 1)\
    \ {\n                result.add(decimal);\n                result.add(decimal2);\n\
    \                result.add(decimal);\n                result.add(decimal2);\n\
    \            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            int ones = arr.get(i);\n            int decimal = ones - Integer.bitCount(ones);\n\
    \            result.add(decimal);\n        }\n        Collections.sort(result);\n\
    \        return result;", '        // Your code here', '        // Your code here',
  '        // Your code here', "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            int count = 0;\n \
    \           for(int j = 0; j < arr.size(); j++) {\n                if(arr.get(j)\
    \ == 1) {\n                    count++;\n                }\n            }\n  \
    \          result.add(i, count);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            int ones = arr.get(i);\n\
    \            int decimal = Integer.parseInt(Integer.toBinaryString(ones));\n \
    \           int decimal2 = Integer.parseInt(Integer.toBinaryString(ones));\n \
    \           int decimal3 = Integer.parseInt(Integer.toBinaryString(ones));\n \
    \           int decimal4 = Integer.parseInt(Integer.toBinaryString(ones));\n \
    \           int decimal5 = Integer.parseInt(Integer.toBinaryString(ones));\n \
    \           int decimal6 = Integer.parseInt(Integer.toBinaryString(ones));\n \
    \           int decimal7 = Integer.parseInt(Integer.toBinaryString(ones));\n \
    \           int decimal8 = Integer.parseInt(Integer.toBinaryString(ones));\n \
    \           int decimal9 = Integer.parseInt(Integer.toBinaryString(ones));\n \
    \           int decimal10 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal11 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal12 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal13 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal14 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal15 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal16 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal17 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal18 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal19 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal20 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal21 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal22 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal23 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal24 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal25 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal26 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal27 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal28 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal29 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal30 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal31 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal32 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal33 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal34 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal35 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal36 = Integer.parseInt(Integer.to", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            int count = 0;\n            for(int j = i; j < arr.size(); j++)\
    \ {\n                if(arr.get(j) == 1) {\n                    count++;\n   \
    \             }\n            }\n            int decimal = count * Math.pow(10,\
    \ arr.size() - i - 1);\n            result.add(decimal);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        Arrays.sort(arr);\n        for(int i = 0; i < arr.size(); i++) {\n  \
    \          int count = 0;\n            for(int j = 0; j < arr.size(); j++) {\n\
    \                if(arr.get(i) == arr.get(j)) {\n                    count++;\n\
    \                }\n            }\n            result.add(count, arr.get(i));\n\
    \        }\n        return result;", '        // Your code here', "        //\
    \ sort by number of ones\n        Collections.sort(arr, Comparator.comparingInt(i\
    \ -> Integer.bitCount(i)));\n        // sort by decimal value\n        Collections.sort(arr,\
    \ Comparator.comparingInt(i -> Integer.parseInt(Integer.toBinaryString(i))));\n\
    \        return arr;", "        ArrayList<Integer> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        for(int i = 0; i < arr.size(); i++) {\n  \
    \          int count = 0;\n            for(int j = 0; j < arr.size(); j++) {\n\
    \                if(arr.get(i) == arr.get(j)) {\n                    count++;\n\
    \                }\n            }\n            if(count == 1) {\n            \
    \    result.add(arr.get(i));\n            }\n        }\n        return result;",
  "        ArrayList<Integer> result = new ArrayList<>();\n        ArrayList<Integer>\
    \ temp = new ArrayList<>();\n        for(int i = 0; i < arr.size(); i++) {\n \
    \           int count = 0;\n            for(int j = 0; j < arr.size(); j++) {\n\
    \                if(arr.get(i) == arr.get(j)) {\n                    count++;\n\
    \                }\n            }\n            if(count == 1) {\n            \
    \    temp.add(arr.get(i));\n            }\n            else {\n              \
    \  result.add(arr.get(i));\n            }\n        }\n        for(int i = 0; i\
    \ < temp.size(); i++) {\n            result.add(temp.get(i));\n        }\n   \
    \     return result;", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            int count = 0;\n \
    \           for(int j = 0; j < arr.size(); j++) {\n                if(arr.get(j)\
    \ == 1) {\n                    count++;\n                }\n            }\n  \
    \          result.add(count, arr.get(i));\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Integer> result = new ArrayList<>();\n\
    \        int[] arr = arr.stream().mapToInt(Integer::intValue).toArray();\n   \
    \     Arrays.sort(arr);\n        for(int i = 0; i < arr.length; i++) {\n     \
    \       int ones = arr[i];\n            int decimal = arr[i] / Integer.highestOneBit(ones);\n\
    \            int index = result.size();\n            while(index > 0 && decimal\
    \ > result.get(index - 1).getDecimal()) {\n                result.remove(index\
    \ - 1);\n                index--;\n            }\n            result.add(new IntPair(ones,\
    \ decimal));\n        }\n        return result;", '        // Your code here',
  "        ArrayList<Integer> result = new ArrayList<Integer>();\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            int count = 0;\n            for(int\
    \ j = 0; j < arr.size(); j++) {\n                if(arr.get(j) == 1) {\n     \
    \               count++;\n                }\n            }\n            result.add(count);\n\
    \        }\n        Collections.sort(result);\n        return result;", '        //
    Write your code here', "        ArrayList<Integer> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        for (int i = 0; i < arr.size(); i++) {\n \
    \           if (arr.get(i) == 1) {\n                result.add(arr.get(i));\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;",
  "        ArrayList<Integer> result = new ArrayList<Integer>();\n        Arrays.sort(arr);\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            int count = 0;\n \
    \           for(int j = i; j < arr.size(); j++) {\n                if(arr.get(j)\
    \ == 1) {\n                    count++;\n                }\n            }\n  \
    \          result.add(count, arr.get(i));\n        }\n        return result;",
  "        ArrayList<Integer> result = new ArrayList<Integer>();\n        int[] arr\
    \ = arr.stream().mapToInt(Integer::intValue).toArray();\n        Arrays.sort(arr);\n\
    \        for (int i = 0; i < arr.length; i++) {\n            if (arr[i] == 1)\
    \ {\n                result.add(arr[i]);\n            }\n        }\n        return\
    \ result;", "        ArrayList<Integer> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            int count = 0;\n            for(int\
    \ j = i; j < arr.size(); j++) {\n                count += arr.get(j);\n      \
    \      }\n            int decimal = count / 2;\n            int remainder = count\
    \ % 2;\n            int decimal2 = remainder / 10;\n            int remainder2\
    \ = remainder % 10;\n            int decimal3 = remainder2 / 100;\n          \
    \  int remainder3 = remainder2 % 100;\n            int decimal4 = remainder3 /\
    \ 1000;\n            int remainder4 = remainder3 % 1000;\n            int decimal5\
    \ = remainder4 / 10000;\n            int remainder5 = remainder4 % 10000;\n  \
    \          int decimal6 = remainder5 / 100000;\n            int remainder6 = remainder5\
    \ % 100000;\n            int decimal7 = remainder6 / 1000000;\n            int\
    \ remainder7 = remainder6 % 1000000;\n            int decimal8 = remainder7 /\
    \ 10000000;\n            int remainder8 = remainder7 % 10000000;\n           \
    \ int decimal9 = remainder8 / 1000000000;\n            int remainder9 = remainder8\
    \ % 1000000000;\n            int decimal10 = remainder9 / 10000000000;\n     \
    \       int remainder10 = remainder9 % 10000000000;\n            int decimal11\
    \ = remainder10 / 100000000000;\n            int remainder11 = remainder10 % 100000000000;\n\
    \            int decimal12 = remainder11 / 1000000000000;\n            int remainder12\
    \ = remainder11 % 1000000000000;\n            int decimal13 = remainder12 / 100000000000000;\n\
    \            int remainder13 = remainder12 % 100000000000000;\n            int\
    \ decimal14 = remainder13 / 1000000000000000;\n            int remainder14 = remainder13\
    \ % 1000000000000000;\n            int decimal15 = remainder14 / 100000000000000000;\n\
    \            int remainder15 = remainder14 % 100000000000000000;\n           \
    \ int decimal16 = remainder15 / 100000000000000000;\n            int remainder16\
    \ = remainder15 % 100000000000000000;\n            int decimal17 = remainder16\
    \ / 1000000000000000000;\n            int remainder17 = remainder16 % 1000000000000000000;\n\
    \            int decimal18 = remainder17 / 10000000000000000000;\n           \
    \ int remainder18 = remainder17 % 10000000000000000000;\n            int decimal19\
    \ = remainder18 / 100000000000000000000;\n            int remainder19 = remainder18\
    \ % 100000000000000000000;\n            int decimal20 = ", '        // Your code
    here', '        // Your code here', "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            int count = 0;\n \
    \           for(int j = 0; j < arr.size(); j++) {\n                if(arr.get(j)\
    \ == 1) {\n                    count++;\n                }\n            }\n  \
    \          int decimal = count * 10 + arr.get(i);\n            result.add(decimal);\n\
    \        }\n        return result;", '        // Your code goes here', '        //
    Your code here', "        ArrayList<Integer> result = new ArrayList<>();\n   \
    \     for(int i = 0; i < arr.size(); i++) {\n            int ones = arr.get(i).intValue()\
    \ % 2;\n            int decimal = arr.get(i).intValue() / 2;\n            if(ones\
    \ > 0) {\n                result.add(decimal);\n            } else {\n       \
    \         result.add(decimal * -1);\n            }\n        }\n        return\
    \ result;", '        // Your code here', "        // sort by number of ones\n\
    \        Collections.sort(arr, Comparator.comparingInt(i -> Integer.bitCount(i)));\n\
    \        // sort by decimal value\n        Collections.sort(arr, Comparator.comparingInt(i\
    \ -> Integer.parseInt(Integer.toBinaryString(i))));\n        return arr;", '        //
    Write your code here', "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int[] arr = arr.stream().mapToInt(Integer::intValue).toArray();\n   \
    \     Arrays.sort(arr);\n        for(int i = 0; i < arr.length; i++) {\n     \
    \       int count = 0;\n            for(int j = 0; j < arr.length; j++) {\n  \
    \              if(arr[j] == i) {\n                    count++;\n             \
    \   }\n            }\n            result.add(count);\n        }\n        return\
    \ result;", "        ArrayList<Integer> result = new ArrayList<>();\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            int ones = arr.get(i).bitCount()\
    \ - 1;\n            int decimal = arr.get(i).intValue();\n            if(ones\
    \ > decimal) {\n                result.add(decimal);\n            } else {\n \
    \               result.add(ones);\n            }\n        }\n        return result;",
  '        // Your code goes here', '        // Your code here', '        // Your
    code here', "        ArrayList<Integer> result = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < arr.size(); i++) {\n            int count = 0;\n  \
    \          for(int j = i; j < arr.size(); j++) {\n                if(arr.get(j)\
    \ == 1) {\n                    count++;\n                }\n            }\n  \
    \          int decimalValue = count * Math.pow(10, arr.size() - i - 1);\n    \
    \        result.add(decimalValue);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Integer> result = new ArrayList<>();\n\
    \        arr.stream().forEach(i -> {\n            int count = 0;\n           \
    \ while (i > 0) {\n                count += i & 1;\n                i >>>= 1;\n\
    \            }\n            result.add(count);\n        });\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Integer> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        for (int i = 0; i < arr.size(); i++) {\n \
    \           if (arr.get(i) == 1) {\n                result.add(arr.get(i));\n\
    \            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int[] ones = arr.stream().mapToInt(x\
    \ -> x).filter(x -> x == 1).mapToInt(x -> x).sorted().toArray();\n        int[]\
    \ tens = arr.stream().mapToInt(x -> x).filter(x -> x == 10).mapToInt(x -> x).sorted().toArray();\n\
    \        int[] hundreds = arr.stream().mapToInt(x -> x).filter(x -> x == 100).mapToInt(x\
    \ -> x).sorted().toArray();\n        int[] thousands = arr.stream().mapToInt(x\
    \ -> x).filter(x -> x == 1000).mapToInt(x -> x).sorted().toArray();\n        int[]\
    \ millions = arr.stream().mapToInt(x -> x).filter(x -> x == 1000000).mapToInt(x\
    \ -> x).sorted().toArray();\n        int[] billions = arr.stream().mapToInt(x\
    \ -> x).filter(x -> x == 1000000000).mapToInt(x -> x).sorted().toArray();\n  \
    \      int[] trillions = arr.stream().mapToInt(x -> x).filter(x -> x == 1000000000000).mapToInt(x\
    \ -> x).sorted().toArray();\n        int[] quadrillions = arr.stream().mapToInt(x\
    \ -> x).filter(x -> x == 1000000000000000).mapToInt(x -> x).sorted().toArray();\n\
    \        int[] quintillions = arr.stream().mapToInt(x -> x).filter(x -> x == 1000000000000000000).mapToInt(x\
    \ -> x).sorted().toArray();\n        int[] sextillions = arr.stream().mapToInt(x\
    \ -> x).filter(x -> x == 100000000000000000000).mapToInt(x -> x).sorted().toArray();\n\
    \        int[] septillions = arr.stream().mapToInt(x -> x).filter(x -> x == 100000000000000000000000).mapToInt(x\
    \ -> x).sorted().toArray();\n        int[] octillions = arr.stream().mapToInt(x\
    \ -> x).filter(x -> x == 100000000000000000000000000).mapToInt(x -> x).sorted().toArray();\n\
    \        int[] nonillions = arr.stream().mapToInt(x -> x).filter(x -> x == 1000000000000000000000000000).mapToInt(x\
    \ -> x).sorted().toArray();\n        int[] decillions = arr.stream().mapToInt(x\
    \ -> x).filter(x -> x == 1000000000000000000000000000000).mapToInt(x -> x).sorted().toArray();\n\
    \        int[] undecillions = arr.stream().", "        ArrayList<Integer> result\
    \ = new ArrayList<>();\n        Arrays.sort(arr);\n        for(int i = 0; i <\
    \ arr.size(); i++) {\n            int count = 0;\n            for(int j = i; j\
    \ < arr.size(); j++) {\n                count += arr.get(j);\n            }\n\
    \            result.add(i, count);\n        }\n        return result;", "    \
    \    ArrayList<Integer> result = new ArrayList<Integer>();\n        for(int i\
    \ = 0; i < arr.size(); i++) {\n            int ones = arr.get(i).bitCount() -\
    \ 1;\n            int decimal = arr.get(i).intValue();\n            int decimal2\
    \ = arr.get(i).intValue();\n            int decimal3 = arr.get(i).intValue();\n\
    \            int decimal4 = arr.get(i).intValue();\n            int decimal5 =\
    \ arr.get(i).intValue();\n            int decimal6 = arr.get(i).intValue();\n\
    \            int decimal7 = arr.get(i).intValue();\n            int decimal8 =\
    \ arr.get(i).intValue();\n            int decimal9 = arr.get(i).intValue();\n\
    \            int decimal10 = arr.get(i).intValue();\n            int decimal11\
    \ = arr.get(i).intValue();\n            int decimal12 = arr.get(i).intValue();\n\
    \            int decimal13 = arr.get(i).intValue();\n            int decimal14\
    \ = arr.get(i).intValue();\n            int decimal15 = arr.get(i).intValue();\n\
    \            int decimal16 = arr.get(i).intValue();\n            int decimal17\
    \ = arr.get(i).intValue();\n            int decimal18 = arr.get(i).intValue();\n\
    \            int decimal19 = arr.get(i).intValue();\n            int decimal20\
    \ = arr.get(i).intValue();\n            int decimal21 = arr.get(i).intValue();\n\
    \            int decimal22 = arr.get(i).intValue();\n            int decimal23\
    \ = arr.get(i).intValue();\n            int decimal24 = arr.get(i).intValue();\n\
    \            int decimal25 = arr.get(i).intValue();\n            int decimal26\
    \ = arr.get(i).intValue();\n            int decimal27 = arr.get(i).intValue();\n\
    \            int decimal28 = arr.get(i).intValue();\n            int decimal29\
    \ = arr.get(i).intValue();\n            int decimal30 = arr.get(i).intValue();\n\
    \            int decimal31 = arr.get(i).intValue();\n            int decimal32\
    \ = arr.get(i).intValue();\n            int decimal33 = arr.get(i).intValue();\n\
    \            int decimal34 = arr.get(i).intValue();\n            int decimal35\
    \ = arr.get(i).intValue();\n            int decimal36 = arr.get(i).intValue();\n\
    \            int decimal37 = arr.get(i).intValue();\n            int decimal38\
    \ = arr.get(i).intValue();\n", "        ArrayList<Integer> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        for(int i = 0; i < arr.size(); i++) {\n  \
    \          int ones = arr.get(i).bitCount() - 1;\n            int decimal = arr.get(i).intValue();\n\
    \            int decimal2 = arr.get(i).intValue();\n            int decimal3 =\
    \ arr.get(i).intValue();\n            int decimal4 = arr.get(i).intValue();\n\
    \            int decimal5 = arr.get(i).intValue();\n            int decimal6 =\
    \ arr.get(i).intValue();\n            int decimal7 = arr.get(i).intValue();\n\
    \            int decimal8 = arr.get(i).intValue();\n            int decimal9 =\
    \ arr.get(i).intValue();\n            int decimal10 = arr.get(i).intValue();\n\
    \            int decimal11 = arr.get(i).intValue();\n            int decimal12\
    \ = arr.get(i).intValue();\n            int decimal13 = arr.get(i).intValue();\n\
    \            int decimal14 = arr.get(i).intValue();\n            int decimal15\
    \ = arr.get(i).intValue();\n            int decimal16 = arr.get(i).intValue();\n\
    \            int decimal17 = arr.get(i).intValue();\n            int decimal18\
    \ = arr.get(i).intValue();\n            int decimal19 = arr.get(i).intValue();\n\
    \            int decimal20 = arr.get(i).intValue();\n            int decimal21\
    \ = arr.get(i).intValue();\n            int decimal22 = arr.get(i).intValue();\n\
    \            int decimal23 = arr.get(i).intValue();\n            int decimal24\
    \ = arr.get(i).intValue();\n            int decimal25 = arr.get(i).intValue();\n\
    \            int decimal26 = arr.get(i).intValue();\n            int decimal27\
    \ = arr.get(i).intValue();\n            int decimal28 = arr.get(i).intValue();\n\
    \            int decimal29 = arr.get(i).intValue();\n            int decimal30\
    \ = arr.get(i).intValue();\n            int decimal31 = arr.get(i).intValue();\n\
    \            int decimal32 = arr.get(i).intValue();\n            int decimal33\
    \ = arr.get(i).intValue();\n            int decimal34 = arr.get(i).intValue();\n\
    \            int decimal35 = arr.get(i).intValue();\n            int decimal36\
    \ = arr.get(i).intValue();\n            int decimal37 = arr.get(i).intValue();\n\
    \            int decimal38 = arr.get(i", "        ArrayList<Integer> result =\
    \ new ArrayList<Integer>();\n        for(int i = 0; i < arr.size(); i++) {\n \
    \           int ones = arr.get(i);\n            int decimal = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal2 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal3 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal4 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal5 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal6 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal7 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal8 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal9 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal10 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal11 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal12 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal13 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal14 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal15 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal16 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal17 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal18 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal19 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal20 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal21 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal22 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal23 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal24 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal25 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal26 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal27 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal28 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal29 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal30 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal31 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal32 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal33 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal34 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal35 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal36 = Integer.parseInt(Integer.to", '        // Your code
    here', "        ArrayList<Integer> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            int ones = arr.get(i);\n\
    \            int decimal = ones * Math.pow(10, arr.size() - i - 1);\n        \
    \    result.add(decimal);\n        }\n        return result;", '        // Your
    code goes here', "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> temp = new ArrayList<Integer>();\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            int count = 0;\n            for(int\
    \ j = 0; j < arr.size(); j++) {\n                if(arr.get(i) == arr.get(j))\
    \ {\n                    count++;\n                }\n            }\n        \
    \    if(count == 1) {\n                result.add(arr.get(i));\n            }\n\
    \            else if(count > 1) {\n                temp.add(arr.get(i));\n   \
    \         }\n        }\n        for(int i = 0; i < temp.size(); i++) {\n     \
    \       result.add(temp.get(i));\n        }\n        return result;", "      \
    \  ArrayList<Integer> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            int count = 0;\n \
    \           for(int j = i; j < arr.size(); j++) {\n                if(arr.get(j)\
    \ == 1) {\n                    count++;\n                }\n            }\n  \
    \          int decimal = count / arr.size();\n            int decimal2 = count\
    \ % arr.size();\n            int decimal3 = decimal + decimal2;\n            result.add(decimal3);\n\
    \        }\n        return result;", '        // Your code here', '        //
    Your code here', "        // sort by number of ones\n        Collections.sort(arr,\
    \ Comparator.comparingInt(i -> Integer.bitCount(i)));\n        // sort by decimal\
    \ value\n        Collections.sort(arr, Comparator.comparingInt(i -> Integer.parseInt(Integer.toBinaryString(i))));\n\
    \        return arr;", "        ArrayList<Integer> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        for(int i = 0; i < arr.size(); i++) {\n  \
    \          int ones = arr.get(i);\n            int decimal = ones * Math.pow(10,\
    \ arr.size() - i - 1);\n            result.add(decimal);\n        }\n        return\
    \ result;", '        // Your code here', '        // Your code here', "      \
    \  ArrayList<Integer> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            int count = 0;\n\
    \            while (arr.get(i) > (1 << count)) {\n                count++;\n \
    \           }\n            result.add(arr.get(i));\n            result.add(count);\n\
    \        }\n        return result;", '        // Your code here', "        //\
    \ Write your code here\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for(int i = 0; i < arr.size(); i++){\n            int count = 0;\n  \
    \          for(int j = 0; j < arr.size(); j++){\n                if(arr.get(i)\
    \ == arr.get(j)){\n                    count++;\n                }\n         \
    \   }\n            result.add(count);\n        }\n        Collections.sort(result);\n\
    \        return result;", '        // Your code here', '        // Your code goes
    here', '        // Your code here', '        // Your code here', '        // Your
    code here', "        ArrayList<Integer> result = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < arr.size(); i++) {\n            int count = 0;\n  \
    \          for(int j = i; j < arr.size(); j++) {\n                if(arr.get(j)\
    \ == 1) {\n                    count++;\n                }\n            }\n  \
    \          result.add(count);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Integer> result = new ArrayList<>();\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            int count = 0;\n \
    \           for(int j = 0; j < arr.size(); j++) {\n                if(arr.get(j)\
    \ == 1) {\n                    count++;\n                }\n            }\n  \
    \          int decimal = count * 10 + arr.get(i);\n            result.add(decimal);\n\
    \        }\n        Collections.sort(result);\n        return result;", "    \
    \    ArrayList<Integer> result = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ ones = new ArrayList<Integer>();\n        ArrayList<Integer> zeros = new ArrayList<Integer>();\n\
    \        for(int i : arr) {\n            if(i == 1) {\n                ones.add(i);\n\
    \            }\n            if(i == 0) {\n                zeros.add(i);\n    \
    \        }\n        }\n        for(int i : ones) {\n            result.add(i);\n\
    \        }\n        for(int i : zeros) {\n            result.add(i);\n       \
    \ }\n        Collections.sort(result);\n        return result;", '        // Your
    code here', "        ArrayList<Integer> result = new ArrayList<Integer>();\n \
    \       for(int i = 0; i < arr.size(); i++) {\n            int count = 0;\n  \
    \          for(int j = 0; j < arr.size(); j++) {\n                if(arr.get(i)\
    \ == arr.get(j)) {\n                    count++;\n                }\n        \
    \    }\n            result.add(count, arr.get(i));\n        }\n        Collections.sort(result);\n\
    \        return result;", '        // Your code here', "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        ArrayList<Integer> ones = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> zeros = new ArrayList<Integer>();\n        for(int\
    \ i : arr) {\n            if(i == 1) {\n                ones.add(i);\n       \
    \     } else {\n                zeros.add(i);\n            }\n        }\n    \
    \    Collections.sort(ones);\n        Collections.sort(zeros);\n        for(int\
    \ i : ones) {\n            result.add(i);\n        }\n        for(int i : zeros)\
    \ {\n            result.add(i);\n        }\n        return result;", "       \
    \ ArrayList<Integer> result = new ArrayList<Integer>();\n        for(int i = 0;\
    \ i < arr.size(); i++) {\n            int ones = arr.get(i).bitCount() - 1;\n\
    \            int decimal = arr.get(i).intValue();\n            int index = Integer.numberOfTrailingZeros(ones);\n\
    \            int decimalIndex = Integer.numberOfTrailingZeros(decimal);\n    \
    \        int decimalDiff = decimal - decimalIndex;\n            int decimalDiffIndex\
    \ = Integer.numberOfTrailingZeros(decimalDiff);\n            int decimalDiffBits\
    \ = Integer.numberOfTrailingZeros(decimalDiff - 1);\n            int decimalDiffBitsIndex\
    \ = Integer.numberOfTrailingZeros(decimalDiffBits - 1);\n            int decimalDiffBitsIndex2\
    \ = Integer.numberOfTrailingZeros(decimalDiffBits - 2);\n            int decimalDiffBitsIndex3\
    \ = Integer.numberOfTrailingZeros(decimalDiffBits - 3);\n            int decimalDiffBitsIndex4\
    \ = Integer.numberOfTrailingZeros(decimalDiffBits - 4);\n            int decimalDiffBitsIndex5\
    \ = Integer.numberOfTrailingZeros(decimalDiffBits - 5);\n            int decimalDiffBitsIndex6\
    \ = Integer.numberOfTrailingZeros(decimalDiffBits - 6);\n            int decimalDiffBitsIndex7\
    \ = Integer.numberOfTrailingZeros(decimalDiffBits - 7);\n            int decimalDiffBitsIndex8\
    \ = Integer.numberOfTrailingZeros(decimalDiffBits - 8);\n            int decimalDiffBitsIndex9\
    \ = Integer.numberOfTrailingZeros(decimalDiffBits - 9);\n            int decimalDiffBitsIndex10\
    \ = Integer.numberOfTrailingZeros(decimalDiffBits - 10);\n            int decimalDiffBitsIndex11\
    \ = Integer.numberOfTrailingZeros(decimalDiffBits - 11);\n            int decimalDiffBitsIndex12\
    \ = Integer.numberOfTrailingZeros(decimalDiffBits - 12);\n            int decimalDiffBitsIndex13\
    \ = Integer.numberOfTrailingZeros(decimalDiffBits - 13);\n            int decimalDiffBitsIndex14\
    \ = Integer.numberOfTrailingZeros(decimalDiffBits - 14);\n            int decimalDiffBitsIndex15\
    \ = Integer.numberOfTrailingZeros(decimalDiffBits - 15);\n            int decimalDiffBitsIndex16\
    \ = Integer.numberOfTrailingZeros(decimalDiffBits - 16);\n            int decimalDiffBitsIndex17\
    \ = Integer.numberOfTrailingZeros(decimalDiffBits - 17);\n            int decimalDiffBitsIndex18\
    \ = Integer.numberOfTrailingZeros(decimalDiffBits - 18);\n            int decimalDiffBitsIndex19\
    \ = Integer.numberOfTrailing", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            int count = 0;\n \
    \           for(int j = i; j < arr.size(); j++) {\n                if(arr.get(j)\
    \ == 1) {\n                    count++;\n                }\n            }\n  \
    \          if(count == 0) {\n                result.add(arr.get(i));\n       \
    \     }\n        }\n        for(int i = 0; i < arr.size(); i++) {\n          \
    \  int count = 0;\n            for(int j = i; j < arr.size(); j++) {\n       \
    \         if(arr.get(j) == 1) {\n                    count++;\n              \
    \  }\n            }\n            if(count == 0) {\n                result.add(arr.get(i));\n\
    \            }\n        }\n        for(int i = 0; i < arr.size(); i++) {\n   \
    \         int count = 0;\n            for(int j = i; j < arr.size(); j++) {\n\
    \                if(arr.get(j) == 1) {\n                    count++;\n       \
    \         }\n            }\n            if(count == 0) {\n                result.add(arr.get(i));\n\
    \            }\n        }\n        for(int i = 0; i < arr.size(); i++) {\n   \
    \         int count = 0;\n            for(int j = i; j < arr.size(); j++) {\n\
    \                if(arr.get(j) == 1) {\n                    count++;\n       \
    \         }\n            }\n            if(count == 0) {\n                result.add(arr.get(i));\n\
    \            }\n        }\n        for(int i = 0; i < arr.size(); i++) {\n   \
    \         int count = 0;\n            for(int j = i; j < arr.size(); j++) {\n\
    \                if(arr.get(j) == 1) {\n                    count++;\n       \
    \         }\n            }\n            if(count == 0) {\n                result.add(arr.get(i));\n\
    \            }\n        }\n        for(int i = 0; i < arr.size(); i++) {\n   \
    \         int count = 0;\n            for(int j = i; j < arr.size(); j++) {\n\
    \                if(arr.get(j) == 1) {\n                    count++;\n       \
    \         }\n            }\n            if(count == 0) {\n                result.add(arr.get(i));\n\
    \            }\n        }\n        for(int i = 0; i < arr.size(); i++) {\n   \
    \         int count = 0;\n            for(int j = i; j < arr.size(); j++) {\n\
    \                if(arr.get(j) == 1) {\n                    count++;\n       \
    \         }\n            }\n            if(count == 0) {\n                result.add(arr.get(i));\n\
    \            }\n        }\n        for(int i = 0; i < arr.size(); i++) {\n   \
    \         int count = 0;\n            for(int j = i; j < arr.size(); j++) {\n\
    \                if(arr.get(j) == 1) {\n                    count++;\n       \
    \         }\n            }\n            if(count == 0) {\n                result.add(arr.get(i));\n\
    \            }\n        }\n        for(int i = 0; i < arr.size(); i++) {\n   \
    \         int count = 0;\n            for(int j = i; j < arr.size(); j++) {\n\
    \                if(arr.get(j) == 1) {\n                    count++;\n       \
    \         }\n            }\n            if(count == 0) {\n                result.add(arr.get(i));\n\
    \            }\n        }\n        for(int i = 0; i < arr.size(); i++) {\n   \
    \         int count = 0;\n            for(int j = i; j < arr.size(); j++) {\n\
    \                if(arr.get(j) == 1) {\n                    count++;\n       \
    \         }\n", '        // Your code here', "        ArrayList<Integer> result\
    \ = new ArrayList<>();\n        int[] ones = new int[arr.size()];\n        int[]\
    \ zeros = new int[arr.size()];\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            ones[i] = 0;\n            zeros[i] = 0;\n            for (int j =\
    \ 0; j < arr.size(); j++) {\n                if (arr.get(i) == 1) {\n        \
    \            ones[i]++;\n                } else {\n                    zeros[i]++;\n\
    \                }\n            }\n        }\n        Arrays.sort(ones);\n   \
    \     Arrays.sort(zeros);\n        for (int i = 0; i < arr.size(); i++) {\n  \
    \          if (ones[i] > zeros[i]) {\n                result.add(arr.get(i));\n\
    \            } else {\n                result.add(0);\n            }\n       \
    \ }\n        return result;", '        // Your code here', '        // Your code
    here', '        // Your code here', '        // Your code here', "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        Arrays.sort(arr);\n        for (int\
    \ i = 0; i < arr.size(); i++) {\n            int count = 0;\n            while\
    \ (arr.get(i) > (1 << count)) {\n                count++;\n            }\n   \
    \         result.add(arr.get(i) - 1 << count);\n        }\n        return result;",
  '        // Your code here', "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        Arrays.sort(arr);\n        for (int i = 0; i < arr.size(); i++) {\n \
    \           int ones = arr.get(i);\n            int decimal = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal2 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            if (decimal2 == 0) {\n                result.add(decimal);\n    \
    \        } else {\n                result.add(decimal);\n                result.add(decimal2);\n\
    \            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        ArrayList<Integer> temp = new ArrayList<Integer>();\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            int count = 0;\n \
    \           for(int j = 0; j < arr.size(); j++) {\n                if(arr.get(j)\
    \ == 1) {\n                    count++;\n                }\n            }\n  \
    \          if(count == 1) {\n                result.add(arr.get(i));\n       \
    \     }\n        }\n        for(int i = 0; i < arr.size(); i++) {\n          \
    \  int count = 0;\n            for(int j = 0; j < arr.size(); j++) {\n       \
    \         if(arr.get(j) == 1) {\n                    count++;\n              \
    \  }\n            }\n            if(count == 0) {\n                temp.add(arr.get(i));\n\
    \            }\n        }\n        for(int i = 0; i < temp.size(); i++) {\n  \
    \          result.add(temp.get(i));\n        }\n        return result;", '        //
    Your code here', "        ArrayList<Integer> result = new ArrayList<>();\n   \
    \     for(int i = 0; i < arr.size(); i++) {\n            int ones = arr.get(i);\n\
    \            int decimal = Integer.parseInt(Integer.toBinaryString(ones));\n \
    \           int decimal2 = Integer.parseInt(Integer.toBinaryString(ones));\n \
    \           int decimal3 = Integer.parseInt(Integer.toBinaryString(ones));\n \
    \           int decimal4 = Integer.parseInt(Integer.toBinaryString(ones));\n \
    \           int decimal5 = Integer.parseInt(Integer.toBinaryString(ones));\n \
    \           int decimal6 = Integer.parseInt(Integer.toBinaryString(ones));\n \
    \           int decimal7 = Integer.parseInt(Integer.toBinaryString(ones));\n \
    \           int decimal8 = Integer.parseInt(Integer.toBinaryString(ones));\n \
    \           int decimal9 = Integer.parseInt(Integer.toBinaryString(ones));\n \
    \           int decimal10 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal11 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal12 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal13 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal14 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal15 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal16 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal17 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal18 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal19 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal20 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal21 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal22 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal23 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal24 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal25 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal26 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal27 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal28 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal29 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal30 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal31 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal32 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal33 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal34 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal35 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal36 = Integer.parseInt(Integer.toBinary", '        // Your
    code here', "        ArrayList<Integer> result = new ArrayList<>();\n        arr.stream().forEach(i\
    \ -> {\n            int count = 0;\n            while (i != 0) {\n           \
    \     count += i & 1;\n                i >>>= 1;\n            }\n            result.add(count);\n\
    \        });\n        Collections.sort(result);\n        return result;", "  \
    \      // Write your code here\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for(int i = 0; i < arr.size(); i++){\n            int count = 0;\n  \
    \          for(int j = i; j < arr.size(); j++){\n                if(arr.get(j)\
    \ == 1){\n                    count++;\n                }\n            }\n   \
    \         int decimal = count * Math.pow(2,i);\n            result.add(decimal);\n\
    \        }\n        Collections.sort(result);\n        return result;", '        //
    Your code here', "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            int ones = arr.get(i);\n\
    \            int decimal = Integer.parseInt(Integer.toBinaryString(ones));\n \
    \           int decimal2 = Integer.parseInt(Integer.toBinaryString(ones));\n \
    \           int decimal3 = Integer.parseInt(Integer.toBinaryString(ones));\n \
    \           int decimal4 = Integer.parseInt(Integer.toBinaryString(ones));\n \
    \           int decimal5 = Integer.parseInt(Integer.toBinaryString(ones));\n \
    \           int decimal6 = Integer.parseInt(Integer.toBinaryString(ones));\n \
    \           int decimal7 = Integer.parseInt(Integer.toBinaryString(ones));\n \
    \           int decimal8 = Integer.parseInt(Integer.toBinaryString(ones));\n \
    \           int decimal9 = Integer.parseInt(Integer.toBinaryString(ones));\n \
    \           int decimal10 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal11 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal12 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal13 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal14 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal15 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal16 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal17 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal18 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal19 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal20 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal21 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal22 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal23 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal24 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal25 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal26 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal27 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal28 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal29 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal30 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal31 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal32 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal33 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal34 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal35 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal36 = Integer.parseInt(Integer.to", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            int count = 0;\n            for(int j = i; j < arr.size(); j++)\
    \ {\n                count += arr.get(j);\n            }\n            int decimal\
    \ = count / 2;\n            int remainder = count % 2;\n            int decimalValue\
    \ = remainder * 10 + decimal;\n            int decimalValue2 = decimalValue *\
    \ 10;\n            int decimalValue3 = decimalValue2 * 10;\n            int decimalValue4\
    \ = decimalValue3 * 10;\n            int decimalValue5 = decimalValue4 * 10;\n\
    \            int decimalValue6 = decimalValue5 * 10;\n            int decimalValue7\
    \ = decimalValue6 * 10;\n            int decimalValue8 = decimalValue7 * 10;\n\
    \            int decimalValue9 = decimalValue8 * 10;\n            int decimalValue10\
    \ = decimalValue9 * 10;\n            int decimalValue11 = decimalValue10 * 10;\n\
    \            int decimalValue12 = decimalValue11 * 10;\n            int decimalValue13\
    \ = decimalValue12 * 10;\n            int decimalValue14 = decimalValue13 * 10;\n\
    \            int decimalValue15 = decimalValue14 * 10;\n            int decimalValue16\
    \ = decimalValue15 * 10;\n            int decimalValue17 = decimalValue16 * 10;\n\
    \            int decimalValue18 = decimalValue17 * 10;\n            int decimalValue19\
    \ = decimalValue18 * 10;\n            int decimalValue20 = decimalValue19 * 10;\n\
    \            int decimalValue21 = decimalValue20 * 10;\n            int decimalValue22\
    \ = decimalValue21 * 10;\n            int decimalValue23 = decimalValue22 * 10;\n\
    \            int decimalValue24 = decimalValue23 * 10;\n            int decimalValue25\
    \ = decimalValue24 * 10;\n            int decimalValue26 = decimalValue25 * 10;\n\
    \            int decimalValue27 = decimalValue26 * 10;\n            int decimalValue28\
    \ = decimalValue27 * 10;\n            int decimalValue29 = decimalValue28 * 10;\n\
    \            int decimalValue30 = decimalValue29 * 10;\n            int decimalValue31\
    \ = decimalValue30 * 10;\n            int decimalValue32 = decimalValue31 * 10;\n\
    \            int decimalValue33 = decimalValue32 * 10;\n            int decimalValue34\
    \ = decimalValue33 * 10;\n            int decimalValue35 = decimalValue34 * 10;\n\
    \            int decimalValue36 = decimalValue35 * 10;\n            int decimalValue37\
    \ = decimalValue36 * 10;\n            int decimalValue38 = decimalValue37 * 10;\n\
    \            int decimalValue39 = decimalValue38 * 10;\n            int decimalValue40",
  "        ArrayList<Integer> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            int ones = arr.get(i);\n\
    \            int decimal = Integer.parseInt(Integer.toBinaryString(ones));\n \
    \           result.add(decimal);\n        }\n        return result;", '        //
    Your code here', '        // Your code here', "        ArrayList<Integer> result\
    \ = new ArrayList<Integer>();\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            int count = 0;\n            for(int j = 0; j < arr.size(); j++) {\n\
    \                if(arr.get(j) == 1) {\n                    count++;\n       \
    \         }\n            }\n            int decimalValue = count * Math.pow(10,\
    \ arr.size() - i - 1);\n            result.add(decimalValue);\n        }\n   \
    \     return result;", "        ArrayList<Integer> result = new ArrayList<>();\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            int ones = arr.get(i);\n\
    \            int decimal = Integer.parseInt(Integer.toBinaryString(ones));\n \
    \           result.add(decimal);\n        }\n        Collections.sort(result);\n\
    \        return result;", '        // Your code here', '        // Your code here',
  "        ArrayList<Integer> result = new ArrayList<Integer>();\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            int ones = arr.get(i);\n        \
    \    int decimal = Integer.parseInt(Integer.toBinaryString(ones));\n         \
    \   int decimal2 = Integer.parseInt(Integer.toBinaryString(ones));\n         \
    \   int decimal3 = Integer.parseInt(Integer.toBinaryString(ones));\n         \
    \   int decimal4 = Integer.parseInt(Integer.toBinaryString(ones));\n         \
    \   int decimal5 = Integer.parseInt(Integer.toBinaryString(ones));\n         \
    \   int decimal6 = Integer.parseInt(Integer.toBinaryString(ones));\n         \
    \   int decimal7 = Integer.parseInt(Integer.toBinaryString(ones));\n         \
    \   int decimal8 = Integer.parseInt(Integer.toBinaryString(ones));\n         \
    \   int decimal9 = Integer.parseInt(Integer.toBinaryString(ones));\n         \
    \   int decimal10 = Integer.parseInt(Integer.toBinaryString(ones));\n        \
    \    int decimal11 = Integer.parseInt(Integer.toBinaryString(ones));\n       \
    \     int decimal12 = Integer.parseInt(Integer.toBinaryString(ones));\n      \
    \      int decimal13 = Integer.parseInt(Integer.toBinaryString(ones));\n     \
    \       int decimal14 = Integer.parseInt(Integer.toBinaryString(ones));\n    \
    \        int decimal15 = Integer.parseInt(Integer.toBinaryString(ones));\n   \
    \         int decimal16 = Integer.parseInt(Integer.toBinaryString(ones));\n  \
    \          int decimal17 = Integer.parseInt(Integer.toBinaryString(ones));\n \
    \           int decimal18 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal19 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal20 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal21 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal22 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal23 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal24 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal25 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal26 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal27 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal28 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal29 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal30 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal31 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal32 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal33 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal34 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal35 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal36 = Integer.parseInt(Integer.to", '        // Your code
    here', '        // Write your code here', '        // Your code here', "     \
    \   ArrayList<Integer> result = new ArrayList<Integer>();\n        for(int i =\
    \ 0; i < arr.size(); i++) {\n            int count = 0;\n            for(int j\
    \ = 0; j < arr.size(); j++) {\n                if(arr.get(i) == arr.get(j)) {\n\
    \                    count++;\n                }\n            }\n            if(count\
    \ == 1) {\n                result.add(arr.get(i));\n            }\n        }\n\
    \        return result;", '        // Your code here', "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int[] arr = arr.stream().mapToInt(Integer::intValue).toArray();\n\
    \        Arrays.sort(arr);\n        for(int i = 0; i < arr.length; i++) {\n  \
    \          int count = 0;\n            for(int j = 0; j < arr.length; j++) {\n\
    \                if(arr[j] == i) {\n                    count++;\n           \
    \     }\n            }\n            result.add(count);\n        }\n        return\
    \ result;", '        // Your code here', "        ArrayList<Integer> result =\
    \ new ArrayList<Integer>();\n        for(int i = 0; i < arr.size(); i++) {\n \
    \           int count = 0;\n            for(int j = 0; j < arr.size(); j++) {\n\
    \                if(arr.get(i) == arr.get(j)) {\n                    count++;\n\
    \                }\n            }\n            result.add(count);\n        }\n\
    \        Collections.sort(result);\n        return result;", '        // Your
    code here', '        // Your code here', "        ArrayList<Integer> result =\
    \ new ArrayList<Integer>();\n        for(int i = 0; i < arr.size(); i++) {\n \
    \           int ones = arr.get(i);\n            int decimal = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            result.add(decimal);\n        }\n        Collections.sort(result);\n\
    \        return result;", "        ArrayList<Integer> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        for(int i = 0; i < arr.size(); i++) {\n  \
    \          int ones = arr.get(i).intValue() % 2;\n            int decimal = arr.get(i).intValue()\
    \ / 2;\n            int decimal2 = arr.get(i).intValue() / 2;\n            int\
    \ decimal3 = arr.get(i).intValue() / 2;\n            int decimal4 = arr.get(i).intValue()\
    \ / 2;\n            int decimal5 = arr.get(i).intValue() / 2;\n            int\
    \ decimal6 = arr.get(i).intValue() / 2;\n            int decimal7 = arr.get(i).intValue()\
    \ / 2;\n            int decimal8 = arr.get(i).intValue() / 2;\n            int\
    \ decimal9 = arr.get(i).intValue() / 2;\n            int decimal10 = arr.get(i).intValue()\
    \ / 2;\n            int decimal11 = arr.get(i).intValue() / 2;\n            int\
    \ decimal12 = arr.get(i).intValue() / 2;\n            int decimal13 = arr.get(i).intValue()\
    \ / 2;\n            int decimal14 = arr.get(i).intValue() / 2;\n            int\
    \ decimal15 = arr.get(i).intValue() / 2;\n            int decimal16 = arr.get(i).intValue()\
    \ / 2;\n            int decimal17 = arr.get(i).intValue() / 2;\n            int\
    \ decimal18 = arr.get(i).intValue() / 2;\n            int decimal19 = arr.get(i).intValue()\
    \ / 2;\n            int decimal20 = arr.get(i).intValue() / 2;\n            int\
    \ decimal21 = arr.get(i).intValue() / 2;\n            int decimal22 = arr.get(i).intValue()\
    \ / 2;\n            int decimal23 = arr.get(i).intValue() / 2;\n            int\
    \ decimal24 = arr.get(i).intValue() / 2;\n            int decimal25 = arr.get(i).intValue()\
    \ / 2;\n            int decimal26 = arr.get(i).intValue() / 2;\n            int\
    \ decimal27 = arr.get(i).intValue() / 2;\n            int decimal28 = arr.get(i).intValue()\
    \ / 2;\n            int decimal29 = arr.get(i).intValue() / 2;\n            int\
    \ decimal30 = arr.get(i).intValue() / 2;\n            int decimal31 = arr.get(i).intValue()\
    \ / 2;\n            int decimal32 = arr.get(i).intValue() / 2;\n            int\
    \ decimal33 = arr.get(i).intValue() / 2;\n            int decimal34 = arr.get(i).intValue()\
    \ / 2;\n            int decimal35 = arr.get(i).intValue() / ", "        ArrayList<Integer>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            int ones = arr.get(i);\n            int decimal = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            result.add(decimal);\n        }\n        Collections.sort(result);\n\
    \        return result;", '        // Your code here', "        ArrayList<Integer>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            int ones = arr.get(i);\n            int decimal = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            result.add(decimal);\n        }\n        Collections.sort(result);\n\
    \        return result;", '        // Your code here', "        ArrayList<Integer>\
    \ result = new ArrayList<>();\n        arr.stream().forEach(i -> {\n         \
    \   int ones = Integer.bitCount(i);\n            int decimal = Integer.parseInt(Integer.toBinaryString(i),\
    \ 2);\n            result.add(new IntPair(ones, decimal));\n        });\n    \
    \    Collections.sort(result, new Comparator<IntPair>() {\n            public\
    \ int compare(IntPair o1, IntPair o2) {\n                return o1.getOnes() -\
    \ o2.getOnes();\n            }\n        });\n        return result;", '        //
    Your code here', '        // Your code here', '        // Your code here', '        //
    Your code here', '        // Your code here', '        // Your code here', '        //
    Your code here', "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int[] ones = arr.stream().filter(x -> x == 1).mapToInt(x -> 1).sorted().toArray();\n\
    \        int[] tens = arr.stream().filter(x -> x == 10).mapToInt(x -> 1).sorted().toArray();\n\
    \        int[] hundreds = arr.stream().filter(x -> x == 100).mapToInt(x -> 1).sorted().toArray();\n\
    \        int[] thousands = arr.stream().filter(x -> x == 1000).mapToInt(x -> 1).sorted().toArray();\n\
    \        int[] millions = arr.stream().filter(x -> x == 1000000).mapToInt(x ->\
    \ 1).sorted().toArray();\n        int[] billions = arr.stream().filter(x -> x\
    \ == 1000000000).mapToInt(x -> 1).sorted().toArray();\n        int[] trillions\
    \ = arr.stream().filter(x -> x == 1000000000000).mapToInt(x -> 1).sorted().toArray();\n\
    \        int[] quadrillions = arr.stream().filter(x -> x == 1000000000000000).mapToInt(x\
    \ -> 1).sorted().toArray();\n        int[] quintillions = arr.stream().filter(x\
    \ -> x == 1000000000000000000).mapToInt(x -> 1).sorted().toArray();\n        int[]\
    \ sextillions = arr.stream().filter(x -> x == 1000000000000000000000).mapToInt(x\
    \ -> 1).sorted().toArray();\n        int[] septillions = arr.stream().filter(x\
    \ -> x == 1000000000000000000000000).mapToInt(x -> 1).sorted().toArray();\n  \
    \      int[] octillions = arr.stream().filter(x -> x == 100000000000000000000000000).mapToInt(x\
    \ -> 1).sorted().toArray();\n        int[] nonillions = arr.stream().filter(x\
    \ -> x == 1000000000000000000000000000).mapToInt(x -> 1).sorted().toArray();\n\
    \        int[] decillions = arr.stream().filter(x -> x == 1000000000000000000000000000000).mapToInt(x\
    \ -> 1).sorted().toArray();\n        int[] undecillions = arr.stream().filter(x\
    \ -> x == 100000000000000000000000000000000).mapToInt(x -> 1).sorted().toArray();\n\
    \        int[] duodecillions = arr.stream().filter(x -> x == 1000000000000000000000000000000000).mapToInt(x\
    \ -> 1).sorted().toArray();\n        int[] tredecillions = arr.stream().filter(x\
    \ -> x == 10000000000000000000000000000000000).mapToInt(x -> 1).sorted().toArray",
  '        // Your code here', '        // Your code here', "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        ArrayList<Integer> temp = new ArrayList<Integer>();\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            int count = 0;\n \
    \           for(int j = 0; j < arr.size(); j++) {\n                if(arr.get(i)\
    \ == arr.get(j)) {\n                    count++;\n                }\n        \
    \    }\n            if(count == 1) {\n                result.add(arr.get(i));\n\
    \            }\n            else if(count > 1) {\n                temp.add(arr.get(i));\n\
    \            }\n        }\n        for(int i = 0; i < temp.size(); i++) {\n  \
    \          result.add(temp.get(i));\n        }\n        return result;", '        //
    Your code goes here', "        // Your code goes here\n        ArrayList<Integer>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < arr.size(); i++){\n\
    \            int count = 0;\n            for(int j = i; j >= 0; j--){\n      \
    \          count += arr.get(j);\n            }\n            int decimal = count\
    \ % 10;\n            int remainder = count / 10;\n            int decimal2 = remainder\
    \ % 10;\n            int remainder2 = remainder / 10;\n            int decimal3\
    \ = remainder2 % 10;\n            int remainder3 = remainder2 / 10;\n        \
    \    int decimal4 = remainder3 % 10;\n            int remainder4 = remainder3\
    \ / 10;\n            int decimal5 = remainder4 % 10;\n            int remainder5\
    \ = remainder4 / 10;\n            int decimal6 = remainder5 % 10;\n          \
    \  int remainder6 = remainder5 / 10;\n            int decimal7 = remainder6 %\
    \ 10;\n            int remainder7 = remainder6 / 10;\n            int decimal8\
    \ = remainder7 % 10;\n            int remainder8 = remainder7 / 10;\n        \
    \    int decimal9 = remainder8 % 10;\n            int remainder9 = remainder8\
    \ / 10;\n            int decimal10 = remainder9 % 10;\n            int remainder10\
    \ = remainder9 / 10;\n            int decimal11 = remainder10 % 10;\n        \
    \    int remainder11 = remainder10 / 10;\n            int decimal12 = remainder11\
    \ % 10;\n            int remainder12 = remainder11 / 10;\n            int decimal13\
    \ = remainder12 % 10;\n            int remainder13 = remainder12 / 10;\n     \
    \       int decimal14 = remainder13 % 10;\n            int remainder14 = remainder13\
    \ / 10;\n            int decimal15 = remainder14 % 10;\n            int remainder15\
    \ = remainder14 / 10;\n            int decimal16 = remainder15 % 10;\n       \
    \     int remainder16 = remainder15 / 10;\n            int decimal17 = remainder16\
    \ % 10;\n            int remainder17 = remainder16 / 10;\n            int decimal18\
    \ = remainder17 % 10;\n            int remainder18 = remainder17 / 10;\n     \
    \       int decimal19 = remainder18 % 10;\n            int remainder19 = remainder18\
    \ / 10;\n            int decimal20 = remainder19 % 10;\n            int remainder20\
    \ = remainder19 / 10;\n            int decimal21 = remainder20 % 10;\n       \
    \     int remainder21 = remainder20 / 10;\n            int decimal22 = remainder21\
    \ % 10;\n            int ", '        // Your code here', '        // Your code
    here', '        // Your code here', "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            int count = 0;\n \
    \           for(int j = i; j < arr.size(); j++) {\n                if(arr.get(j)\
    \ == 1) {\n                    count++;\n                }\n            }\n  \
    \          int decimal = count * 10 + arr.get(i);\n            result.add(decimal);\n\
    \        }\n        return result;", '        // Your code here', '        //
    Your code here', "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int[] arr = arr.stream().mapToInt(Integer::intValue).toArray();\n   \
    \     Arrays.sort(arr);\n        for(int i = 0; i < arr.length; i++) {\n     \
    \       int count = 0;\n            for(int j = 0; j < arr.length; j++) {\n  \
    \              if(arr[j] == i) {\n                    count++;\n             \
    \   }\n            }\n            if(count == 1) {\n                result.add(i);\n\
    \            }\n        }\n        return result;", '        // Your code here',
  '        // Your code here', "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int[] arr = arr.stream().mapToInt(Integer::intValue).toArray();\n   \
    \     Arrays.sort(arr);\n        for(int i = 0; i < arr.length; i++) {\n     \
    \       if(arr[i] == 1) {\n                result.add(arr[i]);\n            }\n\
    \        }\n        Arrays.sort(result);\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            int count = 0;\n            for(int j = i; j < arr.size(); j++)\
    \ {\n                if(arr.get(j) == 1) {\n                    count++;\n   \
    \             }\n            }\n            result.add(count);\n        }\n  \
    \      Collections.sort(result);\n        return result;", '        // Your code
    here', "        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  ArrayList<Integer> ones = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ zeros = new ArrayList<Integer>();\n        for(int i : arr) {\n            if(i\
    \ == 1) {\n                ones.add(i);\n            }\n            if(i == 0)\
    \ {\n                zeros.add(i);\n            }\n        }\n        for(int\
    \ i : ones) {\n            result.add(i);\n        }\n        for(int i : zeros)\
    \ {\n            result.add(i);\n        }\n        Collections.sort(result);\n\
    \        return result;", '        // Your code here', "        ArrayList<Integer>\
    \ result = new ArrayList<>();\n        Arrays.sort(arr);\n        for(int i =\
    \ 0; i < arr.size(); i++) {\n            int ones = arr.get(i).bitCount() - 1;\n\
    \            int decimal = arr.get(i).intValue();\n            int decimal2 =\
    \ arr.get(i).intValue();\n            int decimal3 = arr.get(i).intValue();\n\
    \            int decimal4 = arr.get(i).intValue();\n            int decimal5 =\
    \ arr.get(i).intValue();\n            int decimal6 = arr.get(i).intValue();\n\
    \            int decimal7 = arr.get(i).intValue();\n            int decimal8 =\
    \ arr.get(i).intValue();\n            int decimal9 = arr.get(i).intValue();\n\
    \            int decimal10 = arr.get(i).intValue();\n            int decimal11\
    \ = arr.get(i).intValue();\n            int decimal12 = arr.get(i).intValue();\n\
    \            int decimal13 = arr.get(i).intValue();\n            int decimal14\
    \ = arr.get(i).intValue();\n            int decimal15 = arr.get(i).intValue();\n\
    \            int decimal16 = arr.get(i).intValue();\n            int decimal17\
    \ = arr.get(i).intValue();\n            int decimal18 = arr.get(i).intValue();\n\
    \            int decimal19 = arr.get(i).intValue();\n            int decimal20\
    \ = arr.get(i).intValue();\n            int decimal21 = arr.get(i).intValue();\n\
    \            int decimal22 = arr.get(i).intValue();\n            int decimal23\
    \ = arr.get(i).intValue();\n            int decimal24 = arr.get(i).intValue();\n\
    \            int decimal25 = arr.get(i).intValue();\n            int decimal26\
    \ = arr.get(i).intValue();\n            int decimal27 = arr.get(i).intValue();\n\
    \            int decimal28 = arr.get(i).intValue();\n            int decimal29\
    \ = arr.get(i).intValue();\n            int decimal30 = arr.get(i).intValue();\n\
    \            int decimal31 = arr.get(i).intValue();\n            int decimal32\
    \ = arr.get(i).intValue();\n            int decimal33 = arr.get(i).intValue();\n\
    \            int decimal34 = arr.get(i).intValue();\n            int decimal35\
    \ = arr.get(i).intValue();\n            int decimal36 = arr.get(i).intValue();\n\
    \            int decimal37 = arr.get(i).intValue();\n            int decimal38\
    \ = arr.get(i", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            int count = 0;\n \
    \           for(int j = 0; j < arr.size(); j++) {\n                if(arr.get(j)\
    \ == 1) {\n                    count++;\n                }\n            }\n  \
    \          if(count == 0) {\n                result.add(arr.get(i));\n       \
    \     }\n            else if(count == 1) {\n                result.add(arr.get(i));\n\
    \            }\n            else {\n                result.add(arr.get(i));\n\
    \            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<>();\n        Arrays.sort(arr);\n        for(int i =\
    \ 0; i < arr.size(); i++) {\n            int ones = arr.get(i);\n            int\
    \ decimal = ones * Math.pow(2,arr.size()-i-1);\n            result.add(decimal);\n\
    \        }\n        return result;", "        ArrayList<Integer> result = new\
    \ ArrayList<Integer>();\n        int[] ones = new int[arr.size()];\n        Arrays.fill(ones,\
    \ 1);\n        Arrays.sort(ones);\n        Arrays.sort(arr);\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            if(ones[i] == 1) {\n            \
    \    result.add(arr.get(i));\n            }\n        }\n        return result;",
  '        // Your code here', "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        Arrays.sort(arr);\n        for(int i = 0; i < arr.size(); i++) {\n  \
    \          int count = 0;\n            for(int j = 0; j < arr.size(); j++) {\n\
    \                if(arr.get(j) == 1) {\n                    count++;\n       \
    \         }\n            }\n            result.add(i, count);\n        }\n   \
    \     return result;", "        ArrayList<Integer> result = new ArrayList<>();\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            int ones = arr.get(i).bitCount()\
    \ - 1;\n            int decimal = arr.get(i).intValue();\n            if(ones\
    \ > decimal) {\n                result.add(decimal);\n            } else {\n \
    \               result.add(ones);\n            }\n        }\n        return result;",
  '        // Your code here', '        // Your code here', "        ArrayList<Integer>\
    \ result = new ArrayList<>();\n        int[] ones = arr.stream().mapToInt(Integer::intValue).toArray();\n\
    \        Arrays.sort(ones);\n        for (int i = 0; i < ones.length; i++) {\n\
    \            if (ones[i] == 1) {\n                result.add(arr.get(i));\n  \
    \          }\n        }\n        Arrays.sort(result);\n        return result;",
  "        ArrayList<Integer> result = new ArrayList<Integer>();\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            int ones = arr.get(i).bitCount()\
    \ - 1;\n            int decimal = arr.get(i).intValue();\n            int decimal2\
    \ = arr.get(i).intValue();\n            int decimal3 = arr.get(i).intValue();\n\
    \            int decimal4 = arr.get(i).intValue();\n            int decimal5 =\
    \ arr.get(i).intValue();\n            int decimal6 = arr.get(i).intValue();\n\
    \            int decimal7 = arr.get(i).intValue();\n            int decimal8 =\
    \ arr.get(i).intValue();\n            int decimal9 = arr.get(i).intValue();\n\
    \            int decimal10 = arr.get(i).intValue();\n            int decimal11\
    \ = arr.get(i).intValue();\n            int decimal12 = arr.get(i).intValue();\n\
    \            int decimal13 = arr.get(i).intValue();\n            int decimal14\
    \ = arr.get(i).intValue();\n            int decimal15 = arr.get(i).intValue();\n\
    \            int decimal16 = arr.get(i).intValue();\n            int decimal17\
    \ = arr.get(i).intValue();\n            int decimal18 = arr.get(i).intValue();\n\
    \            int decimal19 = arr.get(i).intValue();\n            int decimal20\
    \ = arr.get(i).intValue();\n            int decimal21 = arr.get(i).intValue();\n\
    \            int decimal22 = arr.get(i).intValue();\n            int decimal23\
    \ = arr.get(i).intValue();\n            int decimal24 = arr.get(i).intValue();\n\
    \            int decimal25 = arr.get(i).intValue();\n            int decimal26\
    \ = arr.get(i).intValue();\n            int decimal27 = arr.get(i).intValue();\n\
    \            int decimal28 = arr.get(i).intValue();\n            int decimal29\
    \ = arr.get(i).intValue();\n            int decimal30 = arr.get(i).intValue();\n\
    \            int decimal31 = arr.get(i).intValue();\n            int decimal32\
    \ = arr.get(i).intValue();\n            int decimal33 = arr.get(i).intValue();\n\
    \            int decimal34 = arr.get(i).intValue();\n            int decimal35\
    \ = arr.get(i).intValue();\n            int decimal36 = arr.get(i).intValue();\n\
    \            int decimal37 = arr.get(i).intValue();\n            int decimal38\
    \ = arr.get(i).intValue();\n", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            int count = 0;\n \
    \           for(int j = i; j < arr.size(); j++) {\n                if(arr.get(j)\
    \ == 1) {\n                    count++;\n                }\n            }\n  \
    \          int decimal = count * 10 + arr.get(i);\n            result.add(decimal);\n\
    \        }\n        return result;", '        // Your code here', '        //
    Your code here', '        // Your code here', '        // Your code goes here',
  '        // Your code here', '        // Your code here', '        // Your code
    here', "        ArrayList<Integer> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            int ones = arr.get(i);\n\
    \            int decimal = Integer.parseInt(Integer.toBinaryString(ones));\n \
    \           int decimal2 = Integer.parseInt(Integer.toBinaryString(ones));\n \
    \           int decimal3 = Integer.parseInt(Integer.toBinaryString(ones));\n \
    \           int decimal4 = Integer.parseInt(Integer.toBinaryString(ones));\n \
    \           int decimal5 = Integer.parseInt(Integer.toBinaryString(ones));\n \
    \           int decimal6 = Integer.parseInt(Integer.toBinaryString(ones));\n \
    \           int decimal7 = Integer.parseInt(Integer.toBinaryString(ones));\n \
    \           int decimal8 = Integer.parseInt(Integer.toBinaryString(ones));\n \
    \           int decimal9 = Integer.parseInt(Integer.toBinaryString(ones));\n \
    \           int decimal10 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal11 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal12 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal13 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal14 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal15 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal16 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal17 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal18 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal19 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal20 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal21 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal22 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal23 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal24 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal25 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal26 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal27 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal28 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal29 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal30 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal31 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal32 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal33 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal34 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal35 = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            int decimal36", "        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> temp = new ArrayList<Integer>();\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            int count = 0;\n            for(int\
    \ j = 0; j < arr.size(); j++) {\n                if(arr.get(j) == 1) {\n     \
    \               count++;\n                }\n            }\n            if(count\
    \ == arr.size()) {\n                result.add(arr.get(i));\n            }\n \
    \           else if(count > arr.size()) {\n                result.add(arr.get(i));\n\
    \            }\n            else {\n                temp.add(arr.get(i));\n  \
    \          }\n        }\n        for(int i = 0; i < temp.size(); i++) {\n    \
    \        result.add(temp.get(i));\n        }\n        return result;", "     \
    \   ArrayList<Integer> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            int ones = arr.get(i).intValue()\
    \ % 2;\n            int decimal = arr.get(i).intValue() / 2;\n            int\
    \ index = result.size();\n            while(index > 0 && ones > result.get(index-1).intValue())\
    \ {\n                result.add(index, result.get(index-1));\n               \
    \ index--;\n            }\n            result.add(index, decimal);\n        }\n\
    \        return result;", '        // Your code here', "        ArrayList<Integer>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            int ones = arr.get(i);\n            int decimal = Integer.parseInt(Integer.toBinaryString(ones));\n\
    \            result.add(decimal);\n        }\n        Collections.sort(result);\n\
    \        return result;", '        // Your code here', "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        Arrays.sort(arr);\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            int count = 0;\n            for(int\
    \ j = 0; j < arr.size(); j++) {\n                if(arr.get(i) == arr.get(j))\
    \ {\n                    count++;\n                }\n            }\n        \
    \    result.add(count, arr.get(i));\n        }\n        return result;", "   \
    \     ArrayList<Integer> result = new ArrayList<Integer>();\n        for(int i\
    \ = 0; i < arr.size(); i++) {\n            int count = 0;\n            for(int\
    \ j = i; j < arr.size(); j++) {\n                if(arr.get(j) == 1) {\n     \
    \               count++;\n                }\n            }\n            int decimal\
    \ = count * Math.pow(10, arr.size() - i - 1);\n            result.add(decimal);\n\
    \        }\n        Collections.sort(result);\n        return result;", "    \
    \    // Write your code here\n        ArrayList<Integer> result = new ArrayList<>();\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            int count = 0;\n \
    \           for(int j = 0; j < arr.size(); j++) {\n                if(arr.get(j)\
    \ == 1) {\n                    count++;\n                }\n            }\n  \
    \          if(count == 0) {\n                result.add(arr.get(i));\n       \
    \     }\n        }\n        for(int i = 0; i < arr.size(); i++) {\n          \
    \  int count = 0;\n            for(int j = 0; j < arr.size(); j++) {\n       \
    \         if(arr.get(j) == 1) {\n                    count++;\n              \
    \  }\n            }\n            if(count == 1) {\n                result.add(arr.get(i));\n\
    \            }\n        }\n        for(int i = 0; i < arr.size(); i++) {\n   \
    \         int count = 0;\n            for(int j = 0; j < arr.size(); j++) {\n\
    \                if(arr.get(j) == 1) {\n                    count++;\n       \
    \         }\n            }\n            if(count == 2) {\n                result.add(arr.get(i));\n\
    \            }\n        }\n        for(int i = 0; i < arr.size(); i++) {\n   \
    \         int count = 0;\n            for(int j = 0; j < arr.size(); j++) {\n\
    \                if(arr.get(j) == 1) {\n                    count++;\n       \
    \         }\n            }\n            if(count == 3) {\n                result.add(arr.get(i));\n\
    \            }\n        }\n        for(int i = 0; i < arr.size(); i++) {\n   \
    \         int count = 0;\n            for(int j = 0; j < arr.size(); j++) {\n\
    \                if(arr.get(j) == 1) {\n                    count++;\n       \
    \         }\n            }\n            if(count == 4) {\n                result.add(arr.get(i));\n\
    \            }\n        }\n        for(int i = 0; i < arr.size(); i++) {\n   \
    \         int count = 0;\n            for(int j = 0; j < arr.size(); j++) {\n\
    \                if(arr.get(j) == 1) {\n                    count++;\n       \
    \         }\n            }\n            if(count == 5) {\n                result.add(arr.get(i));\n\
    \            }\n        }\n        for(int i = 0; i < arr.size(); i++) {\n   \
    \         int count = 0;\n            for(int j = 0; j < arr.size(); j++) {\n\
    \                if(arr.get(j) == 1) {\n                    count++;\n       \
    \         }\n            }\n            if(count == 6) {\n                result.add(arr.get(i));\n\
    \            }\n        }\n        for(int i = 0; i < arr.size(); i++) {\n   \
    \         int count = 0;\n            for(int j = 0; j < arr.size(); j++) {\n\
    \                if(arr.get(j) == 1) {\n                    count++;\n       \
    \         }\n            }\n            if(count == 7) {\n                result.add(arr.get(i));\n\
    \            }\n        }\n        for(int i = 0; i < arr.size(); i++) {\n   \
    \         int count = 0;\n            for(int j = 0; j < arr.size(); j++) {\n\
    \                if(arr.get(j) == 1) {\n                    count++;\n       \
    \         }\n            }\n            if(count == 8) {\n                result.add(arr.get(i));\n\
    \            }\n        }\n        for(int i = 0; i < arr.size(); i++) {\n   \
    \         int count = 0;\n            for(int j = 0; j < arr.size(); j++) {\n\
    \                if(arr.get(j) == 1) {\n                    count++;\n       \
    \         }\n            }\n            if(count == 9) {\n                result.add(arr.get(i));\n\
    \            }\n        }\n        for(int ", "        ArrayList<Integer> result\
    \ = new ArrayList<>();\n        Arrays.sort(arr);\n        for (int i = 0; i <\
    \ arr.size(); i++) {\n            if (arr.get(i) == 1) {\n                result.add(arr.get(i));\n\
    \            }\n        }\n        return result;", "        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        ArrayList<Integer> ones = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> zeros = new ArrayList<Integer>();\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            if(arr.get(i) == 1) {\n         \
    \       ones.add(arr.get(i));\n            } else {\n                zeros.add(arr.get(i));\n\
    \            }\n        }\n        for(int i = 0; i < ones.size(); i++) {\n  \
    \          for(int j = 0; j < zeros.size(); j++) {\n                if(ones.get(i)\
    \ < zeros.get(i)) {\n                    Collections.swap(ones, i, j);\n     \
    \               Collections.swap(zeros, i, j);\n                }\n          \
    \  }\n        }\n        for(int i = 0; i < ones.size(); i++) {\n            result.add(ones.get(i));\n\
    \        }\n        for(int i = 0; i < zeros.size(); i++) {\n            result.add(zeros.get(i));\n\
    \        }\n        return result;", "        ArrayList<Integer> result = new\
    \ ArrayList<>();\n        for(int i = 0; i < arr.size(); i++) {\n            int\
    \ count = 0;\n            for(int j = 0; j < arr.size(); j++) {\n            \
    \    if(arr.get(j) == 1) {\n                    count++;\n                }\n\
    \            }\n            int decimal = Integer.parseInt(Integer.toBinaryString(arr.get(i)));\n\
    \            int decimal2 = Integer.parseInt(Integer.toBinaryString(count));\n\
    \            int decimal3 = Integer.parseInt(Integer.toBinaryString(decimal));\n\
    \            int decimal4 = Integer.parseInt(Integer.toBinaryString(decimal2));\n\
    \            int decimal5 = Integer.parseInt(Integer.toBinaryString(decimal3));\n\
    \            int decimal6 = Integer.parseInt(Integer.toBinaryString(decimal4));\n\
    \            int decimal7 = Integer.parseInt(Integer.toBinaryString(decimal5));\n\
    \            int decimal8 = Integer.parseInt(Integer.toBinaryString(decimal6));\n\
    \            int decimal9 = Integer.parseInt(Integer.toBinaryString(decimal7));\n\
    \            int decimal10 = Integer.parseInt(Integer.toBinaryString(decimal8));\n\
    \            int decimal11 = Integer.parseInt(Integer.toBinaryString(decimal9));\n\
    \            int decimal12 = Integer.parseInt(Integer.toBinaryString(decimal10));\n\
    \            int decimal13 = Integer.parseInt(Integer.toBinaryString(decimal11));\n\
    \            int decimal14 = Integer.parseInt(Integer.toBinaryString(decimal12));\n\
    \            int decimal15 = Integer.parseInt(Integer.toBinaryString(decimal13));\n\
    \            int decimal16 = Integer.parseInt(Integer.toBinaryString(decimal14));\n\
    \            int decimal17 = Integer.parseInt(Integer.toBinaryString(decimal15));\n\
    \            int decimal18 = Integer.parseInt(Integer.toBinaryString(decimal16));\n\
    \            int decimal19 = Integer.parseInt(Integer.toBinaryString(decimal17));\n\
    \            int decimal20 = Integer.parseInt(Integer.toBinaryString(decimal18));\n\
    \            int decimal21 = Integer.parseInt(Integer.toBinaryString(decimal19));\n\
    \            int decimal22 = Integer.parseInt(Integer.toBinaryString(decimal20));\n\
    \            int decimal23 = Integer.parseInt(Integer.toBinaryString(decimal21));\n\
    \            int decimal24 = Integer.parseInt(Integer.toBinaryString(decimal22));\n\
    \            int decimal25 = Integer.parseInt(Integer.toBinaryString(decimal23));\n\
    \            int decimal26 = Integer.parseInt(Integer.toBinaryString(decimal24));\n\
    \            int decimal27 = Integer.parseInt(Integer.toBinaryString(decimal25));\n\
    \            int decimal28 = Integer.parseInt(Integer.toBinaryString(decimal26));\n\
    \            int decimal29 = Integer.parseInt(Integer.toBinaryString(decimal27));\n\
    \            int decimal30 = Integer.parseInt(Integer.toBinaryString(decimal28));\n\
    \            int decimal31 = Integer.parseInt(Integer.toBinaryString(decimal29));\n\
    \            int decimal32 = Integer.parseInt(Integer.toBinaryString(decimal30));\n\
    \            int decimal33", "        // Write your code here\n        ArrayList<Integer>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            int ones = arr.get(i);\n            int decimal = 0;\n          \
    \  while(ones > 0) {\n                decimal += ones % 10;\n                ones\
    \ /= 10;\n            }\n            result.add(decimal);\n        }\n       \
    \ Collections.sort(result);\n        return result;", '        // Your code here',
  "        ArrayList<Integer> result = new ArrayList<Integer>();\n        Arrays.sort(arr);\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            int count = 0;\n \
    \           for(int j = i; j < arr.size(); j++) {\n                if(arr.get(j)\
    \ == 1) {\n                    count++;\n                }\n            }\n  \
    \          result.add(count, arr.get(i));\n        }\n        return result;",
  '        // Your code here', '        // Your code here', '        // Your code
    goes here', '        // Your code here']
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "\n    }\n"

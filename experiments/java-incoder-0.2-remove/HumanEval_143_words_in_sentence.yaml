name: HumanEval_143_words_in_sentence
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // You are given a string representing a sentence,\n    //\
  \ the sentence contains some words separated by a space,\n    // and you have to\
  \ return a string that contains the words from the original sentence,\n    // whose\
  \ lengths are prime numbers,\n    // the order of the words in the new string should\
  \ be the same as the original one.\n    // Constraints:\n    // * 1 <= len(sentence)\
  \ <= 100\n    // * sentence contains only letters\n    public static String wordsInSentence(String\
  \ sentence) {\n"
tests: "return \"\";\n    }\n    public static void main(String[] args) {\n    assert(wordsInSentence((\"\
  This is a test\")).equals((\"is\")));\n    assert(wordsInSentence((\"lets go for\
  \ swimming\")).equals((\"go for\")));\n    assert(wordsInSentence((\"there is no\
  \ place available here\")).equals((\"there is no place\")));\n    assert(wordsInSentence((\"\
  Hi I am Hussein\")).equals((\"Hi am Hussein\")));\n    assert(wordsInSentence((\"\
  go for it\")).equals((\"go for it\")));\n    assert(wordsInSentence((\"here\")).equals((\"\
  \")));\n    assert(wordsInSentence((\"here is\")).equals((\"is\")));\n    }\n\n\
  }\n"
completions: []
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "\n    }\n"

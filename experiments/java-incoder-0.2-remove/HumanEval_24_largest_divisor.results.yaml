language: java
name: HumanEval_24_largest_divisor
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        for (int i = 1; i <= n; i++) {\n         \
    \   if (n % i == 0) {\n                maxDivisor = i;\n            }\n      \
    \  }\n        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp_d3l6fs8.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = -1;\n        for (int i = 1; i <= n; i++) {\n    \
    \        if (n % i == 0) {\n                if (largestDivisor == -1) {\n    \
    \                largestDivisor = i;\n                } else if (largestDivisor\
    \ > i) {\n                    largestDivisor = i;\n                }\n       \
    \     }\n        }\n        return largestDivisor;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n\
    \    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10)) == (5));\n\
    \    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49)) ==\
    \ (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpgb6m2fh3.java:22: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = Integer.MIN_VALUE;\n        for (int i = 2; i <= n;\
    \ i++) {\n            if (n % i == 0) {\n                if (largestDivisor <\
    \ i) {\n                    largestDivisor = i;\n                }\n         \
    \   }\n        }\n        return largestDivisor;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n\
    \    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10)) == (5));\n\
    \    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49)) ==\
    \ (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpkbxfkvau.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        int divisor = 1;\n        while (divisor <=\
    \ n) {\n            if (n % divisor == 0) {\n                maxDivisor = divisor;\n\
    \            }\n            divisor++;\n        }\n        return maxDivisor;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp1sbv5qzb.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        int divisor = 1;\n        while (divisor <=\
    \ n) {\n            if (n % divisor == 0) {\n                maxDivisor = divisor;\n\
    \            }\n            divisor++;\n        }\n        return maxDivisor;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp1sbv5qzb.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = 0;\n        for (int i = 1; i <= n; i++) {\n     \
    \       if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpy_0s0rmx.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        int divisor = 1;\n        while (divisor <=\
    \ n) {\n            if (n % divisor == 0) {\n                maxDivisor = divisor;\n\
    \            }\n            divisor++;\n        }\n        return maxDivisor;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp1sbv5qzb.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        for (int i = 1; i <= n; i++) {\n         \
    \   if (n % i == 0) {\n                maxDivisor = i;\n            }\n      \
    \  }\n        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp_d3l6fs8.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = -1;\n        for (int i = 1; i <= n; i++) {\n    \
    \        if (n % i == 0) {\n                if (largestDivisor == -1) {\n    \
    \                largestDivisor = i;\n                } else if (largestDivisor\
    \ != i) {\n                    largestDivisor = Math.max(largestDivisor, i);\n\
    \                }\n            }\n        }\n        return largestDivisor;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp6joo8lcn.java:22: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = Integer.MIN_VALUE;\n        for (int i = 1; i <= n; i++)\
    \ {\n            if (n % i == 0) {\n                maxDivisor = Math.max(maxDivisor,\
    \ i);\n            }\n        }\n        return maxDivisor;\nreturn 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpninxxo8u.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = n;\n        for (int i = 1; i <= n; i++) {\n     \
    \       if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpbax7nzhy.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        int divisor = 1;\n        while (divisor <=\
    \ n) {\n            if (n % divisor == 0) {\n                maxDivisor = divisor;\n\
    \            }\n            divisor++;\n        }\n        return maxDivisor;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp1sbv5qzb.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 1;\n        for (int i = 1; i <= n; i++) {\n         \
    \   if (n % i == 0) {\n                maxDivisor = i;\n            }\n      \
    \  }\n        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpz3n8au8f.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = n;\n        for (int i = 1; i <= n; i++) {\n     \
    \       if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpbax7nzhy.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = -1;\n        for (int i = 1; i <= n; i++) {\n    \
    \        if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp4putqoh2.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        int divisor = 1;\n        while (divisor <=\
    \ n) {\n            if (n % divisor == 0) {\n                maxDivisor = divisor;\n\
    \            }\n            divisor++;\n        }\n        return maxDivisor;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp1sbv5qzb.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 1;\n        int currentDivisor = 1;\n        while (currentDivisor\
    \ <= n) {\n            if (n % currentDivisor == 0) {\n                maxDivisor\
    \ = currentDivisor;\n            }\n            currentDivisor++;\n        }\n\
    \        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpr8q4ksqb.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = Integer.MIN_VALUE;\n        for (int i = 1; i <= n;\
    \ i++) {\n            if (n % i == 0) {\n                if (largestDivisor <\
    \ i) {\n                    largestDivisor = i;\n                }\n         \
    \   }\n        }\n        return largestDivisor;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n\
    \    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10)) == (5));\n\
    \    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49)) ==\
    \ (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpcwtgt_2g.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = Integer.MIN_VALUE;\n        for (int i = 2; i <= n;\
    \ i++) {\n            if (n % i == 0) {\n                largestDivisor = i;\n\
    \            }\n        }\n        return largestDivisor;\nreturn 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpr4ab4via.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 1;\n        int currentDivisor = 1;\n        while (currentDivisor\
    \ <= n) {\n            if (n % currentDivisor == 0) {\n                maxDivisor\
    \ = currentDivisor;\n            }\n            currentDivisor++;\n        }\n\
    \        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpr8q4ksqb.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 1;\n        int maxDivisorFactor = 1;\n        for (int\
    \ i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                maxDivisorFactor\
    \ = i;\n                if (maxDivisor < maxDivisorFactor) {\n               \
    \     maxDivisor = maxDivisorFactor;\n                }\n            }\n     \
    \   }\n        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpa2jvokto.java:22: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = Integer.MIN_VALUE;\n        for (int i = 2; i <= n;\
    \ i++) {\n            if (n % i == 0) {\n                largestDivisor = i;\n\
    \            }\n        }\n        return largestDivisor;\nreturn 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpr4ab4via.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = n;\n        for(int i = 1; i < n; i++) {\n       \
    \     if(n % i == 0) {\n                largestDivisor = i;\n            }\n \
    \       }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpbdil4ihf.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = Integer.MIN_VALUE;\n        int divisor = 1;\n   \
    \     while (divisor < n) {\n            if (n % divisor == 0) {\n           \
    \     largestDivisor = divisor;\n            }\n            divisor++;\n     \
    \   }\n        return largestDivisor;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpis__h2pl.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 1;\n        for (int i = 1; i <= n; i++) {\n         \
    \   if (n % i == 0) {\n                maxDivisor = i;\n            }\n      \
    \  }\n        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpz3n8au8f.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = 0;\n        for (int i = 1; i <= n; i++) {\n     \
    \       if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpy_0s0rmx.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = 0;\n        for (int i = 1; i <= n; i++) {\n     \
    \       if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpy_0s0rmx.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = -1;\n        for (int i = 1; i <= n; i++) {\n    \
    \        if (n % i == 0) {\n                if (largestDivisor == -1) {\n    \
    \                largestDivisor = i;\n                } else if (largestDivisor\
    \ > i) {\n                    largestDivisor = i;\n                }\n       \
    \     }\n        }\n        return largestDivisor;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n\
    \    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10)) == (5));\n\
    \    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49)) ==\
    \ (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpgb6m2fh3.java:22: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 1;\n        for (int i = 1; i <= n; i++) {\n         \
    \   if (n % i == 0) {\n                maxDivisor = i;\n            }\n      \
    \  }\n        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpz3n8au8f.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = n;\n        for (int i = 1; i <= n; i++) {\n     \
    \       if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpbax7nzhy.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        int divisor = 1;\n        while (divisor <=\
    \ n) {\n            if (n % divisor == 0) {\n                maxDivisor = divisor;\n\
    \            }\n            divisor++;\n        }\n        return maxDivisor;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp1sbv5qzb.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = n;\n        for(int i = 1; i < n; i++) {\n           \
    \ if(n % i == 0) {\n                maxDivisor = i;\n            }\n        }\n\
    \        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmplkmjwf2h.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = 0;\n        for (int i = 1; i <= n; i++) {\n     \
    \       if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpy_0s0rmx.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = Integer.MIN_VALUE;\n        int divisor = 1;\n   \
    \     while (divisor <= n) {\n            if (n % divisor == 0) {\n          \
    \      largestDivisor = divisor;\n            }\n            divisor++;\n    \
    \    }\n        return largestDivisor;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpylmogmut.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = Integer.MIN_VALUE;\n        for (int i = 1; i <= n;\
    \ i++) {\n            if (n % i == 0) {\n                largestDivisor = i;\n\
    \            }\n        }\n        return largestDivisor;\nreturn 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpk2cc6vk4.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 1;\n        int currentDivisor = 1;\n        int currentDivisorFactor\
    \ = 1;\n        while (currentDivisor <= n) {\n            currentDivisorFactor\
    \ = currentDivisor / n;\n            if (currentDivisorFactor % 2 == 0) {\n  \
    \              currentDivisorFactor = currentDivisorFactor * 2;\n            }\n\
    \            if (currentDivisorFactor > maxDivisor) {\n                maxDivisor\
    \ = currentDivisorFactor;\n            }\n            currentDivisor++;\n    \
    \    }\n        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp6editcw7.java:25: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 1;\n        for (int i = 1; i <= n; i++) {\n         \
    \   if (n % i == 0) {\n                maxDivisor = i;\n            }\n      \
    \  }\n        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpz3n8au8f.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = n;\n        for (int i = 1; i < n; i++) {\n          \
    \  if (n % i == 0) {\n                maxDivisor = i;\n            }\n       \
    \ }\n        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpqyv_0_ce.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = n;\n        for (int i = 1; i <= n; i++) {\n         \
    \   if (n % i == 0) {\n                maxDivisor = i;\n            }\n      \
    \  }\n        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp_j_u01eo.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = Integer.MIN_VALUE;\n        for (int i = 1; i <= n;\
    \ i++) {\n            if (n % i == 0) {\n                if (largestDivisor <\
    \ i) {\n                    largestDivisor = i;\n                }\n         \
    \   }\n        }\n        return largestDivisor;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n\
    \    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10)) == (5));\n\
    \    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49)) ==\
    \ (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpcwtgt_2g.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        int divisor = 1;\n        while (divisor <=\
    \ n) {\n            if (n % divisor == 0) {\n                maxDivisor = divisor;\n\
    \            }\n            divisor++;\n        }\n        return maxDivisor;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp1sbv5qzb.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        for (int i = 1; i < n; i++) {\n          \
    \  if (n % i == 0) {\n                maxDivisor = i;\n            }\n       \
    \ }\n        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpm5ujid23.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      // Initialize a list to store all the divisors\n        List<Integer> divisors\
    \ = new ArrayList<>();\n        // Initialize a list to store all the divisors\
    \ less than n\n        List<Integer> divisorsLessThanN = new ArrayList<>();\n\
    \        // Initialize a list to store all the divisors greater than n\n     \
    \   List<Integer> divisorsGreaterThanN = new ArrayList<>();\n        // Initialize\
    \ a list to store all the divisors less than n and greater than n\n        List<Integer>\
    \ divisorsLessThanNGreaterThanN = new ArrayList<>();\n        // Initialize a\
    \ list to store all the divisors less than n and less than n\n        List<Integer>\
    \ divisorsLessThanNLessThanN = new ArrayList<>();\n        // Initialize a list\
    \ to store all the divisors greater than n and greater than n\n        List<Integer>\
    \ divisorsGreaterThanNGreaterThanN = new ArrayList<>();\n        // Initialize\
    \ a list to store all the divisors greater than n and less than n\n        List<Integer>\
    \ divisorsGreaterThanNLessThanN = new ArrayList<>();\n        // Initialize a\
    \ list to store all the divisors less than n and greater than n\n        List<Integer>\
    \ divisorsLessThanNGreaterThanNLessThanN = new ArrayList<>();\n        // Initialize\
    \ a list to store all the divisors greater than n and less than n\n        List<Integer>\
    \ divisorsGreaterThanNGreaterThanNLessThanN = new ArrayList<>();\n        // Initialize\
    \ a list to store all the divisors greater than n and greater than n\n       \
    \ List<Integer> divisorsGreaterThanNLessThanNGreaterThanN = new ArrayList<>();\n\
    \        // Initialize a list to store all the divisors less than n and less than\
    \ n\n        List<Integer> divisorsLessThanNLessThanNGreaterThanN = new ArrayList<>();\n\
    \        // Initialize a list to store all the divisors greater than n and greater\
    \ than n\n        List<Integer> divisorsGreaterThanNGreaterThanNLessThanN = new\
    \ ArrayList<>();\n        // Initialize a list to store all the divisors greater\
    \ than n and less than n\n        List<Integer> divisorsGreaterThanNLessThanNGreaterThanN\
    \ = new ArrayList<>();\n        // Initialize a list to store all the divisors\
    \ less than n and less than n\n        List<Integer> divisorsLessThanNLessThanNGreaterThanNLessThanN\
    \ = new ArrayList<>();\n        // Initialize a list to store all the divisors\
    \ greater than n and greater than n\n        List<Integer> divisorsGreaterThanNGreaterThanNLessThanNGreaterThanN\
    \ = new ArrayList<>();\n        // Initialize a list to store all the divisors\
    \ greater than n and less than n\n        List<Integer> divisorsGre\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_wfru7dn.java:42: error: ';' expected\n        List<Integer> divisorsGre\n\
    \                                 ^\n1 error\n"
  stdout: ''
  timestamp: 1659792364
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = n;\n        int divisor = 1;\n        while (divisor <\
    \ n) {\n            if (n % divisor == 0) {\n                maxDivisor = divisor;\n\
    \            }\n            divisor++;\n        }\n        return maxDivisor;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp9_mn1zv6.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792365
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = -1;\n        for (int i = 1; i <= n; i++) {\n    \
    \        if (n % i == 0) {\n                if (largestDivisor == -1) {\n    \
    \                largestDivisor = i;\n                } else if (largestDivisor\
    \ > i) {\n                    largestDivisor = i;\n                }\n       \
    \     }\n        }\n        return largestDivisor;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n\
    \    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10)) == (5));\n\
    \    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49)) ==\
    \ (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpgb6m2fh3.java:22: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        for (int i = 1; i <= n; i++) {\n         \
    \   if (n % i == 0) {\n                maxDivisor = i;\n            }\n      \
    \  }\n        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp_d3l6fs8.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = -1;\n        for (int i = 1; i <= n; i++) {\n    \
    \        if (n % i == 0) {\n                if (largestDivisor == -1) {\n    \
    \                largestDivisor = i;\n                } else if (largestDivisor\
    \ > i) {\n                    largestDivisor = i;\n                }\n       \
    \     }\n        }\n        return largestDivisor;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n\
    \    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10)) == (5));\n\
    \    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49)) ==\
    \ (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpgb6m2fh3.java:22: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = n;\n        int divisor = 1;\n        while (divisor <=\
    \ maxDivisor) {\n            if (n % divisor == 0) {\n                maxDivisor\
    \ = divisor;\n            }\n            divisor++;\n        }\n        return\
    \ maxDivisor;\nreturn 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7)) == (1));\n\
    \    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100)) ==\
    \ (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp8_4lffcb.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792365
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 1;\n        int currentDivisor = 1;\n        while (currentDivisor\
    \ <= n) {\n            if (n % currentDivisor == 0) {\n                maxDivisor\
    \ = currentDivisor;\n            }\n            currentDivisor++;\n        }\n\
    \        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpr8q4ksqb.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = -1;\n        for (int i = 1; i <= n; i++) {\n    \
    \        if (n % i == 0) {\n                if (largestDivisor == -1 || largestDivisor\
    \ > i) {\n                    largestDivisor = i;\n                }\n       \
    \     }\n        }\n        return largestDivisor;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n\
    \    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10)) == (5));\n\
    \    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49)) ==\
    \ (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpx4p6e3st.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792365
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = 0;\n        for (int i = 1; i <= n; i++) {\n     \
    \       if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpy_0s0rmx.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 1;\n        for (int i = 1; i <= n; i++) {\n         \
    \   if (n % i == 0) {\n                maxDivisor = i;\n            }\n      \
    \  }\n        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpz3n8au8f.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = n;\n        for (int i = 1; i <= n; i++) {\n     \
    \       if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpbax7nzhy.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = Integer.MIN_VALUE;\n        for (int i = 1; i <= n;\
    \ i++) {\n            if (n % i == 0) {\n                if (largestDivisor <\
    \ i) {\n                    largestDivisor = i;\n                }\n         \
    \   }\n        }\n        return largestDivisor;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n\
    \    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10)) == (5));\n\
    \    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49)) ==\
    \ (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpcwtgt_2g.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = n;\n        for(int i = 1; i < n; i++) {\n           \
    \ if(n%i == 0) {\n                maxDivisor = i;\n            }\n        }\n\
    \        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp9ivna_8w.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792365
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        for (int i = 1; i <= n; i++) {\n         \
    \   if (n % i == 0) {\n                maxDivisor = i;\n            }\n      \
    \  }\n        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp_d3l6fs8.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        int divisor = 1;\n        while (divisor <=\
    \ n) {\n            if (n % divisor == 0) {\n                maxDivisor = divisor;\n\
    \            }\n            divisor++;\n        }\n        return maxDivisor;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp1sbv5qzb.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = n;\n        for (int i = 1; i < n; i++) {\n      \
    \      if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp7qcn8lxt.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792365
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = n;\n        for (int i = 1; i < n; i++) {\n      \
    \      if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp7qcn8lxt.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792365
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 1;\n        int currentDivisor = 1;\n        while (currentDivisor\
    \ <= n) {\n            if (n % currentDivisor == 0) {\n                maxDivisor\
    \ = currentDivisor;\n            }\n            currentDivisor++;\n        }\n\
    \        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpr8q4ksqb.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = n;\n        int currentDivisor = 1;\n        while (currentDivisor\
    \ <= maxDivisor) {\n            if (n % currentDivisor == 0) {\n             \
    \   maxDivisor = currentDivisor;\n            }\n            currentDivisor++;\n\
    \        }\n        return maxDivisor;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpvyo0jk_j.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792365
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = 0;\n        for (int i = 1; i <= n; i++) {\n     \
    \       if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpy_0s0rmx.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        for (int i = 1; i <= n; i++) {\n         \
    \   if (n % i == 0) {\n                maxDivisor = i;\n            }\n      \
    \  }\n        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp_d3l6fs8.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = n;\n        for (int i = 1; i <= n; i++) {\n     \
    \       if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpbax7nzhy.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = -1;\n        for (int i = 1; i < n; i++) {\n     \
    \       if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp82hlwdzo.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792365
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = n;\n        for (int i = 1; i <= n; i++) {\n         \
    \   if (n % i == 0) {\n                maxDivisor = i;\n            }\n      \
    \  }\n        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp_j_u01eo.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = n;\n        for (int i = 1; i <= n; i++) {\n         \
    \   if (n % i == 0) {\n                maxDivisor = i;\n            }\n      \
    \  }\n        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp_j_u01eo.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        for (int i = 1; i <= n; i++) {\n         \
    \   if (n % i == 0) {\n                maxDivisor = i;\n            }\n      \
    \  }\n        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp_d3l6fs8.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = n;\n        for (int i = 1; i <= n; i++) {\n         \
    \   if (n % i == 0) {\n                maxDivisor = i;\n            }\n      \
    \  }\n        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp_j_u01eo.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        for (int i = 1; i <= n; i++) {\n         \
    \   if (n % i == 0) {\n                maxDivisor = i;\n            }\n      \
    \  }\n        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp_d3l6fs8.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 1;\n        int currentDivisor = 1;\n        while (currentDivisor\
    \ <= n) {\n            if (n % currentDivisor == 0) {\n                maxDivisor\
    \ = currentDivisor;\n            }\n            currentDivisor++;\n        }\n\
    \        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpr8q4ksqb.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = n;\n        for(int i = 1; i < n; i++) {\n       \
    \     if(n%i == 0) {\n                largestDivisor = i;\n            }\n   \
    \     }\n        return largestDivisor;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmph8pobnkb.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792365
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        for (int i = 1; i <= n; i++) {\n         \
    \   if (n % i == 0) {\n                maxDivisor = i;\n            }\n      \
    \  }\n        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp_d3l6fs8.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = Integer.MIN_VALUE;\n        for (int i = 1; i <= n;\
    \ i++) {\n            if (n % i == 0) {\n                if (largestDivisor <\
    \ i) {\n                    largestDivisor = i;\n                }\n         \
    \   }\n        }\n        return largestDivisor;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n\
    \    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10)) == (5));\n\
    \    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49)) ==\
    \ (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpcwtgt_2g.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = Integer.MIN_VALUE;\n        for (int i = 1; i <= n;\
    \ i++) {\n            if (n % i == 0) {\n                largestDivisor = i;\n\
    \            }\n        }\n        return largestDivisor;\nreturn 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpk2cc6vk4.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        int divisor = 1;\n        while (divisor <=\
    \ n) {\n            if (n % divisor == 0) {\n                maxDivisor = divisor;\n\
    \            }\n            divisor++;\n        }\n        return maxDivisor;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp1sbv5qzb.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        int divisor = 1;\n        while (divisor <=\
    \ n) {\n            if (n % divisor == 0) {\n                maxDivisor = divisor;\n\
    \            }\n            divisor++;\n        }\n        return maxDivisor;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp1sbv5qzb.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = n;\n        for (int i = 1; i <= n; i++) {\n     \
    \       if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpbax7nzhy.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = n;\n        for (int i = 2; i <= n; i++) {\n     \
    \       if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp0vphd90_.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792365
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = n;\n        for (int i = 1; i <= n; i++) {\n     \
    \       if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpbax7nzhy.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        for (int i = 1; i <= n; i++) {\n         \
    \   if (n % i == 0) {\n                maxDivisor = i;\n            }\n      \
    \  }\n        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp_d3l6fs8.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = -1;\n        for (int i = 1; i <= n; i++) {\n    \
    \        if (n % i == 0) {\n                if (largestDivisor == -1 || largestDivisor\
    \ > i) {\n                    largestDivisor = i;\n                }\n       \
    \     }\n        }\n        return largestDivisor;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n\
    \    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10)) == (5));\n\
    \    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49)) ==\
    \ (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpx4p6e3st.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792365
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = 0;\n        for (int i = 1; i <= n; i++) {\n     \
    \       if (n % i == 0) {\n                if (largestDivisor == 0 || largestDivisor\
    \ > i) {\n                    largestDivisor = i;\n                }\n       \
    \     }\n        }\n        return largestDivisor;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n\
    \    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10)) == (5));\n\
    \    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49)) ==\
    \ (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpmmgodyu3.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792365
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = Integer.MIN_VALUE;\n        int currentDivisor = 1;\n\
    \        while (currentDivisor <= n) {\n            if (n % currentDivisor ==\
    \ 0) {\n                maxDivisor = Math.max(maxDivisor, currentDivisor);\n \
    \           }\n            currentDivisor++;\n        }\n        return maxDivisor;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp4_0_16dc.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792365
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = -1;\n        int divisor = 1;\n        while (divisor\
    \ <= n) {\n            if (n % divisor == 0) {\n                maxDivisor = divisor;\n\
    \            }\n            divisor++;\n        }\n        return maxDivisor;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmphlxet29m.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792365
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = n;\n        int divisor = 1;\n        while (divisor <=\
    \ maxDivisor) {\n            if (n % divisor == 0) {\n                maxDivisor\
    \ = divisor;\n            }\n            divisor++;\n        }\n        return\
    \ maxDivisor;\nreturn 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7)) == (1));\n\
    \    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100)) ==\
    \ (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp8_4lffcb.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792365
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = n;\n        for (int i = 1; i < n; i++) {\n      \
    \      if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp7qcn8lxt.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792365
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = 0;\n        for (int i = 1; i <= n; i++) {\n     \
    \       if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpy_0s0rmx.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      // Initialize a list to store all the divisors\n        List<Integer> divisors\
    \ = new ArrayList<>();\n        // Initialize a list to store all the divisors\n\
    \        List<Integer> divisors2 = new ArrayList<>();\n        // Initialize a\
    \ list to store all the divisors\n        List<Integer> divisors3 = new ArrayList<>();\n\
    \        // Initialize a list to store all the divisors\n        List<Integer>\
    \ divisors4 = new ArrayList<>();\n        // Initialize a list to store all the\
    \ divisors\n        List<Integer> divisors5 = new ArrayList<>();\n        // Initialize\
    \ a list to store all the divisors\n        List<Integer> divisors6 = new ArrayList<>();\n\
    \        // Initialize a list to store all the divisors\n        List<Integer>\
    \ divisors7 = new ArrayList<>();\n        // Initialize a list to store all the\
    \ divisors\n        List<Integer> divisors8 = new ArrayList<>();\n        // Initialize\
    \ a list to store all the divisors\n        List<Integer> divisors9 = new ArrayList<>();\n\
    \        // Initialize a list to store all the divisors\n        List<Integer>\
    \ divisors10 = new ArrayList<>();\n        // Initialize a list to store all the\
    \ divisors\n        List<Integer> divisors11 = new ArrayList<>();\n        //\
    \ Initialize a list to store all the divisors\n        List<Integer> divisors12\
    \ = new ArrayList<>();\n        // Initialize a list to store all the divisors\n\
    \        List<Integer> divisors13 = new ArrayList<>();\n        // Initialize\
    \ a list to store all the divisors\n        List<Integer> divisors14 = new ArrayList<>();\n\
    \        // Initialize a list to store all the divisors\n        List<Integer>\
    \ divisors15 = new ArrayList<>();\n        // Initialize a list to store all the\
    \ divisors\n        List<Integer> divisors16 = new ArrayList<>();\n        //\
    \ Initialize a list to store all the divisors\n        List<Integer> divisors17\
    \ = new ArrayList<>();\n        // Initialize a list to store all the divisors\n\
    \        List<Integer> divisors18 = new ArrayList<>();\n        // Initialize\
    \ a list to store all the divisors\n        List<Integer> divisors19 = new ArrayList<>();\n\
    \        // Initialize a list to store all the divisors\n        List<Integer>\
    \ divisors20 = new ArrayList<>();\n        // Initialize a list to store all the\
    \ divisors\n        List<Integer> divisors21 = new ArrayList<>();\n        //\
    \ Initialize a list to store all the divisors\n        List<Integer> divisors22\
    \ = new ArrayList<>();\n        // Initialize a list to store all the divisors\n\
    \        List<Integer> divisors23 = new ArrayList<>();\n        // Initialize\
    \ a list to store all the divisors\n        List<Integer> divisors24 = new ArrayList<>();\n\
    \        // Initialize a list to store all the divisors\n        \nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjmjs49cj.java:64)\n"
  stdout: ''
  timestamp: 1659792366
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = Integer.MIN_VALUE;\n        for (int i = 1; i <= n;\
    \ i++) {\n            if (n % i == 0) {\n                if (largestDivisor <\
    \ i) {\n                    largestDivisor = i;\n                }\n         \
    \   }\n        }\n        return largestDivisor;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n\
    \    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10)) == (5));\n\
    \    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49)) ==\
    \ (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpcwtgt_2g.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = -1;\n        for (int i = 1; i <= n; i++) {\n    \
    \        if (n % i == 0) {\n                if (largestDivisor == -1) {\n    \
    \                largestDivisor = i;\n                } else if (largestDivisor\
    \ > i) {\n                    largestDivisor = i;\n                }\n       \
    \     }\n        }\n        return largestDivisor;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n\
    \    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10)) == (5));\n\
    \    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49)) ==\
    \ (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpgb6m2fh3.java:22: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = 0;\n        for (int i = 1; i <= n; i++) {\n     \
    \       if (n % i == 0) {\n                if (largestDivisor == 0 || largestDivisor\
    \ > i) {\n                    largestDivisor = i;\n                }\n       \
    \     }\n        }\n        return largestDivisor;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n\
    \    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10)) == (5));\n\
    \    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49)) ==\
    \ (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpmmgodyu3.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792365
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 1;\n        int divisor = 1;\n        while (divisor <=\
    \ n) {\n            if (n % divisor == 0) {\n                maxDivisor = divisor;\n\
    \            }\n            divisor++;\n        }\n        return maxDivisor;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpoibhjzll.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792365
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        for (int i = 1; i <= n; i++) {\n         \
    \   if (n % i == 0) {\n                if (maxDivisor < i) {\n               \
    \     maxDivisor = i;\n                }\n            }\n        }\n        return\
    \ maxDivisor;\nreturn 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7)) == (1));\n\
    \    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100)) ==\
    \ (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpbmf5u2yt.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792365
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 1;\n        int currentDivisor = 1;\n        while (currentDivisor\
    \ <= n) {\n            if (n % currentDivisor == 0) {\n                maxDivisor\
    \ = currentDivisor;\n            }\n            currentDivisor++;\n        }\n\
    \        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpr8q4ksqb.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = Integer.MIN_VALUE;\n        int divisor = 1;\n       \
    \ while (divisor <= n) {\n            if (n % divisor == 0) {\n              \
    \  maxDivisor = Math.max(maxDivisor, divisor);\n            }\n            divisor++;\n\
    \        }\n        return maxDivisor;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmppkkfk8bn.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792365
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        for (int i = 1; i <= n; i++) {\n         \
    \   if (n % i == 0) {\n                if (maxDivisor < i) {\n               \
    \     maxDivisor = i;\n                }\n            }\n        }\n        return\
    \ maxDivisor;\nreturn 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7)) == (1));\n\
    \    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100)) ==\
    \ (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpbmf5u2yt.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792365
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = Integer.MIN_VALUE;\n        for (int i = 1; i <= n;\
    \ i++) {\n            if (n % i == 0) {\n                largestDivisor = i;\n\
    \            }\n        }\n        return largestDivisor;\nreturn 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpk2cc6vk4.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        int divisor = 1;\n        while (divisor <=\
    \ n) {\n            if (n % divisor == 0) {\n                maxDivisor = divisor;\n\
    \            }\n            divisor++;\n        }\n        return maxDivisor;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp1sbv5qzb.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        int divisor = 1;\n        while (divisor <=\
    \ n) {\n            if (n % divisor == 0) {\n                maxDivisor = divisor;\n\
    \            }\n            divisor++;\n        }\n        return maxDivisor;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp1sbv5qzb.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        int divisor = 1;\n        while (divisor <=\
    \ n) {\n            if (n % divisor == 0) {\n                maxDivisor = divisor;\n\
    \            }\n            divisor++;\n        }\n        return maxDivisor;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp1sbv5qzb.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = n;\n        for (int i = 1; i <= n; i++) {\n     \
    \       if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpbax7nzhy.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 1;\n        int maxDividend = 1;\n        while (maxDividend\
    \ < n) {\n            maxDividend = maxDividend * 2;\n            if (maxDividend\
    \ % 2 == 0) {\n                maxDivisor = maxDividend;\n            }\n    \
    \    }\n        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpfjlv0f9c.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792365
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = Integer.MIN_VALUE;\n        for (int i = 1; i <= n;\
    \ i++) {\n            if (n % i == 0) {\n                largestDivisor = i;\n\
    \            }\n        }\n        return largestDivisor;\nreturn 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpk2cc6vk4.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = n;\n        for (int i = 2; i <= Math.sqrt(n); i++) {\n\
    \            if (n % i == 0) {\n                maxDivisor = i;\n            }\n\
    \        }\n        return maxDivisor;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp1com3nzt.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792365
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = n;\n        for (int i = 1; i <= n; i++) {\n     \
    \       if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpbax7nzhy.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        int divisor = 1;\n        while (divisor <=\
    \ n) {\n            if (n % divisor == 0) {\n                maxDivisor = divisor;\n\
    \            }\n            divisor++;\n        }\n        return maxDivisor;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp1sbv5qzb.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = -1;\n        for (int i = 1; i <= n; i++) {\n    \
    \        if (n % i == 0) {\n                if (largestDivisor == -1) {\n    \
    \                largestDivisor = i;\n                } else if (largestDivisor\
    \ > i) {\n                    largestDivisor = i;\n                }\n       \
    \     }\n        }\n        return largestDivisor;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n\
    \    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10)) == (5));\n\
    \    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49)) ==\
    \ (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpgb6m2fh3.java:22: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = n;\n        for(int i = 1; i < n; i++) {\n       \
    \     if((n % i) == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp4i18bomo.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792365
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        int divisor = 1;\n        while (divisor <=\
    \ n) {\n            if (n % divisor == 0) {\n                maxDivisor = divisor;\n\
    \            }\n            divisor++;\n        }\n        return maxDivisor;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp1sbv5qzb.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = n;\n        for (int i = 1; i < n; i++) {\n          \
    \  if (n % i == 0) {\n                maxDivisor = i;\n            }\n       \
    \ }\n        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpqyv_0_ce.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        for (int i = 1; i <= n; i++) {\n         \
    \   if (n % i == 0) {\n                maxDivisor = i;\n            }\n      \
    \  }\n        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp_d3l6fs8.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        for (int i = 1; i <= n; i++) {\n         \
    \   if (n % i == 0) {\n                maxDivisor = i;\n            }\n      \
    \  }\n        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp_d3l6fs8.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = n;\n        for (int i = 1; i <= n; i++) {\n     \
    \       if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpbax7nzhy.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        int divisor = 1;\n        while (divisor <=\
    \ n) {\n            if (n % divisor == 0) {\n                maxDivisor = divisor;\n\
    \            }\n            divisor++;\n        }\n        return maxDivisor;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp1sbv5qzb.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 1;\n        int maxDividend = 1;\n        for (int i =\
    \ 1; i <= n; i++) {\n            if (n % i == 0) {\n                maxDividend\
    \ = i;\n                maxDivisor = i;\n            }\n        }\n        return\
    \ maxDivisor;\nreturn 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7)) == (1));\n\
    \    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100)) ==\
    \ (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp_i3qns08.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792366
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        int divisor = 1;\n        while (divisor <=\
    \ n) {\n            if (n % divisor == 0) {\n                maxDivisor = divisor;\n\
    \            }\n            divisor++;\n        }\n        return maxDivisor;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp1sbv5qzb.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        for (int i = 1; i <= n; i++) {\n         \
    \   if (n % i == 0) {\n                maxDivisor = i;\n            }\n      \
    \  }\n        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp_d3l6fs8.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = n;\n        int divisor = 1;\n        while (divisor <\
    \ n) {\n            if (n % divisor == 0) {\n                maxDivisor = divisor;\n\
    \            }\n            divisor++;\n        }\n        return maxDivisor;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp9_mn1zv6.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792365
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = Integer.MIN_VALUE;\n        for (int i = 2; i <= n\
    \ / 2; i++) {\n            if (n % i == 0) {\n                largestDivisor =\
    \ i;\n            }\n        }\n        return largestDivisor;\nreturn 0;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpc2sa8owf.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792365
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = Integer.MIN_VALUE;\n        for (int i = 1; i <= n;\
    \ i++) {\n            if (n % i == 0) {\n                largestDivisor = i;\n\
    \            }\n        }\n        return largestDivisor;\nreturn 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpk2cc6vk4.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = 0;\n        for (int i = 1; i <= n; i++) {\n     \
    \       if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpy_0s0rmx.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        int divisor = 1;\n        while (divisor <=\
    \ n) {\n            if (n % divisor == 0) {\n                maxDivisor = divisor;\n\
    \            }\n            divisor++;\n        }\n        return maxDivisor;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp1sbv5qzb.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = -1;\n        int divisor = 1;\n        while (divisor\
    \ <= n) {\n            if (n % divisor == 0) {\n                largestDivisor\
    \ = divisor;\n            }\n            divisor++;\n        }\n        return\
    \ largestDivisor;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7)) ==\
    \ (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp2hqa7nwl.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792366
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = n;\n        for(int i = 1; i < n; i++) {\n       \
    \     if(n % i == 0) {\n                largestDivisor = i;\n            }\n \
    \       }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpbdil4ihf.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = -1;\n        for (int i = 1; i <= n; i++) {\n        \
    \    if (n % i == 0) {\n                if (maxDivisor == -1 || maxDivisor > i)\
    \ {\n                    maxDivisor = i;\n                }\n            }\n \
    \       }\n        return maxDivisor;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpcz4mhyx2.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792366
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = 0;\n        for (int i = 1; i <= n; i++) {\n     \
    \       if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpy_0s0rmx.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        for (int i = 1; i <= n; i++) {\n         \
    \   if (n % i == 0) {\n                if (maxDivisor < i) {\n               \
    \     maxDivisor = i;\n                }\n            }\n        }\n        return\
    \ maxDivisor;\nreturn 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7)) == (1));\n\
    \    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100)) ==\
    \ (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpbmf5u2yt.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792365
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = n;\n        for (int i = 1; i <= n; i++) {\n     \
    \       if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpbax7nzhy.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = n;\n        for (int i = 1; i <= n; i++) {\n     \
    \       if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpbax7nzhy.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = n;\n        int divisor = 1;\n        while (divisor\
    \ <= n) {\n            if (n % divisor == 0) {\n                largestDivisor\
    \ = divisor;\n            }\n            divisor++;\n        }\n        return\
    \ largestDivisor;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7)) ==\
    \ (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpf0spwigw.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792366
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        int divisor = 1;\n        while (divisor <=\
    \ n) {\n            if (n % divisor == 0) {\n                maxDivisor = divisor;\n\
    \            }\n            divisor++;\n        }\n        return maxDivisor;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp1sbv5qzb.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = n;\n        for (int i = 1; i < n; i++) {\n      \
    \      if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp7qcn8lxt.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792365
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = n;\n        for(int i = 1; i < n; i++) {\n           \
    \ if(n%i == 0) {\n                maxDivisor = i;\n            }\n        }\n\
    \        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp9ivna_8w.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792365
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = 0;\n        for (int i = 1; i <= n; i++) {\n     \
    \       if (n % i == 0) {\n                if (largestDivisor < i) {\n       \
    \             largestDivisor = i;\n                }\n            }\n        }\n\
    \        return largestDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpsp7qufjx.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792367
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = n;\n        for (int i = 1; i <= n; i++) {\n     \
    \       if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpbax7nzhy.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = -1;\n        for (int i = 1; i <= n; i++) {\n    \
    \        if (n % i == 0) {\n                largestDivisor = i;\n            \
    \    break;\n            }\n        }\n        return largestDivisor;\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp_m2_9sv8.java:19: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792367
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 1;\n        int currentDivisor = 1;\n        while (currentDivisor\
    \ <= n) {\n            if (n % currentDivisor == 0) {\n                maxDivisor\
    \ = currentDivisor;\n            }\n            currentDivisor++;\n        }\n\
    \        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpr8q4ksqb.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = n;\n        for (int i = 1; i <= n; i++) {\n     \
    \       if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpbax7nzhy.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        int divisor = 1;\n        while (divisor <=\
    \ n) {\n            if (n % divisor == 0) {\n                maxDivisor = divisor;\n\
    \            }\n            divisor++;\n        }\n        return maxDivisor;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp1sbv5qzb.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        for (int i = 1; i <= n; i++) {\n         \
    \   if (n % i == 0) {\n                maxDivisor = i;\n            }\n      \
    \  }\n        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp_d3l6fs8.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        for (int i = 1; i <= n; i++) {\n         \
    \   if (n % i == 0) {\n                maxDivisor = i;\n            }\n      \
    \  }\n        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp_d3l6fs8.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = -1;\n        for (int i = 1; i <= n; i++) {\n    \
    \        if (n % i == 0) {\n                if (largestDivisor == -1) {\n    \
    \                largestDivisor = i;\n                } else {\n             \
    \       if (largestDivisor > i) {\n                        largestDivisor = i;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ largestDivisor;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7)) ==\
    \ (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpyx6qoygu.java:24: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792367
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = n;\n        for(int i = 1; i < n; i++) {\n       \
    \     if(n%i == 0) {\n                largestDivisor = i;\n            }\n   \
    \     }\n        return largestDivisor;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmph8pobnkb.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792365
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = n;\n        for(int i = 1; i < n; i++) {\n       \
    \     if(n % i == 0) {\n                largestDivisor = i;\n            }\n \
    \       }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpbdil4ihf.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        for (int i = 1; i <= n; i++) {\n         \
    \   if (n % i == 0) {\n                maxDivisor = i;\n            }\n      \
    \  }\n        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp_d3l6fs8.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = 0;\n        for (int i = 1; i <= n; i++) {\n     \
    \       if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpy_0s0rmx.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 1;\n        int maxDivisorFactor = 1;\n        for (int\
    \ i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                int divisor\
    \ = i;\n                while (divisor <= n / i) {\n                    if (n\
    \ % divisor == 0) {\n                        divisor++;\n                    \
    \    maxDivisorFactor = divisor;\n                    }\n                    divisor++;\n\
    \                }\n                if (maxDivisor < maxDivisorFactor) {\n   \
    \                 maxDivisor = maxDivisorFactor;\n                }\n        \
    \    }\n        }\n        return maxDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp8urfuc59.java:29: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792367
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = n;\n        for(int i = 1; i < n; i++) {\n       \
    \     if((n % i == 0) && (i != largestDivisor)) {\n                largestDivisor\
    \ = i;\n            }\n        }\n        return largestDivisor;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpfwqv23l0.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792367
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = n;\n        for (int i = 1; i <= n; i++) {\n     \
    \       if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpbax7nzhy.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        int divisor = 1;\n        while (divisor <=\
    \ n) {\n            if (n % divisor == 0) {\n                maxDivisor = divisor;\n\
    \            }\n            divisor++;\n        }\n        return maxDivisor;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp1sbv5qzb.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = 0;\n        int divisor = 1;\n        while (divisor\
    \ <= n) {\n            if (n % divisor == 0) {\n                largestDivisor\
    \ = divisor;\n            }\n            divisor++;\n        }\n        return\
    \ largestDivisor;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7)) ==\
    \ (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp8uk1qrpj.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792367
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        int divisor = 1;\n        while (divisor <=\
    \ n) {\n            if (n % divisor == 0) {\n                maxDivisor = divisor;\n\
    \            }\n            divisor++;\n        }\n        return maxDivisor;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp1sbv5qzb.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 1;\n        int currentDivisor = 1;\n        while (currentDivisor\
    \ <= n) {\n            if (n % currentDivisor == 0) {\n                maxDivisor\
    \ = currentDivisor;\n            }\n            currentDivisor++;\n        }\n\
    \        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpr8q4ksqb.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 1;\n        int currentDivisor = 1;\n        while (currentDivisor\
    \ <= n) {\n            if (n % currentDivisor == 0) {\n                maxDivisor\
    \ = currentDivisor;\n            }\n            currentDivisor++;\n        }\n\
    \        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpr8q4ksqb.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = 0;\n        for (int i = 1; i <= n; i++) {\n     \
    \       if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpy_0s0rmx.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        for (int i = 1; i <= n; i++) {\n         \
    \   if (n % i == 0) {\n                maxDivisor = i;\n            }\n      \
    \  }\n        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp_d3l6fs8.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = -1;\n        int divisor = 1;\n        while (divisor\
    \ <= n) {\n            if (n % divisor == 0) {\n                maxDivisor = divisor;\n\
    \            }\n            divisor++;\n        }\n        return maxDivisor;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmphlxet29m.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792365
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 1;\n        int maxDivisorIndex = 0;\n        for (int\
    \ i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                maxDivisor\
    \ = i;\n                maxDivisorIndex = i;\n            }\n        }\n     \
    \   return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp53np37h8.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792366
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        for (int i = 1; i <= n; i++) {\n         \
    \   if (n % i == 0) {\n                maxDivisor = i;\n            }\n      \
    \  }\n        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp_d3l6fs8.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 1;\n        int divisor = 2;\n        while (divisor <=\
    \ n) {\n            if (n % divisor == 0) {\n                maxDivisor = divisor;\n\
    \            }\n            divisor++;\n        }\n        return maxDivisor;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpdblbdtzs.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792367
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 1;\n        int currentDivisor = 1;\n        while (currentDivisor\
    \ <= n) {\n            if (n % currentDivisor == 0) {\n                maxDivisor\
    \ = currentDivisor;\n            }\n            currentDivisor++;\n        }\n\
    \        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpr8q4ksqb.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = 0;\n        for (int i = 1; i <= n; i++) {\n     \
    \       if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpy_0s0rmx.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = -1;\n        int divisor = 1;\n        while (divisor\
    \ <= n) {\n            if (n % divisor == 0) {\n                largestDivisor\
    \ = divisor;\n            }\n            divisor++;\n        }\n        return\
    \ largestDivisor;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7)) ==\
    \ (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp2hqa7nwl.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792366
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        int divisor = 1;\n        while (divisor <=\
    \ n) {\n            if (n % divisor == 0) {\n                maxDivisor = divisor;\n\
    \            }\n            divisor++;\n        }\n        return maxDivisor;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp1sbv5qzb.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = n;\n        for (int i = 1; i < n; i++) {\n      \
    \      if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp7qcn8lxt.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792365
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        int divisor = 1;\n        while (divisor <=\
    \ n) {\n            if (n % divisor == 0) {\n                maxDivisor = divisor;\n\
    \            }\n            divisor++;\n        }\n        return maxDivisor;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp1sbv5qzb.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      // Write your code here\n        int maxDivisor = 0;\n        int divisor\
    \ = 1;\n        while (divisor <= n) {\n            if (n % divisor == 0) {\n\
    \                maxDivisor = divisor;\n            }\n            divisor++;\n\
    \        }\n        return maxDivisor;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpzye5lqmg.java:21: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792367
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = -1;\n        int divisor = 1;\n        while (divisor\
    \ < n) {\n            if (n % divisor == 0) {\n                divisor++;\n  \
    \          } else {\n                divisor = 1;\n            }\n           \
    \ if (divisor > largestDivisor) {\n                largestDivisor = divisor;\n\
    \            }\n        }\n        return largestDivisor;\nreturn 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp5p_fa90n.java:24: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792367
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = n;\n        for (int i = 1; i <= n; i++) {\n     \
    \       if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpbax7nzhy.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        for (int i = 1; i <= n; i++) {\n         \
    \   if (n % i == 0) {\n                maxDivisor = i;\n            }\n      \
    \  }\n        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp_d3l6fs8.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = n;\n        for (int i = 1; i < n; i++) {\n      \
    \      if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp7qcn8lxt.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792365
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = -1;\n        int divisor = 1;\n        while (divisor\
    \ <= n) {\n            if (n % divisor == 0) {\n                largestDivisor\
    \ = divisor;\n            }\n            divisor++;\n        }\n        return\
    \ largestDivisor;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7)) ==\
    \ (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp2hqa7nwl.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792366
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = n;\n        for (int i = 1; i <= n; i++) {\n     \
    \       if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpbax7nzhy.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = n;\n        for (int i = 1; i < n; i++) {\n      \
    \      if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp7qcn8lxt.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792365
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 1;\n        int maxDividend = 1;\n        for (int i =\
    \ 1; i <= n; i++) {\n            if (n % i == 0) {\n                maxDivisor\
    \ = i;\n                maxDividend = n;\n            }\n        }\n        return\
    \ maxDivisor;\nreturn 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7)) == (1));\n\
    \    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100)) ==\
    \ (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmputjg1pis.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792367
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = -1;\n        for (int i = 1; i <= n; i++) {\n    \
    \        if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp4putqoh2.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = Integer.MIN_VALUE;\n        for (int i = 2; i <= n;\
    \ i++) {\n            if (n % i == 0) {\n                largestDivisor = i;\n\
    \            }\n        }\n        return largestDivisor;\nreturn 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpr4ab4via.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 1;\n        for (int i = 1; i <= n; i++) {\n         \
    \   if (n % i == 0) {\n                maxDivisor = i;\n            }\n      \
    \  }\n        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpz3n8au8f.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = Integer.MIN_VALUE;\n        for (int i = 1; i <= n; i++)\
    \ {\n            if (n % i == 0) {\n                maxDivisor = Math.max(maxDivisor,\
    \ i);\n            }\n        }\n        return maxDivisor;\nreturn 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpninxxo8u.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = -1;\n        for (int i = 1; i <= n; i++) {\n        \
    \    if (n % i == 0) {\n                int divisor = i;\n                while\
    \ (divisor < n && n % divisor == 0) {\n                    divisor++;\n      \
    \          }\n                if (divisor > maxDivisor) {\n                  \
    \  maxDivisor = divisor;\n                }\n            }\n        }\n      \
    \  return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpyn2rhqec.java:24: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792367
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = Integer.MIN_VALUE;\n        for (int i = 1; i <= n;\
    \ i++) {\n            if (n % i == 0) {\n                largestDivisor = i;\n\
    \            }\n        }\n        return largestDivisor;\nreturn 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpk2cc6vk4.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = 0;\n        for (int i = 1; i <= n; i++) {\n     \
    \       if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpy_0s0rmx.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 1;\n        int currentDivisor = 1;\n        while (currentDivisor\
    \ <= n) {\n            if (n % currentDivisor == 0) {\n                maxDivisor\
    \ = currentDivisor;\n            }\n            currentDivisor++;\n        }\n\
    \        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpr8q4ksqb.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = -1;\n        for (int i = 1; i <= n; i++) {\n    \
    \        if (n % i == 0) {\n                if (largestDivisor == -1) {\n    \
    \                largestDivisor = i;\n                } else {\n             \
    \       if (largestDivisor > i) {\n                        largestDivisor = i;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ largestDivisor;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7)) ==\
    \ (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpyx6qoygu.java:24: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792367
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = n;\n        for (int i = 1; i <= n; i++) {\n         \
    \   if (n % i == 0) {\n                maxDivisor = i;\n            }\n      \
    \  }\n        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp_j_u01eo.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = Integer.MIN_VALUE;\n        for (int i = 2; i <= n;\
    \ i++) {\n            if (n % i == 0) {\n                largestDivisor = i;\n\
    \            }\n        }\n        return largestDivisor;\nreturn 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpr4ab4via.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = Integer.MIN_VALUE;\n        for (int i = 1; i <= n;\
    \ i++) {\n            if (n % i == 0) {\n                if (largestDivisor <\
    \ i) {\n                    largestDivisor = i;\n                }\n         \
    \   }\n        }\n        return largestDivisor;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n\
    \    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10)) == (5));\n\
    \    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49)) ==\
    \ (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpcwtgt_2g.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 1;\n        for (int i = 1; i <= n; i++) {\n         \
    \   if (n % i == 0) {\n                maxDivisor = i;\n            }\n      \
    \  }\n        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpz3n8au8f.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        int divisor = 1;\n        while (divisor <=\
    \ n) {\n            if (n % divisor == 0) {\n                maxDivisor = divisor;\n\
    \            }\n            divisor++;\n        }\n        return maxDivisor;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp1sbv5qzb.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        for (int i = 1; i <= n; i++) {\n         \
    \   if (n % i == 0) {\n                maxDivisor = i;\n            }\n      \
    \  }\n        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp_d3l6fs8.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 1;\n        int currentDivisor = 1;\n        while (currentDivisor\
    \ <= n) {\n            if (n % currentDivisor == 0) {\n                maxDivisor\
    \ = currentDivisor;\n            }\n            currentDivisor++;\n        }\n\
    \        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpr8q4ksqb.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        int divisor = 1;\n        while (divisor <=\
    \ n) {\n            if (n % divisor == 0) {\n                maxDivisor = divisor;\n\
    \            }\n            divisor++;\n        }\n        return maxDivisor;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp1sbv5qzb.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = n;\n        for (int i = 1; i <= n; i++) {\n     \
    \       if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpbax7nzhy.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = Integer.MIN_VALUE;\n        for (int i = 1; i <= n;\
    \ i++) {\n            if (n % i == 0) {\n                largestDivisor = i;\n\
    \            }\n        }\n        return largestDivisor;\nreturn 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpk2cc6vk4.java:18: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = Integer.MIN_VALUE;\n        for (int i = 1; i <= n;\
    \ i++) {\n            if (n % i == 0) {\n                if (largestDivisor <\
    \ i) {\n                    largestDivisor = i;\n                }\n         \
    \   }\n        }\n        return largestDivisor;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n\
    \    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10)) == (5));\n\
    \    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49)) ==\
    \ (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpcwtgt_2g.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 1;\n        int divisor = 2;\n        while (divisor <=\
    \ n) {\n            if (n % divisor == 0) {\n                maxDivisor = divisor;\n\
    \            }\n            divisor++;\n        }\n        return maxDivisor;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpdblbdtzs.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792367
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 0;\n        int divisor = 1;\n        while (divisor <=\
    \ n) {\n            if (n % divisor == 0) {\n                maxDivisor = divisor;\n\
    \            }\n            divisor++;\n        }\n        return maxDivisor;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3))\
    \ == (1));\n    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10))\
    \ == (5));\n    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49))\
    \ == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp1sbv5qzb.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int maxDivisor = 1;\n        int currentDivisor = 1;\n        while (currentDivisor\
    \ <= n) {\n            if (n % currentDivisor == 0) {\n                maxDivisor\
    \ = currentDivisor;\n            }\n            currentDivisor++;\n        }\n\
    \        return maxDivisor;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3)) == (1));\n    assert(largestDivisor((7))\
    \ == (1));\n    assert(largestDivisor((10)) == (5));\n    assert(largestDivisor((100))\
    \ == (50));\n    assert(largestDivisor((49)) == (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpr8q4ksqb.java:20: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    public static int largestDivisor(int n) {\n  \
    \      int largestDivisor = -1;\n        for (int i = 1; i <= n; i++) {\n    \
    \        if (n % i == 0) {\n                if (largestDivisor == -1) {\n    \
    \                largestDivisor = i;\n                } else if (largestDivisor\
    \ > i) {\n                    largestDivisor = i;\n                }\n       \
    \     }\n        }\n        return largestDivisor;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(largestDivisor((3)) == (1));\n\
    \    assert(largestDivisor((7)) == (1));\n    assert(largestDivisor((10)) == (5));\n\
    \    assert(largestDivisor((100)) == (50));\n    assert(largestDivisor((49)) ==\
    \ (7));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpgb6m2fh3.java:22: error: unreachable statement

    return 0;

    ^

    1 error

    '
  stdout: ''
  timestamp: 1659792363

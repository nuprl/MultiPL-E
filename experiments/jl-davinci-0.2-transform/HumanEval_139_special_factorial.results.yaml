language: jl
name: HumanEval_139_special_factorial
results:
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n < 0\n       \
    \ return 0\n    end\n    if n == 0\n        return 1\n    end\n    return n *\
    \ special_factorial(n-1)\nend\nusing Test\n\n@testset begin\n\ncandidate = special_factorial;\n\
    \t@test(candidate(4) == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7)\
    \ == 125411328000)\n\t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_7pwg_6h.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp_7pwg_6h.jl:26\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_7pwg_6h.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_7pwg_6h.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_7pwg_6h.jl:27\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_7pwg_6h.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_7pwg_6h.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_7pwg_6h.jl:28\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_7pwg_6h.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_7pwg_6h.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n < 0\n       \
    \ error(\"n must be positive\")\n    end\n    if n == 0\n        return 1\n  \
    \  end\n    return n * special_factorial(n-1)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = special_factorial;\n\t@test(candidate(4) == 288)\n\t@test(candidate(5)\
    \ == 34560)\n\t@test(candidate(7) == 125411328000)\n\t@test(candidate(1) == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpn221epd3.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpn221epd3.jl:26\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn221epd3.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn221epd3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpn221epd3.jl:27\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn221epd3.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn221epd3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpn221epd3.jl:28\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn221epd3.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn221epd3.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    factorial = 1\n  \
    \  for i in 1:n\n        factorial *= i\n    end\n    return factorial\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpbhmpn5ol.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpbhmpn5ol.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbhmpn5ol.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbhmpn5ol.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpbhmpn5ol.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbhmpn5ol.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbhmpn5ol.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpbhmpn5ol.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbhmpn5ol.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbhmpn5ol.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  timestamp: 1659794160
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    factorial = 1\n  \
    \  for i in 1:n\n        factorial *= i\n    end\n    return factorial\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpbhmpn5ol.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpbhmpn5ol.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbhmpn5ol.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbhmpn5ol.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpbhmpn5ol.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbhmpn5ol.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbhmpn5ol.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpbhmpn5ol.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbhmpn5ol.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbhmpn5ol.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  timestamp: 1659794160
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    factorial = 1\n  \
    \  for i in 1:n\n        factorial *= i\n    end\n    return factorial\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpbhmpn5ol.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpbhmpn5ol.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbhmpn5ol.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbhmpn5ol.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpbhmpn5ol.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbhmpn5ol.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbhmpn5ol.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpbhmpn5ol.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbhmpn5ol.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbhmpn5ol.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  timestamp: 1659794160
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n <= 0\n      \
    \  return 0\n    end\n    factorial = 1\n    for i in 1:n\n        factorial *=\
    \ i\n    end\n    return factorial\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = special_factorial;\n\t@test(candidate(4) == 288)\n\t@test(candidate(5) ==\
    \ 34560)\n\t@test(candidate(7) == 125411328000)\n\t@test(candidate(1) == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxz5ee2lz.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpxz5ee2lz.jl:27\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxz5ee2lz.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxz5ee2lz.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpxz5ee2lz.jl:28\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxz5ee2lz.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxz5ee2lz.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpxz5ee2lz.jl:29\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxz5ee2lz.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxz5ee2lz.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  timestamp: 1659794160
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n <= 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpo2k1wwuy.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpo2k1wwuy.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo2k1wwuy.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo2k1wwuy.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpo2k1wwuy.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo2k1wwuy.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo2k1wwuy.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpo2k1wwuy.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo2k1wwuy.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo2k1wwuy.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  timestamp: 1659794160
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n <= 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpo2k1wwuy.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpo2k1wwuy.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo2k1wwuy.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo2k1wwuy.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpo2k1wwuy.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo2k1wwuy.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo2k1wwuy.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpo2k1wwuy.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo2k1wwuy.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo2k1wwuy.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  timestamp: 1659794160
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    factorial = 1\n  \
    \  for i in 1:n\n        factorial *= i\n    end\n    return factorial\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpbhmpn5ol.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpbhmpn5ol.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbhmpn5ol.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbhmpn5ol.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpbhmpn5ol.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbhmpn5ol.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbhmpn5ol.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpbhmpn5ol.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbhmpn5ol.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbhmpn5ol.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  timestamp: 1659794160
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n <= 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpo2k1wwuy.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpo2k1wwuy.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo2k1wwuy.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo2k1wwuy.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpo2k1wwuy.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo2k1wwuy.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo2k1wwuy.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpo2k1wwuy.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo2k1wwuy.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo2k1wwuy.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  timestamp: 1659794160
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n <= 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpo2k1wwuy.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpo2k1wwuy.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo2k1wwuy.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo2k1wwuy.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpo2k1wwuy.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo2k1wwuy.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo2k1wwuy.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpo2k1wwuy.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo2k1wwuy.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo2k1wwuy.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  timestamp: 1659794160
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 0
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n <= 0\n      \
    \  return 0\n    end\n    result = 1\n    for i in 1:n\n        result *= factorial(i)\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ special_factorial;\n\t@test(candidate(4) == 288)\n\t@test(candidate(5) == 34560)\n\
    \t@test(candidate(7) == 125411328000)\n\t@test(candidate(1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659794159
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n <= 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpo2k1wwuy.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpo2k1wwuy.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo2k1wwuy.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo2k1wwuy.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpo2k1wwuy.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo2k1wwuy.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo2k1wwuy.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpo2k1wwuy.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo2k1wwuy.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo2k1wwuy.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  timestamp: 1659794160
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n <= 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpo2k1wwuy.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpo2k1wwuy.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo2k1wwuy.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo2k1wwuy.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpo2k1wwuy.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo2k1wwuy.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo2k1wwuy.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpo2k1wwuy.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo2k1wwuy.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo2k1wwuy.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  timestamp: 1659794160
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n < 1\n       \
    \ return 0\n    end\n    if n == 1\n        return 1\n    end\n    return n *\
    \ special_factorial(n-1)\nend\nusing Test\n\n@testset begin\n\ncandidate = special_factorial;\n\
    \t@test(candidate(4) == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7)\
    \ == 125411328000)\n\t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpi95mq4tq.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpi95mq4tq.jl:26\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi95mq4tq.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi95mq4tq.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpi95mq4tq.jl:27\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi95mq4tq.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi95mq4tq.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpi95mq4tq.jl:28\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpi95mq4tq.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpi95mq4tq.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  timestamp: 1659794160
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n <= 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpo2k1wwuy.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpo2k1wwuy.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo2k1wwuy.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo2k1wwuy.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpo2k1wwuy.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo2k1wwuy.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo2k1wwuy.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpo2k1wwuy.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo2k1wwuy.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo2k1wwuy.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  timestamp: 1659794160
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    factorial = 1\n  \
    \  for i in 1:n\n        factorial *= i\n    end\n    return factorial\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpbhmpn5ol.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpbhmpn5ol.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbhmpn5ol.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbhmpn5ol.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpbhmpn5ol.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbhmpn5ol.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbhmpn5ol.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpbhmpn5ol.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbhmpn5ol.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbhmpn5ol.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  timestamp: 1659794160
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n <= 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpo2k1wwuy.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpo2k1wwuy.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo2k1wwuy.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo2k1wwuy.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpo2k1wwuy.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo2k1wwuy.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo2k1wwuy.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpo2k1wwuy.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo2k1wwuy.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo2k1wwuy.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  timestamp: 1659794160
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n <= 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpo2k1wwuy.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpo2k1wwuy.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo2k1wwuy.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo2k1wwuy.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpo2k1wwuy.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo2k1wwuy.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo2k1wwuy.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpo2k1wwuy.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo2k1wwuy.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo2k1wwuy.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  timestamp: 1659794160
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 0
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n < 0\n       \
    \ error(\"The input must be a positive integer\")\n    end\n    result = 1\n \
    \   for i in 1:n\n        result *= factorial(i)\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659794159
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n < 0\n       \
    \ return 0\n    end\n    if n == 0\n        return 1\n    end\n    return n *\
    \ special_factorial(n-1)\nend\nusing Test\n\n@testset begin\n\ncandidate = special_factorial;\n\
    \t@test(candidate(4) == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7)\
    \ == 125411328000)\n\t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_7pwg_6h.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp_7pwg_6h.jl:26\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_7pwg_6h.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_7pwg_6h.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_7pwg_6h.jl:27\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_7pwg_6h.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_7pwg_6h.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_7pwg_6h.jl:28\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_7pwg_6h.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_7pwg_6h.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n < 0\n       \
    \ return 0\n    end\n    if n == 0\n        return 1\n    end\n    return n *\
    \ special_factorial(n-1)\nend\nusing Test\n\n@testset begin\n\ncandidate = special_factorial;\n\
    \t@test(candidate(4) == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7)\
    \ == 125411328000)\n\t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_7pwg_6h.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp_7pwg_6h.jl:26\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_7pwg_6h.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_7pwg_6h.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_7pwg_6h.jl:27\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_7pwg_6h.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_7pwg_6h.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_7pwg_6h.jl:28\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_7pwg_6h.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_7pwg_6h.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n < 0\n       \
    \ error(\"n must be positive\")\n    end\n    if n == 0\n        return 1\n  \
    \  end\n    return n * special_factorial(n-1)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = special_factorial;\n\t@test(candidate(4) == 288)\n\t@test(candidate(5)\
    \ == 34560)\n\t@test(candidate(7) == 125411328000)\n\t@test(candidate(1) == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpn221epd3.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpn221epd3.jl:26\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn221epd3.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn221epd3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpn221epd3.jl:27\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn221epd3.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn221epd3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpn221epd3.jl:28\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn221epd3.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn221epd3.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    return factorial(n)\
    \ * factorial(n-1) * factorial(n-2)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = special_factorial;\n\t@test(candidate(4) == 288)\n\t@test(candidate(5) ==\
    \ 34560)\n\t@test(candidate(7) == 125411328000)\n\t@test(candidate(1) == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpl3pe5y7x.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpl3pe5y7x.jl:21\n  Expression: candidate(5)\
    \ == 34560\n   Evaluated: 17280 == 34560\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpl3pe5y7x.jl:21 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpl3pe5y7x.jl:19\ntest set: Test Failed at /tmp/tmpl3pe5y7x.jl:22\n\
    \  Expression: candidate(7) == 125411328000\n   Evaluated: 435456000 == 125411328000\n\
    Stacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl3pe5y7x.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl3pe5y7x.jl:19\ntest set: Error\
    \ During Test at /tmp/tmpl3pe5y7x.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(1) == 1\n  DomainError with -1:\n  `n` must not be negative.\n  Stacktrace:\n\
    \   [1] factorial_lookup\n     @ ./combinatorics.jl:18 [inlined]\n   [2] factorial\n\
    \     @ ./combinatorics.jl:27 [inlined]\n   [3] special_factorial(n::Int64)\n\
    \     @ Main /tmp/tmpl3pe5y7x.jl:13\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpl3pe5y7x.jl:23 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpl3pe5y7x.jl:19\nTest Summary:\
    \ | Pass  Fail  Error  Total\ntest set      |    1     2      1      4\n"
  timestamp: 1659794160
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 0
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n < 0\n       \
    \ return 0\n    end\n    result = 1\n    for i in 1:n\n        result *= factorial(i)\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ special_factorial;\n\t@test(candidate(4) == 288)\n\t@test(candidate(5) == 34560)\n\
    \t@test(candidate(7) == 125411328000)\n\t@test(candidate(1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659794159
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 0
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n <= 0\n      \
    \  return 0\n    end\n    result = 1\n    for i in 1:n\n        result *= factorial(i)\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ special_factorial;\n\t@test(candidate(4) == 288)\n\t@test(candidate(5) == 34560)\n\
    \t@test(candidate(7) == 125411328000)\n\t@test(candidate(1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    4      4

    '
  stdout: ''
  timestamp: 1659794159
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n < 0\n       \
    \ error(\"n must be positive\")\n    end\n    if n == 0\n        return 1\n  \
    \  end\n    return n * special_factorial(n-1)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = special_factorial;\n\t@test(candidate(4) == 288)\n\t@test(candidate(5)\
    \ == 34560)\n\t@test(candidate(7) == 125411328000)\n\t@test(candidate(1) == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpn221epd3.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpn221epd3.jl:26\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn221epd3.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn221epd3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpn221epd3.jl:27\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn221epd3.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn221epd3.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpn221epd3.jl:28\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpn221epd3.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpn221epd3.jl:25\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    factorial = 1\n  \
    \  for i in 1:n\n        factorial *= i\n    end\n    return factorial\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpbhmpn5ol.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpbhmpn5ol.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbhmpn5ol.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbhmpn5ol.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpbhmpn5ol.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbhmpn5ol.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbhmpn5ol.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpbhmpn5ol.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbhmpn5ol.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbhmpn5ol.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  timestamp: 1659794160
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    factorial = 1\n  \
    \  for i in 1:n\n        factorial *= i\n    end\n    return factorial\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpbhmpn5ol.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpbhmpn5ol.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbhmpn5ol.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbhmpn5ol.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpbhmpn5ol.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbhmpn5ol.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbhmpn5ol.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpbhmpn5ol.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbhmpn5ol.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbhmpn5ol.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  timestamp: 1659794160
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n <= 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpo2k1wwuy.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpo2k1wwuy.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo2k1wwuy.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo2k1wwuy.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpo2k1wwuy.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo2k1wwuy.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo2k1wwuy.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpo2k1wwuy.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo2k1wwuy.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo2k1wwuy.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  timestamp: 1659794160
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n <= 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpo2k1wwuy.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpo2k1wwuy.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo2k1wwuy.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo2k1wwuy.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpo2k1wwuy.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo2k1wwuy.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo2k1wwuy.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpo2k1wwuy.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo2k1wwuy.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo2k1wwuy.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  timestamp: 1659794160
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n == 0\n      \
    \  return 1\n    else\n        return n * special_factorial(n-1)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = special_factorial;\n\t@test(candidate(4)\
    \ == 288)\n\t@test(candidate(5) == 34560)\n\t@test(candidate(7) == 125411328000)\n\
    \t@test(candidate(1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxjmsc0fr.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxjmsc0fr.jl:24\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:25\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxjmsc0fr.jl:26\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxjmsc0fr.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxjmsc0fr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
- exit_code: 1
  program: "\"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n   \
    \ >>> special_factorial(4)\n    288\n\n    The function will receive an integer\
    \ as input and should return the special\n    factorial of this integer.\n   \
    \ \"\"\"\nfunction special_factorial(n::Int64)::Int64 \n    if n <= 0\n      \
    \  return 0\n    end\n    factorial = 1\n    for i in 1:n\n        factorial *=\
    \ i\n    end\n    return factorial\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = special_factorial;\n\t@test(candidate(4) == 288)\n\t@test(candidate(5) ==\
    \ 34560)\n\t@test(candidate(7) == 125411328000)\n\t@test(candidate(1) == 1)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxz5ee2lz.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpxz5ee2lz.jl:27\n  Expression: candidate(4)\
    \ == 288\n   Evaluated: 24 == 288\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxz5ee2lz.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxz5ee2lz.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpxz5ee2lz.jl:28\n  Expression: candidate(5) == 34560\n   Evaluated:\
    \ 120 == 34560\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxz5ee2lz.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxz5ee2lz.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpxz5ee2lz.jl:29\n  Expression: candidate(7) == 125411328000\n\
    \   Evaluated: 5040 == 125411328000\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxz5ee2lz.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxz5ee2lz.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  timestamp: 1659794160

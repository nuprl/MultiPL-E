name: HumanEval_161_solve
language: jl
prompt: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case\
  \ from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the\
  \ string contains no letters, reverse the string.\n    The function should return\
  \ the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n  \
  \  >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \"\"\
  \"\nfunction solve(s::String)::String \n"
tests: "using Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\"\
  ) == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"ab\"\
  ) == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\"\
  ) == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
  #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
completions: ["    if s == \"\"\n        return \"\"\n    end\n    if s[1] in 'a':\n\
    \        return uppercase(s[1]) * solve(s[2:end])\n    elseif s[1] in 'A':\n \
    \       return lowercase(s[1]) * solve(s[2:end])\n    else\n        return s[1]\
    \ * solve(s[2:end])\n    end\nend", "    if isempty(s)\n        return s\n   \
    \ end\n    if isletter(s[1])\n        if islower(s[1])\n            return uppercase(s[1])\
    \ * solve(s[2:end])\n        else\n            return lowercase(s[1]) * solve(s[2:end])\n\
    \        end\n    else\n        return s[1] * solve(s[2:end])\n    end\nend",
  "    if s == \"\"\n        return s\n    end\n    s = reverse(s)\n    for i in 1:length(s)\n\
    \        if isalpha(s[i])\n            if islower(s[i])\n                s[i]\
    \ = uppercase(s[i])\n            else\n                s[i] = lowercase(s[i])\n\
    \            end\n        end\n    end\n    return s\nend", "    s = reverse(s)\n\
    \    for i in 1:length(s)\n        if isalpha(s[i])\n            s[i] = uppercase(s[i])\n\
    \        else\n            s[i] = lowercase(s[i])\n        end\n    end\n    return\
    \ s\nend", "    if length(s) == 0\n        return \"\"\n    end\n    if length(s)\
    \ == 1\n        if isalpha(s[1])\n            return uppercase(s)\n        else\n\
    \            return s\n        end\n    end\n    res = \"\"\n    for i in 1:length(s)\n\
    \        if isalpha(s[i])\n            if islower(s[i])\n                res *=\
    \ uppercase(s[i])\n            else\n                res *= lowercase(s[i])\n\
    \            end\n        else\n            res *= s[i]\n        end\n    end\n\
    \    return res\nend", "    if length(s) == 0\n        return s\n    end\n   \
    \ s = reverse(s)\n    for i in 1:length(s)\n        if isalpha(s[i])\n       \
    \     if islower(s[i])\n                s[i] = uppercase(s[i])\n            else\n\
    \                s[i] = lowercase(s[i])\n            end\n        end\n    end\n\
    \    return s\nend", "    if s == \"\"\n        return \"\"\n    end\n    if isletter(s[1])\n\
    \        if islower(s[1])\n            return uppercase(s[1]) * solve(s[2:end])\n\
    \        else\n            return lowercase(s[1]) * solve(s[2:end])\n        end\n\
    \    else\n        return s[1] * solve(s[2:end])\n    end\nend", "    if length(s)\
    \ == 0\n        return s\n    end\n    if length(s) == 1\n        return s\n \
    \   end\n    if length(s) == 2\n        if s[1] in 'a-z'\n            return uppercase(s[1])\
    \ * s[2]\n        elseif s[1] in 'A-Z'\n            return lowercase(s[1]) * s[2]\n\
    \        else\n            return s\n        end\n    end\n    if s[1] in 'a-z'\n\
    \        return uppercase(s[1]) * solve(s[2:end])\n    elseif s[1] in 'A-Z'\n\
    \        return lowercase(s[1]) * solve(s[2:end])\n    else\n        return s[1]\
    \ * solve(s[2:end])\n    end\nend", "    if s == \"\"\n        return \"\"\n \
    \   end\n    if s[1] in \"abcdefghijklmnopqrstuvwxyz\"\n        return uppercase(s[1])\
    \ * solve(s[2:end])\n    elseif s[1] in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n     \
    \   return lowercase(s[1]) * solve(s[2:end])\n    else\n        return s[1] *\
    \ solve(s[2:end])\n    end\nend", "    if s == \"\"\n        return \"\"\n   \
    \ end\n    if s[1] in \"abcdefghijklmnopqrstuvwxyz\"\n        return uppercase(s[1])\
    \ * solve(s[2:end])\n    elseif s[1] in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n     \
    \   return lowercase(s[1]) * solve(s[2:end])\n    else\n        return s[1] *\
    \ solve(s[2:end])\n    end\nend", "    if s == \"\"\n        return s\n    end\n\
    \    if s == \" \"\n        return s\n    end\n    if s == \"  \"\n        return\
    \ s\n    end\n    if s == \"   \"\n        return s\n    end\n    if s == \" \
    \   \"\n        return s\n    end\n    if s == \"     \"\n        return s\n \
    \   end\n    if s == \"      \"\n        return s\n    end\n    if s == \"   \
    \    \"\n        return s\n    end\n    if s == \"        \"\n        return s\n\
    \    end\n    if s == \"         \"\n        return s\n    end\n    if s == \"\
    \          \"\n        return s\n    end\n    if s == \"           \"\n      \
    \  return s\n    end\n    if s == \"            \"\n        return s\n    end\n\
    \    if s == \"             \"\n        return s\n    end\n    if s == \"    \
    \          \"\n        return s\n    end\n    if s == \"               \"\n  \
    \      return s\n    end\n    if s == \"                \"\n        return s\n\
    \    end\n    if s == \"                 \"\n        return s\n    end\n    if\
    \ s == \"                  \"\n        return s\n    end\n    if s == \"     \
    \              \"\n        return s\n    end\n    if s == \"                 \
    \   \"\n        return s\n    end\n    if s == \"                     \"\n   \
    \     return s\n    end\n    if s == \"                      \"\n        return\
    \ s\n    end\n    if s == \"                       \"\n        return s\n    end\n\
    \    if s == \"                        \"\n        return s\n    end\n    if s\
    \ == \"                         \"\n        return s\n    end\n    if s == \"\
    \                          \"\n        return s\n    end\n    if s == \"     \
    \                      \"\n        return s\n    end\n    if s == \"         \
    \                   \"\n        return s\n    end\n    if s == \"            \
    \                 \"\n        return s\n    end\n    if s == \"              \
    \                \"\n        return s\n    end\n    if s == \"               \
    \                \"\n        return s\n    end\n    if s == \"               \
    \                 \"\n        return s\n    end\n    if s == \"              \
    \                   \"\n        return s", "    if isletter(s)\n        return\
    \ reverse(s)\n    else\n        return s\n    end\nend", "    s = reverse(s)\n\
    \    for i in 1:length(s)\n        if isalpha(s[i])\n            if islower(s[i])\n\
    \                s[i] = uppercase(s[i])\n            else\n                s[i]\
    \ = lowercase(s[i])\n            end\n        end\n    end\n    return s\nend",
  "    if isletter(s)\n        return reverse(s)\n    else\n        return s\n   \
    \ end\nend", "    if isempty(s)\n        return s\n    end\n    if isletter(s[1])\n\
    \        return uppercase(s[1]) * solve(s[2:end])\n    else\n        return s[1]\
    \ * solve(s[2:end])\n    end\nend", "    if isletter(s)\n        s = reverse(s)\n\
    \    else\n        s = reverse(s)\n    end\n    return s\nend", "    if length(s)\
    \ == 0\n        return s\n    end\n    if isletter(s[1])\n        if islower(s[1])\n\
    \            return uppercase(s[1]) * solve(s[2:end])\n        else\n        \
    \    return lowercase(s[1]) * solve(s[2:end])\n        end\n    else\n       \
    \ return s[1] * solve(s[2:end])\n    end\nend", "    if s == \"\"\n        return\
    \ \"\"\n    end\n    if s[1] in \"abcdefghijklmnopqrstuvwxyz\"\n        return\
    \ uppercase(s[1]) * solve(s[2:end])\n    elseif s[1] in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n        return lowercase(s[1]) * solve(s[2:end])\n    else\n        return s[1]\
    \ * solve(s[2:end])\n    end\nend", "    if isempty(s)\n        return s\n   \
    \ end\n    if isletter(s[1])\n        return uppercase(s[1]) * solve(s[2:end])\n\
    \    else\n        return s[1] * solve(s[2:end])\n    end\nend", "    if isempty(s)\n\
    \        return s\n    end\n    if isletter(s[1])\n        if islower(s[1])\n\
    \            return uppercase(s[1]) * solve(s[2:end])\n        else\n        \
    \    return lowercase(s[1]) * solve(s[2:end])\n        end\n    else\n       \
    \ return s[1] * solve(s[2:end])\n    end\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

name: HumanEval_161_solve
language: jl
prompt: "\"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case\
  \ from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the\
  \ string contains no letters, reverse the string.\n    The function should return\
  \ the resulted string.\n    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n  \
  \  >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \"\"\
  \"\nfunction solve(s::String)::String \n"
tests: "using Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(\"AsDf\"\
  ) == \"aSdF\")\n\t@test(candidate(\"1234\") == \"4321\")\n\t@test(candidate(\"ab\"\
  ) == \"AB\")\n\t@test(candidate(\"#a@C\") == \"#A@c\")\n\t@test(candidate(\"#AsdfW^45\"\
  ) == \"#aSDFw^45\")\n\t@test(candidate(\"#6@2\") == \"2@6#\")\n\t@test(candidate(\"\
  #$a^D\") == \"#$A^d\")\n\t@test(candidate(\"#ccc\") == \"#CCC\")\nend\n"
completions: ["    if s == \"\"\n        return \"\"\n    end\n    if s[1] in 'a':\n\
    \        return uppercase(s[1]) * solve(s[2:end])\n    elseif s[1] in 'A':\n \
    \       return lowercase(s[1]) * solve(s[2:end])\n    else\n        return s[1]\
    \ * solve(s[2:end])\n    end\nend", "    if isempty(s)\n        return s\n   \
    \ end\n    if isletter(s[1])\n        if islower(s[1])\n            return uppercase(s[1])\
    \ * solve(s[2:end])\n        else\n            return lowercase(s[1]) * solve(s[2:end])\n\
    \        end\n    else\n        return s[1] * solve(s[2:end])\n    end\nend",
  "    if s == \"\"\n        return s\n    end\n    s = reverse(s)\n    for i in 1:length(s)\n\
    \        if isalpha(s[i])\n            if islower(s[i])\n                s[i]\
    \ = uppercase(s[i])\n            else\n                s[i] = lowercase(s[i])\n\
    \            end\n        end\n    end\n    return s\nend", "    s = reverse(s)\n\
    \    for i in 1:length(s)\n        if isalpha(s[i])\n            s[i] = uppercase(s[i])\n\
    \        else\n            s[i] = lowercase(s[i])\n        end\n    end\n    return\
    \ s\nend", "    if length(s) == 0\n        return \"\"\n    end\n    if length(s)\
    \ == 1\n        if isalpha(s[1])\n            return uppercase(s)\n        else\n\
    \            return s\n        end\n    end\n    res = \"\"\n    for i in 1:length(s)\n\
    \        if isalpha(s[i])\n            if islower(s[i])\n                res *=\
    \ uppercase(s[i])\n            else\n                res *= lowercase(s[i])\n\
    \            end\n        else\n            res *= s[i]\n        end\n    end\n\
    \    return res\nend", "    if length(s) == 0\n        return s\n    end\n   \
    \ s = reverse(s)\n    for i in 1:length(s)\n        if isalpha(s[i])\n       \
    \     if islower(s[i])\n                s[i] = uppercase(s[i])\n            else\n\
    \                s[i] = lowercase(s[i])\n            end\n        end\n    end\n\
    \    return s\nend", "    if s == \"\"\n        return \"\"\n    end\n    if isletter(s[1])\n\
    \        if islower(s[1])\n            return uppercase(s[1]) * solve(s[2:end])\n\
    \        else\n            return lowercase(s[1]) * solve(s[2:end])\n        end\n\
    \    else\n        return s[1] * solve(s[2:end])\n    end\nend", "    if length(s)\
    \ == 0\n        return s\n    end\n    if length(s) == 1\n        return s\n \
    \   end\n    if length(s) == 2\n        if s[1] in 'a-z'\n            return uppercase(s[1])\
    \ * s[2]\n        elseif s[1] in 'A-Z'\n            return lowercase(s[1]) * s[2]\n\
    \        else\n            return s\n        end\n    end\n    if s[1] in 'a-z'\n\
    \        return uppercase(s[1]) * solve(s[2:end])\n    elseif s[1] in 'A-Z'\n\
    \        return lowercase(s[1]) * solve(s[2:end])\n    else\n        return s[1]\
    \ * solve(s[2:end])\n    end\nend", "    if s == \"\"\n        return \"\"\n \
    \   end\n    if s[1] in \"abcdefghijklmnopqrstuvwxyz\"\n        return uppercase(s[1])\
    \ * solve(s[2:end])\n    elseif s[1] in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n     \
    \   return lowercase(s[1]) * solve(s[2:end])\n    else\n        return s[1] *\
    \ solve(s[2:end])\n    end\nend", "    if s == \"\"\n        return \"\"\n   \
    \ end\n    if s[1] in \"abcdefghijklmnopqrstuvwxyz\"\n        return uppercase(s[1])\
    \ * solve(s[2:end])\n    elseif s[1] in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n     \
    \   return lowercase(s[1]) * solve(s[2:end])\n    else\n        return s[1] *\
    \ solve(s[2:end])\n    end\nend", "    if s == \"\"\n        return s\n    end\n\
    \    if s == \" \"\n        return s\n    end\n    if s == \"  \"\n        return\
    \ s\n    end\n    if s == \"   \"\n        return s\n    end\n    if s == \" \
    \   \"\n        return s\n    end\n    if s == \"     \"\n        return s\n \
    \   end\n    if s == \"      \"\n        return s\n    end\n    if s == \"   \
    \    \"\n        return s\n    end\n    if s == \"        \"\n        return s\n\
    \    end\n    if s == \"         \"\n        return s\n    end\n    if s == \"\
    \          \"\n        return s\n    end\n    if s == \"           \"\n      \
    \  return s\n    end\n    if s == \"            \"\n        return s\n    end\n\
    \    if s == \"             \"\n        return s\n    end\n    if s == \"    \
    \          \"\n        return s\n    end\n    if s == \"               \"\n  \
    \      return s\n    end\n    if s == \"                \"\n        return s\n\
    \    end\n    if s == \"                 \"\n        return s\n    end\n    if\
    \ s == \"                  \"\n        return s\n    end\n    if s == \"     \
    \              \"\n        return s\n    end\n    if s == \"                 \
    \   \"\n        return s\n    end\n    if s == \"                     \"\n   \
    \     return s\n    end\n    if s == \"                      \"\n        return\
    \ s\n    end\n    if s == \"                       \"\n        return s\n    end\n\
    \    if s == \"                        \"\n        return s\n    end\n    if s\
    \ == \"                         \"\n        return s\n    end\n    if s == \"\
    \                          \"\n        return s\n    end\n    if s == \"     \
    \                      \"\n        return s\n    end\n    if s == \"         \
    \                   \"\n        return s\n    end\n    if s == \"            \
    \                 \"\n        return s\n    end\n    if s == \"              \
    \                \"\n        return s\n    end\n    if s == \"               \
    \                \"\n        return s\n    end\n    if s == \"               \
    \                 \"\n        return s\n    end\n    if s == \"              \
    \                   \"\n        return s", "    if isletter(s)\n        return\
    \ reverse(s)\n    else\n        return s\n    end\nend", "    s = reverse(s)\n\
    \    for i in 1:length(s)\n        if isalpha(s[i])\n            if islower(s[i])\n\
    \                s[i] = uppercase(s[i])\n            else\n                s[i]\
    \ = lowercase(s[i])\n            end\n        end\n    end\n    return s\nend",
  "    if isletter(s)\n        return reverse(s)\n    else\n        return s\n   \
    \ end\nend", "    if isempty(s)\n        return s\n    end\n    if isletter(s[1])\n\
    \        return uppercase(s[1]) * solve(s[2:end])\n    else\n        return s[1]\
    \ * solve(s[2:end])\n    end\nend", "    if isletter(s)\n        s = reverse(s)\n\
    \    else\n        s = reverse(s)\n    end\n    return s\nend", "    if length(s)\
    \ == 0\n        return s\n    end\n    if isletter(s[1])\n        if islower(s[1])\n\
    \            return uppercase(s[1]) * solve(s[2:end])\n        else\n        \
    \    return lowercase(s[1]) * solve(s[2:end])\n        end\n    else\n       \
    \ return s[1] * solve(s[2:end])\n    end\nend", "    if s == \"\"\n        return\
    \ \"\"\n    end\n    if s[1] in \"abcdefghijklmnopqrstuvwxyz\"\n        return\
    \ uppercase(s[1]) * solve(s[2:end])\n    elseif s[1] in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n        return lowercase(s[1]) * solve(s[2:end])\n    else\n        return s[1]\
    \ * solve(s[2:end])\n    end\nend", "    if isempty(s)\n        return s\n   \
    \ end\n    if isletter(s[1])\n        return uppercase(s[1]) * solve(s[2:end])\n\
    \    else\n        return s[1] * solve(s[2:end])\n    end\nend", "    if isempty(s)\n\
    \        return s\n    end\n    if isletter(s[1])\n        if islower(s[1])\n\
    \            return uppercase(s[1]) * solve(s[2:end])\n        else\n        \
    \    return lowercase(s[1]) * solve(s[2:end])\n        end\n    else\n       \
    \ return s[1] * solve(s[2:end])\n    end\nend", "    if length(s) == 0\n     \
    \   return s\n    end\n    if isletter(s[1])\n        if islower(s[1])\n     \
    \       return uppercase(s[1]) * solve(s[2:end])\n        else\n            return\
    \ lowercase(s[1]) * solve(s[2:end])\n        end\n    else\n        return s[1]\
    \ * solve(s[2:end])\n    end\nend", "    s = reverse(s)\n    for i in 1:length(s)\n\
    \        if isalpha(s[i])\n            if islower(s[i])\n                s[i]\
    \ = uppercase(s[i])\n            else\n                s[i] = lowercase(s[i])\n\
    \            end\n        end\n    end\n    return s\nend", "    if !contains(s,\
    \ isalpha)\n        return reverse(s)\n    end\n    return [swapcase(c) for c\
    \ in s]\nend", "    if isempty(s)\n        return s\n    end\n    s = reverse(s)\n\
    \    for i in 1:length(s)\n        if s[i] in 'a'::z\n            s[i] = uppercase(s[i])\n\
    \        elseif s[i] in 'A'::Z\n            s[i] = lowercase(s[i])\n        end\n\
    \    end\n    return s\nend", "    if isempty(s)\n        return s\n    end\n\
    \    if isletter(s[1])\n        return uppercase(s[1]) * solve(s[2:end])\n   \
    \ else\n        return s[1] * solve(s[2:end])\n    end\nend", "    s = reverse(s)\n\
    \    for i in 1:length(s)\n        if isalpha(s[i])\n            if islower(s[i])\n\
    \                s[i] = uppercase(s[i])\n            else\n                s[i]\
    \ = lowercase(s[i])\n            end\n        end\n    end\n    return s\nend",
  "    if s == \"\"\n        return s\n    end\n    if s[1] in 'abcdefghijklmnopqrstuvwxyz'\n\
    \        return uppercase(s[1]) * solve(s[2:end])\n    elseif s[1] in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return lowercase(s[1]) * solve(s[2:end])\n    else\n        return s[1]\
    \ * solve(s[2:end])\n    end\nend", "    s = reverse(s)\n    for i in 1:length(s)\n\
    \        if isalpha(s[i])\n            s[i] = uppercase(s[i])\n        else\n\
    \            s[i] = lowercase(s[i])\n        end\n    end\n    return s\nend",
  "    if isempty(s)\n        return \"\"\n    end\n    if isletter(s[1])\n      \
    \  return uppercase(s[1]) * solve(s[2:end])\n    else\n        return s[1] * solve(s[2:end])\n\
    \    end\nend", "    if isletter(s)\n        return reverse(s)\n    else\n   \
    \     return s\n    end\nend", "    if isempty(s)\n        return s\n    end\n\
    \    if isletter(s[1])\n        return uppercase(s[1]) * solve(s[2:end])\n   \
    \ else\n        return s[1] * solve(s[2:end])\n    end\nend", "    if isempty(s)\n\
    \        return s\n    end\n    s = reverse(s)\n    for i in 1:length(s)\n   \
    \     if isletter(s[i])\n            if islower(s[i])\n                s[i] =\
    \ uppercase(s[i])\n            else\n                s[i] = lowercase(s[i])\n\
    \            end\n        end\n    end\n    return s\nend", "    if contains(s,\
    \ r\"[a-zA-Z]\")\n        return reverse(s)\n    else\n        return s\n    end\n\
    end", "    if isempty(s)\n        return s\n    end\n    if s[1] in 'a':\n   \
    \     return uppercase(s[1]) * solve(s[2:end])\n    elseif s[1] in 'A':\n    \
    \    return lowercase(s[1]) * solve(s[2:end])\n    else\n        return s[1] *\
    \ solve(s[2:end])\n    end\nend", "    if isempty(s)\n        return s\n    end\n\
    \    if isletter(s[1])\n        return uppercase(s[1]) * solve(s[2:end])\n   \
    \ else\n        return s[1] * solve(s[2:end])\n    end\nend", "    if s == \"\"\
    \n        return s\n    end\n    result = \"\"\n    for c in s\n        if isalpha(c)\n\
    \            result *= uppercase(c) ? lowercase(c) : uppercase(c)\n        else\n\
    \            result *= c\n        end\n    end\n    return result\nend", "   \
    \ if s == \"\"\n        return s\n    end\n    s = reverse(s)\n    for i in 1:length(s)\n\
    \        if isalpha(s[i])\n            s[i] = swapcase(s[i])\n        end\n  \
    \  end\n    return s\nend", "    if length(s) == 0\n        return s\n    end\n\
    \    s = reverse(s)\n    for i in 1:length(s)\n        if isalpha(s[i])\n    \
    \        if islower(s[i])\n                s[i] = uppercase(s[i])\n          \
    \  else\n                s[i] = lowercase(s[i])\n            end\n        end\n\
    \    end\n    return s\nend", "    if isempty(s)\n        return s\n    end\n\
    \    s = reverse(s)\n    for i in 1:length(s)\n        if isalpha(s[i])\n    \
    \        s[i] = uppercase(s[i])\n        else\n            s[i] = lowercase(s[i])\n\
    \        end\n    end\n    return s\nend", "    if length(s) == 0\n        return\
    \ \"\"\n    end\n    if length(s) == 1\n        if isalpha(s[1])\n           \
    \ return uppercase(s)\n        else\n            return s\n        end\n    end\n\
    \    result = \"\"\n    for i in 1:length(s)\n        if isalpha(s[i])\n     \
    \       if islower(s[i])\n                result *= uppercase(s[i])\n        \
    \    else\n                result *= lowercase(s[i])\n            end\n      \
    \  else\n            result *= s[i]\n        end\n    end\n    return result\n\
    end", "    if isempty(s)\n        return s\n    end\n    s = reverse(s)\n    for\
    \ i in 1:length(s)\n        if isletter(s[i])\n            if islower(s[i])\n\
    \                s[i] = uppercase(s[i])\n            else\n                s[i]\
    \ = lowercase(s[i])\n            end\n        end\n    end\n    return s\nend",
  "    if isempty(s)\n        return \"\"\n    end\n    if isletter(s[1])\n      \
    \  return uppercase(s[1]) * solve(s[2:end])\n    else\n        return s[1] * solve(s[2:end])\n\
    \    end\nend", "    if isempty(s)\n        return s\n    end\n    if isletter(s[1])\n\
    \        return uppercase(s[1]) * solve(s[2:end])\n    else\n        return s[1]\
    \ * solve(s[2:end])\n    end\nend", "    s = reverse(s)\n    for i in 1:length(s)\n\
    \        if s[i] in 'abcdefghijklmnopqrstuvwxyz'\n            s[i] = uppercase(s[i])\n\
    \        elseif s[i] in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            s[i] = lowercase(s[i])\n\
    \        end\n    end\n    return s\nend", "    if s == \"\"\n        return \"\
    \"\n    end\n    if s[1] in 'a':\n        return uppercase(s[1]) * solve(s[2:end])\n\
    \    elseif s[1] in 'A':\n        return lowercase(s[1]) * solve(s[2:end])\n \
    \   else\n        return s[1] * solve(s[2:end])\n    end\nend", "    if s == \"\
    \"\n        return \"\"\n    end\n    if s[1] in 'a':\n        return uppercase(s[1])\
    \ * solve(s[2:end])\n    elseif s[1] in 'A':\n        return lowercase(s[1]) *\
    \ solve(s[2:end])\n    else\n        return s[1] * solve(s[2:end])\n    end\n\
    end", "    if length(s) == 0\n        return s\n    end\n    if length(s) == 1\n\
    \        if isletter(s[1])\n            return uppercase(s)\n        else\n  \
    \          return s\n        end\n    end\n    if isletter(s[1])\n        if islowercase(s[1])\n\
    \            return uppercase(s[1]) * solve(s[2:end])\n        else\n        \
    \    return lowercase(s[1]) * solve(s[2:end])\n        end\n    else\n       \
    \ return s[1] * solve(s[2:end])\n    end\nend", "    if isempty(s)\n        return\
    \ s\n    end\n    s = reverse(s)\n    for i in 1:length(s)\n        if isalpha(s[i])\n\
    \            s[i] = uppercase(s[i])\n        else\n            s[i] = lowercase(s[i])\n\
    \        end\n    end\n    return s\nend", "    if s == \"\"\n        return \"\
    \"\n    end\n    if s[1] in 'a':\n        return uppercase(s[1]) * solve(s[2:end])\n\
    \    elseif s[1] in 'A':\n        return lowercase(s[1]) * solve(s[2:end])\n \
    \   else\n        return s[1] * solve(s[2:end])\n    end\nend", "    if s == reverse(s)\n\
    \        return s\n    end\n    if !occursin('a'::ASCIIString, s) && !occursin('A'::ASCIIString,\
    \ s)\n        return reverse(s)\n    end\n    s = reverse(s)\n    for i in 1:length(s)\n\
    \        if s[i] in 'a'::ASCIIString\n            s[i] = uppercase(s[i])\n   \
    \     elseif s[i] in 'A'::ASCIIString\n            s[i] = lowercase(s[i])\n  \
    \      end\n    end\n    return s\nend", "    if length(s) == 0\n        return\
    \ s\n    end\n    s = reverse(s)\n    for i in 1:length(s)\n        if isalpha(s[i])\n\
    \            if islower(s[i])\n                s[i] = uppercase(s[i])\n      \
    \      else\n                s[i] = lowercase(s[i])\n            end\n       \
    \ end\n    end\n    return s\nend", "    if length(s) == 0\n        return s\n\
    \    end\n    if length(s) == 1\n        if isalpha(s[1])\n            return\
    \ uppercase(s)\n        else\n            return s\n        end\n    end\n   \
    \ if isalpha(s[1])\n        if islower(s[1])\n            return uppercase(s[1])\
    \ * solve(s[2:end])\n        else\n            return lowercase(s[1]) * solve(s[2:end])\n\
    \        end\n    else\n        return s[1] * solve(s[2:end])\n    end\nend",
  "    if s == \"\"\n        return \"\"\n    end\n    if s[1] in 'a':\n        return\
    \ uppercase(s[1]) * solve(s[2:end])\n    elseif s[1] in 'A':\n        return lowercase(s[1])\
    \ * solve(s[2:end])\n    else\n        return s[1] * solve(s[2:end])\n    end\n\
    end", "    if isempty(s)\n        return \"\"\n    end\n    if isletter(s[1])\n\
    \        return uppercase(s[1]) * solve(s[2:end])\n    else\n        return s[1]\
    \ * solve(s[2:end])\n    end\nend", "    s = reverse(s)\n    for i in 1:length(s)\n\
    \        if isalpha(s[i])\n            if islower(s[i])\n                s[i]\
    \ = uppercase(s[i])\n            elseif isupper(s[i])\n                s[i] =\
    \ lowercase(s[i])\n            end\n        end\n    end\n    return s\nend",
  "    if isempty(s)\n        return \"\"\n    end\n    if isletter(s[1])\n      \
    \  if islower(s[1])\n            return uppercase(s[1]) * solve(s[2:end])\n  \
    \      else\n            return lowercase(s[1]) * solve(s[2:end])\n        end\n\
    \    else\n        return s[1] * solve(s[2:end])\n    end\nend", "    if isempty(s)\n\
    \        return s\n    end\n    if isletter(s[1])\n        return uppercase(s[1])\
    \ * solve(s[2:end])\n    else\n        return s[1] * solve(s[2:end])\n    end\n\
    end", "    if s == \"\"\n        return \"\"\n    end\n    if s[1] in 'a':z\n\
    \        return uppercase(s[1]) * solve(s[2:end])\n    elseif s[1] in 'A':Z\n\
    \        return lowercase(s[1]) * solve(s[2:end])\n    else\n        return s[1]\
    \ * solve(s[2:end])\n    end\nend", "    if isempty(s)\n        return \"\"\n\
    \    end\n    if isletter(s[1])\n        if islower(s[1])\n            return\
    \ uppercase(s[1]) * solve(s[2:end])\n        else\n            return lowercase(s[1])\
    \ * solve(s[2:end])\n        end\n    else\n        return s[1] * solve(s[2:end])\n\
    \    end\nend", "    if isempty(s)\n        return s\n    end\n    if isletter(s[1])\n\
    \        return uppercase(s[1]) * solve(s[2:end])\n    else\n        return s[1]\
    \ * solve(s[2:end])\n    end\nend", "    if s == \"\"\n        return s\n    end\n\
    \    s = reverse(s)\n    for i in 1:length(s)\n        if s[i] in 'a'::z\n   \
    \         s[i] = uppercase(s[i])\n        elseif s[i] in 'A'::Z\n            s[i]\
    \ = lowercase(s[i])\n        end\n    end\n    return s\nend", "    if s == \"\
    \"\n        return s\n    end\n    s = reverse(s)\n    for i in 1:length(s)\n\
    \        if s[i] in 'a':z\n            s[i] = uppercase(s[i])\n        elseif\
    \ s[i] in 'A':Z\n            s[i] = lowercase(s[i])\n        end\n    end\n  \
    \  return s\nend", "    if isempty(s)\n        return \"\"\n    end\n    if isletter(s[1])\n\
    \        return uppercase(s[1]) * solve(s[2:end])\n    else\n        return s[1]\
    \ * solve(s[2:end])\n    end\nend", "    s = reverse(s)\n    for i in 1:length(s)\n\
    \        if isalpha(s[i])\n            s[i] = uppercase(s[i])\n        else\n\
    \            s[i] = lowercase(s[i])\n        end\n    end\n    return s\nend",
  "    if isempty(s)\n        return \"\"\n    end\n    if isletter(s[1])\n      \
    \  if islower(s[1])\n            return uppercase(s[1]) * solve(s[2:end])\n  \
    \      else\n            return lowercase(s[1]) * solve(s[2:end])\n        end\n\
    \    else\n        return s[1] * solve(s[2:end])\n    end\nend", "    if isletter(s)\n\
    \        s = reverse(s)\n    else\n        s = reverse(s)\n    end\n    return\
    \ s\nend", "    s = reverse(s)\n    for i in 1:length(s)\n        if isalpha(s[i])\n\
    \            if islower(s[i])\n                s[i] = uppercase(s[i])\n      \
    \      else\n                s[i] = lowercase(s[i])\n            end\n       \
    \ end\n    end\n    return s\nend", "    if length(s) == 0\n        return s\n\
    \    end\n    s = reverse(s)\n    for i in 1:length(s)\n        if s[i] in \"\
    abcdefghijklmnopqrstuvwxyz\"\n            s[i] = uppercase(s[i])\n        elseif\
    \ s[i] in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n            s[i] = lowercase(s[i])\n\
    \        end\n    end\n    return s\nend", "    if isempty(s)\n        return\
    \ s\n    end\n    s = reverse(s)\n    for i in 1:length(s)\n        if isalpha(s[i])\n\
    \            s[i] = uppercase(s[i])\n        else\n            s[i] = lowercase(s[i])\n\
    \        end\n    end\n    return s\nend", "    if isempty(s)\n        return\
    \ s\n    end\n    if isletter(s[1])\n        return uppercase(s[1]) * solve(s[2:end])\n\
    \    else\n        return s[1] * solve(s[2:end])\n    end\nend", "    if isempty(s)\n\
    \        return s\n    end\n    if isletter(s[1])\n        return uppercase(s[1])\
    \ * solve(s[2:end])\n    else\n        return s[1] * solve(s[2:end])\n    end\n\
    end", "    if s == \"\"\n        return \"\"\n    end\n    if s[1] in 'a'::z\n\
    \        return uppercase(s[1]) * solve(s[2:end])\n    elseif s[1] in 'A'::Z\n\
    \        return lowercase(s[1]) * solve(s[2:end])\n    else\n        return s[1]\
    \ * solve(s[2:end])\n    end\nend", "    if s == \"\"\n        return \"\"\n \
    \   end\n    s = reverse(s)\n    for i in 1:length(s)\n        if isalpha(s[i])\n\
    \            if islower(s[i])\n                s[i] = uppercase(s[i])\n      \
    \      else\n                s[i] = lowercase(s[i])\n            end\n       \
    \ end\n    end\n    return s\nend", "    if s == \"\"\n        return s\n    end\n\
    \    if s[1] in 'a':\n        return uppercase(s[1]) * solve(s[2:end])\n    elseif\
    \ s[1] in 'A':\n        return lowercase(s[1]) * solve(s[2:end])\n    else\n \
    \       return s[1] * solve(s[2:end])\n    end\nend", "    if isempty(s)\n   \
    \     return \"\"\n    end\n    if isletter(s[1])\n        return uppercase(s[1])\
    \ * solve(s[2:end])\n    else\n        return s[1] * solve(s[2:end])\n    end\n\
    end", "    if isempty(s)\n        return s\n    end\n    if isletter(s[1])\n \
    \       return uppercase(s[1]) * solve(s[2:end])\n    else\n        return s[1]\
    \ * solve(s[2:end])\n    end\nend", "    s = reverse(s)\n    for i in 1:length(s)\n\
    \        if s[i] in 'abcdefghijklmnopqrstuvwxyz'\n            s[i] = uppercase(s[i])\n\
    \        elseif s[i] in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            s[i] = lowercase(s[i])\n\
    \        end\n    end\n    return s\nend", "    if s == \"\"\n        return \"\
    \"\n    end\n    if s[1] in \"abcdefghijklmnopqrstuvwxyz\"\n        return uppercase(s[1])\
    \ * solve(s[2:end])\n    elseif s[1] in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n     \
    \   return lowercase(s[1]) * solve(s[2:end])\n    else\n        return s[1] *\
    \ solve(s[2:end])\n    end\nend", "    if s == \"\"\n        return \"\"\n   \
    \ end\n    if s[1] in \"abcdefghijklmnopqrstuvwxyz\"\n        return uppercase(s[1])\
    \ * solve(s[2:end])\n    elseif s[1] in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n     \
    \   return lowercase(s[1]) * solve(s[2:end])\n    else\n        return s[1] *\
    \ solve(s[2:end])\n    end\nend", "    if isempty(s)\n        return s\n    end\n\
    \    if isletter(s[1])\n        return uppercase(s[1]) * solve(s[2:end])\n   \
    \ else\n        return s[1] * solve(s[2:end])\n    end\nend", "    if s == \"\"\
    \n        return s\n    end\n    if s[1] in 'a':\n        return string(s[1])::String\n\
    \    end\n    if s[1] in 'A':\n        return string(s[1])::String\n    end\n\
    \    return solve(s[2:end])\nend", "    if isempty(s)\n        return \"\"\n \
    \   end\n    if s[1] in 'a':\n        return uppercase(s[1]) * solve(s[2:end])\n\
    \    elseif s[1] in 'A':\n        return lowercase(s[1]) * solve(s[2:end])\n \
    \   else\n        return s[1] * solve(s[2:end])\n    end\nend", "    if isempty(s)\n\
    \        return s\n    end\n    s = reverse(s)\n    for i in 1:length(s)\n   \
    \     if isletter(s[i])\n            s[i] = uppercase(s[i])\n        else\n  \
    \          s[i] = lowercase(s[i])\n        end\n    end\n    return s\nend", " \
    \   if isempty(s)\n        return s\n    end\n    s = reverse(s)\n    for i in\
    \ 1:length(s)\n        if s[i] in 'abcdefghijklmnopqrstuvwxyz'\n            s[i]\
    \ = uppercase(s[i])\n        elseif s[i] in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n   \
    \         s[i] = lowercase(s[i])\n        end\n    end\n    return s\nend", " \
    \   if isempty(s)\n        return s\n    end\n    if isletter(s[1])\n        return\
    \ uppercase(s[1]) * solve(s[2:end])\n    else\n        return s[1] * solve(s[2:end])\n\
    \    end\nend", "    if s == \"\"\n        return \"\"\n    end\n    if s[1] in\
    \ ['a'..'z']\n        return uppercase(s[1]) * solve(s[2:end])\n    elseif s[1]\
    \ in ['A'..'Z']\n        return lowercase(s[1]) * solve(s[2:end])\n    else\n\
    \        return s[1] * solve(s[2:end])\n    end\nend", "    s = reverse(s)\n \
    \   for i in 1:length(s)\n        if isalpha(s[i])\n            if islower(s[i])\n\
    \                s[i] = uppercase(s[i])\n            else\n                s[i]\
    \ = lowercase(s[i])\n            end\n        end\n    end\n    return s\nend",
  "    s = reverse(s)\n    for i in 1:length(s)\n        if s[i] in 'a':s[i] = 'A'\n\
    \        elseif s[i] in 'A':s[i] = 'a'\n        elseif s[i] in 'b':s[i] = 'B'\n\
    \        elseif s[i] in 'B':s[i] = 'b'\n        elseif s[i] in 'c':s[i] = 'C'\n\
    \        elseif s[i] in 'C':s[i] = 'c'\n        elseif s[i] in 'd':s[i] = 'D'\n\
    \        elseif s[i] in 'D':s[i] = 'd'\n        elseif s[i] in 'e':s[i] = 'E'\n\
    \        elseif s[i] in 'E':s[i] = 'e'\n        elseif s[i] in 'f':s[i] = 'F'\n\
    \        elseif s[i] in 'F':s[i] = 'f'\n        elseif s[i] in 'g':s[i] = 'G'\n\
    \        elseif s[i] in 'G':s[i] = 'g'\n        elseif s[i] in 'h':s[i] = 'H'\n\
    \        elseif s[i] in 'H':s[i] = 'h'\n        elseif s[i] in 'i':s[i] = 'I'\n\
    \        elseif s[i] in 'I':s[i] = 'i'\n        elseif s[i] in 'j':s[i] = 'J'\n\
    \        elseif s[i] in 'J':s[i] = 'j'\n        elseif s[i] in 'k':s[i] = 'K'\n\
    \        elseif s[i] in 'K':s[i] = 'k'\n        elseif s[i] in 'l':s[i] = 'L'\n\
    \        elseif s[i] in 'L':s[i] = 'l'\n        elseif s[i] in 'm':s[", "    s\
    \ = reverse(s)\n    for i in 1:length(s)\n        if isalpha(s[i])\n         \
    \   s[i] = uppercase(s[i]) ? lowercase(s[i]) : uppercase(s[i])\n        end\n\
    \    end\n    return s\nend", "    if s == \"\"\n        return s\n    end\n \
    \   if isletter(s[1])\n        return uppercase(s[1]) * solve(s[2:end])\n    else\n\
    \        return s[1] * solve(s[2:end])\n    end\nend", "    if isempty(s)\n  \
    \      return s\n    end\n    if isletter(s[1])\n        return uppercase(s[1])\
    \ * solve(s[2:end])\n    else\n        return s[1] * solve(s[2:end])\n    end\n\
    end", "    if s == \"\"\n        return s\n    end\n    if s[1] in 'a'::z\n  \
    \      return uppercase(s[1]) * solve(s[2:end])\n    elseif s[1] in 'A'::Z\n \
    \       return lowercase(s[1]) * solve(s[2:end])\n    else\n        return s[1]\
    \ * solve(s[2:end])\n    end\nend", "    s = reverse(s)\n    for i in 1:length(s)\n\
    \        if isalpha(s[i])\n            s[i] = uppercase(s[i])\n        else\n\
    \            s[i] = lowercase(s[i])\n        end\n    end\n    return s\nend",
  "    if isempty(s)\n        return s\n    end\n    if isletter(s[1])\n        if\
    \ islower(s[1])\n            return uppercase(s[1]) * solve(s[2:end])\n      \
    \  else\n            return lowercase(s[1]) * solve(s[2:end])\n        end\n \
    \   else\n        return s[1] * solve(s[2:end])\n    end\nend", "    if isempty(s)\n\
    \        return \"\"\n    end\n    if isletter(s[1])\n        return uppercase(s[1])\
    \ * solve(s[2:end])\n    else\n        return s[1] * solve(s[2:end])\n    end\n\
    end", "    if isletter(s)\n        return reverse(s)\n    else\n        return\
    \ s\n    end\nend", "    if length(s) == 0\n        return \"\"\n    end\n   \
    \ if length(s) == 1\n        if isalpha(s[1])\n            return uppercase(s[1])\n\
    \        else\n            return s[1]\n        end\n    end\n    if isalpha(s[1])\n\
    \        if islower(s[1])\n            return uppercase(s[1]) * solve(s[2:end])\n\
    \        else\n            return lowercase(s[1]) * solve(s[2:end])\n        end\n\
    \    else\n        return s[1] * solve(s[2:end])\n    end\nend", "    if length(s)\
    \ == 0\n        return \"\"\n    end\n    if length(s) == 1\n        if s[1] in\
    \ 'abcdefghijklmnopqrstuvwxyz'\n            return uppercase(s[1])\n        elseif\
    \ s[1] in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            return lowercase(s[1])\n \
    \       else\n            return s[1]\n        end\n    end\n    if s[1] in 'abcdefghijklmnopqrstuvwxyz'\n\
    \        return uppercase(s[1]) * solve(s[2:end])\n    elseif s[1] in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \        return lowercase(s[1]) * solve(s[2:end])\n    else\n        return s[1]\
    \ * solve(s[2:end])\n    end\nend", "    if isempty(s)\n        return s\n   \
    \ end\n    if isletter(s[1])\n        return uppercase(s[1]) * solve(s[2:end])\n\
    \    else\n        return s[1] * solve(s[2:end])\n    end\nend", "    if isempty(s)\n\
    \        return s\n    end\n    s = reverse(s)\n    for i in 1:length(s)\n   \
    \     if isletter(s[i])\n            if islower(s[i])\n                s[i] =\
    \ uppercase(s[i])\n            else\n                s[i] = lowercase(s[i])\n\
    \            end\n        end\n    end\n    return s\nend", "    if s == \"\"\n\
    \        return \"\"\n    end\n    if s[1] in 'a':\n        return uppercase(s[1])\
    \ * solve(s[2:end])\n    elseif s[1] in 'A':\n        return lowercase(s[1]) *\
    \ solve(s[2:end])\n    else\n        return s[1] * solve(s[2:end])\n    end\n\
    end", "    if isempty(s)\n        return \"\"\n    end\n    if isletter(s[1])\n\
    \        if islower(s[1])\n            return uppercase(s[1]) * solve(s[2:end])\n\
    \        else\n            return lowercase(s[1]) * solve(s[2:end])\n        end\n\
    \    else\n        return s[1] * solve(s[2:end])\n    end\nend", "    if s ==\
    \ reverse(s)\n        return s\n    end\n    if s == \"\"\n        return \"\"\
    \n    end\n    if s[1] in 'abcdefghijklmnopqrstuvwxyz'\n        return uppercase(s[1])\
    \ * solve(s[2:end])\n    elseif s[1] in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n       \
    \ return lowercase(s[1]) * solve(s[2:end])\n    else\n        return s[1] * solve(s[2:end])\n\
    \    end\nend", "    if isempty(s)\n        return \"\"\n    end\n    if isletter(s[1])\n\
    \        return uppercase(s[1]) * solve(s[2:end])\n    else\n        return s[1]\
    \ * solve(s[2:end])\n    end\nend", "    if length(s) == 0\n        return s\n\
    \    end\n    if s[1] in 'a' :\n        return uppercase(s[1]) * solve(s[2:end])\n\
    \    elseif s[1] in 'A' :\n        return lowercase(s[1]) * solve(s[2:end])\n\
    \    else\n        return s[1] * solve(s[2:end])\n    end\nend", "    if s ==\
    \ \"\"\n        return \"\"\n    end\n    if isletter(s[1])\n        return uppercase(s[1])\
    \ * solve(s[2:end])\n    else\n        return s[1] * solve(s[2:end])\n    end\n\
    end", "    if s == \"\"\n        return \"\"\n    end\n    if s[1] in 'a':\n \
    \       return uppercase(s[1]) * solve(s[2:end])\n    elseif s[1] in 'A':\n  \
    \      return lowercase(s[1]) * solve(s[2:end])\n    else\n        return s[1]\
    \ * solve(s[2:end])\n    end\nend", "    s = reverse(s)\n    for i in 1:length(s)\n\
    \        if s[i] in 'abcdefghijklmnopqrstuvwxyz'\n            s[i] = uppercase(s[i])\n\
    \        elseif s[i] in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            s[i] = lowercase(s[i])\n\
    \        end\n    end\n    return s\nend", "    if s == \"\"\n        return s\n\
    \    end\n    if s[1] in 'a':\n        return uppercase(s[1]) * solve(s[2:end])\n\
    \    elseif s[1] in 'A':\n        return lowercase(s[1]) * solve(s[2:end])\n \
    \   else\n        return s[1] * solve(s[2:end])\n    end\nend", "    if length(s)\
    \ == 0\n        return s\n    end\n    if isletter(s[1])\n        if islower(s[1])\n\
    \            return uppercase(s[1]) * solve(s[2:end])\n        else\n        \
    \    return lowercase(s[1]) * solve(s[2:end])\n        end\n    else\n       \
    \ return s[1] * solve(s[2:end])\n    end\nend", "    if s == \"\"\n        return\
    \ \"\"\n    end\n    if s[1] in \"abcdefghijklmnopqrstuvwxyz\"\n        return\
    \ uppercase(s[1]) * solve(s[2:end])\n    elseif s[1] in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n        return lowercase(s[1]) * solve(s[2:end])\n    else\n        return s[1]\
    \ * solve(s[2:end])\n    end\nend", "    if s == \"\"\n        return s\n    end\n\
    \    s = reverse(s)\n    for i in 1:length(s)\n        if isalpha(s[i])\n    \
    \        if islower(s[i])\n                s[i] = uppercase(s[i])\n          \
    \  else\n                s[i] = lowercase(s[i])\n            end\n        end\n\
    \    end\n    return s\nend", "    if isempty(s)\n        return s\n    end\n\
    \    if !isletter(s[1])\n        return s[1] * solve(s[2:end])\n    end\n    if\
    \ islower(s[1])\n        return uppercase(s[1]) * solve(s[2:end])\n    end\n \
    \   return lowercase(s[1]) * solve(s[2:end])\nend", "    if isempty(s)\n     \
    \   return s\n    end\n    s = s[end:-1:1]\n    for i in 1:length(s)\n       \
    \ if isalpha(s[i])\n            s[i] = uppercase(s[i]) ? lowercase(s[i]) : uppercase(s[i])\n\
    \        end\n    end\n    return s\nend", "    if isempty(s)\n        return\
    \ \"\"\n    end\n    if isletter(s[1])\n        return uppercase(s[1]) * solve(s[2:end])\n\
    \    else\n        return s[1] * solve(s[2:end])\n    end\nend", "    if isempty(s)\n\
    \        return s\n    end\n    if isletter(s[1])\n        return uppercase(s[1])\
    \ * solve(s[2:end])\n    else\n        return s[1] * solve(s[2:end])\n    end\n\
    end", "    if s == \"\"\n        return s\n    end\n    s = reverse(s)\n    for\
    \ i in 1:length(s)\n        if isalpha(s[i])\n            s[i] = uppercase(s[i])\n\
    \        end\n    end\n    return s\nend", "    if s == \"\"\n        return \"\
    \"\n    end\n    if s[1] in 'a'::z\n        return uppercase(s[1]) * solve(s[2:end])\n\
    \    elseif s[1] in 'A'::Z\n        return lowercase(s[1]) * solve(s[2:end])\n\
    \    else\n        return s[1] * solve(s[2:end])\n    end\nend", "    if isempty(s)\n\
    \        return s\n    end\n    s = reverse(s)\n    for i in 1:length(s)\n   \
    \     if isalpha(s[i])\n            s[i] = uppercase(s[i])\n        else\n   \
    \         s[i] = lowercase(s[i])\n        end\n    end\n    return s\nend", " \
    \   if isempty(s)\n        return s\n    end\n    s = reverse(s)\n    for i in\
    \ 1:length(s)\n        if isalpha(s[i])\n            if islower(s[i])\n      \
    \          s[i] = uppercase(s[i])\n            else\n                s[i] = lowercase(s[i])\n\
    \            end\n        end\n    end\n    return s\nend", "    if s == reverse(s)\n\
    \        return s\n    end\n    s = reverse(s)\n    for i in 1:length(s)\n   \
    \     if isalpha(s[i])\n            if islower(s[i])\n                s[i] = uppercase(s[i])\n\
    \            else\n                s[i] = lowercase(s[i])\n            end\n \
    \       end\n    end\n    return s\nend", "    if isempty(s)\n        return \"\
    \"\n    end\n    if isletter(s[1])\n        return uppercase(s[1]) * solve(s[2:end])\n\
    \    else\n        return s[1] * solve(s[2:end])\n    end\nend", "    if isempty(s)\n\
    \        return \"\"\n    end\n    if isletter(s[1])\n        if islower(s[1])\n\
    \            return uppercase(s[1]) * solve(s[2:end])\n        else\n        \
    \    return lowercase(s[1]) * solve(s[2:end])\n        end\n    else\n       \
    \ return s[1] * solve(s[2:end])\n    end\nend", "    if isempty(s)\n        return\
    \ \"\"\n    end\n    if isletter(s[1])\n        if islower(s[1])\n           \
    \ return uppercase(s[1]) * solve(s[2:end])\n        else\n            return lowercase(s[1])\
    \ * solve(s[2:end])\n        end\n    else\n        return s[1] * solve(s[2:end])\n\
    \    end\nend", "    if isempty(s)\n        return \"\"\n    end\n    if isletter(s[1])\n\
    \        return uppercase(s[1]) * solve(s[2:end])\n    else\n        return s[1]\
    \ * solve(s[2:end])\n    end\nend", "    s = reverse(s)\n    for i in 1:length(s)\n\
    \        if s[i] in 'a':s[i] = 'A'\n        elseif s[i] in 'A':s[i] = 'a'\n  \
    \      elseif s[i] in 'b':s[i] = 'B'\n        elseif s[i] in 'B':s[i] = 'b'\n\
    \        elseif s[i] in 'c':s[i] = 'C'\n        elseif s[i] in 'C':s[i] = 'c'\n\
    \        elseif s[i] in 'd':s[i] = 'D'\n        elseif s[i] in 'D':s[i] = 'd'\n\
    \        elseif s[i] in 'e':s[i] = 'E'\n        elseif s[i] in 'E':s[i] = 'e'\n\
    \        elseif s[i] in 'f':s[i] = 'F'\n        elseif s[i] in 'F':s[i] = 'f'\n\
    \        elseif s[i] in 'g':s[i] = 'G'\n        elseif s[i] in 'G':s[i] = 'g'\n\
    \        elseif s[i] in 'h':s[i] = 'H'\n        elseif s[i] in 'H':s[i] = 'h'\n\
    \        elseif s[i] in 'i':s[i] = 'I'\n        elseif s[i] in 'I':s[i] = 'i'\n\
    \        elseif s[i] in 'j':s[i] = 'J'\n        elseif s[i] in 'J':s[i] = 'j'\n\
    \        elseif s[i] in 'k':s[i] = 'K'\n        elseif s[i] in 'K':s[i] = 'k'\n\
    \        elseif s[i] in 'l':s[i] = 'L'\n        elseif s[i] in 'L':s[i] = 'l'\n\
    \        elseif s[i] in 'm':s[", "    if s == \"\"\n        return s\n    end\n\
    \    if isletter(s[1])\n        return uppercase(s[1]) * solve(s[2:end])\n   \
    \ else\n        return s[1] * solve(s[2:end])\n    end\nend", "    if isempty(s)\n\
    \        return \"\"\n    end\n    if s[1] in \"abcdefghijklmnopqrstuvwxyz\"\n\
    \        return uppercase(s[1]) * solve(s[2:end])\n    elseif s[1] in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n        return lowercase(s[1]) * solve(s[2:end])\n    else\n        return s[1]\
    \ * solve(s[2:end])\n    end\nend", "    if isletter(s)\n        return reverse(s)\n\
    \    else\n        return s\n    end\nend", "    if isempty(s)\n        return\
    \ \"\"\n    end\n    if isletter(s[1])\n        return uppercase(s[1]) * solve(s[2:end])\n\
    \    else\n        return s[1] * solve(s[2:end])\n    end\nend", "    if s ==\
    \ \"\"\n        return s\n    end\n    s = reverse(s)\n    for i in 1:length(s)\n\
    \        if isalpha(s[i])\n            if islower(s[i])\n                s[i]\
    \ = uppercase(s[i])\n            else\n                s[i] = lowercase(s[i])\n\
    \            end\n        end\n    end\n    return s\nend", "    if length(s)\
    \ == 0\n        return s\n    end\n    if length(s) == 1\n        if s[1] in 'abcdefghijklmnopqrstuvwxyz'\n\
    \            return uppercase(s)\n        elseif s[1] in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \            return lowercase(s)\n        else\n            return s\n       \
    \ end\n    end\n    if s[1] in 'abcdefghijklmnopqrstuvwxyz'\n        return uppercase(s[1])\
    \ * solve(s[2:end])\n    elseif s[1] in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n       \
    \ return lowercase(s[1]) * solve(s[2:end])\n    else\n        return s[1] * solve(s[2:end])\n\
    \    end\nend", "    if isempty(s)\n        return \"\"\n    end\n    if isletter(s[1])\n\
    \        if islower(s[1])\n            return uppercase(s[1]) * solve(s[2:end])\n\
    \        else\n            return lowercase(s[1]) * solve(s[2:end])\n        end\n\
    \    else\n        return s[1] * solve(s[2:end])\n    end\nend", "    if isempty(s)\n\
    \        return \"\"\n    end\n    s = collect(s)\n    for i in 1:length(s)\n\
    \        if isalpha(s[i])\n            if islower(s[i])\n                s[i]\
    \ = uppercase(s[i])\n            else\n                s[i] = lowercase(s[i])\n\
    \            end\n        end\n    end\n    return join(s)\nend", "    if isempty(s)\n\
    \        return s\n    end\n    if isletter(s[1])\n        return uppercase(s[1])\
    \ * solve(s[2:end])\n    else\n        return s[1] * solve(s[2:end])\n    end\n\
    end", "    if length(s) == 0\n        return \"\"\n    end\n    if isletter(s[1])\n\
    \        if islower(s[1])\n            return uppercase(s[1]) * solve(s[2:end])\n\
    \        else\n            return lowercase(s[1]) * solve(s[2:end])\n        end\n\
    \    else\n        return s[1] * solve(s[2:end])\n    end\nend", "    # your code\
    \ here\n    return s\nend", "    if isempty(s)\n        return s\n    end\n  \
    \  if isletter(s[1])\n        return uppercase(s[1]) * solve(s[2:end])\n    else\n\
    \        return s[1] * solve(s[2:end])\n    end\nend", "    s = reverse(s)\n \
    \   for i in 1:length(s)\n        if isalpha(s[i])\n            s[i] = uppercase(s[i])\n\
    \        else\n            s[i] = lowercase(s[i])\n        end\n    end\n    return\
    \ s\nend", "    if isempty(s)\n        return s\n    end\n    s = reverse(s)\n\
    \    for i in 1:length(s)\n        if isletter(s[i])\n            if islower(s[i])\n\
    \                s[i] = uppercase(s[i])\n            else\n                s[i]\
    \ = lowercase(s[i])\n            end\n        end\n    end\n    return s\nend",
  "    if length(s) == 0\n        return s\n    end\n    if isletter(s[1])\n     \
    \   return uppercase(s[1]) * solve(s[2:end])\n    else\n        return s[1] *\
    \ solve(s[2:end])\n    end\nend", "    if isempty(s)\n        return s\n    end\n\
    \    if isletter(s[1])\n        return uppercase(s[1]) * solve(s[2:end])\n   \
    \ else\n        return s[1] * solve(s[2:end])\n    end\nend", "    if length(s)\
    \ == 0\n        return s\n    end\n    s = reverse(s)\n    for i in 1:length(s)\n\
    \        if isalpha(s[i])\n            s[i] = uppercase(s[i])\n        else\n\
    \            s[i] = lowercase(s[i])\n        end\n    end\n    return s\nend",
  "    if isempty(s)\n        return s\n    end\n    s = reverse(s)\n    for i in\
    \ 1:length(s)\n        if isletter(s[i])\n            s[i] = uppercase(s[i])\n\
    \        else\n            s[i] = lowercase(s[i])\n        end\n    end\n    return\
    \ s\nend", "    if isempty(s)\n        return s\n    end\n    if isletter(s[1])\n\
    \        return uppercase(s[1]) * solve(s[2:end])\n    else\n        return s[1]\
    \ * solve(s[2:end])\n    end\nend", "    if s == \"\"\n        return \"\"\n \
    \   end\n    if isletter(s[1])\n        return uppercase(s[1]) * solve(s[2:end])\n\
    \    else\n        return s[1] * solve(s[2:end])\n    end\nend", "    if isempty(s)\n\
    \        return \"\"\n    end\n    if isletter(s[1])\n        if islower(s[1])\n\
    \            return uppercase(s[1]) * solve(s[2:end])\n        else\n        \
    \    return lowercase(s[1]) * solve(s[2:end])\n        end\n    else\n       \
    \ return s[1] * solve(s[2:end])\n    end\nend", "    if length(s) == 0\n     \
    \   return s\n    end\n    s = reverse(s)\n    for i in 1:length(s)\n        if\
    \ s[i] in 'abcdefghijklmnopqrstuvwxyz'\n            s[i] = uppercase(s[i])\n \
    \       elseif s[i] in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            s[i] = lowercase(s[i])\n\
    \        end\n    end\n    return s\nend", "    if s == \"\"\n        return s\n\
    \    end\n    result = \"\"\n    for c in s\n        if isalpha(c)\n         \
    \   if islower(c)\n                result *= uppercase(c)\n            else\n\
    \                result *= lowercase(c)\n            end\n        else\n     \
    \       result *= c\n        end\n    end\n    return result\nend", "    if s\
    \ == \"\"\n        return s\n    end\n    s = reverse(s)\n    for i in 1:length(s)\n\
    \        if isalpha(s[i])\n            if islower(s[i])\n                s[i]\
    \ = uppercase(s[i])\n            else\n                s[i] = lowercase(s[i])\n\
    \            end\n        end\n    end\n    return s\nend", "    if length(s)\
    \ == 0\n        return s\n    end\n    result = \"\"\n    for c in s\n       \
    \ if c in 'a':\n            result *= c\n        elseif c in 'A':\n          \
    \  result *= c\n        else\n            result *= c\n        end\n    end\n\
    \    return result\nend", "    if s == \"\"\n        return s\n    end\n    result\
    \ = \"\"\n    for i in 1:length(s)\n        if s[i] in 'a'::z\n            result\
    \ *= uppercase(s[i])\n        elseif s[i] in 'A'::Z\n            result *= lowercase(s[i])\n\
    \        else\n            result *= s[i]\n        end\n    end\n    return result\n\
    end", "    if isletter(s)\n        return reverse(s)\n    else\n        return\
    \ s\n    end\nend", "    if isempty(s)\n        return s\n    end\n    if isletter(s[1])\n\
    \        return uppercase(s[1]) * solve(s[2:end])\n    else\n        return s[1]\
    \ * solve(s[2:end])\n    end\nend", "    if isempty(s)\n        return \"\"\n\
    \    end\n    if isletter(s[1])\n        return uppercase(s[1]) * solve(s[2:end])\n\
    \    else\n        return s[1] * solve(s[2:end])\n    end\nend", "    if isempty(s)\n\
    \        return s\n    end\n    if isletter(s[1])\n        return uppercase(s[1])\
    \ * solve(s[2:end])\n    else\n        return s[1] * solve(s[2:end])\n    end\n\
    end", "    if isempty(s)\n        return \"\"\n    end\n    if isletter(s[1])\n\
    \        return uppercase(s[1]) * solve(s[2:end])\n    else\n        return s[1]\
    \ * solve(s[2:end])\n    end\nend", "    if isempty(s)\n        return \"\"\n\
    \    end\n    if isletter(s[1])\n        if islower(s[1])\n            return\
    \ uppercase(s[1]) * solve(s[2:end])\n        else\n            return lowercase(s[1])\
    \ * solve(s[2:end])\n        end\n    else\n        return s[1] * solve(s[2:end])\n\
    \    end\nend", "    if length(s) == 0\n        return \"\"\n    end\n    if length(s)\
    \ == 1\n        if isalpha(s[1])\n            return uppercase(s)\n        else\n\
    \            return s\n        end\n    end\n    if isalpha(s[1])\n        return\
    \ uppercase(s[1]) * solve(s[2:end])\n    else\n        return s[1] * solve(s[2:end])\n\
    \    end\nend", "    s = reverse(s)\n    for i in 1:length(s)\n        if isalpha(s[i])\n\
    \            s[i] = uppercase(s[i])\n        else\n            s[i] = lowercase(s[i])\n\
    \        end\n    end\n    return s\nend", "    if isempty(s)\n        return\
    \ s\n    end\n    if isletter(s[1])\n        return uppercase(s[1]) * solve(s[2:end])\n\
    \    else\n        return s[1] * solve(s[2:end])\n    end\nend", "    if isempty(s)\n\
    \        return \"\"\n    end\n    if isletter(s[1])\n        return uppercase(s[1])\
    \ * solve(s[2:end])\n    else\n        return s[1] * solve(s[2:end])\n    end\n\
    end", "    if length(s) == 0\n        return s\n    end\n    if length(s) == 1\n\
    \        if isalpha(s[1])\n            return uppercase(s)\n        else\n   \
    \         return s\n        end\n    end\n    if isalpha(s[1])\n        if islower(s[1])\n\
    \            return uppercase(s[1]) * solve(s[2:end])\n        else\n        \
    \    return lowercase(s[1]) * solve(s[2:end])\n        end\n    else\n       \
    \ return s[1] * solve(s[2:end])\n    end\nend", "    if isempty(s)\n        return\
    \ \"\"\n    end\n    if isletter(s[1])\n        if islower(s[1])\n           \
    \ return uppercase(s[1]) * solve(s[2:end])\n        else\n            return lowercase(s[1])\
    \ * solve(s[2:end])\n        end\n    else\n        return s[1] * solve(s[2:end])\n\
    \    end\nend", "    if isempty(s)\n        return s\n    end\n    if isletter(s[1])\n\
    \        return uppercase(s[1]) * solve(s[2:end])\n    else\n        return s[1]\
    \ * solve(s[2:end])\n    end\nend", "    if s == \"\"\n        return \"\"\n \
    \   end\n    if s[1] in \"abcdefghijklmnopqrstuvwxyz\"\n        return uppercase(s[1])\
    \ * solve(s[2:end])\n    elseif s[1] in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n     \
    \   return lowercase(s[1]) * solve(s[2:end])\n    else\n        return s[1] *\
    \ solve(s[2:end])\n    end\nend", "    if isempty(s)\n        return s\n    end\n\
    \    result = \"\"\n    for i in 1:length(s)\n        if isalpha(s[i])\n     \
    \       result *= uppercase(s[i])\n        else\n            result *= lowercase(s[i])\n\
    \        end\n    end\n    return result\nend", "    if isempty(s)\n        return\
    \ s\n    end\n    if isletter(s[1])\n        return uppercase(s[1]) * solve(s[2:end])\n\
    \    else\n        return s[1] * solve(s[2:end])\n    end\nend", "    if isempty(s)\n\
    \        return s\n    end\n    s_arr = collect(s)\n    for i in 1:length(s_arr)\n\
    \        if isalpha(s_arr[i])\n            if islower(s_arr[i])\n            \
    \    s_arr[i] = uppercase(s_arr[i])\n            else\n                s_arr[i]\
    \ = lowercase(s_arr[i])\n            end\n        end\n    end\n    return join(s_arr)\n\
    end", "    if isempty(s)\n        return s\n    end\n    if isletter(s[1])\n \
    \       return uppercase(s[1]) * solve(s[2:end])\n    else\n        return s[1]\
    \ * solve(s[2:end])\n    end\nend", "    if isempty(s)\n        return s\n   \
    \ end\n    if isletter(s[1])\n        return uppercase(s[1]) * solve(s[2:end])\n\
    \    else\n        return s[1] * solve(s[2:end])\n    end\nend", "    if s ==\
    \ \"\"\n        return \"\"\n    end\n    if s[1] in \"abcdefghijklmnopqrstuvwxyz\"\
    \n        return uppercase(s[1]) * solve(s[2:end])\n    elseif s[1] in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n        return lowercase(s[1]) * solve(s[2:end])\n    else\n        return s[1]\
    \ * solve(s[2:end])\n    end\nend", "    if isempty(s)\n        return s\n   \
    \ end\n    if isletter(s[1])\n        return uppercase(s[1]) * solve(s[2:end])\n\
    \    else\n        return s[1] * solve(s[2:end])\n    end\nend", "    if s ==\
    \ \"\"\n        return s\n    end\n    s = reverse(s)\n    for i in 1:length(s)\n\
    \        if isalpha(s[i])\n            if islower(s[i])\n                s[i]\
    \ = uppercase(s[i])\n            else\n                s[i] = lowercase(s[i])\n\
    \            end\n        end\n    end\n    return s\nend", "    if isempty(s)\n\
    \        return \"\"\n    end\n    if isletter(s[1])\n        return uppercase(s[1])\
    \ * solve(s[2:end])\n    else\n        return s[1] * solve(s[2:end])\n    end\n\
    end", "    if s == \"\"\n        return \"\"\n    end\n    if s[1] in 'a'::z\n\
    \        return uppercase(s[1]) * solve(s[2:end])\n    elseif s[1] in 'A'::Z\n\
    \        return lowercase(s[1]) * solve(s[2:end])\n    else\n        return s[1]\
    \ * solve(s[2:end])\n    end\nend", "    if length(s) == 0\n        return s\n\
    \    end\n    s = reverse(s)\n    for i in 1:length(s)\n        if isalpha(s[i])\n\
    \            if islower(s[i])\n                s[i] = uppercase(s[i])\n      \
    \      else\n                s[i] = lowercase(s[i])\n            end\n       \
    \ end\n    end\n    return s\nend", "    if s == \"\"\n        return s\n    end\n\
    \    s = split(s, \"\")\n    for i in 1:length(s)\n        if s[i] in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            s[i] = uppercase(s[i])\n        elseif s[i] in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            s[i] = lowercase(s[i])\n        end\n    end\n    return join(s,\
    \ \"\")\nend", "    return reverse(s)\nend", "    s = reverse(s)\n    s = map(x\
    \ -> isalpha(x) ? x == 'a' ? 'A' : x == 'A' ? 'a' : x == 'b' ? 'B' : x == 'B'\
    \ ? 'b' : x == 'c' ? 'C' : x == 'C' ? 'c' : x == 'd' ? 'D' : x == 'D' ? 'd' :\
    \ x == 'e' ? 'E' : x == 'E' ? 'e' : x == 'f' ? 'F' : x == 'F' ? 'f' : x == 'g'\
    \ ? 'G' : x == 'G' ? 'g' : x == 'h' ? 'H' : x == 'H' ? 'h' : x == 'i' ? 'I' :\
    \ x == 'I' ? 'i' : x == 'j' ? 'J' : x == 'J' ? 'j' : x == 'k' ? 'K' : x == 'K'\
    \ ? 'k' : x == 'l' ? 'L' : x == 'L' ? 'l' : x == 'm' ? 'M' : x == 'M' ? 'm' :\
    \ x == 'n' ? 'N' : x == 'N' ? 'n' : x == 'o' ? 'O' : x == 'O' ? 'o' : x == 'p'\
    \ ? 'P' : x == 'P' ? 'p' : x == 'q' ? 'Q' : x == 'Q' ? 'q' : x == 'r' ? 'R' :\
    \ x == 'R' ? 'r' : x == 's' ? 'S' : x == 'S' ? 's' : x == 't' ? 'T' : x == 'T'\
    \ ? 't' : x == 'u' ? 'U' : x == 'U' ? 'u' : x == 'v' ? 'V' : x == 'V' ? 'v' :\
    \ x == 'w' ? 'W' : x == 'W' ? 'w' : x == 'x' ? 'X' : x == 'X' ? 'x' : x == 'y'\
    \ ? 'Y' :", "    if isempty(s)\n        return \"\"\n    end\n    if isletter(s[1])\n\
    \        return uppercase(s[1]) * solve(s[2:end])\n    else\n        return s[1]\
    \ * solve(s[2:end])\n    end\nend", "    if isempty(s)\n        return s\n   \
    \ end\n    if isletter(s[1])\n        return uppercase(s[1]) * solve(s[2:end])\n\
    \    else\n        return s[1] * solve(s[2:end])\n    end\nend", "    if isempty(s)\n\
    \        return s\n    end\n    if isletter(s[1])\n        return uppercase(s[1])\
    \ * solve(s[2:end])\n    else\n        return s[1] * solve(s[2:end])\n    end\n\
    end", "    if s == \"\"\n        return \"\"\n    end\n    if s[1] in 'a':z\n\
    \        return uppercase(s[1]) * solve(s[2:end])\n    elseif s[1] in 'A':Z\n\
    \        return lowercase(s[1]) * solve(s[2:end])\n    else\n        return s[1]\
    \ * solve(s[2:end])\n    end\nend", "    if s == \"\"\n        return s\n    end\n\
    \    res = \"\"\n    for c in s\n        if c in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            res *= uppercase(c)\n        elseif c in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            res *= lowercase(c)\n        else\n            res *= c\n      \
    \  end\n    end\n    return res\nend", "    s = reverse(s)\n    for i in 1:length(s)\n\
    \        if s[i] in 'abcdefghijklmnopqrstuvwxyz'\n            s[i] = uppercase(s[i])\n\
    \        elseif s[i] in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            s[i] = lowercase(s[i])\n\
    \        end\n    end\n    return s\nend", "    if !isletter(s)\n        return\
    \ reverse(s)\n    end\n    s = reverse(s)\n    for i in 1:length(s)\n        if\
    \ isletter(s[i])\n            if islower(s[i])\n                s[i] = uppercase(s[i])\n\
    \            else\n                s[i] = lowercase(s[i])\n            end\n \
    \       end\n    end\n    return s\nend", "    if isletter(s)\n        return\
    \ reverse(s)\n    else\n        return s\n    end\nend", "    s = reverse(s)\n\
    \    for i in 1:length(s)\n        if s[i] in 'a':s[i] = 'A'\n        elseif s[i]\
    \ in 'A':s[i] = 'a'\n        elseif s[i] in 'b':s[i] = 'B'\n        elseif s[i]\
    \ in 'B':s[i] = 'b'\n        elseif s[i] in 'c':s[i] = 'C'\n        elseif s[i]\
    \ in 'C':s[i] = 'c'\n        elseif s[i] in 'd':s[i] = 'D'\n        elseif s[i]\
    \ in 'D':s[i] = 'd'\n        elseif s[i] in 'e':s[i] = 'E'\n        elseif s[i]\
    \ in 'E':s[i] = 'e'\n        elseif s[i] in 'f':s[i] = 'F'\n        elseif s[i]\
    \ in 'F':s[i] = 'f'\n        elseif s[i] in 'g':s[i] = 'G'\n        elseif s[i]\
    \ in 'G':s[i] = 'g'\n        elseif s[i] in 'h':s[i] = 'H'\n        elseif s[i]\
    \ in 'H':s[i] = 'h'\n        elseif s[i] in 'i':s[i] = 'I'\n        elseif s[i]\
    \ in 'I':s[i] = 'i'\n        elseif s[i] in 'j':s[i] = 'J'\n        elseif s[i]\
    \ in 'J':s[i] = 'j'\n        elseif s[i] in 'k':s[i] = 'K'\n        elseif s[i]\
    \ in 'K':s[i] = 'k'\n        elseif s[i] in 'l':s[i] = 'L'\n        elseif s[i]\
    \ in 'L':s[i] = 'l'\n        elseif s[i] in 'm':s[", "    if isempty(s)\n    \
    \    return \"\"\n    end\n    if isletter(s[1])\n        if islower(s[1])\n \
    \           return uppercase(s[1]) * solve(s[2:end])\n        else\n         \
    \   return lowercase(s[1]) * solve(s[2:end])\n        end\n    else\n        return\
    \ s[1] * solve(s[2:end])\n    end\nend", "    if isempty(s)\n        return \"\
    \"\n    end\n    if isletter(s[1])\n        return uppercase(s[1]) * solve(s[2:end])\n\
    \    else\n        return s[1] * solve(s[2:end])\n    end\nend", "    s = reverse(s)\n\
    \    for i in 1:length(s)\n        if isalpha(s[i])\n            s[i] = uppercase(s[i])\n\
    \        else\n            s[i] = lowercase(s[i])\n        end\n    end\n    return\
    \ s\nend", "    if isempty(s)\n        return \"\"\n    end\n    if isletter(s[1])\n\
    \        if islower(s[1])\n            return uppercase(s[1]) * solve(s[2:end])\n\
    \        else\n            return lowercase(s[1]) * solve(s[2:end])\n        end\n\
    \    else\n        return s[1] * solve(s[2:end])\n    end\nend", "    if s ==\
    \ \"\"\n        return \"\"\n    end\n    if s[1] in \"abcdefghijklmnopqrstuvwxyz\"\
    \n        return uppercase(s[1]) * solve(s[2:end])\n    elseif s[1] in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n        return lowercase(s[1]) * solve(s[2:end])\n    else\n        return s[1]\
    \ * solve(s[2:end])\n    end\nend", "    if isempty(s)\n        return \"\"\n\
    \    end\n    if isletter(s[1])\n        if islower(s[1])\n            return\
    \ uppercase(s[1]) * solve(s[2:end])\n        else\n            return lowercase(s[1])\
    \ * solve(s[2:end])\n        end\n    else\n        return s[1] * solve(s[2:end])\n\
    \    end\nend", "    s = reverse(s)\n    for i in 1:length(s)\n        if isalpha(s[i])\n\
    \            s[i] = uppercase(s[i])\n        else\n            s[i] = lowercase(s[i])\n\
    \        end\n    end\n    return s\nend", "    if isempty(s)\n        return\
    \ \"\"\n    end\n    if isletter(s[1])\n        if islower(s[1])\n           \
    \ return uppercase(s[1]) * solve(s[2:end])\n        else\n            return lowercase(s[1])\
    \ * solve(s[2:end])\n        end\n    else\n        return s[1] * solve(s[2:end])\n\
    \    end\nend", "    if s == \"\"\n        return \"\"\n    end\n    if s[1] in\
    \ 'a':\n        return uppercase(s[1]) * solve(s[2:end])\n    elseif s[1] in 'A':\n\
    \        return lowercase(s[1]) * solve(s[2:end])\n    else\n        return s[1]\
    \ * solve(s[2:end])\n    end\nend", "    if s == \"\"\n        return s\n    end\n\
    \    s = reverse(s)\n    s = map(x -> isalpha(x) ? x == x[1] ? x[1] : x[1] : x,\
    \ s)\n    return s\nend", "    if isempty(s)\n        return s\n    end\n    if\
    \ !isletter(s[1])\n        return s[1] * solve(s[2:end])\n    end\n    if islower(s[1])\n\
    \        return uppercase(s[1]) * solve(s[2:end])\n    end\n    return lowercase(s[1])\
    \ * solve(s[2:end])\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

name: HumanEval_130_tri
language: jl
prompt: "\"\"\"Everyone knows Fibonacci sequence, it was studied deeply by mathematicians\
  \ in \n    the last couple centuries. However, what people don't know is Tribonacci\
  \ sequence.\n    Tribonacci sequence is defined by the recurrence:\n    tri(1) =\
  \ 3\n    tri(n) = 1 + n / 2, if n is even.\n    tri(n) =  tri(n - 1) + tri(n - 2)\
  \ + tri(n + 1), if n is odd.\n    For example:\n    tri(2) = 1 + (2 / 2) = 2\n \
  \   tri(4) = 3\n    tri(3) = tri(2) + tri(1) + tri(4)\n           = 2 + 3 + 3 =\
  \ 8 \n    You are given a non-negative integer number n, you have to a return a\
  \ list of the \n    first n + 1 numbers of the Tribonacci sequence.\n    Examples:\n\
  \    >>> tri(3)\n    [1, 3, 2, 8]\n    \"\"\"\nfunction tri(n::Int64)::Vector{Int64}\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = tri;\n\t@test(candidate(3) ==\
  \ [1, 3, 2, 8])\n\t@test(candidate(4) == [1, 3, 2, 8, 3])\n\t@test(candidate(5)\
  \ == [1, 3, 2, 8, 3, 15])\n\t@test(candidate(6) == [1, 3, 2, 8, 3, 15, 4])\n\t@test(candidate(7)\
  \ == [1, 3, 2, 8, 3, 15, 4, 24])\n\t@test(candidate(8) == [1, 3, 2, 8, 3, 15, 4,\
  \ 24, 5])\n\t@test(candidate(9) == [1, 3, 2, 8, 3, 15, 4, 24, 5, 35])\n\t@test(candidate(20)\
  \ == [1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11])\n\
  \t@test(candidate(0) == [1])\n\t@test(candidate(1) == [1, 3])\nend\n"
completions: ["    if n == 0\n        return [1]\n    elseif n == 1\n        return\
    \ [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n        v = [1,\
    \ 3, 2]\n        for i in 3:n\n            if i % 2 == 0\n                push!(v,\
    \ 1 + i / 2)\n            else\n                push!(v, v[i - 1] + v[i - 2] +\
    \ v[i + 1])\n            end\n        end\n        return v\n    end\nend", " \
    \   if n == 0\n        return [1]\n    elseif n == 1\n        return [1, 3]\n\
    \    elseif n == 2\n        return [1, 3, 2]\n    else\n        a = [1, 3, 2]\n\
    \        for i in 3:n\n            if i % 2 == 0\n                push!(a, 1 +\
    \ i / 2)\n            else\n                push!(a, a[i] + a[i - 1] + a[i + 1])\n\
    \            end\n        end\n        return a\n    end\nend", "    if n == 0\n\
    \        return [1]\n    elseif n == 1\n        return [1, 3]\n    elseif n ==\
    \ 2\n        return [1, 3, 2]\n    else\n        tri_vec = [1, 3, 2]\n       \
    \ for i in 3:n\n            if i % 2 == 0\n                push!(tri_vec, 1 +\
    \ i / 2)\n            else\n                push!(tri_vec, tri_vec[i] + tri_vec[i\
    \ - 1] + tri_vec[i + 1])\n            end\n        end\n        return tri_vec\n\
    \    end\nend", "    if n == 0\n        return [1]\n    elseif n == 1\n      \
    \  return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n    \
    \    v = [1, 3, 2]\n        for i in 3:n\n            if i % 2 == 0\n        \
    \        push!(v, 1 + i / 2)\n            else\n                push!(v, v[i -\
    \ 1] + v[i - 2] + v[i + 1])\n            end\n        end\n        return v\n\
    \    end\nend", "    if n == 0\n        return [1]\n    elseif n == 1\n      \
    \  return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n    \
    \    a = [1, 3, 2]\n        for i in 3:n\n            if i % 2 == 0\n        \
    \        push!(a, 1 + i / 2)\n            else\n                push!(a, a[i]\
    \ + a[i - 1] + a[i + 1])\n            end\n        end\n        return a\n   \
    \ end\nend", "    if n == 0\n        return [1]\n    elseif n == 1\n        return\
    \ [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n        v = [1,\
    \ 3, 2]\n        for i = 3:n\n            if i % 2 == 0\n                push!(v,\
    \ 1 + i / 2)\n            else\n                push!(v, v[i - 1] + v[i - 2] +\
    \ v[i + 1])\n            end\n        end\n        return v\n    end\nend", " \
    \   if n == 0\n        return [1]\n    elseif n == 1\n        return [1, 3]\n\
    \    elseif n == 2\n        return [1, 3, 2]\n    else\n        v = [1, 3, 2]\n\
    \        for i in 3:n\n            if i % 2 == 0\n                push!(v, 1 +\
    \ i / 2)\n            else\n                push!(v, v[i - 1] + v[i - 2] + v[i\
    \ + 1])\n            end\n        end\n        return v\n    end\nend", "    if\
    \ n == 0\n        return [1]\n    elseif n == 1\n        return [1, 3]\n    elseif\
    \ n == 2\n        return [1, 3, 2]\n    else\n        v = [1, 3, 2]\n        for\
    \ i in 3:n\n            if i % 2 == 0\n                push!(v, 1 + i / 2)\n \
    \           else\n                push!(v, v[i - 1] + v[i - 2] + v[i + 1])\n \
    \           end\n        end\n        return v\n    end\nend", "    if n == 0\n\
    \        return [1]\n    elseif n == 1\n        return [1, 3]\n    elseif n ==\
    \ 2\n        return [1, 3, 2]\n    else\n        v = [1, 3, 2]\n        for i\
    \ in 3:n\n            if i % 2 == 0\n                push!(v, 1 + i / 2)\n   \
    \         else\n                push!(v, v[i - 1] + v[i - 2] + v[i + 1])\n   \
    \         end\n        end\n        return v\n    end\nend", "    if n == 0\n\
    \        return [1]\n    elseif n == 1\n        return [1, 3]\n    elseif n ==\
    \ 2\n        return [1, 3, 2]\n    else\n        tri_vec = [1, 3, 2]\n       \
    \ for i in 3:n\n            if i % 2 == 0\n                push!(tri_vec, 1 +\
    \ i / 2)\n            else\n                push!(tri_vec, tri_vec[i] + tri_vec[i\
    \ - 1] + tri_vec[i + 1])\n            end\n        end\n        return tri_vec\n\
    \    end\nend", "    if n == 0\n        return [1]\n    elseif n == 1\n      \
    \  return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n    \
    \    v = [1, 3, 2]\n        for i in 3:n\n            if i % 2 == 0\n        \
    \        push!(v, 1 + i / 2)\n            else\n                push!(v, v[i -\
    \ 1] + v[i - 2] + v[i + 1])\n            end\n        end\n        return v\n\
    \    end\nend", "    if n == 0\n        return [1]\n    elseif n == 1\n      \
    \  return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n    \
    \    v = [1, 3, 2]\n        for i in 3:n\n            if i % 2 == 0\n        \
    \        push!(v, 1 + i / 2)\n            else\n                push!(v, v[i -\
    \ 1] + v[i - 2] + v[i + 1])\n            end\n        end\n        return v\n\
    \    end\nend", "    if n == 0\n        return [1]\n    elseif n == 1\n      \
    \  return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n    \
    \    seq = [1, 3, 2]\n        for i in 3:n\n            if i % 2 == 0\n      \
    \          push!(seq, 1 + i / 2)\n            else\n                push!(seq,\
    \ seq[i - 1] + seq[i - 2] + seq[i + 1])\n            end\n        end\n      \
    \  return seq\n    end\nend", "    if n == 0\n        return [1]\n    elseif n\
    \ == 1\n        return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n \
    \   else\n        return [1, 3, 2] .+ [tri(n - 1)[i] + tri(n - 2)[i] + tri(n -\
    \ 3)[i] for i in 3:n]\n    end\nend", "    if n == 0\n        return [1]\n   \
    \ elseif n == 1\n        return [1, 3]\n    elseif n == 2\n        return [1,\
    \ 3, 2]\n    else\n        v = [1, 3, 2]\n        for i in 3:n\n            if\
    \ i % 2 == 0\n                push!(v, 1 + i / 2)\n            else\n        \
    \        push!(v, v[i - 1] + v[i - 2] + v[i + 1])\n            end\n        end\n\
    \        return v\n    end\nend", "    if n == 0\n        return [1]\n    elseif\
    \ n == 1\n        return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n\
    \    else\n        v = [1, 3, 2]\n        for i = 3:n\n            if i % 2 ==\
    \ 0\n                push!(v, 1 + i / 2)\n            else\n                push!(v,\
    \ v[i - 1] + v[i - 2] + v[i + 1])\n            end\n        end\n        return\
    \ v\n    end\nend", "    if n == 0\n        return [1]\n    elseif n == 1\n  \
    \      return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n\
    \        v = [1, 3, 2]\n        for i in 3:n\n            if i % 2 == 0\n    \
    \            push!(v, 1 + i / 2)\n            else\n                push!(v, v[i]\
    \ + v[i - 1] + v[i + 1])\n            end\n        end\n        return v\n   \
    \ end\nend", "    if n == 0\n        return [1]\n    elseif n == 1\n        return\
    \ [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n        return\
    \ [1, 3, 2]\n    end\nend", "    if n == 0\n        return [1]\n    elseif n ==\
    \ 1\n        return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n\
    \        v = [1, 3, 2]\n        for i in 3:n\n            if i % 2 == 0\n    \
    \            push!(v, 1 + i / 2)\n            else\n                push!(v, v[i\
    \ - 1] + v[i - 2] + v[i + 1])\n            end\n        end\n        return v\n\
    \    end\nend", "    if n == 0\n        return [1]\n    elseif n == 1\n      \
    \  return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n    \
    \    x = [1, 3, 2]\n        for i in 3:n\n            push!(x, x[i] + x[i - 1]\
    \ + x[i - 2])\n        end\n        return x\n    end\nend", "    if n == 0\n\
    \        return [1]\n    elseif n == 1\n        return [1, 3]\n    elseif n ==\
    \ 2\n        return [1, 3, 2]\n    else\n        v = [1, 3, 2]\n        for i\
    \ in 3:n\n            if i % 2 == 0\n                push!(v, 1 + i / 2)\n   \
    \         else\n                push!(v, v[i] + v[i - 1] + v[i + 1])\n       \
    \     end\n        end\n        return v\n    end\nend", "    if n == 0\n    \
    \    return [1]\n    elseif n == 1\n        return [1, 3]\n    elseif n == 2\n\
    \        return [1, 3, 2]\n    else\n        v = [1, 3, 2]\n        for i in 3:n\n\
    \            if i % 2 == 0\n                push!(v, 1 + i / 2)\n            else\n\
    \                push!(v, v[i - 1] + v[i - 2] + v[i + 1])\n            end\n \
    \       end\n        return v\n    end\nend", "    if n == 0\n        return [1]\n\
    \    elseif n == 1\n        return [1, 3]\n    elseif n == 2\n        return [1,\
    \ 3, 2]\n    else\n        v = [1, 3, 2]\n        for i in 3:n\n            if\
    \ i % 2 == 0\n                push!(v, 1 + i / 2)\n            else\n        \
    \        push!(v, v[i - 1] + v[i - 2] + v[i + 1])\n            end\n        end\n\
    \        return v\n    end\nend", "    if n == 0\n        return [1]\n    elseif\
    \ n == 1\n        return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n\
    \    else\n        tri_seq = [1, 3, 2]\n        for i in 3:n\n            if i\
    \ % 2 == 0\n                push!(tri_seq, 1 + i / 2)\n            else\n    \
    \            push!(tri_seq, tri_seq[i - 1] + tri_seq[i - 2] + tri_seq[i + 1])\n\
    \            end\n        end\n        return tri_seq\n    end\nend", "    if\
    \ n == 0\n        return [1]\n    elseif n == 1\n        return [1, 3]\n    elseif\
    \ n == 2\n        return [1, 3, 2]\n    else\n        x = [1, 3, 2]\n        for\
    \ i in 3:n\n            if i % 2 == 0\n                push!(x, 1 + i / 2)\n \
    \           else\n                push!(x, x[i - 1] + x[i - 2] + x[i + 1])\n \
    \           end\n        end\n        return x\n    end\nend", "    if n == 0\n\
    \        return [1]\n    elseif n == 1\n        return [1, 3]\n    elseif n ==\
    \ 2\n        return [1, 3, 2]\n    else\n        v = [1, 3, 2]\n        for i\
    \ in 3:n\n            if i % 2 == 0\n                push!(v, 1 + i / 2)\n   \
    \         else\n                push!(v, v[i - 1] + v[i - 2] + v[i + 1])\n   \
    \         end\n        end\n        return v\n    end\nend", "    if n == 0\n\
    \        return [1]\n    elseif n == 1\n        return [1, 3]\n    elseif n ==\
    \ 2\n        return [1, 3, 2]\n    else\n        v = [1, 3, 2]\n        for i\
    \ in 3:n\n            if i % 2 == 0\n                push!(v, 1 + i / 2)\n   \
    \         else\n                push!(v, v[i] + v[i - 1] + v[i + 1])\n       \
    \     end\n        end\n        return v\n    end\nend", "    if n == 0\n    \
    \    return [1]\n    elseif n == 1\n        return [1, 3]\n    elseif n == 2\n\
    \        return [1, 3, 2]\n    else\n        a = [1, 3, 2]\n        for i in 3:n\n\
    \            if i % 2 == 0\n                push!(a, 1 + i / 2)\n            else\n\
    \                push!(a, a[i - 1] + a[i - 2] + a[i + 1])\n            end\n \
    \       end\n        return a\n    end\nend", "    if n == 0\n        return [1]\n\
    \    elseif n == 1\n        return [1, 3]\n    elseif n == 2\n        return [1,\
    \ 3, 2]\n    else\n        v = [1, 3, 2]\n        for i in 3:n\n            if\
    \ i % 2 == 0\n                push!(v, 1 + i / 2)\n            else\n        \
    \        push!(v, v[i - 1] + v[i - 2] + v[i + 1])\n            end\n        end\n\
    \        return v\n    end\nend", "    if n == 0\n        return [0]\n    elseif\
    \ n == 1\n        return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n\
    \    else\n        a = [1, 3, 2]\n        for i in 3:n\n            if i % 2 ==\
    \ 0\n                push!(a, 1 + i / 2)\n            else\n                push!(a,\
    \ a[i - 1] + a[i - 2] + a[i + 1])\n            end\n        end\n        return\
    \ a\n    end\nend", "    if n == 0\n        return [1]\n    elseif n == 1\n  \
    \      return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n\
    \        a = [1, 3, 2]\n        for i in 3:n\n            if i % 2 == 0\n    \
    \            push!(a, 1 + i / 2)\n            else\n                push!(a, a[i\
    \ - 1] + a[i - 2] + a[i + 1])\n            end\n        end\n        return a\n\
    \    end\nend", "    if n == 0\n        return [1]\n    elseif n == 1\n      \
    \  return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n    \
    \    return [1, 3, 2]\n    end\nend", "    if n == 0\n        return [1]\n   \
    \ elseif n == 1\n        return [1, 3]\n    elseif n == 2\n        return [1,\
    \ 3, 2]\n    else\n        tri_vec = [1, 3, 2]\n        for i = 3:n\n        \
    \    if i % 2 == 0\n                push!(tri_vec, 1 + i / 2)\n            else\n\
    \                push!(tri_vec, tri_vec[i - 1] + tri_vec[i - 2] + tri_vec[i +\
    \ 1])\n            end\n        end\n        return tri_vec\n    end\nend", " \
    \   if n == 0\n        return [1]\n    elseif n == 1\n        return [1, 3]\n\
    \    elseif n == 2\n        return [1, 3, 2]\n    else\n        tri_vec = [1,\
    \ 3, 2]\n        for i in 3:n\n            if i % 2 == 0\n                push!(tri_vec,\
    \ 1 + i / 2)\n            else\n                push!(tri_vec, tri_vec[i] + tri_vec[i\
    \ - 1] + tri_vec[i + 1])\n            end\n        end\n        return tri_vec\n\
    \    end\nend", "    if n == 0\n        return [1]\n    elseif n == 1\n      \
    \  return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n    \
    \    x = [1, 3, 2]\n        for i in 3:n\n            if i % 2 == 0\n        \
    \        push!(x, 1 + i / 2)\n            else\n                push!(x, x[i -\
    \ 1] + x[i - 2] + x[i + 1])\n            end\n        end\n        return x\n\
    \    end\nend", "    if n == 0\n        return [1]\n    elseif n == 1\n      \
    \  return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n    \
    \    v = [1, 3, 2]\n        for i in 3:n\n            if i % 2 == 0\n        \
    \        push!(v, 1 + i / 2)\n            else\n                push!(v, v[i -\
    \ 1] + v[i - 2] + v[i + 1])\n            end\n        end\n        return v\n\
    \    end\nend", "    if n == 0\n        return [1]\n    elseif n == 1\n      \
    \  return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n    \
    \    seq = [1, 3, 2]\n        for i in 3:n\n            if i % 2 == 0\n      \
    \          push!(seq, 1 + i / 2)\n            else\n                push!(seq,\
    \ seq[i - 1] + seq[i - 2] + seq[i + 1])\n            end\n        end\n      \
    \  return seq\n    end\nend", "    if n == 0\n        return [1]\n    elseif n\
    \ == 1\n        return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n \
    \   else\n        v = [1, 3, 2]\n        for i in 3:n\n            if i % 2 ==\
    \ 0\n                push!(v, 1 + i / 2)\n            else\n                push!(v,\
    \ v[i - 1] + v[i - 2] + v[i + 1])\n            end\n        end\n        return\
    \ v\n    end\nend", "    if n == 0\n        return [1]\n    elseif n == 1\n  \
    \      return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n\
    \        v = [1, 3, 2]\n        for i in 3:n\n            if i % 2 == 0\n    \
    \            push!(v, 1 + i / 2)\n            else\n                push!(v, v[i]\
    \ + v[i - 1] + v[i + 1])\n            end\n        end\n        return v\n   \
    \ end\nend", "    if n == 0\n        return [1]\n    elseif n == 1\n        return\
    \ [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n        x = [1,\
    \ 3, 2]\n        for i in 3:n\n            if i % 2 == 0\n                push!(x,\
    \ 1 + i / 2)\n            else\n                push!(x, x[i] + x[i - 1] + x[i\
    \ + 1])\n            end\n        end\n        return x\n    end\nend", "    if\
    \ n == 0\n        return [1]\n    elseif n == 1\n        return [1, 3]\n    elseif\
    \ n == 2\n        return [1, 3, 2]\n    else\n        seq = [1, 3, 2]\n      \
    \  for i in 3:n\n            if i % 2 == 0\n                push!(seq, 1 + i /\
    \ 2)\n            else\n                push!(seq, seq[i - 1] + seq[i - 2] + seq[i\
    \ + 1])\n            end\n        end\n        return seq\n    end\nend", "  \
    \  if n == 0\n        return [1]\n    elseif n == 1\n        return [1, 3]\n \
    \   elseif n == 2\n        return [1, 3, 2]\n    else\n        v = [1, 3, 2]\n\
    \        for i in 3:n\n            if i % 2 == 0\n                push!(v, 1 +\
    \ i / 2)\n            else\n                push!(v, v[i - 1] + v[i - 2] + v[i\
    \ + 1])\n            end\n        end\n        return v\n    end\nend", "    if\
    \ n == 0\n        return [1]\n    elseif n == 1\n        return [1, 3]\n    elseif\
    \ n == 2\n        return [1, 3, 2]\n    else\n        a = [1, 3, 2]\n        for\
    \ i in 3:n\n            if i % 2 == 0\n                push!(a, 1 + i / 2)\n \
    \           else\n                push!(a, a[i] + a[i - 1] + a[i + 1])\n     \
    \       end\n        end\n        return a\n    end\nend", "    if n == 0\n  \
    \      return [1]\n    elseif n == 1\n        return [1, 3]\n    elseif n == 2\n\
    \        return [1, 3, 2]\n    else\n        a = [1, 3, 2]\n        for i in 3:n\n\
    \            if i % 2 == 0\n                push!(a, 1 + i / 2)\n            else\n\
    \                push!(a, a[i - 1] + a[i - 2] + a[i + 1])\n            end\n \
    \       end\n        return a\n    end\nend", "    if n == 0\n        return [1]\n\
    \    elseif n == 1\n        return [1, 3]\n    elseif n == 2\n        return [1,\
    \ 3, 2]\n    else\n        a = [1, 3, 2]\n        for i in 3:n\n            if\
    \ i % 2 == 0\n                push!(a, 1 + i / 2)\n            else\n        \
    \        push!(a, a[i - 1] + a[i - 2] + a[i + 1])\n            end\n        end\n\
    \        return a\n    end\nend", "    if n == 0\n        return [1]\n    elseif\
    \ n == 1\n        return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n\
    \    else\n        a = 1\n        b = 3\n        c = 2\n        res = [a, b, c]\n\
    \        for i in 3:n\n            if i % 2 == 0\n                a = a + i /\
    \ 2\n                push!(res, a)\n            else\n                a = b +\
    \ c + a\n                b = c\n                c = a\n                push!(res,\
    \ a)\n            end\n        end\n        return res\n    end\nend", "    if\
    \ n == 0\n        return [1]\n    elseif n == 1\n        return [1, 3]\n    elseif\
    \ n == 2\n        return [1, 3, 2]\n    else\n        return [1, 3, 2]\n    end\n\
    end", "    if n == 0\n        return [1]\n    elseif n == 1\n        return [1,\
    \ 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n        v = [1, 3,\
    \ 2]\n        for i in 3:n\n            if i % 2 == 0\n                push!(v,\
    \ 1 + i / 2)\n            else\n                push!(v, v[i - 1] + v[i - 2] +\
    \ v[i + 1])\n            end\n        end\n        return v\n    end\nend", " \
    \   if n == 0\n        return [1]\n    elseif n == 1\n        return [1, 3]\n\
    \    elseif n == 2\n        return [1, 3, 2]\n    else\n        a = [1, 3, 2]\n\
    \        for i in 3:n\n            if i % 2 == 0\n                push!(a, 1 +\
    \ i / 2)\n            else\n                push!(a, a[i - 1] + a[i - 2] + a[i\
    \ + 1])\n            end\n        end\n        return a\n    end\nend", "    if\
    \ n == 0\n        return [1]\n    elseif n == 1\n        return [1, 3]\n    elseif\
    \ n == 2\n        return [1, 3, 2]\n    else\n        tri_list = [1, 3, 2]\n \
    \       for i in 3:n\n            if i % 2 == 0\n                push!(tri_list,\
    \ 1 + i / 2)\n            else\n                push!(tri_list, tri_list[i] +\
    \ tri_list[i - 1] + tri_list[i + 1])\n            end\n        end\n        return\
    \ tri_list\n    end\nend", "    if n == 0\n        return [1]\n    elseif n ==\
    \ 1\n        return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n\
    \        l = [1, 3, 2]\n        for i in 3:n\n            if i % 2 == 0\n    \
    \            push!(l, 1 + i / 2)\n            else\n                push!(l, l[i\
    \ - 1] + l[i - 2] + l[i + 1])\n            end\n        end\n        return l\n\
    \    end\nend", "    if n == 0\n        return [1]\n    elseif n == 1\n      \
    \  return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n    \
    \    a = [1, 3, 2]\n        for i in 3:n\n            if i % 2 == 0\n        \
    \        push!(a, 1 + i / 2)\n            else\n                push!(a, a[i -\
    \ 1] + a[i - 2] + a[i + 1])\n            end\n        end\n        return a\n\
    \    end\nend", "    if n == 0\n        return [1]\n    elseif n == 1\n      \
    \  return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n    \
    \    tri_vec = [1, 3, 2]\n        for i = 3:n\n            if i % 2 == 0\n   \
    \             push!(tri_vec, 1 + i / 2)\n            else\n                push!(tri_vec,\
    \ tri_vec[i] + tri_vec[i - 1] + tri_vec[i + 1])\n            end\n        end\n\
    \        return tri_vec\n    end\nend", "    if n == 0\n        return [1]\n \
    \   elseif n == 1\n        return [1, 3]\n    elseif n == 2\n        return [1,\
    \ 3, 2]\n    else\n        v = [1, 3, 2]\n        for i in 3:n\n            if\
    \ i % 2 == 0\n                push!(v, 1 + i / 2)\n            else\n        \
    \        push!(v, v[i - 1] + v[i - 2] + v[i + 1])\n            end\n        end\n\
    \        return v\n    end\nend", "    if n == 0\n        return [1]\n    elseif\
    \ n == 1\n        return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n\
    \    else\n        v = [1, 3, 2]\n        for i in 3:n\n            if i % 2 ==\
    \ 0\n                push!(v, 1 + i / 2)\n            else\n                push!(v,\
    \ v[i - 1] + v[i - 2] + v[i + 1])\n            end\n        end\n        return\
    \ v\n    end\nend", "    if n == 0\n        return [1]\n    elseif n == 1\n  \
    \      return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n\
    \        vec = [1, 3, 2]\n        for i in 3:n\n            if i % 2 == 0\n  \
    \              push!(vec, 1 + i / 2)\n            else\n                push!(vec,\
    \ vec[i - 1] + vec[i - 2] + vec[i + 1])\n            end\n        end\n      \
    \  return vec\n    end\nend", "    if n == 0\n        return [1]\n    elseif n\
    \ == 1\n        return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n \
    \   else\n        x = [1, 3, 2]\n        for i in 3:n\n            if i % 2 ==\
    \ 0\n                push!(x, 1 + i / 2)\n            else\n                push!(x,\
    \ x[i - 1] + x[i - 2] + x[i + 1])\n            end\n        end\n        return\
    \ x\n    end\nend", "    if n == 0\n        return [1]\n    elseif n == 1\n  \
    \      return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n\
    \        v = [1, 3, 2]\n        for i in 3:n\n            if i % 2 == 0\n    \
    \            push!(v, 1 + i / 2)\n            else\n                push!(v, v[i]\
    \ + v[i - 1] + v[i + 1])\n            end\n        end\n        return v\n   \
    \ end\nend", "    if n == 0\n        return [1]\n    elseif n == 1\n        return\
    \ [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n        a = [1,\
    \ 3, 2]\n        for i in 3:n\n            if i % 2 == 0\n                push!(a,\
    \ 1 + i / 2)\n            else\n                push!(a, a[i] + a[i - 1] + a[i\
    \ + 1])\n            end\n        end\n        return a\n    end\nend", "    if\
    \ n == 0\n        return [1]\n    elseif n == 1\n        return [1, 3]\n    elseif\
    \ n == 2\n        return [1, 3, 2]\n    else\n        v = [1, 3, 2]\n        for\
    \ i = 3:n\n            if i % 2 == 0\n                push!(v, 1 + i / 2)\n  \
    \          else\n                push!(v, v[i - 1] + v[i - 2] + v[i + 1])\n  \
    \          end\n        end\n        return v\n    end\nend", "    if n == 0\n\
    \        return [1]\n    elseif n == 1\n        return [1, 3]\n    elseif n ==\
    \ 2\n        return [1, 3, 2]\n    else\n        v = [1, 3, 2]\n        for i\
    \ in 3:n\n            if i % 2 == 0\n                push!(v, 1 + i / 2)\n   \
    \         else\n                push!(v, v[i] + v[i - 1] + v[i + 1])\n       \
    \     end\n        end\n        return v\n    end\nend", "    if n == 0\n    \
    \    return [1]\n    elseif n == 1\n        return [1, 3]\n    elseif n == 2\n\
    \        return [1, 3, 2]\n    else\n        v = [1, 3, 2]\n        for i in 3:n\n\
    \            if i % 2 == 0\n                push!(v, 1 + i / 2)\n            else\n\
    \                push!(v, v[i] + v[i - 1] + v[i + 1])\n            end\n     \
    \   end\n        return v\n    end\nend", "    if n == 0\n        return [1]\n\
    \    elseif n == 1\n        return [1, 3]\n    elseif n == 2\n        return [1,\
    \ 3, 2]\n    else\n        a = [1, 3, 2]\n        for i in 3:n\n            if\
    \ i % 2 == 0\n                push!(a, 1 + i / 2)\n            else\n        \
    \        push!(a, a[i - 1] + a[i - 2] + a[i + 1])\n            end\n        end\n\
    \        return a\n    end\nend", "    if n == 0\n        return [1]\n    elseif\
    \ n == 1\n        return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n\
    \    else\n        t = [1, 3, 2]\n        for i in 3:n\n            if i % 2 ==\
    \ 0\n                push!(t, 1 + i / 2)\n            else\n                push!(t,\
    \ t[i - 1] + t[i - 2] + t[i + 1])\n            end\n        end\n        return\
    \ t\n    end\nend", "    if n == 0\n        return [1]\n    elseif n == 1\n  \
    \      return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n\
    \        tri_vec = [1, 3, 2]\n        for i in 3:n\n            if i % 2 == 0\n\
    \                push!(tri_vec, 1 + i / 2)\n            else\n               \
    \ push!(tri_vec, tri_vec[i] + tri_vec[i - 1] + tri_vec[i + 1])\n            end\n\
    \        end\n        return tri_vec\n    end\nend", "    if n == 0\n        return\
    \ [1]\n    elseif n == 1\n        return [1, 3]\n    elseif n == 2\n        return\
    \ [1, 3, 2]\n    else\n        return [1, 3, 2] .+ [tri(n - 1)[i] + tri(n - 2)[i]\
    \ + tri(n - 3)[i] for i in 3:n]\n    end\nend", "    if n == 0\n        return\
    \ [1]\n    elseif n == 1\n        return [1, 3]\n    elseif n == 2\n        return\
    \ [1, 3, 2]\n    else\n        tri_seq = [1, 3, 2]\n        for i in 3:n\n   \
    \         if i % 2 == 0\n                push!(tri_seq, 1 + i / 2)\n         \
    \   else\n                push!(tri_seq, tri_seq[i - 1] + tri_seq[i - 2] + tri_seq[i\
    \ + 1])\n            end\n        end\n        return tri_seq\n    end\nend",
  "    if n == 0\n        return [1]\n    elseif n == 1\n        return [1, 3]\n \
    \   elseif n == 2\n        return [1, 3, 2]\n    else\n        seq = [1, 3, 2]\n\
    \        for i in 3:n\n            if i % 2 == 0\n                push!(seq, 1\
    \ + i / 2)\n            else\n                push!(seq, seq[i - 1] + seq[i -\
    \ 2] + seq[i + 1])\n            end\n        end\n        return seq\n    end\n\
    end", "    if n == 0\n        return [1]\n    elseif n == 1\n        return [1,\
    \ 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n        a = [1, 3,\
    \ 2]\n        for i in 3:n\n            if i % 2 == 0\n                push!(a,\
    \ 1 + i / 2)\n            else\n                push!(a, a[i - 1] + a[i - 2] +\
    \ a[i + 1])\n            end\n        end\n        return a\n    end\nend", " \
    \   if n == 0\n        return [1]\n    elseif n == 1\n        return [1, 3]\n\
    \    elseif n == 2\n        return [1, 3, 2]\n    else\n        v = [1, 3, 2]\n\
    \        for i in 3:n\n            if i % 2 == 0\n                push!(v, 1 +\
    \ i / 2)\n            else\n                push!(v, v[i - 1] + v[i - 2] + v[i\
    \ + 1])\n            end\n        end\n        return v\n    end\nend", "    if\
    \ n == 0\n        return [1]\n    elseif n == 1\n        return [1, 3]\n    elseif\
    \ n == 2\n        return [1, 3, 2]\n    else\n        a = [1, 3, 2]\n        for\
    \ i in 3:n\n            if i % 2 == 0\n                push!(a, 1 + i / 2)\n \
    \           else\n                push!(a, a[i - 1] + a[i - 2] + a[i + 1])\n \
    \           end\n        end\n        return a\n    end\nend", "    if n == 0\n\
    \        return [1]\n    elseif n == 1\n        return [1, 3]\n    elseif n ==\
    \ 2\n        return [1, 3, 2]\n    else\n        x = [1, 3, 2]\n        for i\
    \ in 3:n\n            if i % 2 == 0\n                push!(x, 1 + i / 2)\n   \
    \         else\n                push!(x, x[i - 1] + x[i - 2] + x[i + 1])\n   \
    \         end\n        end\n        return x\n    end\nend", "    if n == 0\n\
    \        return [1]\n    elseif n == 1\n        return [1, 3]\n    elseif n ==\
    \ 2\n        return [1, 3, 2]\n    else\n        v = [1, 3, 2]\n        for i\
    \ in 3:n\n            if i % 2 == 0\n                push!(v, 1 + i / 2)\n   \
    \         else\n                push!(v, v[i] + v[i - 1] + v[i + 1])\n       \
    \     end\n        end\n        return v\n    end\nend", "    if n == 0\n    \
    \    return [1]\n    elseif n == 1\n        return [1, 3]\n    elseif n == 2\n\
    \        return [1, 3, 2]\n    else\n        v = [1, 3, 2]\n        for i in 3:n\n\
    \            if i % 2 == 0\n                push!(v, 1 + i / 2)\n            else\n\
    \                push!(v, v[i - 1] + v[i - 2] + v[i + 1])\n            end\n \
    \       end\n        return v\n    end\nend", "    if n == 0\n        return [1]\n\
    \    elseif n == 1\n        return [1, 3]\n    elseif n == 2\n        return [1,\
    \ 3, 2]\n    else\n        v = [1, 3, 2]\n        for i = 3:n\n            if\
    \ i % 2 == 0\n                push!(v, 1 + i / 2)\n            else\n        \
    \        push!(v, v[i - 1] + v[i - 2] + v[i + 1])\n            end\n        end\n\
    \        return v\n    end\nend", "    if n == 0\n        return [1]\n    elseif\
    \ n == 1\n        return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n\
    \    else\n        x = [1, 3, 2]\n        for i in 3:n\n            if i % 2 ==\
    \ 0\n                push!(x, 1 + i / 2)\n            else\n                push!(x,\
    \ x[i] + x[i - 1] + x[i + 1])\n            end\n        end\n        return x\n\
    \    end\nend", "    if n == 0\n        return [1]\n    elseif n == 1\n      \
    \  return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n    \
    \    return [1, 3, 2]\n    end\nend", "    if n == 0\n        return [1]\n   \
    \ elseif n == 1\n        return [1, 3]\n    elseif n == 2\n        return [1,\
    \ 3, 2]\n    else\n        tri_seq = [1, 3, 2]\n        for i in 3:n\n       \
    \     if i % 2 == 0\n                push!(tri_seq, 1 + i / 2)\n            else\n\
    \                push!(tri_seq, tri_seq[i] + tri_seq[i - 1] + tri_seq[i + 1])\n\
    \            end\n        end\n        return tri_seq\n    end\nend", "    if\
    \ n == 0\n        return [1]\n    elseif n == 1\n        return [1, 3]\n    elseif\
    \ n == 2\n        return [1, 3, 2]\n    else\n        v = [1, 3, 2]\n        for\
    \ i in 3:n\n            if i % 2 == 0\n                push!(v, 1 + i / 2)\n \
    \           else\n                push!(v, v[i] + v[i - 1] + v[i + 1])\n     \
    \       end\n        end\n        return v\n    end\nend", "    if n == 0\n  \
    \      return [1]\n    elseif n == 1\n        return [1, 3]\n    elseif n == 2\n\
    \        return [1, 3, 2]\n    else\n        v = [1, 3, 2]\n        for i in 3:n\n\
    \            if i % 2 == 0\n                push!(v, 1 + i / 2)\n            else\n\
    \                push!(v, v[i - 1] + v[i - 2] + v[i + 1])\n            end\n \
    \       end\n        return v\n    end\nend", "    if n == 0\n        return [1]\n\
    \    elseif n == 1\n        return [1, 3]\n    elseif n == 2\n        return [1,\
    \ 3, 2]\n    else\n        seq = [1, 3, 2]\n        for i in 3:n\n           \
    \ if i % 2 == 0\n                push!(seq, 1 + i / 2)\n            else\n   \
    \             push!(seq, seq[i - 1] + seq[i - 2] + seq[i + 1])\n            end\n\
    \        end\n        return seq\n    end\nend", "    if n == 0\n        return\
    \ [1]\n    elseif n == 1\n        return [1, 3]\n    elseif n == 2\n        return\
    \ [1, 3, 2]\n    else\n        tri_vec = [1, 3, 2]\n        for i in 3:n\n   \
    \         if i % 2 == 0\n                push!(tri_vec, 1 + i / 2)\n         \
    \   else\n                push!(tri_vec, tri_vec[i] + tri_vec[i - 1] + tri_vec[i\
    \ + 1])\n            end\n        end\n        return tri_vec\n    end\nend",
  "    if n == 0\n        return [1]\n    elseif n == 1\n        return [1, 3]\n \
    \   elseif n == 2\n        return [1, 3, 2]\n    else\n        tri_seq = [1, 3,\
    \ 2]\n        for i in 3:n\n            if i % 2 == 0\n                push!(tri_seq,\
    \ 1 + i / 2)\n            else\n                push!(tri_seq, tri_seq[i - 1]\
    \ + tri_seq[i - 2] + tri_seq[i + 1])\n            end\n        end\n        return\
    \ tri_seq\n    end\nend", "    if n == 0\n        return [1]\n    elseif n ==\
    \ 1\n        return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n\
    \        return [1, 3, 2]\n        for i in 3:n\n            if i % 2 == 0\n \
    \               push!(tri(n), 1 + i / 2)\n            else\n                push!(tri(n),\
    \ tri(i - 1) + tri(i - 2) + tri(i + 1))\n            end\n        end\n    end\n\
    end", "    if n == 0\n        return [1]\n    elseif n == 1\n        return [1,\
    \ 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n        a = [1, 3,\
    \ 2]\n        for i in 3:n\n            if i % 2 == 0\n                push!(a,\
    \ 1 + i / 2)\n            else\n                push!(a, a[i - 1] + a[i - 2] +\
    \ a[i + 1])\n            end\n        end\n        return a\n    end\nend", " \
    \   if n == 0\n        return [1]\n    elseif n == 1\n        return [1, 3]\n\
    \    elseif n == 2\n        return [1, 3, 2]\n    else\n        tri_vec = [1,\
    \ 3, 2]\n        for i in 3:n\n            if i % 2 == 0\n                push!(tri_vec,\
    \ 1 + i / 2)\n            else\n                push!(tri_vec, tri_vec[i - 1]\
    \ + tri_vec[i - 2] + tri_vec[i + 1])\n            end\n        end\n        return\
    \ tri_vec\n    end\nend", "    if n == 0\n        return [1]\n    elseif n ==\
    \ 1\n        return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n\
    \        a = [1, 3, 2]\n        for i in 3:n\n            if i % 2 == 0\n    \
    \            push!(a, 1 + i / 2)\n            else\n                push!(a, a[i]\
    \ + a[i - 1] + a[i + 1])\n            end\n        end\n        return a\n   \
    \ end\nend", "    if n == 0\n        return [1]\n    elseif n == 1\n        return\
    \ [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n        a = [1,\
    \ 3, 2]\n        for i in 3:n\n            if i % 2 == 0\n                push!(a,\
    \ 1 + i / 2)\n            else\n                push!(a, a[i] + a[i - 1] + a[i\
    \ + 1])\n            end\n        end\n        return a\n    end\nend", "    if\
    \ n == 0\n        return [1]\n    elseif n == 1\n        return [1, 3]\n    elseif\
    \ n == 2\n        return [1, 3, 2]\n    else\n        v = [1, 3, 2]\n        for\
    \ i in 3:n\n            if i % 2 == 0\n                push!(v, 1 + i / 2)\n \
    \           else\n                push!(v, v[i] + v[i - 1] + v[i + 1])\n     \
    \       end\n        end\n        return v\n    end\nend", "    tri = [1, 3, 2]\n\
    \    for i in 3:n\n        if i % 2 == 0\n            push!(tri, 1 + i / 2)\n\
    \        else\n            push!(tri, tri[i - 1] + tri[i - 2] + tri[i + 1])\n\
    \        end\n    end\n    return tri\nend", "    if n == 0\n        return [1]\n\
    \    elseif n == 1\n        return [1, 3]\n    elseif n == 2\n        return [1,\
    \ 3, 2]\n    else\n        seq = [1, 3, 2]\n        for i in 3:n\n           \
    \ if i % 2 == 0\n                push!(seq, 1 + i / 2)\n            else\n   \
    \             push!(seq, seq[i - 1] + seq[i - 2] + seq[i + 1])\n            end\n\
    \        end\n        return seq\n    end\nend", "    if n == 0\n        return\
    \ [1]\n    elseif n == 1\n        return [1, 3]\n    elseif n == 2\n        return\
    \ [1, 3, 2]\n    else\n        a = [1, 3, 2]\n        for i in 3:n\n         \
    \   if i % 2 == 0\n                push!(a, 1 + i / 2)\n            else\n   \
    \             push!(a, a[i - 1] + a[i - 2] + a[i + 1])\n            end\n    \
    \    end\n        return a\n    end\nend", "    if n == 0\n        return [1]\n\
    \    elseif n == 1\n        return [1, 3]\n    elseif n == 2\n        return [1,\
    \ 3, 2]\n    else\n        a = [1, 3, 2]\n        for i in 3:n\n            if\
    \ i % 2 == 0\n                push!(a, 1 + i / 2)\n            else\n        \
    \        push!(a, a[i - 1] + a[i - 2] + a[i + 1])\n            end\n        end\n\
    \        return a\n    end\nend", "    if n == 0\n        return [1]\n    elseif\
    \ n == 1\n        return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n\
    \    else\n        a = [1, 3, 2]\n        for i in 3:n\n            if i % 2 ==\
    \ 0\n                push!(a, 1 + i / 2)\n            else\n                push!(a,\
    \ a[i - 1] + a[i - 2] + a[i + 1])\n            end\n        end\n        return\
    \ a\n    end\nend", "    if n == 0\n        return [1]\n    elseif n == 1\n  \
    \      return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n\
    \        v = [1, 3, 2]\n        for i in 3:n\n            if i % 2 == 0\n    \
    \            push!(v, 1 + i / 2)\n            else\n                push!(v, v[i\
    \ - 1] + v[i - 2] + v[i + 1])\n            end\n        end\n        return v\n\
    \    end\nend", "    if n == 0\n        return [1]\n    elseif n == 1\n      \
    \  return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n    \
    \    return [1, 3, 2]\n    end\nend", "    if n == 0\n        return [1]\n   \
    \ elseif n == 1\n        return [1, 3]\n    elseif n == 2\n        return [1,\
    \ 3, 2]\n    else\n        v = [1, 3, 2]\n        for i in 3:n\n            if\
    \ i % 2 == 0\n                push!(v, 1 + i / 2)\n            else\n        \
    \        push!(v, v[i - 1] + v[i - 2] + v[i + 1])\n            end\n        end\n\
    \        return v\n    end\nend", "    if n == 0\n        return [1]\n    elseif\
    \ n == 1\n        return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n\
    \    else\n        v = [1, 3, 2]\n        for i in 3:n\n            if i % 2 ==\
    \ 0\n                push!(v, 1 + i / 2)\n            else\n                push!(v,\
    \ v[i - 1] + v[i - 2] + v[i + 1])\n            end\n        end\n        return\
    \ v\n    end\nend", "    if n == 0\n        return [1]\n    elseif n == 1\n  \
    \      return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n\
    \        v = [1, 3, 2]\n        for i in 3:n\n            if i % 2 == 0\n    \
    \            push!(v, 1 + i / 2)\n            else\n                push!(v, v[i\
    \ - 1] + v[i - 2] + v[i + 1])\n            end\n        end\n        return v\n\
    \    end\nend", "    tri_seq = [1, 3, 2]\n    for i in 3:n\n        if i % 2 ==\
    \ 0\n            push!(tri_seq, 1 + i / 2)\n        else\n            push!(tri_seq,\
    \ tri_seq[i - 1] + tri_seq[i - 2] + tri_seq[i + 1])\n        end\n    end\n  \
    \  return tri_seq\nend", "    if n == 0\n        return [1]\n    elseif n == 1\n\
    \        return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n\
    \        a = [1, 3, 2]\n        for i in 3:n\n            if i % 2 == 0\n    \
    \            push!(a, 1 + i / 2)\n            else\n                push!(a, a[i\
    \ - 1] + a[i - 2] + a[i + 1])\n            end\n        end\n        return a\n\
    \    end\nend", "    if n == 0\n        return [1]\n    elseif n == 1\n      \
    \  return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n    \
    \    return [1, 3, 2]\n    end\nend", "    if n == 0\n        return [1]\n   \
    \ elseif n == 1\n        return [1, 3]\n    elseif n == 2\n        return [1,\
    \ 3, 2]\n    else\n        v = [1, 3, 2]\n        for i in 3:n\n            if\
    \ i % 2 == 0\n                push!(v, 1 + i / 2)\n            else\n        \
    \        push!(v, v[i] + v[i - 1] + v[i + 1])\n            end\n        end\n\
    \        return v\n    end\nend", "    if n == 0\n        return [1]\n    elseif\
    \ n == 1\n        return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n\
    \    else\n        a = [1, 3, 2]\n        for i in 3:n\n            if i % 2 ==\
    \ 0\n                push!(a, 1 + i / 2)\n            else\n                push!(a,\
    \ a[i - 1] + a[i - 2] + a[i + 1])\n            end\n        end\n        return\
    \ a\n    end\nend", "    if n == 0\n        return [1]\n    elseif n == 1\n  \
    \      return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n\
    \        v = [1, 3, 2]\n        for i in 3:n\n            if i % 2 == 0\n    \
    \            push!(v, 1 + i / 2)\n            else\n                push!(v, v[i\
    \ - 1] + v[i - 2] + v[i + 1])\n            end\n        end\n        return v\n\
    \    end\nend", "    if n == 0\n        return [1]\n    elseif n == 1\n      \
    \  return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n    \
    \    v = [1, 3, 2]\n        for i in 3:n\n            if i % 2 == 0\n        \
    \        push!(v, 1 + i / 2)\n            else\n                push!(v, v[i]\
    \ + v[i - 1] + v[i + 1])\n            end\n        end\n        return v\n   \
    \ end\nend", "    if n == 0\n        return [1]\n    elseif n == 1\n        return\
    \ [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n        a = [1,\
    \ 3, 2]\n        for i in 3:n\n            if i % 2 == 0\n                push!(a,\
    \ 1 + i / 2)\n            else\n                push!(a, a[i] + a[i - 1] + a[i\
    \ + 1])\n            end\n        end\n        return a\n    end\nend", "    if\
    \ n == 0\n        return [1]\n    elseif n == 1\n        return [1, 3]\n    elseif\
    \ n == 2\n        return [1, 3, 2]\n    else\n        return [1, 3, 2]\n    end\n\
    end", "    if n == 0\n        return [1]\n    elseif n == 1\n        return [1,\
    \ 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n        v = [1, 3,\
    \ 2]\n        for i in 3:n\n            if i % 2 == 0\n                push!(v,\
    \ 1 + i / 2)\n            else\n                push!(v, v[i - 1] + v[i - 2] +\
    \ v[i + 1])\n            end\n        end\n        return v\n    end\nend", " \
    \   if n == 0\n        return [1]\n    elseif n == 1\n        return [1, 3]\n\
    \    elseif n == 2\n        return [1, 3, 2]\n    else\n        return [1, 3,\
    \ 2]\n    end\nend", "    if n == 0\n        return [1]\n    elseif n == 1\n \
    \       return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n\
    \        v = [1, 3, 2]\n        for i in 3:n\n            if i % 2 == 0\n    \
    \            push!(v, 1 + i / 2)\n            else\n                push!(v, v[i\
    \ - 1] + v[i - 2] + v[i + 1])\n            end\n        end\n        return v\n\
    \    end\nend", "    if n == 0\n        return [1]\n    elseif n == 1\n      \
    \  return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n    \
    \    v = [1, 3, 2]\n        for i in 3:n\n            if i % 2 == 0\n        \
    \        push!(v, 1 + i / 2)\n            else\n                push!(v, v[i]\
    \ + v[i - 1] + v[i + 1])\n            end\n        end\n        return v\n   \
    \ end\nend", "    if n == 0\n        return [1]\n    elseif n == 1\n        return\
    \ [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n        x = [1,\
    \ 3, 2]\n        for i in 3:n\n            if i % 2 == 0\n                push!(x,\
    \ 1 + i / 2)\n            else\n                push!(x, x[i - 1] + x[i - 2] +\
    \ x[i + 1])\n            end\n        end\n        return x\n    end\nend", " \
    \   if n == 0\n        return [1]\n    elseif n == 1\n        return [1, 3]\n\
    \    elseif n == 2\n        return [1, 3, 2]\n    else\n        seq = [1, 3, 2]\n\
    \        for i in 3:n\n            if i % 2 == 0\n                push!(seq, 1\
    \ + i / 2)\n            else\n                push!(seq, seq[i - 1] + seq[i -\
    \ 2] + seq[i + 1])\n            end\n        end\n        return seq\n    end\n\
    end", "    if n == 0\n        return [1]\n    elseif n == 1\n        return [1,\
    \ 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n        return [1,\
    \ 3, 2]\n    end\nend", "    if n == 0\n        return [1]\n    elseif n == 1\n\
    \        return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n\
    \        v = [1, 3, 2]\n        for i in 3:n\n            if i % 2 == 0\n    \
    \            push!(v, 1 + i / 2)\n            else\n                push!(v, v[i\
    \ - 1] + v[i - 2] + v[i + 1])\n            end\n        end\n        return v\n\
    \    end\nend", "    if n == 0\n        return [1]\n    elseif n == 1\n      \
    \  return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n    \
    \    return [1, 3, 2]\n    end\nend", "    if n == 0\n        return [1]\n   \
    \ elseif n == 1\n        return [1, 3]\n    elseif n == 2\n        return [1,\
    \ 3, 2]\n    else\n        a = 1\n        b = 3\n        c = 2\n        d = a\
    \ + b + c\n        v = [a, b, c, d]\n        for i in 4:n\n            a = b\n\
    \            b = c\n            c = d\n            d = a + b + c\n           \
    \ push!(v, d)\n        end\n        return v\n    end\nend", "    if n == 0\n\
    \        return [1]\n    elseif n == 1\n        return [1, 3]\n    elseif n ==\
    \ 2\n        return [1, 3, 2]\n    else\n        v = [1, 3, 2]\n        for i\
    \ in 3:n\n            if i % 2 == 0\n                push!(v, 1 + i / 2)\n   \
    \         else\n                push!(v, v[i - 1] + v[i - 2] + v[i + 1])\n   \
    \         end\n        end\n        return v\n    end\nend", "    if n == 0\n\
    \        return [1]\n    elseif n == 1\n        return [1, 3]\n    elseif n ==\
    \ 2\n        return [1, 3, 2]\n    else\n        vec = [1, 3, 2]\n        for\
    \ i in 3:n\n            if i % 2 == 0\n                push!(vec, 1 + i / 2)\n\
    \            else\n                push!(vec, vec[i - 1] + vec[i - 2] + vec[i\
    \ + 1])\n            end\n        end\n        return vec\n    end\nend", "  \
    \  if n == 0\n        return [1]\n    elseif n == 1\n        return [1, 3]\n \
    \   elseif n == 2\n        return [1, 3, 2]\n    else\n        a = [1, 3, 2]\n\
    \        for i in 3:n\n            if i % 2 == 0\n                push!(a, 1 +\
    \ i / 2)\n            else\n                push!(a, a[i - 1] + a[i - 2] + a[i\
    \ + 1])\n            end\n        end\n        return a\n    end\nend", "    if\
    \ n == 0\n        return [1]\n    elseif n == 1\n        return [1, 3]\n    elseif\
    \ n == 2\n        return [1, 3, 2]\n    else\n        a = [1, 3, 2]\n        for\
    \ i in 3:n\n            if i % 2 == 0\n                push!(a, 1 + i / 2)\n \
    \           else\n                push!(a, a[i - 1] + a[i - 2] + a[i + 1])\n \
    \           end\n        end\n        return a\n    end\nend", "    if n == 0\n\
    \        return [1]\n    elseif n == 1\n        return [1, 3]\n    elseif n ==\
    \ 2\n        return [1, 3, 2]\n    else\n        a = [1, 3, 2]\n        for i\
    \ in 3:n\n            if i % 2 == 0\n                push!(a, 1 + i / 2)\n   \
    \         else\n                push!(a, a[i - 1] + a[i - 2] + a[i + 1])\n   \
    \         end\n        end\n        return a\n    end\nend", "    if n == 0\n\
    \        return [1]\n    elseif n == 1\n        return [1, 3]\n    elseif n ==\
    \ 2\n        return [1, 3, 2]\n    else\n        x = [1, 3, 2]\n        for i\
    \ in 3:n\n            if i % 2 == 0\n                push!(x, 1 + i / 2)\n   \
    \         else\n                push!(x, x[i] + x[i - 1] + x[i + 1])\n       \
    \     end\n        end\n        return x\n    end\nend", "    if n == 0\n    \
    \    return [1]\n    elseif n == 1\n        return [1, 3]\n    elseif n == 2\n\
    \        return [1, 3, 2]\n    else\n        v = [1, 3, 2]\n        for i in 3:n\n\
    \            if i % 2 == 0\n                push!(v, 1 + i / 2)\n            else\n\
    \                push!(v, v[i - 1] + v[i - 2] + v[i + 1])\n            end\n \
    \       end\n        return v\n    end\nend", "    if n == 0\n        return [1]\n\
    \    elseif n == 1\n        return [1, 3]\n    elseif n == 2\n        return [1,\
    \ 3, 2]\n    else\n        return [1, 3, 2]\n    end\nend", "    tri = zeros(Int64,\
    \ n + 1)\n    tri[1] = 1\n    tri[2] = 3\n    tri[3] = 2\n    for i in 4:n + 1\n\
    \        if i % 2 == 0\n            tri[i] = 1 + i / 2\n        else\n       \
    \     tri[i] = tri[i - 1] + tri[i - 2] + tri[i + 1]\n        end\n    end\n  \
    \  return tri\nend", "    if n == 0\n        return [1]\n    elseif n == 1\n \
    \       return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n\
    \        seq = [1, 3, 2]\n        for i in 3:n\n            if i % 2 == 0\n  \
    \              push!(seq, 1 + i / 2)\n            else\n                push!(seq,\
    \ seq[i - 1] + seq[i - 2] + seq[i + 1])\n            end\n        end\n      \
    \  return seq\n    end\nend", "    if n == 0\n        return [1]\n    elseif n\
    \ == 1\n        return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n \
    \   else\n        v = [1, 3, 2]\n        for i in 3:n\n            if i % 2 ==\
    \ 0\n                push!(v, 1 + i / 2)\n            else\n                push!(v,\
    \ v[i - 1] + v[i - 2] + v[i + 1])\n            end\n        end\n        return\
    \ v\n    end\nend", "    if n == 0\n        return [1]\n    elseif n == 1\n  \
    \      return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n\
    \        v = [1, 3, 2]\n        for i in 3:n\n            if i % 2 == 0\n    \
    \            push!(v, 1 + i / 2)\n            else\n                push!(v, v[i\
    \ - 1] + v[i - 2] + v[i + 1])\n            end\n        end\n        return v\n\
    \    end\nend", "    if n == 0\n        return [1]\n    elseif n == 1\n      \
    \  return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n    \
    \    a = [1, 3, 2]\n        for i in 3:n\n            if i % 2 == 0\n        \
    \        push!(a, 1 + i / 2)\n            else\n                push!(a, a[i -\
    \ 1] + a[i - 2] + a[i + 1])\n            end\n        end\n        return a\n\
    \    end\nend", "    if n == 0\n        return [1]\n    elseif n == 1\n      \
    \  return [1, 3]\n    elseif n == 2\n        return [1, 3, 2]\n    else\n    \
    \    v = [1, 3, 2]\n        for i in 3:n\n            if i % 2 == 0\n        \
    \        push!(v, 1 + i / 2)\n            else\n                push!(v, v[i -\
    \ 1] + v[i - 2] + v[i + 1])\n            end\n        end\n        return v\n\
    \    end\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

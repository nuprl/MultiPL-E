language: jl
name: HumanEval_132_is_nested
results:
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    >>> is_nested(\"[[]]\")\n    true\n    >>> is_nested(\"[]]]]]]][[[[[]\"\
    )\n    false\n    >>> is_nested(\"[][]\")\n    false\n    >>> is_nested(\"[]\"\
    )\n    false\n    >>> is_nested(\"[[][]]\")\n    true\n    >>> is_nested(\"[[]][[\"\
    )\n    true\n    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack\
    \ = []\n    for c in string\n        if c == '['\n            push!(stack, c)\n\
    \        elseif c == ']'\n            if isempty(stack)\n                return\
    \ false\n            else\n                pop!(stack)\n            end\n    \
    \    end\n    end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqjvfuh6r.jl:36

    '
  stdout: "test set: Test Failed at /tmp/tmpqjvfuh6r.jl:41\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqjvfuh6r.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqjvfuh6r.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpqjvfuh6r.jl:42\n  Expression: candidate(\"[]\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqjvfuh6r.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqjvfuh6r.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpqjvfuh6r.jl:48\n  Expression: candidate(\"[[]][[\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqjvfuh6r.jl:48 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqjvfuh6r.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpqjvfuh6r.jl:50\n  Expression: candidate(\"\") == false\n \
    \  Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqjvfuh6r.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqjvfuh6r.jl:38\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   10     4     14\n"
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    >>> is_nested(\"[[]]\")\n    true\n    >>> is_nested(\"[]]]]]]][[[[[]\"\
    )\n    false\n    >>> is_nested(\"[][]\")\n    false\n    >>> is_nested(\"[]\"\
    )\n    false\n    >>> is_nested(\"[[][]]\")\n    true\n    >>> is_nested(\"[[]][[\"\
    )\n    true\n    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack\
    \ = []\n    for char in string\n        if char == '['\n            push!(stack,\
    \ char)\n        elseif char == ']'\n            if isempty(stack)\n         \
    \       return false\n            else\n                pop!(stack)\n        \
    \    end\n        end\n    end\n    return isempty(stack)\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\
    \t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") ==\
    \ false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpczktb9ze.jl:36

    '
  stdout: "test set: Test Failed at /tmp/tmpczktb9ze.jl:41\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpczktb9ze.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpczktb9ze.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpczktb9ze.jl:42\n  Expression: candidate(\"[]\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpczktb9ze.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpczktb9ze.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpczktb9ze.jl:48\n  Expression: candidate(\"[[]][[\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpczktb9ze.jl:48 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpczktb9ze.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpczktb9ze.jl:50\n  Expression: candidate(\"\") == false\n \
    \  Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpczktb9ze.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpczktb9ze.jl:38\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   10     4     14\n"
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    >>> is_nested(\"[[]]\")\n    true\n    >>> is_nested(\"[]]]]]]][[[[[]\"\
    )\n    false\n    >>> is_nested(\"[][]\")\n    false\n    >>> is_nested(\"[]\"\
    )\n    false\n    >>> is_nested(\"[[][]]\")\n    true\n    >>> is_nested(\"[[]][[\"\
    )\n    true\n    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack\
    \ = []\n    for c in string\n        if c == '['\n            push!(stack, c)\n\
    \        elseif c == ']'\n            if isempty(stack)\n                return\
    \ false\n            else\n                pop!(stack)\n            end\n    \
    \    end\n    end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqjvfuh6r.jl:36

    '
  stdout: "test set: Test Failed at /tmp/tmpqjvfuh6r.jl:41\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqjvfuh6r.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqjvfuh6r.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpqjvfuh6r.jl:42\n  Expression: candidate(\"[]\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqjvfuh6r.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqjvfuh6r.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpqjvfuh6r.jl:48\n  Expression: candidate(\"[[]][[\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqjvfuh6r.jl:48 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqjvfuh6r.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpqjvfuh6r.jl:50\n  Expression: candidate(\"\") == false\n \
    \  Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqjvfuh6r.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqjvfuh6r.jl:38\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   10     4     14\n"
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    >>> is_nested(\"[[]]\")\n    true\n    >>> is_nested(\"[]]]]]]][[[[[]\"\
    )\n    false\n    >>> is_nested(\"[][]\")\n    false\n    >>> is_nested(\"[]\"\
    )\n    false\n    >>> is_nested(\"[[][]]\")\n    true\n    >>> is_nested(\"[[]][[\"\
    )\n    true\n    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack\
    \ = []\n    for c in string\n        if c == '['\n            push!(stack, c)\n\
    \        elseif c == ']'\n            if isempty(stack)\n                return\
    \ false\n            else\n                pop!(stack)\n            end\n    \
    \    end\n    end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqjvfuh6r.jl:36

    '
  stdout: "test set: Test Failed at /tmp/tmpqjvfuh6r.jl:41\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqjvfuh6r.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqjvfuh6r.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpqjvfuh6r.jl:42\n  Expression: candidate(\"[]\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqjvfuh6r.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqjvfuh6r.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpqjvfuh6r.jl:48\n  Expression: candidate(\"[[]][[\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqjvfuh6r.jl:48 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqjvfuh6r.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpqjvfuh6r.jl:50\n  Expression: candidate(\"\") == false\n \
    \  Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqjvfuh6r.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqjvfuh6r.jl:38\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   10     4     14\n"
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    >>> is_nested(\"[[]]\")\n    true\n    >>> is_nested(\"[]]]]]]][[[[[]\"\
    )\n    false\n    >>> is_nested(\"[][]\")\n    false\n    >>> is_nested(\"[]\"\
    )\n    false\n    >>> is_nested(\"[[][]]\")\n    true\n    >>> is_nested(\"[[]][[\"\
    )\n    true\n    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack\
    \ = []\n    for c in string\n        if c == '['\n            push!(stack, c)\n\
    \        elseif c == ']'\n            if isempty(stack)\n                return\
    \ false\n            else\n                pop!(stack)\n            end\n    \
    \    end\n    end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqjvfuh6r.jl:36

    '
  stdout: "test set: Test Failed at /tmp/tmpqjvfuh6r.jl:41\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqjvfuh6r.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqjvfuh6r.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpqjvfuh6r.jl:42\n  Expression: candidate(\"[]\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqjvfuh6r.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqjvfuh6r.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpqjvfuh6r.jl:48\n  Expression: candidate(\"[[]][[\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqjvfuh6r.jl:48 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqjvfuh6r.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpqjvfuh6r.jl:50\n  Expression: candidate(\"\") == false\n \
    \  Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqjvfuh6r.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqjvfuh6r.jl:38\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   10     4     14\n"
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    >>> is_nested(\"[[]]\")\n    true\n    >>> is_nested(\"[]]]]]]][[[[[]\"\
    )\n    false\n    >>> is_nested(\"[][]\")\n    false\n    >>> is_nested(\"[]\"\
    )\n    false\n    >>> is_nested(\"[[][]]\")\n    true\n    >>> is_nested(\"[[]][[\"\
    )\n    true\n    \"\"\"\nfunction is_nested(string::String)::Bool \n    # Create\
    \ a stack to hold the brackets\n    stack = []\n    # Iterate through the string\n\
    \    for bracket in string\n        # If the bracket is an opening bracket, push\
    \ it to the stack\n        if bracket == \"[\"\n            push!(stack, bracket)\n\
    \        # If the bracket is a closing bracket, pop the stack\n        elseif\
    \ bracket == \"]\"\n            pop!(stack)\n        end\n    end\n    # If the\
    \ stack is empty, return true\n    if isempty(stack)\n        return true\n  \
    \  # If the stack is not empty, return false\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"\
    [[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 9 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprgp4lq9c.jl:42

    '
  stdout: "test set: Test Failed at /tmp/tmprgp4lq9c.jl:46\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprgp4lq9c.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprgp4lq9c.jl:44\ntest set: Test\
    \ Failed at /tmp/tmprgp4lq9c.jl:47\n  Expression: candidate(\"[][]\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprgp4lq9c.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprgp4lq9c.jl:44\ntest set: Test\
    \ Failed at /tmp/tmprgp4lq9c.jl:48\n  Expression: candidate(\"[]\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprgp4lq9c.jl:48 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprgp4lq9c.jl:44\ntest set: Test\
    \ Failed at /tmp/tmprgp4lq9c.jl:50\n  Expression: candidate(\"[]]]]]]]]]]\") ==\
    \ false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmprgp4lq9c.jl:50 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprgp4lq9c.jl:44\ntest set: Test\
    \ Failed at /tmp/tmprgp4lq9c.jl:52\n  Expression: candidate(\"[[]\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Tes"
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    >>> is_nested(\"[[]]\")\n    true\n    >>> is_nested(\"[]]]]]]][[[[[]\"\
    )\n    false\n    >>> is_nested(\"[][]\")\n    false\n    >>> is_nested(\"[]\"\
    )\n    false\n    >>> is_nested(\"[[][]]\")\n    true\n    >>> is_nested(\"[[]][[\"\
    )\n    true\n    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack\
    \ = []\n    for i in string\n        if i == '['\n            push!(stack, i)\n\
    \        elseif i == ']'\n            if isempty(stack)\n                return\
    \ false\n            else\n                pop!(stack)\n            end\n    \
    \    end\n    end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpx_wlhk_k.jl:36

    '
  stdout: "test set: Test Failed at /tmp/tmpx_wlhk_k.jl:41\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx_wlhk_k.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx_wlhk_k.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpx_wlhk_k.jl:42\n  Expression: candidate(\"[]\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx_wlhk_k.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx_wlhk_k.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpx_wlhk_k.jl:48\n  Expression: candidate(\"[[]][[\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx_wlhk_k.jl:48 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx_wlhk_k.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpx_wlhk_k.jl:50\n  Expression: candidate(\"\") == false\n \
    \  Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx_wlhk_k.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx_wlhk_k.jl:38\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   10     4     14\n"
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    >>> is_nested(\"[[]]\")\n    true\n    >>> is_nested(\"[]]]]]]][[[[[]\"\
    )\n    false\n    >>> is_nested(\"[][]\")\n    false\n    >>> is_nested(\"[]\"\
    )\n    false\n    >>> is_nested(\"[[][]]\")\n    true\n    >>> is_nested(\"[[]][[\"\
    )\n    true\n    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets\
    \ = 0\n    for char in string\n        if char == '['\n            open_brackets\
    \ += 1\n        elseif char == ']'\n            if open_brackets == 0\n      \
    \          return false\n            else\n                open_brackets -= 1\n\
    \            end\n        end\n    end\n    return open_brackets > 0\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpty3eaqi7.jl:36

    '
  stdout: "test set: Test Failed at /tmp/tmpty3eaqi7.jl:39\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpty3eaqi7.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpty3eaqi7.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpty3eaqi7.jl:43\n  Expression: candidate(\"[[[[]]]]\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpty3eaqi7.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpty3eaqi7.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpty3eaqi7.jl:45\n  Expression: candidate(\"[][][[]]\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpty3eaqi7.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpty3eaqi7.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpty3eaqi7.jl:46\n  Expression: candidate(\"[[]\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpty3eaqi7.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpty3eaqi7.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpty3eaqi7.jl:49\n  Expression: candidate(\"[[][]]\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Tes"
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    >>> is_nested(\"[[]]\")\n    true\n    >>> is_nested(\"[]]]]]]][[[[[]\"\
    )\n    false\n    >>> is_nested(\"[][]\")\n    false\n    >>> is_nested(\"[]\"\
    )\n    false\n    >>> is_nested(\"[[][]]\")\n    true\n    >>> is_nested(\"[[]][[\"\
    )\n    true\n    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack\
    \ = []\n    for c in string\n        if c == '['\n            push!(stack, c)\n\
    \        elseif c == ']'\n            if isempty(stack)\n                return\
    \ false\n            else\n                pop!(stack)\n            end\n    \
    \    end\n    end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqjvfuh6r.jl:36

    '
  stdout: "test set: Test Failed at /tmp/tmpqjvfuh6r.jl:41\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqjvfuh6r.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqjvfuh6r.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpqjvfuh6r.jl:42\n  Expression: candidate(\"[]\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqjvfuh6r.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqjvfuh6r.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpqjvfuh6r.jl:48\n  Expression: candidate(\"[[]][[\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqjvfuh6r.jl:48 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqjvfuh6r.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpqjvfuh6r.jl:50\n  Expression: candidate(\"\") == false\n \
    \  Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqjvfuh6r.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqjvfuh6r.jl:38\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   10     4     14\n"
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    >>> is_nested(\"[[]]\")\n    true\n    >>> is_nested(\"[]]]]]]][[[[[]\"\
    )\n    false\n    >>> is_nested(\"[][]\")\n    false\n    >>> is_nested(\"[]\"\
    )\n    false\n    >>> is_nested(\"[[][]]\")\n    true\n    >>> is_nested(\"[[]][[\"\
    )\n    true\n    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack\
    \ = []\n    for i in string\n        if i == '['\n            push!(stack, i)\n\
    \        elseif i == ']'\n            if isempty(stack)\n                return\
    \ false\n            else\n                pop!(stack)\n            end\n    \
    \    end\n    end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpx_wlhk_k.jl:36

    '
  stdout: "test set: Test Failed at /tmp/tmpx_wlhk_k.jl:41\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx_wlhk_k.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx_wlhk_k.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpx_wlhk_k.jl:42\n  Expression: candidate(\"[]\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx_wlhk_k.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx_wlhk_k.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpx_wlhk_k.jl:48\n  Expression: candidate(\"[[]][[\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx_wlhk_k.jl:48 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx_wlhk_k.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpx_wlhk_k.jl:50\n  Expression: candidate(\"\") == false\n \
    \  Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx_wlhk_k.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx_wlhk_k.jl:38\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   10     4     14\n"
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    >>> is_nested(\"[[]]\")\n    true\n    >>> is_nested(\"[]]]]]]][[[[[]\"\
    )\n    false\n    >>> is_nested(\"[][]\")\n    false\n    >>> is_nested(\"[]\"\
    )\n    false\n    >>> is_nested(\"[[][]]\")\n    true\n    >>> is_nested(\"[[]][[\"\
    )\n    true\n    \"\"\"\nfunction is_nested(string::String)::Bool \n    # create\
    \ a stack\n    stack = []\n    # iterate over the string\n    for char in string\n\
    \        # if char is \"[\"\n        if char == \"[\"\n            # push it to\
    \ the stack\n            push!(stack, char)\n        else\n            # if char\
    \ is \"]\"\n            if char == \"]\"\n                # if stack is empty\n\
    \                if isempty(stack)\n                    # return false\n     \
    \               return false\n                else\n                    # pop\
    \ the stack\n                    pop!(stack)\n                end\n          \
    \  end\n        end\n    end\n    # if stack is empty\n    if isempty(stack)\n\
    \        # return true\n        return true\n    else\n        # return false\n\
    \        return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\"\
    ) == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"[]\")\
    \ == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"[]]]]]]]]]]\"\
    ) == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"[[]\"\
    ) == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 9 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprbt8fzkr.jl:53

    '
  stdout: "test set: Test Failed at /tmp/tmprbt8fzkr.jl:57\n  Expression: candidate(\"\
    []]]]]]][[[[[]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprbt8fzkr.jl:57 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprbt8fzkr.jl:55\ntest set: Test\
    \ Failed at /tmp/tmprbt8fzkr.jl:58\n  Expression: candidate(\"[][]\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprbt8fzkr.jl:58 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprbt8fzkr.jl:55\ntest set: Test\
    \ Failed at /tmp/tmprbt8fzkr.jl:59\n  Expression: candidate(\"[]\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprbt8fzkr.jl:59 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprbt8fzkr.jl:55\ntest set: Test\
    \ Failed at /tmp/tmprbt8fzkr.jl:61\n  Expression: candidate(\"[]]]]]]]]]]\") ==\
    \ false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmprbt8fzkr.jl:61 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprbt8fzkr.jl:55\ntest set: Test\
    \ Failed at /tmp/tmprbt8fzkr.jl:63\n  Expression: candidate(\"[[]\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Tes"
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    >>> is_nested(\"[[]]\")\n    true\n    >>> is_nested(\"[]]]]]]][[[[[]\"\
    )\n    false\n    >>> is_nested(\"[][]\")\n    false\n    >>> is_nested(\"[]\"\
    )\n    false\n    >>> is_nested(\"[[][]]\")\n    true\n    >>> is_nested(\"[[]][[\"\
    )\n    true\n    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack\
    \ = []\n    for c in string\n        if c == '['\n            push!(stack, c)\n\
    \        elseif c == ']'\n            if isempty(stack)\n                return\
    \ false\n            else\n                pop!(stack)\n            end\n    \
    \    end\n    end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqjvfuh6r.jl:36

    '
  stdout: "test set: Test Failed at /tmp/tmpqjvfuh6r.jl:41\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqjvfuh6r.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqjvfuh6r.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpqjvfuh6r.jl:42\n  Expression: candidate(\"[]\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqjvfuh6r.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqjvfuh6r.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpqjvfuh6r.jl:48\n  Expression: candidate(\"[[]][[\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqjvfuh6r.jl:48 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqjvfuh6r.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpqjvfuh6r.jl:50\n  Expression: candidate(\"\") == false\n \
    \  Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqjvfuh6r.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqjvfuh6r.jl:38\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   10     4     14\n"
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    >>> is_nested(\"[[]]\")\n    true\n    >>> is_nested(\"[]]]]]]][[[[[]\"\
    )\n    false\n    >>> is_nested(\"[][]\")\n    false\n    >>> is_nested(\"[]\"\
    )\n    false\n    >>> is_nested(\"[[][]]\")\n    true\n    >>> is_nested(\"[[]][[\"\
    )\n    true\n    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack\
    \ = []\n    for c in string\n        if c == '['\n            push!(stack, c)\n\
    \        elseif c == ']'\n            if isempty(stack)\n                return\
    \ false\n            else\n                pop!(stack)\n            end\n    \
    \    end\n    end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqjvfuh6r.jl:36

    '
  stdout: "test set: Test Failed at /tmp/tmpqjvfuh6r.jl:41\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqjvfuh6r.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqjvfuh6r.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpqjvfuh6r.jl:42\n  Expression: candidate(\"[]\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqjvfuh6r.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqjvfuh6r.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpqjvfuh6r.jl:48\n  Expression: candidate(\"[[]][[\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqjvfuh6r.jl:48 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqjvfuh6r.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpqjvfuh6r.jl:50\n  Expression: candidate(\"\") == false\n \
    \  Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqjvfuh6r.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqjvfuh6r.jl:38\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   10     4     14\n"
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    >>> is_nested(\"[[]]\")\n    true\n    >>> is_nested(\"[]]]]]]][[[[[]\"\
    )\n    false\n    >>> is_nested(\"[][]\")\n    false\n    >>> is_nested(\"[]\"\
    )\n    false\n    >>> is_nested(\"[[][]]\")\n    true\n    >>> is_nested(\"[[]][[\"\
    )\n    true\n    \"\"\"\nfunction is_nested(string::String)::Bool \n    # check\
    \ if string is empty\n    if string == \"\"\n        return false\n    end\n \
    \   # check if string is of length 1\n    if length(string) == 1\n        return\
    \ false\n    end\n    # check if string is of length 2\n    if length(string)\
    \ == 2\n        if string == \"[]\"\n            return false\n        else\n\
    \            return true\n        end\n    end\n    # check if string is of length\
    \ 3\n    if length(string) == 3\n        if string == \"[[]]\"\n            return\
    \ true\n        else\n            return false\n        end\n    end\n    # check\
    \ if string is of length 4\n    if length(string) == 4\n        if string == \"\
    [][]\"\n            return false\n        else\n            return true\n    \
    \    end\n    end\n    # check if string is of length 5\n    if length(string)\
    \ == 5\n        if string == \"[[][]]\"\n            return true\n        else\n\
    \            return false\n        end\n    end\n    # check if string is of length\
    \ 6\n    if length(string) == 6\n        if string == \"[[]][[]]\"\n         \
    \   return true\n        else\n            return false\n        end\n    end\n\
    \    # check if string is of length 7\n    if length(string) == 7\n        if\
    \ string == \"[][][]\"\n            return false\n        else\n            return\
    \ true\n        end\n    end\n    # check if string is of length 8\n    if length(string)\
    \ == 8\n        if string == \"[[][][]]\"\n            return true\n        else\n\
    \            return false\n        end\n    end\n    # check if string is of length\
    \ 9\n    if length(string) == 9\n        if string == \"[[][][][]]\"\n       \
    \     return true\n        else\n            return false\n        end\n    end\n\
    \    # check if string is of length 10\n    if length(string) == 10\n        if\
    \ string == \"[[][][][][]]\"\n            return true\n        else\n        \
    \    return false\n        end\n    end\n    # check if string is of length 11\n\
    \    if length(string) == 11\n        if string == \"[[][][][][][]]\"\n      \
    \      return true\n        else\n            return false\n        end\n    end\n\
    \nusing Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"\
    [[]]\") == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmphzc4579i.jl:19\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmphzc4579i.jl:1\n\
    in expression starting at /tmp/tmphzc4579i.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    >>> is_nested(\"[[]]\")\n    true\n    >>> is_nested(\"[]]]]]]][[[[[]\"\
    )\n    false\n    >>> is_nested(\"[][]\")\n    false\n    >>> is_nested(\"[]\"\
    )\n    false\n    >>> is_nested(\"[[][]]\")\n    true\n    >>> is_nested(\"[[]][[\"\
    )\n    true\n    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets\
    \ = 0\n    for bracket in string\n        if bracket == '['\n            open_brackets\
    \ += 1\n        elseif bracket == ']'\n            if open_brackets == 0\n   \
    \             return false\n            else\n                open_brackets -=\
    \ 1\n            end\n        end\n    end\n    return open_brackets > 0\nend\n\
    using Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp68vji7wr.jl:36

    '
  stdout: "test set: Test Failed at /tmp/tmp68vji7wr.jl:39\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp68vji7wr.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp68vji7wr.jl:38\ntest set: Test\
    \ Failed at /tmp/tmp68vji7wr.jl:43\n  Expression: candidate(\"[[[[]]]]\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp68vji7wr.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp68vji7wr.jl:38\ntest set: Test\
    \ Failed at /tmp/tmp68vji7wr.jl:45\n  Expression: candidate(\"[][][[]]\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp68vji7wr.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp68vji7wr.jl:38\ntest set: Test\
    \ Failed at /tmp/tmp68vji7wr.jl:46\n  Expression: candidate(\"[[]\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp68vji7wr.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp68vji7wr.jl:38\ntest set: Test\
    \ Failed at /tmp/tmp68vji7wr.jl:49\n  Expression: candidate(\"[[][]]\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Tes"
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    >>> is_nested(\"[[]]\")\n    true\n    >>> is_nested(\"[]]]]]]][[[[[]\"\
    )\n    false\n    >>> is_nested(\"[][]\")\n    false\n    >>> is_nested(\"[]\"\
    )\n    false\n    >>> is_nested(\"[[][]]\")\n    true\n    >>> is_nested(\"[[]][[\"\
    )\n    true\n    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack\
    \ = []\n    for i = 1:length(string)\n        if string[i] == '['\n          \
    \  push!(stack, string[i])\n        elseif string[i] == ']'\n            if isempty(stack)\n\
    \                return false\n            else\n                pop!(stack)\n\
    \            end\n        end\n    end\n    return !isempty(stack)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpyxesyjd6.jl:36

    '
  stdout: "test set: Test Failed at /tmp/tmpyxesyjd6.jl:39\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyxesyjd6.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyxesyjd6.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpyxesyjd6.jl:43\n  Expression: candidate(\"[[[[]]]]\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyxesyjd6.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyxesyjd6.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpyxesyjd6.jl:45\n  Expression: candidate(\"[][][[]]\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyxesyjd6.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyxesyjd6.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpyxesyjd6.jl:46\n  Expression: candidate(\"[[]\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyxesyjd6.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyxesyjd6.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpyxesyjd6.jl:49\n  Expression: candidate(\"[[][]]\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Tes"
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    >>> is_nested(\"[[]]\")\n    true\n    >>> is_nested(\"[]]]]]]][[[[[]\"\
    )\n    false\n    >>> is_nested(\"[][]\")\n    false\n    >>> is_nested(\"[]\"\
    )\n    false\n    >>> is_nested(\"[[][]]\")\n    true\n    >>> is_nested(\"[[]][[\"\
    )\n    true\n    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack\
    \ = []\n    for i in string\n        if i == '['\n            push!(stack, i)\n\
    \        elseif i == ']'\n            if isempty(stack)\n                return\
    \ false\n            else\n                pop!(stack)\n            end\n    \
    \    end\n    end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpx_wlhk_k.jl:36

    '
  stdout: "test set: Test Failed at /tmp/tmpx_wlhk_k.jl:41\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx_wlhk_k.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx_wlhk_k.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpx_wlhk_k.jl:42\n  Expression: candidate(\"[]\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx_wlhk_k.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx_wlhk_k.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpx_wlhk_k.jl:48\n  Expression: candidate(\"[[]][[\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx_wlhk_k.jl:48 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx_wlhk_k.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpx_wlhk_k.jl:50\n  Expression: candidate(\"\") == false\n \
    \  Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx_wlhk_k.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx_wlhk_k.jl:38\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   10     4     14\n"
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    >>> is_nested(\"[[]]\")\n    true\n    >>> is_nested(\"[]]]]]]][[[[[]\"\
    )\n    false\n    >>> is_nested(\"[][]\")\n    false\n    >>> is_nested(\"[]\"\
    )\n    false\n    >>> is_nested(\"[[][]]\")\n    true\n    >>> is_nested(\"[[]][[\"\
    )\n    true\n    \"\"\"\nfunction is_nested(string::String)::Bool \n    open_brackets\
    \ = 0\n    for char in string\n        if char == '['\n            open_brackets\
    \ += 1\n        elseif char == ']'\n            if open_brackets == 0\n      \
    \          return false\n            else\n                open_brackets -= 1\n\
    \            end\n        end\n    end\n    return open_brackets > 0\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_nested;\n\t@test(candidate(\"[[]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]][[[[[]\") == false)\n\t@test(candidate(\"\
    [][]\") == false)\n\t@test(candidate(\"[]\") == false)\n\t@test(candidate(\"[[[[]]]]\"\
    ) == true)\n\t@test(candidate(\"[]]]]]]]]]]\") == false)\n\t@test(candidate(\"\
    [][][[]]\") == true)\n\t@test(candidate(\"[[]\") == false)\n\t@test(candidate(\"\
    []]\") == false)\n\t@test(candidate(\"[[]][[\") == true)\n\t@test(candidate(\"\
    [[][]]\") == true)\n\t@test(candidate(\"\") == false)\n\t@test(candidate(\"[[[[[[[[\"\
    ) == false)\n\t@test(candidate(\"]]]]]]]]\") == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpty3eaqi7.jl:36

    '
  stdout: "test set: Test Failed at /tmp/tmpty3eaqi7.jl:39\n  Expression: candidate(\"\
    [[]]\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpty3eaqi7.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpty3eaqi7.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpty3eaqi7.jl:43\n  Expression: candidate(\"[[[[]]]]\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpty3eaqi7.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpty3eaqi7.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpty3eaqi7.jl:45\n  Expression: candidate(\"[][][[]]\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpty3eaqi7.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpty3eaqi7.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpty3eaqi7.jl:46\n  Expression: candidate(\"[[]\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpty3eaqi7.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpty3eaqi7.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpty3eaqi7.jl:49\n  Expression: candidate(\"[[][]]\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Tes"
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    >>> is_nested(\"[[]]\")\n    true\n    >>> is_nested(\"[]]]]]]][[[[[]\"\
    )\n    false\n    >>> is_nested(\"[][]\")\n    false\n    >>> is_nested(\"[]\"\
    )\n    false\n    >>> is_nested(\"[[][]]\")\n    true\n    >>> is_nested(\"[[]][[\"\
    )\n    true\n    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack\
    \ = []\n    for c in string\n        if c == '['\n            push!(stack, c)\n\
    \        elseif c == ']'\n            if isempty(stack)\n                return\
    \ false\n            else\n                pop!(stack)\n            end\n    \
    \    end\n    end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqjvfuh6r.jl:36

    '
  stdout: "test set: Test Failed at /tmp/tmpqjvfuh6r.jl:41\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqjvfuh6r.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqjvfuh6r.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpqjvfuh6r.jl:42\n  Expression: candidate(\"[]\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqjvfuh6r.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqjvfuh6r.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpqjvfuh6r.jl:48\n  Expression: candidate(\"[[]][[\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqjvfuh6r.jl:48 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqjvfuh6r.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpqjvfuh6r.jl:50\n  Expression: candidate(\"\") == false\n \
    \  Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqjvfuh6r.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqjvfuh6r.jl:38\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   10     4     14\n"
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes a string as input which contains\
    \ only square brackets.\n    The function should return True if and only if there\
    \ is a valid subsequence of brackets \n    where at least one bracket in the subsequence\
    \ is nested.\n\n    >>> is_nested(\"[[]]\")\n    true\n    >>> is_nested(\"[]]]]]]][[[[[]\"\
    )\n    false\n    >>> is_nested(\"[][]\")\n    false\n    >>> is_nested(\"[]\"\
    )\n    false\n    >>> is_nested(\"[[][]]\")\n    true\n    >>> is_nested(\"[[]][[\"\
    )\n    true\n    \"\"\"\nfunction is_nested(string::String)::Bool \n    stack\
    \ = []\n    for c in string\n        if c == '['\n            push!(stack, c)\n\
    \        elseif c == ']'\n            if isempty(stack)\n                return\
    \ false\n            else\n                pop!(stack)\n            end\n    \
    \    end\n    end\n    return isempty(stack)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_nested;\n\t@test(candidate(\"[[]]\") == true)\n\t@test(candidate(\"\
    []]]]]]][[[[[]\") == false)\n\t@test(candidate(\"[][]\") == false)\n\t@test(candidate(\"\
    []\") == false)\n\t@test(candidate(\"[[[[]]]]\") == true)\n\t@test(candidate(\"\
    []]]]]]]]]]\") == false)\n\t@test(candidate(\"[][][[]]\") == true)\n\t@test(candidate(\"\
    [[]\") == false)\n\t@test(candidate(\"[]]\") == false)\n\t@test(candidate(\"[[]][[\"\
    ) == true)\n\t@test(candidate(\"[[][]]\") == true)\n\t@test(candidate(\"\") ==\
    \ false)\n\t@test(candidate(\"[[[[[[[[\") == false)\n\t@test(candidate(\"]]]]]]]]\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 10 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqjvfuh6r.jl:36

    '
  stdout: "test set: Test Failed at /tmp/tmpqjvfuh6r.jl:41\n  Expression: candidate(\"\
    [][]\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqjvfuh6r.jl:41 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqjvfuh6r.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpqjvfuh6r.jl:42\n  Expression: candidate(\"[]\") == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqjvfuh6r.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqjvfuh6r.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpqjvfuh6r.jl:48\n  Expression: candidate(\"[[]][[\") == true\n\
    \   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqjvfuh6r.jl:48 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqjvfuh6r.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpqjvfuh6r.jl:50\n  Expression: candidate(\"\") == false\n \
    \  Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqjvfuh6r.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqjvfuh6r.jl:38\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   10     4     14\n"

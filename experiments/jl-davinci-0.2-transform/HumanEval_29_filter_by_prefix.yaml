name: HumanEval_29_filter_by_prefix
language: jl
prompt: "\"\"\" Filter an input list of strings only for ones that start with a given\
  \ prefix.\n    >>> filter_by_prefix([], \"a\")\n    []\n    >>> filter_by_prefix([\"\
  abc\", \"bcd\", \"cde\", \"array\"], \"a\")\n    [\"abc\", \"array\"]\n    \"\"\"\
  \nfunction filter_by_prefix(strings::Vector{String}, prefix::String)::Vector{String}\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = filter_by_prefix;\n\t@test(candidate(Vector{String}([]),\
  \ \"john\") == Vector{String}([]))\n\t@test(candidate([\"xxx\", \"asd\", \"xxy\"\
  , \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"\
  ])\nend\n"
completions: ["    return [s for s in strings if startswith(s, prefix)]\nend", " \
    \   return [s for s in strings if startswith(s, prefix)]\nend", "    return filter(x\
    \ -> startswith(x, prefix), strings)\nend", "    return [s for s in strings if\
    \ startswith(s, prefix)]\nend", "    return [s for s in strings if s[1] == prefix]\n\
    end", "    return filter(x -> startswith(x, prefix), strings)\nend", "    return\
    \ [s for s in strings if startswith(s, prefix)]\nend", "    return filter(x ->\
    \ startswith(x, prefix), strings)\nend", "    return [s for s in strings if startswith(s,\
    \ prefix)]\nend", "    return [s for s in strings if startswith(s, prefix)]\n\
    end", "    return filter(x -> startswith(x, prefix), strings)\nend", "    return\
    \ [string for string in strings if string[1] == prefix]\nend", "    return [s\
    \ for s in strings if startswith(s, prefix)]\nend", "    return [string for string\
    \ in strings if string[1] == prefix]\nend", "    return [s for s in strings if\
    \ startswith(s, prefix)]\nend", "    return [s for s in strings if startswith(s,\
    \ prefix)]\nend", "    return filter(x -> startswith(x, prefix), strings)\nend",
  "    return [s for s in strings if startswith(s, prefix)]\nend", "    return [s\
    \ for s in strings if startswith(s, prefix)]\nend", "    return [s for s in strings\
    \ if startswith(s, prefix)]\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"
